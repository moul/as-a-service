Makefile:PACKAGES := $(addprefix ./,$(wildcard pkg/*))
Makefile:COMMANDS := $(addprefix ./,$(wildcard cmd/*))
Makefile:all: build
Makefile:build:
Makefile:	go get ./...
Makefile:	gofmt -w $(PACKAGES) $(COMMANDS)
Makefile:	go test -i $(PACKAGES) $(COMMANDS)
Makefile:	for command in $(COMMANDS); do \
Makefile:	  go build -o `basename $$command` $$command; \
Makefile:	done
Makefile:test:
Makefile:	go get ./...
Makefile:	go test -i $(PACKAGES) $(COMMANDS)
Makefile:	go test -v $(PACKAGES) $(COMMANDS)
Makefile:install:
Makefile:	go install $(COMMANDS)
Makefile:cover:
Makefile:	find . -name profile.out -delete
Makefile:	for package in $(PACKAGES); do \
Makefile:	  rm -f $$package/profile.out; \
Makefile:	  go test -covermode=count -coverpkg=./pkg/... -coverprofile=$$package/profile.out $$package; \
Makefile:	done
Makefile:	echo "mode: count" > profile.out.tmp
Makefile:	cat `find . -name profile.out` | grep -v mode: | sort -r | awk '{if($$1 != last) {print $$0;last=$$1}}' >> profile.out.tmp
Makefile:	mv profile.out.tmp profile.out
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	go get github.com/smartystreets/goconvey
Makefile:	goconvey -cover -port=9042 -workDir="$(realpath .)/pkg" -depth=-1
Makefile:.PHONY: docker/assh
Makefile:docker/assh:
Makefile:	goxc -bc=linux,386 -d=docker -o="{{.Dest}}{{.PS}}{{.ExeName}}{{.Ext}}" -include="" compile
Makefile:.PHONY: docker
Makefile:docker: docker/assh
Makefile:	docker build -t moul/assh:latest docker
Makefile:	docker run -it --rm moul/assh --version
cmd/assh/main.go:package main
cmd/assh/main.go:import (
cmd/assh/main.go:	"os"
cmd/assh/main.go:	"path"
cmd/assh/main.go:	"github.com/moul/advanced-ssh-config/pkg/commands"
cmd/assh/main.go:	. "github.com/moul/advanced-ssh-config/pkg/logger"
cmd/assh/main.go:	"github.com/moul/advanced-ssh-config/pkg/version"
cmd/assh/main.go:)
cmd/assh/main.go:func main() {
cmd/assh/main.go:	app := cli.NewApp()
cmd/assh/main.go:	app.Name = path.Base(os.Args[0])
cmd/assh/main.go:	app.Author = "Manfred Touron"
cmd/assh/main.go:	app.Email = "https://github.com/moul/advanced-ssh-config"
cmd/assh/main.go:	app.Version = version.VERSION + " (" + version.GITCOMMIT + ")"
cmd/assh/main.go:	app.Usage = "advanced ssh config"
cmd/assh/main.go:	app.Flags = []cli.Flag{
cmd/assh/main.go:		cli.BoolFlag{
cmd/assh/main.go:			Name:   "debug, D",
cmd/assh/main.go:			EnvVar: "ASSH_DEBUG",
cmd/assh/main.go:			Usage:  "Enable debug mode",
cmd/assh/main.go:		},
cmd/assh/main.go:		cli.BoolFlag{
cmd/assh/main.go:			Name:  "verbose, V",
cmd/assh/main.go:			Usage: "Enable verbose mode",
cmd/assh/main.go:		},
cmd/assh/main.go:	}
cmd/assh/main.go:	app.Before = hookBefore
cmd/assh/main.go:	app.Commands = commands.Commands
cmd/assh/main.go:	app.Run(os.Args)
cmd/assh/main.go:}
cmd/assh/main.go:func hookBefore(c *cli.Context) error {
cmd/assh/main.go:	if c.Bool("debug") {
cmd/assh/main.go:		os.Setenv("ASSH_DEBUG", "1")
cmd/assh/main.go:	}
cmd/assh/main.go:	initLogging(c.Bool("debug"), c.Bool("verbose"))
cmd/assh/main.go:	return nil
cmd/assh/main.go:}
cmd/assh/main.go:func initLogging(debug bool, verbose bool) {
cmd/assh/main.go:	options := LoggerOptions{}
cmd/assh/main.go:	options.InspectParent = true
cmd/assh/main.go:	if debug {
cmd/assh/main.go:		options.Level = logrus.DebugLevel
cmd/assh/main.go:	} else if verbose {
cmd/assh/main.go:		options.Level = logrus.InfoLevel
cmd/assh/main.go:	} else {
cmd/assh/main.go:		options.Level = logrus.WarnLevel
cmd/assh/main.go:	}
cmd/assh/main.go:	SetupLogging(options)
cmd/assh/main.go:}
cmd/assh/main_test.go:package main
contrib/homebrew/assh.rb:require "language/go"
contrib/homebrew/assh.rb:class Assh < Formula
contrib/homebrew/assh.rb:  desc "assh: Advanced SSH config - A transparent wrapper that adds regex, aliases, gateways, includes, dynamic hostnames to SSH"
contrib/homebrew/assh.rb:  homepage "https://github.com/moul/advanced-ssh-config"
contrib/homebrew/assh.rb:  url "https://github.com/moul/advanced-ssh-config/archive/v2.1.0.tar.gz"
contrib/homebrew/assh.rb:  sha256 "c6566457f1734afe1cc83740d53705a7aa5ef7e775bc429561901b7c9d48d6e1"
contrib/homebrew/assh.rb:  head "https://github.com/moul/advanced-ssh-config.git"
contrib/homebrew/assh.rb:  depends_on "go" => :build
contrib/homebrew/assh.rb:  def install
contrib/homebrew/assh.rb:    ENV["GOPATH"] = buildpath
contrib/homebrew/assh.rb:    ENV["CGO_ENABLED"] = "0"
contrib/homebrew/assh.rb:    ENV.prepend_create_path "PATH", buildpath/"bin"
contrib/homebrew/assh.rb:    mkdir_p buildpath/"src/github.com/moul"
contrib/homebrew/assh.rb:    ln_s buildpath, buildpath/"src/github.com/moul/advanced-ssh-config"
contrib/homebrew/assh.rb:    Language::Go.stage_deps resources, buildpath/"src"
contrib/homebrew/assh.rb:    # FIXME: update version
contrib/homebrew/assh.rb:    system "go", "build", "-o", "assh", "./cmd/assh"
contrib/homebrew/assh.rb:    bin.install "assh"
contrib/homebrew/assh.rb:    # FIXME: add autocompletion
contrib/homebrew/assh.rb:  end
contrib/homebrew/assh.rb:  test do
contrib/homebrew/assh.rb:    output = shell_output(bin/"assh --version")
contrib/homebrew/assh.rb:    assert output.include? "assh version 2"
contrib/homebrew/assh.rb:  end
contrib/homebrew/assh.rb:end
docker/Dockerfile:FROM scratch
docker/Dockerfile:ADD ./assh /assh
docker/Dockerfile:ENTRYPOINT ["/assh"]
pkg/commands/build.go:package commands
pkg/commands/build.go:import (
pkg/commands/build.go:	"os"
pkg/commands/build.go:	"github.com/moul/advanced-ssh-config/pkg/config"
pkg/commands/build.go:	. "github.com/moul/advanced-ssh-config/pkg/logger"
pkg/commands/build.go:)
pkg/commands/build.go:func cmdBuild(c *cli.Context) {
pkg/commands/build.go:	conf, err := config.Open()
pkg/commands/build.go:	if err != nil {
pkg/commands/build.go:		Logger.Fatalf("Cannot open configuration file: %v", err)
pkg/commands/build.go:	}
pkg/commands/build.go:	conf.WriteSshConfigTo(os.Stdout)
pkg/commands/build.go:}
pkg/commands/commands.go:package commands
pkg/commands/commands.go:import (
pkg/commands/commands.go:	// . "github.com/moul/advanced-ssh-config/pkg/logger"
pkg/commands/commands.go:)
pkg/commands/commands.go:// Commands is the list of cli commands
pkg/commands/commands.go:var Commands = []cli.Command{
pkg/commands/commands.go:	{
pkg/commands/commands.go:		Name:        "proxy",
pkg/commands/commands.go:		Usage:       "Connect to host SSH socket, used by ProxyCommand",
pkg/commands/commands.go:		Description: "Argument is a host.",
pkg/commands/commands.go:		Action:      cmdProxy,
pkg/commands/commands.go:		Flags: []cli.Flag{
pkg/commands/commands.go:			cli.IntFlag{
pkg/commands/commands.go:				Name:  "port, p",
pkg/commands/commands.go:				Value: 0,
pkg/commands/commands.go:				Usage: "SSH destination port",
pkg/commands/commands.go:			},
pkg/commands/commands.go:		},
pkg/commands/commands.go:	},
pkg/commands/commands.go:	/*
pkg/commands/commands.go:		{
pkg/commands/commands.go:			Name:        "info",
pkg/commands/commands.go:			Usage:       "Print the connection config for host",
pkg/commands/commands.go:			Description: "Argument is a host.",
pkg/commands/commands.go:			Action:      cmdInfo,
pkg/commands/commands.go:		},
pkg/commands/commands.go:	*/
pkg/commands/commands.go:	/*
pkg/commands/commands.go:		{
pkg/commands/commands.go:			Name:        "init",
pkg/commands/commands.go:			Usage:       "Configure SSH to use assh",
pkg/commands/commands.go:			Description: "Build a .ssh/config.advanced file based on .ssh/config and update .ssh/config to use assh as ProxyCommand.",
pkg/commands/commands.go:			Action:      cmdInit,
pkg/commands/commands.go:		},
pkg/commands/commands.go:	*/
pkg/commands/commands.go:	{
pkg/commands/commands.go:		Name:   "build",
pkg/commands/commands.go:		Usage:  "Build .ssh/config",
pkg/commands/commands.go:		Action: cmdBuild,
pkg/commands/commands.go:	},
pkg/commands/commands.go:	/*
pkg/commands/commands.go:		{
pkg/commands/commands.go:			Name:        "etc-hosts",
pkg/commands/commands.go:			Usage:       "Generate a /etc/hosts file with assh hosts",
pkg/commands/commands.go:			Description: "Build a .ssh/config.advanced file based on .ssh/config and update .ssh/config to use assh as ProxyCommand.",
pkg/commands/commands.go:			Action:      cmdEtcHosts,
pkg/commands/commands.go:		},
pkg/commands/commands.go:	*/
pkg/commands/commands.go:	{
pkg/commands/commands.go:		Name:   "info",
pkg/commands/commands.go:		Usage:  "Display system-wide information",
pkg/commands/commands.go:		Action: cmdInfo,
pkg/commands/commands.go:	},
pkg/commands/commands.go:}
pkg/commands/commands_test.go:package commands
pkg/commands/info.go:package commands
pkg/commands/info.go:import (
pkg/commands/info.go:	"fmt"
pkg/commands/info.go:	"os"
pkg/commands/info.go:	"runtime"
pkg/commands/info.go:	"github.com/moul/advanced-ssh-config/pkg/config"
pkg/commands/info.go:	// . "github.com/moul/advanced-ssh-config/pkg/logger"
pkg/commands/info.go:)
pkg/commands/info.go:func cmdInfo(c *cli.Context) {
pkg/commands/info.go:	conf, err := config.Open()
pkg/commands/info.go:	if err != nil {
pkg/commands/info.go:		panic(err)
pkg/commands/info.go:	}
pkg/commands/info.go:	fmt.Printf("Debug mode (client): %v\n", os.Getenv("ASSH_DEBUG") == "1")
pkg/commands/info.go:	cliPath, _ := osext.Executable()
pkg/commands/info.go:	fmt.Printf("CLI Path: %s\n", cliPath)
pkg/commands/info.go:	fmt.Printf("Go version: %s\n", runtime.Version())
pkg/commands/info.go:	fmt.Printf("OS/Arch: %s/%s\n", runtime.GOOS, runtime.GOARCH)
pkg/commands/info.go:	fmt.Println("")
pkg/commands/info.go:	fmt.Printf("RC files:\n")
pkg/commands/info.go:	for _, filename := range conf.IncludedFiles() {
pkg/commands/info.go:		fmt.Printf("- %s\n", filename)
pkg/commands/info.go:	}
pkg/commands/info.go:	fmt.Println("")
pkg/commands/info.go:	fmt.Println("Statistics:")
pkg/commands/info.go:	fmt.Printf("- %d hosts\n", len(conf.Hosts))
pkg/commands/info.go:	fmt.Printf("- %d templates\n", len(conf.Templates))
pkg/commands/info.go:	fmt.Printf("- %d included files\n", len(conf.IncludedFiles()))
pkg/commands/info.go:	// FIXME: print info about connections/running processes
pkg/commands/info.go:	// FIXME: print info about current config file version
pkg/commands/info.go:}
pkg/commands/info_test.go:package commands
pkg/commands/proxy.go:package commands
pkg/commands/proxy.go:import (
pkg/commands/proxy.go:	"fmt"
pkg/commands/proxy.go:	"io"
pkg/commands/proxy.go:	"net"
pkg/commands/proxy.go:	"os"
pkg/commands/proxy.go:	"os/exec"
pkg/commands/proxy.go:	"path"
pkg/commands/proxy.go:	"strconv"
pkg/commands/proxy.go:	"strings"
pkg/commands/proxy.go:	"github.com/moul/advanced-ssh-config/pkg/config"
pkg/commands/proxy.go:	. "github.com/moul/advanced-ssh-config/pkg/logger"
pkg/commands/proxy.go:)
pkg/commands/proxy.go:func cmdProxy(c *cli.Context) {
pkg/commands/proxy.go:	if len(c.Args()) < 1 {
pkg/commands/proxy.go:		Logger.Fatalf("assh: \"proxy\" requires 1 argument. See 'assh proxy --help'.")
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	conf, err := config.Open()
pkg/commands/proxy.go:	if err != nil {
pkg/commands/proxy.go:		Logger.Fatalf("Cannot open configuration file: %v", err)
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	// FIXME: handle complete host with json
pkg/commands/proxy.go:	host, err := computeHost(c.Args()[0], c.Int("port"), conf)
pkg/commands/proxy.go:	if err != nil {
pkg/commands/proxy.go:		Logger.Fatalf("Cannot get host '%s': %v", c.Args()[0], err)
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	w := Logger.Writer()
pkg/commands/proxy.go:	defer w.Close()
pkg/commands/proxy.go:	host.WriteSshConfigTo(w)
pkg/commands/proxy.go:	Logger.Debugf("Saving SSH config")
pkg/commands/proxy.go:	err = conf.SaveSshConfig()
pkg/commands/proxy.go:	if err != nil {
pkg/commands/proxy.go:		Logger.Fatalf("Cannot save SSH config file: %v", err)
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	Logger.Debugf("Proxying")
pkg/commands/proxy.go:	err = proxy(host, conf)
pkg/commands/proxy.go:	if err != nil {
pkg/commands/proxy.go:		Logger.Fatalf("Proxy error: %v", err)
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:}
pkg/commands/proxy.go:func computeHost(dest string, portOverride int, conf *config.Config) (*config.Host, error) {
pkg/commands/proxy.go:	host := conf.GetHostSafe(dest)
pkg/commands/proxy.go:	if portOverride > 0 {
pkg/commands/proxy.go:		host.Port = strconv.Itoa(portOverride)
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	return host, nil
pkg/commands/proxy.go:}
pkg/commands/proxy.go:func prepareHostControlPath(host, gateway *config.Host) error {
pkg/commands/proxy.go:	controlPathDir := path.Dir(os.ExpandEnv(strings.Replace(host.ControlPath, "~", "$HOME", -1)))
pkg/commands/proxy.go:	gatewayControlPath := path.Join(controlPathDir, gateway.Name())
pkg/commands/proxy.go:	return os.MkdirAll(gatewayControlPath, 0700)
pkg/commands/proxy.go:}
pkg/commands/proxy.go:func proxy(host *config.Host, conf *config.Config) error {
pkg/commands/proxy.go:	if len(host.Gateways) > 0 {
pkg/commands/proxy.go:		Logger.Debugf("Trying gateways: %s", host.Gateways)
pkg/commands/proxy.go:		for _, gateway := range host.Gateways {
pkg/commands/proxy.go:			if gateway == "direct" {
pkg/commands/proxy.go:				err := proxyDirect(host)
pkg/commands/proxy.go:				if err != nil {
pkg/commands/proxy.go:					Logger.Errorf("Failed to use 'direct' connection")
pkg/commands/proxy.go:				}
pkg/commands/proxy.go:			} else {
pkg/commands/proxy.go:				gatewayHost := conf.GetGatewaySafe(gateway)
pkg/commands/proxy.go:				err := prepareHostControlPath(host, gatewayHost)
pkg/commands/proxy.go:				if err != nil {
pkg/commands/proxy.go:					return err
pkg/commands/proxy.go:				}
pkg/commands/proxy.go:				if host.ProxyCommand == "" {
pkg/commands/proxy.go:					host.ProxyCommand = "nc %h %p"
pkg/commands/proxy.go:				}
pkg/commands/proxy.go:				// FIXME: dynamically add "-v" flags
pkg/commands/proxy.go:				if err = hostPrepare(host); err != nil {
pkg/commands/proxy.go:					return err
pkg/commands/proxy.go:				}
pkg/commands/proxy.go:				command := "ssh %name -- " + host.ExpandString(host.ProxyCommand)
pkg/commands/proxy.go:				Logger.Debugf("Using gateway '%s': %s", gateway, command)
pkg/commands/proxy.go:				err = proxyCommand(gatewayHost, command)
pkg/commands/proxy.go:				if err == nil {
pkg/commands/proxy.go:					return nil
pkg/commands/proxy.go:				}
pkg/commands/proxy.go:				Logger.Errorf("Cannot use gateway '%s': %v", gateway, err)
pkg/commands/proxy.go:			}
pkg/commands/proxy.go:		}
pkg/commands/proxy.go:		return fmt.Errorf("No such available gateway")
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	Logger.Debugf("Connecting without gateway")
pkg/commands/proxy.go:	return proxyDirect(host)
pkg/commands/proxy.go:}
pkg/commands/proxy.go:func proxyDirect(host *config.Host) error {
pkg/commands/proxy.go:	if host.ProxyCommand != "" {
pkg/commands/proxy.go:		return proxyCommand(host, host.ProxyCommand)
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	return proxyGo(host)
pkg/commands/proxy.go:}
pkg/commands/proxy.go:func proxyCommand(host *config.Host, command string) error {
pkg/commands/proxy.go:	command = host.ExpandString(command)
pkg/commands/proxy.go:	args, err := shlex.Split(command)
pkg/commands/proxy.go:	Logger.Debugf("ProxyCommand: %s", command)
pkg/commands/proxy.go:	if err != nil {
pkg/commands/proxy.go:		return err
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	spawn := exec.Command(args[0], args[1:]...)
pkg/commands/proxy.go:	spawn.Stdout = os.Stdout
pkg/commands/proxy.go:	spawn.Stdin = os.Stdin
pkg/commands/proxy.go:	spawn.Stderr = os.Stderr
pkg/commands/proxy.go:	return spawn.Run()
pkg/commands/proxy.go:}
pkg/commands/proxy.go:func hostPrepare(host *config.Host) error {
pkg/commands/proxy.go:	if host.HostName == "" {
pkg/commands/proxy.go:		host.HostName = host.Name()
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	if len(host.ResolveNameservers) > 0 {
pkg/commands/proxy.go:		Logger.Debugf("Resolving host: '%s' using nameservers %s", host.HostName, host.ResolveNameservers)
pkg/commands/proxy.go:		// FIXME: resolve using custom dns server
pkg/commands/proxy.go:		results, err := net.LookupAddr(host.HostName)
pkg/commands/proxy.go:		if err != nil {
pkg/commands/proxy.go:			return err
pkg/commands/proxy.go:		}
pkg/commands/proxy.go:		if len(results) > 0 {
pkg/commands/proxy.go:			host.HostName = results[0]
pkg/commands/proxy.go:		}
pkg/commands/proxy.go:		Logger.Debugf("Resolved host is: %s", host.HostName)
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	if host.ResolveCommand != "" {
pkg/commands/proxy.go:		command := host.ExpandString(host.ResolveCommand)
pkg/commands/proxy.go:		Logger.Debugf("Resolving host: %q using command: %q", host.HostName, command)
pkg/commands/proxy.go:		args, err := shlex.Split(command)
pkg/commands/proxy.go:		if err != nil {
pkg/commands/proxy.go:			return err
pkg/commands/proxy.go:		}
pkg/commands/proxy.go:		out, err := exec.Command(args[0], args[1:]...).Output()
pkg/commands/proxy.go:		if err != nil {
pkg/commands/proxy.go:			return err
pkg/commands/proxy.go:		}
pkg/commands/proxy.go:		host.HostName = strings.TrimSpace(fmt.Sprintf("%s", out))
pkg/commands/proxy.go:		Logger.Debugf("Resolved host is: %s", host.HostName)
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	return nil
pkg/commands/proxy.go:}
pkg/commands/proxy.go:func proxyGo(host *config.Host) error {
pkg/commands/proxy.go:	Logger.Debugf("Preparing host object")
pkg/commands/proxy.go:	if err := hostPrepare(host); err != nil {
pkg/commands/proxy.go:		return err
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	Logger.Debugf("Connecting to %s:%s", host.HostName, host.Port)
pkg/commands/proxy.go:	conn, err := net.Dial("tcp", fmt.Sprintf("%s:%s", host.HostName, host.Port))
pkg/commands/proxy.go:	if err != nil {
pkg/commands/proxy.go:		return err
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	defer conn.Close()
pkg/commands/proxy.go:	Logger.Debugf("Connected to %s:%s", host.HostName, host.Port)
pkg/commands/proxy.go:	// Create Stdio pipes
pkg/commands/proxy.go:	c1 := readAndWrite(conn, os.Stdout)
pkg/commands/proxy.go:	c2 := readAndWrite(os.Stdin, conn)
pkg/commands/proxy.go:	select {
pkg/commands/proxy.go:	case err = <-c1:
pkg/commands/proxy.go:	case err = <-c2:
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	if err != nil {
pkg/commands/proxy.go:		return err
pkg/commands/proxy.go:	}
pkg/commands/proxy.go:	return nil
pkg/commands/proxy.go:}
pkg/commands/proxy.go:func readAndWrite(r io.Reader, w io.Writer) <-chan error {
pkg/commands/proxy.go:	// Fixme: add an error channel
pkg/commands/proxy.go:	buf := make([]byte, 1024)
pkg/commands/proxy.go:	c := make(chan error)
pkg/commands/proxy.go:	go func() {
pkg/commands/proxy.go:		for {
pkg/commands/proxy.go:			// Read
pkg/commands/proxy.go:			n, err := r.Read(buf)
pkg/commands/proxy.go:			if err != nil {
pkg/commands/proxy.go:				if err != io.EOF {
pkg/commands/proxy.go:					c <- err
pkg/commands/proxy.go:				}
pkg/commands/proxy.go:				break
pkg/commands/proxy.go:			}
pkg/commands/proxy.go:			// Write
pkg/commands/proxy.go:			_, err = w.Write(buf[0:n])
pkg/commands/proxy.go:			if err != nil {
pkg/commands/proxy.go:				c <- err
pkg/commands/proxy.go:			}
pkg/commands/proxy.go:		}
pkg/commands/proxy.go:		c <- nil
pkg/commands/proxy.go:	}()
pkg/commands/proxy.go:	return c
pkg/commands/proxy.go:}
pkg/commands/proxy_test.go:package commands
pkg/commands/proxy_test.go:import (
pkg/commands/proxy_test.go:	"strings"
pkg/commands/proxy_test.go:	"testing"
pkg/commands/proxy_test.go:	"github.com/moul/advanced-ssh-config/pkg/config"
pkg/commands/proxy_test.go:)
pkg/commands/proxy_test.go:const configExample string = `
pkg/commands/proxy_test.go:hosts:
pkg/commands/proxy_test.go:  aaa:
pkg/commands/proxy_test.go:    HostName: 1.2.3.4
pkg/commands/proxy_test.go:  bbb:
pkg/commands/proxy_test.go:    Port: 21
pkg/commands/proxy_test.go:  ccc:
pkg/commands/proxy_test.go:    HostName: 5.6.7.8
pkg/commands/proxy_test.go:    Port: 24
pkg/commands/proxy_test.go:    User: toor
pkg/commands/proxy_test.go:  "*.ddd":
pkg/commands/proxy_test.go:    HostName: 1.3.5.7
pkg/commands/proxy_test.go:defaults:
pkg/commands/proxy_test.go:  Port: 22
pkg/commands/proxy_test.go:  User: root
pkg/commands/proxy_test.go:`
pkg/commands/proxy_test.go:func TestComputeHost(t *testing.T) {
pkg/commands/proxy_test.go:	Convey("Testing computeHost()", t, func() {
pkg/commands/proxy_test.go:		config := config.New()
pkg/commands/proxy_test.go:		err := config.LoadConfig(strings.NewReader(configExample))
pkg/commands/proxy_test.go:		host, err := computeHost("aaa", 0, config)
pkg/commands/proxy_test.go:		So(err, ShouldBeNil)
pkg/commands/proxy_test.go:		So(host.HostName, ShouldEqual, "1.2.3.4")
pkg/commands/proxy_test.go:		So(host.Port, ShouldEqual, "22")
pkg/commands/proxy_test.go:		err = config.LoadConfig(strings.NewReader(configExample))
pkg/commands/proxy_test.go:		host, err = computeHost("aaa", 42, config)
pkg/commands/proxy_test.go:		So(err, ShouldBeNil)
pkg/commands/proxy_test.go:		So(host.HostName, ShouldEqual, "1.2.3.4")
pkg/commands/proxy_test.go:		So(host.Port, ShouldEqual, "42")
pkg/commands/proxy_test.go:		err = config.LoadConfig(strings.NewReader(configExample))
pkg/commands/proxy_test.go:		host, err = computeHost("eee", 0, config)
pkg/commands/proxy_test.go:		So(err, ShouldBeNil)
pkg/commands/proxy_test.go:		So(host.HostName, ShouldEqual, "eee")
pkg/commands/proxy_test.go:		So(host.Port, ShouldEqual, "22")
pkg/commands/proxy_test.go:		err = config.LoadConfig(strings.NewReader(configExample))
pkg/commands/proxy_test.go:		host, err = computeHost("eee", 42, config)
pkg/commands/proxy_test.go:		So(err, ShouldBeNil)
pkg/commands/proxy_test.go:		So(host.HostName, ShouldEqual, "eee")
pkg/commands/proxy_test.go:		So(host.Port, ShouldEqual, "42")
pkg/commands/proxy_test.go:	})
pkg/commands/proxy_test.go:}
pkg/config/config.go:package config
pkg/config/config.go:import (
pkg/config/config.go:	"encoding/json"
pkg/config/config.go:	"fmt"
pkg/config/config.go:	"io"
pkg/config/config.go:	"io/ioutil"
pkg/config/config.go:	"os"
pkg/config/config.go:	"path"
pkg/config/config.go:	"path/filepath"
pkg/config/config.go:	"sort"
pkg/config/config.go:	"strings"
pkg/config/config.go:	"github.com/moul/advanced-ssh-config/pkg/flexyaml"
pkg/config/config.go:	. "github.com/moul/advanced-ssh-config/pkg/logger"
pkg/config/config.go:)
pkg/config/config.go:const defaultSshConfigPath string = "~/.ssh/config"
pkg/config/config.go:// Config contains a list of Hosts sections and a Defaults section representing a configuration file
pkg/config/config.go:type Config struct {
pkg/config/config.go:	Hosts     map[string]Host `yaml:"hosts,omitempty,flow" json:"hosts"`
pkg/config/config.go:	Templates map[string]Host `yaml:"templates,omitempty,flow" json:"templates"`
pkg/config/config.go:	Defaults  Host            `yaml:"defaults,omitempty,flow" json:"defaults",omitempty`
pkg/config/config.go:	Includes  []string        `yaml:"includes,omitempty,flow" json:"includes",omitempty`
pkg/config/config.go:	includedFiles map[string]bool
pkg/config/config.go:	sshConfigPath string
pkg/config/config.go:}
pkg/config/config.go:// IncludedFiles returns the list of the included files
pkg/config/config.go:func (c *Config) IncludedFiles() []string {
pkg/config/config.go:	includedFiles := []string{}
pkg/config/config.go:	for file, _ := range c.includedFiles {
pkg/config/config.go:		includedFiles = append(includedFiles, file)
pkg/config/config.go:	}
pkg/config/config.go:	return includedFiles
pkg/config/config.go:}
pkg/config/config.go:// JsonString returns a string representing the JSON of a Config object
pkg/config/config.go:func (c *Config) JsonString() ([]byte, error) {
pkg/config/config.go:	output, err := json.MarshalIndent(c, "", "  ")
pkg/config/config.go:	return output, err
pkg/config/config.go:}
pkg/config/config.go:// computeHost returns a copy of the host with applied defaults, resolved inheritances and configured internal fields
pkg/config/config.go:func computeHost(host *Host, config *Config, name string, fullCompute bool) (*Host, error) {
pkg/config/config.go:	computedHost := NewHost(name)
pkg/config/config.go:	if host != nil {
pkg/config/config.go:		*computedHost = *host
pkg/config/config.go:	}
pkg/config/config.go:	// name internal field
pkg/config/config.go:	computedHost.name = name
pkg/config/config.go:	computedHost.inherited = make(map[string]bool, 0)
pkg/config/config.go:	// self is already inherited
pkg/config/config.go:	computedHost.inherited[name] = true
pkg/config/config.go:	// Inheritance
pkg/config/config.go:	// FIXME: allow deeper inheritance:
pkg/config/config.go:	//     currently not resolving inherited hosts
pkg/config/config.go:	//     we should resolve all inherited hosts and pass the
pkg/config/config.go:	//     currently resolved hosts to avoid computing an host twice
pkg/config/config.go:	for _, name := range host.Inherits {
pkg/config/config.go:		_, found := computedHost.inherited[name]
pkg/config/config.go:		if found {
pkg/config/config.go:			Logger.Debugf("Detected circular loop inheritance, skiping...")
pkg/config/config.go:			continue
pkg/config/config.go:		}
pkg/config/config.go:		computedHost.inherited[name] = true
pkg/config/config.go:		target, err := config.getHostByPath(name, false, false, true)
pkg/config/config.go:		if err != nil {
pkg/config/config.go:			Logger.Warnf("Cannot inherits from %q: %v", name, err)
pkg/config/config.go:			continue
pkg/config/config.go:		}
pkg/config/config.go:		computedHost.ApplyDefaults(target)
pkg/config/config.go:	}
pkg/config/config.go:	// fullCompute applies config.Defaults
pkg/config/config.go:	// config.Defaults should be applied when proxying
pkg/config/config.go:	// but should not when exporting .ssh/config file
pkg/config/config.go:	if fullCompute {
pkg/config/config.go:		// apply defaults based on "Host *"
pkg/config/config.go:		computedHost.ApplyDefaults(&config.Defaults)
pkg/config/config.go:		if computedHost.HostName == "" {
pkg/config/config.go:			computedHost.HostName = name
pkg/config/config.go:		}
pkg/config/config.go:		// expands variables in host
pkg/config/config.go:		// i.e: %h.some.zone -> {name}.some.zone
pkg/config/config.go:		hostname := strings.Replace(computedHost.HostName, "%h", "%n", -1)
pkg/config/config.go:		computedHost.HostName = computedHost.ExpandString(hostname)
pkg/config/config.go:	}
pkg/config/config.go:	return computedHost, nil
pkg/config/config.go:}
pkg/config/config.go:func (c *Config) getHostByName(name string, safe bool, compute bool, allowTemplate bool) (*Host, error) {
pkg/config/config.go:	if host, ok := c.Hosts[name]; ok {
pkg/config/config.go:		Logger.Debugf("getHostByName direct matching: %q", name)
pkg/config/config.go:		return computeHost(&host, c, name, compute)
pkg/config/config.go:	}
pkg/config/config.go:	for pattern, host := range c.Hosts {
pkg/config/config.go:		matched, err := path.Match(pattern, name)
pkg/config/config.go:		if err != nil {
pkg/config/config.go:			return nil, err
pkg/config/config.go:		}
pkg/config/config.go:		if matched {
pkg/config/config.go:			Logger.Debugf("getHostByName pattern matching: %q => %q", pattern, name)
pkg/config/config.go:			return computeHost(&host, c, name, compute)
pkg/config/config.go:		}
pkg/config/config.go:	}
pkg/config/config.go:	if allowTemplate {
pkg/config/config.go:		for pattern, template := range c.Templates {
pkg/config/config.go:			matched, err := path.Match(pattern, name)
pkg/config/config.go:			if err != nil {
pkg/config/config.go:				return nil, err
pkg/config/config.go:			}
pkg/config/config.go:			if matched {
pkg/config/config.go:				return computeHost(&template, c, name, compute)
pkg/config/config.go:			}
pkg/config/config.go:		}
pkg/config/config.go:	}
pkg/config/config.go:	if safe {
pkg/config/config.go:		host := NewHost(name)
pkg/config/config.go:		host.HostName = name
pkg/config/config.go:		return computeHost(host, c, name, compute)
pkg/config/config.go:	}
pkg/config/config.go:	return nil, fmt.Errorf("no such host: %s", name)
pkg/config/config.go:}
pkg/config/config.go:func (c *Config) getHostByPath(path string, safe bool, compute bool, allowTemplate bool) (*Host, error) {
pkg/config/config.go:	parts := strings.SplitN(path, "/", 2)
pkg/config/config.go:	host, err := c.getHostByName(parts[0], safe, compute, allowTemplate)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return nil, err
pkg/config/config.go:	}
pkg/config/config.go:	if len(parts) > 1 {
pkg/config/config.go:		host.Gateways = []string{parts[1]}
pkg/config/config.go:	}
pkg/config/config.go:	return host, nil
pkg/config/config.go:}
pkg/config/config.go:// GetGatewaySafe returns gateway Host configuration, a gateway is like a Host, except, the host path is not resolved
pkg/config/config.go:func (c *Config) GetGatewaySafe(name string) *Host {
pkg/config/config.go:	host, err := c.getHostByName(name, true, true, false) // FIXME: fullCompute for gateway ?
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		panic(err)
pkg/config/config.go:	}
pkg/config/config.go:	return host
pkg/config/config.go:}
pkg/config/config.go:// GetHost returns a matching host form Config hosts list
pkg/config/config.go:func (c *Config) GetHost(name string) (*Host, error) {
pkg/config/config.go:	return c.getHostByPath(name, false, true, false)
pkg/config/config.go:}
pkg/config/config.go:// GetHostSafe won't fail, in case the host is not found, it will returns a virtual host matching the pattern
pkg/config/config.go:func (c *Config) GetHostSafe(name string) *Host {
pkg/config/config.go:	host, err := c.getHostByPath(name, true, true, false)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		panic(err)
pkg/config/config.go:	}
pkg/config/config.go:	return host
pkg/config/config.go:}
pkg/config/config.go:// LoadConfig loads the content of an io.Reader source
pkg/config/config.go:func (c *Config) LoadConfig(source io.Reader) error {
pkg/config/config.go:	buf, err := ioutil.ReadAll(source)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return err
pkg/config/config.go:	}
pkg/config/config.go:	err = flexyaml.Unmarshal(buf, &c)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return err
pkg/config/config.go:	}
pkg/config/config.go:	c.applyMissingNames()
pkg/config/config.go:	return nil
pkg/config/config.go:}
pkg/config/config.go:func (c *Config) applyMissingNames() {
pkg/config/config.go:	for key, _ := range c.Hosts {
pkg/config/config.go:		host := c.Hosts[key]
pkg/config/config.go:		host.name = key
pkg/config/config.go:		c.Hosts[key] = host
pkg/config/config.go:	}
pkg/config/config.go:	for key, _ := range c.Templates {
pkg/config/config.go:		template := c.Templates[key]
pkg/config/config.go:		template.name = key
pkg/config/config.go:		template.isTemplate = true
pkg/config/config.go:		c.Templates[key] = template
pkg/config/config.go:	}
pkg/config/config.go:	c.Defaults.isDefault = true
pkg/config/config.go:}
pkg/config/config.go:// SaveSshConfig saves the configuration to ~/.ssh/config
pkg/config/config.go:func (c *Config) SaveSshConfig() error {
pkg/config/config.go:	if c.sshConfigPath == "" {
pkg/config/config.go:		return fmt.Errorf("no Config.sshConfigPath configured")
pkg/config/config.go:	}
pkg/config/config.go:	filepath, err := expandUser(c.sshConfigPath)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return err
pkg/config/config.go:	}
pkg/config/config.go:	file, err := os.Create(filepath)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return err
pkg/config/config.go:	}
pkg/config/config.go:	defer file.Close()
pkg/config/config.go:	Logger.Debugf("Writing SSH config file to %q", filepath)
pkg/config/config.go:	return c.WriteSshConfigTo(file)
pkg/config/config.go:}
pkg/config/config.go:// LoadFile loads the content of a configuration file in the Config object
pkg/config/config.go:func (c *Config) LoadFile(filename string) error {
pkg/config/config.go:	beforeHostsCount := len(c.Hosts)
pkg/config/config.go:	// Resolve '~' and '$HOME'
pkg/config/config.go:	filepath, err := expandUser(filename)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return err
pkg/config/config.go:	}
pkg/config/config.go:	// Anti-loop protection
pkg/config/config.go:	if _, ok := c.includedFiles[filepath]; ok {
pkg/config/config.go:		return nil
pkg/config/config.go:	}
pkg/config/config.go:	c.includedFiles[filepath] = false
pkg/config/config.go:	Logger.Debugf("Loading config file '%s'", filepath)
pkg/config/config.go:	// Read file
pkg/config/config.go:	source, err := os.Open(filepath)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return err
pkg/config/config.go:	}
pkg/config/config.go:	// Load config stream
pkg/config/config.go:	err = c.LoadConfig(source)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return err
pkg/config/config.go:	}
pkg/config/config.go:	// Successful loading
pkg/config/config.go:	c.includedFiles[filepath] = true
pkg/config/config.go:	afterHostsCount := len(c.Hosts)
pkg/config/config.go:	diffHostsCount := afterHostsCount - beforeHostsCount
pkg/config/config.go:	Logger.Debugf("Loaded config file '%s' (%d + %d => %d hosts)", filepath, beforeHostsCount, afterHostsCount, diffHostsCount)
pkg/config/config.go:	// Handling includes
pkg/config/config.go:	for _, include := range c.Includes {
pkg/config/config.go:		if err = c.LoadFiles(include); err != nil {
pkg/config/config.go:			return err
pkg/config/config.go:		}
pkg/config/config.go:	}
pkg/config/config.go:	return nil
pkg/config/config.go:}
pkg/config/config.go:// Loadfiles will try to glob the pattern and load each maching entries
pkg/config/config.go:func (c *Config) LoadFiles(pattern string) error {
pkg/config/config.go:	// Resolve '~' and '$HOME'
pkg/config/config.go:	expandedPattern, err := expandUser(pattern)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return err
pkg/config/config.go:	}
pkg/config/config.go:	// Globbing
pkg/config/config.go:	filepaths, err := filepath.Glob(expandedPattern)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return err
pkg/config/config.go:	}
pkg/config/config.go:	// Load files iteratively
pkg/config/config.go:	for _, filepath := range filepaths {
pkg/config/config.go:		if err := c.LoadFile(filepath); err != nil {
pkg/config/config.go:			Logger.Warnf("Cannot include %q: %v", filepath, err)
pkg/config/config.go:		}
pkg/config/config.go:	}
pkg/config/config.go:	return nil
pkg/config/config.go:}
pkg/config/config.go:// sortedNames returns the host names sorted alphabetically
pkg/config/config.go:func (c *Config) sortedNames() []string {
pkg/config/config.go:	names := sort.StringSlice{}
pkg/config/config.go:	for key, _ := range c.Hosts {
pkg/config/config.go:		names = append(names, key)
pkg/config/config.go:	}
pkg/config/config.go:	sort.Sort(names)
pkg/config/config.go:	return names
pkg/config/config.go:}
pkg/config/config.go:// ExportSshConfig returns a .ssh/config valid file containing assh configuration
pkg/config/config.go:func (c *Config) WriteSshConfigTo(w io.Writer) error {
pkg/config/config.go:	fmt.Fprintln(w, "# ssh config generated by advanced-ssh-config")
pkg/config/config.go:	// FIXME: add version
pkg/config/config.go:	fmt.Fprintln(w)
pkg/config/config.go:	fmt.Fprintln(w, "# host-based configuration")
pkg/config/config.go:	for _, name := range c.sortedNames() {
pkg/config/config.go:		host := c.Hosts[name]
pkg/config/config.go:		computedHost, err := computeHost(&host, c, name, false)
pkg/config/config.go:		if err != nil {
pkg/config/config.go:			return err
pkg/config/config.go:		}
pkg/config/config.go:		computedHost.WriteSshConfigTo(w)
pkg/config/config.go:		fmt.Fprintln(w)
pkg/config/config.go:	}
pkg/config/config.go:	fmt.Fprintln(w, "# global configuration")
pkg/config/config.go:	c.Defaults.name = "*"
pkg/config/config.go:	c.Defaults.WriteSshConfigTo(w)
pkg/config/config.go:	return nil
pkg/config/config.go:}
pkg/config/config.go:// New returns an instantiated Config object
pkg/config/config.go:func New() *Config {
pkg/config/config.go:	var config Config
pkg/config/config.go:	config.Hosts = make(map[string]Host)
pkg/config/config.go:	config.Templates = make(map[string]Host)
pkg/config/config.go:	config.includedFiles = make(map[string]bool)
pkg/config/config.go:	config.sshConfigPath = defaultSshConfigPath
pkg/config/config.go:	return &config
pkg/config/config.go:}
pkg/config/config.go:// Open returns a Config object loaded with standard configuration file paths
pkg/config/config.go:func Open() (*Config, error) {
pkg/config/config.go:	config := New()
pkg/config/config.go:	err := config.LoadFile("~/.ssh/assh.yml")
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return nil, err
pkg/config/config.go:	}
pkg/config/config.go:	return config, nil
pkg/config/config.go:}
pkg/config/config_test.go:package config
pkg/config/config_test.go:import (
pkg/config/config_test.go:	"bytes"
pkg/config/config_test.go:	"io/ioutil"
pkg/config/config_test.go:	"os"
pkg/config/config_test.go:	"strings"
pkg/config/config_test.go:	"testing"
pkg/config/config_test.go:)
pkg/config/config_test.go:var (
pkg/config/config_test.go:	yamlConfig string = `
pkg/config/config_test.go:hosts:
pkg/config/config_test.go:  aaa:
pkg/config/config_test.go:    HostName: 1.2.3.4
pkg/config/config_test.go:  bbb:
pkg/config/config_test.go:    Port: ${ENV_VAR_PORT}
pkg/config/config_test.go:    HostName: $ENV_VAR_HOSTNAME
pkg/config/config_test.go:    User: user-$ENV_VAR_USER-user
pkg/config/config_test.go:    LocalCommand: ${ENV_VAR_LOCALCOMMAND:-hello}
pkg/config/config_test.go:    IdentityFile: ${NON_EXISTING_ENV_VAR}
pkg/config/config_test.go:  ccc:
pkg/config/config_test.go:    HostName: 5.6.7.8
pkg/config/config_test.go:    Port: 24
pkg/config/config_test.go:    User: toor
pkg/config/config_test.go:  "*.ddd":
pkg/config/config_test.go:    HostName: 1.3.5.7
pkg/config/config_test.go:  eee:
pkg/config/config_test.go:    Inherits:
pkg/config/config_test.go:    - aaa
pkg/config/config_test.go:    - bbb
pkg/config/config_test.go:    - aaa
pkg/config/config_test.go:  fff:
pkg/config/config_test.go:    Inherits:
pkg/config/config_test.go:    - bbb
pkg/config/config_test.go:    - eee
pkg/config/config_test.go:    - "*.ddd"
pkg/config/config_test.go:  ggg:
pkg/config/config_test.go:    Gateways:
pkg/config/config_test.go:    - direct
pkg/config/config_test.go:    - fff
pkg/config/config_test.go:  hhh:
pkg/config/config_test.go:    Gateways:
pkg/config/config_test.go:    - ggg
pkg/config/config_test.go:    - direct
pkg/config/config_test.go:  iii:
pkg/config/config_test.go:    Gateways:
pkg/config/config_test.go:    - test.ddd
pkg/config/config_test.go:  jjj:
pkg/config/config_test.go:    HostName: "%h.jjjjj"
pkg/config/config_test.go:  "*.kkk":
pkg/config/config_test.go:    HostName: "%h.kkkkk"
pkg/config/config_test.go:  nnn:
pkg/config/config_test.go:    Inherits:
pkg/config/config_test.go:    - mmm
pkg/config/config_test.go:    User: nnnn
pkg/config/config_test.go:templates:
pkg/config/config_test.go:  kkk:
pkg/config/config_test.go:    Port: 25
pkg/config/config_test.go:    User: kkkk
pkg/config/config_test.go:  lll:
pkg/config/config_test.go:    HostName: 5.5.5.5
pkg/config/config_test.go:  mmm:
pkg/config/config_test.go:    Inherits:
pkg/config/config_test.go:    - iii
pkg/config/config_test.go:defaults:
pkg/config/config_test.go:  Port: 22
pkg/config/config_test.go:  User: root
pkg/config/config_test.go:includes:
pkg/config/config_test.go:  - /path/to/dir/*.yml
pkg/config/config_test.go:  - /path/to/file.yml
pkg/config/config_test.go:`
pkg/config/config_test.go:)
pkg/config/config_test.go:func TestNew(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing New()", t, func() {
pkg/config/config_test.go:		config := New()
pkg/config/config_test.go:		So(len(config.Hosts), ShouldEqual, 0)
pkg/config/config_test.go:		So(config.Defaults.Port, ShouldEqual, "")
pkg/config/config_test.go:		So(config.Defaults.HostName, ShouldEqual, "")
pkg/config/config_test.go:		So(config.Defaults.User, ShouldEqual, "")
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func dummyConfig() *Config {
pkg/config/config_test.go:	config := New()
pkg/config/config_test.go:	config.Hosts["toto"] = Host{
pkg/config/config_test.go:		HostName: "1.2.3.4",
pkg/config/config_test.go:	}
pkg/config/config_test.go:	config.Hosts["titi"] = Host{
pkg/config/config_test.go:		HostName:     "tata",
pkg/config/config_test.go:		Port:         "23",
pkg/config/config_test.go:		User:         "moul",
pkg/config/config_test.go:		ProxyCommand: "nc -v 4242",
pkg/config/config_test.go:	}
pkg/config/config_test.go:	config.Hosts["tonton"] = Host{
pkg/config/config_test.go:		ResolveNameservers: []string{"a.com", "1.2.3.4"},
pkg/config/config_test.go:	}
pkg/config/config_test.go:	config.Hosts["toutou"] = Host{
pkg/config/config_test.go:		ResolveCommand: "dig -t %h",
pkg/config/config_test.go:	}
pkg/config/config_test.go:	config.Hosts["tutu"] = Host{
pkg/config/config_test.go:		Gateways: []string{"titi", "direct", "1.2.3.4"},
pkg/config/config_test.go:		Inherits: []string{"toto", "tutu", "*.ddd"},
pkg/config/config_test.go:	}
pkg/config/config_test.go:	config.Hosts["empty"] = Host{}
pkg/config/config_test.go:	config.Hosts["tata"] = Host{
pkg/config/config_test.go:		Inherits: []string{"tutu", "titi", "toto", "tutu"},
pkg/config/config_test.go:	}
pkg/config/config_test.go:	config.Hosts["*.ddd"] = Host{
pkg/config/config_test.go:		HostName:               "1.3.5.7",
pkg/config/config_test.go:		PasswordAuthentication: "yes",
pkg/config/config_test.go:	}
pkg/config/config_test.go:	config.Defaults = Host{
pkg/config/config_test.go:		Port: "22",
pkg/config/config_test.go:		User: "root",
pkg/config/config_test.go:	}
pkg/config/config_test.go:	config.Templates["mmm"] = Host{
pkg/config/config_test.go:		Port:     "25",
pkg/config/config_test.go:		User:     "mmmm",
pkg/config/config_test.go:		HostName: "5.5.5.5",
pkg/config/config_test.go:		Inherits: []string{"tata"},
pkg/config/config_test.go:	}
pkg/config/config_test.go:	config.Hosts["nnn"] = Host{
pkg/config/config_test.go:		Port:     "26",
pkg/config/config_test.go:		Inherits: []string{"mmm"},
pkg/config/config_test.go:	}
pkg/config/config_test.go:	config.applyMissingNames()
pkg/config/config_test.go:	return config
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestConfig(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing dummyConfig", t, func() {
pkg/config/config_test.go:		config := dummyConfig()
pkg/config/config_test.go:		So(len(config.Hosts), ShouldEqual, 9)
pkg/config/config_test.go:		So(config.Hosts["toto"].HostName, ShouldEqual, "1.2.3.4")
pkg/config/config_test.go:		So(config.Hosts["toto"].Port, ShouldEqual, "")
pkg/config/config_test.go:		So(config.Hosts["toto"].name, ShouldEqual, "toto")
pkg/config/config_test.go:		So(config.Hosts["toto"].isDefault, ShouldEqual, false)
pkg/config/config_test.go:		So(config.Hosts["titi"].HostName, ShouldEqual, "tata")
pkg/config/config_test.go:		So(config.Hosts["titi"].User, ShouldEqual, "moul")
pkg/config/config_test.go:		So(config.Hosts["titi"].ProxyCommand, ShouldEqual, "nc -v 4242")
pkg/config/config_test.go:		So(config.Hosts["titi"].Port, ShouldEqual, "23")
pkg/config/config_test.go:		So(config.Hosts["titi"].isDefault, ShouldEqual, false)
pkg/config/config_test.go:		So(config.Hosts["tonton"].isDefault, ShouldEqual, false)
pkg/config/config_test.go:		So(config.Hosts["tonton"].Port, ShouldEqual, "")
pkg/config/config_test.go:		So(config.Hosts["tonton"].ResolveNameservers, ShouldResemble, []string{"a.com", "1.2.3.4"})
pkg/config/config_test.go:		So(config.Hosts["toutou"].isDefault, ShouldEqual, false)
pkg/config/config_test.go:		So(config.Hosts["toutou"].Port, ShouldEqual, "")
pkg/config/config_test.go:		So(config.Hosts["toutou"].ResolveCommand, ShouldEqual, "dig -t %h")
pkg/config/config_test.go:		So(config.Hosts["tutu"].isDefault, ShouldEqual, false)
pkg/config/config_test.go:		So(config.Hosts["tutu"].Port, ShouldEqual, "")
pkg/config/config_test.go:		So(config.Hosts["tutu"].Gateways, ShouldResemble, []string{"titi", "direct", "1.2.3.4"})
pkg/config/config_test.go:		So(config.Hosts["*.ddd"].isDefault, ShouldEqual, false)
pkg/config/config_test.go:		So(config.Hosts["*.ddd"].HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:		So(config.Hosts["empty"].isDefault, ShouldEqual, false)
pkg/config/config_test.go:		So(config.Hosts["empty"].Port, ShouldEqual, "")
pkg/config/config_test.go:		So(len(config.Templates), ShouldEqual, 1)
pkg/config/config_test.go:		So(config.Defaults.User, ShouldEqual, "root")
pkg/config/config_test.go:		So(config.Defaults.Port, ShouldEqual, "22")
pkg/config/config_test.go:		So(config.Defaults.isDefault, ShouldEqual, true)
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestConfig_LoadConfig(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing Config.LoadConfig", t, func() {
pkg/config/config_test.go:		Convey("standard", func() {
pkg/config/config_test.go:			config := New()
pkg/config/config_test.go:			err := config.LoadConfig(strings.NewReader(yamlConfig))
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(len(config.Hosts), ShouldEqual, 12)
pkg/config/config_test.go:			So(config.Hosts["aaa"].HostName, ShouldEqual, "1.2.3.4")
pkg/config/config_test.go:			So(config.Hosts["aaa"].Port, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Hosts["aaa"].User, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Hosts["bbb"].HostName, ShouldEqual, "$ENV_VAR_HOSTNAME")
pkg/config/config_test.go:			So(config.Hosts["bbb"].Port, ShouldEqual, "${ENV_VAR_PORT}")
pkg/config/config_test.go:			So(config.Hosts["bbb"].User, ShouldEqual, "user-$ENV_VAR_USER-user")
pkg/config/config_test.go:			So(config.Hosts["bbb"].IdentityFile, ShouldEqual, "${NON_EXISTING_ENV_VAR}")
pkg/config/config_test.go:			So(config.Hosts["bbb"].LocalCommand, ShouldEqual, "${ENV_VAR_LOCALCOMMAND:-hello}")
pkg/config/config_test.go:			So(config.Hosts["ccc"].HostName, ShouldEqual, "5.6.7.8")
pkg/config/config_test.go:			So(config.Hosts["ccc"].Port, ShouldEqual, "24")
pkg/config/config_test.go:			So(config.Hosts["ccc"].User, ShouldEqual, "toor")
pkg/config/config_test.go:			So(config.Hosts["*.ddd"].HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(config.Hosts["*.ddd"].Port, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Hosts["*.ddd"].User, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Defaults.Port, ShouldEqual, "22")
pkg/config/config_test.go:			So(config.Defaults.User, ShouldEqual, "root")
pkg/config/config_test.go:			So(len(config.Templates), ShouldEqual, 3)
pkg/config/config_test.go:		})
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestConfig_JsonSring(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing Config.JsonString", t, func() {
pkg/config/config_test.go:		Convey("dummyConfig", func() {
pkg/config/config_test.go:			config := dummyConfig()
pkg/config/config_test.go:			expected := `{
pkg/config/config_test.go:  "hosts": {
pkg/config/config_test.go:    "*.ddd": {
pkg/config/config_test.go:      "HostName": "1.3.5.7",
pkg/config/config_test.go:      "PasswordAuthentication": "yes"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "empty": {},
pkg/config/config_test.go:    "nnn": {
pkg/config/config_test.go:      "Port": "26",
pkg/config/config_test.go:      "Inherits": [
pkg/config/config_test.go:        "mmm"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "tata": {
pkg/config/config_test.go:      "Inherits": [
pkg/config/config_test.go:        "tutu",
pkg/config/config_test.go:        "titi",
pkg/config/config_test.go:        "toto",
pkg/config/config_test.go:        "tutu"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "titi": {
pkg/config/config_test.go:      "HostName": "tata",
pkg/config/config_test.go:      "Port": "23",
pkg/config/config_test.go:      "User": "moul",
pkg/config/config_test.go:      "ProxyCommand": "nc -v 4242"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "tonton": {
pkg/config/config_test.go:      "ResolveNameservers": [
pkg/config/config_test.go:        "a.com",
pkg/config/config_test.go:        "1.2.3.4"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "toto": {
pkg/config/config_test.go:      "HostName": "1.2.3.4"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "toutou": {
pkg/config/config_test.go:      "ResolveCommand": "dig -t %h"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "tutu": {
pkg/config/config_test.go:      "Inherits": [
pkg/config/config_test.go:        "toto",
pkg/config/config_test.go:        "tutu",
pkg/config/config_test.go:        "*.ddd"
pkg/config/config_test.go:      ],
pkg/config/config_test.go:      "Gateways": [
pkg/config/config_test.go:        "titi",
pkg/config/config_test.go:        "direct",
pkg/config/config_test.go:        "1.2.3.4"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    }
pkg/config/config_test.go:  },
pkg/config/config_test.go:  "templates": {
pkg/config/config_test.go:    "mmm": {
pkg/config/config_test.go:      "HostName": "5.5.5.5",
pkg/config/config_test.go:      "Port": "25",
pkg/config/config_test.go:      "User": "mmmm",
pkg/config/config_test.go:      "Inherits": [
pkg/config/config_test.go:        "tata"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    }
pkg/config/config_test.go:  },
pkg/config/config_test.go:  "defaults": {
pkg/config/config_test.go:    "Port": "22",
pkg/config/config_test.go:    "User": "root"
pkg/config/config_test.go:  },
pkg/config/config_test.go:  "includes": null
pkg/config/config_test.go:}`
pkg/config/config_test.go:			json, err := config.JsonString()
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(string(json), ShouldEqual, expected)
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("yamlConfig", func() {
pkg/config/config_test.go:			config := New()
pkg/config/config_test.go:			err := config.LoadConfig(strings.NewReader(yamlConfig))
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			expected := `{
pkg/config/config_test.go:  "hosts": {
pkg/config/config_test.go:    "*.ddd": {
pkg/config/config_test.go:      "HostName": "1.3.5.7"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "*.kkk": {
pkg/config/config_test.go:      "HostName": "%h.kkkkk"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "aaa": {
pkg/config/config_test.go:      "HostName": "1.2.3.4"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "bbb": {
pkg/config/config_test.go:      "HostName": "$ENV_VAR_HOSTNAME",
pkg/config/config_test.go:      "IdentityFile": "${NON_EXISTING_ENV_VAR}",
pkg/config/config_test.go:      "LocalCommand": "${ENV_VAR_LOCALCOMMAND:-hello}",
pkg/config/config_test.go:      "Port": "${ENV_VAR_PORT}",
pkg/config/config_test.go:      "User": "user-$ENV_VAR_USER-user"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "ccc": {
pkg/config/config_test.go:      "HostName": "5.6.7.8",
pkg/config/config_test.go:      "Port": "24",
pkg/config/config_test.go:      "User": "toor"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "eee": {
pkg/config/config_test.go:      "Inherits": [
pkg/config/config_test.go:        "aaa",
pkg/config/config_test.go:        "bbb",
pkg/config/config_test.go:        "aaa"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "fff": {
pkg/config/config_test.go:      "Inherits": [
pkg/config/config_test.go:        "bbb",
pkg/config/config_test.go:        "eee",
pkg/config/config_test.go:        "*.ddd"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "ggg": {
pkg/config/config_test.go:      "Gateways": [
pkg/config/config_test.go:        "direct",
pkg/config/config_test.go:        "fff"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "hhh": {
pkg/config/config_test.go:      "Gateways": [
pkg/config/config_test.go:        "ggg",
pkg/config/config_test.go:        "direct"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "iii": {
pkg/config/config_test.go:      "Gateways": [
pkg/config/config_test.go:        "test.ddd"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "jjj": {
pkg/config/config_test.go:      "HostName": "%h.jjjjj"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "nnn": {
pkg/config/config_test.go:      "User": "nnnn",
pkg/config/config_test.go:      "Inherits": [
pkg/config/config_test.go:        "mmm"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    }
pkg/config/config_test.go:  },
pkg/config/config_test.go:  "templates": {
pkg/config/config_test.go:    "kkk": {
pkg/config/config_test.go:      "Port": "25",
pkg/config/config_test.go:      "User": "kkkk"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "lll": {
pkg/config/config_test.go:      "HostName": "5.5.5.5"
pkg/config/config_test.go:    },
pkg/config/config_test.go:    "mmm": {
pkg/config/config_test.go:      "Inherits": [
pkg/config/config_test.go:        "iii"
pkg/config/config_test.go:      ]
pkg/config/config_test.go:    }
pkg/config/config_test.go:  },
pkg/config/config_test.go:  "defaults": {
pkg/config/config_test.go:    "Port": "22",
pkg/config/config_test.go:    "User": "root"
pkg/config/config_test.go:  },
pkg/config/config_test.go:  "includes": [
pkg/config/config_test.go:    "/path/to/dir/*.yml",
pkg/config/config_test.go:    "/path/to/file.yml"
pkg/config/config_test.go:  ]
pkg/config/config_test.go:}`
pkg/config/config_test.go:			json, err := config.JsonString()
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(string(json), ShouldEqual, expected)
pkg/config/config_test.go:		})
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestComputeHost(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing computeHost()", t, func() {
pkg/config/config_test.go:		config := New()
pkg/config/config_test.go:		err := config.LoadConfig(strings.NewReader(yamlConfig))
pkg/config/config_test.go:		So(err, ShouldBeNil)
pkg/config/config_test.go:		Convey("Standard", func() {
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("Expand variables in HostName", func() {
pkg/config/config_test.go:			host := config.Hosts["jjj"]
pkg/config/config_test.go:			computed, err := computeHost(&host, config, "jjj", false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(computed.HostName, ShouldEqual, "%h.jjjjj")
pkg/config/config_test.go:			computed, err = computeHost(&host, config, "jjj", true)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(computed.HostName, ShouldEqual, "jjj.jjjjj")
pkg/config/config_test.go:			host = config.Hosts["*.kkk"]
pkg/config/config_test.go:			computed, err = computeHost(&host, config, "test.kkk", false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(computed.HostName, ShouldEqual, "%h.kkkkk")
pkg/config/config_test.go:			computed, err = computeHost(&host, config, "test.kkk", true)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(computed.HostName, ShouldEqual, "test.kkk.kkkkk")
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("Expand variables using environment", func() {
pkg/config/config_test.go:			host := config.Hosts["bbb"]
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "$ENV_VAR_HOSTNAME")
pkg/config/config_test.go:			So(host.Port, ShouldEqual, "${ENV_VAR_PORT}")
pkg/config/config_test.go:			So(host.IdentityFile, ShouldEqual, "${NON_EXISTING_ENV_VAR}")
pkg/config/config_test.go:			So(host.LocalCommand, ShouldEqual, "${ENV_VAR_LOCALCOMMAND:-hello}")
pkg/config/config_test.go:			So(host.User, ShouldEqual, "user-$ENV_VAR_USER-user")
pkg/config/config_test.go:			os.Setenv("ENV_VAR_HOSTNAME", "aaa")
pkg/config/config_test.go:			os.Setenv("ENV_VAR_PORT", "42")
pkg/config/config_test.go:			os.Unsetenv("NON_EXISTING_ENV_VAR")
pkg/config/config_test.go:			//os.Setenv("ENV_VAR_LOCALCOMMAND", "bbb")
pkg/config/config_test.go:			os.Setenv("ENV_VAR_USER", "ccc")
pkg/config/config_test.go:			computed, err := computeHost(&host, config, "bbb", true)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(computed.HostName, ShouldEqual, "aaa")
pkg/config/config_test.go:			So(computed.Port, ShouldEqual, "42")
pkg/config/config_test.go:			So(computed.IdentityFile, ShouldEqual, "")
pkg/config/config_test.go:			So(computed.LocalCommand, ShouldEqual, "") // FIXME: it should be "hello"
pkg/config/config_test.go:			So(computed.User, ShouldEqual, "user-ccc-user")
pkg/config/config_test.go:		})
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestConfig_getHostByName(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing Config.getHostByName", t, func() {
pkg/config/config_test.go:		config := dummyConfig()
pkg/config/config_test.go:		var host *Host
pkg/config/config_test.go:		var err error
pkg/config/config_test.go:		Convey("Without gateway", func() {
pkg/config/config_test.go:			host, err = config.getHostByName("titi", false, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			host, err = config.getHostByName("titi", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			host, err = config.getHostByName("dontexists", false, true, false)
pkg/config/config_test.go:			So(err, ShouldNotBeNil)
pkg/config/config_test.go:			So(host, ShouldBeNil)
pkg/config/config_test.go:			host, err = config.getHostByName("dontexists", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "dontexists")
pkg/config/config_test.go:			host, err = config.getHostByName("regex.ddd", false, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			host, err = config.getHostByName("regex.ddd", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("With gateway", func() {
pkg/config/config_test.go:			host, err = config.getHostByName("titi/gateway", false, true, false)
pkg/config/config_test.go:			So(err, ShouldNotBeNil)
pkg/config/config_test.go:			So(host, ShouldBeNil)
pkg/config/config_test.go:			host, err = config.getHostByName("titi/gateway", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi/gateway")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host, err = config.getHostByName("dontexists/gateway", false, true, false)
pkg/config/config_test.go:			So(err, ShouldNotBeNil)
pkg/config/config_test.go:			So(host, ShouldBeNil)
pkg/config/config_test.go:			host, err = config.getHostByName("dontexists/gateway", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "dontexists/gateway")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host, err = config.getHostByName("regex.ddd/gateway", false, true, false)
pkg/config/config_test.go:			So(err, ShouldNotBeNil)
pkg/config/config_test.go:			So(host, ShouldBeNil)
pkg/config/config_test.go:			host, err = config.getHostByName("regex.ddd/gateway", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd/gateway")
pkg/config/config_test.go:			So(host.HostName, ShouldNotEqual, "1.3.5.7")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:		})
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestConfig_GetGatewaySafe(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing Config.GetGatewaySafe", t, func() {
pkg/config/config_test.go:		config := dummyConfig()
pkg/config/config_test.go:		var host *Host
pkg/config/config_test.go:		Convey("Without gateway", func() {
pkg/config/config_test.go:			host = config.GetGatewaySafe("titi")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			host = config.GetGatewaySafe("dontexists")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "dontexists")
pkg/config/config_test.go:			host = config.GetGatewaySafe("regex.ddd")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("With gateway", func() {
pkg/config/config_test.go:			host = config.GetGatewaySafe("titi/gateway")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi/gateway")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host = config.GetGatewaySafe("dontexists/gateway")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "dontexists/gateway")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host = config.GetGatewaySafe("regex.ddd/gateway")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd/gateway")
pkg/config/config_test.go:			So(host.HostName, ShouldNotEqual, "1.3.5.7")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:		})
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestConfig_LoadFiles(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing Config.LoadFiles", t, func() {
pkg/config/config_test.go:		config := New()
pkg/config/config_test.go:		file, err := ioutil.TempFile(os.TempDir(), "assh-tests")
pkg/config/config_test.go:		So(err, ShouldBeNil)
pkg/config/config_test.go:		defer os.Remove(file.Name())
pkg/config/config_test.go:		file.Write([]byte(yamlConfig))
pkg/config/config_test.go:		Convey("Loading a simple file", func() {
pkg/config/config_test.go:			err = config.LoadFiles(file.Name())
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(config.includedFiles[file.Name()], ShouldEqual, true)
pkg/config/config_test.go:			So(len(config.includedFiles), ShouldEqual, 1)
pkg/config/config_test.go:			So(len(config.Hosts), ShouldEqual, 12)
pkg/config/config_test.go:			So(config.Hosts["aaa"].HostName, ShouldEqual, "1.2.3.4")
pkg/config/config_test.go:			So(config.Hosts["aaa"].Port, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Hosts["aaa"].User, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Hosts["bbb"].HostName, ShouldEqual, "$ENV_VAR_HOSTNAME")
pkg/config/config_test.go:			So(config.Hosts["bbb"].Port, ShouldEqual, "${ENV_VAR_PORT}")
pkg/config/config_test.go:			So(config.Hosts["bbb"].User, ShouldEqual, "user-$ENV_VAR_USER-user")
pkg/config/config_test.go:			So(config.Hosts["bbb"].IdentityFile, ShouldEqual, "${NON_EXISTING_ENV_VAR}")
pkg/config/config_test.go:			So(config.Hosts["bbb"].LocalCommand, ShouldEqual, "${ENV_VAR_LOCALCOMMAND:-hello}")
pkg/config/config_test.go:			So(config.Hosts["ccc"].HostName, ShouldEqual, "5.6.7.8")
pkg/config/config_test.go:			So(config.Hosts["ccc"].Port, ShouldEqual, "24")
pkg/config/config_test.go:			So(config.Hosts["ccc"].User, ShouldEqual, "toor")
pkg/config/config_test.go:			So(config.Hosts["*.ddd"].HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(config.Hosts["*.ddd"].Port, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Hosts["*.ddd"].User, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Defaults.Port, ShouldEqual, "22")
pkg/config/config_test.go:			So(config.Defaults.User, ShouldEqual, "root")
pkg/config/config_test.go:			So(len(config.Templates), ShouldEqual, 3)
pkg/config/config_test.go:			So(config.Templates["kkk"].Port, ShouldEqual, "25")
pkg/config/config_test.go:			So(config.Templates["kkk"].User, ShouldEqual, "kkkk")
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("Loading the same file again", func() {
pkg/config/config_test.go:			config.LoadFiles(file.Name())
pkg/config/config_test.go:			err = config.LoadFiles(file.Name())
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(config.includedFiles[file.Name()], ShouldEqual, true)
pkg/config/config_test.go:			So(len(config.includedFiles), ShouldEqual, 1)
pkg/config/config_test.go:			So(len(config.Hosts), ShouldEqual, 12)
pkg/config/config_test.go:			So(config.Hosts["aaa"].HostName, ShouldEqual, "1.2.3.4")
pkg/config/config_test.go:			So(config.Hosts["aaa"].Port, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Hosts["aaa"].User, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Hosts["bbb"].HostName, ShouldEqual, "$ENV_VAR_HOSTNAME")
pkg/config/config_test.go:			So(config.Hosts["bbb"].Port, ShouldEqual, "${ENV_VAR_PORT}")
pkg/config/config_test.go:			So(config.Hosts["bbb"].User, ShouldEqual, "user-$ENV_VAR_USER-user")
pkg/config/config_test.go:			So(config.Hosts["bbb"].IdentityFile, ShouldEqual, "${NON_EXISTING_ENV_VAR}")
pkg/config/config_test.go:			So(config.Hosts["bbb"].LocalCommand, ShouldEqual, "${ENV_VAR_LOCALCOMMAND:-hello}")
pkg/config/config_test.go:			So(config.Hosts["ccc"].HostName, ShouldEqual, "5.6.7.8")
pkg/config/config_test.go:			So(config.Hosts["ccc"].Port, ShouldEqual, "24")
pkg/config/config_test.go:			So(config.Hosts["ccc"].User, ShouldEqual, "toor")
pkg/config/config_test.go:			So(config.Hosts["*.ddd"].HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(config.Hosts["*.ddd"].Port, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Hosts["*.ddd"].User, ShouldEqual, "")
pkg/config/config_test.go:			So(config.Defaults.Port, ShouldEqual, "22")
pkg/config/config_test.go:			So(config.Defaults.User, ShouldEqual, "root")
pkg/config/config_test.go:			So(len(config.Templates), ShouldEqual, 3)
pkg/config/config_test.go:			So(config.Templates["kkk"].Port, ShouldEqual, "25")
pkg/config/config_test.go:			So(config.Templates["kkk"].User, ShouldEqual, "kkkk")
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("Expand includes environment", func() {
pkg/config/config_test.go:			config := New()
pkg/config/config_test.go:			file, err := ioutil.TempFile(os.TempDir(), "assh-tests")
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			defer os.Remove(file.Name())
pkg/config/config_test.go:			file.Write([]byte(`
pkg/config/config_test.go:includes:
pkg/config/config_test.go:- $DUMMY_ENV_VAR/assh-tests*
pkg/config/config_test.go:`))
pkg/config/config_test.go:			tempDir, err := ioutil.TempDir(os.TempDir(), "assh-tests")
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			defer os.RemoveAll(tempDir)
pkg/config/config_test.go:			file2, err := ioutil.TempFile(tempDir, "assh-tests")
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			defer os.Remove(file2.Name())
pkg/config/config_test.go:			os.Setenv("DUMMY_ENV_VAR", tempDir)
pkg/config/config_test.go:			config.LoadFiles(file.Name())
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(config.includedFiles[file.Name()], ShouldEqual, true)
pkg/config/config_test.go:			So(config.includedFiles[file2.Name()], ShouldEqual, true)
pkg/config/config_test.go:			So(len(config.includedFiles), ShouldEqual, 2)
pkg/config/config_test.go:		})
pkg/config/config_test.go:	})
pkg/config/config_test.go:	// FIXME: test globbing
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestConfig_getHostByPath(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing Config.getHostByPath", t, func() {
pkg/config/config_test.go:		config := dummyConfig()
pkg/config/config_test.go:		var host *Host
pkg/config/config_test.go:		var err error
pkg/config/config_test.go:		Convey("Without gateway", func() {
pkg/config/config_test.go:			host, err = config.getHostByPath("titi", false, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host, err = config.getHostByPath("titi", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host, err = config.getHostByPath("dontexists", false, true, false)
pkg/config/config_test.go:			So(err, ShouldNotBeNil)
pkg/config/config_test.go:			So(host, ShouldBeNil)
pkg/config/config_test.go:			host, err = config.getHostByPath("dontexists", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "dontexists")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host, err = config.getHostByPath("regex.ddd", false, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host, err = config.getHostByPath("regex.ddd", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("With gateway", func() {
pkg/config/config_test.go:			host, err = config.getHostByPath("titi/gateway", false, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 1)
pkg/config/config_test.go:			host, err = config.getHostByPath("titi/gateway", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 1)
pkg/config/config_test.go:			host, err = config.getHostByPath("dontexists/gateway", false, true, false)
pkg/config/config_test.go:			So(err, ShouldNotBeNil)
pkg/config/config_test.go:			So(host, ShouldBeNil)
pkg/config/config_test.go:			host, err = config.getHostByPath("dontexists/gateway", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "dontexists")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 1)
pkg/config/config_test.go:			host, err = config.getHostByPath("regex.ddd/gateway", false, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 1)
pkg/config/config_test.go:			host, err = config.getHostByPath("regex.ddd/gateway", true, true, false)
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 1)
pkg/config/config_test.go:		})
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestConfig_GetHost(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing Config.GetHost", t, func() {
pkg/config/config_test.go:		config := dummyConfig()
pkg/config/config_test.go:		var host *Host
pkg/config/config_test.go:		var err error
pkg/config/config_test.go:		Convey("Without gateway", func() {
pkg/config/config_test.go:			host, err = config.GetHost("titi")
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host, err = config.GetHost("dontexists")
pkg/config/config_test.go:			So(err, ShouldNotBeNil)
pkg/config/config_test.go:			So(host, ShouldBeNil)
pkg/config/config_test.go:			host, err = config.GetHost("regex.ddd")
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("With gateway", func() {
pkg/config/config_test.go:			host, err = config.GetHost("titi/gateway")
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 1)
pkg/config/config_test.go:			host, err = config.GetHost("dontexists/gateway")
pkg/config/config_test.go:			So(err, ShouldNotBeNil)
pkg/config/config_test.go:			So(host, ShouldBeNil)
pkg/config/config_test.go:			// FIXME: check if this is a normal behavior
pkg/config/config_test.go:			host, err = config.GetHost("regex.ddd/gateway")
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 1)
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("Inheritance", FailureContinues, func() {
pkg/config/config_test.go:			host, err = config.GetHost("tata")
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.inherited, ShouldResemble, map[string]bool{
pkg/config/config_test.go:				"tata": true,
pkg/config/config_test.go:				"tutu": true,
pkg/config/config_test.go:				"titi": true,
pkg/config/config_test.go:				"toto": true,
pkg/config/config_test.go:			})
pkg/config/config_test.go:			So(host.ProxyCommand, ShouldEqual, "nc -v 4242")
pkg/config/config_test.go:			So(host.User, ShouldEqual, "moul")
pkg/config/config_test.go:			So(host.Gateways, ShouldResemble, []string{"titi", "direct", "1.2.3.4"})
pkg/config/config_test.go:			So(host.PasswordAuthentication, ShouldEqual, "yes")
pkg/config/config_test.go:			host, err = config.GetHost("tutu")
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.inherited, ShouldResemble, map[string]bool{
pkg/config/config_test.go:				"tutu":  true,
pkg/config/config_test.go:				"toto":  true,
pkg/config/config_test.go:				"*.ddd": true,
pkg/config/config_test.go:			})
pkg/config/config_test.go:			So(host.User, ShouldEqual, "root")
pkg/config/config_test.go:			So(host.Gateways, ShouldResemble, []string{"titi", "direct", "1.2.3.4"})
pkg/config/config_test.go:			So(host.PasswordAuthentication, ShouldEqual, "yes")
pkg/config/config_test.go:			host, err = config.GetHost("nnn")
pkg/config/config_test.go:			So(err, ShouldBeNil)
pkg/config/config_test.go:			So(host.inherited, ShouldResemble, map[string]bool{
pkg/config/config_test.go:				"nnn": true,
pkg/config/config_test.go:				"mmm": true,
pkg/config/config_test.go:			})
pkg/config/config_test.go:			So(host.User, ShouldEqual, "mmmm")
pkg/config/config_test.go:			So(host.Port, ShouldEqual, "26")
pkg/config/config_test.go:			So(host.Gateways, ShouldResemble, []string{"titi", "direct", "1.2.3.4"})
pkg/config/config_test.go:		})
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestConfig_GetHostSafe(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing Config.GetHostSafe", t, func() {
pkg/config/config_test.go:		config := dummyConfig()
pkg/config/config_test.go:		var host *Host
pkg/config/config_test.go:		Convey("Without gateway", func() {
pkg/config/config_test.go:			host = config.GetHostSafe("titi")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host = config.GetHostSafe("dontexists")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "dontexists")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:			host = config.GetHostSafe("regex.ddd")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/config_test.go:		})
pkg/config/config_test.go:		Convey("With gateway", func() {
pkg/config/config_test.go:			host = config.GetHostSafe("titi/gateway")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "titi")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 1)
pkg/config/config_test.go:			host = config.GetHostSafe("dontexists/gateway")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "dontexists")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 1)
pkg/config/config_test.go:			host = config.GetHostSafe("regex.ddd/gateway")
pkg/config/config_test.go:			So(host.Name(), ShouldEqual, "regex.ddd")
pkg/config/config_test.go:			So(host.HostName, ShouldEqual, "1.3.5.7")
pkg/config/config_test.go:			So(len(host.Gateways), ShouldEqual, 1)
pkg/config/config_test.go:		})
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestConfig_WriteSshConfig(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing Config.WriteSshConfig", t, func() {
pkg/config/config_test.go:		config := dummyConfig()
pkg/config/config_test.go:		var buffer bytes.Buffer
pkg/config/config_test.go:		err := config.WriteSshConfigTo(&buffer)
pkg/config/config_test.go:		So(err, ShouldBeNil)
pkg/config/config_test.go:		expected := `# ssh config generated by advanced-ssh-config
pkg/config/config_test.go:# host-based configuration
pkg/config/config_test.go:Host *.ddd
pkg/config/config_test.go:  HostName 1.3.5.7
pkg/config/config_test.go:  PasswordAuthentication yes
pkg/config/config_test.go:Host empty
pkg/config/config_test.go:Host nnn
pkg/config/config_test.go:  HostName 5.5.5.5
pkg/config/config_test.go:  PasswordAuthentication yes
pkg/config/config_test.go:  Port 26
pkg/config/config_test.go:  User mmmm
pkg/config/config_test.go:  # ProxyCommand nc -v 4242
pkg/config/config_test.go:  # Inherits: [mmm]
pkg/config/config_test.go:  # Gateways: [titi, direct, 1.2.3.4]
pkg/config/config_test.go:Host tata
pkg/config/config_test.go:  HostName 1.2.3.4
pkg/config/config_test.go:  PasswordAuthentication yes
pkg/config/config_test.go:  Port 22
pkg/config/config_test.go:  User moul
pkg/config/config_test.go:  # ProxyCommand nc -v 4242
pkg/config/config_test.go:  # Inherits: [tutu, titi, toto, tutu]
pkg/config/config_test.go:  # Gateways: [titi, direct, 1.2.3.4]
pkg/config/config_test.go:Host titi
pkg/config/config_test.go:  HostName tata
pkg/config/config_test.go:  Port 23
pkg/config/config_test.go:  User moul
pkg/config/config_test.go:  # ProxyCommand nc -v 4242
pkg/config/config_test.go:Host tonton
pkg/config/config_test.go:  # ResolveNameservers: [a.com, 1.2.3.4]
pkg/config/config_test.go:Host toto
pkg/config/config_test.go:  HostName 1.2.3.4
pkg/config/config_test.go:Host toutou
pkg/config/config_test.go:  # ResolveCommand: dig -t %h
pkg/config/config_test.go:Host tutu
pkg/config/config_test.go:  HostName 1.2.3.4
pkg/config/config_test.go:  PasswordAuthentication yes
pkg/config/config_test.go:  Port 22
pkg/config/config_test.go:  # Inherits: [toto, tutu, *.ddd]
pkg/config/config_test.go:  # Gateways: [titi, direct, 1.2.3.4]
pkg/config/config_test.go:# global configuration
pkg/config/config_test.go:Host *
pkg/config/config_test.go:  Port 22
pkg/config/config_test.go:  User root
pkg/config/config_test.go:  ProxyCommand assh proxy --port=%p %h
pkg/config/config_test.go:`
pkg/config/config_test.go:		So(buffer.String(), ShouldEqual, expected)
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/host.go:package config
pkg/config/host.go:import (
pkg/config/host.go:	"fmt"
pkg/config/host.go:	"io"
pkg/config/host.go:	"strings"
pkg/config/host.go:)
pkg/config/host.go:// Host defines the configuration flags of a host
pkg/config/host.go:type Host struct {
pkg/config/host.go:	// ssh-config fields
pkg/config/host.go:	AddressFamily                    string `yaml:"addressfamily,omitempty,flow" json:"AddressFamily,omitempty"`
pkg/config/host.go:	BatchMode                        string `yaml:"batchmode,omitempty,flow" json:"BatchMode,omitempty"`
pkg/config/host.go:	BindAddress                      string `yaml:"bindaddress,omitempty,flow" json:"BindAddress,omitempty"`
pkg/config/host.go:	CanonicalDomains                 string `yaml:"canonicaldomains,omitempty,flow" json:"CanonicalDomains,omitempty"`
pkg/config/host.go:	CanonicalizeFallbackLocal        string `yaml:"canonicalizefallbacklocal,omitempty,flow" json:"CanonicalizeFallbackLocal,omitempty"`
pkg/config/host.go:	CanonicalizeHostname             string `yaml:"canonicalizehostname,omitempty,flow" json:"CanonicalizeHostname,omitempty"`
pkg/config/host.go:	CanonicalizeMaxDots              string `yaml:"canonicalizemaxDots,omitempty,flow" json:"CanonicalizeMaxDots,omitempty"`
pkg/config/host.go:	CanonicalizePermittedCNAMEs      string `yaml:"canonicalizepermittedcnames,omitempty,flow" json:"CanonicalizePermittedCNAMEs,omitempty"`
pkg/config/host.go:	ChallengeResponseAuthentication  string `yaml:"challengeresponseauthentication,omitempty,flow" json:"ChallengeResponseAuthentication,omitempty"`
pkg/config/host.go:	CheckHostIP                      string `yaml:"checkhostip,omitempty,flow" json:"CheckHostIP,omitempty"`
pkg/config/host.go:	Cipher                           string `yaml:"cipher,omitempty,flow" json:"Cipher,omitempty"`
pkg/config/host.go:	Ciphers                          string `yaml:"ciphers,omitempty,flow" json:"Ciphers,omitempty"`
pkg/config/host.go:	ClearAllForwardings              string `yaml:"clearallforwardings,omitempty,flow" json:"ClearAllForwardings,omitempty"`
pkg/config/host.go:	Compression                      string `yaml:"compression,omitempty,flow" json:"Compression,omitempty"`
pkg/config/host.go:	CompressionLevel                 int    `yaml:"compressionlevel,omitempty,flow" json:"CompressionLevel,omitempty"`
pkg/config/host.go:	ConnectionAttempts               string `yaml:"connectionattempts,omitempty,flow" json:"ConnectionAttempts,omitempty"`
pkg/config/host.go:	ConnectTimeout                   int    `yaml:"connecttimeout,omitempty,flow" json:"ConnectTimeout,omitempty"`
pkg/config/host.go:	ControlMaster                    string `yaml:"controlmaster,omitempty,flow" json:"ControlMaster,omitempty"`
pkg/config/host.go:	ControlPath                      string `yaml:"controlpath,omitempty,flow" json:"ControlPath,omitempty"`
pkg/config/host.go:	ControlPersist                   string `yaml:"controlpersist,omitempty,flow" json:"ControlPersist,omitempty"`
pkg/config/host.go:	DynamicForward                   string `yaml:"dynamicforward,omitempty,flow" json:"DynamicForward,omitempty"`
pkg/config/host.go:	EnableSSHKeysign                 string `yaml:"enablesshkeysign,omitempty,flow" json:"EnableSSHKeysign,omitempty"`
pkg/config/host.go:	EscapeChar                       string `yaml:"escapechar,omitempty,flow" json:"EscapeChar,omitempty"`
pkg/config/host.go:	ExitOnForwardFailure             string `yaml:"exitonforwardfailure,omitempty,flow" json:"ExitOnForwardFailure,omitempty"`
pkg/config/host.go:	FingerprintHash                  string `yaml:"fingerprinthash,omitempty,flow" json:"FingerprintHash,omitempty"`
pkg/config/host.go:	ForwardAgent                     string `yaml:"forwardagent,omitempty,flow" json:"ForwardAgent,omitempty"`
pkg/config/host.go:	ForwardX11                       string `yaml:"forwardx11,omitempty,flow" json:"ForwardX11,omitempty"`
pkg/config/host.go:	ForwardX11Timeout                int    `yaml:"forwardx11timeout,omitempty,flow" json:"ForwardX11Timeout,omitempty"`
pkg/config/host.go:	ForwardX11Trusted                string `yaml:"forwardx11trusted,omitempty,flow" json:"ForwardX11Trusted,omitempty"`
pkg/config/host.go:	GatewayPorts                     string `yaml:"gatewayports,omitempty,flow" json:"GatewayPorts,omitempty"`
pkg/config/host.go:	GlobalKnownHostsFile             string `yaml:"globalknownhostsfile,omitempty,flow" json:"GlobalKnownHostsFile,omitempty"`
pkg/config/host.go:	GSSAPIAuthentication             string `yaml:"gssapiauthentication,omitempty,flow" json:"GSSAPIAuthentication,omitempty"`
pkg/config/host.go:	GSSAPIDelegateCredentials        string `yaml:"gssapidelegatecredentials,omitempty,flow" json:"GSSAPIDelegateCredentials,omitempty"`
pkg/config/host.go:	HashKnownHosts                   string `yaml:"hashknownhosts,omitempty,flow" json:"HashKnownHosts,omitempty"`
pkg/config/host.go:	HostbasedAuthentication          string `yaml:"hostbasedauthentication,omitempty,flow" json:"HostbasedAuthentication,omitempty"`
pkg/config/host.go:	HostbasedKeyTypes                string `yaml:"hostbasedkeytypes,omitempty,flow" json:"HostbasedKeyTypes,omitempty"`
pkg/config/host.go:	HostKeyAlgorithms                string `yaml:"hostkeyalgorithms,omitempty,flow" json:"HostKeyAlgorithms,omitempty"`
pkg/config/host.go:	HostKeyAlias                     string `yaml:"hostkeyalias,omitempty,flow" json:"HostKeyAlias,omitempty"`
pkg/config/host.go:	HostName                         string `yaml:"hostname,omitempty,flow" json:"HostName,omitempty"`
pkg/config/host.go:	IdentitiesOnly                   string `yaml:"identitiesonly,omitempty,flow" json:"IdentitiesOnly,omitempty"`
pkg/config/host.go:	IdentityFile                     string `yaml:"identityfile,omitempty,flow" json:"IdentityFile,omitempty"`
pkg/config/host.go:	IgnoreUnknown                    string `yaml:"ignoreunknown,omitempty,flow" json:"IgnoreUnknown,omitempty"`
pkg/config/host.go:	IPQoS                            string `yaml:"ipqos,omitempty,flow" json:"IPQoS,omitempty"`
pkg/config/host.go:	KbdInteractiveAuthentication     string `yaml:"kbdinteractiveauthentication,omitempty,flow" json:"KbdInteractiveAuthentication,omitempty"`
pkg/config/host.go:	KbdInteractiveDevices            string `yaml:"kbdinteractivedevices,omitempty,flow" json:"KbdInteractiveDevices,omitempty"`
pkg/config/host.go:	KexAlgorithms                    string `yaml:"kexalgorithms,omitempty,flow" json:"KexAlgorithms,omitempty"`
pkg/config/host.go:	LocalCommand                     string `yaml:"localcommand,omitempty,flow" json:"LocalCommand,omitempty"`
pkg/config/host.go:	LocalForward                     string `yaml:"localforward,omitempty,flow" json:"LocalForward,omitempty"`
pkg/config/host.go:	LogLevel                         string `yaml:"loglevel,omitempty,flow" json:"LogLevel,omitempty"`
pkg/config/host.go:	MACs                             string `yaml:"macs,omitempty,flow" json:"MACs,omitempty"`
pkg/config/host.go:	Match                            string `yaml:"match,omitempty,flow" json:"Match,omitempty"`
pkg/config/host.go:	NoHostAuthenticationForLocalhost string `yaml:"nohostauthenticationforlocalhost,omitempty,flow" json:"NoHostAuthenticationForLocalhost,omitempty"`
pkg/config/host.go:	NumberOfPasswordPrompts          string `yaml:"numberofpasswordprompts,omitempty,flow" json:"NumberOfPasswordPrompts,omitempty"`
pkg/config/host.go:	PasswordAuthentication           string `yaml:"passwordauthentication,omitempty,flow" json:"PasswordAuthentication,omitempty"`
pkg/config/host.go:	PermitLocalCommand               string `yaml:"permitlocalcommand,omitempty,flow" json:"PermitLocalCommand,omitempty"`
pkg/config/host.go:	PKCS11Provider                   string `yaml:"pkcs11provider,omitempty,flow" json:"PKCS11Provider,omitempty"`
pkg/config/host.go:	Port                             string `yaml:"port,omitempty,flow" json:"Port,omitempty"`
pkg/config/host.go:	PreferredAuthentications         string `yaml:"preferredauthentications,omitempty,flow" json:"PreferredAuthentications,omitempty"`
pkg/config/host.go:	Protocol                         string `yaml:"protocol,omitempty,flow" json:"Protocol,omitempty"`
pkg/config/host.go:	ProxyUseFdpass                   string `yaml:"proxyusefdpass,omitempty,flow" json:"ProxyUseFdpass,omitempty"`
pkg/config/host.go:	PubkeyAuthentication             string `yaml:"pubkeyauthentication,omitempty,flow" json:"PubkeyAuthentication,omitempty"`
pkg/config/host.go:	RekeyLimit                       string `yaml:"rekeylimit,omitempty,flow" json:"RekeyLimit,omitempty"`
pkg/config/host.go:	RemoteForward                    string `yaml:"remoteforward,omitempty,flow" json:"RemoteForward,omitempty"`
pkg/config/host.go:	RequestTTY                       string `yaml:"requesttty,omitempty,flow" json:"RequestTTY,omitempty"`
pkg/config/host.go:	RevokedHostKeys                  string `yaml:"revokedhostkeys,omitempty,flow" json:"RevokedHostKeys,omitempty"`
pkg/config/host.go:	RhostsRSAAuthentication          string `yaml:"rhostsrsaauthentication,omitempty,flow" json:"RhostsRSAAuthentication,omitempty"`
pkg/config/host.go:	RSAAuthentication                string `yaml:"rsaauthentication,omitempty,flow" json:"RSAAuthentication,omitempty"`
pkg/config/host.go:	SendEnv                          string `yaml:"sendenv,omitempty,flow" json:"SendEnv,omitempty"`
pkg/config/host.go:	ServerAliveCountMax              int    `yaml:"serveralivecountmax,omitempty,flow" json:"ServerAliveCountMax,omitempty"`
pkg/config/host.go:	ServerAliveInterval              int    `yaml:"serveraliveinterval,omitempty,flow" json:"ServerAliveInterval,omitempty"`
pkg/config/host.go:	StreamLocalBindMask              string `yaml:"streamlocalbindmask,omitempty,flow" json:"StreamLocalBindMask,omitempty"`
pkg/config/host.go:	StreamLocalBindUnlink            string `yaml:"streamlocalbindunlink,omitempty,flow" json:"StreamLocalBindUnlink,omitempty"`
pkg/config/host.go:	StrictHostKeyChecking            string `yaml:"stricthostkeychecking,omitempty,flow" json:"StrictHostKeyChecking,omitempty"`
pkg/config/host.go:	TCPKeepAlive                     string `yaml:"tcpkeepalive,omitempty,flow" json:"TCPKeepAlive,omitempty"`
pkg/config/host.go:	Tunnel                           string `yaml:"tunnel,omitempty,flow" json:"Tunnel,omitempty"`
pkg/config/host.go:	TunnelDevice                     string `yaml:"tunneldevice,omitempty,flow" json:"TunnelDevice,omitempty"`
pkg/config/host.go:	UpdateHostKeys                   string `yaml:"updatehostkeys,omitempty,flow" json:"UpdateHostKeys,omitempty"`
pkg/config/host.go:	UsePrivilegedPort                string `yaml:"useprivilegedport,omitempty,flow" json:"UsePrivilegedPort,omitempty"`
pkg/config/host.go:	User                             string `yaml:"user,omitempty,flow" json:"User,omitempty"`
pkg/config/host.go:	UserKnownHostsFile               string `yaml:"userknownhostsfile,omitempty,flow" json:"UserKnownHostsFile,omitempty"`
pkg/config/host.go:	VerifyHostKeyDNS                 string `yaml:"verifyhostkeydns,omitempty,flow" json:"VerifyHostKeyDNS,omitempty"`
pkg/config/host.go:	VisualHostKey                    string `yaml:"visualhostkey,omitempty,flow" json:"VisualHostKey,omitempty"`
pkg/config/host.go:	XAuthLocation                    string `yaml:"xauthlocation,omitempty,flow" json:"XAuthLocation,omitempty"`
pkg/config/host.go:	// ssh-config fields with a different behavior
pkg/config/host.go:	ProxyCommand string `yaml:"proxycommand,omitempty,flow" json:"ProxyCommand,omitempty"`
pkg/config/host.go:	// exposed assh fields
pkg/config/host.go:	Inherits           []string `yaml:"inherits,omitempty,flow" json:"Inherits,omitempty"`
pkg/config/host.go:	Gateways           []string `yaml:"gateways,omitempty,flow" json:"Gateways,omitempty"`
pkg/config/host.go:	ResolveNameservers []string `yaml:"resolvenameservers,omitempty,flow" json:"ResolveNameservers,omitempty"`
pkg/config/host.go:	ResolveCommand     string   `yaml:"resolvecommand,omitempty,flow" json:"ResolveCommand,omitempty"`
pkg/config/host.go:	// private assh fields
pkg/config/host.go:	name       string          `yaml:- json:-`
pkg/config/host.go:	inputName  string          `yaml:- json:-`
pkg/config/host.go:	isDefault  bool            `yaml:- json:-`
pkg/config/host.go:	isTemplate bool            `yaml:- json:-`
pkg/config/host.go:	inherited  map[string]bool `yaml:- json:-`
pkg/config/host.go:}
pkg/config/host.go:// NewHost returns a host with name
pkg/config/host.go:func NewHost(name string) *Host {
pkg/config/host.go:	return &Host{
pkg/config/host.go:		name: name,
pkg/config/host.go:	}
pkg/config/host.go:}
pkg/config/host.go:func (h *Host) Name() string {
pkg/config/host.go:	return h.name
pkg/config/host.go:}
pkg/config/host.go:// ApplyDefaults ensures a Host is valid by filling the missing fields with defaults
pkg/config/host.go:func (h *Host) ApplyDefaults(defaults *Host) {
pkg/config/host.go:	// ssh-config fields
pkg/config/host.go:	if h.AddressFamily == "" {
pkg/config/host.go:		h.AddressFamily = defaults.AddressFamily
pkg/config/host.go:	}
pkg/config/host.go:	h.AddressFamily = expandField(h.AddressFamily)
pkg/config/host.go:	if h.BatchMode == "" {
pkg/config/host.go:		h.BatchMode = defaults.BatchMode
pkg/config/host.go:	}
pkg/config/host.go:	h.BatchMode = expandField(h.BatchMode)
pkg/config/host.go:	if h.BindAddress == "" {
pkg/config/host.go:		h.BindAddress = defaults.BindAddress
pkg/config/host.go:	}
pkg/config/host.go:	h.BindAddress = expandField(h.BindAddress)
pkg/config/host.go:	if h.CanonicalDomains == "" {
pkg/config/host.go:		h.CanonicalDomains = defaults.CanonicalDomains
pkg/config/host.go:	}
pkg/config/host.go:	h.CanonicalDomains = expandField(h.CanonicalDomains)
pkg/config/host.go:	if h.CanonicalizeFallbackLocal == "" {
pkg/config/host.go:		h.CanonicalizeFallbackLocal = defaults.CanonicalizeFallbackLocal
pkg/config/host.go:	}
pkg/config/host.go:	h.CanonicalizeFallbackLocal = expandField(h.CanonicalizeFallbackLocal)
pkg/config/host.go:	if h.CanonicalizeHostname == "" {
pkg/config/host.go:		h.CanonicalizeHostname = defaults.CanonicalizeHostname
pkg/config/host.go:	}
pkg/config/host.go:	h.CanonicalizeHostname = expandField(h.CanonicalizeHostname)
pkg/config/host.go:	if h.CanonicalizeMaxDots == "" {
pkg/config/host.go:		h.CanonicalizeMaxDots = defaults.CanonicalizeMaxDots
pkg/config/host.go:	}
pkg/config/host.go:	h.CanonicalizeMaxDots = expandField(h.CanonicalizeMaxDots)
pkg/config/host.go:	if h.CanonicalizePermittedCNAMEs == "" {
pkg/config/host.go:		h.CanonicalizePermittedCNAMEs = defaults.CanonicalizePermittedCNAMEs
pkg/config/host.go:	}
pkg/config/host.go:	h.CanonicalizePermittedCNAMEs = expandField(h.CanonicalizePermittedCNAMEs)
pkg/config/host.go:	if h.ChallengeResponseAuthentication == "" {
pkg/config/host.go:		h.ChallengeResponseAuthentication = defaults.ChallengeResponseAuthentication
pkg/config/host.go:	}
pkg/config/host.go:	h.ChallengeResponseAuthentication = expandField(h.ChallengeResponseAuthentication)
pkg/config/host.go:	if h.CheckHostIP == "" {
pkg/config/host.go:		h.CheckHostIP = defaults.CheckHostIP
pkg/config/host.go:	}
pkg/config/host.go:	h.CheckHostIP = expandField(h.CheckHostIP)
pkg/config/host.go:	if h.Cipher == "" {
pkg/config/host.go:		h.Cipher = defaults.Cipher
pkg/config/host.go:	}
pkg/config/host.go:	h.Cipher = expandField(h.Cipher)
pkg/config/host.go:	if h.Ciphers == "" {
pkg/config/host.go:		h.Ciphers = defaults.Ciphers
pkg/config/host.go:	}
pkg/config/host.go:	h.Ciphers = expandField(h.Ciphers)
pkg/config/host.go:	if h.ClearAllForwardings == "" {
pkg/config/host.go:		h.ClearAllForwardings = defaults.ClearAllForwardings
pkg/config/host.go:	}
pkg/config/host.go:	h.ClearAllForwardings = expandField(h.ClearAllForwardings)
pkg/config/host.go:	if h.Compression == "" {
pkg/config/host.go:		h.Compression = defaults.Compression
pkg/config/host.go:	}
pkg/config/host.go:	h.Compression = expandField(h.Compression)
pkg/config/host.go:	if h.CompressionLevel == 0 {
pkg/config/host.go:		h.CompressionLevel = defaults.CompressionLevel
pkg/config/host.go:	}
pkg/config/host.go:	// h.CompressionLevel = expandField(h.CompressionLevel)
pkg/config/host.go:	if h.ConnectionAttempts == "" {
pkg/config/host.go:		h.ConnectionAttempts = defaults.ConnectionAttempts
pkg/config/host.go:	}
pkg/config/host.go:	h.ConnectionAttempts = expandField(h.ConnectionAttempts)
pkg/config/host.go:	if h.ConnectTimeout == 0 {
pkg/config/host.go:		h.ConnectTimeout = defaults.ConnectTimeout
pkg/config/host.go:	}
pkg/config/host.go:	// h.ConnectTimeout = expandField(h.ConnectTimeout)
pkg/config/host.go:	if h.ControlMaster == "" {
pkg/config/host.go:		h.ControlMaster = defaults.ControlMaster
pkg/config/host.go:	}
pkg/config/host.go:	h.ControlMaster = expandField(h.ControlMaster)
pkg/config/host.go:	if h.ControlPath == "" {
pkg/config/host.go:		h.ControlPath = defaults.ControlPath
pkg/config/host.go:	}
pkg/config/host.go:	h.ControlPath = expandField(h.ControlPath)
pkg/config/host.go:	if h.ControlPersist == "" {
pkg/config/host.go:		h.ControlPersist = defaults.ControlPersist
pkg/config/host.go:	}
pkg/config/host.go:	h.ControlPersist = expandField(h.ControlPersist)
pkg/config/host.go:	if h.DynamicForward == "" {
pkg/config/host.go:		h.DynamicForward = defaults.DynamicForward
pkg/config/host.go:	}
pkg/config/host.go:	h.DynamicForward = expandField(h.DynamicForward)
pkg/config/host.go:	if h.EnableSSHKeysign == "" {
pkg/config/host.go:		h.EnableSSHKeysign = defaults.EnableSSHKeysign
pkg/config/host.go:	}
pkg/config/host.go:	h.EnableSSHKeysign = expandField(h.EnableSSHKeysign)
pkg/config/host.go:	if h.EscapeChar == "" {
pkg/config/host.go:		h.EscapeChar = defaults.EscapeChar
pkg/config/host.go:	}
pkg/config/host.go:	h.EscapeChar = expandField(h.EscapeChar)
pkg/config/host.go:	if h.ExitOnForwardFailure == "" {
pkg/config/host.go:		h.ExitOnForwardFailure = defaults.ExitOnForwardFailure
pkg/config/host.go:	}
pkg/config/host.go:	h.ExitOnForwardFailure = expandField(h.ExitOnForwardFailure)
pkg/config/host.go:	if h.FingerprintHash == "" {
pkg/config/host.go:		h.FingerprintHash = defaults.FingerprintHash
pkg/config/host.go:	}
pkg/config/host.go:	h.FingerprintHash = expandField(h.FingerprintHash)
pkg/config/host.go:	if h.ForwardAgent == "" {
pkg/config/host.go:		h.ForwardAgent = defaults.ForwardAgent
pkg/config/host.go:	}
pkg/config/host.go:	h.ForwardAgent = expandField(h.ForwardAgent)
pkg/config/host.go:	if h.ForwardX11 == "" {
pkg/config/host.go:		h.ForwardX11 = defaults.ForwardX11
pkg/config/host.go:	}
pkg/config/host.go:	h.ForwardX11 = expandField(h.ForwardX11)
pkg/config/host.go:	if h.ForwardX11Timeout == 0 {
pkg/config/host.go:		h.ForwardX11Timeout = defaults.ForwardX11Timeout
pkg/config/host.go:	}
pkg/config/host.go:	// h.ForwardX11Timeout = expandField(h.ForwardX11Timeout)
pkg/config/host.go:	if h.ForwardX11Trusted == "" {
pkg/config/host.go:		h.ForwardX11Trusted = defaults.ForwardX11Trusted
pkg/config/host.go:	}
pkg/config/host.go:	h.ForwardX11Trusted = expandField(h.ForwardX11Trusted)
pkg/config/host.go:	if h.GatewayPorts == "" {
pkg/config/host.go:		h.GatewayPorts = defaults.GatewayPorts
pkg/config/host.go:	}
pkg/config/host.go:	h.GatewayPorts = expandField(h.GatewayPorts)
pkg/config/host.go:	if h.GlobalKnownHostsFile == "" {
pkg/config/host.go:		h.GlobalKnownHostsFile = defaults.GlobalKnownHostsFile
pkg/config/host.go:	}
pkg/config/host.go:	h.GlobalKnownHostsFile = expandField(h.GlobalKnownHostsFile)
pkg/config/host.go:	if h.GSSAPIAuthentication == "" {
pkg/config/host.go:		h.GSSAPIAuthentication = defaults.GSSAPIAuthentication
pkg/config/host.go:	}
pkg/config/host.go:	h.GSSAPIAuthentication = expandField(h.GSSAPIAuthentication)
pkg/config/host.go:	if h.GSSAPIDelegateCredentials == "" {
pkg/config/host.go:		h.GSSAPIDelegateCredentials = defaults.GSSAPIDelegateCredentials
pkg/config/host.go:	}
pkg/config/host.go:	h.GSSAPIDelegateCredentials = expandField(h.GSSAPIDelegateCredentials)
pkg/config/host.go:	if h.HashKnownHosts == "" {
pkg/config/host.go:		h.HashKnownHosts = defaults.HashKnownHosts
pkg/config/host.go:	}
pkg/config/host.go:	h.HashKnownHosts = expandField(h.HashKnownHosts)
pkg/config/host.go:	if h.HostbasedAuthentication == "" {
pkg/config/host.go:		h.HostbasedAuthentication = defaults.HostbasedAuthentication
pkg/config/host.go:	}
pkg/config/host.go:	h.HostbasedAuthentication = expandField(h.HostbasedAuthentication)
pkg/config/host.go:	if h.HostbasedKeyTypes == "" {
pkg/config/host.go:		h.HostbasedKeyTypes = defaults.HostbasedKeyTypes
pkg/config/host.go:	}
pkg/config/host.go:	h.HostbasedKeyTypes = expandField(h.HostbasedKeyTypes)
pkg/config/host.go:	if h.HostKeyAlgorithms == "" {
pkg/config/host.go:		h.HostKeyAlgorithms = defaults.HostKeyAlgorithms
pkg/config/host.go:	}
pkg/config/host.go:	h.HostKeyAlgorithms = expandField(h.HostKeyAlgorithms)
pkg/config/host.go:	if h.HostKeyAlias == "" {
pkg/config/host.go:		h.HostKeyAlias = defaults.HostKeyAlias
pkg/config/host.go:	}
pkg/config/host.go:	h.HostKeyAlias = expandField(h.HostKeyAlias)
pkg/config/host.go:	if h.HostName == "" {
pkg/config/host.go:		h.HostName = defaults.HostName
pkg/config/host.go:	}
pkg/config/host.go:	h.HostName = expandField(h.HostName)
pkg/config/host.go:	if h.IdentitiesOnly == "" {
pkg/config/host.go:		h.IdentitiesOnly = defaults.IdentitiesOnly
pkg/config/host.go:	}
pkg/config/host.go:	h.IdentitiesOnly = expandField(h.IdentitiesOnly)
pkg/config/host.go:	if h.IdentityFile == "" {
pkg/config/host.go:		h.IdentityFile = defaults.IdentityFile
pkg/config/host.go:	}
pkg/config/host.go:	h.IdentityFile = expandField(h.IdentityFile)
pkg/config/host.go:	if h.IgnoreUnknown == "" {
pkg/config/host.go:		h.IgnoreUnknown = defaults.IgnoreUnknown
pkg/config/host.go:	}
pkg/config/host.go:	h.IgnoreUnknown = expandField(h.IgnoreUnknown)
pkg/config/host.go:	if h.IPQoS == "" {
pkg/config/host.go:		h.IPQoS = defaults.IPQoS
pkg/config/host.go:	}
pkg/config/host.go:	h.IPQoS = expandField(h.IPQoS)
pkg/config/host.go:	if h.KbdInteractiveAuthentication == "" {
pkg/config/host.go:		h.KbdInteractiveAuthentication = defaults.KbdInteractiveAuthentication
pkg/config/host.go:	}
pkg/config/host.go:	h.KbdInteractiveAuthentication = expandField(h.KbdInteractiveAuthentication)
pkg/config/host.go:	if h.KbdInteractiveDevices == "" {
pkg/config/host.go:		h.KbdInteractiveDevices = defaults.KbdInteractiveDevices
pkg/config/host.go:	}
pkg/config/host.go:	h.KbdInteractiveDevices = expandField(h.KbdInteractiveDevices)
pkg/config/host.go:	if h.KexAlgorithms == "" {
pkg/config/host.go:		h.KexAlgorithms = defaults.KexAlgorithms
pkg/config/host.go:	}
pkg/config/host.go:	h.KexAlgorithms = expandField(h.KexAlgorithms)
pkg/config/host.go:	if h.LocalCommand == "" {
pkg/config/host.go:		h.LocalCommand = defaults.LocalCommand
pkg/config/host.go:	}
pkg/config/host.go:	h.LocalCommand = expandField(h.LocalCommand)
pkg/config/host.go:	if h.LocalForward == "" {
pkg/config/host.go:		h.LocalForward = defaults.LocalForward
pkg/config/host.go:	}
pkg/config/host.go:	h.LocalForward = expandField(h.LocalForward)
pkg/config/host.go:	if h.LogLevel == "" {
pkg/config/host.go:		h.LogLevel = defaults.LogLevel
pkg/config/host.go:	}
pkg/config/host.go:	h.LogLevel = expandField(h.LogLevel)
pkg/config/host.go:	if h.MACs == "" {
pkg/config/host.go:		h.MACs = defaults.MACs
pkg/config/host.go:	}
pkg/config/host.go:	h.MACs = expandField(h.MACs)
pkg/config/host.go:	if h.Match == "" {
pkg/config/host.go:		h.Match = defaults.Match
pkg/config/host.go:	}
pkg/config/host.go:	h.Match = expandField(h.Match)
pkg/config/host.go:	if h.NoHostAuthenticationForLocalhost == "" {
pkg/config/host.go:		h.NoHostAuthenticationForLocalhost = defaults.NoHostAuthenticationForLocalhost
pkg/config/host.go:	}
pkg/config/host.go:	h.NoHostAuthenticationForLocalhost = expandField(h.NoHostAuthenticationForLocalhost)
pkg/config/host.go:	if h.NumberOfPasswordPrompts == "" {
pkg/config/host.go:		h.NumberOfPasswordPrompts = defaults.NumberOfPasswordPrompts
pkg/config/host.go:	}
pkg/config/host.go:	h.NumberOfPasswordPrompts = expandField(h.NumberOfPasswordPrompts)
pkg/config/host.go:	if h.PasswordAuthentication == "" {
pkg/config/host.go:		h.PasswordAuthentication = defaults.PasswordAuthentication
pkg/config/host.go:	}
pkg/config/host.go:	h.PasswordAuthentication = expandField(h.PasswordAuthentication)
pkg/config/host.go:	if h.PermitLocalCommand == "" {
pkg/config/host.go:		h.PermitLocalCommand = defaults.PermitLocalCommand
pkg/config/host.go:	}
pkg/config/host.go:	h.PermitLocalCommand = expandField(h.PermitLocalCommand)
pkg/config/host.go:	if h.PKCS11Provider == "" {
pkg/config/host.go:		h.PKCS11Provider = defaults.PKCS11Provider
pkg/config/host.go:	}
pkg/config/host.go:	h.PKCS11Provider = expandField(h.PKCS11Provider)
pkg/config/host.go:	if h.Port == "" {
pkg/config/host.go:		h.Port = defaults.Port
pkg/config/host.go:	}
pkg/config/host.go:	h.Port = expandField(h.Port)
pkg/config/host.go:	if h.PreferredAuthentications == "" {
pkg/config/host.go:		h.PreferredAuthentications = defaults.PreferredAuthentications
pkg/config/host.go:	}
pkg/config/host.go:	h.PreferredAuthentications = expandField(h.PreferredAuthentications)
pkg/config/host.go:	if h.Protocol == "" {
pkg/config/host.go:		h.Protocol = defaults.Protocol
pkg/config/host.go:	}
pkg/config/host.go:	h.Protocol = expandField(h.Protocol)
pkg/config/host.go:	if h.ProxyCommand == "" {
pkg/config/host.go:		h.ProxyCommand = defaults.ProxyCommand
pkg/config/host.go:	}
pkg/config/host.go:	h.ProxyCommand = expandField(h.ProxyCommand)
pkg/config/host.go:	if h.ProxyUseFdpass == "" {
pkg/config/host.go:		h.ProxyUseFdpass = defaults.ProxyUseFdpass
pkg/config/host.go:	}
pkg/config/host.go:	h.ProxyUseFdpass = expandField(h.ProxyUseFdpass)
pkg/config/host.go:	if h.PubkeyAuthentication == "" {
pkg/config/host.go:		h.PubkeyAuthentication = defaults.PubkeyAuthentication
pkg/config/host.go:	}
pkg/config/host.go:	h.PubkeyAuthentication = expandField(h.PubkeyAuthentication)
pkg/config/host.go:	if h.RekeyLimit == "" {
pkg/config/host.go:		h.RekeyLimit = defaults.RekeyLimit
pkg/config/host.go:	}
pkg/config/host.go:	h.RekeyLimit = expandField(h.RekeyLimit)
pkg/config/host.go:	if h.RemoteForward == "" {
pkg/config/host.go:		h.RemoteForward = defaults.RemoteForward
pkg/config/host.go:	}
pkg/config/host.go:	h.RemoteForward = expandField(h.RemoteForward)
pkg/config/host.go:	if h.RequestTTY == "" {
pkg/config/host.go:		h.RequestTTY = defaults.RequestTTY
pkg/config/host.go:	}
pkg/config/host.go:	h.RequestTTY = expandField(h.RequestTTY)
pkg/config/host.go:	if h.RevokedHostKeys == "" {
pkg/config/host.go:		h.RevokedHostKeys = defaults.RevokedHostKeys
pkg/config/host.go:	}
pkg/config/host.go:	h.RevokedHostKeys = expandField(h.RevokedHostKeys)
pkg/config/host.go:	if h.RhostsRSAAuthentication == "" {
pkg/config/host.go:		h.RhostsRSAAuthentication = defaults.RhostsRSAAuthentication
pkg/config/host.go:	}
pkg/config/host.go:	h.RhostsRSAAuthentication = expandField(h.RhostsRSAAuthentication)
pkg/config/host.go:	if h.RSAAuthentication == "" {
pkg/config/host.go:		h.RSAAuthentication = defaults.RSAAuthentication
pkg/config/host.go:	}
pkg/config/host.go:	h.RSAAuthentication = expandField(h.RSAAuthentication)
pkg/config/host.go:	if h.SendEnv == "" {
pkg/config/host.go:		h.SendEnv = defaults.SendEnv
pkg/config/host.go:	}
pkg/config/host.go:	h.SendEnv = expandField(h.SendEnv)
pkg/config/host.go:	if h.ServerAliveCountMax == 0 {
pkg/config/host.go:		h.ServerAliveCountMax = defaults.ServerAliveCountMax
pkg/config/host.go:	}
pkg/config/host.go:	// h.ServerAliveCountMax = expandField(h.ServerAliveCountMax)
pkg/config/host.go:	if h.ServerAliveInterval == 0 {
pkg/config/host.go:		h.ServerAliveInterval = defaults.ServerAliveInterval
pkg/config/host.go:	}
pkg/config/host.go:	// h.ServerAliveInterval = expandField(h.ServerAliveInterval)
pkg/config/host.go:	if h.StreamLocalBindMask == "" {
pkg/config/host.go:		h.StreamLocalBindMask = defaults.StreamLocalBindMask
pkg/config/host.go:	}
pkg/config/host.go:	h.StreamLocalBindMask = expandField(h.StreamLocalBindMask)
pkg/config/host.go:	if h.StreamLocalBindUnlink == "" {
pkg/config/host.go:		h.StreamLocalBindUnlink = defaults.StreamLocalBindUnlink
pkg/config/host.go:	}
pkg/config/host.go:	h.StreamLocalBindUnlink = expandField(h.StreamLocalBindUnlink)
pkg/config/host.go:	if h.StrictHostKeyChecking == "" {
pkg/config/host.go:		h.StrictHostKeyChecking = defaults.StrictHostKeyChecking
pkg/config/host.go:	}
pkg/config/host.go:	h.StrictHostKeyChecking = expandField(h.StrictHostKeyChecking)
pkg/config/host.go:	if h.TCPKeepAlive == "" {
pkg/config/host.go:		h.TCPKeepAlive = defaults.TCPKeepAlive
pkg/config/host.go:	}
pkg/config/host.go:	h.TCPKeepAlive = expandField(h.TCPKeepAlive)
pkg/config/host.go:	if h.Tunnel == "" {
pkg/config/host.go:		h.Tunnel = defaults.Tunnel
pkg/config/host.go:	}
pkg/config/host.go:	h.Tunnel = expandField(h.Tunnel)
pkg/config/host.go:	if h.TunnelDevice == "" {
pkg/config/host.go:		h.TunnelDevice = defaults.TunnelDevice
pkg/config/host.go:	}
pkg/config/host.go:	h.TunnelDevice = expandField(h.TunnelDevice)
pkg/config/host.go:	if h.UpdateHostKeys == "" {
pkg/config/host.go:		h.UpdateHostKeys = defaults.UpdateHostKeys
pkg/config/host.go:	}
pkg/config/host.go:	h.UpdateHostKeys = expandField(h.UpdateHostKeys)
pkg/config/host.go:	if h.UsePrivilegedPort == "" {
pkg/config/host.go:		h.UsePrivilegedPort = defaults.UsePrivilegedPort
pkg/config/host.go:	}
pkg/config/host.go:	h.UsePrivilegedPort = expandField(h.UsePrivilegedPort)
pkg/config/host.go:	if h.User == "" {
pkg/config/host.go:		h.User = defaults.User
pkg/config/host.go:	}
pkg/config/host.go:	h.User = expandField(h.User)
pkg/config/host.go:	if h.UserKnownHostsFile == "" {
pkg/config/host.go:		h.UserKnownHostsFile = defaults.UserKnownHostsFile
pkg/config/host.go:	}
pkg/config/host.go:	h.UserKnownHostsFile = expandField(h.UserKnownHostsFile)
pkg/config/host.go:	if h.VerifyHostKeyDNS == "" {
pkg/config/host.go:		h.VerifyHostKeyDNS = defaults.VerifyHostKeyDNS
pkg/config/host.go:	}
pkg/config/host.go:	h.VerifyHostKeyDNS = expandField(h.VerifyHostKeyDNS)
pkg/config/host.go:	if h.VisualHostKey == "" {
pkg/config/host.go:		h.VisualHostKey = defaults.VisualHostKey
pkg/config/host.go:	}
pkg/config/host.go:	h.VisualHostKey = expandField(h.VisualHostKey)
pkg/config/host.go:	if h.XAuthLocation == "" {
pkg/config/host.go:		h.XAuthLocation = defaults.XAuthLocation
pkg/config/host.go:	}
pkg/config/host.go:	h.XAuthLocation = expandField(h.XAuthLocation)
pkg/config/host.go:	// ssh-config fields with a different behavior
pkg/config/host.go:	if h.ProxyCommand == "" {
pkg/config/host.go:		h.ProxyCommand = defaults.ProxyCommand
pkg/config/host.go:	}
pkg/config/host.go:	h.ProxyCommand = expandField(h.ProxyCommand)
pkg/config/host.go:	// exposed assh fields
pkg/config/host.go:	if len(h.ResolveNameservers) == 0 {
pkg/config/host.go:		h.ResolveNameservers = defaults.ResolveNameservers
pkg/config/host.go:	}
pkg/config/host.go:	// h.ResolveNameservers = expandField(h.ResolveNameservers)
pkg/config/host.go:	if h.ResolveCommand == "" {
pkg/config/host.go:		h.ResolveCommand = defaults.ResolveCommand
pkg/config/host.go:	}
pkg/config/host.go:	h.ResolveCommand = expandField(h.ResolveCommand)
pkg/config/host.go:	if len(h.Gateways) == 0 {
pkg/config/host.go:		h.Gateways = defaults.Gateways
pkg/config/host.go:	}
pkg/config/host.go:	// h.Gateways = expandField(h.Gateways)
pkg/config/host.go:	if len(h.Inherits) == 0 {
pkg/config/host.go:		h.Inherits = defaults.Inherits
pkg/config/host.go:	}
pkg/config/host.go:	// h.Inherits = expandField(h.Inherits)
pkg/config/host.go:	// private assh fields
pkg/config/host.go:	// h.inherited = make(map[string]bool, 0)
pkg/config/host.go:	if h.inputName == "" {
pkg/config/host.go:		h.inputName = h.name
pkg/config/host.go:	}
pkg/config/host.go:	h.inputName = expandField(h.inputName)
pkg/config/host.go:	// Extra defaults
pkg/config/host.go:	if h.Port == "" {
pkg/config/host.go:		h.Port = "22"
pkg/config/host.go:	}
pkg/config/host.go:}
pkg/config/host.go:func (h *Host) WriteSshConfigTo(w io.Writer) error {
pkg/config/host.go:	fmt.Fprintf(w, "Host %s\n", h.Name())
pkg/config/host.go:	// ssh-config fields
pkg/config/host.go:	if h.AddressFamily != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  AddressFamily %s\n", h.AddressFamily)
pkg/config/host.go:	}
pkg/config/host.go:	if h.BatchMode != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  BatchMode %s\n", h.BatchMode)
pkg/config/host.go:	}
pkg/config/host.go:	if h.BindAddress != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  BindAddress %s\n", h.BindAddress)
pkg/config/host.go:	}
pkg/config/host.go:	if h.CanonicalDomains != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  CanonicalDomains %s\n", h.CanonicalDomains)
pkg/config/host.go:	}
pkg/config/host.go:	if h.CanonicalizeFallbackLocal != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  CanonicalizeFallbackLocal %s\n", h.CanonicalizeFallbackLocal)
pkg/config/host.go:	}
pkg/config/host.go:	if h.CanonicalizeHostname != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  CanonicalizeHostname %s\n", h.CanonicalizeHostname)
pkg/config/host.go:	}
pkg/config/host.go:	if h.CanonicalizeMaxDots != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  CanonicalizeMaxDots %s\n", h.CanonicalizeMaxDots)
pkg/config/host.go:	}
pkg/config/host.go:	if h.CanonicalizePermittedCNAMEs != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  CanonicalizePermittedCNAMEs %s\n", h.CanonicalizePermittedCNAMEs)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ChallengeResponseAuthentication != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ChallengeResponseAuthentication %s\n", h.ChallengeResponseAuthentication)
pkg/config/host.go:	}
pkg/config/host.go:	if h.CheckHostIP != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  CheckHostIP %s\n", h.CheckHostIP)
pkg/config/host.go:	}
pkg/config/host.go:	if h.Cipher != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  Cipher %s\n", h.Cipher)
pkg/config/host.go:	}
pkg/config/host.go:	if h.Ciphers != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  Ciphers %s\n", h.Ciphers)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ClearAllForwardings != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ClearAllForwardings %s\n", h.ClearAllForwardings)
pkg/config/host.go:	}
pkg/config/host.go:	if h.Compression != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  Compression %s\n", h.Compression)
pkg/config/host.go:	}
pkg/config/host.go:	if h.CompressionLevel != 0 {
pkg/config/host.go:		fmt.Fprintf(w, "  CompressionLevel %d\n", h.CompressionLevel)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ConnectionAttempts != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ConnectionAttempts %s\n", h.ConnectionAttempts)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ConnectTimeout != 0 {
pkg/config/host.go:		fmt.Fprintf(w, "  ConnectTimeout %d\n", h.ConnectTimeout)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ControlMaster != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ControlMaster %s\n", h.ControlMaster)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ControlPath != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ControlPath %s\n", h.ControlPath)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ControlPersist != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ControlPersist %s\n", h.ControlPersist)
pkg/config/host.go:	}
pkg/config/host.go:	if h.DynamicForward != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  DynamicForward %s\n", h.DynamicForward)
pkg/config/host.go:	}
pkg/config/host.go:	if h.EnableSSHKeysign != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  EnableSSHKeysign %s\n", h.EnableSSHKeysign)
pkg/config/host.go:	}
pkg/config/host.go:	if h.EscapeChar != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  EscapeChar %s\n", h.EscapeChar)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ExitOnForwardFailure != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ExitOnForwardFailure %s\n", h.ExitOnForwardFailure)
pkg/config/host.go:	}
pkg/config/host.go:	if h.FingerprintHash != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  FingerprintHash %s\n", h.FingerprintHash)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ForwardAgent != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ForwardAgent %s\n", h.ForwardAgent)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ForwardX11 != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ForwardX11 %s\n", h.ForwardX11)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ForwardX11Timeout != 0 {
pkg/config/host.go:		fmt.Fprintf(w, "  ForwardX11Timeout %d\n", h.ForwardX11Timeout)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ForwardX11Trusted != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ForwardX11Trusted %s\n", h.ForwardX11Trusted)
pkg/config/host.go:	}
pkg/config/host.go:	if h.GatewayPorts != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  GatewayPorts %s\n", h.GatewayPorts)
pkg/config/host.go:	}
pkg/config/host.go:	if h.GlobalKnownHostsFile != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  GlobalKnownHostsFile %s\n", h.GlobalKnownHostsFile)
pkg/config/host.go:	}
pkg/config/host.go:	if h.GSSAPIAuthentication != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  GSSAPIAuthentication %s\n", h.GSSAPIAuthentication)
pkg/config/host.go:	}
pkg/config/host.go:	if h.GSSAPIDelegateCredentials != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  GSSAPIDelegateCredentials %s\n", h.GSSAPIDelegateCredentials)
pkg/config/host.go:	}
pkg/config/host.go:	if h.HashKnownHosts != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  HashKnownHosts %s\n", h.HashKnownHosts)
pkg/config/host.go:	}
pkg/config/host.go:	if h.HostbasedAuthentication != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  HostbasedAuthentication %s\n", h.HostbasedAuthentication)
pkg/config/host.go:	}
pkg/config/host.go:	if h.HostbasedKeyTypes != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  HostbasedKeyTypes %s\n", h.HostbasedKeyTypes)
pkg/config/host.go:	}
pkg/config/host.go:	if h.HostKeyAlgorithms != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  HostKeyAlgorithms %s\n", h.HostKeyAlgorithms)
pkg/config/host.go:	}
pkg/config/host.go:	if h.HostKeyAlias != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  HostKeyAlias %s\n", h.HostKeyAlias)
pkg/config/host.go:	}
pkg/config/host.go:	if h.HostName != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  HostName %s\n", h.HostName)
pkg/config/host.go:	}
pkg/config/host.go:	if h.IdentitiesOnly != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  IdentitiesOnly %s\n", h.IdentitiesOnly)
pkg/config/host.go:	}
pkg/config/host.go:	if h.IdentityFile != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  IdentityFile %s\n", h.IdentityFile)
pkg/config/host.go:	}
pkg/config/host.go:	if h.IgnoreUnknown != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  IgnoreUnknown %s\n", h.IgnoreUnknown)
pkg/config/host.go:	}
pkg/config/host.go:	if h.IPQoS != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  IPQoS %s\n", h.IPQoS)
pkg/config/host.go:	}
pkg/config/host.go:	if h.KbdInteractiveAuthentication != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  KbdInteractiveAuthentication %s\n", h.KbdInteractiveAuthentication)
pkg/config/host.go:	}
pkg/config/host.go:	if h.KbdInteractiveDevices != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  KbdInteractiveDevices %s\n", h.KbdInteractiveDevices)
pkg/config/host.go:	}
pkg/config/host.go:	if h.KexAlgorithms != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  KexAlgorithms %s\n", h.KexAlgorithms)
pkg/config/host.go:	}
pkg/config/host.go:	if h.LocalCommand != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  LocalCommand %s\n", h.LocalCommand)
pkg/config/host.go:	}
pkg/config/host.go:	if h.LocalForward != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  LocalForward %s\n", h.LocalForward)
pkg/config/host.go:	}
pkg/config/host.go:	if h.LogLevel != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  LogLevel %s\n", h.LogLevel)
pkg/config/host.go:	}
pkg/config/host.go:	if h.MACs != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  MACs %s\n", h.MACs)
pkg/config/host.go:	}
pkg/config/host.go:	if h.Match != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  Match %s\n", h.Match)
pkg/config/host.go:	}
pkg/config/host.go:	if h.NoHostAuthenticationForLocalhost != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  NoHostAuthenticationForLocalhost %s\n", h.NoHostAuthenticationForLocalhost)
pkg/config/host.go:	}
pkg/config/host.go:	if h.NumberOfPasswordPrompts != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  NumberOfPasswordPrompts %s\n", h.NumberOfPasswordPrompts)
pkg/config/host.go:	}
pkg/config/host.go:	if h.PasswordAuthentication != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  PasswordAuthentication %s\n", h.PasswordAuthentication)
pkg/config/host.go:	}
pkg/config/host.go:	if h.PermitLocalCommand != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  PermitLocalCommand %s\n", h.PermitLocalCommand)
pkg/config/host.go:	}
pkg/config/host.go:	if h.PKCS11Provider != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  PKCS11Provider %s\n", h.PKCS11Provider)
pkg/config/host.go:	}
pkg/config/host.go:	if h.Port != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  Port %s\n", h.Port)
pkg/config/host.go:	}
pkg/config/host.go:	if h.PreferredAuthentications != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  PreferredAuthentications %s\n", h.PreferredAuthentications)
pkg/config/host.go:	}
pkg/config/host.go:	if h.Protocol != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  Protocol %s\n", h.Protocol)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ProxyUseFdpass != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  ProxyUseFdpass %s\n", h.ProxyUseFdpass)
pkg/config/host.go:	}
pkg/config/host.go:	if h.PubkeyAuthentication != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  PubkeyAuthentication %s\n", h.PubkeyAuthentication)
pkg/config/host.go:	}
pkg/config/host.go:	if h.RekeyLimit != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  RekeyLimit %s\n", h.RekeyLimit)
pkg/config/host.go:	}
pkg/config/host.go:	if h.RemoteForward != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  RemoteForward %s\n", h.RemoteForward)
pkg/config/host.go:	}
pkg/config/host.go:	if h.RequestTTY != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  RequestTTY %s\n", h.RequestTTY)
pkg/config/host.go:	}
pkg/config/host.go:	if h.RevokedHostKeys != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  RevokedHostKeys %s\n", h.RevokedHostKeys)
pkg/config/host.go:	}
pkg/config/host.go:	if h.RhostsRSAAuthentication != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  RhostsRSAAuthentication %s\n", h.RhostsRSAAuthentication)
pkg/config/host.go:	}
pkg/config/host.go:	if h.RSAAuthentication != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  RSAAuthentication %s\n", h.RSAAuthentication)
pkg/config/host.go:	}
pkg/config/host.go:	if h.SendEnv != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  SendEnv %s\n", h.SendEnv)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ServerAliveCountMax != 0 {
pkg/config/host.go:		fmt.Fprintf(w, "  ServerAliveCountMax %d\n", h.ServerAliveCountMax)
pkg/config/host.go:	}
pkg/config/host.go:	if h.ServerAliveInterval != 0 {
pkg/config/host.go:		fmt.Fprintf(w, "  ServerAliveInterval %d\n", h.ServerAliveInterval)
pkg/config/host.go:	}
pkg/config/host.go:	if h.StreamLocalBindMask != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  StreamLocalBindMask %s\n", h.StreamLocalBindMask)
pkg/config/host.go:	}
pkg/config/host.go:	if h.StreamLocalBindUnlink != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  StreamLocalBindUnlink %s\n", h.StreamLocalBindUnlink)
pkg/config/host.go:	}
pkg/config/host.go:	if h.StrictHostKeyChecking != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  StrictHostKeyChecking %s\n", h.StrictHostKeyChecking)
pkg/config/host.go:	}
pkg/config/host.go:	if h.TCPKeepAlive != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  TCPKeepAlive %s\n", h.TCPKeepAlive)
pkg/config/host.go:	}
pkg/config/host.go:	if h.Tunnel != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  Tunnel %s\n", h.Tunnel)
pkg/config/host.go:	}
pkg/config/host.go:	if h.TunnelDevice != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  TunnelDevice %s\n", h.TunnelDevice)
pkg/config/host.go:	}
pkg/config/host.go:	if h.UpdateHostKeys != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  UpdateHostKeys %s\n", h.UpdateHostKeys)
pkg/config/host.go:	}
pkg/config/host.go:	if h.UsePrivilegedPort != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  UsePrivilegedPort %s\n", h.UsePrivilegedPort)
pkg/config/host.go:	}
pkg/config/host.go:	if h.User != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  User %s\n", h.User)
pkg/config/host.go:	}
pkg/config/host.go:	if h.UserKnownHostsFile != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  UserKnownHostsFile %s\n", h.UserKnownHostsFile)
pkg/config/host.go:	}
pkg/config/host.go:	if h.VerifyHostKeyDNS != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  VerifyHostKeyDNS %s\n", h.VerifyHostKeyDNS)
pkg/config/host.go:	}
pkg/config/host.go:	if h.VisualHostKey != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  VisualHostKey %s\n", h.VisualHostKey)
pkg/config/host.go:	}
pkg/config/host.go:	if h.XAuthLocation != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  XAuthLocation %s\n", h.XAuthLocation)
pkg/config/host.go:	}
pkg/config/host.go:	// ssh-config fields with a different behavior
pkg/config/host.go:	if h.isDefault {
pkg/config/host.go:		asshBinary := "assh"
pkg/config/host.go:		fmt.Fprintf(w, "  ProxyCommand %s proxy --port=%%p %%h\n", asshBinary)
pkg/config/host.go:	} else {
pkg/config/host.go:		if h.ProxyCommand != "" {
pkg/config/host.go:			fmt.Fprintf(w, "  # ProxyCommand %s\n", h.ProxyCommand)
pkg/config/host.go:		}
pkg/config/host.go:	}
pkg/config/host.go:	// assh fields
pkg/config/host.go:	if len(h.Inherits) > 0 {
pkg/config/host.go:		fmt.Fprintf(w, "  # Inherits: [%s]\n", strings.Join(h.Inherits, ", "))
pkg/config/host.go:	}
pkg/config/host.go:	if len(h.Gateways) > 0 {
pkg/config/host.go:		fmt.Fprintf(w, "  # Gateways: [%s]\n", strings.Join(h.Gateways, ", "))
pkg/config/host.go:	}
pkg/config/host.go:	if len(h.ResolveNameservers) > 0 {
pkg/config/host.go:		fmt.Fprintf(w, "  # ResolveNameservers: [%s]\n", strings.Join(h.ResolveNameservers, ", "))
pkg/config/host.go:	}
pkg/config/host.go:	if h.ResolveCommand != "" {
pkg/config/host.go:		fmt.Fprintf(w, "  # ResolveCommand: %s\n", h.ResolveCommand)
pkg/config/host.go:	}
pkg/config/host.go:	return nil
pkg/config/host.go:}
pkg/config/host.go:func (h *Host) ExpandString(input string) string {
pkg/config/host.go:	output := input
pkg/config/host.go:	// name of the host in config
pkg/config/host.go:	output = strings.Replace(output, "%name", h.Name(), -1)
pkg/config/host.go:	// original target host name specified on the command line
pkg/config/host.go:	output = strings.Replace(output, "%n", h.inputName, -1)
pkg/config/host.go:	// target host name
pkg/config/host.go:	output = strings.Replace(output, "%h", h.HostName, -1)
pkg/config/host.go:	// port
pkg/config/host.go:	output = strings.Replace(output, "%p", fmt.Sprintf("%s", h.Port), -1)
pkg/config/host.go:	// FIXME: add
pkg/config/host.go:	//   %L -> first component of the local host name
pkg/config/host.go:	//   %l -> local host name
pkg/config/host.go:	//   %r -> remote login username
pkg/config/host.go:	//   %u -> username of the user running assh
pkg/config/host.go:	//   %r -> remote login username
pkg/config/host.go:	return output
pkg/config/host.go:}
pkg/config/host_test.go:package config
pkg/config/host_test.go:import (
pkg/config/host_test.go:	"testing"
pkg/config/host_test.go:)
pkg/config/host_test.go:func TestHost_ApplyDefaults(t *testing.T) {
pkg/config/host_test.go:	Convey("Testing Host.ApplyDefaults", t, func() {
pkg/config/host_test.go:		Convey("Standard configuration", func() {
pkg/config/host_test.go:			host := &Host{
pkg/config/host_test.go:				name:     "example",
pkg/config/host_test.go:				HostName: "example.com",
pkg/config/host_test.go:				User:     "root",
pkg/config/host_test.go:			}
pkg/config/host_test.go:			defaults := &Host{
pkg/config/host_test.go:				User: "bobby",
pkg/config/host_test.go:				Port: "42",
pkg/config/host_test.go:			}
pkg/config/host_test.go:			host.ApplyDefaults(defaults)
pkg/config/host_test.go:			So(host.Port, ShouldEqual, "42")
pkg/config/host_test.go:			So(host.Name(), ShouldEqual, "example")
pkg/config/host_test.go:			So(host.HostName, ShouldEqual, "example.com")
pkg/config/host_test.go:			So(host.User, ShouldEqual, "root")
pkg/config/host_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/host_test.go:			So(host.ProxyCommand, ShouldEqual, "")
pkg/config/host_test.go:			So(len(host.ResolveNameservers), ShouldEqual, 0)
pkg/config/host_test.go:			So(host.ResolveCommand, ShouldEqual, "")
pkg/config/host_test.go:			So(host.ControlPath, ShouldEqual, "")
pkg/config/host_test.go:		})
pkg/config/host_test.go:		Convey("Empty configuration", func() {
pkg/config/host_test.go:			host := &Host{}
pkg/config/host_test.go:			defaults := &Host{}
pkg/config/host_test.go:			host.ApplyDefaults(defaults)
pkg/config/host_test.go:			So(host.Port, ShouldEqual, "22")
pkg/config/host_test.go:			So(host.Name(), ShouldEqual, "")
pkg/config/host_test.go:			So(host.HostName, ShouldEqual, "")
pkg/config/host_test.go:			So(host.User, ShouldEqual, "")
pkg/config/host_test.go:			So(len(host.Gateways), ShouldEqual, 0)
pkg/config/host_test.go:			So(host.ProxyCommand, ShouldEqual, "")
pkg/config/host_test.go:			So(len(host.ResolveNameservers), ShouldEqual, 0)
pkg/config/host_test.go:			So(host.ResolveCommand, ShouldEqual, "")
pkg/config/host_test.go:			So(host.ControlPath, ShouldEqual, "")
pkg/config/host_test.go:		})
pkg/config/host_test.go:	})
pkg/config/host_test.go:}
pkg/config/host_test.go:func TestHost_ExpandString(t *testing.T) {
pkg/config/host_test.go:	Convey("Testing Host.ExpandString()", t, func() {
pkg/config/host_test.go:		host := NewHost("abc")
pkg/config/host_test.go:		host.HostName = "1.2.3.4"
pkg/config/host_test.go:		host.Port = "42"
pkg/config/host_test.go:		var input, output, expected string
pkg/config/host_test.go:		input = "ls -la"
pkg/config/host_test.go:		output = host.ExpandString(input)
pkg/config/host_test.go:		expected = "ls -la"
pkg/config/host_test.go:		So(output, ShouldEqual, expected)
pkg/config/host_test.go:		input = "nc %h %p"
pkg/config/host_test.go:		output = host.ExpandString(input)
pkg/config/host_test.go:		expected = "nc 1.2.3.4 42"
pkg/config/host_test.go:		So(output, ShouldEqual, expected)
pkg/config/host_test.go:		input = "ssh %name"
pkg/config/host_test.go:		output = host.ExpandString(input)
pkg/config/host_test.go:		expected = "ssh abc"
pkg/config/host_test.go:		So(output, ShouldEqual, expected)
pkg/config/host_test.go:		input = "echo %h %p %name %h %p %name"
pkg/config/host_test.go:		output = host.ExpandString(input)
pkg/config/host_test.go:		expected = "echo 1.2.3.4 42 abc 1.2.3.4 42 abc"
pkg/config/host_test.go:		So(output, ShouldEqual, expected)
pkg/config/host_test.go:	})
pkg/config/host_test.go:}
pkg/config/utils.go:package config
pkg/config/utils.go:import (
pkg/config/utils.go:	"errors"
pkg/config/utils.go:	"os"
pkg/config/utils.go:	"strings"
pkg/config/utils.go:)
pkg/config/utils.go:func expandUser(path string) (string, error) {
pkg/config/utils.go:	// Expand variables
pkg/config/utils.go:	path = os.ExpandEnv(path)
pkg/config/utils.go:	if path[:2] == "~/" {
pkg/config/utils.go:		homeDir := os.Getenv("HOME") // *nix
pkg/config/utils.go:		if homeDir == "" {           // Windows
pkg/config/utils.go:			homeDir = os.Getenv("USERPROFILE")
pkg/config/utils.go:		}
pkg/config/utils.go:		if homeDir == "" {
pkg/config/utils.go:			return "", errors.New("user home directory not found")
pkg/config/utils.go:		}
pkg/config/utils.go:		return strings.Replace(path, "~", homeDir, 1), nil
pkg/config/utils.go:	}
pkg/config/utils.go:	return path, nil
pkg/config/utils.go:}
pkg/config/utils.go:// expandField expands environment variables in field
pkg/config/utils.go:func expandField(input string) string {
pkg/config/utils.go:	if input == "" {
pkg/config/utils.go:		return ""
pkg/config/utils.go:	}
pkg/config/utils.go:	return os.ExpandEnv(input)
pkg/config/utils.go:}
pkg/config/utils_test.go:package config
pkg/flexyaml/flexyaml.go:package flexyaml
pkg/flexyaml/flexyaml.go:import (
pkg/flexyaml/flexyaml.go:	"fmt"
pkg/flexyaml/flexyaml.go:	"strings"
pkg/flexyaml/flexyaml.go:)
pkg/flexyaml/flexyaml.go:func MakeFlexible(in []byte) ([]byte, error) {
pkg/flexyaml/flexyaml.go:	lines := []string{}
pkg/flexyaml/flexyaml.go:	for _, line := range strings.Split(string(in), "\n") {
pkg/flexyaml/flexyaml.go:		if strings.Contains(line, ":") {
pkg/flexyaml/flexyaml.go:			parts := strings.SplitN(line, ":", 2)
pkg/flexyaml/flexyaml.go:			line = fmt.Sprintf("%s:%s", strings.ToLower(parts[0]), parts[1])
pkg/flexyaml/flexyaml.go:		}
pkg/flexyaml/flexyaml.go:		lines = append(lines, line)
pkg/flexyaml/flexyaml.go:	}
pkg/flexyaml/flexyaml.go:	return []byte(strings.Join(lines, "\n")), nil
pkg/flexyaml/flexyaml.go:}
pkg/flexyaml/flexyaml.go:func Unmarshal(in []byte, out interface{}) (err error) {
pkg/flexyaml/flexyaml.go:	flex, err := MakeFlexible(in)
pkg/flexyaml/flexyaml.go:	if err != nil {
pkg/flexyaml/flexyaml.go:		return err
pkg/flexyaml/flexyaml.go:	}
pkg/flexyaml/flexyaml.go:	return yaml.Unmarshal(flex, out)
pkg/flexyaml/flexyaml.go:}
pkg/flexyaml/flexyaml_test.go:package flexyaml
pkg/flexyaml/flexyaml_test.go:import (
pkg/flexyaml/flexyaml_test.go:	"testing"
pkg/flexyaml/flexyaml_test.go:)
pkg/flexyaml/flexyaml_test.go:func TestMakeFlexible(t *testing.T) {
pkg/flexyaml/flexyaml_test.go:	Convey("Testing MakeFlexible()", t, FailureContinues, func() {
pkg/flexyaml/flexyaml_test.go:		var input, output []byte
pkg/flexyaml/flexyaml_test.go:		var err error
pkg/flexyaml/flexyaml_test.go:		input = []byte("somekey: ok")
pkg/flexyaml/flexyaml_test.go:		output, err = MakeFlexible(input)
pkg/flexyaml/flexyaml_test.go:		So(err, ShouldBeNil)
pkg/flexyaml/flexyaml_test.go:		So(output, ShouldResemble, []byte("somekey: ok"))
pkg/flexyaml/flexyaml_test.go:		input = []byte("SomeKey: ok")
pkg/flexyaml/flexyaml_test.go:		output, err = MakeFlexible(input)
pkg/flexyaml/flexyaml_test.go:		So(err, ShouldBeNil)
pkg/flexyaml/flexyaml_test.go:		So(output, ShouldResemble, []byte("somekey: ok"))
pkg/flexyaml/flexyaml_test.go:		input = []byte("SOMEKEY: ok")
pkg/flexyaml/flexyaml_test.go:		output, err = MakeFlexible(input)
pkg/flexyaml/flexyaml_test.go:		So(err, ShouldBeNil)
pkg/flexyaml/flexyaml_test.go:		So(output, ShouldResemble, []byte("somekey: ok"))
pkg/flexyaml/flexyaml_test.go:		input = []byte("sOmEkEy: ok")
pkg/flexyaml/flexyaml_test.go:		output, err = MakeFlexible(input)
pkg/flexyaml/flexyaml_test.go:		So(err, ShouldBeNil)
pkg/flexyaml/flexyaml_test.go:		So(output, ShouldResemble, []byte("somekey: ok"))
pkg/flexyaml/flexyaml_test.go:		expected := []byte(`hosts:
pkg/flexyaml/flexyaml_test.go:  aaa:
pkg/flexyaml/flexyaml_test.go:    hostname: 1.2.3.4
pkg/flexyaml/flexyaml_test.go:  bbb:
pkg/flexyaml/flexyaml_test.go:    port: 21
pkg/flexyaml/flexyaml_test.go:  ccc:
pkg/flexyaml/flexyaml_test.go:    hostname: 5.6.7.8
pkg/flexyaml/flexyaml_test.go:    port: 24
pkg/flexyaml/flexyaml_test.go:    user: Toor
pkg/flexyaml/flexyaml_test.go:  "*.ddd":
pkg/flexyaml/flexyaml_test.go:    hostname: 1.3.5.7
pkg/flexyaml/flexyaml_test.go:  eee:
pkg/flexyaml/flexyaml_test.go:    inherits:
pkg/flexyaml/flexyaml_test.go:    - aaa
pkg/flexyaml/flexyaml_test.go:    - bBb
pkg/flexyaml/flexyaml_test.go:    - aaa
pkg/flexyaml/flexyaml_test.go:  fff:
pkg/flexyaml/flexyaml_test.go:    inherits:
pkg/flexyaml/flexyaml_test.go:    - bbb
pkg/flexyaml/flexyaml_test.go:    - eee
pkg/flexyaml/flexyaml_test.go:    - "*.ddd"
pkg/flexyaml/flexyaml_test.go:  ggg:
pkg/flexyaml/flexyaml_test.go:    gateways:
pkg/flexyaml/flexyaml_test.go:    - direct
pkg/flexyaml/flexyaml_test.go:    - fff
pkg/flexyaml/flexyaml_test.go:  hhh:
pkg/flexyaml/flexyaml_test.go:    gateways:
pkg/flexyaml/flexyaml_test.go:    - ggg
pkg/flexyaml/flexyaml_test.go:    - direct
pkg/flexyaml/flexyaml_test.go:  iii:
pkg/flexyaml/flexyaml_test.go:    gateways:
pkg/flexyaml/flexyaml_test.go:    - test.ddd
pkg/flexyaml/flexyaml_test.go:  jjj:
pkg/flexyaml/flexyaml_test.go:    hostname: "%h.jjjjj"
pkg/flexyaml/flexyaml_test.go:  "*.kkk":
pkg/flexyaml/flexyaml_test.go:    hostname: "%h.kkkkk"
pkg/flexyaml/flexyaml_test.go:defaults:
pkg/flexyaml/flexyaml_test.go:  port: 22
pkg/flexyaml/flexyaml_test.go:  user: root
pkg/flexyaml/flexyaml_test.go:includes:
pkg/flexyaml/flexyaml_test.go:  - /path/to/dir/*.yml
pkg/flexyaml/flexyaml_test.go:  - /path/to/file.yml
pkg/flexyaml/flexyaml_test.go:`)
pkg/flexyaml/flexyaml_test.go:		input = []byte(`hosts:
pkg/flexyaml/flexyaml_test.go:  aaa:
pkg/flexyaml/flexyaml_test.go:    HostName: 1.2.3.4
pkg/flexyaml/flexyaml_test.go:  bBb:
pkg/flexyaml/flexyaml_test.go:    Port: 21
pkg/flexyaml/flexyaml_test.go:  ccc:
pkg/flexyaml/flexyaml_test.go:    HostName: 5.6.7.8
pkg/flexyaml/flexyaml_test.go:    Port: 24
pkg/flexyaml/flexyaml_test.go:    USER: Toor
pkg/flexyaml/flexyaml_test.go:  "*.ddd":
pkg/flexyaml/flexyaml_test.go:    hostName: 1.3.5.7
pkg/flexyaml/flexyaml_test.go:  eee:
pkg/flexyaml/flexyaml_test.go:    Inherits:
pkg/flexyaml/flexyaml_test.go:    - aaa
pkg/flexyaml/flexyaml_test.go:    - bBb
pkg/flexyaml/flexyaml_test.go:    - aaa
pkg/flexyaml/flexyaml_test.go:  fff:
pkg/flexyaml/flexyaml_test.go:    Inherits:
pkg/flexyaml/flexyaml_test.go:    - bbb
pkg/flexyaml/flexyaml_test.go:    - eee
pkg/flexyaml/flexyaml_test.go:    - "*.ddd"
pkg/flexyaml/flexyaml_test.go:  ggg:
pkg/flexyaml/flexyaml_test.go:    Gateways:
pkg/flexyaml/flexyaml_test.go:    - direct
pkg/flexyaml/flexyaml_test.go:    - fff
pkg/flexyaml/flexyaml_test.go:  hhh:
pkg/flexyaml/flexyaml_test.go:    Gateways:
pkg/flexyaml/flexyaml_test.go:    - ggg
pkg/flexyaml/flexyaml_test.go:    - direct
pkg/flexyaml/flexyaml_test.go:  iii:
pkg/flexyaml/flexyaml_test.go:    Gateways:
pkg/flexyaml/flexyaml_test.go:    - test.ddd
pkg/flexyaml/flexyaml_test.go:  jjj:
pkg/flexyaml/flexyaml_test.go:    HostName: "%h.jjjjj"
pkg/flexyaml/flexyaml_test.go:  "*.kkk":
pkg/flexyaml/flexyaml_test.go:    HostName: "%h.kkkkk"
pkg/flexyaml/flexyaml_test.go:defaults:
pkg/flexyaml/flexyaml_test.go:  Port: 22
pkg/flexyaml/flexyaml_test.go:  User: root
pkg/flexyaml/flexyaml_test.go:includes:
pkg/flexyaml/flexyaml_test.go:  - /path/to/dir/*.yml
pkg/flexyaml/flexyaml_test.go:  - /path/to/file.yml
pkg/flexyaml/flexyaml_test.go:`)
pkg/flexyaml/flexyaml_test.go:		output, err = MakeFlexible(input)
pkg/flexyaml/flexyaml_test.go:		So(err, ShouldBeNil)
pkg/flexyaml/flexyaml_test.go:		So(string(output), ShouldEqual, string(expected))
pkg/flexyaml/flexyaml_test.go:	})
pkg/flexyaml/flexyaml_test.go:}
pkg/flexyaml/flexyaml_test.go:func TestUnmarshal(t *testing.T) {
pkg/flexyaml/flexyaml_test.go:	Convey("Testing Unmarshal()", t, FailureContinues, func() {
pkg/flexyaml/flexyaml_test.go:		type C struct {
pkg/flexyaml/flexyaml_test.go:			SomeKey string
pkg/flexyaml/flexyaml_test.go:		}
pkg/flexyaml/flexyaml_test.go:		var out C
pkg/flexyaml/flexyaml_test.go:		var err error
pkg/flexyaml/flexyaml_test.go:		err = Unmarshal([]byte("somekey: ok"), &out)
pkg/flexyaml/flexyaml_test.go:		So(err, ShouldBeNil)
pkg/flexyaml/flexyaml_test.go:		So(out.SomeKey, ShouldEqual, "ok")
pkg/flexyaml/flexyaml_test.go:		out = C{}
pkg/flexyaml/flexyaml_test.go:		err = Unmarshal([]byte("SomeKey: ok"), &out)
pkg/flexyaml/flexyaml_test.go:		So(err, ShouldBeNil)
pkg/flexyaml/flexyaml_test.go:		So(out.SomeKey, ShouldEqual, "ok")
pkg/flexyaml/flexyaml_test.go:		out = C{}
pkg/flexyaml/flexyaml_test.go:		err = Unmarshal([]byte("SOMEKEY: ok"), &out)
pkg/flexyaml/flexyaml_test.go:		So(err, ShouldBeNil)
pkg/flexyaml/flexyaml_test.go:		So(out.SomeKey, ShouldEqual, "ok")
pkg/flexyaml/flexyaml_test.go:		out = C{}
pkg/flexyaml/flexyaml_test.go:		err = Unmarshal([]byte("sOmEkEy: ok"), &out)
pkg/flexyaml/flexyaml_test.go:		So(err, ShouldBeNil)
pkg/flexyaml/flexyaml_test.go:		So(out.SomeKey, ShouldEqual, "ok")
pkg/flexyaml/flexyaml_test.go:	})
pkg/flexyaml/flexyaml_test.go:}
pkg/logger/logger.go:package logger
pkg/logger/logger.go:import (
pkg/logger/logger.go:	"os"
pkg/logger/logger.go:	"strings"
pkg/logger/logger.go:)
pkg/logger/logger.go:var Logger = logrus.New()
pkg/logger/logger.go:func LoggerSetLevel(level logrus.Level) {
pkg/logger/logger.go:	// Logger.mu.Lock()
pkg/logger/logger.go:	// defer Logger.mu.Unlock()
pkg/logger/logger.go:	Logger.Level = level
pkg/logger/logger.go:}
pkg/logger/logger.go:type LoggerOptions struct {
pkg/logger/logger.go:	Level         logrus.Level
pkg/logger/logger.go:	InspectParent bool
pkg/logger/logger.go:}
pkg/logger/logger.go:func SetupLogging(options LoggerOptions) {
pkg/logger/logger.go:	level := options.Level
pkg/logger/logger.go:	if options.InspectParent {
pkg/logger/logger.go:		parentLevel, err := GetLoggingLevelByInspectingParent()
pkg/logger/logger.go:		if err != nil {
pkg/logger/logger.go:			Logger.Debugf("Failed to inspect parent process: %v", err)
pkg/logger/logger.go:		} else if parentLevel > level {
pkg/logger/logger.go:			level = parentLevel
pkg/logger/logger.go:		}
pkg/logger/logger.go:	}
pkg/logger/logger.go:	LoggerSetLevel(level)
pkg/logger/logger.go:}
pkg/logger/logger.go:func GetLoggingLevelByInspectingParent() (logrus.Level, error) {
pkg/logger/logger.go:	ppid := os.Getppid()
pkg/logger/logger.go:	process, err := process.NewProcess(int32(ppid))
pkg/logger/logger.go:	if err != nil {
pkg/logger/logger.go:		return logrus.WarnLevel, err
pkg/logger/logger.go:	}
pkg/logger/logger.go:	cmdline, err := process.Cmdline()
pkg/logger/logger.go:	if err != nil {
pkg/logger/logger.go:		return logrus.WarnLevel, err
pkg/logger/logger.go:	}
pkg/logger/logger.go:	if strings.Contains(cmdline, "-vv") {
pkg/logger/logger.go:		return logrus.DebugLevel, nil
pkg/logger/logger.go:	} else if strings.Contains(cmdline, "-v") {
pkg/logger/logger.go:		return logrus.InfoLevel, nil
pkg/logger/logger.go:	}
pkg/logger/logger.go:	return logrus.WarnLevel, nil
pkg/logger/logger.go:}
pkg/logger/logger_test.go:package logger
pkg/logger/logger_test.go:import (
pkg/logger/logger_test.go:	"testing"
pkg/logger/logger_test.go:)
pkg/logger/logger_test.go:func Test(t *testing.T) {
pkg/logger/logger_test.go:	Convey("Testing Logger", t, func() {
pkg/logger/logger_test.go:		So(Logger, ShouldNotBeNil)
pkg/logger/logger_test.go:	})
pkg/logger/logger_test.go:}
pkg/logger/logger_test.go:func TestSetupLogging(t *testing.T) {
pkg/logger/logger_test.go:	Convey("Testing SetupLogging()", t, func() {
pkg/logger/logger_test.go:		Reset(func() {
pkg/logger/logger_test.go:			Logger.Level = logrus.InfoLevel
pkg/logger/logger_test.go:		})
pkg/logger/logger_test.go:		Convey("InspectParent=false", func() {
pkg/logger/logger_test.go:			So(Logger.Level, ShouldEqual, logrus.InfoLevel)
pkg/logger/logger_test.go:			options := LoggerOptions{
pkg/logger/logger_test.go:				Level:         logrus.WarnLevel,
pkg/logger/logger_test.go:				InspectParent: false,
pkg/logger/logger_test.go:			}
pkg/logger/logger_test.go:			SetupLogging(options)
pkg/logger/logger_test.go:			So(Logger.Level, ShouldEqual, logrus.WarnLevel)
pkg/logger/logger_test.go:		})
pkg/logger/logger_test.go:		Convey("InspectParent=true", func() {
pkg/logger/logger_test.go:			So(Logger.Level, ShouldEqual, logrus.InfoLevel)
pkg/logger/logger_test.go:			options := LoggerOptions{
pkg/logger/logger_test.go:				Level:         logrus.WarnLevel,
pkg/logger/logger_test.go:				InspectParent: true,
pkg/logger/logger_test.go:			}
pkg/logger/logger_test.go:			SetupLogging(options)
pkg/logger/logger_test.go:			// FIXME: mock process
pkg/logger/logger_test.go:			// So(Logger.Level, ShouldEqual, logrus.InfoLevel)
pkg/logger/logger_test.go:		})
pkg/logger/logger_test.go:	})
pkg/logger/logger_test.go:}
pkg/logger/logger_test.go:func TestGetLoggingLevelByInspectingParent(t *testing.T) {
pkg/logger/logger_test.go:	Convey("Testing GetLoggingLevelByInspectingParent()", t, func() {
pkg/logger/logger_test.go:		_, err := GetLoggingLevelByInspectingParent()
pkg/logger/logger_test.go:		So(err, ShouldBeNil)
pkg/logger/logger_test.go:		// FIXME: mock process
pkg/logger/logger_test.go:		// So(level, ShouldEqual, logrus.InfoLevel)
pkg/logger/logger_test.go:	})
pkg/logger/logger_test.go:}
pkg/version/version.go:package version
pkg/version/version.go:var VERSION string
pkg/version/version.go:var GITCOMMIT string
pkg/version/version.go:func init() {
pkg/version/version.go:	// Version should be updated by hand at each release
pkg/version/version.go:	VERSION = "2.1.0-dev"
pkg/version/version.go:	// GitCommit will be overwritten automatically by the build system
pkg/version/version.go:	GITCOMMIT = "HEAD"
pkg/version/version.go:}
pkg/version/version_test.go:package version
pkg/version/version_test.go:import (
pkg/version/version_test.go:	"testing"
pkg/version/version_test.go:)
pkg/version/version_test.go:func Test(t *testing.T) {
pkg/version/version_test.go:	Convey("Testing version", t, func() {
pkg/version/version_test.go:		So(VERSION, ShouldNotEqual, "")
pkg/version/version_test.go:		So(GITCOMMIT, ShouldNotEqual, "")
pkg/version/version_test.go:	})
pkg/version/version_test.go:}
bundle.sh:#!/bin/bash
bundle.sh:# This script will create the Alfred workflow file and optionally it will install it.
bundle.sh:# To install it, pass the argument "-i" or "--install", e.g.
bundle.sh:# bundle.sh --install
bundle.sh:echo "Creating Google Authenticator workflow file..."
bundle.sh:WORKFLOW_FILE=Google\ Authenticator.alfredworkflow
bundle.sh:if [ -f "$WORKFLOW_FILE" ]; then
bundle.sh:    echo "Removing previous workflow..."
bundle.sh:    rm "$WORKFLOW_FILE"
bundle.sh:fi
bundle.sh:echo "Cleaning it..."
bundle.sh:find src \( -name "*~" -or -name ".??*~" -or -name "*.pyc" -or -name "#*#" -or -name ".DS_Store" \) -delete
bundle.sh:echo "Bundling it..."
bundle.sh:cd src && zip -r "../$WORKFLOW_FILE" * && cd ..
bundle.sh:while test $# -gt 0
bundle.sh:do
bundle.sh:    case "$1" in
bundle.sh:        --install | -i)
bundle.sh:            echo "Installing $WORKFLOW_FILE..."
bundle.sh:            open "$WORKFLOW_FILE"
bundle.sh:            ;;
bundle.sh:    esac
bundle.sh:    shift
bundle.sh:done
bundle.sh:echo "$WORKFLOW_FILE is ready!"
src/alfred.py:# -*- coding: utf-8 -*-
src/alfred.py:import itertools
src/alfred.py:import os
src/alfred.py:import plistlib
src/alfred.py:import unicodedata
src/alfred.py:import sys
src/alfred.py:from xml.etree.ElementTree import Element, SubElement, tostring
src/alfred.py:"""
src/alfred.py:You should run your script via /bin/bash with all escape options ticked.
src/alfred.py:The command line should be
src/alfred.py:python yourscript.py "{query}" arg2 arg3 ...
src/alfred.py:"""
src/alfred.py:UNESCAPE_CHARACTERS = u""" ;()"""
src/alfred.py:_MAX_RESULTS_DEFAULT = 9
src/alfred.py:preferences = plistlib.readPlist('info.plist')
src/alfred.py:bundleid = preferences['bundleid']
src/alfred.py:class Item(object):
src/alfred.py:    @classmethod
src/alfred.py:    def unicode(cls, value):
src/alfred.py:        try:
src/alfred.py:            items = value.iteritems()
src/alfred.py:        except AttributeError:
src/alfred.py:            return unicode(value)
src/alfred.py:        else:
src/alfred.py:            return dict(map(unicode, item) for item in items)
src/alfred.py:    def __init__(self, attributes, title, subtitle, icon=None):
src/alfred.py:        self.attributes = attributes
src/alfred.py:        self.title = title
src/alfred.py:        self.subtitle = subtitle
src/alfred.py:        self.icon = icon
src/alfred.py:    def __str__(self):
src/alfred.py:        return tostring(self.xml(), encoding='utf-8')
src/alfred.py:    def xml(self):
src/alfred.py:        item = Element(u'item', self.unicode(self.attributes))
src/alfred.py:        for attribute in (u'title', u'subtitle', u'icon'):
src/alfred.py:            value = getattr(self, attribute)
src/alfred.py:            if value is None:
src/alfred.py:                continue
src/alfred.py:            try:
src/alfred.py:                (value, attributes) = value
src/alfred.py:            except:
src/alfred.py:                attributes = {}
src/alfred.py:                elem = SubElement(item, attribute, self.unicode(attributes))
src/alfred.py:                elem.text = unicode(value)
src/alfred.py:        return item
src/alfred.py:def args(characters=None):
src/alfred.py:    return tuple(unescape(decode(arg), characters) for arg in sys.argv[1:])
src/alfred.py:def config():
src/alfred.py:    return _create('config')
src/alfred.py:def decode(s):
src/alfred.py:    return unicodedata.normalize('NFC', s.decode('utf-8'))
src/alfred.py:def get_uid(uid):
src/alfred.py:    return u'-'.join(map(unicode, (bundleid, uid)))
src/alfred.py:def unescape(query, characters=None):
src/alfred.py:    if not characters:
src/alfred.py:        characters = UNESCAPE_CHARACTERS
src/alfred.py:    for character in characters:
src/alfred.py:        query = query.replace('\\%s' % character, character)
src/alfred.py:    return query
src/alfred.py:def write(text):
src/alfred.py:    sys.stdout.write(text)
src/alfred.py:def xml(items, maxresults=_MAX_RESULTS_DEFAULT):
src/alfred.py:    root = Element('items')
src/alfred.py:    for item in itertools.islice(items, maxresults):
src/alfred.py:        root.append(item.xml())
src/alfred.py:    return tostring(root, encoding='utf-8')
src/alfred.py:def _create(path):
src/alfred.py:    if not os.path.isdir(path):
src/alfred.py:        os.mkdir(path)
src/alfred.py:    if not os.access(path, os.W_OK):
src/alfred.py:        raise IOError('No write access: %s' % path)
src/alfred.py:    return path
src/alfred.py:def work(volatile):
src/alfred.py:    path = {
src/alfred.py:        True: '~/Library/Caches/com.runningwithcrayons.Alfred-2/Workflow Data',
src/alfred.py:        False: '~/Library/Application Support/Alfred 2/Workflow Data'
src/alfred.py:    }[bool(volatile)]
src/alfred.py:    return _create(os.path.join(os.path.expanduser(path), bundleid))
src/alfred.py:def config_set(key, value, volatile=True):
src/alfred.py:    filepath = os.path.join(work(volatile), 'config.plist')
src/alfred.py:    try:
src/alfred.py:        conf = plistlib.readPlist(filepath)
src/alfred.py:    except IOError:
src/alfred.py:        conf = {}
src/alfred.py:    conf[key] = value
src/alfred.py:    plistlib.writePlist(conf, filepath)
src/alfred.py:def config_get(key, default=None, volatile=True):
src/alfred.py:    filepath = os.path.join(work(volatile), 'config.plist')
src/alfred.py:    try:
src/alfred.py:        conf = plistlib.readPlist(filepath)
src/alfred.py:    except IOError:
src/alfred.py:        conf = {}
src/alfred.py:    if key in conf:
src/alfred.py:        return conf[key]
src/alfred.py:    return default
src/alfred.py:class AlfredWorkflow(object):
src/alfred.py:    _reserved_words = []
src/alfred.py:    def write_text(self, text):
src/alfred.py:        print(text)
src/alfred.py:    def write_item(self, item):
src/alfred.py:        return self.write_items([item])
src/alfred.py:    def write_items(self, items):
src/alfred.py:        return write(xml(items, maxresults=self.max_results))
src/alfred.py:    def message_item(self, title, message, icon=None, uid=0):
src/alfred.py:        return Item({
src/alfred.py:            u'uid': get_uid(uid),
src/alfred.py:            u'arg': '',
src/alfred.py:            u'ignore': 'yes'
src/alfred.py:        }, title, message, icon)
src/alfred.py:    def warning_item(self, title, message, uid=0):
src/alfred.py:        return self.message_item(title=title, message=message, uid=uid,
src/alfred.py:                                 icon='warning.png')
src/alfred.py:    def error_item(self, title, message, uid=0):
src/alfred.py:        return self.message_item(title=title, message=message, uid=uid,
src/alfred.py:                                 icon='error.png')
src/alfred.py:    def exception_item(self, title, exception, uid=0):
src/alfred.py:        message = str(exception).replace('\n', ' ')
src/alfred.py:        return self.error_item(title=title, message=message, uid=uid)
src/alfred.py:    def route_action(self, action, query=None):
src/alfred.py:        method_name = 'do_{}'.format(action)
src/alfred.py:        if not hasattr(self, method_name):
src/alfred.py:            raise RuntimeError('Unknown action {}'.format(action))
src/alfred.py:        method = getattr(self, method_name)
src/alfred.py:        return method(query)
src/alfred.py:    def is_command(self, query):
src/alfred.py:        try:
src/alfred.py:            command, rest = query.split(' ', 1)
src/alfred.py:        except ValueError:
src/alfred.py:            command = query
src/alfred.py:            command = command.strip()
src/alfred.py:        return command in self._reserved_words or \
src/alfred.py:            hasattr(self, 'do_{}'.format(command))
src/info.plist:<?xml version="1.0" encoding="UTF-8"?>
src/info.plist:<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
src/info.plist:<plist version="1.0">
src/info.plist:<dict>
src/info.plist:	<key>bundleid</key>
src/info.plist:	<string>com.alfredapp.moul.gauth</string>
src/info.plist:	<key>connections</key>
src/info.plist:	<dict>
src/info.plist:		<key>3859F17F-F608-473F-B690-DDAB90827E02</key>
src/info.plist:		<array>
src/info.plist:			<dict>
src/info.plist:				<key>destinationuid</key>
src/info.plist:				<string>0C69FA9F-6875-40F5-ADFB-CD20428410A0</string>
src/info.plist:				<key>modifiers</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>modifiersubtext</key>
src/info.plist:				<string></string>
src/info.plist:			</dict>
src/info.plist:		</array>
src/info.plist:		<key>7BEE3C7D-A99B-42F8-BCB9-BC625434942E</key>
src/info.plist:		<array>
src/info.plist:			<dict>
src/info.plist:				<key>destinationuid</key>
src/info.plist:				<string>8D4FBD76-2AC8-4B24-A980-15CEA567F80A</string>
src/info.plist:				<key>modifiers</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>modifiersubtext</key>
src/info.plist:				<string></string>
src/info.plist:			</dict>
src/info.plist:		</array>
src/info.plist:		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4EE</key>
src/info.plist:		<array>
src/info.plist:			<dict>
src/info.plist:				<key>destinationuid</key>
src/info.plist:				<string>D2D03A99-8E4B-4042-896C-4126662B8CD4</string>
src/info.plist:				<key>modifiers</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>modifiersubtext</key>
src/info.plist:				<string></string>
src/info.plist:			</dict>
src/info.plist:			<dict>
src/info.plist:				<key>destinationuid</key>
src/info.plist:				<string>C7915157-5379-4CCC-9076-D0918BB66AB0</string>
src/info.plist:				<key>modifiers</key>
src/info.plist:				<integer>1048576</integer>
src/info.plist:				<key>modifiersubtext</key>
src/info.plist:				<string>Copy {query} to Clipboard</string>
src/info.plist:			</dict>
src/info.plist:			<dict>
src/info.plist:				<key>destinationuid</key>
src/info.plist:				<string>3859F17F-F608-473F-B690-DDAB90827E02</string>
src/info.plist:				<key>modifiers</key>
src/info.plist:				<integer>524288</integer>
src/info.plist:				<key>modifiersubtext</key>
src/info.plist:				<string>Large Type {query}</string>
src/info.plist:			</dict>
src/info.plist:		</array>
src/info.plist:		<key>8D4FBD76-2AC8-4B24-A980-15CEA567F80A</key>
src/info.plist:		<array>
src/info.plist:			<dict>
src/info.plist:				<key>destinationuid</key>
src/info.plist:				<string>EBE66B7E-A102-4C7D-8E1E-FFC0D86ADF1F</string>
src/info.plist:				<key>modifiers</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>modifiersubtext</key>
src/info.plist:				<string></string>
src/info.plist:			</dict>
src/info.plist:		</array>
src/info.plist:		<key>C7915157-5379-4CCC-9076-D0918BB66AB0</key>
src/info.plist:		<array>
src/info.plist:			<dict>
src/info.plist:				<key>destinationuid</key>
src/info.plist:				<string>C74DB286-B179-49BB-947D-91B3706ADB20</string>
src/info.plist:				<key>modifiers</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>modifiersubtext</key>
src/info.plist:				<string></string>
src/info.plist:			</dict>
src/info.plist:			<dict>
src/info.plist:				<key>destinationuid</key>
src/info.plist:				<string>D28AB140-ED93-4395-AD40-4A240B9BDD8D</string>
src/info.plist:				<key>modifiers</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>modifiersubtext</key>
src/info.plist:				<string></string>
src/info.plist:			</dict>
src/info.plist:		</array>
src/info.plist:		<key>D2D03A99-8E4B-4042-896C-4126662B8CD4</key>
src/info.plist:		<array>
src/info.plist:			<dict>
src/info.plist:				<key>destinationuid</key>
src/info.plist:				<string>1086994E-3BDA-4202-8551-27D286CC5E7A</string>
src/info.plist:				<key>modifiers</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>modifiersubtext</key>
src/info.plist:				<string></string>
src/info.plist:			</dict>
src/info.plist:			<dict>
src/info.plist:				<key>destinationuid</key>
src/info.plist:				<string>9C87E9F8-DFE4-4A19-AE02-F468FE5DA32B</string>
src/info.plist:				<key>modifiers</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>modifiersubtext</key>
src/info.plist:				<string></string>
src/info.plist:			</dict>
src/info.plist:		</array>
src/info.plist:	</dict>
src/info.plist:	<key>createdby</key>
src/info.plist:	<string>Manfred Touron</string>
src/info.plist:	<key>description</key>
src/info.plist:	<string>Google Authenticator Workflow</string>
src/info.plist:	<key>disabled</key>
src/info.plist:	<false/>
src/info.plist:	<key>name</key>
src/info.plist:	<string>Google Authenticator</string>
src/info.plist:	<key>objects</key>
src/info.plist:	<array>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>autopaste</key>
src/info.plist:				<true/>
src/info.plist:				<key>clipboardtext</key>
src/info.plist:				<string>{query}</string>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.output.clipboard</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>1086994E-3BDA-4202-8551-27D286CC5E7A</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>escaping</key>
src/info.plist:				<integer>127</integer>
src/info.plist:				<key>script</key>
src/info.plist:				<string>printf "{query}"</string>
src/info.plist:				<key>type</key>
src/info.plist:				<integer>0</integer>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.action.script</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>D2D03A99-8E4B-4042-896C-4126662B8CD4</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>lastpathcomponent</key>
src/info.plist:				<false/>
src/info.plist:				<key>onlyshowifquerypopulated</key>
src/info.plist:				<true/>
src/info.plist:				<key>output</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>removeextension</key>
src/info.plist:				<false/>
src/info.plist:				<key>sticky</key>
src/info.plist:				<false/>
src/info.plist:				<key>text</key>
src/info.plist:				<string>Verification code ({query}) has been wrote at the Cursor</string>
src/info.plist:				<key>title</key>
src/info.plist:				<string>Google Authenticator</string>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.output.notification</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>9C87E9F8-DFE4-4A19-AE02-F468FE5DA32B</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>lastpathcomponent</key>
src/info.plist:				<false/>
src/info.plist:				<key>onlyshowifquerypopulated</key>
src/info.plist:				<true/>
src/info.plist:				<key>output</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>removeextension</key>
src/info.plist:				<false/>
src/info.plist:				<key>sticky</key>
src/info.plist:				<false/>
src/info.plist:				<key>text</key>
src/info.plist:				<string>Verification code ({query}) has been copied to the clipboard</string>
src/info.plist:				<key>title</key>
src/info.plist:				<string>Google Authenticator</string>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.output.notification</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>C74DB286-B179-49BB-947D-91B3706ADB20</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>escaping</key>
src/info.plist:				<integer>127</integer>
src/info.plist:				<key>script</key>
src/info.plist:				<string>printf "{query}"
src/info.plist:</string>
src/info.plist:				<key>type</key>
src/info.plist:				<integer>0</integer>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.action.script</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>C7915157-5379-4CCC-9076-D0918BB66AB0</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>argumenttype</key>
src/info.plist:				<integer>1</integer>
src/info.plist:				<key>escaping</key>
src/info.plist:				<integer>63</integer>
src/info.plist:				<key>keyword</key>
src/info.plist:				<string>gauth</string>
src/info.plist:				<key>runningsubtext</key>
src/info.plist:				<string>Please wait...</string>
src/info.plist:				<key>script</key>
src/info.plist:				<string>python workflow.py search_by_account "{query}"</string>
src/info.plist:				<key>subtext</key>
src/info.plist:				<string>Account</string>
src/info.plist:				<key>title</key>
src/info.plist:				<string>Google Authenticator</string>
src/info.plist:				<key>type</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>withspace</key>
src/info.plist:				<true/>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.input.scriptfilter</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4EE</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>autopaste</key>
src/info.plist:				<false/>
src/info.plist:				<key>clipboardtext</key>
src/info.plist:				<string>{query}</string>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.output.clipboard</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>D28AB140-ED93-4395-AD40-4A240B9BDD8D</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>argumenttype</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>keyword</key>
src/info.plist:				<string>gauth add</string>
src/info.plist:				<key>subtext</key>
src/info.plist:				<string>Account name, secret</string>
src/info.plist:				<key>text</key>
src/info.plist:				<string>Add a new secret</string>
src/info.plist:				<key>withspace</key>
src/info.plist:				<true/>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.input.keyword</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>7BEE3C7D-A99B-42F8-BCB9-BC625434942E</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.output.largetype</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>0C69FA9F-6875-40F5-ADFB-CD20428410A0</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>escaping</key>
src/info.plist:				<integer>127</integer>
src/info.plist:				<key>script</key>
src/info.plist:				<string>echo "{query}"</string>
src/info.plist:				<key>type</key>
src/info.plist:				<integer>0</integer>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.action.script</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>3859F17F-F608-473F-B690-DDAB90827E02</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>escaping</key>
src/info.plist:				<integer>127</integer>
src/info.plist:				<key>script</key>
src/info.plist:				<string>python workflow.py add_account "{query}"</string>
src/info.plist:				<key>type</key>
src/info.plist:				<integer>0</integer>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.action.script</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>8D4FBD76-2AC8-4B24-A980-15CEA567F80A</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:		<dict>
src/info.plist:			<key>config</key>
src/info.plist:			<dict>
src/info.plist:				<key>lastpathcomponent</key>
src/info.plist:				<false/>
src/info.plist:				<key>onlyshowifquerypopulated</key>
src/info.plist:				<false/>
src/info.plist:				<key>output</key>
src/info.plist:				<integer>0</integer>
src/info.plist:				<key>removeextension</key>
src/info.plist:				<false/>
src/info.plist:				<key>sticky</key>
src/info.plist:				<false/>
src/info.plist:				<key>text</key>
src/info.plist:				<string>{query}</string>
src/info.plist:				<key>title</key>
src/info.plist:				<string>Google Authenticator</string>
src/info.plist:			</dict>
src/info.plist:			<key>type</key>
src/info.plist:			<string>alfred.workflow.output.notification</string>
src/info.plist:			<key>uid</key>
src/info.plist:			<string>EBE66B7E-A102-4C7D-8E1E-FFC0D86ADF1F</string>
src/info.plist:			<key>version</key>
src/info.plist:			<integer>0</integer>
src/info.plist:		</dict>
src/info.plist:	</array>
src/info.plist:	<key>readme</key>
src/info.plist:	<string>Description
src/info.plist:———————————
src/info.plist:Equivalent of the mobile versions of Google Authenticator: https://itunes.apple.com/en/app/google-authenticator/id388497605?mt=8.
src/info.plist: 
src/info.plist:System Modifications
src/info.plist:————————————————————
src/info.plist:Create a ~/.gauth file with your secrets, ie:
src/info.plist:[google - bob@gmail.com]
src/info.plist:secret = xxxxxxxxxxxxxxxxxx
src/info.plist:[evernote - robert]
src/info.plist:secret = yyyyyyyyyyyyyyyyyy
src/info.plist:Source Code: Github
src/info.plist:https://github.com/m...-workflow-gauth
src/info.plist: 
src/info.plist:Links
src/info.plist:—————
src/info.plist:- Packal: http://www.packal.org/workflow/gauth-google-authenticator
src/info.plist:- Direct Download: https://github.com/packal/repository/raw/master/com.alfredapp.moul.gauth/google_authenticator.alfredworkflow
src/info.plist:- Official Forum Post: http://www.alfredforum.com/topic/4062-gauth-google-authenticator-time-based-two-factor-authentication/
src/info.plist:- Github: https://github.com/moul/alfred-workflow-gauth/
src/info.plist: 
src/info.plist:Acknowledgments
src/info.plist:——————————————-
src/info.plist:- Original alarm clock icon
src/info.plist:  - Alex Auda Samora from The Noun Project
src/info.plist:  - Licensed under Creative Commons Attribution
src/info.plist:- Status &amp; signs icons
src/info.plist:  - Hereldar Terkenya
src/info.plist:  - Licensed under a Creative Commons Attribution-Share Alike 3.0 License
src/info.plist:- Original source code
src/info.plist:  - Manfred Touron
src/info.plist:- Serial contributor
src/info.plist:  - Gilberto Olimpio</string>
src/info.plist:	<key>uidata</key>
src/info.plist:	<dict>
src/info.plist:		<key>0C69FA9F-6875-40F5-ADFB-CD20428410A0</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>650</real>
src/info.plist:		</dict>
src/info.plist:		<key>1086994E-3BDA-4202-8551-27D286CC5E7A</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>10</real>
src/info.plist:		</dict>
src/info.plist:		<key>3859F17F-F608-473F-B690-DDAB90827E02</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>650</real>
src/info.plist:		</dict>
src/info.plist:		<key>7BEE3C7D-A99B-42F8-BCB9-BC625434942E</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>520</real>
src/info.plist:		</dict>
src/info.plist:		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4EE</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>400</real>
src/info.plist:		</dict>
src/info.plist:		<key>8D4FBD76-2AC8-4B24-A980-15CEA567F80A</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>770</real>
src/info.plist:		</dict>
src/info.plist:		<key>9C87E9F8-DFE4-4A19-AE02-F468FE5DA32B</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>150</real>
src/info.plist:		</dict>
src/info.plist:		<key>C74DB286-B179-49BB-947D-91B3706ADB20</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>330</real>
src/info.plist:		</dict>
src/info.plist:		<key>C7915157-5379-4CCC-9076-D0918BB66AB0</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>400</real>
src/info.plist:		</dict>
src/info.plist:		<key>D28AB140-ED93-4395-AD40-4A240B9BDD8D</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>470</real>
src/info.plist:		</dict>
src/info.plist:		<key>D2D03A99-8E4B-4042-896C-4126662B8CD4</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>80</real>
src/info.plist:		</dict>
src/info.plist:		<key>EBE66B7E-A102-4C7D-8E1E-FFC0D86ADF1F</key>
src/info.plist:		<dict>
src/info.plist:			<key>ypos</key>
src/info.plist:			<real>770</real>
src/info.plist:		</dict>
src/info.plist:	</dict>
src/info.plist:	<key>webaddress</key>
src/info.plist:	<string>https://github.com/moul/alfred-workflow-gauth</string>
src/info.plist:</dict>
src/info.plist:</plist>
src/otp.py:# -*- coding: utf-8 -*-
src/otp.py:import hmac
src/otp.py:import base64
src/otp.py:import struct
src/otp.py:import hashlib
src/otp.py:import time
src/otp.py:import math
src/otp.py:def get_hotp_token(key, intervals_no):
src/otp.py:    msg = struct.pack(">Q", intervals_no)
src/otp.py:    h = hmac.new(key, msg, hashlib.sha1).digest()
src/otp.py:    o = ord(h[19]) & 15
src/otp.py:    h = (struct.unpack(">I", h[o:o + 4])[0] & 0x7fffffff) % 1000000
src/otp.py:    return h
src/otp.py:def get_totp_token(key):
src/otp.py:    token = get_hotp_token(key, intervals_no=int(time.time()) // 30)
src/otp.py:    return str(token).zfill(6)
src/otp.py:def get_totp_time_remaining():
src/otp.py:    return int(30 - (time.time() % 30))
src/otp.py:def is_otp_secret_valid(secret):
src/otp.py:    try:
src/otp.py:        secret = secret.replace(' ', '')
src/otp.py:        if not len(secret):
src/otp.py:            return False
src/otp.py:        secret = secret.ljust(int(math.ceil(len(secret) / 16.0) * 16), '=')
src/otp.py:        key = base64.b32decode(secret, casefold=True)
src/otp.py:        get_totp_token(key)
src/otp.py:    except:
src/otp.py:        return False
src/otp.py:    return True
src/otp.py:def get_hotp_key(key=None, secret=None, hexkey=None):
src/otp.py:    if hexkey:
src/otp.py:        key = hexkey.decode('hex')
src/otp.py:    if secret:
src/otp.py:        secret = secret.replace(' ', '')
src/otp.py:        secret = secret.ljust(int(math.ceil(len(secret) / 16.0) * 16), '=')
src/otp.py:        key = base64.b32decode(secret, casefold=True)
src/otp.py:    return key
src/workflow.py:# -*- coding: utf-8 -*-
src/workflow.py:import os
src/workflow.py:import ConfigParser
src/workflow.py:import time
src/workflow.py:import alfred
src/workflow.py:import otp
src/workflow.py:class AlfredGAuth(alfred.AlfredWorkflow):
src/workflow.py:    _config_file_initial_content = """
src/workflow.py:#Examples of valid configurations:
src/workflow.py:#[google - bob@gmail.com]
src/workflow.py:#secret=xxxxxxxxxxxxxxxxxx
src/workflow.py:#
src/workflow.py:#[evernote - robert]
src/workflow.py:#secret=yyyyyyyyyyyyyyyyyy
src/workflow.py:"""
src/workflow.py:    _reserved_words = ['add', 'update', 'remove']
src/workflow.py:    def __init__(self, config_file='~/.gauth', max_results=20):
src/workflow.py:        self.max_results = max_results
src/workflow.py:        self._config_file = config_file
src/workflow.py:        self.config_file = os.path.expanduser(self._config_file)
src/workflow.py:        self.config = ConfigParser.RawConfigParser()
src/workflow.py:        self.config.read(self.config_file)
src/workflow.py:        # If the configuration file doesn't exist, create an empty one
src/workflow.py:        if not os.path.isfile(self.config_file):
src/workflow.py:            self.create_config()
src/workflow.py:        try:
src/workflow.py:            if not self.config.sections():
src/workflow.py:                # If the configuration file is empty,
src/workflow.py:                # tell the user to add secrets to it
src/workflow.py:                self.write_item(self.config_file_is_empty_item())
src/workflow.py:                return
src/workflow.py:        except Exception as e:
src/workflow.py:            item = self.exception_item(title='{}: Invalid syntax'
src/workflow.py:                                       .format(self._config_file),
src/workflow.py:                                       exception=e)
src/workflow.py:            self.write_item(item)
src/workflow.py:    def create_config(self):
src/workflow.py:        with open(self.config_file, 'w') as f:
src/workflow.py:            f.write(self._config_file_initial_content)
src/workflow.py:            f.close()
src/workflow.py:    def config_get_account_token(self, account):
src/workflow.py:        try:
src/workflow.py:            secret = self.config.get(account, 'secret')
src/workflow.py:        except:
src/workflow.py:            secret = None
src/workflow.py:        try:
src/workflow.py:            key = self.config.get(account, 'key')
src/workflow.py:        except:
src/workflow.py:            key = None
src/workflow.py:        try:
src/workflow.py:            hexkey = self.config.get(account, 'hexkey')
src/workflow.py:        except:
src/workflow.py:            hexkey = None
src/workflow.py:        key = otp.get_hotp_key(secret=secret, key=key, hexkey=hexkey)
src/workflow.py:        return otp.get_totp_token(key)
src/workflow.py:    def config_list_accounts(self):
src/workflow.py:        return self.config.sections()
src/workflow.py:    def filter_by_account(self, account, query):
src/workflow.py:        return len(query.strip()) and not query.lower() in str(account).lower()
src/workflow.py:    def account_item(self, account, token, uid=None):
src/workflow.py:        return alfred.Item({u'uid': alfred.get_uid(uid), u'arg': token,
src/workflow.py:                            u'autocomplete': account}, account,
src/workflow.py:                           'Post {} at cursor'.format(token), 'icon.png')
src/workflow.py:    def time_remaining_item(self):
src/workflow.py:        # The uid for the remaining time will be the current time,
src/workflow.py:        # so it will appears always at the last position in the list
src/workflow.py:        time_remaining = otp.get_totp_time_remaining()
src/workflow.py:        return alfred.Item({u'uid': time.time(), u'arg': '', u'ignore': 'yes'},
src/workflow.py:                           'Time Remaining: {}s'.format(time_remaining),
src/workflow.py:                           None, 'time.png')
src/workflow.py:    def config_file_is_empty_item(self):
src/workflow.py:        return self.warning_item(title='GAuth is not yet configured',
src/workflow.py:                                 message='You must add your secrets to '
src/workflow.py:                                 'the {} file (see documentation)'
src/workflow.py:                                 .format(self._config_file))
src/workflow.py:    def search_by_account_iter(self, query):
src/workflow.py:        if self.is_command(query):
src/workflow.py:            return
src/workflow.py:        i = 0
src/workflow.py:        for account in self.config_list_accounts():
src/workflow.py:            if self.filter_by_account(account, query):
src/workflow.py:                continue
src/workflow.py:            token = self.config_get_account_token(account)
src/workflow.py:            entry = self.account_item(uid=i, account=account, token=token)
src/workflow.py:            if entry:
src/workflow.py:                yield entry
src/workflow.py:                i += 1
src/workflow.py:        if i > 0:
src/workflow.py:            yield self.time_remaining_item()
src/workflow.py:        else:
src/workflow.py:            yield self.warning_item('Account not found',
src/workflow.py:                                    'There is no account matching "{}" '
src/workflow.py:                                    'on your configuration file '
src/workflow.py:                                    '({})'.format(query,
src/workflow.py:                                                  self._config_file))
src/workflow.py:    def add_account(self, account, secret):
src/workflow.py:        if not otp.is_otp_secret_valid(secret):
src/workflow.py:            return "Invalid secret:\n[{0}]".format(secret)
src/workflow.py:        config_file = open(self.config_file, 'r+')
src/workflow.py:        try:
src/workflow.py:            self.config.add_section(account)
src/workflow.py:            self.config.set(account, "secret", secret)
src/workflow.py:            self.config.write(config_file)
src/workflow.py:        except ConfigParser.DuplicateSectionError:
src/workflow.py:            return "Account already exists:\n[{0}]".format(account)
src/workflow.py:        finally:
src/workflow.py:            config_file.close()
src/workflow.py:        return "A new account was added:\n[{0}]".format(account)
src/workflow.py:    def do_search_by_account(self, query):
src/workflow.py:        self.write_items(self.search_by_account_iter(query))
src/workflow.py:    def do_add_account(self, query):
src/workflow.py:        try:
src/workflow.py:            account, secret = query.split(",", 1)
src/workflow.py:            account = account.strip()
src/workflow.py:            secret = secret.strip()
src/workflow.py:        except ValueError:
src/workflow.py:            return self.write_text('Invalid arguments!\n'
src/workflow.py:                                   'Please enter: account, secret.')
src/workflow.py:        return self.write_text(self.add_account(account, secret))
src/workflow.py:def main(action, query):
src/workflow.py:    alfred_gauth = AlfredGAuth()
src/workflow.py:    alfred_gauth.route_action(action, query)
src/workflow.py:if __name__ == "__main__":
src/workflow.py:    main(action=alfred.args()[0], query=alfred.args()[1])
Makefile:GOENV ?=	GO15VENDOREXPERIMENT=1
Makefile:GODEP ?=	$(GOENV) godep
Makefile:GO ?=		$(GOENV) go
Makefile:SOURCES :=	$(shell find . -name "*.go")
Makefile:PORT ?=		8000
Makefile:all: build
Makefile:.PHONY: build
Makefile:build: moul-as-a-service
Makefile:.PHONY: test
Makefile:test:
Makefile:	$(GODEP) restore
Makefile:	$(GO) get -t .
Makefile:	$(GO) test -v .
Makefile:.PHONY: cover
Makefile:cover:
Makefile:	rm -f profile.out
Makefile:	$(GO) test -covermode=count -coverpkg=. -coverprofile=profile.out
Makefile:.PHONY: godep-save
Makefile:godep-save:
Makefile:.PHONY: cover
Makefile:	rm -f profile.out
Makefile:	$(GO) test -covermode=count -coverpkg=. -coverprofile=profile.out
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	$(GO) get github.com/smartysteets/goconvey
Makefile:	$(GOENV) goconvey -cover -port=9032 -workDir="$(shell realpath .)" -depth=-1
Makefile:.PHONY: clean
Makefile:clean:
Makefile:	rm -rf moul-as-a-service
Makefile:moul-as-a-service: $(SOURCES)
Makefile:	$(GO) build -o $@ ./cmd/$@
Makefile:.PHONY: goapp_serve
Makefile:goapp_serve:
Makefile:	$(GOENV) goapp serve ./appspot/app.yaml
Makefile:.PHONY: goapp_deploy
Makefile:goapp_deploy:
Makefile:	$(GOENV) goapp deploy -application moul-as-a-service ./appspot/app.yaml
Makefile:.PHONY: gin
Makefile:gin:
Makefile:	$(GO) get ./...
Makefile:	$(GO) get github.com/codegangsta/gin
Makefile:	cd ./cmd/moul-as-a-service; $(GOENV) gin --immediate --port=$(PORT) server
Makefile:.PHONY: heroku_deploy
Makefile:heroku_deploy:
Makefile:	git remote add heroku https://git.heroku.com/moul-as-a-service || true
Makefile:	git push heroku master
Makefile:.PHONY: dokku_deploy
Makefile:dokku_deploy:
Makefile:	git remote add dokku dokku@dokku.m.42.am:moul-as-a-service || true
Makefile:	git push dokku master
Procfile:web: moul-as-a-service server
appspot/app.go:package moulasaservice
appspot/app.go:import (
appspot/app.go:	"encoding/json"
appspot/app.go:	"fmt"
appspot/app.go:	"net/http"
appspot/app.go:	"strings"
appspot/app.go:	"github.com/moul/as-a-service"
appspot/app.go:)
appspot/app.go:func init() {
appspot/app.go:	http.HandleFunc("/", indexHandler)
appspot/app.go:	for name := range moul.Actions() {
appspot/app.go:		http.HandleFunc(fmt.Sprintf("/%s", name), actionHandler)
appspot/app.go:	}
appspot/app.go:}
appspot/app.go:func indexHandler(w http.ResponseWriter, r *http.Request) {
appspot/app.go:	w.Header().Set("Content-Type", "application/json; charset=utf-8")
appspot/app.go:	var payload struct {
appspot/app.go:		Services []string `json:"services"`
appspot/app.go:	}
appspot/app.go:	payload.Services = make([]string, 0)
appspot/app.go:	for action := range moul.Actions() {
appspot/app.go:		payload.Services = append(payload.Services, fmt.Sprintf("/%s", action))
appspot/app.go:	}
appspot/app.go:	enc := json.NewEncoder(w)
appspot/app.go:	if err := enc.Encode(payload); err != nil {
appspot/app.go:		http.Error(w, fmt.Sprintf("json encode error: %v\n", err), 500)
appspot/app.go:	}
appspot/app.go:}
appspot/app.go:func actionHandler(w http.ResponseWriter, r *http.Request) {
appspot/app.go:	path := strings.TrimLeft(r.URL.Path, "/")
appspot/app.go:	if fn, found := moul.Actions()[path]; found {
appspot/app.go:		args := []string{}
appspot/app.go:		ret, err := fn(args)
appspot/app.go:		if err != nil {
appspot/app.go:			http.Error(w, fmt.Sprintf("service error: %v\n", err), 500)
appspot/app.go:		} else {
appspot/app.go:			w.Header().Set("Content-Type", "application/json; charset=utf-8")
appspot/app.go:			enc := json.NewEncoder(w)
appspot/app.go:			if err := enc.Encode(&ret); err != nil {
appspot/app.go:				http.Error(w, fmt.Sprintf("json encode error: %v\n", err), 500)
appspot/app.go:			}
appspot/app.go:		}
appspot/app.go:	} else {
appspot/app.go:		http.NotFound(w, r)
appspot/app.go:	}
appspot/app.go:}
appspot/app.yaml:application: moulasaservice
appspot/app.yaml:version: 1
appspot/app.yaml:runtime: go
appspot/app.yaml:api_version: go1
appspot/app.yaml:handlers:
appspot/app.yaml:- url: /.*
appspot/app.yaml:  script: _go_app
cache.go:package moul
cache.go:import (
cache.go:	"time"
cache.go:	"github.com/patrickmn/go-cache"
cache.go:)
cache.go:var moulCache *cache.Cache
cache.go:func init() {
cache.go:	moulCache = cache.New(5*time.Minute, 30*time.Second)
cache.go:}
cmd/moul-as-a-service/main.go:package main
cmd/moul-as-a-service/main.go:import (
cmd/moul-as-a-service/main.go:	"encoding/json"
cmd/moul-as-a-service/main.go:	"fmt"
cmd/moul-as-a-service/main.go:	"os"
cmd/moul-as-a-service/main.go:	"github.com/Sirupsen/logrus"
cmd/moul-as-a-service/main.go:	"github.com/codegangsta/cli"
cmd/moul-as-a-service/main.go:	"github.com/gin-gonic/gin"
cmd/moul-as-a-service/main.go:	"github.com/moul/as-a-service"
cmd/moul-as-a-service/main.go:)
cmd/moul-as-a-service/main.go:func main() {
cmd/moul-as-a-service/main.go:	app := cli.NewApp()
cmd/moul-as-a-service/main.go:	app.Name = "moul-as-a-service"
cmd/moul-as-a-service/main.go:	app.Usage = "moul, but as a service"
cmd/moul-as-a-service/main.go:	app.Commands = []cli.Command{}
cmd/moul-as-a-service/main.go:	for action := range moul.Actions() {
cmd/moul-as-a-service/main.go:		command := cli.Command{
cmd/moul-as-a-service/main.go:			Name:   action,
cmd/moul-as-a-service/main.go:			Action: CliActionCallback,
cmd/moul-as-a-service/main.go:		}
cmd/moul-as-a-service/main.go:		app.Commands = append(app.Commands, command)
cmd/moul-as-a-service/main.go:	}
cmd/moul-as-a-service/main.go:	app.Commands = append(app.Commands, cli.Command{
cmd/moul-as-a-service/main.go:		Name:        "server",
cmd/moul-as-a-service/main.go:		Description: "Run as a webserver",
cmd/moul-as-a-service/main.go:		Action:      Daemon,
cmd/moul-as-a-service/main.go:	})
cmd/moul-as-a-service/main.go:	app.Run(os.Args)
cmd/moul-as-a-service/main.go:}
cmd/moul-as-a-service/main.go:func CliActionCallback(c *cli.Context) {
cmd/moul-as-a-service/main.go:	action := c.Command.Name
cmd/moul-as-a-service/main.go:	ret, err := moul.Actions()[action](c.Args())
cmd/moul-as-a-service/main.go:	if err != nil {
cmd/moul-as-a-service/main.go:		logrus.Fatalf("Failed to execute %q: %v", action, err)
cmd/moul-as-a-service/main.go:	}
cmd/moul-as-a-service/main.go:	out, err := json.MarshalIndent(ret, "", "  ")
cmd/moul-as-a-service/main.go:	if err != nil {
cmd/moul-as-a-service/main.go:		logrus.Fatalf("Failed to marshal json: %v", err)
cmd/moul-as-a-service/main.go:	}
cmd/moul-as-a-service/main.go:	fmt.Printf("%s\n", out)
cmd/moul-as-a-service/main.go:}
cmd/moul-as-a-service/main.go:func Daemon(c *cli.Context) {
cmd/moul-as-a-service/main.go:	r := gin.Default()
cmd/moul-as-a-service/main.go:	// Register index
cmd/moul-as-a-service/main.go:	r.GET("/", func(c *gin.Context) {
cmd/moul-as-a-service/main.go:		services := []string{}
cmd/moul-as-a-service/main.go:		for action := range moul.Actions() {
cmd/moul-as-a-service/main.go:			services = append(services, fmt.Sprintf("/%s", action))
cmd/moul-as-a-service/main.go:		}
cmd/moul-as-a-service/main.go:		c.JSON(200, gin.H{
cmd/moul-as-a-service/main.go:			"services": services,
cmd/moul-as-a-service/main.go:		})
cmd/moul-as-a-service/main.go:	})
cmd/moul-as-a-service/main.go:	// Register actions
cmd/moul-as-a-service/main.go:	for action, fn := range moul.Actions() {
cmd/moul-as-a-service/main.go:		fmt.Println(action, fn)
cmd/moul-as-a-service/main.go:		func(action string, fn moul.Action) {
cmd/moul-as-a-service/main.go:			callback := func(c *gin.Context) {
cmd/moul-as-a-service/main.go:				//u, err := url.Parse(c.Request.URL.String())
cmd/moul-as-a-service/main.go:				//if err != nil {
cmd/moul-as-a-service/main.go:				//	c.String(500, fmt.Sprintf("failed to poarse url %q: %v", c.Request.URL.String(), err))
cmd/moul-as-a-service/main.go:				//}
cmd/moul-as-a-service/main.go:				ret, err := fn(nil)
cmd/moul-as-a-service/main.go:				// ret, err :- fn(u.RawQuery, c.Request.Body)
cmd/moul-as-a-service/main.go:				if err != nil {
cmd/moul-as-a-service/main.go:					c.JSON(500, gin.H{
cmd/moul-as-a-service/main.go:						"err": err,
cmd/moul-as-a-service/main.go:					})
cmd/moul-as-a-service/main.go:					return
cmd/moul-as-a-service/main.go:				}
cmd/moul-as-a-service/main.go:				// FIXME: handle content-types
cmd/moul-as-a-service/main.go:				c.JSON(200, ret)
cmd/moul-as-a-service/main.go:			}
cmd/moul-as-a-service/main.go:			r.GET(fmt.Sprintf("/%s", action), callback)
cmd/moul-as-a-service/main.go:			// POST
cmd/moul-as-a-service/main.go:		}(action, fn)
cmd/moul-as-a-service/main.go:	}
cmd/moul-as-a-service/main.go:	// Start server
cmd/moul-as-a-service/main.go:	port := "8080"
cmd/moul-as-a-service/main.go:	if os.Getenv("PORT") != "" {
cmd/moul-as-a-service/main.go:		port = os.Getenv("PORT")
cmd/moul-as-a-service/main.go:	}
cmd/moul-as-a-service/main.go:	r.Run(fmt.Sprintf(":%s", port))
cmd/moul-as-a-service/main.go:}
github.go:package moul
github.go:import (
github.go:	"github.com/SlyMarbo/rss"
github.go:	"github.com/google/go-github/github"
github.go:	"github.com/patrickmn/go-cache"
github.go:)
github.go:var feed *rss.Feed
github.go:func init() {
github.go:	RegisterAction("github-activity", GetGithubActivityAction)
github.go:	RegisterAction("github-repos", GetGithubReposAction)
github.go:}
github.go:func GetGithubActivityAction(args []string) (interface{}, error) {
github.go:	if activity, found := moulCache.Get("github-activity"); found {
github.go:		return activity, nil
github.go:	}
github.go:	activity, err := GetGithubActivity()
github.go:	if err != nil {
github.go:		return nil, err
github.go:	}
github.go:	moulCache.Set("github-activity", activity, cache.DefaultExpiration)
github.go:	return activity, nil
github.go:}
github.go:func GetGithubReposAction(args []string) (interface{}, error) {
github.go:	if repos, found := moulCache.Get("github-repos"); found {
github.go:		return repos, nil
github.go:	}
github.go:	repos, err := GetGithubRepos()
github.go:	if err != nil {
github.go:		return nil, err
github.go:	}
github.go:	moulCache.Set("github-repos", repos, cache.DefaultExpiration)
github.go:	return repos, nil
github.go:}
github.go:func GetGithubActivity() (*rss.Feed, error) {
github.go:	var err error
github.go:	if feed == nil {
github.go:		feed, err = rss.Fetch("https://github.com/moul.atom")
github.go:	} else {
github.go:		err = feed.Update()
github.go:	}
github.go:	return feed, err
github.go:}
github.go:func GetGithubRepos() (interface{}, error) {
github.go:	client := github.NewClient(nil)
github.go:	opt := &github.RepositoryListOptions{Type: "owner", Sort: "updated", Direction: "desc"}
github.go:	repos, _, err := client.Repositories.List("moul", opt)
github.go:	return repos, err
github.go:}
keybase.go:package moul
keybase.go:import (
keybase.go:	"encoding/json"
keybase.go:	"github.com/parnurzeal/gorequest"
keybase.go:	"github.com/patrickmn/go-cache"
keybase.go:)
keybase.go:func init() {
keybase.go:	RegisterAction("keybase", GetKeybaseProfileAction)
keybase.go:}
keybase.go:type KeybaseProof struct {
keybase.go:	HumanURL          string `json:"human_url"`
keybase.go:	Nametag           string `json:"nametag"`
keybase.go:	PresentationGroup string `json:"presentation_group"`
keybase.go:	PresentationTag   string `json:"presentation_tag"`
keybase.go:	ProofID           string `json:"proof_id"`
keybase.go:	ProofType         string `json:"proof_type"`
keybase.go:	ProofURL          string `json:"proof_url"`
keybase.go:	ServiceURL        string `json:"service_url"`
keybase.go:	SigID             string `json:"sig_id"`
keybase.go:	State             int    `json:"state"`
keybase.go:}
keybase.go:type KeybaseUser struct {
keybase.go:	Basics struct {
keybase.go:		Ctime         int    `json:"ctime"`
keybase.go:		IDVersion     int    `json:"id_version"`
keybase.go:		LastIDChange  int    `json:"last_id_change"`
keybase.go:		Mtime         int    `json:"mtime"`
keybase.go:		TrackVersion  int    `json:"track_version"`
keybase.go:		Username      string `json:"username"`
keybase.go:		UsernameCased string `json:"username_cased"`
keybase.go:	} `json:"basics"`
keybase.go:	CryptocurrencyAddresses map[string][]struct {
keybase.go:		Address string `json:"address"`
keybase.go:		SigID   string `json:"sig_id"`
keybase.go:	} `json:"cryptocurrency_addresses"`
keybase.go:	Devices  struct{} `json:"devices"`
keybase.go:	ID       string   `json:"id"`
keybase.go:	Pictures map[string]struct {
keybase.go:		Height int    `json:"height"`
keybase.go:		Source string `json:"source"`
keybase.go:		URL    string `json:"url"`
keybase.go:		Width  int    `json:"width"`
keybase.go:	} `json:"pictures"`
keybase.go:	Profile struct {
keybase.go:		Bio      string `json:"bio"`
keybase.go:		FullName string `json:"full_name"`
keybase.go:		Location string `json:"location"`
keybase.go:		Mtime    int    `json:"mtime"`
keybase.go:	} `json:"profile"`
keybase.go:	ProofsSummary struct {
keybase.go:		All                 []KeybaseProof            `json:"all"`
keybase.go:		ByPresentationGroup map[string][]KeybaseProof `json:"by_presentation_group"`
keybase.go:		ByProofType         map[string][]KeybaseProof `json:"by_proof_type"`
keybase.go:	} `json:"proofs_summary"`
keybase.go:	PublicKeys struct {
keybase.go:		AllBundles           []string            `json:"all_bundles"`
keybase.go:		EldestKeyFingerprint string              `json:"eldest_key_fingerprint"`
keybase.go:		EldestKid            string              `json:"eldest_kid"`
keybase.go:		Families             map[string][]string `json:"families"`
keybase.go:		PgpPublicKeys        []string            `json:"pgp_public_keys"`
keybase.go:		Primary              struct {
keybase.go:			Bundle         string      `json:"bundle"`
keybase.go:			Ctime          int         `json:"ctime"`
keybase.go:			EldestKid      interface{} `json:"eldest_kid"`
keybase.go:			Etime          int         `json:"etime"`
keybase.go:			KeyAlgo        int         `json:"key_algo"`
keybase.go:			KeyBits        int         `json:"key_bits"`
keybase.go:			KeyFingerprint string      `json:"key_fingerprint"`
keybase.go:			KeyLevel       int         `json:"key_level"`
keybase.go:			KeyType        int         `json:"key_type"`
keybase.go:			Kid            string      `json:"kid"`
keybase.go:			Mtime          int         `json:"mtime"`
keybase.go:			SelfSigned     bool        `json:"self_signed"`
keybase.go:			SigningKid     string      `json:"signing_kid"`
keybase.go:			Status         int         `json:"status"`
keybase.go:			Ukbid          string      `json:"ukbid"`
keybase.go:		} `json:"primary"`
keybase.go:		Sibkeys []string      `json:"sibkeys"`
keybase.go:		Subkeys []interface{} `json:"subkeys"`
keybase.go:	} `json:"public_keys"`
keybase.go:	Sigs struct {
keybase.go:		Last struct {
keybase.go:			PayloadHash string `json:"payload_hash"`
keybase.go:			Seqno       int    `json:"seqno"`
keybase.go:			SigID       string `json:"sig_id"`
keybase.go:		} `json:"last"`
keybase.go:	} `json:"sigs"`
keybase.go:}
keybase.go:type KeybaseResponse struct {
keybase.go:	Status struct {
keybase.go:		Code int
keybase.go:		Name string
keybase.go:	}
keybase.go:	Them []KeybaseUser
keybase.go:}
keybase.go:const KeybaseLookupURL = "https://keybase.io/_/api/1.0/user/lookup.json?usernames=moul"
keybase.go:func GetKeybaseProfileAction(args []string) (interface{}, error) {
keybase.go:	if profile, found := moulCache.Get("keybase-profile"); found {
keybase.go:		return profile, nil
keybase.go:	}
keybase.go:	profile, err := GetKeybaseProfile()
keybase.go:	if err != nil {
keybase.go:		return nil, err
keybase.go:	}
keybase.go:	moulCache.Set("keybase-profile", profile, cache.DefaultExpiration)
keybase.go:	return profile, nil
keybase.go:}
keybase.go:func GetKeybaseProfile() (*KeybaseUser, error) {
keybase.go:	_, body, errs := gorequest.New().Get(KeybaseLookupURL).End()
keybase.go:	if len(errs) > 0 {
keybase.go:		return nil, errs[0]
keybase.go:	}
keybase.go:	var response KeybaseResponse
keybase.go:	if err := json.Unmarshal([]byte(body), &response); err != nil {
keybase.go:		return nil, err
keybase.go:	}
keybase.go:	user := response.Them[0]
keybase.go:	return &user, nil
keybase.go:}
manfred-touron.go:package moul
manfred-touron.go:import "github.com/moul/manfred-touron"
manfred-touron.go:func init() {
manfred-touron.go:	RegisterAction("manfred-touron", GetManfredTouronAction)
manfred-touron.go:}
manfred-touron.go:type ManfredTouron struct {
manfred-touron.go:	Firstname string
manfred-touron.go:	Lastname  string
manfred-touron.go:	Website   string
manfred-touron.go:	GitHub    string
manfred-touron.go:	Twitter   string
manfred-touron.go:	Location  string
manfred-touron.go:	Headline  string
manfred-touron.go:	Emoji     string
manfred-touron.go:	Groups    []string
manfred-touron.go:}
manfred-touron.go:func GetManfredTouronAction(args []string) (interface{}, error) {
manfred-touron.go:	return GetManfredTouron(), nil
manfred-touron.go:}
manfred-touron.go:func GetManfredTouron() ManfredTouron {
manfred-touron.go:	return ManfredTouron{
manfred-touron.go:		Firstname: manfredtouron.Firstname,
manfred-touron.go:		Lastname:  manfredtouron.Lastname,
manfred-touron.go:		Website:   manfredtouron.Website,
manfred-touron.go:		GitHub:    manfredtouron.GitHub,
manfred-touron.go:		Twitter:   manfredtouron.Twitter,
manfred-touron.go:		Location:  manfredtouron.Location,
manfred-touron.go:		Headline:  manfredtouron.Headline,
manfred-touron.go:		Emoji:     manfredtouron.Emoji,
manfred-touron.go:	}
manfred-touron.go:}
moul-as-a-service.go:package moul
moul-as-a-service.go:var ActionsMap map[string]Action
moul-as-a-service.go:type Action func([]string) (interface{}, error)
moul-as-a-service.go:func RegisterAction(name string, action Action) {
moul-as-a-service.go:	if ActionsMap == nil {
moul-as-a-service.go:		ActionsMap = make(map[string]Action)
moul-as-a-service.go:	}
moul-as-a-service.go:	ActionsMap[name] = action
moul-as-a-service.go:}
moul-as-a-service.go:func Actions() map[string]Action {
moul-as-a-service.go:	return ActionsMap
moul-as-a-service.go:}
moul-as-a-service_test.go:package moul
moul-as-a-service_test.go:import (
moul-as-a-service_test.go:	"testing"
moul-as-a-service_test.go:	. "github.com/smartystreets/goconvey/convey"
moul-as-a-service_test.go:)
moul-as-a-service_test.go:func Test(t *testing.T) {
moul-as-a-service_test.go:	Convey("Testing package", t, func() {
moul-as-a-service_test.go:		// RegisterAction
moul-as-a-service_test.go:		// PlainResponse
moul-as-a-service_test.go:		So(len(Actions()) > 0, ShouldBeTrue)
moul-as-a-service_test.go:	})
moul-as-a-service_test.go:}
tumblr.go:package moul
tumblr.go:import (
tumblr.go:	"encoding/json"
tumblr.go:	"github.com/parnurzeal/gorequest"
tumblr.go:	"github.com/patrickmn/go-cache"
tumblr.go:)
tumblr.go:func init() {
tumblr.go:	RegisterAction("tumblr", GetLatestBlogPostsAction)
tumblr.go:}
tumblr.go:const TumblrFeedURL = "https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&num=10&q=http://manfredtouron.tumblr.com/rss"
tumblr.go:type TumblrEntry struct {
tumblr.go:	Title          string
tumblr.go:	Link           string
tumblr.go:	Author         string
tumblr.go:	PublishedDate  string
tumblr.go:	ContentSnippet string
tumblr.go:	Content        string
tumblr.go:	Categories     []string
tumblr.go:}
tumblr.go:type TumblrResponse struct {
tumblr.go:	ResponseData struct {
tumblr.go:		Feed struct {
tumblr.go:			FeedURL     string
tumblr.go:			Title       string
tumblr.go:			Link        string
tumblr.go:			Author      string
tumblr.go:			Description string
tumblr.go:			Type        string
tumblr.go:			Entries     []TumblrEntry
tumblr.go:		}
tumblr.go:	}
tumblr.go:	// ResponseDetails
tumblr.go:	ResponseStatus int
tumblr.go:}
tumblr.go:func GetLatestBlogPostsAction(args []string) (interface{}, error) {
tumblr.go:	if posts, found := moulCache.Get("tumblr-posts"); found {
tumblr.go:		return posts, nil
tumblr.go:	}
tumblr.go:	posts, err := GetLatestBlogPosts()
tumblr.go:	if err != nil {
tumblr.go:		return nil, err
tumblr.go:	}
tumblr.go:	moulCache.Set("tumblr-posts", posts, cache.DefaultExpiration)
tumblr.go:	return posts, nil
tumblr.go:}
tumblr.go:func GetLatestBlogPosts() (*TumblrResponse, error) {
tumblr.go:	_, body, errs := gorequest.New().Get(TumblrFeedURL).End()
tumblr.go:	if len(errs) > 0 {
tumblr.go:		return nil, errs[0]
tumblr.go:	}
tumblr.go:	var response TumblrResponse
tumblr.go:	err := json.Unmarshal([]byte(body), &response)
tumblr.go:	return &response, err
tumblr.go:}
gen.sh:#!/bin/bash
gen.sh:#set -x
gen.sh:set -e
gen.sh:# ensure haveged is running
gen.sh:dir=`mktemp -d`
gen.sh:curdir=`pwd`
gen.sh:GPG=/usr/bin/gpg
gen.sh:function cleanup {
gen.sh:    set -x
gen.sh:    rm -rf $dir
gen.sh:}
gen.sh:trap cleanup EXIT
gen.sh:pushd $dir
gen.sh:cat $curdir/stdin | $GPG --batch --gen-key
gen.sh:$GPG --keyring ./myring.pub --secret-keyring ./myring.sec --list-secret-keys
gen.sh:KEY=$($GPG --keyring ./myring.pub --secret-keyring ./myring.sec --list-secret-keys | grep sec | cut -d/ -f2 | cut -d' ' -f1 | grep -v myring.sec)
gen.sh:popd
gen.sh:mkdir -p output/$KEY
gen.sh:mv $dir/myring.* output/$KEY
gen.sh:echo output/$KEY
grep.sh:#!/bin/bash
grep.sh:KEYS=$(ls output)
grep.sh:echo 42 or 1337
grep.sh:echo "${KEYS}" | egrep --color=yes '1337'
grep.sh:echo "${KEYS}" | egrep --color=yes '0FF1C[E3]'
grep.sh:echo "${KEYS}" | egrep --color=yes '4B1D'
grep.sh:echo "${KEYS}" | egrep --color=yes 'B[A4]DC0D[E3]'
grep.sh:echo "${KEYS}" | egrep --color=yes 'B[4A]DF00D'
grep.sh:echo "${KEYS}" | egrep --color=yes 'B[4A]DC[4A]F[E3]'
grep.sh:echo "${KEYS}" | egrep --color=yes 'D[E3][A4]DB[E3][E3]F'
grep.sh:echo "${KEYS}" | egrep --color=yes 'F[E3][E3]1B[4A]D'
grep.sh:echo "${KEYS}" | egrep --color=yes 'D[E3][A4]DF[E3][E3]D'
grep.sh:echo "${KEYS}" | egrep --color=yes 'B[4A]B[3E]'
grep.sh:echo "${KEYS}" | egrep --color=yes 'D[3E]F[4A]C[E3]'
grep.sh:echo "${KEYS}" | egrep --color=yes '8173'
grep.sh:echo "${KEYS}" | egrep --color=yes 'C001'
grep.sh:echo "${KEYS}" | egrep --color=yes '[5S]002[3E]2'
grep.sh:echo "${KEYS}" | egrep --color=yes 'ABCDE'
grep.sh:echo "${KEYS}" | egrep --color=yes 'EDCBA'
grep.sh:echo "${KEYS}" | egrep --color=yes '12345'
grep.sh:echo "${KEYS}" | egrep --color=yes '54321'
grep.sh:echo "${KEYS}" | egrep --color=yes '^4242'
grep.sh:echo "${KEYS}" | egrep --color=yes '4242$'
grep.sh:echo "${KEYS}" | egrep --color=yes '^0000'
grep.sh:echo "${KEYS}" | egrep --color=yes '0000$'
grep.sh:echo "${KEYS}" | egrep 88 | egrep 25 | egrep  01 | egrep --color=yes '(25|01|88)' # birthdate
grep.sh:echo
grep.sh:if [ "1" = "0" ]; then
grep.sh:    echo hexspeaks
grep.sh:    for word in $(cat hexspeak | sed '/...../!d'); do
grep.sh:        echo "${KEYS}" | egrep --color=yes $word
grep.sh:    done
grep.sh:    echo
grep.sh:fi
grep.sh:echo redundants
grep.sh:echo ==========
grep.sh:#echo "- ABAB"
grep.sh:#echo "- AA"
grep.sh:#echo "${KEYS}" | egrep --color=yes '([0-9A-F]{2})\1'
grep.sh:#echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1'
grep.sh:#echo
grep.sh:#echo "- AAA"
grep.sh:#echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1{2}'
grep.sh:#echo "- ABCABC"
grep.sh:#echo "${KEYS}" | egrep --color=yes '([0-9A-F]{3})\1'
grep.sh:#echo "- ABCABCABC"
grep.sh:#echo "${KEYS}" | egrep --color=yes '([0-9A-F]{3})\1{2}'
grep.sh:echo "- ABCDABCD"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F]{4})\1'
grep.sh:#echo "- AABBCC"
grep.sh:#echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1([0-9A-F])\2([0-9A-F])\3'
grep.sh:echo "- AABBBBCC"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1([0-9A-F])\2{3}([0-9A-F])\3'
grep.sh:echo "- AAAABBCC"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1{3}([0-9A-F])\2([0-9A-F])\3'
grep.sh:echo "- AABBCCCC"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1([0-9A-F])\2([0-9A-F])\3{3}'
grep.sh:#echo "- ABCDDABC"
grep.sh:#echo "${KEYS}" | egrep --color=yes '([0-9A-F]{3})([0-9A-F]{2})\1'
grep.sh:echo "- AABBBCCC"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1([0-9A-F])\2{2}([0-9A-F])\3{2}'
grep.sh:echo "- AAABBBCC"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1{2}([0-9A-F])\2{2}([0-9A-F])\3'
grep.sh:echo "- AAABBCCC"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1{2}([0-9A-F])\2([0-9A-F])\3{2}'
grep.sh:echo "- AABBCCDD"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1([0-9A-F])\2([0-9A-F])\3([0-9A-F])\4'
grep.sh:echo "- xxxxAAAA"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1{3}$'
grep.sh:echo "- AAAAxxxx"
grep.sh:echo "${KEYS}" | egrep --color=yes '^([0-9A-F])\1{3}'
grep.sh:echo "- AAAAA"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1{4}'
grep.sh:echo "- AAAAAA"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1{5}'
grep.sh:echo "- AAAAAAA"
grep.sh:echo "${KEYS}" | egrep --color=yes '([0-9A-F])\1{6}'
grep.sh:echo
grep.sh:printf "Total keys: %d\n" $(echo "${KEYS}" | wc -l)
grep.sh:du -hs output
stdin.example:%echo Generating key...
stdin.example:Key-Type: RSA
stdin.example:Key-Length: 4096
stdin.example:Key-Usage: encrypt,sign,auth
stdin.example:Subkey-Type: RSA
stdin.example:Subkey-Length: 4096
stdin.example:Subkey-Usage: encrypt,sign,auth
stdin.example:Name-Real: Manfred Touron
stdin.example:Name-Comment: http://m.42.am/
stdin.example:Name-Email: m@42.am
stdin.example:Expire-Date: 0
stdin.example:Passphrase: blahblah
stdin.example:%secring myring.sec
stdin.example:%pubring myring.pub
stdin.example:%commit
stdin.example:%echo done
alpha/.dockerignore:rootfs
alpha/.dockerignore:data.tar.*
alpha/.dockerignore:busybox-static.deb
alpha/Dockerfile:FROM multiarch/busybox:alpha-slim
alpha/Dockerfile:ADD qemu-alpha-static.tar.xz /usr/bin
alpha/arch:alpha
alpha/deb:http://opensource.exmeritus.com/mirror/debian-ports//pool-alpha/main/b/busybox/busybox-static_1.22.0-15_alpha.deb
alpha/deb:http://mirrors.fe.up.pt/debian-ports//pool-alpha/main/b/busybox/busybox-static_1.22.0-15_alpha.deb
alpha/deb:http://ftp.kr.debian.org/debian-ports//pool-alpha/main/b/busybox/busybox-static_1.22.0-15_alpha.deb
alpha/deb:http://debian.nctu.edu.tw/debian-ports//pool-alpha/main/b/busybox/busybox-static_1.22.0-15_alpha.deb
alpha/deb:http://ftp.de.debian.org/debian-ports//pool-alpha/main/b/busybox/busybox-static_1.22.0-15_alpha.deb
alpha/deb:http://debian.advalem.net/debian-ports//pool-alpha/main/b/busybox/busybox-static_1.22.0-15_alpha.deb
alpha/qemu_arch:alpha
alpha/slim/Dockerfile:FROM scratch
alpha/slim/Dockerfile:ADD rootfs.tar.xz /
alpha/slim/Dockerfile:CMD ["/bin/sh"]
alpha/slim/Dockerfile:ENV ARCH=alpha
amd64/.dockerignore:rootfs
amd64/.dockerignore:data.tar.*
amd64/.dockerignore:busybox-static.deb
amd64/Dockerfile:FROM multiarch/busybox:amd64-slim
amd64/arch:amd64
amd64/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_amd64.deb
amd64/slim/Dockerfile:FROM scratch
amd64/slim/Dockerfile:ADD rootfs.tar.xz /
amd64/slim/Dockerfile:CMD ["/bin/sh"]
amd64/slim/Dockerfile:ENV ARCH=amd64
arm64/.dockerignore:rootfs
arm64/.dockerignore:data.tar.*
arm64/.dockerignore:busybox-static.deb
arm64/Dockerfile:FROM multiarch/busybox:arm64-slim
arm64/Dockerfile:ADD qemu-aarch64-static.tar.xz /usr/bin
arm64/arch:arm64
arm64/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_arm64.deb
arm64/qemu_arch:aarch64
arm64/slim/Dockerfile:FROM scratch
arm64/slim/Dockerfile:ADD rootfs.tar.xz /
arm64/slim/Dockerfile:CMD ["/bin/sh"]
arm64/slim/Dockerfile:ENV ARCH=arm64
armel/.dockerignore:rootfs
armel/.dockerignore:data.tar.*
armel/.dockerignore:busybox-static.deb
armel/Dockerfile:FROM multiarch/busybox:armel-slim
armel/Dockerfile:ADD qemu-arm-static.tar.xz /usr/bin
armel/arch:armel
armel/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armel.deb
armel/qemu_arch:arm
armel/slim/Dockerfile:FROM scratch
armel/slim/Dockerfile:ADD rootfs.tar.xz /
armel/slim/Dockerfile:CMD ["/bin/sh"]
armel/slim/Dockerfile:ENV ARCH=armel
armhf/.dockerignore:rootfs
armhf/.dockerignore:data.tar.*
armhf/.dockerignore:busybox-static.deb
armhf/Dockerfile:FROM multiarch/busybox:armhf-slim
armhf/Dockerfile:ADD qemu-arm-static.tar.xz /usr/bin
armhf/arch:armhf
armhf/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_armhf.deb
armhf/qemu_arch:arm
armhf/slim/Dockerfile:FROM scratch
armhf/slim/Dockerfile:ADD rootfs.tar.xz /
armhf/slim/Dockerfile:CMD ["/bin/sh"]
armhf/slim/Dockerfile:ENV ARCH=armhf
clean.sh:#!/bin/sh
clean.sh:rm -rf [ahikmpsx]*
hppa/.dockerignore:rootfs
hppa/.dockerignore:data.tar.*
hppa/.dockerignore:busybox-static.deb
hppa/Dockerfile:FROM multiarch/busybox:hppa-slim
hppa/arch:hppa
hppa/deb:http://opensource.exmeritus.com/mirror/debian-ports//pool-hppa/main/b/busybox/busybox-static_1.22.0-15_hppa.deb
hppa/deb:http://mirrors.fe.up.pt/debian-ports//pool-hppa/main/b/busybox/busybox-static_1.22.0-15_hppa.deb
hppa/deb:http://ftp.kr.debian.org/debian-ports//pool-hppa/main/b/busybox/busybox-static_1.22.0-15_hppa.deb
hppa/deb:http://debian.nctu.edu.tw/debian-ports//pool-hppa/main/b/busybox/busybox-static_1.22.0-15_hppa.deb
hppa/deb:http://ftp.de.debian.org/debian-ports//pool-hppa/main/b/busybox/busybox-static_1.22.0-15_hppa.deb
hppa/deb:http://debian.advalem.net/debian-ports//pool-hppa/main/b/busybox/busybox-static_1.22.0-15_hppa.deb
hppa/slim/Dockerfile:FROM scratch
hppa/slim/Dockerfile:ADD rootfs.tar.xz /
hppa/slim/Dockerfile:CMD ["/bin/sh"]
hppa/slim/Dockerfile:ENV ARCH=hppa
hurd-i386/.dockerignore:rootfs
hurd-i386/.dockerignore:data.tar.*
hurd-i386/.dockerignore:busybox-static.deb
hurd-i386/Dockerfile:FROM multiarch/busybox:hurd-i386-slim
hurd-i386/arch:hurd-i386
hurd-i386/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-12_hurd-i386.deb
hurd-i386/slim/Dockerfile:FROM scratch
hurd-i386/slim/Dockerfile:ADD rootfs.tar.xz /
hurd-i386/slim/Dockerfile:CMD ["/bin/sh"]
hurd-i386/slim/Dockerfile:ENV ARCH=hurd-i386
i386/.dockerignore:rootfs
i386/.dockerignore:data.tar.*
i386/.dockerignore:busybox-static.deb
i386/Dockerfile:FROM multiarch/busybox:i386-slim
i386/arch:i386
i386/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_i386.deb
i386/slim/Dockerfile:FROM scratch
i386/slim/Dockerfile:ADD rootfs.tar.xz /
i386/slim/Dockerfile:CMD ["/bin/sh"]
i386/slim/Dockerfile:ENV ARCH=i386
kfreebsd-amd64/.dockerignore:rootfs
kfreebsd-amd64/.dockerignore:data.tar.*
kfreebsd-amd64/.dockerignore:busybox-static.deb
kfreebsd-amd64/Dockerfile:FROM multiarch/busybox:kfreebsd-amd64-slim
kfreebsd-amd64/arch:kfreebsd-amd64
kfreebsd-amd64/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-amd64.deb
kfreebsd-amd64/slim/Dockerfile:FROM scratch
kfreebsd-amd64/slim/Dockerfile:ADD rootfs.tar.xz /
kfreebsd-amd64/slim/Dockerfile:CMD ["/bin/sh"]
kfreebsd-amd64/slim/Dockerfile:ENV ARCH=kfreebsd-amd64
kfreebsd-i386/.dockerignore:rootfs
kfreebsd-i386/.dockerignore:data.tar.*
kfreebsd-i386/.dockerignore:busybox-static.deb
kfreebsd-i386/Dockerfile:FROM multiarch/busybox:kfreebsd-i386-slim
kfreebsd-i386/arch:kfreebsd-i386
kfreebsd-i386/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_kfreebsd-i386.deb
kfreebsd-i386/slim/Dockerfile:FROM scratch
kfreebsd-i386/slim/Dockerfile:ADD rootfs.tar.xz /
kfreebsd-i386/slim/Dockerfile:CMD ["/bin/sh"]
kfreebsd-i386/slim/Dockerfile:ENV ARCH=kfreebsd-i386
m68k/.dockerignore:rootfs
m68k/.dockerignore:data.tar.*
m68k/.dockerignore:busybox-static.deb
m68k/Dockerfile:FROM multiarch/busybox:m68k-slim
m68k/arch:m68k
m68k/deb:http://opensource.exmeritus.com/mirror/debian-ports//pool-m68k/main/b/busybox/busybox-static_1.22.0-15_m68k.deb
m68k/deb:http://mirrors.fe.up.pt/debian-ports//pool-m68k/main/b/busybox/busybox-static_1.22.0-15_m68k.deb
m68k/deb:http://ftp.kr.debian.org/debian-ports//pool-m68k/main/b/busybox/busybox-static_1.22.0-15_m68k.deb
m68k/deb:http://debian.nctu.edu.tw/debian-ports//pool-m68k/main/b/busybox/busybox-static_1.22.0-15_m68k.deb
m68k/deb:http://ftp.de.debian.org/debian-ports//pool-m68k/main/b/busybox/busybox-static_1.22.0-15_m68k.deb
m68k/deb:http://debian.advalem.net/debian-ports//pool-m68k/main/b/busybox/busybox-static_1.22.0-15_m68k.deb
m68k/slim/Dockerfile:FROM scratch
m68k/slim/Dockerfile:ADD rootfs.tar.xz /
m68k/slim/Dockerfile:CMD ["/bin/sh"]
m68k/slim/Dockerfile:ENV ARCH=m68k
mips/.dockerignore:rootfs
mips/.dockerignore:data.tar.*
mips/.dockerignore:busybox-static.deb
mips/Dockerfile:FROM multiarch/busybox:mips-slim
mips/arch:mips
mips/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mips.deb
mips/slim/Dockerfile:FROM scratch
mips/slim/Dockerfile:ADD rootfs.tar.xz /
mips/slim/Dockerfile:CMD ["/bin/sh"]
mips/slim/Dockerfile:ENV ARCH=mips
mipsel/.dockerignore:rootfs
mipsel/.dockerignore:data.tar.*
mipsel/.dockerignore:busybox-static.deb
mipsel/Dockerfile:FROM multiarch/busybox:mipsel-slim
mipsel/arch:mipsel
mipsel/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_mipsel.deb
mipsel/slim/Dockerfile:FROM scratch
mipsel/slim/Dockerfile:ADD rootfs.tar.xz /
mipsel/slim/Dockerfile:CMD ["/bin/sh"]
mipsel/slim/Dockerfile:ENV ARCH=mipsel
powerpc/.dockerignore:rootfs
powerpc/.dockerignore:data.tar.*
powerpc/.dockerignore:busybox-static.deb
powerpc/Dockerfile:FROM multiarch/busybox:powerpc-slim
powerpc/Dockerfile:ADD qemu-ppc-static.tar.xz /usr/bin
powerpc/arch:powerpc
powerpc/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_powerpc.deb
powerpc/qemu_arch:ppc
powerpc/slim/Dockerfile:FROM scratch
powerpc/slim/Dockerfile:ADD rootfs.tar.xz /
powerpc/slim/Dockerfile:CMD ["/bin/sh"]
powerpc/slim/Dockerfile:ENV ARCH=powerpc
powerpcspe/.dockerignore:rootfs
powerpcspe/.dockerignore:data.tar.*
powerpcspe/.dockerignore:busybox-static.deb
powerpcspe/Dockerfile:FROM multiarch/busybox:powerpcspe-slim
powerpcspe/arch:powerpcspe
powerpcspe/deb:http://opensource.exmeritus.com/mirror/debian-ports//pool-powerpcspe/main/b/busybox/busybox-static_1.22.0-15_powerpcspe.deb
powerpcspe/deb:http://mirrors.fe.up.pt/debian-ports//pool-powerpcspe/main/b/busybox/busybox-static_1.22.0-15_powerpcspe.deb
powerpcspe/deb:http://ftp.kr.debian.org/debian-ports//pool-powerpcspe/main/b/busybox/busybox-static_1.22.0-15_powerpcspe.deb
powerpcspe/deb:http://debian.nctu.edu.tw/debian-ports//pool-powerpcspe/main/b/busybox/busybox-static_1.22.0-15_powerpcspe.deb
powerpcspe/deb:http://ftp.de.debian.org/debian-ports//pool-powerpcspe/main/b/busybox/busybox-static_1.22.0-15_powerpcspe.deb
powerpcspe/deb:http://debian.advalem.net/debian-ports//pool-powerpcspe/main/b/busybox/busybox-static_1.22.0-15_powerpcspe.deb
powerpcspe/slim/Dockerfile:FROM scratch
powerpcspe/slim/Dockerfile:ADD rootfs.tar.xz /
powerpcspe/slim/Dockerfile:CMD ["/bin/sh"]
powerpcspe/slim/Dockerfile:ENV ARCH=powerpcspe
ppc64/.dockerignore:rootfs
ppc64/.dockerignore:data.tar.*
ppc64/.dockerignore:busybox-static.deb
ppc64/Dockerfile:FROM multiarch/busybox:ppc64-slim
ppc64/arch:ppc64
ppc64/deb:http://opensource.exmeritus.com/mirror/debian-ports//pool-ppc64/main/b/busybox/busybox-static_1.22.0-15_ppc64.deb
ppc64/deb:http://mirrors.fe.up.pt/debian-ports//pool-ppc64/main/b/busybox/busybox-static_1.22.0-15_ppc64.deb
ppc64/deb:http://ftp.kr.debian.org/debian-ports//pool-ppc64/main/b/busybox/busybox-static_1.22.0-15_ppc64.deb
ppc64/deb:http://debian.nctu.edu.tw/debian-ports//pool-ppc64/main/b/busybox/busybox-static_1.22.0-15_ppc64.deb
ppc64/deb:http://ftp.de.debian.org/debian-ports//pool-ppc64/main/b/busybox/busybox-static_1.22.0-15_ppc64.deb
ppc64/deb:http://debian.advalem.net/debian-ports//pool-ppc64/main/b/busybox/busybox-static_1.22.0-15_ppc64.deb
ppc64/slim/Dockerfile:FROM scratch
ppc64/slim/Dockerfile:ADD rootfs.tar.xz /
ppc64/slim/Dockerfile:CMD ["/bin/sh"]
ppc64/slim/Dockerfile:ENV ARCH=ppc64
ppc64el/.dockerignore:rootfs
ppc64el/.dockerignore:data.tar.*
ppc64el/.dockerignore:busybox-static.deb
ppc64el/Dockerfile:FROM multiarch/busybox:ppc64el-slim
ppc64el/arch:ppc64el
ppc64el/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_ppc64el.deb
ppc64el/slim/Dockerfile:FROM scratch
ppc64el/slim/Dockerfile:ADD rootfs.tar.xz /
ppc64el/slim/Dockerfile:CMD ["/bin/sh"]
ppc64el/slim/Dockerfile:ENV ARCH=ppc64el
s390x/.dockerignore:rootfs
s390x/.dockerignore:data.tar.*
s390x/.dockerignore:busybox-static.deb
s390x/Dockerfile:FROM multiarch/busybox:s390x-slim
s390x/Dockerfile:ADD qemu-s390x-static.tar.xz /usr/bin
s390x/arch:s390x
s390x/deb:http://ftp.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://http.us.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.ca.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.mx.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.br.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.cl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://download.unesp.br/linux/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://sft.if.usp.br/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://debian.torredehanoi.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.cn.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.jp.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.kr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.hk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.tw.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://debian.mirror.ac.za/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.de.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.at.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.bg.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.ch.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.cz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.dk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.ee.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.es.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.fi.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.fr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.hr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.hu.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.ie.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.is.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.it.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.lt.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.nl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.no.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.pl.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.ro.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.ru.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.se.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.si.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.tr.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.uk.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.wa.au.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/deb:http://ftp.nz.debian.org/debian/pool/main/b/busybox/busybox-static_1.22.0-15+b1_s390x.deb
s390x/qemu_arch:s390x
s390x/slim/Dockerfile:FROM scratch
s390x/slim/Dockerfile:ADD rootfs.tar.xz /
s390x/slim/Dockerfile:CMD ["/bin/sh"]
s390x/slim/Dockerfile:ENV ARCH=s390x
sh4/.dockerignore:rootfs
sh4/.dockerignore:data.tar.*
sh4/.dockerignore:busybox-static.deb
sh4/Dockerfile:FROM multiarch/busybox:sh4-slim
sh4/Dockerfile:ADD qemu-sh4-static.tar.xz /usr/bin
sh4/arch:sh4
sh4/deb:http://opensource.exmeritus.com/mirror/debian-ports//pool-sh4/main/b/busybox/busybox-static_1.22.0-15_sh4.deb
sh4/deb:http://mirrors.fe.up.pt/debian-ports//pool-sh4/main/b/busybox/busybox-static_1.22.0-15_sh4.deb
sh4/deb:http://ftp.kr.debian.org/debian-ports//pool-sh4/main/b/busybox/busybox-static_1.22.0-15_sh4.deb
sh4/deb:http://debian.nctu.edu.tw/debian-ports//pool-sh4/main/b/busybox/busybox-static_1.22.0-15_sh4.deb
sh4/deb:http://ftp.de.debian.org/debian-ports//pool-sh4/main/b/busybox/busybox-static_1.22.0-15_sh4.deb
sh4/deb:http://debian.advalem.net/debian-ports//pool-sh4/main/b/busybox/busybox-static_1.22.0-15_sh4.deb
sh4/qemu_arch:sh4
sh4/slim/Dockerfile:FROM scratch
sh4/slim/Dockerfile:ADD rootfs.tar.xz /
sh4/slim/Dockerfile:CMD ["/bin/sh"]
sh4/slim/Dockerfile:ENV ARCH=sh4
sparc64/.dockerignore:rootfs
sparc64/.dockerignore:data.tar.*
sparc64/.dockerignore:busybox-static.deb
sparc64/Dockerfile:FROM multiarch/busybox:sparc64-slim
sparc64/arch:sparc64
sparc64/deb:http://opensource.exmeritus.com/mirror/debian-ports//pool-sparc64/main/b/busybox/busybox-static_1.22.0-15_sparc64.deb
sparc64/deb:http://mirrors.fe.up.pt/debian-ports//pool-sparc64/main/b/busybox/busybox-static_1.22.0-15_sparc64.deb
sparc64/deb:http://ftp.kr.debian.org/debian-ports//pool-sparc64/main/b/busybox/busybox-static_1.22.0-15_sparc64.deb
sparc64/deb:http://debian.nctu.edu.tw/debian-ports//pool-sparc64/main/b/busybox/busybox-static_1.22.0-15_sparc64.deb
sparc64/deb:http://ftp.de.debian.org/debian-ports//pool-sparc64/main/b/busybox/busybox-static_1.22.0-15_sparc64.deb
sparc64/deb:http://debian.advalem.net/debian-ports//pool-sparc64/main/b/busybox/busybox-static_1.22.0-15_sparc64.deb
sparc64/slim/Dockerfile:FROM scratch
sparc64/slim/Dockerfile:ADD rootfs.tar.xz /
sparc64/slim/Dockerfile:CMD ["/bin/sh"]
sparc64/slim/Dockerfile:ENV ARCH=sparc64
update.sh:#!/bin/sh
update.sh:ARCHS=${ARCHS:-"alpha amd64 arm64 armel armhf hppa hurd-i386 i386 kfreebsd-amd64 kfreebsd-i386 m68k mips mipsel powerpc powerpcspe ppc64 ppc64el s390x sh4 sparc64 x32"}
update.sh:set -e
update.sh:for arch in ${ARCHS}; do
update.sh:    mkdir -p "${arch}/slim"
update.sh:    # arch
update.sh:    if [ ! -f "${arch}/arch" ]; then
update.sh:	echo "${arch}" > "${arch}/arch"
update.sh:    fi
update.sh:    qemu_arch=$(cat "${arch}/qemu_arch")
update.sh:    # deb
update.sh:    if [ ! -f "${arch}/deb" ]; then
update.sh:	(
update.sh:	    set -x
update.sh:	    curl -s https://packages.debian.org/sid/${arch}/busybox-static/download | tr '"' "\n" | grep -E "http://.*${arch}\\.deb" > "${arch}/deb"
update.sh:	)
update.sh:    fi
update.sh:    deb=$(head -n 1 "${arch}/deb")
update.sh:    if [ ! -f "${arch}/busybox-static.deb" ]; then
update.sh:	(
update.sh:	    set -x
update.sh:	    curl "${deb}" > "${arch}/busybox-static.deb.tmp"
update.sh:	    mv "${arch}/busybox-static.deb.tmp" "${arch}/busybox-static.deb"
update.sh:	)
update.sh:    fi
update.sh:    # extract /bin/busybox
update.sh:    if [ ! -f "${arch}/slim/rootfs/bin/busybox" ]; then
update.sh:	(
update.sh:	    cd "${arch}"
update.sh:	    set -x
update.sh:	    ar vx busybox-static.deb data.tar.xz data.tar.gz
update.sh:	    tar --strip=2 -xvf data.tar.* ./bin/busybox
update.sh:	    mkdir -p ./slim/rootfs/bin
update.sh:	    mv ./busybox ./slim/rootfs/bin/
update.sh:	)
update.sh:    fi
update.sh:    # create symlinks
update.sh:    if [ ! -f "${arch}/slim/rootfs/bin/ls" ]; then
update.sh:	(
update.sh:	    cd "${arch}/slim/rootfs"
update.sh:	    echo "This need binfmt to be configured"
update.sh:	    echo "  docker run --rm --privileged multiarch/qemu-user-static:register --reset."
update.sh:	    for module in $("./bin/busybox" --list-modules); do
update.sh:		mkdir -p "$(dirname $module)"
update.sh:		ln -s /bin/busybox "${module}"
update.sh:	    done
update.sh:	)
update.sh:    fi
update.sh:    # create dirs and files
update.sh:    if [ ! -d "${arch}/slim/rootfs/dev" ]; then
update.sh:	(
update.sh:	    cd "${arch}/slim/rootfs"
update.sh:	    set -x
update.sh:	    mkdir -p bin etc dev dev/pts lib proc sys tmp
update.sh:	    cp /etc/nsswitch.conf etc/nsswitch.conf
update.sh:	    echo root:x:0:0:root:/:/bin/sh > etc/passwd
update.sh:	    echo root:x:0: > etc/group
update.sh:	)
update.sh:    fi
update.sh:    # create archive
update.sh:    if [ ! -f "${arch}/slim/rootfs.tar.xz" ]; then
update.sh:	(
update.sh:	    cd "${arch}/slim/rootfs"
update.sh:	    set -x
update.sh:	    tar --numeric-owner -cJf ../rootfs.tar.xz .
update.sh:	)
update.sh:    fi
update.sh:    
update.sh:    if [ -n "${qemu_arch}" -a ! -f "${arch}/qemu-${qemu_arch}-static.tar.xz" ]; then
update.sh:	wget https://github.com/multiarch/qemu-user-static/releases/download/v2.0.0/amd64_qemu-${qemu_arch}-static.tar.xz -O "${arch}/qemu-${qemu_arch}-static.tar.xz"
update.sh:    fi
update.sh:    # create Dockerifle
update.sh:    cat > "${arch}/slim/Dockerfile" <<EOF
update.sh:FROM scratch
update.sh:ADD rootfs.tar.xz /
update.sh:CMD ["/bin/sh"]
update.sh:ENV ARCH=${arch}
update.sh:EOF
update.sh:    if [ "${qemu_arch}" = "" ]; then
update.sh:	cat > "${arch}/Dockerfile" <<EOF
update.sh:FROM multiarch/busybox:${arch}-slim
update.sh:EOF
update.sh:    else
update.sh:	cat > "${arch}/Dockerfile" <<EOF
update.sh:FROM multiarch/busybox:${arch}-slim
update.sh:ADD qemu-${qemu_arch}-static.tar.xz /usr/bin
update.sh:EOF
update.sh:    fi
update.sh:    # create .dockerignore
update.sh:    if [ ! -f "${arch}/.dockerignore" ]; then
update.sh:	cat > "${arch}/.dockerignore" <<EOF
update.sh:rootfs
update.sh:data.tar.*
update.sh:busybox-static.deb
update.sh:EOF
update.sh:    fi
update.sh:    # info
update.sh:    echo "======================="
update.sh:    echo "arch=$arch"
update.sh:    echo "qemu_arch=$qemu_arch"
update.sh:    echo "deb=$deb"
update.sh:    (
update.sh:	set -x
update.sh:	ls -la "${arch}/busybox-static.deb"
update.sh:	du -hs "${arch}/slim/rootfs"
update.sh:	find "${arch}/slim/rootfs" -type f | wc -l
update.sh:	ls -la "${arch}/slim/rootfs.tar.xz"
update.sh:    )
update.sh:    # build & test
update.sh:    (
update.sh:	set -x
update.sh:	docker build -t "multiarch/busybox:${arch}-slim" "${arch}/slim"
update.sh:	docker build -t "multiarch/busybox:${arch}" "${arch}"
update.sh:	if [ -n "${qemu_arch}" -o "${arch}" = "amd64" ]; then
update.sh:	    docker run -it --rm "multiarch/busybox:${arch}" uname -a
update.sh:	fi
update.sh:    )
update.sh:done
x32/.dockerignore:rootfs
x32/.dockerignore:data.tar.*
x32/.dockerignore:busybox-static.deb
x32/Dockerfile:FROM multiarch/busybox:x32-slim
x32/arch:x32
x32/deb:http://opensource.exmeritus.com/mirror/debian-ports//pool-x32/main/b/busybox/busybox-static_1.22.0-15_x32.deb
x32/deb:http://mirrors.fe.up.pt/debian-ports//pool-x32/main/b/busybox/busybox-static_1.22.0-15_x32.deb
x32/deb:http://ftp.kr.debian.org/debian-ports//pool-x32/main/b/busybox/busybox-static_1.22.0-15_x32.deb
x32/deb:http://debian.nctu.edu.tw/debian-ports//pool-x32/main/b/busybox/busybox-static_1.22.0-15_x32.deb
x32/deb:http://ftp.de.debian.org/debian-ports//pool-x32/main/b/busybox/busybox-static_1.22.0-15_x32.deb
x32/deb:http://debian.advalem.net/debian-ports//pool-x32/main/b/busybox/busybox-static_1.22.0-15_x32.deb
x32/slim/Dockerfile:FROM scratch
x32/slim/Dockerfile:ADD rootfs.tar.xz /
x32/slim/Dockerfile:CMD ["/bin/sh"]
x32/slim/Dockerfile:ENV ARCH=x32
Makefile:.PHONY: test
Makefile:test:
Makefile:	go test -v ./...
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	go get github.com/smartystreets/goconvey
Makefile:	goconvey -port 7042 -cover -workDir=$(realpath .) -depth=0
board.go:package chessboard
board.go:import "fmt"
board.go:var (
board.go:	ErrForbiddenCoordinates = fmt.Errorf("forbidden coordinates")
board.go:	ErrForbiddenIndex       = fmt.Errorf("forbidden index")
board.go:)
board.go:type Board struct {
board.go:	Length int
board.go:	Height int
board.go:}
board.go:func NewBoard(length, height uint) *Board {
board.go:	return &Board{
board.go:		Length: int(length),
board.go:		Height: int(height),
board.go:	}
board.go:}
board.go:func (b *Board) GetSize() int {
board.go:	return b.Length * b.Height
board.go:}
board.go:func (b *Board) NewBoolVector() BoardBoolVector {
board.go:	vector := make(BoardBoolVector, b.GetSize())
board.go:	return vector
board.go:}
board.go:func (b *Board) ValidateCoordinates(coordinates Coordinates) error {
board.go:	if coordinates.XPos < 0 || coordinates.XPos >= b.Length || coordinates.YPos < 0 || coordinates.YPos >= b.Height {
board.go:		return ErrForbiddenCoordinates
board.go:	}
board.go:	return nil
board.go:}
board.go:func (b *Board) CoordinatesToIndex(coordinates Coordinates) (BoardIndex, error) {
board.go:	err := b.ValidateCoordinates(coordinates)
board.go:	if err != nil {
board.go:		return -1, err
board.go:	}
board.go:	index := BoardIndex(coordinates.YPos*b.Length + coordinates.XPos)
board.go:	return index, nil
board.go:}
board.go:func (b *Board) IndexToCoordinates(index BoardIndex) (Coordinates, error) {
board.go:	if index < 0 || int(index) >= b.GetSize() {
board.go:		return Coordinates{-1, -1}, ErrForbiddenIndex
board.go:	}
board.go:	x := int(index) % b.Length
board.go:	y := int(index) / b.Length
board.go:	return Coordinates{x, y}, nil
board.go:}
board.go:func (b *Board) GetPositions() []Coordinates {
board.go:	positions := []Coordinates{}
board.go:	for y := 0; y < b.Height; y++ {
board.go:		for x := 0; x < b.Length; x++ {
board.go:			positions = append(positions, Coordinates{x, y})
board.go:		}
board.go:	}
board.go:	return positions
board.go:}
board.go:type BoardBoolVector []bool
board.go:type Coordinates struct {
board.go:	XPos int
board.go:	YPos int
board.go:}
board.go:type BoardIndex int
board_test.go:package chessboard
board_test.go:import (
board_test.go:	"testing"
board_test.go:	. "github.com/smartystreets/goconvey/convey"
board_test.go:)
board_test.go:func TestBoard(t *testing.T) {
board_test.go:	Convey("Testing Board", t, func() {
board_test.go:		Convey("Board.GetPositions()", func() {
board_test.go:			board := NewBoard(3, 3)
board_test.go:			expected := []Coordinates{
board_test.go:				{0, 0}, {1, 0}, {2, 0},
board_test.go:				{0, 1}, {1, 1}, {2, 1},
board_test.go:				{0, 2}, {1, 2}, {2, 2},
board_test.go:			}
board_test.go:			So(board.GetPositions(), ShouldResemble, expected)
board_test.go:			board = NewBoard(4, 3)
board_test.go:			expected = []Coordinates{
board_test.go:				{0, 0}, {1, 0}, {2, 0}, {3, 0},
board_test.go:				{0, 1}, {1, 1}, {2, 1}, {3, 1},
board_test.go:				{0, 2}, {1, 2}, {2, 2}, {3, 2},
board_test.go:			}
board_test.go:			So(board.GetPositions(), ShouldResemble, expected)
board_test.go:		})
board_test.go:		Convey("Board.CoordinatesToIndex()", func() {
board_test.go:			board := NewBoard(3, 3)
board_test.go:			Convey("valid data", func() {
board_test.go:				index, err := board.CoordinatesToIndex(Coordinates{0, 0})
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(index, ShouldEqual, 0)
board_test.go:				index, err = board.CoordinatesToIndex(Coordinates{1, 1})
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(index, ShouldEqual, 4)
board_test.go:				index, err = board.CoordinatesToIndex(Coordinates{2, 2})
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(index, ShouldEqual, 8)
board_test.go:			})
board_test.go:			Convey("invalid data", func() {
board_test.go:				index, err := board.CoordinatesToIndex(Coordinates{-1, 0})
board_test.go:				So(err, ShouldNotBeNil)
board_test.go:				So(index, ShouldEqual, -1)
board_test.go:				index, err = board.CoordinatesToIndex(Coordinates{0, -1})
board_test.go:				So(err, ShouldNotBeNil)
board_test.go:				So(index, ShouldEqual, -1)
board_test.go:				index, err = board.CoordinatesToIndex(Coordinates{3, 0})
board_test.go:				So(err, ShouldNotBeNil)
board_test.go:				So(index, ShouldEqual, -1)
board_test.go:				index, err = board.CoordinatesToIndex(Coordinates{0, 3})
board_test.go:				So(err, ShouldNotBeNil)
board_test.go:				So(index, ShouldEqual, -1)
board_test.go:			})
board_test.go:		})
board_test.go:		Convey("Board.IndexToCoordinates()", func() {
board_test.go:			Convey("valid data (3x3)", func() {
board_test.go:				board := NewBoard(3, 3)
board_test.go:				coordinates, err := board.IndexToCoordinates(0)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{0, 0})
board_test.go:				coordinates, err = board.IndexToCoordinates(1)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{1, 0})
board_test.go:				coordinates, err = board.IndexToCoordinates(2)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{2, 0})
board_test.go:				coordinates, err = board.IndexToCoordinates(3)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{0, 1})
board_test.go:				coordinates, err = board.IndexToCoordinates(4)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{1, 1})
board_test.go:				coordinates, err = board.IndexToCoordinates(5)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{2, 1})
board_test.go:				coordinates, err = board.IndexToCoordinates(6)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{0, 2})
board_test.go:				coordinates, err = board.IndexToCoordinates(7)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{1, 2})
board_test.go:				coordinates, err = board.IndexToCoordinates(8)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{2, 2})
board_test.go:			})
board_test.go:			Convey("valid data - wide (1x4)", func() {
board_test.go:				board := NewBoard(1, 4)
board_test.go:				coordinates, err := board.IndexToCoordinates(0)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{0, 0})
board_test.go:				coordinates, err = board.IndexToCoordinates(1)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{0, 1})
board_test.go:				coordinates, err = board.IndexToCoordinates(2)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{0, 2})
board_test.go:				coordinates, err = board.IndexToCoordinates(3)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{0, 3})
board_test.go:			})
board_test.go:			Convey("valid data - long (4x1)", func() {
board_test.go:				board := NewBoard(4, 1)
board_test.go:				coordinates, err := board.IndexToCoordinates(0)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{0, 0})
board_test.go:				coordinates, err = board.IndexToCoordinates(1)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{1, 0})
board_test.go:				coordinates, err = board.IndexToCoordinates(2)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{2, 0})
board_test.go:				coordinates, err = board.IndexToCoordinates(3)
board_test.go:				So(err, ShouldBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{3, 0})
board_test.go:			})
board_test.go:			Convey("invalid data", func() {
board_test.go:				board := NewBoard(3, 3)
board_test.go:				coordinates, err := board.IndexToCoordinates(-1)
board_test.go:				So(err, ShouldNotBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{-1, -1})
board_test.go:				coordinates, err = board.IndexToCoordinates(9)
board_test.go:				So(err, ShouldNotBeNil)
board_test.go:				So(coordinates, ShouldResemble, Coordinates{-1, -1})
board_test.go:			})
board_test.go:		})
board_test.go:	})
board_test.go:}
permutations.go:package chessboard
permutations.go:import "sync"
permutations.go:type Permutation struct {
permutations.go:	Pieces    []PieceType
permutations.go:	Depth     int
permutations.go:	RangeSize int
permutations.go:	Indexes   map[int]int
permutations.go:}
permutations.go:func NewPermutation(pieces map[PieceType]int, rangeSize int) *Permutation {
permutations.go:	permutation := Permutation{
permutations.go:		Pieces:  make([]PieceType, 0),
permutations.go:		Indexes: make(map[int]int),
permutations.go:	}
permutations.go:	for kind, quantity := range pieces {
permutations.go:		for ; quantity > 0; quantity-- {
permutations.go:			permutation.Pieces = append(permutation.Pieces, kind)
permutations.go:		}
permutations.go:	}
permutations.go:	permutation.Depth = len(permutation.Pieces)
permutations.go:	if rangeSize != 0 {
permutations.go:		permutation.RangeSize = rangeSize
permutations.go:	} else {
permutations.go:		permutation.RangeSize = permutation.Depth
permutations.go:	}
permutations.go:	return &permutation
permutations.go:}
permutations.go:func (p *Permutation) Generator() <-chan string {
permutations.go:	c := make(chan string, p.RangeSize)
permutations.go:	go func() {
permutations.go:		defer close(c)
permutations.go:		if len(p.Pieces) == 0 {
permutations.go:			return
permutations.go:		}
permutations.go:		var wg sync.WaitGroup
permutations.go:		wg.Add(p.RangeSize)
permutations.go:		for i := 1; i <= p.RangeSize; i++ {
permutations.go:			go func(i int) {
permutations.go:				// Permute()
permutations.go:				wg.Done()
permutations.go:			}(i)
permutations.go:		}
permutations.go:		wg.Wait()
permutations.go:	}()
permutations.go:	return c
permutations.go:}
permutations_test.go:package chessboard
permutations_test.go:import (
permutations_test.go:	"fmt"
permutations_test.go:	"testing"
permutations_test.go:	. "github.com/smartystreets/goconvey/convey"
permutations_test.go:)
permutations_test.go:func TestPermutation(t *testing.T) {
permutations_test.go:	Convey("Testing Permutation", t, func() {
permutations_test.go:		Convey("NewPermutation", func() {
permutations_test.go:			permutation := NewPermutation(map[PieceType]int{
permutations_test.go:				KingPieceType:   1,
permutations_test.go:				KnightPieceType: 2,
permutations_test.go:			}, 0)
permutations_test.go:			So(permutation.Pieces, ShouldResemble, []PieceType{KingPieceType, KnightPieceType, KnightPieceType})
permutations_test.go:			So(permutation.Depth, ShouldEqual, 3)
permutations_test.go:			So(permutation.RangeSize, ShouldEqual, 3)
permutations_test.go:		})
permutations_test.go:		Convey("Testing generator", func() {
permutations_test.go:			permutation := NewPermutation(map[PieceType]int{
permutations_test.go:				KingPieceType: 1,
permutations_test.go:			}, 3)
permutations_test.go:			So(permutation.Pieces, ShouldResemble, []PieceType{KingPieceType})
permutations_test.go:			So(permutation.Depth, ShouldEqual, 1)
permutations_test.go:			So(permutation.RangeSize, ShouldEqual, 3)
permutations_test.go:			for perm := range permutation.Generator() {
permutations_test.go:				fmt.Println(perm)
permutations_test.go:			}
permutations_test.go:		})
permutations_test.go:	})
permutations_test.go:}
piece.go:package chessboard
piece.go:type PieceInterface interface {
piece.go:	Movements() []PieceMovement
piece.go:	Symbol() string
piece.go:}
piece.go:// Piece is a generic piece
piece.go:type Piece struct {
piece.go:	Board *Board
piece.go:	XPos  int
piece.go:	YPos  int
piece.go:	PieceInterface
piece.go:}
piece.go:func (p *Piece) GetIndex() (BoardIndex, error) {
piece.go:	return p.Board.CoordinatesToIndex(Coordinates{p.XPos, p.YPos})
piece.go:}
piece.go:func (p *Piece) GetTerritory() (BoardBoolVector, error) {
piece.go:	vector := p.Board.NewBoolVector()
piece.go:	index, err := p.GetIndex()
piece.go:	if err != nil {
piece.go:		return nil, err
piece.go:	}
piece.go:	vector[index] = true
piece.go:	for _, movement := range p.PieceInterface.Movements() {
piece.go:		index, err = p.Board.CoordinatesToIndex(Coordinates{p.XPos + movement.Horizontal, p.YPos + movement.Vertical})
piece.go:		if err == nil {
piece.go:			vector[index] = true
piece.go:		}
piece.go:	}
piece.go:	return vector, nil
piece.go:}
piece.go:func (p *Piece) HorizontalMovements() []PieceMovement {
piece.go:	movements := []PieceMovement{}
piece.go:	for x := -p.LeftDistance(); x < p.RightDistance()+1; x++ {
piece.go:		if x != 0 {
piece.go:			movements = append(movements, PieceMovement{x, 0})
piece.go:		}
piece.go:	}
piece.go:	return movements
piece.go:}
piece.go:func (p *Piece) VerticalMovements() []PieceMovement {
piece.go:	movements := []PieceMovement{}
piece.go:	for y := -p.TopDistance(); y < p.BottomDistance()+1; y++ {
piece.go:		if y != 0 {
piece.go:			movements = append(movements, PieceMovement{0, y})
piece.go:		}
piece.go:	}
piece.go:	return movements
piece.go:}
piece.go:func (p *Piece) DiagonalMovements() []PieceMovement {
piece.go:	movements := []PieceMovement{}
piece.go:	leftDistance := p.LeftDistance()
piece.go:	topDistance := p.TopDistance()
piece.go:	rightDistance := p.RightDistance()
piece.go:	bottomDistance := p.BottomDistance()
piece.go:	leftTopMinDistance := min(leftDistance, topDistance)
piece.go:	for i := 0; i < leftTopMinDistance; i++ {
piece.go:		movements = append(movements, PieceMovement{-(i + 1), -(i + 1)})
piece.go:	}
piece.go:	rightTopMinDistance := min(rightDistance, topDistance)
piece.go:	for i := 0; i < rightTopMinDistance; i++ {
piece.go:		movements = append(movements, PieceMovement{+(i + 1), -(i + 1)})
piece.go:	}
piece.go:	rightBottomMinDistance := min(rightDistance, bottomDistance)
piece.go:	for i := 0; i < rightBottomMinDistance; i++ {
piece.go:		movements = append(movements, PieceMovement{+(i + 1), +(i + 1)})
piece.go:	}
piece.go:	leftBottomMinDistance := min(leftDistance, bottomDistance)
piece.go:	for i := 0; i < leftBottomMinDistance; i++ {
piece.go:		movements = append(movements, PieceMovement{-(i + 1), +(i + 1)})
piece.go:	}
piece.go:	return movements
piece.go:}
piece.go:func (p *Piece) LeftDistance() int {
piece.go:	return p.XPos
piece.go:}
piece.go:func (p *Piece) TopDistance() int {
piece.go:	return p.YPos
piece.go:}
piece.go:func (p *Piece) RightDistance() int {
piece.go:	return p.Board.Length - p.XPos - 1
piece.go:}
piece.go:func (p *Piece) BottomDistance() int {
piece.go:	return p.Board.Height - p.YPos
piece.go:}
piece.go:type PieceMovement struct {
piece.go:	Horizontal int
piece.go:	Vertical   int
piece.go:}
pieces.go:package chessboard
pieces.go:const (
pieces.go:	UnknownPieceType = iota
pieces.go:	KingPieceType
pieces.go:	QueenPieceType
pieces.go:	RookPieceType
pieces.go:	BishopPieceType
pieces.go:	KnightPieceType
pieces.go:)
pieces.go:type PieceType int
pieces.go:// King model
pieces.go:type King struct {
pieces.go:	Piece *Piece
pieces.go:}
pieces.go:// Movements are King's movements
pieces.go:func (k *King) Movements() []PieceMovement {
pieces.go:	return []PieceMovement{
pieces.go:		// Horizontal movements
pieces.go:		{+1, 0}, {-1, 0},
pieces.go:		// Vertical movements
pieces.go:		{0, +1}, {0, -1},
pieces.go:		// Diagonal movements
pieces.go:		{+1, +1}, {-1, -1}, {+1, -1}, {-1, +1},
pieces.go:	}
pieces.go:}
pieces.go:// Symbol is the King's symbol
pieces.go:func (k *King) Symbol() string {
pieces.go:	return "♚"
pieces.go:}
pieces.go:// NewKing returns a King-flavored Piece
pieces.go:func NewKing(board *Board, x, y uint) *Piece {
pieces.go:	piece := Piece{
pieces.go:		Board: board,
pieces.go:		XPos:  int(x),
pieces.go:		YPos:  int(y),
pieces.go:	}
pieces.go:	piece.PieceInterface = &King{Piece: &piece}
pieces.go:	return &piece
pieces.go:}
pieces.go:// Queen model
pieces.go:type Queen struct {
pieces.go:	Piece *Piece
pieces.go:}
pieces.go:// Movements are Queen's movements
pieces.go:func (k *Queen) Movements() []PieceMovement {
pieces.go:	movements := append(k.Piece.HorizontalMovements(), k.Piece.VerticalMovements()...)
pieces.go:	movements = append(movements, k.Piece.DiagonalMovements()...)
pieces.go:	return movements
pieces.go:}
pieces.go:// Symbol is the Queen's symbol
pieces.go:func (k *Queen) Symbol() string {
pieces.go:	return "♛"
pieces.go:}
pieces.go:// NewQueen returns a Queen-flavored Piece
pieces.go:func NewQueen(board *Board, x, y uint) *Piece {
pieces.go:	piece := Piece{
pieces.go:		Board: board,
pieces.go:		XPos:  int(x),
pieces.go:		YPos:  int(y),
pieces.go:	}
pieces.go:	piece.PieceInterface = &Queen{Piece: &piece}
pieces.go:	return &piece
pieces.go:}
pieces.go:// Rook model
pieces.go:type Rook struct {
pieces.go:	Piece *Piece
pieces.go:}
pieces.go:// Movements are Rook's movements
pieces.go:func (k *Rook) Movements() []PieceMovement {
pieces.go:	return append(k.Piece.HorizontalMovements(), k.Piece.VerticalMovements()...)
pieces.go:}
pieces.go:// Symbol is the Rook's symbol
pieces.go:func (k *Rook) Symbol() string {
pieces.go:	return "♜"
pieces.go:}
pieces.go:// NewRook returns a Rook-flavored Piece
pieces.go:func NewRook(board *Board, x, y uint) *Piece {
pieces.go:	piece := Piece{
pieces.go:		Board: board,
pieces.go:		XPos:  int(x),
pieces.go:		YPos:  int(y),
pieces.go:	}
pieces.go:	piece.PieceInterface = &Rook{Piece: &piece}
pieces.go:	return &piece
pieces.go:}
pieces.go:// Bishop model
pieces.go:type Bishop struct {
pieces.go:	Piece *Piece
pieces.go:}
pieces.go:// Movements are Bishop's movements
pieces.go:func (k *Bishop) Movements() []PieceMovement {
pieces.go:	return k.Piece.DiagonalMovements()
pieces.go:}
pieces.go:// Symbol is the Bishop's symbol
pieces.go:func (k *Bishop) Symbol() string {
pieces.go:	return "♝"
pieces.go:}
pieces.go:// NewBishop returns a Bishop-flavored Piece
pieces.go:func NewBishop(board *Board, x, y uint) *Piece {
pieces.go:	piece := Piece{
pieces.go:		Board: board,
pieces.go:		XPos:  int(x),
pieces.go:		YPos:  int(y),
pieces.go:	}
pieces.go:	piece.PieceInterface = &Bishop{Piece: &piece}
pieces.go:	return &piece
pieces.go:}
pieces.go:// Knight model
pieces.go:type Knight struct {
pieces.go:	Piece *Piece
pieces.go:}
pieces.go:// Movements are Knight's movements
pieces.go:func (k *Knight) Movements() []PieceMovement {
pieces.go:	return []PieceMovement{
pieces.go:		// top-left movements
pieces.go:		{-2, +1}, {-1, +2},
pieces.go:		// top-right movements
pieces.go:		{+2, +1}, {+1, +2},
pieces.go:		// bottom-right movements
pieces.go:		{+2, -1}, {+1, -2},
pieces.go:		// bottom-left movements
pieces.go:		{-2, -1}, {-1, -2},
pieces.go:	}
pieces.go:}
pieces.go:// Symbol is the Knight's symbol
pieces.go:func (k *Knight) Symbol() string {
pieces.go:	return "♞"
pieces.go:}
pieces.go:// NewKnight returns a Knight-flavored Piece
pieces.go:func NewKnight(board *Board, x, y uint) *Piece {
pieces.go:	piece := Piece{
pieces.go:		Board: board,
pieces.go:		XPos:  int(x),
pieces.go:		YPos:  int(y),
pieces.go:	}
pieces.go:	piece.PieceInterface = &Knight{Piece: &piece}
pieces.go:	return &piece
pieces.go:}
pieces_test.go:package chessboard
pieces_test.go:import (
pieces_test.go:	"testing"
pieces_test.go:	. "github.com/smartystreets/goconvey/convey"
pieces_test.go:)
pieces_test.go:func TestKing(t *testing.T) {
pieces_test.go:	Convey("Testing King", t, func() {
pieces_test.go:		Convey("Board=3x3, King=1x1", func() {
pieces_test.go:			territory, err := NewKing(NewBoard(3, 3), 1, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, true,
pieces_test.go:				true, true, true,
pieces_test.go:				true, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, King=0x0", func() {
pieces_test.go:			territory, err := NewKing(NewBoard(3, 3), 0, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, false,
pieces_test.go:				true, true, false,
pieces_test.go:				false, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, King=1x0", func() {
pieces_test.go:			territory, err := NewKing(NewBoard(3, 3), 1, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, true,
pieces_test.go:				true, true, true,
pieces_test.go:				false, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, King=2x0", func() {
pieces_test.go:			territory, err := NewKing(NewBoard(3, 3), 2, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, true,
pieces_test.go:				false, true, true,
pieces_test.go:				false, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, King=2x1", func() {
pieces_test.go:			territory, err := NewKing(NewBoard(3, 3), 2, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, true,
pieces_test.go:				false, true, true,
pieces_test.go:				false, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, King=2x2", func() {
pieces_test.go:			territory, err := NewKing(NewBoard(3, 3), 2, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, false,
pieces_test.go:				false, true, true,
pieces_test.go:				false, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, King=1x2", func() {
pieces_test.go:			territory, err := NewKing(NewBoard(3, 3), 1, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, false,
pieces_test.go:				true, true, true,
pieces_test.go:				true, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, King=0x2", func() {
pieces_test.go:			territory, err := NewKing(NewBoard(3, 3), 0, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, false,
pieces_test.go:				true, true, false,
pieces_test.go:				true, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, King=0x1", func() {
pieces_test.go:			territory, err := NewKing(NewBoard(3, 3), 0, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, false,
pieces_test.go:				true, true, false,
pieces_test.go:				true, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:	})
pieces_test.go:}
pieces_test.go:func TestQueen(t *testing.T) {
pieces_test.go:	Convey("Testing Queen", t, func() {
pieces_test.go:		Convey("Board=3x3, Queen=1x1", func() {
pieces_test.go:			territory, err := NewQueen(NewBoard(3, 3), 1, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, true,
pieces_test.go:				true, true, true,
pieces_test.go:				true, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Queen=0x0", func() {
pieces_test.go:			territory, err := NewQueen(NewBoard(3, 3), 0, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, true,
pieces_test.go:				true, true, false,
pieces_test.go:				true, false, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Queen=1x0", func() {
pieces_test.go:			territory, err := NewQueen(NewBoard(3, 3), 1, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, true,
pieces_test.go:				true, true, true,
pieces_test.go:				false, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Queen=2x0", func() {
pieces_test.go:			territory, err := NewQueen(NewBoard(3, 3), 2, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, true,
pieces_test.go:				false, true, true,
pieces_test.go:				true, false, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Queen=2x1", func() {
pieces_test.go:			territory, err := NewQueen(NewBoard(3, 3), 2, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, true,
pieces_test.go:				true, true, true,
pieces_test.go:				false, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Queen=2x2", func() {
pieces_test.go:			territory, err := NewQueen(NewBoard(3, 3), 2, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, false, true,
pieces_test.go:				false, true, true,
pieces_test.go:				true, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Queen=1x2", func() {
pieces_test.go:			territory, err := NewQueen(NewBoard(3, 3), 1, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, false,
pieces_test.go:				true, true, true,
pieces_test.go:				true, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Queen=0x2", func() {
pieces_test.go:			territory, err := NewQueen(NewBoard(3, 3), 0, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, false, true,
pieces_test.go:				true, true, false,
pieces_test.go:				true, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Queen=0x1", func() {
pieces_test.go:			territory, err := NewQueen(NewBoard(3, 3), 0, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, false,
pieces_test.go:				true, true, true,
pieces_test.go:				true, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:	})
pieces_test.go:}
pieces_test.go:func TestRook(t *testing.T) {
pieces_test.go:	Convey("Testing Rook", t, func() {
pieces_test.go:		Convey("Board=3x3, Rook=1x1", func() {
pieces_test.go:			territory, err := NewRook(NewBoard(3, 3), 1, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, false,
pieces_test.go:				true, true, true,
pieces_test.go:				false, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Rook=0x0", func() {
pieces_test.go:			territory, err := NewRook(NewBoard(3, 3), 0, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, true,
pieces_test.go:				true, false, false,
pieces_test.go:				true, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Rook=1x0", func() {
pieces_test.go:			territory, err := NewRook(NewBoard(3, 3), 1, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, true,
pieces_test.go:				false, true, false,
pieces_test.go:				false, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Rook=2x0", func() {
pieces_test.go:			territory, err := NewRook(NewBoard(3, 3), 2, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, true, true,
pieces_test.go:				false, false, true,
pieces_test.go:				false, false, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Rook=2x1", func() {
pieces_test.go:			territory, err := NewRook(NewBoard(3, 3), 2, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, true,
pieces_test.go:				true, true, true,
pieces_test.go:				false, false, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Rook=2x2", func() {
pieces_test.go:			territory, err := NewRook(NewBoard(3, 3), 2, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, true,
pieces_test.go:				false, false, true,
pieces_test.go:				true, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Rook=1x2", func() {
pieces_test.go:			territory, err := NewRook(NewBoard(3, 3), 1, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, false,
pieces_test.go:				false, true, false,
pieces_test.go:				true, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Rook=0x2", func() {
pieces_test.go:			territory, err := NewRook(NewBoard(3, 3), 0, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, false, false,
pieces_test.go:				true, false, false,
pieces_test.go:				true, true, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Rook=0x1", func() {
pieces_test.go:			territory, err := NewRook(NewBoard(3, 3), 0, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, false, false,
pieces_test.go:				true, true, true,
pieces_test.go:				true, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:	})
pieces_test.go:}
pieces_test.go:func TestBishop(t *testing.T) {
pieces_test.go:	Convey("Testing Bishop", t, func() {
pieces_test.go:		Convey("Board=3x3, Bishop=1x1", func() {
pieces_test.go:			territory, err := NewBishop(NewBoard(3, 3), 1, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, false, true,
pieces_test.go:				false, true, false,
pieces_test.go:				true, false, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Bishop=0x0", func() {
pieces_test.go:			territory, err := NewBishop(NewBoard(3, 3), 0, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, false, false,
pieces_test.go:				false, true, false,
pieces_test.go:				false, false, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Bishop=1x0", func() {
pieces_test.go:			territory, err := NewBishop(NewBoard(3, 3), 1, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, false,
pieces_test.go:				true, false, true,
pieces_test.go:				false, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Bishop=2x0", func() {
pieces_test.go:			territory, err := NewBishop(NewBoard(3, 3), 2, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, true,
pieces_test.go:				false, true, false,
pieces_test.go:				true, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Bishop=2x1", func() {
pieces_test.go:			territory, err := NewBishop(NewBoard(3, 3), 2, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, false,
pieces_test.go:				false, false, true,
pieces_test.go:				false, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Bishop=2x2", func() {
pieces_test.go:			territory, err := NewBishop(NewBoard(3, 3), 2, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, false, false,
pieces_test.go:				false, true, false,
pieces_test.go:				false, false, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Bishop=1x2", func() {
pieces_test.go:			territory, err := NewBishop(NewBoard(3, 3), 1, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, false,
pieces_test.go:				true, false, true,
pieces_test.go:				false, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Bishop=0x2", func() {
pieces_test.go:			territory, err := NewBishop(NewBoard(3, 3), 0, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, true,
pieces_test.go:				false, true, false,
pieces_test.go:				true, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Bishop=0x1", func() {
pieces_test.go:			territory, err := NewBishop(NewBoard(3, 3), 0, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, false,
pieces_test.go:				true, false, false,
pieces_test.go:				false, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:	})
pieces_test.go:}
pieces_test.go:func TestKnight(t *testing.T) {
pieces_test.go:	Convey("Testing Knight", t, func() {
pieces_test.go:		Convey("Board=3x3, Knight=1x1", func() {
pieces_test.go:			territory, err := NewKnight(NewBoard(3, 3), 1, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, false,
pieces_test.go:				false, true, false,
pieces_test.go:				false, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Knight=0x0", func() {
pieces_test.go:			territory, err := NewKnight(NewBoard(3, 3), 0, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, false, false,
pieces_test.go:				false, false, true,
pieces_test.go:				false, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Knight=1x0", func() {
pieces_test.go:			territory, err := NewKnight(NewBoard(3, 3), 1, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, false,
pieces_test.go:				false, false, false,
pieces_test.go:				true, false, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Knight=2x0", func() {
pieces_test.go:			territory, err := NewKnight(NewBoard(3, 3), 2, 0).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, true,
pieces_test.go:				true, false, false,
pieces_test.go:				false, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Knight=2x1", func() {
pieces_test.go:			territory, err := NewKnight(NewBoard(3, 3), 2, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, false, false,
pieces_test.go:				false, false, true,
pieces_test.go:				true, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Knight=2x2", func() {
pieces_test.go:			territory, err := NewKnight(NewBoard(3, 3), 2, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, false,
pieces_test.go:				true, false, false,
pieces_test.go:				false, false, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Knight=1x2", func() {
pieces_test.go:			territory, err := NewKnight(NewBoard(3, 3), 1, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				true, false, true,
pieces_test.go:				false, false, false,
pieces_test.go:				false, true, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Knight=0x2", func() {
pieces_test.go:			territory, err := NewKnight(NewBoard(3, 3), 0, 2).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, true, false,
pieces_test.go:				false, false, true,
pieces_test.go:				true, false, false,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:		Convey("Board=3x3, Knight=0x1", func() {
pieces_test.go:			territory, err := NewKnight(NewBoard(3, 3), 0, 1).GetTerritory()
pieces_test.go:			So(err, ShouldBeNil)
pieces_test.go:			So(territory, ShouldResemble, BoardBoolVector{
pieces_test.go:				false, false, true,
pieces_test.go:				true, false, false,
pieces_test.go:				false, false, true,
pieces_test.go:			})
pieces_test.go:		})
pieces_test.go:	})
pieces_test.go:}
solver.go:package chessboard
solver.go:import "fmt"
solver.go:type Solver struct {
solver.go:	Length int
solver.go:	Height int
solver.go:	Pieces map[PieceType]int
solver.go:}
solver.go:func NewSolver(length, height uint) *Solver {
solver.go:	return &Solver{
solver.go:		Length: int(length),
solver.go:		Height: int(height),
solver.go:		Pieces: make(map[PieceType]int),
solver.go:	}
solver.go:}
solver.go:func (cb *Solver) NewIndexVector() SolverVector {
solver.go:	size := cb.GetVectorSize()
solver.go:	vector := make(SolverVector, size)
solver.go:	for i := 0; i < size; i++ {
solver.go:		vector[i] = i
solver.go:	}
solver.go:	return vector
solver.go:}
solver.go:func (cb *Solver) GroupedPermutations() error {
solver.go:	for kind, quantity := range cb.Pieces {
solver.go:		if quantity <= 0 {
solver.go:			continue
solver.go:		}
solver.go:		vector := cb.NewIndexVector()
solver.go:		for combination := range combinations(vector, quantity) {
solver.go:			fmt.Println(combination)
solver.go:		}
solver.go:		fmt.Println(kind, quantity)
solver.go:	}
solver.go:	//fmt.Println(vector)
solver.go:	return nil
solver.go:}
solver.go:func (cb *Solver) Solve() ([]Board, error) {
solver.go:	solutions := []Board{}
solver.go:	cb.GroupedPermutations()
solver.go:	//for piecesSet := range cb.Tree()
solver.go:	return solutions, nil
solver.go:}
solver.go:func (cb *Solver) GetVectorSize() int {
solver.go:	return cb.Length * cb.Height
solver.go:}
solver.go:func (cb *Solver) NewVector() SolverVector {
solver.go:	vector := make(SolverVector, cb.GetVectorSize())
solver.go:	return vector
solver.go:}
solver.go:type SolverVector []int
solver_test.go:package chessboard
solver_test.go:import (
solver_test.go:	"fmt"
solver_test.go:	"testing"
solver_test.go:	. "github.com/smartystreets/goconvey/convey"
solver_test.go:)
solver_test.go:func TestSolver(t *testing.T) {
solver_test.go:	t.Skip()
solver_test.go:	Convey("Testing Solver", t, func() {
solver_test.go:		Convey("Board 3x3, 1 king, 2 knights", func() {
solver_test.go:			board := NewSolver(3, 3)
solver_test.go:			board.Pieces[KingPieceType] = 1
solver_test.go:			board.Pieces[KnightPieceType] = 2
solver_test.go:			results, err := board.Solve()
solver_test.go:			fmt.Println(results)
solver_test.go:			So(err, ShouldBeNil)
solver_test.go:			So(len(results), ShouldEqual, 12)
solver_test.go:		})
solver_test.go:	})
solver_test.go:}
utils.go:package chessboard
utils.go:import "fmt"
utils.go:func min(a, b int) int {
utils.go:	if a <= b {
utils.go:		return a
utils.go:	}
utils.go:	return b
utils.go:}
utils.go:// FIXME: remove duplicates
utils.go:func combinations(iterable []int, r int) <-chan []int {
utils.go:	c := make(chan []int, 1)
utils.go:	go func() {
utils.go:		defer close(c)
utils.go:		pool := iterable
utils.go:		n := len(pool)
utils.go:		if r > n {
utils.go:			return
utils.go:		}
utils.go:		indices := make([]int, r)
utils.go:		for i := range indices {
utils.go:			indices[i] = i
utils.go:		}
utils.go:		result := make([]int, r)
utils.go:		for i, el := range indices {
utils.go:			result[i] = pool[el]
utils.go:		}
utils.go:		c <- result
utils.go:		for {
utils.go:			i := r - 1
utils.go:			for ; i >= 0 && indices[i] == i+n-r; i -= 1 {
utils.go:			}
utils.go:			if i < 0 {
utils.go:				return
utils.go:			}
utils.go:			indices[i] += 1
utils.go:			for j := i + 1; j < r; j += 1 {
utils.go:				indices[j] = indices[j-1] + 1
utils.go:			}
utils.go:			for ; i < len(indices); i += 1 {
utils.go:				result[i] = pool[indices[i]]
utils.go:			}
utils.go:			c <- result
utils.go:		}
utils.go:	}()
utils.go:	return c
utils.go:}
utils.go:func permutations(iterable []int, r int) {
utils.go:	pool := iterable
utils.go:	n := len(pool)
utils.go:	if r > n {
utils.go:		return
utils.go:	}
utils.go:	indices := make([]int, n)
utils.go:	for i := range indices {
utils.go:		indices[i] = i
utils.go:	}
utils.go:	cycles := make([]int, r)
utils.go:	for i := range cycles {
utils.go:		cycles[i] = n - i
utils.go:	}
utils.go:	result := make([]int, r)
utils.go:	for i, el := range indices[:r] {
utils.go:		result[i] = pool[el]
utils.go:	}
utils.go:	fmt.Println(result)
utils.go:	for n > 0 {
utils.go:		i := r - 1
utils.go:		for ; i >= 0; i -= 1 {
utils.go:			cycles[i] -= 1
utils.go:			if cycles[i] == 0 {
utils.go:				index := indices[i]
utils.go:				for j := i; j < n-1; j += 1 {
utils.go:					indices[j] = indices[j+1]
utils.go:				}
utils.go:				indices[n-1] = index
utils.go:				cycles[i] = n - i
utils.go:			} else {
utils.go:				j := cycles[i]
utils.go:				indices[i], indices[n-j] = indices[n-j], indices[i]
utils.go:				for k := i; k < r; k += 1 {
utils.go:					result[k] = pool[indices[k]]
utils.go:				}
utils.go:				fmt.Println(result)
utils.go:				break
utils.go:			}
utils.go:		}
utils.go:		if i < 0 {
utils.go:			return
utils.go:		}
utils.go:	}
utils.go:}
Makefile:VERSION :=	$(shell cat .goxc.json | jq -c .PackageVersion | sed 's/"//g')
Makefile:SOURCES :=	$(shell find . -name "*.go")
Makefile:GOENV ?=	GO15VENDOREXPERIMENT=1
Makefile:VERSION :=	$(shell cat .goxc.json | grep "PackageVersion" | egrep -o "([0-9]{1,}\.)+[0-9]{1,}")
Makefile:REV :=		$(shell git rev-parse HEAD || git ls-remote https://github.com/scaleway/scaleway-cli  | grep -F $(VERSION) | head -n1 | awk '{print $$1}' || echo "nogit")
Makefile:TAG :=		$(shell git describe --tags --always || echo $(VERSION) || echo "nogit")
Makefile:LDFLAGS =	"-X main.GITCOMMIT=$(TAG) \
Makefile:		-X main.VERSION=$(VERSION) \
Makefile:		-X main.BUILD_DATE=$(date +%s)"
Makefile:GO ?=		$(GOENV) go
Makefile:GODEP ?=	$(GOENV) godep
Makefile:.PHONY: build
Makefile:build: json2toml converter
Makefile:json2toml converter: $(SOURCES)
Makefile:	$(GO) build -ldflags $(LDFLAGS) -o $@ ./cmd/$@
Makefile:.PHONY: test
Makefile:test:
Makefile:	$(GODEP) restore
Makefile:	$(GO) get -t .
Makefile:	$(GO) test  -ldflags $(LDFLAGS) -v .
Makefile:.PHONY: godep-save
Makefile:godep-save:
Makefile:	$(GODEP) save $(LOCAL_PKGS)
Makefile:.PHONY: cover
Makefile:cover:
Makefile:	rm -f profile.out
Makefile:	$(GO) test -ldflags $(LDFLAGS) -covermode=count -coverpkg=. -coverprofile=profile.out .
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	$(GO) get github.com/smartystreets/goconvey
Makefile:	goconvey -cover -port=10042 -workDir="$(realpath .)" -depth=1
Makefile:.PHONY: install
Makefile:install:
Makefile:	$(GO) install ./cmd/converter
Makefile:.PHONY: build-docker
Makefile:build-docker: contrib/docker/.docker-container-built
Makefile:	@echo "now you can 'docker push moul/converter'"
Makefile:dist/latest/converter_latest_linux_386: $(SOURCES)
Makefile:	mkdir -p dist
Makefile:	rm -f dist/latest
Makefile:	(cd dist; ln -s $(VERSION) latest)
Makefile:	goxc -bc="linux,386" xc
Makefile:	cp dist/latest/converter_$(VERSION)_linux_386 $@
Makefile:contrib/docker/.docker-container-built: dist/latest/converter_latest_linux_386
Makefile:	cp $< contrib/docker/converter
Makefile:	docker build -t moul/converter:latest contrib/docker
Makefile:	docker tag -f moul/converter:latest moul/converter:$(shell echo $(VERSION) | sed 's/\+/plus/g')
Makefile:	docker run -it --rm moul/converter --list-filters
Makefile:	docker inspect --type=image --format="{{ .Id }}" moul/converter > $@.tmp
Makefile:	mv $@.tmp $@
cmd/converter/main.go:package main
cmd/converter/main.go:import (
cmd/converter/main.go:	"fmt"
cmd/converter/main.go:	"io/ioutil"
cmd/converter/main.go:	"os"
cmd/converter/main.go:	"github.com/Sirupsen/logrus"
cmd/converter/main.go:	"github.com/codegangsta/cli"
cmd/converter/main.go:	. "github.com/moul/converter"
cmd/converter/main.go:)
cmd/converter/main.go:var (
cmd/converter/main.go:	VERSION   string
cmd/converter/main.go:	GITCOMMIT string
cmd/converter/main.go:)
cmd/converter/main.go:func main() {
cmd/converter/main.go:	app := cli.NewApp()
cmd/converter/main.go:	app.Name = "converter"
cmd/converter/main.go:	app.Author = "Manfred Touron"
cmd/converter/main.go:	app.Email = "https://github.com/moul/converter"
cmd/converter/main.go:	app.Version = VERSION + " (" + GITCOMMIT + ")"
cmd/converter/main.go:	app.EnableBashCompletion = true
cmd/converter/main.go:	app.Before = hookBefore
cmd/converter/main.go:	app.Commands = []cli.Command{}
cmd/converter/main.go:	for _, filter := range RegisteredConverters {
cmd/converter/main.go:		command := cli.Command{
cmd/converter/main.go:			Name:         filter.Name,
cmd/converter/main.go:			Usage:        fmt.Sprintf("%s  ->  %s", filter.InputType, filter.OutputType),
cmd/converter/main.go:			Action:       Action,
cmd/converter/main.go:			BashComplete: BashComplete,
cmd/converter/main.go:		}
cmd/converter/main.go:		app.Commands = append(app.Commands, command)
cmd/converter/main.go:	}
cmd/converter/main.go:	app.Run(os.Args)
cmd/converter/main.go:}
cmd/converter/main.go:func BashComplete(c *cli.Context) {
cmd/converter/main.go:	for _, filter := range RegisteredConverters {
cmd/converter/main.go:		fmt.Println(filter.Name)
cmd/converter/main.go:	}
cmd/converter/main.go:}
cmd/converter/main.go:func hookBefore(c *cli.Context) error {
cmd/converter/main.go:	// configure logrus
cmd/converter/main.go:	return nil
cmd/converter/main.go:}
cmd/converter/main.go:func Action(c *cli.Context) {
cmd/converter/main.go:	args := append([]string{c.Command.Name}, c.Args()...)
cmd/converter/main.go:	if len(args) == 0 {
cmd/converter/main.go:		logrus.Fatalf("You need to use at least one filter")
cmd/converter/main.go:	}
cmd/converter/main.go:	chain, err := NewConverterChain(args)
cmd/converter/main.go:	if err != nil {
cmd/converter/main.go:		logrus.Fatalf("Failed to create a converter: %v", err)
cmd/converter/main.go:	}
cmd/converter/main.go:	input, err := ioutil.ReadAll(os.Stdin)
cmd/converter/main.go:	if err != nil {
cmd/converter/main.go:		logrus.Fatalf("Failed to read from stdin: %v", err)
cmd/converter/main.go:	}
cmd/converter/main.go:	conversionFunc, err := chain.ConversionFunc("[]byte", "interface{}")
cmd/converter/main.go:	if err != nil {
cmd/converter/main.go:		logrus.Fatalf("Failed to generate a conversion func: %v", err)
cmd/converter/main.go:	}
cmd/converter/main.go:	var output interface{}
cmd/converter/main.go:	if err = conversionFunc(input, &output); err != nil {
cmd/converter/main.go:		logrus.Fatalf("Failed to convert: %v", err)
cmd/converter/main.go:	}
cmd/converter/main.go:	fmt.Printf("%v\n", output)
cmd/converter/main.go:}
cmd/json2toml/main.go:package main
cmd/json2toml/main.go:import (
cmd/json2toml/main.go:	"fmt"
cmd/json2toml/main.go:	"io/ioutil"
cmd/json2toml/main.go:	"os"
cmd/json2toml/main.go:	"github.com/Sirupsen/logrus"
cmd/json2toml/main.go:	. "github.com/moul/converter"
cmd/json2toml/main.go:)
cmd/json2toml/main.go:func main() {
cmd/json2toml/main.go:	convertor := Chain(ConvertJsonToStruct, ConvertStructToToml)
cmd/json2toml/main.go:	input, err := ioutil.ReadAll(os.Stdin)
cmd/json2toml/main.go:	if err != nil {
cmd/json2toml/main.go:		logrus.Fatalf("Failed to read from stdin: %v", err)
cmd/json2toml/main.go:	}
cmd/json2toml/main.go:	var output interface{}
cmd/json2toml/main.go:	if err = convertor(input, &output); err != nil {
cmd/json2toml/main.go:		logrus.Fatalf("Failed to convert from json to toml: %v", err)
cmd/json2toml/main.go:	}
cmd/json2toml/main.go:	fmt.Printf("%s", output.([]byte))
cmd/json2toml/main.go:}
contrib/completion/bash_autocomplete:#! /bin/bash
contrib/completion/bash_autocomplete:_cli_bash_autocomplete() {
contrib/completion/bash_autocomplete:     local cur opts base
contrib/completion/bash_autocomplete:     COMPREPLY=()
contrib/completion/bash_autocomplete:     cur="${COMP_WORDS[COMP_CWORD]}"
contrib/completion/bash_autocomplete:     opts=$( ${COMP_WORDS[@]:0:$COMP_CWORD} --generate-bash-completion )
contrib/completion/bash_autocomplete:     COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
contrib/completion/bash_autocomplete:     return 0
contrib/completion/bash_autocomplete: }
contrib/completion/bash_autocomplete:complete -F _cli_bash_autocomplete converter
contrib/completion/zsh_autocomplete:autoload -U compinit && compinit
contrib/completion/zsh_autocomplete:autoload -U bashcompinit && bashcompinit
contrib/completion/zsh_autocomplete:_cli_bash_autocomplete() {
contrib/completion/zsh_autocomplete:     local cur opts base
contrib/completion/zsh_autocomplete:     COMPREPLY=()
contrib/completion/zsh_autocomplete:     cur="${COMP_WORDS[COMP_CWORD]}"
contrib/completion/zsh_autocomplete:     opts=$( ${COMP_WORDS[@]:0:$COMP_CWORD} --generate-bash-completion )
contrib/completion/zsh_autocomplete:     COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
contrib/completion/zsh_autocomplete:     return 0
contrib/completion/zsh_autocomplete: }
contrib/completion/zsh_autocomplete:complete -F _cli_bash_autocomplete converter
contrib/docker/Dockerfile:FROM        scratch
contrib/docker/Dockerfile:ADD         ./converter /converter
contrib/docker/Dockerfile:ENTRYPOINT  ["/converter"]
contrib/homebrew/converter.rb:require "language/go"
contrib/homebrew/converter.rb:class Converter < Formula
contrib/homebrew/converter.rb:  desc "converter: Advanced SSH config - A transparent wrapper that adds regex, aliases, gateways, includes, dynamic hostnames to SSH"
contrib/homebrew/converter.rb:  homepage "https://github.com/moul/converter"
contrib/homebrew/converter.rb:  url "https://github.com/moul/converter/archive/v1.0.0.tar.gz"
contrib/homebrew/converter.rb:  sha256 "c7d53c61c7ca20827979c1d20ba7fcefcb315ac0645821f69ddbe41c432e160b"
contrib/homebrew/converter.rb:  head "https://github.com/moul/converter.git"
contrib/homebrew/converter.rb:  depends_on "go" => :build
contrib/homebrew/converter.rb:  def install
contrib/homebrew/converter.rb:    ENV["GOPATH"] = buildpath
contrib/homebrew/converter.rb:    ENV["CGO_ENABLED"] = "0"
contrib/homebrew/converter.rb:    ENV.prepend_create_path "PATH", buildpath/"bin"
contrib/homebrew/converter.rb:    mkdir_p buildpath/"src/github.com/moul"
contrib/homebrew/converter.rb:    ln_s buildpath, buildpath/"src/github.com/moul/converter"
contrib/homebrew/converter.rb:    Language::Go.stage_deps resources, buildpath/"src"
contrib/homebrew/converter.rb:    # FIXME: update version
contrib/homebrew/converter.rb:    system "go", "get", "github.com/BurntSushi/toml"
contrib/homebrew/converter.rb:    system "go", "get", "github.com/Sirupsen/logrus"
contrib/homebrew/converter.rb:    system "go", "build", "-o", "converter", "./cmd/converter"
contrib/homebrew/converter.rb:    bin.install "converter"
contrib/homebrew/converter.rb:    bash_completion.install "contrib/completion/bash_autocomplete"
contrib/homebrew/converter.rb:    zsh_completion.install "contrib/completion/zsh_autocomplete"
contrib/homebrew/converter.rb:  end
contrib/homebrew/converter.rb:  test do
contrib/homebrew/converter.rb:    output = shell_output(bin/"converter --version")
contrib/homebrew/converter.rb:    assert output.include? "converter version 2"
contrib/homebrew/converter.rb:  end
contrib/homebrew/converter.rb:end
conv_crypto.go:package converter
conv_crypto.go:import (
conv_crypto.go:	"crypto/md5"
conv_crypto.go:	"crypto/sha1"
conv_crypto.go:	"fmt"
conv_crypto.go:)
conv_crypto.go:func init() {
conv_crypto.go:	RegisterConverter(NewConverter("md5").SetTypes("[]byte", "string").SetConversionFunc(ConvertBytesToMd5sum))
conv_crypto.go:	RegisterConverter(NewConverter("sha1").SetTypes("[]byte", "string").SetConversionFunc(ConvertBytesToSha1sum))
conv_crypto.go:}
conv_crypto.go:func ConvertBytesToMd5sum(in interface{}, out *interface{}) (err error) {
conv_crypto.go:	*out = fmt.Sprintf("%x", md5.Sum(in.([]byte)))
conv_crypto.go:	return err
conv_crypto.go:}
conv_crypto.go:func ConvertBytesToSha1sum(in interface{}, out *interface{}) (err error) {
conv_crypto.go:	*out = fmt.Sprintf("%x", sha1.Sum(in.([]byte)))
conv_crypto.go:	return err
conv_crypto.go:}
conv_crypto_test.go:package converter
conv_crypto_test.go:import (
conv_crypto_test.go:	"fmt"
conv_crypto_test.go:	"testing"
conv_crypto_test.go:	. "github.com/smartystreets/goconvey/convey"
conv_crypto_test.go:)
conv_crypto_test.go:func TestConvertBytesToMd5sum(t *testing.T) {
conv_crypto_test.go:	Convey("Testing ConvertBytesToMd5sum", t, func() {
conv_crypto_test.go:		input := []byte("hello world!")
conv_crypto_test.go:		var output interface{}
conv_crypto_test.go:		err := ConvertBytesToMd5sum(input, &output)
conv_crypto_test.go:		So(err, ShouldBeNil)
conv_crypto_test.go:		So(output, ShouldEqual, "fc3ff98e8c6a0d3087d515c0473f8677")
conv_crypto_test.go:	})
conv_crypto_test.go:}
conv_crypto_test.go:func ExampleConvertBytesToMd5sum() {
conv_crypto_test.go:	var output interface{}
conv_crypto_test.go:	ConvertBytesToMd5sum([]byte("hello world!"), &output)
conv_crypto_test.go:	fmt.Println(output)
conv_crypto_test.go:	// Output: fc3ff98e8c6a0d3087d515c0473f8677
conv_crypto_test.go:}
conv_crypto_test.go:func TestConvertBytesToSha1sum(t *testing.T) {
conv_crypto_test.go:	Convey("Testing ConvertBytesToSha1sum", t, func() {
conv_crypto_test.go:		input := []byte("hello world!")
conv_crypto_test.go:		var output interface{}
conv_crypto_test.go:		err := ConvertBytesToSha1sum(input, &output)
conv_crypto_test.go:		So(err, ShouldBeNil)
conv_crypto_test.go:		So(output, ShouldEqual, "430ce34d020724ed75a196dfc2ad67c77772d169")
conv_crypto_test.go:	})
conv_crypto_test.go:}
conv_crypto_test.go:func ExampleConvertBytesToSha1sum() {
conv_crypto_test.go:	var output interface{}
conv_crypto_test.go:	ConvertBytesToSha1sum([]byte("hello world!"), &output)
conv_crypto_test.go:	fmt.Println(output)
conv_crypto_test.go:	// Output: 430ce34d020724ed75a196dfc2ad67c77772d169
conv_crypto_test.go:}
conv_encoding.go:package converter
conv_encoding.go:import (
conv_encoding.go:	"bytes"
conv_encoding.go:	"encoding/base32"
conv_encoding.go:	"encoding/base64"
conv_encoding.go:	"encoding/csv"
conv_encoding.go:	"encoding/hex"
conv_encoding.go:	"encoding/json"
conv_encoding.go:	"encoding/xml"
conv_encoding.go:	"strings"
conv_encoding.go:	"github.com/BurntSushi/toml"
conv_encoding.go:)
conv_encoding.go:func init() {
conv_encoding.go:	RegisterConverter(NewConverter("base64-encode").SetTypes("[]byte", "string").SetConversionFunc(ConvertBytesToBase64))
conv_encoding.go:	RegisterConverter(NewConverter("base64-decode").SetTypes("string", "[]byte").SetConversionFunc(ConvertBase64ToBytes))
conv_encoding.go:	RegisterConverter(NewConverter("base32-encode").SetTypes("[]byte", "string").SetConversionFunc(ConvertBytesToBase32))
conv_encoding.go:	RegisterConverter(NewConverter("base32-decode").SetTypes("string", "[]byte").SetConversionFunc(ConvertBase32ToBytes))
conv_encoding.go:	RegisterConverter(NewConverter("hex-encode").SetTypes("[]byte", "string").SetConversionFunc(ConvertBytesToHex))
conv_encoding.go:	RegisterConverter(NewConverter("hex-decode").SetTypes("string", "[]byte").SetConversionFunc(ConvertHexToBytes))
conv_encoding.go:	RegisterConverter(NewConverter("xml-encode").SetTypes("interface{}", "[]byte").SetConversionFunc(ConvertStructToXml))
conv_encoding.go:	RegisterConverter(NewConverter("xml-decode").SetTypes("[]byte", "interface{}").SetConversionFunc(ConvertXmlToStruct))
conv_encoding.go:	RegisterConverter(NewConverter("json-encode").SetTypes("interface{}", "[]byte").SetConversionFunc(ConvertStructToJson))
conv_encoding.go:	RegisterConverter(NewConverter("json-decode").SetTypes("[]byte", "interface{}").SetConversionFunc(ConvertJsonToStruct))
conv_encoding.go:	RegisterConverter(NewConverter("toml-encode").SetTypes("[]byte", "interface{}").SetConversionFunc(ConvertStructToToml))
conv_encoding.go:	RegisterConverter(NewConverter("csv-decode").SetTypes("string", "[][]string").SetConversionFunc(ConvertStringToCsv))
conv_encoding.go:}
conv_encoding.go:func ConvertBytesToBase64(in interface{}, out *interface{}) error {
conv_encoding.go:	*out = base64.StdEncoding.EncodeToString(in.([]byte))
conv_encoding.go:	return nil
conv_encoding.go:}
conv_encoding.go:func ConvertBase64ToBytes(in interface{}, out *interface{}) (err error) {
conv_encoding.go:	*out, err = base64.StdEncoding.DecodeString(in.(string))
conv_encoding.go:	return err
conv_encoding.go:}
conv_encoding.go:func ConvertBytesToBase32(in interface{}, out *interface{}) error {
conv_encoding.go:	*out = base32.StdEncoding.EncodeToString(in.([]byte))
conv_encoding.go:	return nil
conv_encoding.go:}
conv_encoding.go:func ConvertBase32ToBytes(in interface{}, out *interface{}) (err error) {
conv_encoding.go:	*out, err = base32.StdEncoding.DecodeString(in.(string))
conv_encoding.go:	return err
conv_encoding.go:}
conv_encoding.go:func ConvertBytesToHex(in interface{}, out *interface{}) error {
conv_encoding.go:	*out = hex.EncodeToString(in.([]byte))
conv_encoding.go:	return nil
conv_encoding.go:}
conv_encoding.go:func ConvertHexToBytes(in interface{}, out *interface{}) (err error) {
conv_encoding.go:	*out, err = hex.DecodeString(in.(string))
conv_encoding.go:	return err
conv_encoding.go:}
conv_encoding.go:func ConvertXmlToStruct(in interface{}, out *interface{}) (err error) {
conv_encoding.go:	return xml.Unmarshal(in.([]byte), out)
conv_encoding.go:}
conv_encoding.go:func ConvertStructToXml(in interface{}, out *interface{}) (err error) {
conv_encoding.go:	*out, err = xml.Marshal(in)
conv_encoding.go:	return err
conv_encoding.go:}
conv_encoding.go:func ConvertJsonToStruct(in interface{}, out *interface{}) (err error) {
conv_encoding.go:	return json.Unmarshal(in.([]byte), out)
conv_encoding.go:}
conv_encoding.go:func ConvertStructToJson(in interface{}, out *interface{}) (err error) {
conv_encoding.go:	*out, err = json.Marshal(in)
conv_encoding.go:	return err
conv_encoding.go:}
conv_encoding.go:func ConvertStructToToml(in interface{}, out *interface{}) (err error) {
conv_encoding.go:	buf := new(bytes.Buffer)
conv_encoding.go:	err = toml.NewEncoder(buf).Encode(in)
conv_encoding.go:	*out = buf.Bytes()
conv_encoding.go:	return err
conv_encoding.go:}
conv_encoding.go:func ConvertStringToCsv(in interface{}, out *interface{}) (err error) {
conv_encoding.go:	r := csv.NewReader(strings.NewReader(in.(string)))
conv_encoding.go:	*out, err = r.ReadAll()
conv_encoding.go:	return err
conv_encoding.go:}
conv_encoding_test.go:package converter
conv_encoding_test.go:import (
conv_encoding_test.go:	"fmt"
conv_encoding_test.go:	"testing"
conv_encoding_test.go:	. "github.com/smartystreets/goconvey/convey"
conv_encoding_test.go:)
conv_encoding_test.go:func TestConvertBytesToBase64(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertBytesToBase64", t, func() {
conv_encoding_test.go:		input := []byte("hello world!")
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertBytesToBase64(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output, ShouldEqual, "aGVsbG8gd29ybGQh")
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_encoding_test.go:func ExampleConvertBytesToBase64() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	ConvertBytesToBase64([]byte("hello world!"), &output)
conv_encoding_test.go:	fmt.Println(output)
conv_encoding_test.go:	// Output: aGVsbG8gd29ybGQh
conv_encoding_test.go:}
conv_encoding_test.go:func TestConvertBase64ToBytes(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertBase64ToBytes", t, func() {
conv_encoding_test.go:		input := "aGVsbG8gd29ybGQh"
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertBase64ToBytes(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output, ShouldResemble, []byte("hello world!"))
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_encoding_test.go:func ExampleConvertBase64ToBytes() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	ConvertBase64ToBytes("aGVsbG8gd29ybGQh", &output)
conv_encoding_test.go:	fmt.Println(output)
conv_encoding_test.go:	// Output: [104 101 108 108 111 32 119 111 114 108 100 33]
conv_encoding_test.go:}
conv_encoding_test.go:func TestConvertBytesToBase32(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertBytesToBase32", t, func() {
conv_encoding_test.go:		input := []byte("hello world!")
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertBytesToBase32(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output, ShouldEqual, "NBSWY3DPEB3W64TMMQQQ====")
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_encoding_test.go:func ExampleConvertBytesToBase32() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	ConvertBytesToBase32([]byte("hello world!"), &output)
conv_encoding_test.go:	fmt.Println(output)
conv_encoding_test.go:	// Output: NBSWY3DPEB3W64TMMQQQ====
conv_encoding_test.go:}
conv_encoding_test.go:func TestConvertBase32ToBytes(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertBase32ToBytes", t, func() {
conv_encoding_test.go:		input := "NBSWY3DPEB3W64TMMQQQ===="
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertBase32ToBytes(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output, ShouldResemble, []byte("hello world!"))
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_encoding_test.go:func ExampleConvertBase32ToBytes() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	ConvertBase32ToBytes("NBSWY3DPEB3W64TMMQQQ====", &output)
conv_encoding_test.go:	fmt.Println(output)
conv_encoding_test.go:	// Output: [104 101 108 108 111 32 119 111 114 108 100 33]
conv_encoding_test.go:}
conv_encoding_test.go:func TestConvertBytesToHex(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertBytesToHex", t, func() {
conv_encoding_test.go:		input := []byte("hello world!")
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertBytesToHex(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output, ShouldEqual, "68656c6c6f20776f726c6421")
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_encoding_test.go:func ExampleConvertBytesToHex() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	ConvertBytesToHex([]byte("hello world!"), &output)
conv_encoding_test.go:	fmt.Println(output)
conv_encoding_test.go:	// Output: 68656c6c6f20776f726c6421
conv_encoding_test.go:}
conv_encoding_test.go:func TestConvertHexToBytes(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertHexToBytes", t, func() {
conv_encoding_test.go:		input := "68656c6c6f20776f726c6421"
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertHexToBytes(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output, ShouldResemble, []byte("hello world!"))
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_encoding_test.go:func ExampleConvertHexToBytes() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	ConvertHexToBytes("68656c6c6f20776f726c6421", &output)
conv_encoding_test.go:	fmt.Println(output)
conv_encoding_test.go:	// Output: [104 101 108 108 111 32 119 111 114 108 100 33]
conv_encoding_test.go:}
conv_encoding_test.go:func ExampleConvertJsonToStruct() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	input := []byte(`["Hello",42,3.1415]`)
conv_encoding_test.go:	ConvertJsonToStruct(input, &output)
conv_encoding_test.go:	fmt.Printf("%+v\n", output)
conv_encoding_test.go:	// Output: [Hello 42 3.1415]
conv_encoding_test.go:}
conv_encoding_test.go:func TestConvertJsonToStruct(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertJsonToStruct", t, func() {
conv_encoding_test.go:		input := []byte(`["Hello",42,3.1415]`)
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertJsonToStruct(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output.([]interface{})[0], ShouldEqual, "Hello")
conv_encoding_test.go:		So(output.([]interface{})[1], ShouldEqual, int(42))
conv_encoding_test.go:		So(output.([]interface{})[2], ShouldEqual, 3.1415)
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_encoding_test.go:func ExampleConvertStructToJson() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	input := []interface{}{
conv_encoding_test.go:		"Hello", 42, 3.1415,
conv_encoding_test.go:	}
conv_encoding_test.go:	ConvertStructToJson(input, &output)
conv_encoding_test.go:	fmt.Printf("%s\n", output)
conv_encoding_test.go:	// Output: ["Hello",42,3.1415]
conv_encoding_test.go:}
conv_encoding_test.go:func ExampleConvertStructToToml() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	input := map[string]interface{}{
conv_encoding_test.go:		"a": "Hello",
conv_encoding_test.go:		"b": 42,
conv_encoding_test.go:		"c": 3.1415,
conv_encoding_test.go:	}
conv_encoding_test.go:	ConvertStructToToml(input, &output)
conv_encoding_test.go:	fmt.Printf("%s\n", output)
conv_encoding_test.go:	// Output:
conv_encoding_test.go:	// a = "Hello"
conv_encoding_test.go:	// b = 42
conv_encoding_test.go:	// c = 3.1415
conv_encoding_test.go:}
conv_encoding_test.go:func TestConvertStructToJson(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertStructToJson", t, func() {
conv_encoding_test.go:		input := []interface{}{
conv_encoding_test.go:			"Hello", 42, 3.1415,
conv_encoding_test.go:		}
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertStructToJson(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output, ShouldResemble, []byte(`["Hello",42,3.1415]`))
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_encoding_test.go:/* fixme: broken test
conv_encoding_test.go:func ExampleConvertXmlToStruct() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	input := []byte(`<string>Hello</string><int>42</int><float64>3.1415</float64>`)
conv_encoding_test.go:	ConvertXmlToStruct(input, &output)
conv_encoding_test.go:	fmt.Printf("%+v\n", output)
conv_encoding_test.go:	// Output: [Hello 42 3.1415]
conv_encoding_test.go:}
conv_encoding_test.go:*/
conv_encoding_test.go:/* fixme: broken test
conv_encoding_test.go:func TestConvertXmlToStruct(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertXmlToStruct", t, func() {
conv_encoding_test.go:		input := []byte(`<string>Hello</string><int>42</int><float64>3.1415</float64>`)
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertXmlToStruct(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output.([]interface{})[0], ShouldEqual, "Hello")
conv_encoding_test.go:		So(output.([]interface{})[1], ShouldEqual, int(42))
conv_encoding_test.go:		So(output.([]interface{})[2], ShouldEqual, 3.1415)
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_encoding_test.go:*/
conv_encoding_test.go:func ExampleConvertStructToXml() {
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	input := []interface{}{
conv_encoding_test.go:		"Hello", 42, 3.1415,
conv_encoding_test.go:	}
conv_encoding_test.go:	ConvertStructToXml(input, &output)
conv_encoding_test.go:	fmt.Printf("%s\n", output)
conv_encoding_test.go:	// Output: <string>Hello</string><int>42</int><float64>3.1415</float64>
conv_encoding_test.go:}
conv_encoding_test.go:func TestConvertStructToXml(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertStructToXml", t, func() {
conv_encoding_test.go:		input := []interface{}{
conv_encoding_test.go:			"Hello", 42, 3.1415,
conv_encoding_test.go:		}
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertStructToXml(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output, ShouldResemble, []byte(`<string>Hello</string><int>42</int><float64>3.1415</float64>`))
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_encoding_test.go:func ExampleConvertStringToCsv() {
conv_encoding_test.go:	input := `first_name,last_name,username
conv_encoding_test.go:"Rob","Pike",rob
conv_encoding_test.go:Ken,Thompson,ken
conv_encoding_test.go:"Robert","Griesemer","gri"
conv_encoding_test.go:"Manfred",Touron,moul
conv_encoding_test.go:`
conv_encoding_test.go:	var output interface{}
conv_encoding_test.go:	ConvertStringToCsv(input, &output)
conv_encoding_test.go:	fmt.Printf("%+v\n", output)
conv_encoding_test.go:	// Output: [[first_name last_name username] [Rob Pike rob] [Ken Thompson ken] [Robert Griesemer gri] [Manfred Touron moul]]
conv_encoding_test.go:}
conv_encoding_test.go:func TestConvertStringToCsv(t *testing.T) {
conv_encoding_test.go:	Convey("Testing ConvertStringToCsv", t, func() {
conv_encoding_test.go:		input := `first_name,last_name,username
conv_encoding_test.go:"Rob","Pike",rob
conv_encoding_test.go:Ken,Thompson,ken
conv_encoding_test.go:"Robert","Griesemer","gri"
conv_encoding_test.go:"Manfred",Touron,moul
conv_encoding_test.go:`
conv_encoding_test.go:		var output interface{}
conv_encoding_test.go:		err := ConvertStringToCsv(input, &output)
conv_encoding_test.go:		So(err, ShouldBeNil)
conv_encoding_test.go:		So(output, ShouldResemble, [][]string{
conv_encoding_test.go:			[]string{"first_name", "last_name", "username"},
conv_encoding_test.go:			[]string{"Rob", "Pike", "rob"},
conv_encoding_test.go:			[]string{"Ken", "Thompson", "ken"},
conv_encoding_test.go:			[]string{"Robert", "Griesemer", "gri"},
conv_encoding_test.go:			[]string{"Manfred", "Touron", "moul"},
conv_encoding_test.go:		})
conv_encoding_test.go:	})
conv_encoding_test.go:}
conv_other.go:package converter
conv_other.go:import (
conv_other.go:	"io/ioutil"
conv_other.go:	"net/http"
conv_other.go:	"time"
conv_other.go:)
conv_other.go:func init() {
conv_other.go:	RegisterConverter(NewConverter("fetch").SetTypes("string", "[]byte").SetConversionFunc(FetchUrlToBytes))
conv_other.go:	RegisterConverter(NewConverter("sleep-100ms").SetConversionFunc(HundredMillisecondDelayer))
conv_other.go:	RegisterConverter(NewConverter("sleep-1s").SetConversionFunc(OneSecondDelayer))
conv_other.go:	RegisterConverter(NewConverter("sleep-2s").SetConversionFunc(TwoSecondDelayer))
conv_other.go:	RegisterConverter(NewConverter("sleep-5s").SetConversionFunc(FiveSecondDelayer))
conv_other.go:	RegisterConverter(NewConverter("sleep-10s").SetConversionFunc(TenSecondDelayer))
conv_other.go:	RegisterConverter(NewConverter("sleep-1m").SetConversionFunc(OneMinuteDelayer))
conv_other.go:}
conv_other.go:func Delayer(duration time.Duration) ConversionFn {
conv_other.go:	return func(in interface{}, out *interface{}) error {
conv_other.go:		time.Sleep(duration)
conv_other.go:		*out = in
conv_other.go:		return nil
conv_other.go:	}
conv_other.go:}
conv_other.go:var HundredMillisecondDelayer = Delayer(100 * time.Millisecond)
conv_other.go:var OneSecondDelayer = Delayer(time.Second)
conv_other.go:var TwoSecondDelayer = Delayer(2 * time.Second)
conv_other.go:var FiveSecondDelayer = Delayer(5 * time.Second)
conv_other.go:var TenSecondDelayer = Delayer(10 * time.Second)
conv_other.go:var OneMinuteDelayer = Delayer(time.Minute)
conv_other.go:func FetchUrlToBytes(in interface{}, out *interface{}) error {
conv_other.go:	resp, err := http.Get(in.(string))
conv_other.go:	if err != nil {
conv_other.go:		return err
conv_other.go:	}
conv_other.go:	defer resp.Body.Close()
conv_other.go:	*out, err = ioutil.ReadAll(resp.Body)
conv_other.go:	return err
conv_other.go:}
conv_other_test.go:package converter
conv_other_test.go:import (
conv_other_test.go:	"fmt"
conv_other_test.go:	"testing"
conv_other_test.go:	"time"
conv_other_test.go:	. "github.com/smartystreets/goconvey/convey"
conv_other_test.go:)
conv_other_test.go:func TestDelayer(t *testing.T) {
conv_other_test.go:	Convey("Testing Delayer", t, func() {
conv_other_test.go:		duration := time.Millisecond * 100
conv_other_test.go:		delayerFunc := Delayer(time.Millisecond * 100)
conv_other_test.go:		Convey("Testing on bytes", func() {
conv_other_test.go:			input := []byte("hello world!")
conv_other_test.go:			var output interface{}
conv_other_test.go:			t1 := time.Now()
conv_other_test.go:			err := delayerFunc(input, &output)
conv_other_test.go:			t2 := time.Now()
conv_other_test.go:			So(err, ShouldBeNil)
conv_other_test.go:			So(output, ShouldResemble, input)
conv_other_test.go:			So(t2.Sub(t1) >= duration, ShouldBeTrue)
conv_other_test.go:		})
conv_other_test.go:		Convey("Testing on integer", func() {
conv_other_test.go:			input := 1234567890
conv_other_test.go:			var output interface{}
conv_other_test.go:			t1 := time.Now()
conv_other_test.go:			err := delayerFunc(input, &output)
conv_other_test.go:			t2 := time.Now()
conv_other_test.go:			So(err, ShouldBeNil)
conv_other_test.go:			So(output, ShouldEqual, input)
conv_other_test.go:			So(t2.Sub(t1) >= duration, ShouldBeTrue)
conv_other_test.go:		})
conv_other_test.go:		Convey("Testing on float", func() {
conv_other_test.go:			input := 3.1415
conv_other_test.go:			var output interface{}
conv_other_test.go:			t1 := time.Now()
conv_other_test.go:			err := delayerFunc(input, &output)
conv_other_test.go:			t2 := time.Now()
conv_other_test.go:			So(err, ShouldBeNil)
conv_other_test.go:			So(output, ShouldEqual, input)
conv_other_test.go:			So(t2.Sub(t1) >= duration, ShouldBeTrue)
conv_other_test.go:		})
conv_other_test.go:	})
conv_other_test.go:}
conv_other_test.go:func ExampleFetchUrlToBytes() {
conv_other_test.go:	input := "http://sapin-as-a-service.appspot.com/?size=3"
conv_other_test.go:	var output interface{}
conv_other_test.go:	FetchUrlToBytes(input, &output)
conv_other_test.go:	fmt.Printf("%+s\n", string(output.([]byte)))
conv_other_test.go:	// Output:
conv_other_test.go:	//           *
conv_other_test.go:	//          ***
conv_other_test.go:	//         *****
conv_other_test.go:	//        *******
conv_other_test.go:	//         *****
conv_other_test.go:	//        *******
conv_other_test.go:	//       *********
conv_other_test.go:	//      ***********
conv_other_test.go:	//     *************
conv_other_test.go:	//      ***********
conv_other_test.go:	//     *************
conv_other_test.go:	//    ***************
conv_other_test.go:	//   *****************
conv_other_test.go:	//  *******************
conv_other_test.go:	// *********************
conv_other_test.go:	//          |||
conv_other_test.go:	//          |||
conv_other_test.go:	//          |||
conv_other_test.go:}
conv_string.go:package converter
conv_string.go:import (
conv_string.go:	"bytes"
conv_string.go:	"strings"
conv_string.go:)
conv_string.go:func init() {
conv_string.go:	RegisterConverter(NewConverter("reverse").SetType("string").SetConversionFunc(ReverseString))
conv_string.go:	RegisterConverter(NewConverter("upper").SetType("string").SetConversionFunc(Uppercase))
conv_string.go:	RegisterConverter(NewConverter("lower").SetType("string").SetConversionFunc(Lowercase))
conv_string.go:	RegisterConverter(NewConverter("split-lines").SetType("[]byte").SetStreamConvFunc(StreamBufferSplitLines))
conv_string.go:}
conv_string.go:func ReverseString(in interface{}, out *interface{}) (err error) {
conv_string.go:	runes := []rune(in.(string))
conv_string.go:	for i, j := 0, len(runes)-1; i < j; i, j = i+1, j-1 {
conv_string.go:		runes[i], runes[j] = runes[j], runes[i]
conv_string.go:	}
conv_string.go:	*out = string(runes)
conv_string.go:	return nil
conv_string.go:}
conv_string.go:func Uppercase(in interface{}, out *interface{}) (err error) {
conv_string.go:	*out = strings.ToUpper(in.(string))
conv_string.go:	return nil
conv_string.go:}
conv_string.go:func Lowercase(in interface{}, out *interface{}) (err error) {
conv_string.go:	*out = strings.ToLower(in.(string))
conv_string.go:	return nil
conv_string.go:}
conv_string.go:func StreamBufferSplitLines(in chan interface{}) chan interface{} {
conv_string.go:	out := make(chan interface{})
conv_string.go:	go func() {
conv_string.go:		for {
conv_string.go:			select {
conv_string.go:			case input := <-in:
conv_string.go:				var output interface{}
conv_string.go:				for _, output = range bytes.Split(input.([]byte), []byte("\n")) {
conv_string.go:					out <- output
conv_string.go:				}
conv_string.go:			}
conv_string.go:		}
conv_string.go:	}()
conv_string.go:	return out
conv_string.go:}
conv_string_test.go:package converter
conv_string_test.go:import (
conv_string_test.go:	"testing"
conv_string_test.go:	. "github.com/smartystreets/goconvey/convey"
conv_string_test.go:)
conv_string_test.go:func TestReverseString(t *testing.T) {
conv_string_test.go:	Convey("Testing ReverseString", t, func() {
conv_string_test.go:		Convey("Testing on bytes", func() {
conv_string_test.go:			input := "Hello Worldz!"
conv_string_test.go:			var output interface{}
conv_string_test.go:			err := ReverseString(input, &output)
conv_string_test.go:			So(err, ShouldBeNil)
conv_string_test.go:			So(output, ShouldEqual, "!zdlroW olleH")
conv_string_test.go:		})
conv_string_test.go:	})
conv_string_test.go:}
conv_string_test.go:func TestUppercase(t *testing.T) {
conv_string_test.go:	Convey("Testing Uppercase", t, func() {
conv_string_test.go:		Convey("Testing on bytes", func() {
conv_string_test.go:			input := "Hello Worldz!"
conv_string_test.go:			var output interface{}
conv_string_test.go:			err := Uppercase(input, &output)
conv_string_test.go:			So(err, ShouldBeNil)
conv_string_test.go:			So(output, ShouldEqual, "HELLO WORLDZ!")
conv_string_test.go:		})
conv_string_test.go:	})
conv_string_test.go:}
conv_string_test.go:func TestLowercase(t *testing.T) {
conv_string_test.go:	Convey("Testing Lowercase", t, func() {
conv_string_test.go:		Convey("Testing on bytes", func() {
conv_string_test.go:			input := "Hello Worldz!"
conv_string_test.go:			var output interface{}
conv_string_test.go:			err := Lowercase(input, &output)
conv_string_test.go:			So(err, ShouldBeNil)
conv_string_test.go:			So(output, ShouldEqual, "hello worldz!")
conv_string_test.go:		})
conv_string_test.go:	})
conv_string_test.go:}
conv_string_test.go:func TestStreamBufferSplitLines(t *testing.T) {
conv_string_test.go:	Convey("Testing StreamBufferSplitLines", t, func() {
conv_string_test.go:		in := make(chan interface{}, 10)
conv_string_test.go:		out := StreamBufferSplitLines(in)
conv_string_test.go:		in <- []byte("hello world\nwhat's up ?\nok bye.")
conv_string_test.go:		in <- []byte("where is bryan ?\nbryan is in the kitchen.")
conv_string_test.go:		So(<-out, ShouldResemble, []byte("hello world"))
conv_string_test.go:		So(<-out, ShouldResemble, []byte("what's up ?"))
conv_string_test.go:		So(<-out, ShouldResemble, []byte("ok bye."))
conv_string_test.go:		So(<-out, ShouldResemble, []byte("where is bryan ?"))
conv_string_test.go:		So(<-out, ShouldResemble, []byte("bryan is in the kitchen."))
conv_string_test.go:		// select {
conv_string_test.go:		// case _, ok := <-out:
conv_string_test.go:		// 	So(ok, ShouldBeFalse)
conv_string_test.go:		// }
conv_string_test.go:	})
conv_string_test.go:}
conv_time.go:package converter
conv_time.go:import (
conv_time.go:	"strings"
conv_time.go:	"time"
conv_time.go:)
conv_time.go:func init() {
conv_time.go:	RegisterConverter(NewConverter("to-unix").SetTypes("time.Time", "int64").SetConversionFunc(ConvertTimeToUnix))
conv_time.go:	RegisterConverter(NewConverter("parse-ansi-date").SetTypes("string", "time.Time").SetConversionFunc(ConvertANSICToTime))
conv_time.go:	RegisterConverter(NewConverter("parse-rfc339-date").SetTypes("string", "time.Time").SetConversionFunc(ConvertRFC3339ToTime))
conv_time.go:	RegisterConverter(NewConverter("parse-rfc822-date").SetTypes("string", "time.Time").SetConversionFunc(ConvertRFC822ToTime))
conv_time.go:	RegisterConverter(NewConverter("parse-rfc850-date").SetTypes("string", "time.Time").SetConversionFunc(ConvertRFC850ToTime))
conv_time.go:	RegisterConverter(NewConverter("parse-rfc1123-date").SetTypes("string", "time.Time").SetConversionFunc(ConvertRFC1123ToTime))
conv_time.go:	RegisterConverter(NewConverter("parse-unix-date").SetTypes("string", "time.Time").SetConversionFunc(ConvertUnixDateToTime))
conv_time.go:	RegisterConverter(NewConverter("parse-date").SetTypes("string", "time.Time").SetConversionFunc(ConvertDateToTime).SetDefaultTypeConverter())
conv_time.go:	RegisterConverter(NewConverter("time-to-string").SetTypes("time.Time", "string").SetConversionFunc(ConvertTimeToString).SetDefaultTypeConverter())
conv_time.go:	RegisterConverter(NewConverter("parse-unix-timestamp").SetTypes("int64", "time.Time").SetConversionFunc(ConvertUnixTimestampToTime))
conv_time.go:}
conv_time.go:func DateToTimeConverter(format string) ConversionFn {
conv_time.go:	return func(in interface{}, out *interface{}) (err error) {
conv_time.go:		*out, err = time.Parse(format, strings.TrimSpace(in.(string)))
conv_time.go:		return err
conv_time.go:	}
conv_time.go:}
conv_time.go:var ConvertANSICToTime = DateToTimeConverter(time.ANSIC)
conv_time.go:var ConvertRFC3339ToTime = DateToTimeConverter(time.RFC3339)
conv_time.go:var ConvertRFC822ToTime = DateToTimeConverter(time.RFC822)
conv_time.go:var ConvertRFC850ToTime = DateToTimeConverter(time.RFC850)
conv_time.go:var ConvertRFC1123ToTime = DateToTimeConverter(time.RFC1123)
conv_time.go:var ConvertUnixDateToTime = DateToTimeConverter(time.UnixDate)
conv_time.go:func ConvertTimeToUnix(in interface{}, out *interface{}) (err error) {
conv_time.go:	*out = in.(time.Time).Unix()
conv_time.go:	return nil
conv_time.go:}
conv_time.go:func ConvertTimeToString(in interface{}, out *interface{}) (err error) {
conv_time.go:	*out = in.(time.Time).String()
conv_time.go:	return err
conv_time.go:}
conv_time.go:func ConvertDateToTime(in interface{}, out *interface{}) (err error) {
conv_time.go:	input := strings.TrimSpace(in.(string))
conv_time.go:	formats := []string{
conv_time.go:		time.ANSIC, time.RFC3339, time.RFC822, time.RFC850, time.RFC1123, time.UnixDate,
conv_time.go:	}
conv_time.go:	for _, format := range formats {
conv_time.go:		if *out, err = time.Parse(format, input); err == nil {
conv_time.go:			return nil
conv_time.go:		}
conv_time.go:	}
conv_time.go:	*out = nil
conv_time.go:	return err
conv_time.go:}
conv_time.go:func ConvertUnixTimestampToTime(in interface{}, out *interface{}) (err error) {
conv_time.go:	*out = time.Unix(in.(int64), 0)
conv_time.go:	return nil
conv_time.go:}
conv_time_test.go:package converter
conv_time_test.go:import (
conv_time_test.go:	"fmt"
conv_time_test.go:	"testing"
conv_time_test.go:	"time"
conv_time_test.go:	. "github.com/smartystreets/goconvey/convey"
conv_time_test.go:)
conv_time_test.go:func ExampleConvertUnixDateToTime() {
conv_time_test.go:	input := `Sat Mar  7 11:06:39.1234 PST 2015`
conv_time_test.go:	var output interface{}
conv_time_test.go:	ConvertUnixDateToTime(input, &output)
conv_time_test.go:	fmt.Printf("%+v\n", output)
conv_time_test.go:	// Output: 2015-03-07 11:06:39.1234 +0000 PST
conv_time_test.go:}
conv_time_test.go:func ExampleConvertANSICToTime() {
conv_time_test.go:	input := `Sat Mar  7 11:06:39.1234 2015`
conv_time_test.go:	var output interface{}
conv_time_test.go:	ConvertANSICToTime(input, &output)
conv_time_test.go:	fmt.Printf("%+v\n", output)
conv_time_test.go:	// Output: 2015-03-07 11:06:39.1234 +0000 UTC
conv_time_test.go:}
conv_time_test.go:func ExampleConvertRFC822ToTime() {
conv_time_test.go:	input := `07 Mar 15 11:06 MST`
conv_time_test.go:	var output interface{}
conv_time_test.go:	ConvertRFC822ToTime(input, &output)
conv_time_test.go:	fmt.Printf("%+v\n", output)
conv_time_test.go:	// Output: 2015-03-07 11:06:00 +0000 MST
conv_time_test.go:}
conv_time_test.go:func ExampleConvertRFC850ToTime() {
conv_time_test.go:	input := `Saturday, 07-Mar-15 11:06:39 MST`
conv_time_test.go:	var output interface{}
conv_time_test.go:	ConvertRFC850ToTime(input, &output)
conv_time_test.go:	fmt.Printf("%+v\n", output)
conv_time_test.go:	// Output: 2015-03-07 11:06:39 +0000 MST
conv_time_test.go:}
conv_time_test.go:func ExampleConvertRFC1123ToTime() {
conv_time_test.go:	input := `Sat, 07 Mar 2015 11:06:39 MST`
conv_time_test.go:	var output interface{}
conv_time_test.go:	ConvertRFC1123ToTime(input, &output)
conv_time_test.go:	fmt.Printf("%+v\n", output)
conv_time_test.go:	// Output: 2015-03-07 11:06:39 +0000 MST
conv_time_test.go:}
conv_time_test.go:/* fixme: broken test
conv_time_test.go:func ExampleConvertRFC3339ToTime() {
conv_time_test.go:}
conv_time_test.go:*/
conv_time_test.go:func TestConvertUnixDateToTime(t *testing.T) {
conv_time_test.go:	Convey("Testing ConvertUnixDateToTime", t, func() {
conv_time_test.go:		input := `Sat Mar  7 11:06:39.1234 PST 2015`
conv_time_test.go:		var output interface{}
conv_time_test.go:		err := ConvertUnixDateToTime(input, &output)
conv_time_test.go:		So(err, ShouldBeNil)
conv_time_test.go:		year, month, day := output.(time.Time).Date()
conv_time_test.go:		zone, offset := output.(time.Time).Zone()
conv_time_test.go:		So(year, ShouldEqual, 2015)
conv_time_test.go:		So(month, ShouldEqual, time.March)
conv_time_test.go:		So(day, ShouldEqual, 7)
conv_time_test.go:		So(zone, ShouldEqual, "PST")
conv_time_test.go:		So(offset, ShouldEqual, 0)
conv_time_test.go:		So(output.(time.Time).Hour(), ShouldEqual, 11)
conv_time_test.go:		So(output.(time.Time).Minute(), ShouldEqual, 6)
conv_time_test.go:		So(output.(time.Time).Second(), ShouldEqual, 39)
conv_time_test.go:		So(output.(time.Time).Nanosecond(), ShouldEqual, 123400000)
conv_time_test.go:	})
conv_time_test.go:}
conv_time_test.go:func ExampleConvertTimeToUnix() {
conv_time_test.go:	input := time.Date(1988, time.January, 25, 13, 10, 42, 0, time.UTC)
conv_time_test.go:	var output interface{}
conv_time_test.go:	ConvertTimeToUnix(input, &output)
conv_time_test.go:	fmt.Printf("%+v\n", output.(int64))
conv_time_test.go:	// Output: 570114642
conv_time_test.go:}
conv_types.go:package converter
conv_types.go:import (
conv_types.go:	"strconv"
conv_types.go:	"strings"
conv_types.go:)
conv_types.go:func init() {
conv_types.go:	RegisterConverter(NewConverter("bytes-to-string").SetTypes("[]byte", "string").SetConversionFunc(ConvertBytesToString).SetDefaultTypeConverter())
conv_types.go:	RegisterConverter(NewConverter("string-to-bytes").SetTypes("string", "[]byte").SetConversionFunc(ConvertStringToBytes).SetDefaultTypeConverter())
conv_types.go:	RegisterConverter(NewConverter("int-to-string").SetTypes("int64", "string").SetConversionFunc(ConvertIntegerToString).SetDefaultTypeConverter())
conv_types.go:	RegisterConverter(NewConverter("string-to-int").SetTypes("string", "int64").SetConversionFunc(ConvertStringToInteger).SetDefaultTypeConverter())
conv_types.go:	RegisterConverter(NewConverter("string-to-float").SetTypes("string", "float64").SetConversionFunc(ConvertStringToFloat).SetDefaultTypeConverter())
conv_types.go:	RegisterConverter(NewConverter("float-to-string").SetTypes("float64", "string").SetConversionFunc(ConvertFloatToString).SetDefaultTypeConverter())
conv_types.go:}
conv_types.go:func ConvertBytesToString(in interface{}, out *interface{}) error {
conv_types.go:	*out = string(in.([]byte))
conv_types.go:	return nil
conv_types.go:}
conv_types.go:func ConvertStringToBytes(in interface{}, out *interface{}) error {
conv_types.go:	*out = []byte(in.(string))
conv_types.go:	return nil
conv_types.go:}
conv_types.go:func ConvertIntegerToString(in interface{}, out *interface{}) error {
conv_types.go:	*out = strconv.FormatInt(in.(int64), 10)
conv_types.go:	return nil
conv_types.go:}
conv_types.go:func ConvertStringToInteger(in interface{}, out *interface{}) (err error) {
conv_types.go:	*out, err = strconv.ParseInt(strings.TrimSpace(in.(string)), 10, 0)
conv_types.go:	return err
conv_types.go:}
conv_types.go:func ConvertStringToFloat(in interface{}, out *interface{}) (err error) {
conv_types.go:	*out, err = strconv.ParseFloat(strings.TrimSpace(in.(string)), 64)
conv_types.go:	return err
conv_types.go:}
conv_types.go:func ConvertFloatToString(in interface{}, out *interface{}) (err error) {
conv_types.go:	*out = strconv.FormatFloat(in.(float64), 'f', -1, 64)
conv_types.go:	return err
conv_types.go:}
conv_types_test.go:package converter
conv_types_test.go:import (
conv_types_test.go:	"fmt"
conv_types_test.go:	"testing"
conv_types_test.go:	. "github.com/smartystreets/goconvey/convey"
conv_types_test.go:)
conv_types_test.go:func TestConvertBytesToString(t *testing.T) {
conv_types_test.go:	Convey("Testing ConvertBytesToString", t, func() {
conv_types_test.go:		input := []byte("hello world!")
conv_types_test.go:		var output interface{}
conv_types_test.go:		err := ConvertBytesToString(input, &output)
conv_types_test.go:		So(err, ShouldBeNil)
conv_types_test.go:		So(output, ShouldEqual, "hello world!")
conv_types_test.go:	})
conv_types_test.go:}
conv_types_test.go:func ExampleConvertBytesToString() {
conv_types_test.go:	var output interface{}
conv_types_test.go:	ConvertBytesToString([]byte("hello world!"), &output)
conv_types_test.go:	fmt.Println(output)
conv_types_test.go:	// Output: hello world!
conv_types_test.go:}
conv_types_test.go:func TestConvertStringToBytes(t *testing.T) {
conv_types_test.go:	Convey("Testing ConvertStringToBytes", t, func() {
conv_types_test.go:		input := "hello world!"
conv_types_test.go:		var output interface{}
conv_types_test.go:		err := ConvertStringToBytes(input, &output)
conv_types_test.go:		So(err, ShouldBeNil)
conv_types_test.go:		So(output, ShouldResemble, []byte("hello world!"))
conv_types_test.go:	})
conv_types_test.go:}
conv_types_test.go:func ExampleConvertStringToBytes() {
conv_types_test.go:	var output interface{}
conv_types_test.go:	ConvertStringToBytes("hello world!", &output)
conv_types_test.go:	fmt.Println(output)
conv_types_test.go:	// Output: [104 101 108 108 111 32 119 111 114 108 100 33]
conv_types_test.go:}
conv_types_test.go:func TestConvertIntegerToString(t *testing.T) {
conv_types_test.go:	Convey("Testing ConvertIntegerToString", t, func() {
conv_types_test.go:		input := int64(1234567890)
conv_types_test.go:		var output interface{}
conv_types_test.go:		err := ConvertIntegerToString(input, &output)
conv_types_test.go:		So(err, ShouldBeNil)
conv_types_test.go:		So(output, ShouldEqual, "1234567890")
conv_types_test.go:	})
conv_types_test.go:}
conv_types_test.go:func ExampleConvertIntegerToString() {
conv_types_test.go:	var output interface{}
conv_types_test.go:	ConvertIntegerToString(int64(1234567890), &output)
conv_types_test.go:	fmt.Println(output)
conv_types_test.go:	// Output: 1234567890
conv_types_test.go:}
conv_types_test.go:func TestConvertStringToInteger(t *testing.T) {
conv_types_test.go:	Convey("Testing ConvertStringToInteger", t, func() {
conv_types_test.go:		input := "1234567890"
conv_types_test.go:		var output interface{}
conv_types_test.go:		err := ConvertStringToInteger(input, &output)
conv_types_test.go:		So(err, ShouldBeNil)
conv_types_test.go:		So(output, ShouldEqual, 1234567890)
conv_types_test.go:	})
conv_types_test.go:}
conv_types_test.go:func ExampleConvertStringToInteger() {
conv_types_test.go:	var output interface{}
conv_types_test.go:	ConvertStringToInteger("1234567890", &output)
conv_types_test.go:	fmt.Println(output)
conv_types_test.go:	// Output: 1234567890
conv_types_test.go:}
conv_types_test.go:func TestConvertStringToFloat(t *testing.T) {
conv_types_test.go:	Convey("Testing ConvertStringToFloat", t, func() {
conv_types_test.go:		input := "3.1415"
conv_types_test.go:		var output interface{}
conv_types_test.go:		err := ConvertStringToFloat(input, &output)
conv_types_test.go:		So(err, ShouldBeNil)
conv_types_test.go:		So(output, ShouldEqual, 3.1415)
conv_types_test.go:	})
conv_types_test.go:}
conv_types_test.go:func ExampleConvertStringToFloat() {
conv_types_test.go:	var output interface{}
conv_types_test.go:	ConvertStringToFloat("3.1415", &output)
conv_types_test.go:	fmt.Println(output)
conv_types_test.go:	// Output: 3.1415
conv_types_test.go:}
conv_types_test.go:func TestConvertFloatToString(t *testing.T) {
conv_types_test.go:	Convey("Testing ConvertStringToFloat", t, func() {
conv_types_test.go:		input := 3.1415
conv_types_test.go:		var output interface{}
conv_types_test.go:		err := ConvertFloatToString(input, &output)
conv_types_test.go:		So(err, ShouldBeNil)
conv_types_test.go:		So(output, ShouldEqual, "3.1415")
conv_types_test.go:	})
conv_types_test.go:}
conv_types_test.go:func ExampleConvertFloatToString() {
conv_types_test.go:	var output interface{}
conv_types_test.go:	ConvertFloatToString(3.1415, &output)
conv_types_test.go:	fmt.Println(output)
conv_types_test.go:	// Output: 3.1415
conv_types_test.go:}
converter.go:package converter
converter.go:import "fmt"
converter.go:type ConversionFn func(interface{}, *interface{}) error
converter.go:type StreamConvFn func(chan interface{}) chan interface{}
converter.go:type ConverterChain []*Converter
converter.go:func NewConverterChain(filterNames []string) (ConverterChain, error) {
converter.go:	if len(filterNames) == 0 {
converter.go:		return nil, fmt.Errorf("you should have at least one filter")
converter.go:	}
converter.go:	chain := ConverterChain{}
converter.go:	for _, name := range filterNames {
converter.go:		converter, err := GetConverterByName(name)
converter.go:		if err != nil {
converter.go:			return nil, err
converter.go:		}
converter.go:		chain = append(chain, converter)
converter.go:	}
converter.go:	return chain, nil
converter.go:}
converter.go:func GetTypeConversionFunc(inType, outType string) ConversionFn {
converter.go:	if inType == outType {
converter.go:		return nil
converter.go:	}
converter.go:	if inType == "interface{}" || outType == "interface{}" {
converter.go:		return nil
converter.go:	}
converter.go:	for _, converter := range RegisteredConverters {
converter.go:		if converter.InputType == inType && converter.OutputType == outType && converter.IsDefaultTypeConverter {
converter.go:			return converter.ConversionFunc
converter.go:		}
converter.go:	}
converter.go:	return nil
converter.go:}
converter.go:func (chain *ConverterChain) ConversionFunc(inType, outType string) (ConversionFn, error) {
converter.go:	if len(*chain) == 0 {
converter.go:		return nil, fmt.Errorf("you should have at least one converter")
converter.go:	}
converter.go:	lastRealInType := inType
converter.go:	fn := (*chain)[0].ConversionFunc
converter.go:	if convertFn := GetTypeConversionFunc(inType, (*chain)[0].InputType); convertFn != nil {
converter.go:		fn = Pipe(convertFn, fn)
converter.go:	}
converter.go:	if len(*chain) == 1 {
converter.go:		return fn, nil
converter.go:	}
converter.go:	inType = (*chain)[0].OutputType
converter.go:	for _, right := range (*chain)[1:] {
converter.go:		if inType != "interface{}" {
converter.go:			lastRealInType = inType
converter.go:		}
converter.go:		if convertFn := GetTypeConversionFunc(lastRealInType, right.InputType); convertFn != nil {
converter.go:			fn = Pipe(fn, convertFn)
converter.go:		}
converter.go:		fn = Pipe(fn, right.ConversionFunc)
converter.go:		inType = right.OutputType
converter.go:	}
converter.go:	return fn, nil
converter.go:}
converter.go:func (chain *ConverterChain) Convert(input interface{}, output *interface{}) error {
converter.go:	fn, err := chain.ConversionFunc("interface{}", "interface{}")
converter.go:	if err != nil {
converter.go:		return err
converter.go:	}
converter.go:	return fn(input, output)
converter.go:}
converter.go:func GetConverterByName(name string) (*Converter, error) {
converter.go:	for _, converter := range RegisteredConverters {
converter.go:		if converter.Name == name {
converter.go:			return converter, nil
converter.go:		}
converter.go:	}
converter.go:	return nil, fmt.Errorf("no such filter %q", name)
converter.go:}
converter.go:func Chain(left ConversionFn, rights ...ConversionFn) ConversionFn {
converter.go:	fn := left
converter.go:	for _, right := range rights {
converter.go:		fn = Pipe(fn, right)
converter.go:	}
converter.go:	return fn
converter.go:}
converter.go:func Pipe(left, right ConversionFn) ConversionFn {
converter.go:	return func(in interface{}, output *interface{}) error {
converter.go:		var tmpOutput interface{}
converter.go:		if err := left(in, &tmpOutput); err != nil {
converter.go:			return err
converter.go:		}
converter.go:		return right(tmpOutput, output)
converter.go:	}
converter.go:}
converter.go:func ConversionToStreamConv(conversionFn ConversionFn) StreamConvFn {
converter.go:	return func(in chan interface{}) chan interface{} {
converter.go:		out := make(chan interface{})
converter.go:		go func() {
converter.go:			for {
converter.go:				select {
converter.go:				case input := <-in:
converter.go:					var output interface{}
converter.go:					_ = conversionFn(input, &output)
converter.go:					// FIXME: check err
converter.go:					out <- output
converter.go:				}
converter.go:			}
converter.go:		}()
converter.go:		return out
converter.go:	}
converter.go:}
converter.go:func StreamPipe(left, right StreamConvFn) StreamConvFn {
converter.go:	return func(in chan interface{}) chan interface{} {
converter.go:		return right(left(in))
converter.go:	}
converter.go:}
converter.go:func StreamChain(streamFuncs ...StreamConvFn) StreamConvFn {
converter.go:	return func(in chan interface{}) chan interface{} {
converter.go:		left := in
converter.go:		for _, right := range streamFuncs {
converter.go:			left = right(left)
converter.go:		}
converter.go:		return left
converter.go:	}
converter.go:}
converter.go:type Converter struct {
converter.go:	InputType              string
converter.go:	OutputType             string
converter.go:	Name                   string
converter.go:	ConversionFunc         ConversionFn
converter.go:	StreamConvFunc         StreamConvFn
converter.go:	IsDefaultTypeConverter bool
converter.go:}
converter.go:func (conv *Converter) SetType(ioType string) *Converter {
converter.go:	conv.InputType = ioType
converter.go:	conv.OutputType = ioType
converter.go:	return conv
converter.go:}
converter.go:func (conv *Converter) SetTypes(inType, outType string) *Converter {
converter.go:	conv.InputType = inType
converter.go:	conv.OutputType = outType
converter.go:	return conv
converter.go:}
converter.go:func (conv *Converter) SetConversionFunc(fn ConversionFn) *Converter {
converter.go:	conv.ConversionFunc = fn
converter.go:	return conv
converter.go:}
converter.go:func (conv *Converter) SetStreamConvFunc(fn StreamConvFn) *Converter {
converter.go:	conv.StreamConvFunc = fn
converter.go:	return conv
converter.go:}
converter.go:func (conv *Converter) SetDefaultTypeConverter() *Converter {
converter.go:	conv.IsDefaultTypeConverter = true
converter.go:	return conv
converter.go:}
converter.go:func NewConverter(name string) *Converter {
converter.go:	return &Converter{
converter.go:		InputType:  "interface{}",
converter.go:		OutputType: "interface{}",
converter.go:		Name:       name,
converter.go:	}
converter.go:}
converter.go:var RegisteredConverters []*Converter
converter.go:func RegisterConverter(converter *Converter) {
converter.go:	RegisteredConverters = append(RegisteredConverters, converter)
converter.go:}
converter_test.go:package converter
converter_test.go:import (
converter_test.go:	"testing"
converter_test.go:	. "github.com/smartystreets/goconvey/convey"
converter_test.go:)
converter_test.go:func Test_manual_chaining(t *testing.T) {
converter_test.go:	Convey("Testing chaining", t, func() {
converter_test.go:		input := "hello world!"
converter_test.go:		var output1 interface{}
converter_test.go:		var err error
converter_test.go:		err = ConvertStringToBytes(input, &output1)
converter_test.go:		So(err, ShouldBeNil)
converter_test.go:		So(output1, ShouldResemble, []byte("hello world!"))
converter_test.go:		var output2 interface{}
converter_test.go:		err = ConvertBytesToHex(output1, &output2)
converter_test.go:		So(err, ShouldBeNil)
converter_test.go:		So(output2, ShouldEqual, "68656c6c6f20776f726c6421")
converter_test.go:		var output3 interface{}
converter_test.go:		err = ConvertHexToBytes(output2, &output3)
converter_test.go:		So(err, ShouldBeNil)
converter_test.go:		So(output3, ShouldResemble, []byte("hello world!"))
converter_test.go:		var output4 interface{}
converter_test.go:		err = ConvertBytesToString(output3, &output4)
converter_test.go:		So(err, ShouldBeNil)
converter_test.go:		So(output4, ShouldEqual, input)
converter_test.go:	})
converter_test.go:}
converter_test.go:func TestPipe(t *testing.T) {
converter_test.go:	Convey("Testing Pipe", t, func() {
converter_test.go:		Convey(`string("hello world!") | ConvertStringToBytes | ConvertBytesToBase64`, func() {
converter_test.go:			input := "hello world!"
converter_test.go:			var output interface{}
converter_test.go:			pipeFunc := Pipe(ConvertStringToBytes, ConvertBytesToBase64)
converter_test.go:			err := pipeFunc(input, &output)
converter_test.go:			So(err, ShouldBeNil)
converter_test.go:			So(output, ShouldEqual, "aGVsbG8gd29ybGQh")
converter_test.go:		})
converter_test.go:	})
converter_test.go:}
converter_test.go:func TestChain(t *testing.T) {
converter_test.go:	Convey("Testing Chain", t, func() {
converter_test.go:		Convey(`float64(3.1415) | ConvertFloatToString | ConvertStringToBytes | ConvertBytesToBase64 | ConvertStringToBytes | ConvertBytesToBase32`, func() {
converter_test.go:			input := 3.1415
converter_test.go:			var output interface{}
converter_test.go:			chainFunc := Chain(ConvertFloatToString, ConvertStringToBytes, ConvertBytesToBase64, ConvertStringToBytes, ConvertBytesToBase32)
converter_test.go:			err := chainFunc(input, &output)
converter_test.go:			So(err, ShouldBeNil)
converter_test.go:			So(output, ShouldEqual, "JV4TI6COIRCTC===")
converter_test.go:		})
converter_test.go:		Convey(``, func() {
converter_test.go:			input := "http://manfred-touron.appspot.com"
converter_test.go:			var output interface{}
converter_test.go:			chainFunc := Chain(FetchUrlToBytes, ConvertJsonToStruct, ConvertStructToToml, ConvertBytesToString)
converter_test.go:			err := chainFunc(input, &output)
converter_test.go:			So(err, ShouldBeNil)
converter_test.go:			So(output, ShouldEqual, `emoji = "👌"
converter_test.go:firstname = "Manfred"
converter_test.go:github = "https://github.com/moul"
converter_test.go:headline = "For passion, madness and glory"
converter_test.go:lastname = "Touron"
converter_test.go:location = "Rouen, France / Paris, France"
converter_test.go:twitter = "https://twitter.com/moul"
converter_test.go:website = "http://m.42.am/"
converter_test.go:`)
converter_test.go:		})
converter_test.go:	})
converter_test.go:}
converter_test.go:func TestConversionToStreamConv(t *testing.T) {
converter_test.go:	Convey("Testing ConversionToStreamConv", t, func() {
converter_test.go:		streamFn := ConversionToStreamConv(ConvertStringToBytes)
converter_test.go:		in := make(chan interface{}, 10)
converter_test.go:		out := streamFn(in)
converter_test.go:		in <- "hello world!"
converter_test.go:		in <- "HELLO WORLD!"
converter_test.go:		in <- "HeLlO wOrLd!"
converter_test.go:		So(<-out, ShouldResemble, []byte("hello world!"))
converter_test.go:		So(<-out, ShouldResemble, []byte("HELLO WORLD!"))
converter_test.go:		So(<-out, ShouldResemble, []byte("HeLlO wOrLd!"))
converter_test.go:		// select {
converter_test.go:		// case _, ok := <-out:
converter_test.go:		// 	So(ok, ShouldBeFalse)
converter_test.go:		// }
converter_test.go:	})
converter_test.go:}
converter_test.go:func TestStreamPipe(t *testing.T) {
converter_test.go:	Convey("Testing StreamPipe", t, func() {
converter_test.go:		streamPipe := StreamPipe(ConversionToStreamConv(ConvertStringToBytes), ConversionToStreamConv(ConvertBytesToBase64))
converter_test.go:		in := make(chan interface{}, 10)
converter_test.go:		out := streamPipe(in)
converter_test.go:		in <- "hello world!"
converter_test.go:		in <- "HELLO WORLD!"
converter_test.go:		in <- "HeLlO wOrLd!"
converter_test.go:		So(<-out, ShouldEqual, "aGVsbG8gd29ybGQh")
converter_test.go:		So(<-out, ShouldEqual, "SEVMTE8gV09STEQh")
converter_test.go:		So(<-out, ShouldEqual, "SGVMbE8gd09yTGQh")
converter_test.go:		// select {
converter_test.go:		// case _, ok := <-out:
converter_test.go:		// 	So(ok, ShouldBeFalse)
converter_test.go:		// }
converter_test.go:	})
converter_test.go:}
converter_test.go:func TestStreamChain(t *testing.T) {
converter_test.go:	Convey("Testing StreamChain", t, func() {
converter_test.go:		streamChain := StreamChain(ConversionToStreamConv(ConvertFloatToString), ConversionToStreamConv(ConvertStringToBytes), ConversionToStreamConv(ConvertBytesToBase64), ConversionToStreamConv(ConvertStringToBytes), ConversionToStreamConv(ConvertBytesToBase32))
converter_test.go:		in := make(chan interface{}, 10)
converter_test.go:		out := streamChain(in)
converter_test.go:		in <- 3.1415
converter_test.go:		in <- 4242.4242
converter_test.go:		in <- -123456789.987654321
converter_test.go:		So(<-out, ShouldEqual, "JV4TI6COIRCTC===")
converter_test.go:		So(<-out, ShouldEqual, "JZCESMCNNE2DATLKKF4Q====")
converter_test.go:		So(<-out, ShouldEqual, "JRKEK6KNPJITCTTKMM2E6UZUGVHUIYZSJZKFC6SNO46T2===")
converter_test.go:		// select {
converter_test.go:		// case _, ok := <-out:
converter_test.go:		// 	So(ok, ShouldBeFalse)
converter_test.go:		// }
converter_test.go:	})
converter_test.go:}
Dockerfile:FROM       scratch
Dockerfile:MAINTAINER Manfred Touron <m@42.am> (@moul)
Dockerfile:# Base of Busybox
Dockerfile:ADD ./rootfs.tar	/
Dockerfile:ADD ./opkg.conf         /etc/opkg.conf
Dockerfile:ADD ./opkg-install      /usr/bin/opkg-install
Dockerfile:ADD ./functions.sh      /lib/functions.sh
Dockerfile:# Dependencies
Dockerfile:#RUN opkg-cl install http://downloads.openwrt.org/snapshots/trunk/mvebu/packages/base/libgcc_4.8-linaro-1_mvebu.ipk
Dockerfile:#RUN opkg-cl install http://downloads.openwrt.org/snapshots/trunk/mvebu/packages/base/libc_0.9.33.2-1_mvebu.ipk
Dockerfile:CMD ["/bin/sh"]
Makefile:NAME =	armhf-busybox
Makefile:.PHONY:	build qemu
Makefile:all:	build
Makefile:build: rootfs.tar Dockerfile qemu-arm-static
Makefile:	docker build -t $(NAME) .
Makefile:	docker tag -f $(NAME) moul/$(NAME)
Makefile:qemu:	vmlinuz initrd.gz
Makefile:	qemu-system-arm -M versatilepb -cpu cortex-a8 -kernel ./vmlinuz -initrd ./initrd.gz -m 256
Makefile:rootfs.tar:
Makefile:	cd rootfs && docker build -t busybox-rootfs .
Makefile:	docker run --rm busybox-rootfs cat /tmp/buildroot/output/images/rootfs.tar > rootfs.tar
Makefile:	docker rmi busybox-rootfs
Makefile:qemu-arm-static:
Makefile:	docker run -it --rm moul/qemu-user:latest cat /usr/bin/qemu-arm-static > $@
Makefile:	chmod +x $@
Makefile:initrd.tar:
Makefile:	-docker rm $(NAME)-export || true
Makefile:	docker run --name $(NAME)-export --entrypoint /dontexists $(NAME):latest 2>/dev/null || true
Makefile:	docker export $(NAME)-export > $@.tmp
Makefile:	docker rm $(NAME)-export
Makefile:	mv $@.tmp $@
Makefile:initrd: initrd.tar
Makefile:	-rm -rf $@ && mkdir $@
Makefile:	tar -C $@ -xf $<
Makefile:initrd.gz: initrd
Makefile:	cd initrd && find . -print0 | cpio --null -ov --format=newc | gzip -9 > $(PWD)/$@
Makefile:vmlinuz:
Makefile:	wget http://ports.ubuntu.com/ubuntu-ports/dists/lucid/main/installer-armel/current/images/versatile/netboot/vmlinuz
functions.sh:#!/bin/sh
functions.sh:# Copyright (C) 2006-2013 OpenWrt.org
functions.sh:# Copyright (C) 2006 Fokus Fraunhofer <carsten.tittel@fokus.fraunhofer.de>
functions.sh:# Copyright (C) 2010 Vertical Communications
functions.sh:debug () {
functions.sh:        ${DEBUG:-:} "$@"
functions.sh:}
functions.sh:# newline
functions.sh:N="
functions.sh:"
functions.sh:_C=0
functions.sh:NO_EXPORT=1
functions.sh:LOAD_STATE=1
functions.sh:LIST_SEP=" "
functions.sh:append() {
functions.sh:        local var="$1"
functions.sh:        local value="$2"
functions.sh:        local sep="${3:- }"
functions.sh:        eval "export ${NO_EXPORT:+-n} -- \"$var=\${$var:+\${$var}\${value:+\$sep}}\$value\""
functions.sh:}
functions.sh:list_contains() {
functions.sh:        local var="$1"
functions.sh:        local str="$2"
functions.sh:        local val
functions.sh:        eval "val=\" \${$var} \""
functions.sh:        [ "${val%% $str *}" != "$val" ]
functions.sh:}
functions.sh:config_load() {
functions.sh:        [ -n "$IPKG_INSTROOT" ] && return 0
functions.sh:        uci_load "$@"
functions.sh:}
functions.sh:reset_cb() {
functions.sh:        config_cb() { return 0; }
functions.sh:        option_cb() { return 0; }
functions.sh:        list_cb() { return 0; }
functions.sh:}
functions.sh:reset_cb
functions.sh:package() {
functions.sh:        return 0
functions.sh:}
functions.sh:config () {
functions.sh:        local cfgtype="$1"
functions.sh:        local name="$2"
functions.sh:        export ${NO_EXPORT:+-n} CONFIG_NUM_SECTIONS=$(($CONFIG_NUM_SECTIONS + 1))
functions.sh:        name="${name:-cfg$CONFIG_NUM_SECTIONS}"
functions.sh:        append CONFIG_SECTIONS "$name"
functions.sh:        [ -n "$NO_CALLBACK" ] || config_cb "$cfgtype" "$name"
functions.sh:        export ${NO_EXPORT:+-n} CONFIG_SECTION="$name"
functions.sh:        export ${NO_EXPORT:+-n} "CONFIG_${CONFIG_SECTION}_TYPE=$cfgtype"
functions.sh:}
functions.sh:option () {
functions.sh:        local varname="$1"; shift
functions.sh:        local value="$*"
functions.sh:        export ${NO_EXPORT:+-n} "CONFIG_${CONFIG_SECTION}_${varname}=$value"
functions.sh:        [ -n "$NO_CALLBACK" ] || option_cb "$varname" "$*"
functions.sh:}
functions.sh:list() {
functions.sh:        local varname="$1"; shift
functions.sh:        local value="$*"
functions.sh:        local len
functions.sh:        config_get len "$CONFIG_SECTION" "${varname}_LENGTH" 0
functions.sh:        [ $len = 0 ] && append CONFIG_LIST_STATE "${CONFIG_SECTION}_${varname}"
functions.sh:        len=$(($len + 1))
functions.sh:        config_set "$CONFIG_SECTION" "${varname}_ITEM$len" "$value"
functions.sh:        config_set "$CONFIG_SECTION" "${varname}_LENGTH" "$len"
functions.sh:        append "CONFIG_${CONFIG_SECTION}_${varname}" "$value" "$LIST_SEP"
functions.sh:        list_cb "$varname" "$*"
functions.sh:}
functions.sh:config_unset() {
functions.sh:        config_set "$1" "$2" ""
functions.sh:}
functions.sh:# config_get <variable> <section> <option> [<default>]
functions.sh:# config_get <section> <option>
functions.sh:config_get() {
functions.sh:        case "$3" in
functions.sh:                "") eval echo "\${CONFIG_${1}_${2}:-\${4}}";;
functions.sh:                *)  eval export ${NO_EXPORT:+-n} -- "${1}=\${CONFIG_${2}_${3}:-\${4}}";;
functions.sh:        esac
functions.sh:}
functions.sh:# config_get_bool <variable> <section> <option> [<default>]
functions.sh:config_get_bool() {
functions.sh:        local _tmp
functions.sh:        config_get _tmp "$2" "$3" "$4"
functions.sh:        case "$_tmp" in
functions.sh:                1|on|true|yes|enabled) _tmp=1;;
functions.sh:                0|off|false|no|disabled) _tmp=0;;
functions.sh:                *) _tmp="$4";;
functions.sh:        esac
functions.sh:        export ${NO_EXPORT:+-n} "$1=$_tmp"
functions.sh:}
functions.sh:config_set() {
functions.sh:        local section="$1"
functions.sh:        local option="$2"
functions.sh:        local value="$3"
functions.sh:        local old_section="$CONFIG_SECTION"
functions.sh:        CONFIG_SECTION="$section"
functions.sh:        option "$option" "$value"
functions.sh:        CONFIG_SECTION="$old_section"
functions.sh:}
functions.sh:config_foreach() {
functions.sh:        local ___function="$1"
functions.sh:        [ "$#" -ge 1 ] && shift
functions.sh:        local ___type="$1"
functions.sh:        [ "$#" -ge 1 ] && shift
functions.sh:        local section cfgtype
functions.sh:        [ -z "$CONFIG_SECTIONS" ] && return 0
functions.sh:        for section in ${CONFIG_SECTIONS}; do
functions.sh:                config_get cfgtype "$section" TYPE
functions.sh:                [ -n "$___type" -a "x$cfgtype" != "x$___type" ] && continue
functions.sh:                eval "$___function \"\$section\" \"\$@\""
functions.sh:        done
functions.sh:}
functions.sh:config_list_foreach() {
functions.sh:        [ "$#" -ge 3 ] || return 0
functions.sh:        local section="$1"; shift
functions.sh:        local option="$1"; shift
functions.sh:        local function="$1"; shift
functions.sh:        local val
functions.sh:        local len
functions.sh:        local c=1
functions.sh:        config_get len "${section}" "${option}_LENGTH"
functions.sh:        [ -z "$len" ] && return 0
functions.sh:        while [ $c -le "$len" ]; do
functions.sh:                config_get val "${section}" "${option}_ITEM$c"
functions.sh:                eval "$function \"\$val\" \"\$@\""
functions.sh:                c="$(($c + 1))"
functions.sh:        done
functions.sh:}
functions.sh:insert_modules() {
functions.sh:        [ -d /etc/modules.d ] && {
functions.sh:                cd /etc/modules.d
functions.sh:                sed 's/^[^#]/insmod &/' $* | ash 2>&- || :
functions.sh:        }
functions.sh:}
functions.sh:default_prerm() {
functions.sh:        local name
functions.sh:        name=$(echo $(basename $1) | cut -d. -f1)
functions.sh:        [ -f /usr/lib/opkg/info/${name}.prerm-pkg ] && . /usr/lib/opkg/info/${name}.prerm-pkg
functions.sh:        for i in `cat /usr/lib/opkg/info/${name}.list | grep "^/etc/init.d/"`; do
functions.sh:                $i disable
functions.sh:                $i stop
functions.sh:        done
functions.sh:}
functions.sh:default_postinst() {
functions.sh:        local name rusers
functions.sh:        name=$(echo $(basename $1) | cut -d. -f1)
functions.sh:        [ -f ${IPKG_INSTROOT}/usr/lib/opkg/info/${name}.postinst-pkg ] && ( . ${IPKG_INSTROOT}/usr/lib/opkg/info/${name}.postinst-pkg )
functions.sh:        rusers=$(grep "Require-User:" ${IPKG_INSTROOT}/usr/lib/opkg/info/${name}.control)
functions.sh:        [ -n "$rusers" ] && {
functions.sh:                local user group uid gid
functions.sh:                for a in $(echo $rusers | sed "s/Require-User://g"); do
functions.sh:                        user=""
functions.sh:                        group=""
functions.sh:                        for b in $(echo $a | sed "s/:/ /g"); do
functions.sh:                                local name id
functions.sh:                                name=$(echo $b | cut -d= -f1)
functions.sh:                                id=$(echo $b | cut -d= -f2)
functions.sh:                                [ -z "$user" ] && {
functions.sh:                                        user=$name
functions.sh:                                        uid=$id
functions.sh:                                        continue
functions.sh:                                }
functions.sh:                                gid=$id
functions.sh:                                [ -n "$gid" ] && group_add $name $gid
functions.sh:                                [ -z "$gid" ] && {
functions.sh:                                        group_add_next $name
functions.sh:                                        gid=$?
functions.sh:                                }
functions.sh:                                [ -z "$group" ] && {
functions.sh:                                        user_exists $user || user_add $user "$uid" $gid
functions.sh:                                        group=$name
functions.sh:                                        continue
functions.sh:                                }
functions.sh:                                group_add_user $name $user
functions.sh:                        done
functions.sh:                done
functions.sh:        }
functions.sh:        [ "$PKG_UPGRADE" = "1" ] || for i in `cat ${IPKG_INSTROOT}/usr/lib/opkg/info/${name}.list | grep "^/etc/init.d/"`; do
functions.sh:                [ -n "${IPKG_INSTROOT}" ] && $(which bash) ${IPKG_INSTROOT}/etc/rc.common ${IPKG_INSTROOT}$i enable; \
functions.sh:                [ -n "${IPKG_INSTROOT}" ] || {
functions.sh:                        $i enable
functions.sh:                        $i start
functions.sh:                }
functions.sh:        done
functions.sh:        return 0
functions.sh:}
functions.sh:include() {
functions.sh:        local file
functions.sh:        for file in $(ls $1/*.sh 2>/dev/null); do
functions.sh:                . $file
functions.sh:        done
functions.sh:}
functions.sh:find_mtd_index() {
functions.sh:        local PART="$(grep "\"$1\"" /proc/mtd | awk -F: '{print $1}')"
functions.sh:        local INDEX="${PART##mtd}"
functions.sh:        echo ${INDEX}
functions.sh:}
functions.sh:find_mtd_part() {
functions.sh:        local INDEX=$(find_mtd_index "$1")
functions.sh:        local PREFIX=/dev/mtdblock
functions.sh:        [ -d /dev/mtdblock ] && PREFIX=/dev/mtdblock/
functions.sh:        echo "${INDEX:+$PREFIX$INDEX}"
functions.sh:}
functions.sh:group_add() {
functions.sh:        local name="$1"
functions.sh:        local gid="$2"
functions.sh:        local rc
functions.sh:        [ -f "${IPKG_INSTROOT}/etc/group" ] || return 1
functions.sh:        [ -n "$IPKG_INSTROOT" ] || lock /var/lock/group
functions.sh:        echo "${name}:x:${gid}:" >> ${IPKG_INSTROOT}/etc/group
functions.sh:        rc=$?
functions.sh:        [ -n "$IPKG_INSTROOT" ] || lock -u /var/lock/group
functions.sh:        return $rc
functions.sh:}
functions.sh:group_exists() {
functions.sh:        grep -qs "^${1}:" ${IPKG_INSTROOT}/etc/group
functions.sh:}
functions.sh:group_add_next() {
functions.sh:        local gid gids
functions.sh:        gid=$(grep -s "^${1}:" ${IPKG_INSTROOT}/etc/group | cut -d: -f3)
functions.sh:        [ -n "$gid" ] && return $gid
functions.sh:        gids=$(cat ${IPKG_INSTROOT}/etc/group | cut -d: -f3)
functions.sh:        gid=100
functions.sh:        while [ -n "$(echo $gids | grep $gid)" ] ; do
functions.sh:                gid=$((gid + 1))
functions.sh:        done
functions.sh:        group_add $1 $gid
functions.sh:        return $gid
functions.sh:}
functions.sh:group_add_user() {
functions.sh:        local grp delim=","
functions.sh:        grp=$(grep -s "^${1}:" ${IPKG_INSTROOT}/etc/group)
functions.sh:        [ -z "$(echo $grp | cut -d: -f4 | grep $2)" ] || return
functions.sh:        [ -n "$(echo $grp | grep ":$")" ] && delim=""
functions.sh:        [ -n "$IPKG_INSTROOT" ] || lock /var/lock/passwd
functions.sh:        sed -i "s/$grp/$grp$delim$2/g" ${IPKG_INSTROOT}/etc/group
functions.sh:        [ -n "$IPKG_INSTROOT" ] || lock -u /var/lock/passwd
functions.sh:}
functions.sh:user_add() {
functions.sh:        local name="${1}"
functions.sh:        local uid="${2}"
functions.sh:        local gid="${3}"
functions.sh:        local desc="${4:-$1}"
functions.sh:        local home="${5:-/var/run/$1}"
functions.sh:        local shell="${6:-/bin/false}"
functions.sh:        local rc
functions.sh:        [ -z "$uid" ] && {
functions.sh:                uids=$(cat ${IPKG_INSTROOT}/etc/passwd | cut -d: -f3)
functions.sh:                uid=100
functions.sh:                while [ -n "$(echo $uids | grep $uid)" ] ; do
functions.sh:                        uid=$((uid + 1))
functions.sh:                done
functions.sh:        }
functions.sh:        [ -z "$gid" ] && gid=$uid
functions.sh:        [ -f "${IPKG_INSTROOT}/etc/passwd" ] || return 1
functions.sh:        [ -n "$IPKG_INSTROOT" ] || lock /var/lock/passwd
functions.sh:        echo "${name}:x:${uid}:${gid}:${desc}:${home}:${shell}" >> ${IPKG_INSTROOT}/etc/passwd
functions.sh:        echo "${name}:x:0:0:99999:7:::" >> ${IPKG_INSTROOT}/etc/shadow
functions.sh:        rc=$?
functions.sh:        [ -n "$IPKG_INSTROOT" ] || lock -u /var/lock/passwd
functions.sh:        return $rc
functions.sh:}
functions.sh:user_exists() {
functions.sh:        grep -qs "^${1}:" ${IPKG_INSTROOT}/etc/passwd
functions.sh:}
functions.sh:[ -z "$IPKG_INSTROOT" -a -f /lib/config/uci.sh ] && . /lib/config/uci.sh
opkg-install:#!/bin/sh
opkg-install:opkg-cl -f /etc/opkg.conf update
opkg-install:opkg-cl -f /etc/opkg.conf install $@
opkg-install:rm -rf /var/opkg-lists
opkg.conf:src/gz base http://downloads.openwrt.org/snapshots/trunk/mvebu/packages/base
opkg.conf:src/gz packages http://downloads.openwrt.org/snapshots/trunk/mvebu/packages/packages
opkg.conf:dest root /
opkg.conf:dest ram /tmp
opkg.conf:lists_dir ext /var/opkg-lists
rootfs/Dockerfile:FROM progrium/rootbuilder
rootfs/Dockerfile:ADD ./config /tmp/buildroot/.config
rootfs/Dockerfile:RUN make oldconfig
rootfs/Dockerfile:RUN make --quiet
rootfs/Makefile:.PHONY: config
rootfs/Makefile:config:
rootfs/Makefile:	docker run -v $(PWD)/config:/tmp/buildroot/.config -it --rm progrium/rootbuilder make nconfig
rootfs/config:#
rootfs/config:# Automatically generated file; DO NOT EDIT.
rootfs/config:# Buildroot 2014.02 Configuration
rootfs/config:#
rootfs/config:BR2_HAVE_DOT_CONFIG=y
rootfs/config:#
rootfs/config:# Target options
rootfs/config:#
rootfs/config:# BR2_arcle is not set
rootfs/config:# BR2_arceb is not set
rootfs/config:# BR2_arm is not set
rootfs/config:BR2_armeb=y
rootfs/config:# BR2_aarch64 is not set
rootfs/config:# BR2_avr32 is not set
rootfs/config:# BR2_bfin is not set
rootfs/config:# BR2_i386 is not set
rootfs/config:# BR2_microblazeel is not set
rootfs/config:# BR2_microblazebe is not set
rootfs/config:# BR2_mips is not set
rootfs/config:# BR2_mipsel is not set
rootfs/config:# BR2_mips64 is not set
rootfs/config:# BR2_mips64el is not set
rootfs/config:# BR2_nios2 is not set
rootfs/config:# BR2_powerpc is not set
rootfs/config:# BR2_sh is not set
rootfs/config:# BR2_sh64 is not set
rootfs/config:# BR2_sparc is not set
rootfs/config:# BR2_x86_64 is not set
rootfs/config:# BR2_xtensa is not set
rootfs/config:BR2_ARCH="armeb"
rootfs/config:BR2_ENDIAN="BIG"
rootfs/config:BR2_GCC_TARGET_ARCH="armv7-a"
rootfs/config:BR2_GCC_TARGET_ABI="aapcs-linux"
rootfs/config:BR2_GCC_TARGET_CPU="cortex-a9"
rootfs/config:BR2_GCC_TARGET_FPU="vfpv3"
rootfs/config:BR2_GCC_TARGET_FLOAT_ABI="hard"
rootfs/config:BR2_GCC_TARGET_MODE="thumb"
rootfs/config:BR2_ARM_CPU_MAYBE_HAS_NEON=y
rootfs/config:BR2_ARM_CPU_MAYBE_HAS_VFPV2=y
rootfs/config:BR2_ARM_CPU_MAYBE_HAS_VFPV3=y
rootfs/config:BR2_ARM_CPU_HAS_THUMB2=y
rootfs/config:# BR2_arm7tdmi is not set
rootfs/config:# BR2_arm720t is not set
rootfs/config:# BR2_arm920t is not set
rootfs/config:# BR2_arm922t is not set
rootfs/config:# BR2_arm926t is not set
rootfs/config:# BR2_arm10t is not set
rootfs/config:# BR2_arm1136jf_s_r0 is not set
rootfs/config:# BR2_arm1136jf_s_r1 is not set
rootfs/config:# BR2_arm1176jz_s is not set
rootfs/config:# BR2_arm1176jzf_s is not set
rootfs/config:# BR2_cortex_a5 is not set
rootfs/config:# BR2_cortex_a7 is not set
rootfs/config:# BR2_cortex_a8 is not set
rootfs/config:BR2_cortex_a9=y
rootfs/config:# BR2_cortex_a15 is not set
rootfs/config:# BR2_fa526 is not set
rootfs/config:# BR2_pj4 is not set
rootfs/config:# BR2_strongarm is not set
rootfs/config:# BR2_xscale is not set
rootfs/config:# BR2_iwmmxt is not set
rootfs/config:# BR2_arm1136jf_s is not set
rootfs/config:# BR2_ARM_EABI is not set
rootfs/config:BR2_ARM_EABIHF=y
rootfs/config:# BR2_ARM_ENABLE_NEON is not set
rootfs/config:# BR2_ARM_SOFT_FLOAT is not set
rootfs/config:# BR2_ARM_FPU_VFPV2 is not set
rootfs/config:BR2_ARM_FPU_VFPV3=y
rootfs/config:# BR2_ARM_FPU_VFPV3D16 is not set
rootfs/config:# BR2_ARM_FPU_NEON is not set
rootfs/config:# BR2_ARM_INSTRUCTIONS_ARM_CHOICE is not set
rootfs/config:# BR2_ARM_INSTRUCTIONS_THUMB is not set
rootfs/config:BR2_ARM_INSTRUCTIONS_THUMB2=y
rootfs/config:# BR2_x86_generic is not set
rootfs/config:# BR2_x86_i386 is not set
rootfs/config:# BR2_x86_i486 is not set
rootfs/config:# BR2_x86_i586 is not set
rootfs/config:# BR2_x86_i686 is not set
rootfs/config:# BR2_x86_pentiumpro is not set
rootfs/config:# BR2_x86_pentium_mmx is not set
rootfs/config:# BR2_x86_pentium_m is not set
rootfs/config:# BR2_x86_pentium2 is not set
rootfs/config:# BR2_x86_pentium3 is not set
rootfs/config:# BR2_x86_pentium4 is not set
rootfs/config:# BR2_x86_prescott is not set
rootfs/config:# BR2_x86_nocona is not set
rootfs/config:# BR2_x86_core2 is not set
rootfs/config:# BR2_x86_atom is not set
rootfs/config:# BR2_x86_k6 is not set
rootfs/config:# BR2_x86_k6_2 is not set
rootfs/config:# BR2_x86_athlon is not set
rootfs/config:# BR2_x86_athlon_4 is not set
rootfs/config:# BR2_x86_opteron is not set
rootfs/config:# BR2_x86_opteron_sse3 is not set
rootfs/config:# BR2_x86_barcelona is not set
rootfs/config:# BR2_x86_jaguar is not set
rootfs/config:# BR2_x86_geode is not set
rootfs/config:# BR2_x86_c3 is not set
rootfs/config:# BR2_x86_c32 is not set
rootfs/config:# BR2_x86_winchip_c6 is not set
rootfs/config:# BR2_x86_winchip2 is not set
rootfs/config:#
rootfs/config:# Build options
rootfs/config:#
rootfs/config:#
rootfs/config:# Commands
rootfs/config:#
rootfs/config:BR2_WGET="wget --passive-ftp -nd -t 3"
rootfs/config:BR2_SVN="svn"
rootfs/config:BR2_BZR="bzr"
rootfs/config:BR2_GIT="git"
rootfs/config:BR2_CVS="cvs"
rootfs/config:BR2_LOCALFILES="cp"
rootfs/config:BR2_SCP="scp"
rootfs/config:BR2_SSH="ssh"
rootfs/config:BR2_HG="hg"
rootfs/config:BR2_ZCAT="gzip -d -c"
rootfs/config:BR2_BZCAT="bzcat"
rootfs/config:BR2_XZCAT="xzcat"
rootfs/config:BR2_TAR_OPTIONS=""
rootfs/config:BR2_DEFCONFIG="$(CONFIG_DIR)/defconfig"
rootfs/config:BR2_DL_DIR="$(TOPDIR)/dl"
rootfs/config:BR2_HOST_DIR="$(BASE_DIR)/host"
rootfs/config:#
rootfs/config:# Mirrors and Download locations
rootfs/config:#
rootfs/config:BR2_PRIMARY_SITE=""
rootfs/config:BR2_BACKUP_SITE="http://sources.buildroot.net"
rootfs/config:BR2_KERNEL_MIRROR="http://www.kernel.org/pub"
rootfs/config:BR2_GNU_MIRROR="http://ftp.gnu.org/pub/gnu"
rootfs/config:BR2_DEBIAN_MIRROR="http://ftp.debian.org"
rootfs/config:BR2_LUAROCKS_MIRROR="http://luarocks.org/repositories/rocks"
rootfs/config:BR2_JLEVEL=0
rootfs/config:# BR2_CCACHE is not set
rootfs/config:# BR2_DEPRECATED is not set
rootfs/config:# BR2_ENABLE_DEBUG is not set
rootfs/config:BR2_STRIP_strip=y
rootfs/config:# BR2_STRIP_sstrip is not set
rootfs/config:# BR2_STRIP_none is not set
rootfs/config:BR2_STRIP_EXCLUDE_FILES=""
rootfs/config:BR2_STRIP_EXCLUDE_DIRS=""
rootfs/config:# BR2_OPTIMIZE_0 is not set
rootfs/config:# BR2_OPTIMIZE_1 is not set
rootfs/config:# BR2_OPTIMIZE_2 is not set
rootfs/config:# BR2_OPTIMIZE_3 is not set
rootfs/config:BR2_OPTIMIZE_S=y
rootfs/config:#
rootfs/config:# enabling Stack Smashing Protection requires support in the toolchain
rootfs/config:#
rootfs/config:# BR2_PREFER_STATIC_LIB is not set
rootfs/config:BR2_PACKAGE_OVERRIDE_FILE="$(TOPDIR)/local.mk"
rootfs/config:BR2_GLOBAL_PATCH_DIR=""
rootfs/config:#
rootfs/config:# Toolchain
rootfs/config:#
rootfs/config:BR2_TOOLCHAIN_USES_UCLIBC=y
rootfs/config:BR2_TOOLCHAIN_BUILDROOT=y
rootfs/config:# BR2_TOOLCHAIN_EXTERNAL is not set
rootfs/config:#
rootfs/config:# Kernel Header Options
rootfs/config:#
rootfs/config:# BR2_KERNEL_HEADERS_3_0 is not set
rootfs/config:# BR2_KERNEL_HEADERS_3_2 is not set
rootfs/config:# BR2_KERNEL_HEADERS_3_4 is not set
rootfs/config:# BR2_KERNEL_HEADERS_3_10 is not set
rootfs/config:# BR2_KERNEL_HEADERS_3_11 is not set
rootfs/config:# BR2_KERNEL_HEADERS_3_12 is not set
rootfs/config:BR2_KERNEL_HEADERS_3_13=y
rootfs/config:# BR2_KERNEL_HEADERS_VERSION is not set
rootfs/config:# BR2_KERNEL_HEADERS_SNAP is not set
rootfs/config:BR2_DEFAULT_KERNEL_HEADERS="3.13.5"
rootfs/config:BR2_TOOLCHAIN_BUILDROOT_UCLIBC=y
rootfs/config:# BR2_TOOLCHAIN_BUILDROOT_EGLIBC is not set
rootfs/config:# BR2_TOOLCHAIN_BUILDROOT_GLIBC is not set
rootfs/config:BR2_TOOLCHAIN_BUILDROOT_LIBC="uclibc"
rootfs/config:#
rootfs/config:# uClibc Options
rootfs/config:#
rootfs/config:# BR2_UCLIBC_VERSION_0_9_32 is not set
rootfs/config:BR2_UCLIBC_VERSION_0_9_33=y
rootfs/config:# BR2_UCLIBC_VERSION_SNAPSHOT is not set
rootfs/config:BR2_UCLIBC_VERSION_STRING="0.9.33.2"
rootfs/config:BR2_UCLIBC_CONFIG="package/uclibc/uClibc-0.9.33.config"
rootfs/config:# BR2_TOOLCHAIN_BUILDROOT_LARGEFILE is not set
rootfs/config:# BR2_TOOLCHAIN_BUILDROOT_INET_IPV6 is not set
rootfs/config:# BR2_TOOLCHAIN_BUILDROOT_INET_RPC is not set
rootfs/config:# BR2_TOOLCHAIN_BUILDROOT_WCHAR is not set
rootfs/config:# BR2_TOOLCHAIN_BUILDROOT_LOCALE is not set
rootfs/config:# BR2_PTHREADS_NONE is not set
rootfs/config:# BR2_PTHREADS is not set
rootfs/config:# BR2_PTHREADS_OLD is not set
rootfs/config:BR2_PTHREADS_NATIVE=y
rootfs/config:# BR2_PTHREAD_DEBUG is not set
rootfs/config:# BR2_TOOLCHAIN_BUILDROOT_USE_SSP is not set
rootfs/config:BR2_UCLIBC_INSTALL_UTILS=y
rootfs/config:# BR2_UCLIBC_INSTALL_TEST_SUITE is not set
rootfs/config:BR2_UCLIBC_TARGET_ARCH="arm"
rootfs/config:BR2_UCLIBC_ARM_TYPE="ARM_CORTEXA9"
rootfs/config:BR2_UCLIBC_ARM_BX=y
rootfs/config:#
rootfs/config:# Binutils Options
rootfs/config:#
rootfs/config:BR2_BINUTILS_VERSION_2_22=y
rootfs/config:# BR2_BINUTILS_VERSION_2_23_1 is not set
rootfs/config:# BR2_BINUTILS_VERSION_2_23_2 is not set
rootfs/config:# BR2_BINUTILS_VERSION_2_24 is not set
rootfs/config:BR2_BINUTILS_VERSION="2.22"
rootfs/config:BR2_BINUTILS_EXTRA_CONFIG_OPTIONS=""
rootfs/config:#
rootfs/config:# GCC Options
rootfs/config:#
rootfs/config:BR2_GCC_NEEDS_MPC=y
rootfs/config:# BR2_GCC_VERSION_4_6_X is not set
rootfs/config:BR2_GCC_VERSION_4_7_X=y
rootfs/config:# BR2_GCC_VERSION_4_8_X is not set
rootfs/config:# BR2_GCC_VERSION_SNAP is not set
rootfs/config:BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE=y
rootfs/config:BR2_GCC_VERSION="4.7.3"
rootfs/config:BR2_EXTRA_GCC_CONFIG_OPTIONS=""
rootfs/config:# BR2_TOOLCHAIN_BUILDROOT_CXX is not set
rootfs/config:BR2_GCC_ENABLE_TLS=y
rootfs/config:# BR2_GCC_ENABLE_OPENMP is not set
rootfs/config:# BR2_GCC_ENABLE_LIBMUDFLAP is not set
rootfs/config:# BR2_PACKAGE_HOST_GDB is not set
rootfs/config:BR2_TOOLCHAIN_HAS_THREADS=y
rootfs/config:BR2_TOOLCHAIN_HAS_SHADOW_PASSWORDS=y
rootfs/config:# BR2_ENABLE_LOCALE_PURGE is not set
rootfs/config:BR2_GENERATE_LOCALE=""
rootfs/config:BR2_NEEDS_GETTEXT=y
rootfs/config:BR2_USE_MMU=y
rootfs/config:BR2_TARGET_OPTIMIZATION="-pipe"
rootfs/config:BR2_TARGET_LDFLAGS=""
rootfs/config:# BR2_ECLIPSE_REGISTER is not set
rootfs/config:#
rootfs/config:# System configuration
rootfs/config:#
rootfs/config:BR2_TARGET_GENERIC_HOSTNAME="buildroot"
rootfs/config:BR2_TARGET_GENERIC_ISSUE="Welcome to Buildroot"
rootfs/config:# BR2_TARGET_GENERIC_PASSWD_DES is not set
rootfs/config:BR2_TARGET_GENERIC_PASSWD_MD5=y
rootfs/config:# BR2_TARGET_GENERIC_PASSWD_SHA256 is not set
rootfs/config:# BR2_TARGET_GENERIC_PASSWD_SHA512 is not set
rootfs/config:BR2_TARGET_GENERIC_PASSWD_METHOD="md5"
rootfs/config:BR2_INIT_BUSYBOX=y
rootfs/config:# BR2_INIT_SYSV is not set
rootfs/config:#
rootfs/config:# systemd needs udev /dev management and a toolchain w/ largefile, wchar, IPv6, threads
rootfs/config:#
rootfs/config:# BR2_INIT_NONE is not set
rootfs/config:# BR2_ROOTFS_DEVICE_CREATION_STATIC is not set
rootfs/config:BR2_ROOTFS_DEVICE_CREATION_DYNAMIC_DEVTMPFS=y
rootfs/config:# BR2_ROOTFS_DEVICE_CREATION_DYNAMIC_MDEV is not set
rootfs/config:#
rootfs/config:# udev needs a toolchain w/ largefile, wchar
rootfs/config:#
rootfs/config:BR2_ROOTFS_DEVICE_TABLE="system/device_table.txt"
rootfs/config:BR2_ROOTFS_SKELETON_DEFAULT=y
rootfs/config:# BR2_ROOTFS_SKELETON_CUSTOM is not set
rootfs/config:BR2_TARGET_GENERIC_ROOT_PASSWD=""
rootfs/config:BR2_TARGET_GENERIC_GETTY=y
rootfs/config:#
rootfs/config:# getty options
rootfs/config:#
rootfs/config:BR2_TARGET_GENERIC_GETTY_PORT="ttyS0"
rootfs/config:# BR2_TARGET_GENERIC_GETTY_BAUDRATE_KEEP is not set
rootfs/config:# BR2_TARGET_GENERIC_GETTY_BAUDRATE_9600 is not set
rootfs/config:# BR2_TARGET_GENERIC_GETTY_BAUDRATE_19200 is not set
rootfs/config:# BR2_TARGET_GENERIC_GETTY_BAUDRATE_38400 is not set
rootfs/config:# BR2_TARGET_GENERIC_GETTY_BAUDRATE_57600 is not set
rootfs/config:BR2_TARGET_GENERIC_GETTY_BAUDRATE_115200=y
rootfs/config:BR2_TARGET_GENERIC_GETTY_BAUDRATE="115200"
rootfs/config:BR2_TARGET_GENERIC_GETTY_TERM="vt100"
rootfs/config:BR2_TARGET_GENERIC_GETTY_OPTIONS=""
rootfs/config:BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW=y
rootfs/config:BR2_ROOTFS_OVERLAY=""
rootfs/config:BR2_ROOTFS_POST_BUILD_SCRIPT=""
rootfs/config:BR2_ROOTFS_POST_IMAGE_SCRIPT=""
rootfs/config:#
rootfs/config:# Kernel
rootfs/config:#
rootfs/config:# BR2_LINUX_KERNEL is not set
rootfs/config:#
rootfs/config:# Target packages
rootfs/config:#
rootfs/config:BR2_PACKAGE_BUSYBOX=y
rootfs/config:# BR2_BUSYBOX_VERSION_1_20_X is not set
rootfs/config:# BR2_BUSYBOX_VERSION_1_21_X is not set
rootfs/config:BR2_BUSYBOX_VERSION_1_22_X=y
rootfs/config:# BR2_PACKAGE_BUSYBOX_SNAPSHOT is not set
rootfs/config:BR2_BUSYBOX_VERSION="1.22.1"
rootfs/config:BR2_PACKAGE_BUSYBOX_CONFIG="package/busybox/busybox-1.22.x.config"
rootfs/config:# BR2_PACKAGE_BUSYBOX_SHOW_OTHERS is not set
rootfs/config:# BR2_PACKAGE_BUSYBOX_WATCHDOG is not set
rootfs/config:#
rootfs/config:# Audio and video applications
rootfs/config:#
rootfs/config:#
rootfs/config:# alsa-utils needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_AUMIX is not set
rootfs/config:#
rootfs/config:# bellagio needs a toolchain w/ C++, threads, dynamic library
rootfs/config:#
rootfs/config:# BR2_PACKAGE_FAAD2 is not set
rootfs/config:#
rootfs/config:# ffmpeg needs a toolchain w/ largefile, IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_FLAC is not set
rootfs/config:#
rootfs/config:# gstreamer 0.10 needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# gstreamer 1.x needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LAME is not set
rootfs/config:# BR2_PACKAGE_LIBVPX is not set
rootfs/config:# BR2_PACKAGE_MADPLAY is not set
rootfs/config:#
rootfs/config:# mpd needs a toolchain w/ C++, threads, wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_MPG123 is not set
rootfs/config:#
rootfs/config:# mplayer needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_MUSEPACK is not set
rootfs/config:# BR2_PACKAGE_OPUS_TOOLS is not set
rootfs/config:#
rootfs/config:# pulseaudio needs a toolchain w/ wchar, largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# tstools needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# vlc needs a uclibc snapshot or (e)glibc toolchain w/ C++, largefile, wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_VORBIS_TOOLS is not set
rootfs/config:# BR2_PACKAGE_WAVPACK is not set
rootfs/config:# BR2_PACKAGE_YAVTA is not set
rootfs/config:#
rootfs/config:# Compressors and decompressors
rootfs/config:#
rootfs/config:# BR2_PACKAGE_BZIP2 is not set
rootfs/config:# BR2_PACKAGE_INFOZIP is not set
rootfs/config:# BR2_PACKAGE_LZOP is not set
rootfs/config:# BR2_PACKAGE_XZ is not set
rootfs/config:#
rootfs/config:# Debugging, profiling and benchmark
rootfs/config:#
rootfs/config:#
rootfs/config:# bonnie++ needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_CACHE_CALIBRATOR is not set
rootfs/config:# BR2_PACKAGE_DHRYSTONE is not set
rootfs/config:# BR2_PACKAGE_DMALLOC is not set
rootfs/config:# BR2_PACKAGE_DROPWATCH is not set
rootfs/config:#
rootfs/config:# dstat needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# duma needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# fio needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# gdb/gdbserver needs a toolchain w/ threads, threads debug
rootfs/config:#
rootfs/config:# BR2_PACKAGE_IOZONE is not set
rootfs/config:# BR2_PACKAGE_KEXEC is not set
rootfs/config:#
rootfs/config:# ktap needs a Linux kernel to be built
rootfs/config:#
rootfs/config:#
rootfs/config:# latencytop needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LMBENCH is not set
rootfs/config:#
rootfs/config:# ltp-testsuite needs a toolchain w/ IPv6, RPC, largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# lttng-modules needs a Linux kernel to be built
rootfs/config:#
rootfs/config:#
rootfs/config:# lttng-tools needs a toolchain w/ largefile, threads, wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_MEMSTAT is not set
rootfs/config:# BR2_PACKAGE_NETPERF is not set
rootfs/config:#
rootfs/config:# oprofile needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_PAX_UTILS is not set
rootfs/config:#
rootfs/config:# perf needs a toolchain w/ largefile and a Linux kernel to be built
rootfs/config:#
rootfs/config:# BR2_PACKAGE_PV is not set
rootfs/config:# BR2_PACKAGE_RAMSMP is not set
rootfs/config:# BR2_PACKAGE_RAMSPEED is not set
rootfs/config:# BR2_PACKAGE_RT_TESTS is not set
rootfs/config:# BR2_PACKAGE_STRACE is not set
rootfs/config:# BR2_PACKAGE_STRESS is not set
rootfs/config:# BR2_PACKAGE_TINYMEMBENCH is not set
rootfs/config:#
rootfs/config:# trace-cmd needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_VALGRIND is not set
rootfs/config:# BR2_PACKAGE_WHETSTONE is not set
rootfs/config:#
rootfs/config:# Development tools
rootfs/config:#
rootfs/config:# BR2_PACKAGE_BINUTILS is not set
rootfs/config:# BR2_PACKAGE_BSDIFF is not set
rootfs/config:#
rootfs/config:# cvs needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_FLEX is not set
rootfs/config:#
rootfs/config:# gettext needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# git needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# gperf needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_JQ is not set
rootfs/config:# BR2_PACKAGE_LIBTOOL is not set
rootfs/config:# BR2_PACKAGE_MAKE is not set
rootfs/config:# BR2_PACKAGE_PKGCONF is not set
rootfs/config:# BR2_PACKAGE_SSTRIP is not set
rootfs/config:# BR2_PACKAGE_SUBVERSION is not set
rootfs/config:#
rootfs/config:# tree needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# Filesystem and flash utilities
rootfs/config:#
rootfs/config:# BR2_PACKAGE_CIFS_UTILS is not set
rootfs/config:# BR2_PACKAGE_CRAMFS is not set
rootfs/config:#
rootfs/config:# curlftpfs needs a toolchain w/ largefile, wchar, threads, dynamic library
rootfs/config:#
rootfs/config:#
rootfs/config:# dosfstools needs a toolchain w/ largefile, wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# e2fsprogs needs a toolchain w/ largefile, wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# ecryptfs-utils needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# exfat needs a toolchain w/ largefile, wchar, threads, dynamic library
rootfs/config:#
rootfs/config:#
rootfs/config:# exfat-utils needs a toolchain w/ largefile, wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# f2fs-tools needs a toolchain w/ largefile, wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# flashbench needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# genext2fs needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_GENROMFS is not set
rootfs/config:# BR2_PACKAGE_MAKEDEVS is not set
rootfs/config:#
rootfs/config:# mmc-utils needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_MTD is not set
rootfs/config:#
rootfs/config:# nfs-utils needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# ntfs-3g needs a toolchain w/ largefile, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# squashfs needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# sshfs needs a toolchain w/ largefile, wchar, threads, dynamic library
rootfs/config:#
rootfs/config:#
rootfs/config:# unionfs needs a toolchain w/ largefile, threads, dynamic library
rootfs/config:#
rootfs/config:#
rootfs/config:# xfsprogs needs a toolchain w/ largefile, wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# Games
rootfs/config:#
rootfs/config:# BR2_PACKAGE_GNUCHESS is not set
rootfs/config:# BR2_PACKAGE_LBREAKOUT2 is not set
rootfs/config:# BR2_PACKAGE_LTRIS is not set
rootfs/config:# BR2_PACKAGE_PRBOOM is not set
rootfs/config:#
rootfs/config:# Graphic libraries and applications (graphic/text)
rootfs/config:#
rootfs/config:#
rootfs/config:# Graphic applications
rootfs/config:#
rootfs/config:# BR2_PACKAGE_FSWEBCAM is not set
rootfs/config:# BR2_PACKAGE_GNUPLOT is not set
rootfs/config:#
rootfs/config:# jhead needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# rrdtool needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# Graphic libraries
rootfs/config:#
rootfs/config:#
rootfs/config:# cegui06 needs a toolchain w/ C++, threads, dynamic library
rootfs/config:#
rootfs/config:#
rootfs/config:# directfb needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_FBDUMP is not set
rootfs/config:# BR2_PACKAGE_FBGRAB is not set
rootfs/config:# BR2_PACKAGE_FB_TEST_APP is not set
rootfs/config:#
rootfs/config:# fbterm needs a toolchain w/ C++, wchar, locale
rootfs/config:#
rootfs/config:# BR2_PACKAGE_FBV is not set
rootfs/config:# BR2_PACKAGE_IMAGEMAGICK is not set
rootfs/config:#
rootfs/config:# linux-fusion needs a Linux kernel to be built
rootfs/config:#
rootfs/config:#
rootfs/config:# ocrad needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# psplash needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_SDL is not set
rootfs/config:#
rootfs/config:# Other GUIs
rootfs/config:#
rootfs/config:#
rootfs/config:# EFL needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# qt needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# Qt5 needs a toolchain w/ wchar, IPv6, threads, C++
rootfs/config:#
rootfs/config:#
rootfs/config:# weston needs udev and a toolchain w/ threads
rootfs/config:#
rootfs/config:#
rootfs/config:# X.org needs a toolchain w/ wchar, threads, dynamic library
rootfs/config:#
rootfs/config:#
rootfs/config:# X applications
rootfs/config:#
rootfs/config:#
rootfs/config:# midori needs libgtk2 and a toolchain w/ C++, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# X libraries and helper libraries
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBERATION is not set
rootfs/config:# BR2_PACKAGE_XKEYBOARD_CONFIG is not set
rootfs/config:#
rootfs/config:# X window managers
rootfs/config:#
rootfs/config:#
rootfs/config:# Hardware handling
rootfs/config:#
rootfs/config:#
rootfs/config:# Firmware
rootfs/config:#
rootfs/config:# BR2_PACKAGE_B43_FIRMWARE is not set
rootfs/config:# BR2_PACKAGE_LINUX_FIRMWARE is not set
rootfs/config:# BR2_PACKAGE_UX500_FIRMWARE is not set
rootfs/config:# BR2_PACKAGE_ZD1211_FIRMWARE is not set
rootfs/config:# BR2_PACKAGE_AVRDUDE is not set
rootfs/config:#
rootfs/config:# cdrkit needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# cryptsetup needs a toolchain w/ largefile, wchar, dynamic library
rootfs/config:#
rootfs/config:# BR2_PACKAGE_DBUS is not set
rootfs/config:#
rootfs/config:# dmraid needs a toolchain w/ largefile, dynamic library
rootfs/config:#
rootfs/config:# BR2_PACKAGE_DVB_APPS is not set
rootfs/config:#
rootfs/config:# dvbsnoop needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_EEPROG is not set
rootfs/config:# BR2_PACKAGE_EVEMU is not set
rootfs/config:# BR2_PACKAGE_EVTEST is not set
rootfs/config:# BR2_PACKAGE_FAN_CTRL is not set
rootfs/config:# BR2_PACKAGE_FCONFIG is not set
rootfs/config:# BR2_PACKAGE_FIS is not set
rootfs/config:# BR2_PACKAGE_FMTOOLS is not set
rootfs/config:# BR2_PACKAGE_FXLOAD is not set
rootfs/config:# BR2_PACKAGE_GADGETFS_TEST is not set
rootfs/config:# BR2_PACKAGE_GPM is not set
rootfs/config:# BR2_PACKAGE_GPSD is not set
rootfs/config:#
rootfs/config:# gptfdisk needs a toolchain w/ largefile, wchar, C++
rootfs/config:#
rootfs/config:#
rootfs/config:# gvfs needs a toolchain w/ largefile, wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_HWDATA is not set
rootfs/config:# BR2_PACKAGE_I2C_TOOLS is not set
rootfs/config:# BR2_PACKAGE_INPUT_EVENT_DAEMON is not set
rootfs/config:# BR2_PACKAGE_INPUT_TOOLS is not set
rootfs/config:# BR2_PACKAGE_IOSTAT is not set
rootfs/config:# BR2_PACKAGE_IRDA_UTILS is not set
rootfs/config:# BR2_PACKAGE_KBD is not set
rootfs/config:# BR2_PACKAGE_LCDPROC is not set
rootfs/config:# BR2_PACKAGE_LM_SENSORS is not set
rootfs/config:#
rootfs/config:# lshw needs a toolchain w/ C++, largefile, wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LSUIO is not set
rootfs/config:#
rootfs/config:# lvm2 needs a toolchain w/ largefile, dynamic library
rootfs/config:#
rootfs/config:# BR2_PACKAGE_MDADM is not set
rootfs/config:# BR2_PACKAGE_MEDIA_CTL is not set
rootfs/config:#
rootfs/config:# memtester needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# minicom needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_NANOCOM is not set
rootfs/config:#
rootfs/config:# neard needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# ofono needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# ola needs a toolchain w/ C++, threads, largefile, wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_OPEN2300 is not set
rootfs/config:# BR2_PACKAGE_OPENOCD is not set
rootfs/config:#
rootfs/config:# owl-linux needs a Linux kernel to be built
rootfs/config:#
rootfs/config:#
rootfs/config:# owl-linux is only supported on ARM9 architecture
rootfs/config:#
rootfs/config:#
rootfs/config:# parted needs a toolchain w/ largefile, wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_PCIUTILS is not set
rootfs/config:# BR2_PACKAGE_PICOCOM is not set
rootfs/config:# BR2_PACKAGE_RNG_TOOLS is not set
rootfs/config:# BR2_PACKAGE_SANE_BACKENDS is not set
rootfs/config:# BR2_PACKAGE_SDPARM is not set
rootfs/config:# BR2_PACKAGE_SETSERIAL is not set
rootfs/config:#
rootfs/config:# sg3-utils needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# smartmontools needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# smstools3 needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_SNOWBALL_HDMISERVICE is not set
rootfs/config:# BR2_PACKAGE_SREDIRD is not set
rootfs/config:# BR2_PACKAGE_STATSERIAL is not set
rootfs/config:# BR2_PACKAGE_SYSSTAT is not set
rootfs/config:# BR2_PACKAGE_TI_UIM is not set
rootfs/config:# BR2_PACKAGE_TI_UTILS is not set
rootfs/config:# BR2_PACKAGE_UBOOT_TOOLS is not set
rootfs/config:#
rootfs/config:# udev needs udev /dev management and a toolchain w/ largefile, wchar, dynamic library
rootfs/config:#
rootfs/config:#
rootfs/config:# udisks needs udev /dev management and a toolchain w/ wchar, threads, dynamic library
rootfs/config:#
rootfs/config:# BR2_PACKAGE_USB_MODESWITCH is not set
rootfs/config:# BR2_PACKAGE_USB_MODESWITCH_DATA is not set
rootfs/config:#
rootfs/config:# usbmount requires udev to be enabled
rootfs/config:#
rootfs/config:# BR2_PACKAGE_USBUTILS is not set
rootfs/config:# BR2_PACKAGE_W_SCAN is not set
rootfs/config:# BR2_PACKAGE_WIPE is not set
rootfs/config:#
rootfs/config:# Interpreter languages and scripting
rootfs/config:#
rootfs/config:# BR2_PACKAGE_ENSCRIPT is not set
rootfs/config:# BR2_PACKAGE_ERLANG is not set
rootfs/config:# BR2_PACKAGE_HASERL is not set
rootfs/config:#
rootfs/config:# jamvm needs a toolchain w/ IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_JIMTCL is not set
rootfs/config:# BR2_PACKAGE_LUA is not set
rootfs/config:# BR2_PACKAGE_LUAJIT is not set
rootfs/config:# BR2_PACKAGE_PERL is not set
rootfs/config:# BR2_PACKAGE_PHP is not set
rootfs/config:#
rootfs/config:# python needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# python3 needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# ruby needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_TCL is not set
rootfs/config:#
rootfs/config:# Libraries
rootfs/config:#
rootfs/config:#
rootfs/config:# Audio/Sound
rootfs/config:#
rootfs/config:# BR2_PACKAGE_ALSA_LIB is not set
rootfs/config:#
rootfs/config:# audiofile needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_CELT051 is not set
rootfs/config:#
rootfs/config:# fdk-aac needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBAO is not set
rootfs/config:# BR2_PACKAGE_LIBCDAUDIO is not set
rootfs/config:# BR2_PACKAGE_LIBCDIO is not set
rootfs/config:# BR2_PACKAGE_LIBCUE is not set
rootfs/config:# BR2_PACKAGE_LIBCUEFILE is not set
rootfs/config:# BR2_PACKAGE_LIBID3TAG is not set
rootfs/config:# BR2_PACKAGE_LIBLO is not set
rootfs/config:# BR2_PACKAGE_LIBMAD is not set
rootfs/config:#
rootfs/config:# libmodplug needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# libmpd needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBREPLAYGAIN is not set
rootfs/config:# BR2_PACKAGE_LIBSAMPLERATE is not set
rootfs/config:#
rootfs/config:# libsndfile needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBVORBIS is not set
rootfs/config:# BR2_PACKAGE_OPUS is not set
rootfs/config:# BR2_PACKAGE_PORTAUDIO is not set
rootfs/config:# BR2_PACKAGE_SPEEX is not set
rootfs/config:#
rootfs/config:# taglib needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_TREMOR is not set
rootfs/config:#
rootfs/config:# Compression and decompression
rootfs/config:#
rootfs/config:#
rootfs/config:# libarchive needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LZO is not set
rootfs/config:#
rootfs/config:# snappy needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_ZLIB is not set
rootfs/config:#
rootfs/config:# Crypto
rootfs/config:#
rootfs/config:# BR2_PACKAGE_BEECRYPT is not set
rootfs/config:# BR2_PACKAGE_CA_CERTIFICATES is not set
rootfs/config:#
rootfs/config:# cryptodev needs a Linux kernel to be built
rootfs/config:#
rootfs/config:#
rootfs/config:# gnutls needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBASSUAN is not set
rootfs/config:# BR2_PACKAGE_LIBGCRYPT is not set
rootfs/config:# BR2_PACKAGE_LIBGPG_ERROR is not set
rootfs/config:# BR2_PACKAGE_LIBGPGME is not set
rootfs/config:# BR2_PACKAGE_LIBMCRYPT is not set
rootfs/config:# BR2_PACKAGE_LIBMHASH is not set
rootfs/config:#
rootfs/config:# libnss needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# libsecret needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBSHA1 is not set
rootfs/config:# BR2_PACKAGE_LIBSSH2 is not set
rootfs/config:# BR2_PACKAGE_NETTLE is not set
rootfs/config:# BR2_PACKAGE_OPENSSL is not set
rootfs/config:# BR2_PACKAGE_POLARSSL is not set
rootfs/config:#
rootfs/config:# Database
rootfs/config:#
rootfs/config:# BR2_PACKAGE_BERKELEYDB is not set
rootfs/config:# BR2_PACKAGE_GDBM is not set
rootfs/config:#
rootfs/config:# MySQL needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# redis needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_SQLCIPHER is not set
rootfs/config:# BR2_PACKAGE_SQLITE is not set
rootfs/config:#
rootfs/config:# Filesystem
rootfs/config:#
rootfs/config:#
rootfs/config:# gamin needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBCONFIG is not set
rootfs/config:# BR2_PACKAGE_LIBCONFUSE is not set
rootfs/config:#
rootfs/config:# libfuse needs a toolchain w/ largefile, threads, dynamic library
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBLOCKFILE is not set
rootfs/config:#
rootfs/config:# libnfs needs a toolchain w/ RPC and LARGEFILE
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBSYSFS is not set
rootfs/config:# BR2_PACKAGE_LOCKDEV is not set
rootfs/config:#
rootfs/config:# Graphics
rootfs/config:#
rootfs/config:#
rootfs/config:# atk needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_CAIRO is not set
rootfs/config:# BR2_PACKAGE_FONTCONFIG is not set
rootfs/config:# BR2_PACKAGE_FREETYPE is not set
rootfs/config:# BR2_PACKAGE_GD is not set
rootfs/config:#
rootfs/config:# gdk-pixbuf needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# harfbuzz needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_IMLIB2 is not set
rootfs/config:# BR2_PACKAGE_JASPER is not set
rootfs/config:# BR2_PACKAGE_JPEG is not set
rootfs/config:# BR2_PACKAGE_LCMS2 is not set
rootfs/config:# BR2_PACKAGE_LIBART is not set
rootfs/config:# BR2_PACKAGE_LIBDMTX is not set
rootfs/config:# BR2_PACKAGE_LIBEXIF is not set
rootfs/config:# BR2_PACKAGE_LIBGEOTIFF is not set
rootfs/config:# BR2_PACKAGE_LIBPNG is not set
rootfs/config:# BR2_PACKAGE_LIBQRENCODE is not set
rootfs/config:#
rootfs/config:# libraw needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# librsvg needs a toolchain w/ wchar, threads, C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBSVG is not set
rootfs/config:# BR2_PACKAGE_LIBSVG_CAIRO is not set
rootfs/config:# BR2_PACKAGE_LIBSVGTINY is not set
rootfs/config:# BR2_PACKAGE_LIBUNGIF is not set
rootfs/config:#
rootfs/config:# opencv needs a toolchain w/ C++, threads, wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# pango needs a toolchain w/ wchar, threads, C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_PIXMAN is not set
rootfs/config:#
rootfs/config:# poppler needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_TIFF is not set
rootfs/config:# BR2_PACKAGE_WAYLAND is not set
rootfs/config:BR2_PACKAGE_WEBKIT_ARCH_SUPPORTS=y
rootfs/config:#
rootfs/config:# webkit needs libgtk2 and a toolchain w/ C++, wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_WEBP is not set
rootfs/config:#
rootfs/config:# zxing needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# Hardware handling
rootfs/config:#
rootfs/config:# BR2_PACKAGE_CCID is not set
rootfs/config:# BR2_PACKAGE_DTC is not set
rootfs/config:#
rootfs/config:# lcdapi needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBAIO is not set
rootfs/config:#
rootfs/config:# libatasmart requires udev to be enabled
rootfs/config:#
rootfs/config:#
rootfs/config:# libcec needs a toolchain w/ C++, wchar, threads, dynamic library
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBFREEFARE is not set
rootfs/config:# BR2_PACKAGE_LIBFTDI is not set
rootfs/config:# BR2_PACKAGE_LIBHID is not set
rootfs/config:# BR2_PACKAGE_LIBIQRF is not set
rootfs/config:# BR2_PACKAGE_LIBLLCP is not set
rootfs/config:#
rootfs/config:# libmbim needs udev /dev management and a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBNFC is not set
rootfs/config:#
rootfs/config:# libqmi needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBRAW1394 is not set
rootfs/config:#
rootfs/config:# libserial needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBSOC is not set
rootfs/config:# BR2_PACKAGE_LIBUSB is not set
rootfs/config:#
rootfs/config:# libv4l needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBXKBCOMMON is not set
rootfs/config:# BR2_PACKAGE_MTDEV is not set
rootfs/config:#
rootfs/config:# neardal needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_PCSC_LITE is not set
rootfs/config:# BR2_PACKAGE_TSLIB is not set
rootfs/config:#
rootfs/config:# urg needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# Javascript
rootfs/config:#
rootfs/config:# BR2_PACKAGE_EXPLORERCANVAS is not set
rootfs/config:# BR2_PACKAGE_FLOT is not set
rootfs/config:# BR2_PACKAGE_JQUERY is not set
rootfs/config:# BR2_PACKAGE_JQUERY_KEYBOARD is not set
rootfs/config:# BR2_PACKAGE_JQUERY_SPARKLINE is not set
rootfs/config:# BR2_PACKAGE_JQUERY_UI is not set
rootfs/config:# BR2_PACKAGE_JQUERY_VALIDATION is not set
rootfs/config:# BR2_PACKAGE_JSMIN is not set
rootfs/config:# BR2_PACKAGE_JSON_JAVASCRIPT is not set
rootfs/config:#
rootfs/config:# JSON/XML
rootfs/config:#
rootfs/config:# BR2_PACKAGE_CJSON is not set
rootfs/config:# BR2_PACKAGE_EXPAT is not set
rootfs/config:# BR2_PACKAGE_EZXML is not set
rootfs/config:# BR2_PACKAGE_JANSSON is not set
rootfs/config:# BR2_PACKAGE_JSON_C is not set
rootfs/config:#
rootfs/config:# json-glib needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# libjson needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBROXML is not set
rootfs/config:# BR2_PACKAGE_LIBXML2 is not set
rootfs/config:#
rootfs/config:# libxml++ needs a toolchain w/ C++, wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBXSLT is not set
rootfs/config:# BR2_PACKAGE_LIBYAML is not set
rootfs/config:# BR2_PACKAGE_MXML is not set
rootfs/config:# BR2_PACKAGE_RAPIDJSON is not set
rootfs/config:#
rootfs/config:# tinyxml needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# xerces-c++ needs a toolchain w/ C++, wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_YAJL is not set
rootfs/config:#
rootfs/config:# Multimedia
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBASS is not set
rootfs/config:# BR2_PACKAGE_LIBBLURAY is not set
rootfs/config:#
rootfs/config:# libdvbsi++ needs a toolchain w/ C++, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# libdvdnav needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# libdvdread needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# libebml needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# libmatroska needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# libmms needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBMPEG2 is not set
rootfs/config:# BR2_PACKAGE_LIBOGG is not set
rootfs/config:#
rootfs/config:# libplayer needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBTHEORA is not set
rootfs/config:#
rootfs/config:# live555 needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# mediastreamer needs a toolchain w/ threads, C++, IPv6
rootfs/config:#
rootfs/config:#
rootfs/config:# Networking
rootfs/config:#
rootfs/config:# BR2_PACKAGE_C_ARES is not set
rootfs/config:#
rootfs/config:# cppzmq needs a toolchain w/ C++, IPv6, largefile, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# czmq needs a toolchain w/ C++, IPv6, largefile, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# filemq needs a toolchain w/ C++, IPv6, largefile, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# glib-networking needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBCGI is not set
rootfs/config:#
rootfs/config:# libcgicc needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBCURL is not set
rootfs/config:# BR2_PACKAGE_LIBDNET is not set
rootfs/config:# BR2_PACKAGE_LIBESMTP is not set
rootfs/config:# BR2_PACKAGE_LIBEXOSIP2 is not set
rootfs/config:# BR2_PACKAGE_LIBFCGI is not set
rootfs/config:# BR2_PACKAGE_LIBGSASL is not set
rootfs/config:# BR2_PACKAGE_LIBIDN is not set
rootfs/config:# BR2_PACKAGE_LIBISCSI is not set
rootfs/config:# BR2_PACKAGE_LIBMBUS is not set
rootfs/config:# BR2_PACKAGE_LIBMICROHTTPD is not set
rootfs/config:#
rootfs/config:# libmnl needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBMODBUS is not set
rootfs/config:#
rootfs/config:# libnetfilter_acct needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# libnetfilter_conntrack needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# libnetfilter_cthelper needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# libnetfilter_cttimout needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBNETFILTER_LOG is not set
rootfs/config:#
rootfs/config:# libnetfilter_queue needs a toolchain w/ largefile, IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBNFNETLINK is not set
rootfs/config:#
rootfs/config:# libnftnl needs a toolchain w/ threads, IPv6, largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBNL is not set
rootfs/config:# BR2_PACKAGE_LIBOAUTH is not set
rootfs/config:#
rootfs/config:# liboping needs a toolchain w/ IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBOSIP2 is not set
rootfs/config:# BR2_PACKAGE_LIBPCAP is not set
rootfs/config:# BR2_PACKAGE_LIBRSYNC is not set
rootfs/config:# BR2_PACKAGE_LIBSOCKETCAN is not set
rootfs/config:#
rootfs/config:# libshairplay needs a toolchain w/ IPv6, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# libsoup needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBTIRPC is not set
rootfs/config:#
rootfs/config:# libtorrent needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# libupnp needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBVNCSERVER is not set
rootfs/config:# BR2_PACKAGE_LIBWEBSOCKETS is not set
rootfs/config:# BR2_PACKAGE_NEON is not set
rootfs/config:#
rootfs/config:# omniORB needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# openpgm needs a toolchain w/ wchar, threads, IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_ORTP is not set
rootfs/config:# BR2_PACKAGE_RTMPDUMP is not set
rootfs/config:# BR2_PACKAGE_SLIRP is not set
rootfs/config:#
rootfs/config:# snmp++ needs a toolchain w/ threads, C++
rootfs/config:#
rootfs/config:#
rootfs/config:# thrift needs a toolchain w/ C++, largefile, wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_USBREDIR is not set
rootfs/config:#
rootfs/config:# wvstreams needs a toolchain w/ C++, largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# zeromq needs a toolchain w/ C++, IPv6, largefile, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# zmqpp needs a toolchain w/ C++, IPv6, largefile, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# zyre needs a toolchain w/ C++, IPv6, largefile, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# Other
rootfs/config:#
rootfs/config:# BR2_PACKAGE_APR is not set
rootfs/config:# BR2_PACKAGE_APR_UTIL is not set
rootfs/config:# BR2_PACKAGE_ARGP_STANDALONE is not set
rootfs/config:#
rootfs/config:# boost needs a toolchain w/ C++, largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# cppcms needs an (e)glibc toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# eigen needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# elfutils needs a toolchain w/ largefile, wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_FFTW is not set
rootfs/config:#
rootfs/config:# glibmm needs a toolchain w/ C++, wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_GMP is not set
rootfs/config:# BR2_PACKAGE_GSL is not set
rootfs/config:#
rootfs/config:# gtest needs a toolchain w/ C++, wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBARGTABLE2 is not set
rootfs/config:# BR2_PACKAGE_LIBATOMIC_OPS is not set
rootfs/config:# BR2_PACKAGE_LIBCAP is not set
rootfs/config:# BR2_PACKAGE_LIBCAP_NG is not set
rootfs/config:#
rootfs/config:# libcgroup needs an (e)glibc toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBDAEMON is not set
rootfs/config:# BR2_PACKAGE_LIBELF is not set
rootfs/config:# BR2_PACKAGE_LIBEV is not set
rootfs/config:# BR2_PACKAGE_LIBEVDEV is not set
rootfs/config:# BR2_PACKAGE_LIBEVENT is not set
rootfs/config:# BR2_PACKAGE_LIBFFI is not set
rootfs/config:#
rootfs/config:# libglib2 needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# libical needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBLOG4C_LOCALTIME is not set
rootfs/config:BR2_PACKAGE_LIBNSPR_ARCH_SUPPORT=y
rootfs/config:#
rootfs/config:# libnspr needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBPFM4 is not set
rootfs/config:#
rootfs/config:# libplist needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBPTHSEM is not set
rootfs/config:#
rootfs/config:# libsigc++ needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBSIGSEGV is not set
rootfs/config:# BR2_PACKAGE_LIBTASN1 is not set
rootfs/config:# BR2_PACKAGE_LIBTPL is not set
rootfs/config:# BR2_PACKAGE_LIBUNWIND is not set
rootfs/config:# BR2_PACKAGE_LIBURCU is not set
rootfs/config:#
rootfs/config:# linux-pam needs a toolchain w/ wchar, locale
rootfs/config:#
rootfs/config:#
rootfs/config:# log4cplus needs a toolchain w/ C++, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# log4cxx needs a toolchain w/ C++, threads, dynamic library
rootfs/config:#
rootfs/config:#
rootfs/config:# lttng-libust needs a toolchain w/ wchar, largefile, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_MPC is not set
rootfs/config:# BR2_PACKAGE_MPFR is not set
rootfs/config:#
rootfs/config:# msgpack needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_MTDEV2TUIO is not set
rootfs/config:# BR2_PACKAGE_ORC is not set
rootfs/config:# BR2_PACKAGE_P11_KIT is not set
rootfs/config:#
rootfs/config:# poco needs a toolchain w/ wchar, threads, C++
rootfs/config:#
rootfs/config:#
rootfs/config:# protobuf needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# protobuf-c needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# schifra needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# tzdata needs an (e)glibc toolchain
rootfs/config:#
rootfs/config:#
rootfs/config:# Security
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBSEPOL is not set
rootfs/config:#
rootfs/config:# Text and terminal handling
rootfs/config:#
rootfs/config:#
rootfs/config:# enchant needs a toolchain w/ C++, threads, wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# icu needs a toolchain w/ C++, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# libedit needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIBENCA is not set
rootfs/config:# BR2_PACKAGE_LIBFRIBIDI is not set
rootfs/config:# BR2_PACKAGE_LIBICONV is not set
rootfs/config:# BR2_PACKAGE_LINENOISE is not set
rootfs/config:# BR2_PACKAGE_NCURSES is not set
rootfs/config:# BR2_PACKAGE_NEWT is not set
rootfs/config:# BR2_PACKAGE_PCRE is not set
rootfs/config:# BR2_PACKAGE_POPT is not set
rootfs/config:# BR2_PACKAGE_READLINE is not set
rootfs/config:# BR2_PACKAGE_SLANG is not set
rootfs/config:#
rootfs/config:# Miscellaneous
rootfs/config:#
rootfs/config:# BR2_PACKAGE_AESPIPE is not set
rootfs/config:# BR2_PACKAGE_BC is not set
rootfs/config:#
rootfs/config:# collectd needs a toolchain w/ IPv6, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_EMPTY is not set
rootfs/config:# BR2_PACKAGE_GOOGLEFONTDIRECTORY is not set
rootfs/config:# BR2_PACKAGE_HAVEGED is not set
rootfs/config:# BR2_PACKAGE_MCRYPT is not set
rootfs/config:# BR2_PACKAGE_MOBILE_BROADBAND_PROVIDER_INFO is not set
rootfs/config:#
rootfs/config:# shared-mime-info needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# snowball-init needs a toolchain w/ wchar, threads, dynamic library
rootfs/config:#
rootfs/config:# BR2_PACKAGE_SOUND_THEME_BOREALIS is not set
rootfs/config:# BR2_PACKAGE_SOUND_THEME_FREEDESKTOP is not set
rootfs/config:#
rootfs/config:# Networking applications
rootfs/config:#
rootfs/config:#
rootfs/config:# nginx needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# aiccu needs a toolchain w/ IPv6, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# aircrack-ng needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_ARGUS is not set
rootfs/config:# BR2_PACKAGE_ARPTABLES is not set
rootfs/config:# BR2_PACKAGE_AVAHI is not set
rootfs/config:# BR2_PACKAGE_AXEL is not set
rootfs/config:#
rootfs/config:# bcusdk needs a toolchain w/ C++
rootfs/config:#
rootfs/config:#
rootfs/config:# bind needs a toolchain w/ largefile, IPv6
rootfs/config:#
rootfs/config:#
rootfs/config:# bluez-utils needs a toolchain w/ wchar, threads, dynamic library
rootfs/config:#
rootfs/config:#
rootfs/config:# bmon needs a toolchain w/ IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_BOA is not set
rootfs/config:# BR2_PACKAGE_BRIDGE_UTILS is not set
rootfs/config:# BR2_PACKAGE_BWM_NG is not set
rootfs/config:# BR2_PACKAGE_CAN_UTILS is not set
rootfs/config:# BR2_PACKAGE_CHRONY is not set
rootfs/config:# BR2_PACKAGE_CIVETWEB is not set
rootfs/config:#
rootfs/config:# connman needs a toolchain w/ IPv6, wchar, threads, resolver
rootfs/config:#
rootfs/config:#
rootfs/config:# conntrack-tools needs a toolchain w/ IPv6, largefile, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_CRDA is not set
rootfs/config:#
rootfs/config:# ctorrent needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_CUPS is not set
rootfs/config:# BR2_PACKAGE_DHCPCD is not set
rootfs/config:# BR2_PACKAGE_DHCPDUMP is not set
rootfs/config:# BR2_PACKAGE_DNSMASQ is not set
rootfs/config:# BR2_PACKAGE_DROPBEAR is not set
rootfs/config:#
rootfs/config:# ebtables needs a toolchain w/ IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_ETHTOOL is not set
rootfs/config:# BR2_PACKAGE_FPING is not set
rootfs/config:#
rootfs/config:# gesftpserver needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_HEIRLOOM_MAILX is not set
rootfs/config:# BR2_PACKAGE_HIAWATHA is not set
rootfs/config:# BR2_PACKAGE_HOSTAPD is not set
rootfs/config:# BR2_PACKAGE_HTTPING is not set
rootfs/config:#
rootfs/config:# iftop needs a toolchain w/ IPv6, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# igh-ethercat needs a Linux kernel to be built
rootfs/config:#
rootfs/config:#
rootfs/config:# igmpproxy needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_INADYN is not set
rootfs/config:#
rootfs/config:# iperf needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_IPROUTE2 is not set
rootfs/config:# BR2_PACKAGE_IPSEC_TOOLS is not set
rootfs/config:#
rootfs/config:# ipset needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_IPTABLES is not set
rootfs/config:# BR2_PACKAGE_IPUTILS is not set
rootfs/config:# BR2_PACKAGE_IW is not set
rootfs/config:#
rootfs/config:# kismet needs a toolchain w/ threads, C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_KNOCK is not set
rootfs/config:#
rootfs/config:# lftp requires a toolchain w/ C++, wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LIGHTTPD is not set
rootfs/config:#
rootfs/config:# linknx needs a toolchain w/ C++
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LINKS is not set
rootfs/config:#
rootfs/config:# linphone needs a toolchain w/ threads, C++, IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LRZSZ is not set
rootfs/config:# BR2_PACKAGE_MACCHANGER is not set
rootfs/config:# BR2_PACKAGE_MII_DIAG is not set
rootfs/config:#
rootfs/config:# minidlna needs a toolchain w/ largefile, IPv6, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# modemmanager needs udev /dev management and a toolchain w/ largefile, wchar, threads, IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_MONGOOSE is not set
rootfs/config:# BR2_PACKAGE_MROUTED is not set
rootfs/config:# BR2_PACKAGE_MSMTP is not set
rootfs/config:# BR2_PACKAGE_MTR is not set
rootfs/config:#
rootfs/config:# mutt needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# nbd needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_NCFTP is not set
rootfs/config:#
rootfs/config:# ndisc6 needs a toolchain w/ IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_NETATALK is not set
rootfs/config:# BR2_PACKAGE_NETPLUG is not set
rootfs/config:# BR2_PACKAGE_NETSNMP is not set
rootfs/config:# BR2_PACKAGE_NETSTAT_NAT is not set
rootfs/config:#
rootfs/config:# NetworkManager needs udev /dev management and a toolchain w/ IPv6, largefile, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# nfacct needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_NGIRCD is not set
rootfs/config:# BR2_PACKAGE_NGREP is not set
rootfs/config:#
rootfs/config:# nmap needs a toolchain w/ C++, IPv6, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_NOIP is not set
rootfs/config:# BR2_PACKAGE_NTP is not set
rootfs/config:# BR2_PACKAGE_NUTTCP is not set
rootfs/config:#
rootfs/config:# olsr needs a toolchain w/ IPv6, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_OPENNTPD is not set
rootfs/config:#
rootfs/config:# openobex needs a toolchain w/ IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_OPENSSH is not set
rootfs/config:# BR2_PACKAGE_OPENSWAN is not set
rootfs/config:#
rootfs/config:# openvpn needs a toolchain w/ IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_P910ND is not set
rootfs/config:#
rootfs/config:# portmap needs a toolchain w/ RPC
rootfs/config:#
rootfs/config:# BR2_PACKAGE_PPPD is not set
rootfs/config:# BR2_PACKAGE_PPTP_LINUX is not set
rootfs/config:# BR2_PACKAGE_PROFTPD is not set
rootfs/config:# BR2_PACKAGE_PROXYCHAINS_NG is not set
rootfs/config:# BR2_PACKAGE_PTPD is not set
rootfs/config:# BR2_PACKAGE_PTPD2 is not set
rootfs/config:# BR2_PACKAGE_QUAGGA is not set
rootfs/config:#
rootfs/config:# radvd needs a toolchain w/ IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_RPCBIND is not set
rootfs/config:# BR2_PACKAGE_RSH_REDONE is not set
rootfs/config:# BR2_PACKAGE_RSYNC is not set
rootfs/config:#
rootfs/config:# rtorrent needs a toolchain w/ C++, threads, wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_RTPTOOLS is not set
rootfs/config:# BR2_PACKAGE_SAMBA is not set
rootfs/config:#
rootfs/config:# sconeserver needs a toolchain w/ C++, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# ser2net needs a toolchain w/ IPv6
rootfs/config:#
rootfs/config:#
rootfs/config:# smcroute needs a toolchain w/ IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_SOCAT is not set
rootfs/config:# BR2_PACKAGE_SOCKETCAND is not set
rootfs/config:# BR2_PACKAGE_SPAWN_FCGI is not set
rootfs/config:#
rootfs/config:# spice server needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_SPICE_PROTOCOL is not set
rootfs/config:#
rootfs/config:# squid needs a toolchain w/ C++, IPv6
rootfs/config:#
rootfs/config:# BR2_PACKAGE_STRONGSWAN is not set
rootfs/config:# BR2_PACKAGE_STUNNEL is not set
rootfs/config:# BR2_PACKAGE_TCPDUMP is not set
rootfs/config:# BR2_PACKAGE_TCPING is not set
rootfs/config:# BR2_PACKAGE_TCPREPLAY is not set
rootfs/config:# BR2_PACKAGE_THTTPD is not set
rootfs/config:# BR2_PACKAGE_TINYHTTPD is not set
rootfs/config:# BR2_PACKAGE_TN5250 is not set
rootfs/config:#
rootfs/config:# transmission needs a toolchain w/ IPv6, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# tvheadend needs a toolchain w/ largefile, IPv6, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# udpcast needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# ulogd needs a toolchain w/ IPv6, largefile, dynamic library
rootfs/config:#
rootfs/config:#
rootfs/config:# ushare needs a toolchain w/ largefile, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# ussp-push needs a toolchain w/ wchar, IPv6, threads, dynamic library
rootfs/config:#
rootfs/config:# BR2_PACKAGE_VDE2 is not set
rootfs/config:# BR2_PACKAGE_VPNC is not set
rootfs/config:# BR2_PACKAGE_VSFTPD is not set
rootfs/config:# BR2_PACKAGE_VTUN is not set
rootfs/config:# BR2_PACKAGE_WIRELESS_REGDB is not set
rootfs/config:# BR2_PACKAGE_WIRELESS_TOOLS is not set
rootfs/config:#
rootfs/config:# wireshark needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:# BR2_PACKAGE_WPA_SUPPLICANT is not set
rootfs/config:#
rootfs/config:# wvdial needs a toolchain w/ C++, largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_XINETD is not set
rootfs/config:# BR2_PACKAGE_XL2TP is not set
rootfs/config:#
rootfs/config:# Package managers
rootfs/config:#
rootfs/config:# BR2_PACKAGE_IPKG is not set
rootfs/config:# BR2_PACKAGE_OPKG is not set
rootfs/config:#
rootfs/config:# Real-Time
rootfs/config:#
rootfs/config:#
rootfs/config:# Shell and utilities
rootfs/config:#
rootfs/config:#
rootfs/config:# Shells
rootfs/config:#
rootfs/config:#
rootfs/config:# Utilities
rootfs/config:#
rootfs/config:# BR2_PACKAGE_AT is not set
rootfs/config:# BR2_PACKAGE_DIALOG is not set
rootfs/config:# BR2_PACKAGE_DTACH is not set
rootfs/config:# BR2_PACKAGE_FILE is not set
rootfs/config:# BR2_PACKAGE_GNUPG is not set
rootfs/config:#
rootfs/config:# inotify-tools needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LOCKFILE_PROGS is not set
rootfs/config:#
rootfs/config:# logrotate needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LOGSURFER is not set
rootfs/config:# BR2_PACKAGE_SCREEN is not set
rootfs/config:# BR2_PACKAGE_SUDO is not set
rootfs/config:# BR2_PACKAGE_TMUX is not set
rootfs/config:# BR2_PACKAGE_XMLSTARLET is not set
rootfs/config:#
rootfs/config:# System tools
rootfs/config:#
rootfs/config:#
rootfs/config:# acl needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:#
rootfs/config:# attr needs a toolchain w/ largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_CPULOAD is not set
rootfs/config:# BR2_PACKAGE_HTOP is not set
rootfs/config:# BR2_PACKAGE_KEYUTILS is not set
rootfs/config:# BR2_PACKAGE_KMOD is not set
rootfs/config:#
rootfs/config:# lxc needs a toolchain w/ IPv6, threads, largefile
rootfs/config:#
rootfs/config:# BR2_PACKAGE_MONIT is not set
rootfs/config:# BR2_PACKAGE_NCDU is not set
rootfs/config:# BR2_PACKAGE_NUT is not set
rootfs/config:#
rootfs/config:# polkit needs a toolchain w/ wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# quota needs a toolchain w/ largefile, wchar, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# supervisor needs the python interpreter
rootfs/config:#
rootfs/config:#
rootfs/config:# systemd needs udev /dev management and a toolchain w/ IPv6, threads
rootfs/config:#
rootfs/config:#
rootfs/config:# util-linux needs a toolchain w/ largefile, wchar
rootfs/config:#
rootfs/config:#
rootfs/config:# Text editors and viewers
rootfs/config:#
rootfs/config:# BR2_PACKAGE_ED is not set
rootfs/config:# BR2_PACKAGE_JOE is not set
rootfs/config:#
rootfs/config:# nano needs a toolchain w/ wchar
rootfs/config:#
rootfs/config:# BR2_PACKAGE_UEMACS is not set
rootfs/config:#
rootfs/config:# Filesystem images
rootfs/config:#
rootfs/config:# BR2_TARGET_ROOTFS_CLOOP is not set
rootfs/config:# BR2_TARGET_ROOTFS_CPIO is not set
rootfs/config:# BR2_TARGET_ROOTFS_CRAMFS is not set
rootfs/config:# BR2_TARGET_ROOTFS_EXT2 is not set
rootfs/config:#
rootfs/config:# initramfs needs a Linux kernel to be built
rootfs/config:#
rootfs/config:# BR2_TARGET_ROOTFS_JFFS2 is not set
rootfs/config:# BR2_TARGET_ROOTFS_ROMFS is not set
rootfs/config:# BR2_TARGET_ROOTFS_SQUASHFS is not set
rootfs/config:BR2_TARGET_ROOTFS_TAR=y
rootfs/config:BR2_TARGET_ROOTFS_TAR_NONE=y
rootfs/config:# BR2_TARGET_ROOTFS_TAR_GZIP is not set
rootfs/config:# BR2_TARGET_ROOTFS_TAR_BZIP2 is not set
rootfs/config:# BR2_TARGET_ROOTFS_TAR_LZMA is not set
rootfs/config:# BR2_TARGET_ROOTFS_TAR_LZO is not set
rootfs/config:# BR2_TARGET_ROOTFS_TAR_XZ is not set
rootfs/config:BR2_TARGET_ROOTFS_TAR_OPTIONS=""
rootfs/config:# BR2_TARGET_ROOTFS_UBIFS is not set
rootfs/config:#
rootfs/config:# Bootloaders
rootfs/config:#
rootfs/config:# BR2_TARGET_BAREBOX is not set
rootfs/config:# BR2_TARGET_UBOOT is not set
rootfs/config:# BR2_TARGET_XLOADER is not set
rootfs/config:#
rootfs/config:# Host utilities
rootfs/config:#
rootfs/config:# BR2_PACKAGE_HOST_DFU_UTIL is not set
rootfs/config:# BR2_PACKAGE_HOST_DOSFSTOOLS is not set
rootfs/config:# BR2_PACKAGE_HOST_E2FSPROGS is not set
rootfs/config:# BR2_PACKAGE_HOST_GENEXT2FS is not set
rootfs/config:# BR2_PACKAGE_HOST_GENIMAGE is not set
rootfs/config:# BR2_PACKAGE_HOST_GENPART is not set
rootfs/config:# BR2_PACKAGE_HOST_LPC3250LOADER is not set
rootfs/config:# BR2_PACKAGE_HOST_MTD is not set
rootfs/config:# BR2_PACKAGE_HOST_MTOOLS is not set
rootfs/config:# BR2_PACKAGE_HOST_OMAP_U_BOOT_UTILS is not set
rootfs/config:# BR2_PACKAGE_HOST_OPENOCD is not set
rootfs/config:# BR2_PACKAGE_HOST_PARTED is not set
rootfs/config:# BR2_PACKAGE_HOST_SQUASHFS is not set
rootfs/config:# BR2_PACKAGE_HOST_UBOOT_TOOLS is not set
rootfs/config:# BR2_PACKAGE_HOST_UTIL_LINUX is not set
rootfs/config:#
rootfs/config:# Legacy config options
rootfs/config:#
rootfs/config:#
rootfs/config:# Legacy options removed in 2014.02
rootfs/config:#
rootfs/config:# BR2_sh2 is not set
rootfs/config:# BR2_sh3 is not set
rootfs/config:# BR2_sh3eb is not set
rootfs/config:# BR2_KERNEL_HEADERS_3_1 is not set
rootfs/config:# BR2_KERNEL_HEADERS_3_3 is not set
rootfs/config:# BR2_KERNEL_HEADERS_3_5 is not set
rootfs/config:# BR2_GDB_VERSION_7_2 is not set
rootfs/config:# BR2_GDB_VERSION_7_3 is not set
rootfs/config:# BR2_PACKAGE_CCACHE is not set
rootfs/config:# BR2_HAVE_DOCUMENTATION is not set
rootfs/config:# BR2_PACKAGE_AUTOMAKE is not set
rootfs/config:# BR2_PACKAGE_AUTOCONF is not set
rootfs/config:# BR2_PACKAGE_XSTROKE is not set
rootfs/config:# BR2_PACKAGE_LZMA is not set
rootfs/config:# BR2_PACKAGE_TTCP is not set
rootfs/config:# BR2_PACKAGE_LIBNFC_LLCP is not set
rootfs/config:# BR2_PACKAGE_MYSQL_CLIENT is not set
rootfs/config:# BR2_PACKAGE_SQUASHFS3 is not set
rootfs/config:# BR2_TARGET_ROOTFS_SQUASHFS3 is not set
rootfs/config:# BR2_PACKAGE_NETKITBASE is not set
rootfs/config:# BR2_PACKAGE_NETKITTELNET is not set
rootfs/config:# BR2_PACKAGE_LUASQL is not set
rootfs/config:# BR2_PACKAGE_LUACJSON is not set
rootfs/config:#
rootfs/config:# Legacy options removed in 2013.11
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LVM2_DMSETUP_ONLY is not set
rootfs/config:# BR2_PACKAGE_QT_JAVASCRIPTCORE is not set
rootfs/config:# BR2_PACKAGE_MODULE_INIT_TOOLS is not set
rootfs/config:BR2_TARGET_UBOOT_CUSTOM_GIT_REPO_URL=""
rootfs/config:BR2_TARGET_UBOOT_CUSTOM_GIT_VERSION=""
rootfs/config:BR2_LINUX_KERNEL_CUSTOM_GIT_REPO_URL=""
rootfs/config:BR2_LINUX_KERNEL_CUSTOM_GIT_VERSION=""
rootfs/config:#
rootfs/config:# Legacy options removed in 2013.08
rootfs/config:#
rootfs/config:# BR2_ARM_OABI is not set
rootfs/config:# BR2_PACKAGE_DOSFSTOOLS_DOSFSCK is not set
rootfs/config:# BR2_PACKAGE_DOSFSTOOLS_DOSFSLABEL is not set
rootfs/config:# BR2_PACKAGE_DOSFSTOOLS_MKDOSFS is not set
rootfs/config:# BR2_ELF2FLT is not set
rootfs/config:# BR2_VFP_FLOAT is not set
rootfs/config:# BR2_PACKAGE_GCC_TARGET is not set
rootfs/config:# BR2_HAVE_DEVFILES is not set
rootfs/config:#
rootfs/config:# Legacy options removed in 2013.05
rootfs/config:#
rootfs/config:# BR2_PACKAGE_LINUX_FIRMWARE_RTL_8192 is not set
rootfs/config:# BR2_PACKAGE_LINUX_FIRMWARE_RTL_8712 is not set
rootfs/config:#
rootfs/config:# Legacy options removed in 2013.02
rootfs/config:#
rootfs/config:# BR2_sa110 is not set
rootfs/config:# BR2_sa1100 is not set
rootfs/config:# BR2_PACKAGE_GDISK is not set
rootfs/config:# BR2_PACKAGE_GDISK_GDISK is not set
rootfs/config:# BR2_PACKAGE_GDISK_SGDISK is not set
rootfs/config:# BR2_PACKAGE_GDB_HOST is not set
rootfs/config:# BR2_PACKAGE_DIRECTB_DITHER_RGB16 is not set
rootfs/config:# BR2_PACKAGE_DIRECTB_TESTS is not set
rootfs/config:#
rootfs/config:# Legacy options removed in 2012.11
rootfs/config:#
rootfs/config:# BR2_PACKAGE_CUSTOMIZE is not set
rootfs/config:# BR2_PACKAGE_XSERVER_xorg is not set
rootfs/config:# BR2_PACKAGE_XSERVER_tinyx is not set
rootfs/config:#
rootfs/config:# Legacy options removed in 2012.08
rootfs/config:#
rootfs/config:# BR2_PACKAGE_GETTEXT_STATIC is not set
rootfs/config:# BR2_PACKAGE_LIBINTL is not set
rootfs/config:# BR2_PACKAGE_INPUT_TOOLS_EVTEST is not set
rootfs/config:# BR2_BFIN_FDPIC is not set
rootfs/config:# BR2_BFIN_FLAT is not set
Dockerfile:FROM busybox
Dockerfile:#ADD https://github.com/armbuild/qemu-user-static/raw/master/x86_64/qemu-arm-static /usr/local/bin/
Dockerfile:COPY qemu-arm-static /usr/local/bin/
Dockerfile:CMD set -xe; mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc && test -f /proc/sys/fs/binfmt_misc/arm && echo "binfmt already registered" >&2 || echo ':arm:M::\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff:/usr/local/bin/qemu-arm-static:' > /proc/sys/fs/binfmt_misc/register; cat /usr/local/bin/qemu-arm-static
Dockerfile:FROM ubuntu:trusty
Dockerfile:MAINTAINER Manfred Touron "m@42.am"
Dockerfile:ENV DEBIAN_FRONTEND noninteractive
Dockerfile:RUN apt-get -qq -y update && \
Dockerfile:    apt-get -qq -y install icecast2 python-setuptools && \
Dockerfile:    apt-get clean
Dockerfile:RUN easy_install supervisor && \
Dockerfile:    easy_install supervisor-stdout
Dockerfile:CMD ["/start.sh"]
Dockerfile:EXPOSE 8000
Dockerfile:VOLUME ["/config", "/var/log/icecast2", "/etc/icecast2"]
Dockerfile:ADD ./start.sh /start.sh
Dockerfile:ADD ./etc /etc
Dockerfile:RUN chown -R icecast2 /etc/icecast2
etc/icecast2/admin/listclients.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/admin/listclients.xsl:<xsl:output omit-xml-declaration="no" method="html" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/admin/listclients.xsl:<xsl:template match = "/icestats" >
etc/icecast2/admin/listclients.xsl:<html>
etc/icecast2/admin/listclients.xsl:<head>
etc/icecast2/admin/listclients.xsl:<title>Icecast Streaming Media Server</title>
etc/icecast2/admin/listclients.xsl:<link rel="stylesheet" type="text/css" href="/style.css" />
etc/icecast2/admin/listclients.xsl:</head>
etc/icecast2/admin/listclients.xsl:<body topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">
etc/icecast2/admin/listclients.xsl:<h2>Icecast2 Admin</h2>
etc/icecast2/admin/listclients.xsl:<br />
etc/icecast2/admin/listclients.xsl:
etc/icecast2/admin/listclients.xsl:<div class="roundcont">
etc/icecast2/admin/listclients.xsl:<div class="roundtop">
etc/icecast2/admin/listclients.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/listclients.xsl:</div>
etc/icecast2/admin/listclients.xsl:	<table border="0" cellpadding="1" cellspacing="3">
etc/icecast2/admin/listclients.xsl:	<tr>        
etc/icecast2/admin/listclients.xsl:	    <td align="center">
etc/icecast2/admin/listclients.xsl:	        <a class="nav" href="stats.xsl">Admin Home</a>
etc/icecast2/admin/listclients.xsl:		    <a class="nav" href="listmounts.xsl">List Mountpoints</a>
etc/icecast2/admin/listclients.xsl:        	<a class="nav" href="moveclients.xsl">Move Listeners</a>
etc/icecast2/admin/listclients.xsl:        	<a class="nav" href="/status.xsl">Index</a>
etc/icecast2/admin/listclients.xsl:	    </td></tr>
etc/icecast2/admin/listclients.xsl:	</table>
etc/icecast2/admin/listclients.xsl:<div class="roundbottom">
etc/icecast2/admin/listclients.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/listclients.xsl:</div>
etc/icecast2/admin/listclients.xsl:</div>
etc/icecast2/admin/listclients.xsl:<br />
etc/icecast2/admin/listclients.xsl:<br />
etc/icecast2/admin/listclients.xsl:
etc/icecast2/admin/listclients.xsl:
etc/icecast2/admin/listclients.xsl:
etc/icecast2/admin/listclients.xsl:<h1>Listener Stats</h1>
etc/icecast2/admin/listclients.xsl:<div class="roundcont">
etc/icecast2/admin/listclients.xsl:<div class="roundtop">
etc/icecast2/admin/listclients.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/listclients.xsl:</div>
etc/icecast2/admin/listclients.xsl:<div class="newscontent">
etc/icecast2/admin/listclients.xsl:<xsl:for-each select="source">
etc/icecast2/admin/listclients.xsl:<div class="streamheader">
etc/icecast2/admin/listclients.xsl:    <table cellspacing="0" cellpadding="0" >
etc/icecast2/admin/listclients.xsl:        <colgroup align="left" />
etc/icecast2/admin/listclients.xsl:        <colgroup align="right" width="300" />
etc/icecast2/admin/listclients.xsl:        <tr>
etc/icecast2/admin/listclients.xsl:            <td><h3>Mount Point <xsl:value-of select="@mount" /></h3></td>
etc/icecast2/admin/listclients.xsl:            <xsl:choose>
etc/icecast2/admin/listclients.xsl:                <xsl:when test="authenticator">
etc/icecast2/admin/listclients.xsl:                    <td align="right"><a class="auth" href="/auth.xsl">Login</a></td>
etc/icecast2/admin/listclients.xsl:                </xsl:when>
etc/icecast2/admin/listclients.xsl:                <xsl:otherwise>
etc/icecast2/admin/listclients.xsl:                    <td align="right">
etc/icecast2/admin/listclients.xsl:                        <a href="{@mount}.m3u">M3U</a>
etc/icecast2/admin/listclients.xsl:                        <a href="{@mount}.xspf">XSPF</a></td>
etc/icecast2/admin/listclients.xsl:                </xsl:otherwise>
etc/icecast2/admin/listclients.xsl:            </xsl:choose>
etc/icecast2/admin/listclients.xsl:    </tr></table>
etc/icecast2/admin/listclients.xsl:</div>
etc/icecast2/admin/listclients.xsl:
etc/icecast2/admin/listclients.xsl:<table border="0" cellpadding="1" cellspacing="5" bgcolor="444444">
etc/icecast2/admin/listclients.xsl:	<tr>        
etc/icecast2/admin/listclients.xsl:	    <td align="center">
etc/icecast2/admin/listclients.xsl:			<a class="nav2" href="listclients.xsl?mount={@mount}">List Clients</a>
etc/icecast2/admin/listclients.xsl:        	<a class="nav2" href="moveclients.xsl?mount={@mount}">Move Listeners</a>
etc/icecast2/admin/listclients.xsl:			<a class="nav2" href="updatemetadata.xsl?mount={@mount}">Update Metadata</a>
etc/icecast2/admin/listclients.xsl:        	<a class="nav2" href="killsource.xsl?mount={@mount}">Kill Source</a>
etc/icecast2/admin/listclients.xsl:	    </td></tr>
etc/icecast2/admin/listclients.xsl:	</table>
etc/icecast2/admin/listclients.xsl:<br />
etc/icecast2/admin/listclients.xsl:<table cellspacing="0" cellpadding="5" border="1" bordercolor="#C0C0C0" >
etc/icecast2/admin/listclients.xsl:		<tr>
etc/icecast2/admin/listclients.xsl:				<td ><center><b>IP</b></center></td>
etc/icecast2/admin/listclients.xsl:				<td ><center><b>Seconds Connected</b></center></td>
etc/icecast2/admin/listclients.xsl:				<td ><center><b>User Agent</b></center></td>
etc/icecast2/admin/listclients.xsl:				<td ><center><b>Action</b></center></td>
etc/icecast2/admin/listclients.xsl:		</tr>
etc/icecast2/admin/listclients.xsl:<xsl:variable name = "themount" ><xsl:value-of select="@mount" /></xsl:variable>
etc/icecast2/admin/listclients.xsl:<xsl:for-each select="listener">
etc/icecast2/admin/listclients.xsl:		<tr>
etc/icecast2/admin/listclients.xsl:				<td align="center"><xsl:value-of select="IP" /><xsl:if test="username"> (<xsl:value-of select="username" />)</xsl:if></td>
etc/icecast2/admin/listclients.xsl:				<td align="center"><xsl:value-of select="Connected" /></td>
etc/icecast2/admin/listclients.xsl:				<td align="center"><xsl:value-of select="UserAgent" /></td>
etc/icecast2/admin/listclients.xsl:				<td align="center"><a href="killclient.xsl?mount={$themount}&amp;id={ID}">Kick</a></td>
etc/icecast2/admin/listclients.xsl:		</tr>
etc/icecast2/admin/listclients.xsl:</xsl:for-each>
etc/icecast2/admin/listclients.xsl:</table>
etc/icecast2/admin/listclients.xsl:<br />
etc/icecast2/admin/listclients.xsl:<br />
etc/icecast2/admin/listclients.xsl:</xsl:for-each>
etc/icecast2/admin/listclients.xsl:<xsl:text disable-output-escaping="yes">&amp;</xsl:text>nbsp;
etc/icecast2/admin/listclients.xsl:</div>
etc/icecast2/admin/listclients.xsl:<div class="roundbottom">
etc/icecast2/admin/listclients.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/listclients.xsl:</div>
etc/icecast2/admin/listclients.xsl:</div>
etc/icecast2/admin/listclients.xsl:<div class="poster">Support icecast development at <a class="nav" href="http://www.icecast.org">www.icecast.org</a></div>
etc/icecast2/admin/listclients.xsl:</body>
etc/icecast2/admin/listclients.xsl:</html>
etc/icecast2/admin/listclients.xsl:</xsl:template>
etc/icecast2/admin/listclients.xsl:</xsl:stylesheet>
etc/icecast2/admin/listmounts.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/admin/listmounts.xsl:<xsl:output omit-xml-declaration="no" method="html" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/admin/listmounts.xsl:<xsl:template match = "/icestats" >
etc/icecast2/admin/listmounts.xsl:<html>
etc/icecast2/admin/listmounts.xsl:<head>
etc/icecast2/admin/listmounts.xsl:<title>Icecast Streaming Media Server</title>
etc/icecast2/admin/listmounts.xsl:<link rel="stylesheet" type="text/css" href="/style.css" />
etc/icecast2/admin/listmounts.xsl:</head>
etc/icecast2/admin/listmounts.xsl:<body topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">
etc/icecast2/admin/listmounts.xsl:<h2>Icecast2 Admin</h2>
etc/icecast2/admin/listmounts.xsl:<br />
etc/icecast2/admin/listmounts.xsl:
etc/icecast2/admin/listmounts.xsl:<div class="roundcont">
etc/icecast2/admin/listmounts.xsl:<div class="roundtop">
etc/icecast2/admin/listmounts.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/listmounts.xsl:</div>
etc/icecast2/admin/listmounts.xsl:	<table border="0" cellpadding="1" cellspacing="3">
etc/icecast2/admin/listmounts.xsl:	<tr>        
etc/icecast2/admin/listmounts.xsl:	    <td align="center">
etc/icecast2/admin/listmounts.xsl:	        <a class="nav" href="stats.xsl">Admin Home</a>
etc/icecast2/admin/listmounts.xsl:		    <a class="nav" href="listmounts.xsl">List Mountpoints</a>
etc/icecast2/admin/listmounts.xsl:        	<a class="nav" href="moveclients.xsl">Move Listeners</a>
etc/icecast2/admin/listmounts.xsl:        	<a class="nav" href="/status.xsl">Index</a>
etc/icecast2/admin/listmounts.xsl:	    </td></tr>
etc/icecast2/admin/listmounts.xsl:	</table>
etc/icecast2/admin/listmounts.xsl:<div class="roundbottom">
etc/icecast2/admin/listmounts.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/listmounts.xsl:</div>
etc/icecast2/admin/listmounts.xsl:</div>
etc/icecast2/admin/listmounts.xsl:<br />
etc/icecast2/admin/listmounts.xsl:<br />
etc/icecast2/admin/listmounts.xsl:
etc/icecast2/admin/listmounts.xsl:
etc/icecast2/admin/listmounts.xsl:<h1>Active Mountpoints</h1>
etc/icecast2/admin/listmounts.xsl:<div class="roundcont">
etc/icecast2/admin/listmounts.xsl:<div class="roundtop">
etc/icecast2/admin/listmounts.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/listmounts.xsl:</div>
etc/icecast2/admin/listmounts.xsl:<div class="newscontent">
etc/icecast2/admin/listmounts.xsl:<xsl:for-each select="source">
etc/icecast2/admin/listmounts.xsl:<div class="streamheader">
etc/icecast2/admin/listmounts.xsl:    <table cellspacing="0" cellpadding="0" >
etc/icecast2/admin/listmounts.xsl:        <colgroup align="left" />
etc/icecast2/admin/listmounts.xsl:        <colgroup align="right" width="300" />
etc/icecast2/admin/listmounts.xsl:        <tr>
etc/icecast2/admin/listmounts.xsl:            <td><h3>Mount Point <xsl:value-of select="@mount" /></h3></td>
etc/icecast2/admin/listmounts.xsl:            <xsl:choose>
etc/icecast2/admin/listmounts.xsl:                <xsl:when test="authenticator">
etc/icecast2/admin/listmounts.xsl:                    <td align="right"><a class="auth" href="/auth.xsl">Login</a></td>
etc/icecast2/admin/listmounts.xsl:                </xsl:when>
etc/icecast2/admin/listmounts.xsl:                <xsl:otherwise>
etc/icecast2/admin/listmounts.xsl:                    <td align="right">
etc/icecast2/admin/listmounts.xsl:                        <a href="{@mount}.m3u">M3U</a>
etc/icecast2/admin/listmounts.xsl:                        <a href="{@mount}.xspf">XSPF</a></td>
etc/icecast2/admin/listmounts.xsl:                </xsl:otherwise>
etc/icecast2/admin/listmounts.xsl:            </xsl:choose>
etc/icecast2/admin/listmounts.xsl:    </tr></table>
etc/icecast2/admin/listmounts.xsl:</div>
etc/icecast2/admin/listmounts.xsl:
etc/icecast2/admin/listmounts.xsl:<table border="0" cellpadding="1" cellspacing="5" bgcolor="444444">
etc/icecast2/admin/listmounts.xsl:	<tr>        
etc/icecast2/admin/listmounts.xsl:	    <td align="center">
etc/icecast2/admin/listmounts.xsl:			<a class="nav2" href="listclients.xsl?mount={@mount}">List Clients</a>
etc/icecast2/admin/listmounts.xsl:        	<a class="nav2" href="moveclients.xsl?mount={@mount}">Move Listeners</a>
etc/icecast2/admin/listmounts.xsl:			<a class="nav2" href="updatemetadata.xsl?mount={@mount}">Update Metadata</a>
etc/icecast2/admin/listmounts.xsl:        	<a class="nav2" href="killsource.xsl?mount={@mount}">Kill Source</a>
etc/icecast2/admin/listmounts.xsl:                <xsl:if test="authenticator"><a class="nav2" href="manageauth.xsl?mount={@mount}">Manage Authentication</a></xsl:if>
etc/icecast2/admin/listmounts.xsl:	    </td></tr>
etc/icecast2/admin/listmounts.xsl:	</table>
etc/icecast2/admin/listmounts.xsl:<br />
etc/icecast2/admin/listmounts.xsl:<p><xsl:value-of select="listeners" /> Listener(s)</p>
etc/icecast2/admin/listmounts.xsl:<br></br>
etc/icecast2/admin/listmounts.xsl:</xsl:for-each>
etc/icecast2/admin/listmounts.xsl:<xsl:text disable-output-escaping="yes">&amp;</xsl:text>nbsp;
etc/icecast2/admin/listmounts.xsl:</div>
etc/icecast2/admin/listmounts.xsl:<div class="roundbottom">
etc/icecast2/admin/listmounts.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/listmounts.xsl:</div>
etc/icecast2/admin/listmounts.xsl:</div>
etc/icecast2/admin/listmounts.xsl:<div class="poster">Support icecast development at <a class="nav" href="http://www.icecast.org">www.icecast.org</a></div>
etc/icecast2/admin/listmounts.xsl:</body>
etc/icecast2/admin/listmounts.xsl:</html>
etc/icecast2/admin/listmounts.xsl:</xsl:template>
etc/icecast2/admin/listmounts.xsl:</xsl:stylesheet>
etc/icecast2/admin/manageauth.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/admin/manageauth.xsl:<xsl:output omit-xml-declaration="no" method="html" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/admin/manageauth.xsl:<xsl:template match = "/icestats" >
etc/icecast2/admin/manageauth.xsl:<html>
etc/icecast2/admin/manageauth.xsl:<head>
etc/icecast2/admin/manageauth.xsl:<title>Icecast Streaming Media Server</title>
etc/icecast2/admin/manageauth.xsl:<link rel="stylesheet" type="text/css" href="/style.css" />
etc/icecast2/admin/manageauth.xsl:</head>
etc/icecast2/admin/manageauth.xsl:<body topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">
etc/icecast2/admin/manageauth.xsl:<h2>Icecast2 Admin</h2>
etc/icecast2/admin/manageauth.xsl:<br />
etc/icecast2/admin/manageauth.xsl:
etc/icecast2/admin/manageauth.xsl:<div class="roundcont">
etc/icecast2/admin/manageauth.xsl:<div class="roundtop">
etc/icecast2/admin/manageauth.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/manageauth.xsl:</div>
etc/icecast2/admin/manageauth.xsl:	<table border="0" cellpadding="1" cellspacing="3">
etc/icecast2/admin/manageauth.xsl:	<tr>        
etc/icecast2/admin/manageauth.xsl:	    <td align="center">
etc/icecast2/admin/manageauth.xsl:	        <a class="nav" href="stats.xsl">Admin Home</a>
etc/icecast2/admin/manageauth.xsl:		    <a class="nav" href="listmounts.xsl">List Mountpoints</a>
etc/icecast2/admin/manageauth.xsl:        	<a class="nav" href="moveclients.xsl">Move Listeners</a>
etc/icecast2/admin/manageauth.xsl:        	<a class="nav" href="/status.xsl">Index</a>
etc/icecast2/admin/manageauth.xsl:	    </td></tr>
etc/icecast2/admin/manageauth.xsl:	</table>
etc/icecast2/admin/manageauth.xsl:<div class="roundbottom">
etc/icecast2/admin/manageauth.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/manageauth.xsl:</div>
etc/icecast2/admin/manageauth.xsl:</div>
etc/icecast2/admin/manageauth.xsl:<br />
etc/icecast2/admin/manageauth.xsl:<br />
etc/icecast2/admin/manageauth.xsl:
etc/icecast2/admin/manageauth.xsl:<div class="roundcont">
etc/icecast2/admin/manageauth.xsl:<div class="roundtop">
etc/icecast2/admin/manageauth.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/manageauth.xsl:</div>
etc/icecast2/admin/manageauth.xsl:<div class="newscontent">
etc/icecast2/admin/manageauth.xsl:<xsl:for-each select="iceresponse">
etc/icecast2/admin/manageauth.xsl:<xsl:value-of select="message" /> 
etc/icecast2/admin/manageauth.xsl:</xsl:for-each>
etc/icecast2/admin/manageauth.xsl:<xsl:for-each select="source">
etc/icecast2/admin/manageauth.xsl:<h3>
etc/icecast2/admin/manageauth.xsl:<xsl:if test="server_name"><xsl:value-of select="server_name" /> </xsl:if>
etc/icecast2/admin/manageauth.xsl:(<xsl:value-of select="@mount" />)</h3>
etc/icecast2/admin/manageauth.xsl:	<table border="0" cellpadding="1" cellspacing="5" bgcolor="444444">
etc/icecast2/admin/manageauth.xsl:	<tr>        
etc/icecast2/admin/manageauth.xsl:	    <td align="center">
etc/icecast2/admin/manageauth.xsl:			<a class="nav2" href="listclients.xsl?mount={@mount}">List Clients</a>
etc/icecast2/admin/manageauth.xsl:        	<a class="nav2" href="moveclients.xsl?mount={@mount}">Move Listeners</a>
etc/icecast2/admin/manageauth.xsl:			<a class="nav2" href="updatemetadata.xsl?mount={@mount}">Update Metadata</a>
etc/icecast2/admin/manageauth.xsl:        	<a class="nav2" href="killsource.xsl?mount={@mount}">Kill Source</a>
etc/icecast2/admin/manageauth.xsl:	    </td></tr>
etc/icecast2/admin/manageauth.xsl:	</table>
etc/icecast2/admin/manageauth.xsl:<br></br>
etc/icecast2/admin/manageauth.xsl:<form method="GET" action="manageauth.xsl">
etc/icecast2/admin/manageauth.xsl:<table cellpadding="2" cellspacing="4" border="0" >
etc/icecast2/admin/manageauth.xsl:		<tr>
etc/icecast2/admin/manageauth.xsl:				<td ><b>User Id</b></td>
etc/icecast2/admin/manageauth.xsl:				<td ></td>
etc/icecast2/admin/manageauth.xsl:		</tr>
etc/icecast2/admin/manageauth.xsl:<xsl:variable name = "themount" ><xsl:value-of select="@mount" /></xsl:variable>
etc/icecast2/admin/manageauth.xsl:<xsl:for-each select="User">
etc/icecast2/admin/manageauth.xsl:		<tr>
etc/icecast2/admin/manageauth.xsl:				<td><xsl:value-of select="username" /></td>
etc/icecast2/admin/manageauth.xsl:				<td><a class="nav2" href="manageauth.xsl?mount={$themount}&amp;username={username}&amp;action=delete">delete</a></td>
etc/icecast2/admin/manageauth.xsl:		</tr>
etc/icecast2/admin/manageauth.xsl:</xsl:for-each>
etc/icecast2/admin/manageauth.xsl:</table>
etc/icecast2/admin/manageauth.xsl:<table cellpadding="2" cellspacing="4" border="0" >
etc/icecast2/admin/manageauth.xsl:		<tr>
etc/icecast2/admin/manageauth.xsl:				<td ><b>User Id</b></td>
etc/icecast2/admin/manageauth.xsl:				<td ><b>Password</b></td>
etc/icecast2/admin/manageauth.xsl:		</tr>
etc/icecast2/admin/manageauth.xsl:		<tr>
etc/icecast2/admin/manageauth.xsl:				<td ><input type="text" name="username" /></td>
etc/icecast2/admin/manageauth.xsl:				<td ><input type="text" name="password" /></td>
etc/icecast2/admin/manageauth.xsl:		</tr>
etc/icecast2/admin/manageauth.xsl:		<tr>
etc/icecast2/admin/manageauth.xsl:				<td colspan="2"><input type="Submit" name="Submit" value="Add New User" /></td>
etc/icecast2/admin/manageauth.xsl:		</tr>
etc/icecast2/admin/manageauth.xsl:</table>
etc/icecast2/admin/manageauth.xsl:<input type="hidden" name="mount" value="{@mount}"/>
etc/icecast2/admin/manageauth.xsl:<input type="hidden" name="action" value="add"/>
etc/icecast2/admin/manageauth.xsl:</form>
etc/icecast2/admin/manageauth.xsl:<br />
etc/icecast2/admin/manageauth.xsl:<br />
etc/icecast2/admin/manageauth.xsl:</xsl:for-each>
etc/icecast2/admin/manageauth.xsl:<xsl:text disable-output-escaping="yes">&amp;</xsl:text>nbsp;
etc/icecast2/admin/manageauth.xsl:</div>
etc/icecast2/admin/manageauth.xsl:<div class="roundbottom">
etc/icecast2/admin/manageauth.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/manageauth.xsl:</div>
etc/icecast2/admin/manageauth.xsl:</div>
etc/icecast2/admin/manageauth.xsl:<div class="poster">Support icecast development at <a class="nav" href="http://www.icecast.org">www.icecast.org</a></div>
etc/icecast2/admin/manageauth.xsl:</body>
etc/icecast2/admin/manageauth.xsl:</html>
etc/icecast2/admin/manageauth.xsl:</xsl:template>
etc/icecast2/admin/manageauth.xsl:</xsl:stylesheet>
etc/icecast2/admin/moveclients.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/admin/moveclients.xsl:<xsl:output omit-xml-declaration="no" method="html" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/admin/moveclients.xsl:<xsl:template match = "/icestats" >
etc/icecast2/admin/moveclients.xsl:<html>
etc/icecast2/admin/moveclients.xsl:<head>
etc/icecast2/admin/moveclients.xsl:<title>Icecast Streaming Media Server</title>
etc/icecast2/admin/moveclients.xsl:<link rel="stylesheet" type="text/css" href="/style.css" />
etc/icecast2/admin/moveclients.xsl:</head>
etc/icecast2/admin/moveclients.xsl:<body topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">
etc/icecast2/admin/moveclients.xsl:<h2>Icecast2 Admin</h2>
etc/icecast2/admin/moveclients.xsl:<br />
etc/icecast2/admin/moveclients.xsl:
etc/icecast2/admin/moveclients.xsl:<div class="roundcont">
etc/icecast2/admin/moveclients.xsl:<div class="roundtop">
etc/icecast2/admin/moveclients.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/moveclients.xsl:</div>
etc/icecast2/admin/moveclients.xsl:	<table border="0" cellpadding="1" cellspacing="3">
etc/icecast2/admin/moveclients.xsl:	<tr>        
etc/icecast2/admin/moveclients.xsl:	    <td align="center">
etc/icecast2/admin/moveclients.xsl:	        <a class="nav" href="stats.xsl">Admin Home</a>
etc/icecast2/admin/moveclients.xsl:		    <a class="nav" href="listmounts.xsl">List Mountpoints</a>
etc/icecast2/admin/moveclients.xsl:        	<a class="nav" href="moveclients.xsl">Move Listeners</a>
etc/icecast2/admin/moveclients.xsl:        	<a class="nav" href="/status.xsl">Index</a>
etc/icecast2/admin/moveclients.xsl:	    </td></tr>
etc/icecast2/admin/moveclients.xsl:	</table>
etc/icecast2/admin/moveclients.xsl:<div class="roundbottom">
etc/icecast2/admin/moveclients.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/moveclients.xsl:</div>
etc/icecast2/admin/moveclients.xsl:</div>
etc/icecast2/admin/moveclients.xsl:<br />
etc/icecast2/admin/moveclients.xsl:<br />
etc/icecast2/admin/moveclients.xsl:
etc/icecast2/admin/moveclients.xsl:<xsl:variable name = "currentmount" ><xsl:value-of select="current_source" /></xsl:variable>
etc/icecast2/admin/moveclients.xsl:<h1>Moving Listeners From (<xsl:value-of select="current_source" />)</h1>
etc/icecast2/admin/moveclients.xsl:<div class="roundcont">
etc/icecast2/admin/moveclients.xsl:<div class="roundtop">
etc/icecast2/admin/moveclients.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/moveclients.xsl:</div>
etc/icecast2/admin/moveclients.xsl:<div class="newscontent">
etc/icecast2/admin/moveclients.xsl:<h3>Move to which mountpoint ?</h3>
etc/icecast2/admin/moveclients.xsl:<xsl:for-each select="source">
etc/icecast2/admin/moveclients.xsl:	<table border="0" cellpadding="1" cellspacing="5" >
etc/icecast2/admin/moveclients.xsl:	<tr>        
etc/icecast2/admin/moveclients.xsl:		<td>Move from (<xsl:copy-of select="$currentmount" />) to (<xsl:value-of select="@mount" />)</td>
etc/icecast2/admin/moveclients.xsl:		<td><xsl:value-of select="listeners" /> Listeners</td>
etc/icecast2/admin/moveclients.xsl:		<td><a class="nav2" href="moveclients.xsl?mount={$currentmount}&amp;destination={@mount}">Move Clients</a></td>
etc/icecast2/admin/moveclients.xsl:	</tr>        
etc/icecast2/admin/moveclients.xsl:	</table>
etc/icecast2/admin/moveclients.xsl:<br />
etc/icecast2/admin/moveclients.xsl:<br />
etc/icecast2/admin/moveclients.xsl:</xsl:for-each>
etc/icecast2/admin/moveclients.xsl:<xsl:text disable-output-escaping="yes">&amp;</xsl:text>nbsp;
etc/icecast2/admin/moveclients.xsl:</div>
etc/icecast2/admin/moveclients.xsl:<div class="roundbottom">
etc/icecast2/admin/moveclients.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/moveclients.xsl:</div>
etc/icecast2/admin/moveclients.xsl:</div>
etc/icecast2/admin/moveclients.xsl:<div class="poster">Support icecast development at <a class="nav" href="http://www.icecast.org">www.icecast.org</a></div>
etc/icecast2/admin/moveclients.xsl:</body>
etc/icecast2/admin/moveclients.xsl:</html>
etc/icecast2/admin/moveclients.xsl:
etc/icecast2/admin/moveclients.xsl:</xsl:template>
etc/icecast2/admin/moveclients.xsl:</xsl:stylesheet>
etc/icecast2/admin/response.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/admin/response.xsl:<xsl:output omit-xml-declaration="no" method="html" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/admin/response.xsl:<xsl:template match = "/iceresponse" >
etc/icecast2/admin/response.xsl:<html>
etc/icecast2/admin/response.xsl:<head>
etc/icecast2/admin/response.xsl:<title>Icecast Streaming Media Server</title>
etc/icecast2/admin/response.xsl:<link rel="stylesheet" type="text/css" href="/style.css" />
etc/icecast2/admin/response.xsl:</head>
etc/icecast2/admin/response.xsl:<body topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">
etc/icecast2/admin/response.xsl:<img align="left" src="/icecast.png" /><h2><center>Icecast2 Admin</center></h2>
etc/icecast2/admin/response.xsl:<br />
etc/icecast2/admin/response.xsl:
etc/icecast2/admin/response.xsl:<div class="roundcont">
etc/icecast2/admin/response.xsl:<div class="roundtop">
etc/icecast2/admin/response.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/response.xsl:</div>
etc/icecast2/admin/response.xsl:	<table border="0" cellpadding="1" cellspacing="3">
etc/icecast2/admin/response.xsl:	<tr>        
etc/icecast2/admin/response.xsl:	    <td align="center">
etc/icecast2/admin/response.xsl:	        <a class="nav" href="stats.xsl">Admin Home</a> |
etc/icecast2/admin/response.xsl:		    <a class="nav" href="listmounts.xsl">List Mountpoints</a> | 
etc/icecast2/admin/response.xsl:        	<a class="nav" href="moveclients.xsl">Move Listeners</a> | 
etc/icecast2/admin/response.xsl:        	<a class="nav" href="/status.xsl">Index</a>
etc/icecast2/admin/response.xsl:	    </td></tr>
etc/icecast2/admin/response.xsl:	</table>
etc/icecast2/admin/response.xsl:<div class="roundbottom">
etc/icecast2/admin/response.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/response.xsl:</div>
etc/icecast2/admin/response.xsl:</div>
etc/icecast2/admin/response.xsl:<br />
etc/icecast2/admin/response.xsl:<br />
etc/icecast2/admin/response.xsl:
etc/icecast2/admin/response.xsl:<h1>Icecast Server Response</h1>
etc/icecast2/admin/response.xsl:<div class="roundcont">
etc/icecast2/admin/response.xsl:<div class="roundtop">
etc/icecast2/admin/response.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/response.xsl:</div>
etc/icecast2/admin/response.xsl:<div class="newscontent">
etc/icecast2/admin/response.xsl:<h3>Response</h3>
etc/icecast2/admin/response.xsl:<xsl:for-each select="/iceresponse">
etc/icecast2/admin/response.xsl:Message : <xsl:value-of select="message" /><br></br>
etc/icecast2/admin/response.xsl:Return Code: <xsl:value-of select="return" /><br></br>
etc/icecast2/admin/response.xsl:</xsl:for-each>
etc/icecast2/admin/response.xsl:<br />
etc/icecast2/admin/response.xsl:<br />
etc/icecast2/admin/response.xsl:</div>
etc/icecast2/admin/response.xsl:<div class="roundbottom">
etc/icecast2/admin/response.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/response.xsl:</div>
etc/icecast2/admin/response.xsl:</div>
etc/icecast2/admin/response.xsl:<div class="poster">Support icecast development at <a class="nav" href="http://www.icecast.org">www.icecast.org</a></div>
etc/icecast2/admin/response.xsl:</body>
etc/icecast2/admin/response.xsl:</html>
etc/icecast2/admin/response.xsl:
etc/icecast2/admin/response.xsl:</xsl:template>
etc/icecast2/admin/response.xsl:</xsl:stylesheet>
etc/icecast2/admin/stats.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/admin/stats.xsl:<xsl:output omit-xml-declaration="no" method="html" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/admin/stats.xsl:<xsl:template match = "/icestats" >
etc/icecast2/admin/stats.xsl:<html>
etc/icecast2/admin/stats.xsl:<head>
etc/icecast2/admin/stats.xsl:<title>Icecast Streaming Media Server</title>
etc/icecast2/admin/stats.xsl:<link rel="stylesheet" type="text/css" href="/style.css" />
etc/icecast2/admin/stats.xsl:</head>
etc/icecast2/admin/stats.xsl:<body topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">
etc/icecast2/admin/stats.xsl:<h2>Icecast2 Admin</h2>
etc/icecast2/admin/stats.xsl:<br />
etc/icecast2/admin/stats.xsl:<!--header menu -->
etc/icecast2/admin/stats.xsl:<div class="roundcont">
etc/icecast2/admin/stats.xsl:<div class="roundtop">
etc/icecast2/admin/stats.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:	<table border="0" cellpadding="1" cellspacing="3">
etc/icecast2/admin/stats.xsl:	<tr>        
etc/icecast2/admin/stats.xsl:	    <td align="center">
etc/icecast2/admin/stats.xsl:	        <a class="nav" href="stats.xsl">Admin Home</a>
etc/icecast2/admin/stats.xsl:		    <a class="nav" href="listmounts.xsl">List Mountpoints</a>
etc/icecast2/admin/stats.xsl:        	<a class="nav" href="moveclients.xsl">Move Listeners</a>
etc/icecast2/admin/stats.xsl:        	<a class="nav" href="/status.xsl">Index</a>
etc/icecast2/admin/stats.xsl:	    </td></tr>
etc/icecast2/admin/stats.xsl:	</table>
etc/icecast2/admin/stats.xsl:<div class="roundbottom">
etc/icecast2/admin/stats.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:<br />
etc/icecast2/admin/stats.xsl:<br />
etc/icecast2/admin/stats.xsl:<!--end header menu -->
etc/icecast2/admin/stats.xsl:
etc/icecast2/admin/stats.xsl:<!--global server stats-->
etc/icecast2/admin/stats.xsl:<div class="roundcont">
etc/icecast2/admin/stats.xsl:<div class="roundtop">
etc/icecast2/admin/stats.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:<div class="newscontent">
etc/icecast2/admin/stats.xsl:<h3>Global Server Stats</h3>
etc/icecast2/admin/stats.xsl:<table border="0" cellpadding="4">
etc/icecast2/admin/stats.xsl:<xsl:for-each select="/icestats">
etc/icecast2/admin/stats.xsl:<xsl:for-each select="*">
etc/icecast2/admin/stats.xsl:<xsl:if test = "name()!='source'"> 
etc/icecast2/admin/stats.xsl:<tr>
etc/icecast2/admin/stats.xsl:	<td width="130"><xsl:value-of select="name()" /></td>
etc/icecast2/admin/stats.xsl:	<td class="streamdata"><xsl:value-of select="." /></td>
etc/icecast2/admin/stats.xsl:</tr>
etc/icecast2/admin/stats.xsl:</xsl:if>
etc/icecast2/admin/stats.xsl:</xsl:for-each>
etc/icecast2/admin/stats.xsl:</xsl:for-each>
etc/icecast2/admin/stats.xsl:</table>
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:<div class="roundbottom">
etc/icecast2/admin/stats.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:<br />
etc/icecast2/admin/stats.xsl:<br />
etc/icecast2/admin/stats.xsl:<!--end global server stats-->
etc/icecast2/admin/stats.xsl:
etc/icecast2/admin/stats.xsl:<!--mount point stats-->
etc/icecast2/admin/stats.xsl:<xsl:for-each select="source">
etc/icecast2/admin/stats.xsl:<xsl:if test = "listeners!=''"> 
etc/icecast2/admin/stats.xsl:<div class="roundcont">
etc/icecast2/admin/stats.xsl:<div class="roundtop">
etc/icecast2/admin/stats.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:<div class="newscontent">
etc/icecast2/admin/stats.xsl:    <div class="streamheader">
etc/icecast2/admin/stats.xsl:        <table cellspacing="0" cellpadding="0" >
etc/icecast2/admin/stats.xsl:            <colgroup align="left" />
etc/icecast2/admin/stats.xsl:            <colgroup align="right" width="300" />
etc/icecast2/admin/stats.xsl:            <tr>
etc/icecast2/admin/stats.xsl:                <td><h3>Mount Point <xsl:value-of select="@mount" /></h3></td>
etc/icecast2/admin/stats.xsl:                <xsl:choose>
etc/icecast2/admin/stats.xsl:                    <xsl:when test="authenticator">
etc/icecast2/admin/stats.xsl:                        <td align="right"><a class="auth" href="/auth.xsl">Login</a></td>
etc/icecast2/admin/stats.xsl:                    </xsl:when>
etc/icecast2/admin/stats.xsl:                    <xsl:otherwise>
etc/icecast2/admin/stats.xsl:                        <td align="right">
etc/icecast2/admin/stats.xsl:                            <a href="{@mount}.m3u">M3U</a>
etc/icecast2/admin/stats.xsl:                            <a href="{@mount}.xspf">XSPF</a></td>
etc/icecast2/admin/stats.xsl:                    </xsl:otherwise>
etc/icecast2/admin/stats.xsl:                </xsl:choose>
etc/icecast2/admin/stats.xsl:        </tr></table>
etc/icecast2/admin/stats.xsl:    </div>
etc/icecast2/admin/stats.xsl:	<table border="0" cellpadding="1" cellspacing="5" bgcolor="444444">
etc/icecast2/admin/stats.xsl:	<tr>        
etc/icecast2/admin/stats.xsl:	    <td align="center">
etc/icecast2/admin/stats.xsl:		    <a class="nav2" href="listclients.xsl?mount={@mount}">List Clients</a>
etc/icecast2/admin/stats.xsl:        	<a class="nav2" href="moveclients.xsl?mount={@mount}">Move MountPoints</a>
etc/icecast2/admin/stats.xsl:        	<a class="nav2" href="updatemetadata.xsl?mount={@mount}">Update Metadata</a>
etc/icecast2/admin/stats.xsl:        	<a class="nav2" href="killsource.xsl?mount={@mount}">Kill Source</a>
etc/icecast2/admin/stats.xsl:                <xsl:if test="authenticator"><a class="nav2" href="manageauth.xsl?mount={@mount}">Manage Authentication</a></xsl:if>
etc/icecast2/admin/stats.xsl:	    </td></tr>
etc/icecast2/admin/stats.xsl:	</table>
etc/icecast2/admin/stats.xsl:<br />
etc/icecast2/admin/stats.xsl:<table cellpadding="5" cellspacing="0" border="0">
etc/icecast2/admin/stats.xsl:	<xsl:for-each select="*">
etc/icecast2/admin/stats.xsl:	<tr>
etc/icecast2/admin/stats.xsl:		<td width="130"><xsl:value-of select="name()" /></td>
etc/icecast2/admin/stats.xsl:		<td class="streamdata"><xsl:value-of select="." /></td>
etc/icecast2/admin/stats.xsl:	</tr>
etc/icecast2/admin/stats.xsl:	</xsl:for-each>
etc/icecast2/admin/stats.xsl:</table>
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:<div class="roundbottom">
etc/icecast2/admin/stats.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:</div>
etc/icecast2/admin/stats.xsl:<br />
etc/icecast2/admin/stats.xsl:<br />
etc/icecast2/admin/stats.xsl:</xsl:if>
etc/icecast2/admin/stats.xsl:</xsl:for-each>
etc/icecast2/admin/stats.xsl:<xsl:text disable-output-escaping="yes">&amp;</xsl:text>nbsp;
etc/icecast2/admin/stats.xsl:
etc/icecast2/admin/stats.xsl:
etc/icecast2/admin/stats.xsl:<!--end mount point stats-->
etc/icecast2/admin/stats.xsl:<div class="poster">Support icecast development at <a class="nav" href="http://www.icecast.org">www.icecast.org</a></div>
etc/icecast2/admin/stats.xsl:</body>
etc/icecast2/admin/stats.xsl:</html>
etc/icecast2/admin/stats.xsl:</xsl:template>
etc/icecast2/admin/stats.xsl:</xsl:stylesheet>
etc/icecast2/admin/updatemetadata.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/admin/updatemetadata.xsl:<xsl:output omit-xml-declaration="no" method="html" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/admin/updatemetadata.xsl:<xsl:template match = "/icestats" >
etc/icecast2/admin/updatemetadata.xsl:<html>
etc/icecast2/admin/updatemetadata.xsl:<head>
etc/icecast2/admin/updatemetadata.xsl:<title>Icecast Streaming Media Server</title>
etc/icecast2/admin/updatemetadata.xsl:<link rel="stylesheet" type="text/css" href="/style.css" />
etc/icecast2/admin/updatemetadata.xsl:</head>
etc/icecast2/admin/updatemetadata.xsl:<body topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">
etc/icecast2/admin/updatemetadata.xsl:<h2>Icecast2 Admin</h2>
etc/icecast2/admin/updatemetadata.xsl:<br />
etc/icecast2/admin/updatemetadata.xsl:
etc/icecast2/admin/updatemetadata.xsl:<div class="roundcont">
etc/icecast2/admin/updatemetadata.xsl:<div class="roundtop">
etc/icecast2/admin/updatemetadata.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/updatemetadata.xsl:</div>
etc/icecast2/admin/updatemetadata.xsl:	<table border="0" cellpadding="1" cellspacing="3">
etc/icecast2/admin/updatemetadata.xsl:	<tr>        
etc/icecast2/admin/updatemetadata.xsl:	    <td align="center">
etc/icecast2/admin/updatemetadata.xsl:	        <a class="nav" href="stats.xsl">Admin Home</a>
etc/icecast2/admin/updatemetadata.xsl:		    <a class="nav" href="listmounts.xsl">List Mountpoints</a>
etc/icecast2/admin/updatemetadata.xsl:        	<a class="nav" href="moveclients.xsl">Move Listeners</a>
etc/icecast2/admin/updatemetadata.xsl:        	<a class="nav" href="/status.xsl">Index</a>
etc/icecast2/admin/updatemetadata.xsl:	    </td></tr>
etc/icecast2/admin/updatemetadata.xsl:	</table>
etc/icecast2/admin/updatemetadata.xsl:<div class="roundbottom">
etc/icecast2/admin/updatemetadata.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/updatemetadata.xsl:</div>
etc/icecast2/admin/updatemetadata.xsl:</div>
etc/icecast2/admin/updatemetadata.xsl:<br />
etc/icecast2/admin/updatemetadata.xsl:<br />
etc/icecast2/admin/updatemetadata.xsl:
etc/icecast2/admin/updatemetadata.xsl:<h1>Update Metadata</h1>
etc/icecast2/admin/updatemetadata.xsl:<div class="roundcont">
etc/icecast2/admin/updatemetadata.xsl:<div class="roundtop">
etc/icecast2/admin/updatemetadata.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/updatemetadata.xsl:</div>
etc/icecast2/admin/updatemetadata.xsl:<div class="newscontent">
etc/icecast2/admin/updatemetadata.xsl:<xsl:for-each select="source">
etc/icecast2/admin/updatemetadata.xsl:<h3>
etc/icecast2/admin/updatemetadata.xsl:<xsl:if test="server_name"><xsl:value-of select="server_name" /> </xsl:if>
etc/icecast2/admin/updatemetadata.xsl:(<xsl:value-of select="@mount" />)</h3>
etc/icecast2/admin/updatemetadata.xsl:
etc/icecast2/admin/updatemetadata.xsl:<form method="GET" action="/admin/metadata.xsl">
etc/icecast2/admin/updatemetadata.xsl:<table border="0" cellpadding="4">
etc/icecast2/admin/updatemetadata.xsl:<tr><td>Metadata : <input type="text" name="song"/></td></tr>
etc/icecast2/admin/updatemetadata.xsl:<tr><td><input type="Submit" value="Update"/></td></tr>
etc/icecast2/admin/updatemetadata.xsl:</table>
etc/icecast2/admin/updatemetadata.xsl:<input type="hidden" name="mount" value="{@mount}"/>
etc/icecast2/admin/updatemetadata.xsl:<input type="hidden" name="mode" value="updinfo"/>
etc/icecast2/admin/updatemetadata.xsl:<input type="hidden" name="charset" value="UTF-8"/>
etc/icecast2/admin/updatemetadata.xsl:</form>
etc/icecast2/admin/updatemetadata.xsl:
etc/icecast2/admin/updatemetadata.xsl:<br />
etc/icecast2/admin/updatemetadata.xsl:<br />
etc/icecast2/admin/updatemetadata.xsl:</xsl:for-each>
etc/icecast2/admin/updatemetadata.xsl:<xsl:text disable-output-escaping="yes">&amp;</xsl:text>nbsp;
etc/icecast2/admin/updatemetadata.xsl:</div>
etc/icecast2/admin/updatemetadata.xsl:<div class="roundbottom">
etc/icecast2/admin/updatemetadata.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/admin/updatemetadata.xsl:</div>
etc/icecast2/admin/updatemetadata.xsl:</div>
etc/icecast2/admin/updatemetadata.xsl:<div class="poster">Support icecast development at <a class="nav" href="http://www.icecast.org">www.icecast.org</a></div>
etc/icecast2/admin/updatemetadata.xsl:</body>
etc/icecast2/admin/updatemetadata.xsl:</html>
etc/icecast2/admin/updatemetadata.xsl:</xsl:template>
etc/icecast2/admin/updatemetadata.xsl:</xsl:stylesheet>
etc/icecast2/admin/xspf.xsl:<!--
etc/icecast2/admin/xspf.xsl:    XSPF xslt stylesheet for Icecast 2.3.2 and above
etc/icecast2/admin/xspf.xsl:    Copyright (C) 2007 Thomas B. Ruecker, tbr@ruecker-itk.de
etc/icecast2/admin/xspf.xsl:    This program is free software; you can redistribute it and/or
etc/icecast2/admin/xspf.xsl:    modify it under the terms of the GNU General Public License
etc/icecast2/admin/xspf.xsl:    as published by the Free Software Foundation; either version 2
etc/icecast2/admin/xspf.xsl:    of the License, or (at your option) any later version.
etc/icecast2/admin/xspf.xsl:    This program is distributed in the hope that it will be useful,
etc/icecast2/admin/xspf.xsl:    but WITHOUT ANY WARRANTY; without even the implied warranty of
etc/icecast2/admin/xspf.xsl:    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
etc/icecast2/admin/xspf.xsl:    GNU General Public License for more details.
etc/icecast2/admin/xspf.xsl:    You should have received a copy of the GNU General Public License
etc/icecast2/admin/xspf.xsl:    along with this program; if not, write to the
etc/icecast2/admin/xspf.xsl:    Free Software Foundation, Inc.,
etc/icecast2/admin/xspf.xsl:    51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
etc/icecast2/admin/xspf.xsl:-->
etc/icecast2/admin/xspf.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/admin/xspf.xsl:<xsl:output omit-xml-declaration="no" media-type="application/xspf+xml"
etc/icecast2/admin/xspf.xsl:        method="xml" indent="yes" encoding="UTF-8" />
etc/icecast2/admin/xspf.xsl:<xsl:template match = "/icestats" >
etc/icecast2/admin/xspf.xsl:<playlist version="1" xmlns="http://xspf.org/ns/0/">
etc/icecast2/admin/xspf.xsl:	<title><xsl:value-of select="server" /></title>
etc/icecast2/admin/xspf.xsl:	<creator><xsl:value-of select="server" /></creator>
etc/icecast2/admin/xspf.xsl:	<trackList >
etc/icecast2/admin/xspf.xsl:<!-- end of "header" -->
etc/icecast2/admin/xspf.xsl:<xsl:for-each select="source">
etc/icecast2/admin/xspf.xsl:<track>
etc/icecast2/admin/xspf.xsl:    <location><xsl:value-of select="listenurl" /></location>
etc/icecast2/admin/xspf.xsl:<xsl:if test="artist"><creator><xsl:value-of select="artist" /></creator></xsl:if>
etc/icecast2/admin/xspf.xsl:<title><xsl:value-of select="title" /></title>
etc/icecast2/admin/xspf.xsl:<!-- The <xsl:text>\n</xsl:text> elements in the following part are used 
etc/icecast2/admin/xspf.xsl:to enforce linebreaks this format seems to be expected by clients -->
etc/icecast2/admin/xspf.xsl:<annotation>
etc/icecast2/admin/xspf.xsl:<xsl:if test="server_name">Stream Title: <xsl:value-of select="server_name" /><xsl:text>
etc/icecast2/admin/xspf.xsl:</xsl:text></xsl:if>
etc/icecast2/admin/xspf.xsl:<xsl:if test="server_description">Stream Description: <xsl:value-of select="server_description" /></xsl:if>
etc/icecast2/admin/xspf.xsl:Content Type:<xsl:value-of select="server_type" /><xsl:text>
etc/icecast2/admin/xspf.xsl:</xsl:text>
etc/icecast2/admin/xspf.xsl:<xsl:if test="bitrate">Bitrate: <xsl:value-of select="bitrate" /><xsl:text>
etc/icecast2/admin/xspf.xsl:</xsl:text></xsl:if>
etc/icecast2/admin/xspf.xsl:<xsl:if test="quality">Quality: <xsl:value-of select="quality" /><xsl:text>
etc/icecast2/admin/xspf.xsl:</xsl:text></xsl:if>
etc/icecast2/admin/xspf.xsl:<xsl:if test="video_quality">Video Quality: <xsl:value-of select="video_quality" /><xsl:text>
etc/icecast2/admin/xspf.xsl:</xsl:text></xsl:if>
etc/icecast2/admin/xspf.xsl:<xsl:if test="frame_size">Framesize: <xsl:value-of select="frame_size" /><xsl:text>
etc/icecast2/admin/xspf.xsl:</xsl:text></xsl:if>
etc/icecast2/admin/xspf.xsl:<xsl:if test="frame_rate">Framerate: <xsl:value-of select="frame_rate" /><xsl:text>
etc/icecast2/admin/xspf.xsl:</xsl:text></xsl:if>
etc/icecast2/admin/xspf.xsl:<xsl:if test="listeners">Current Listeners: <xsl:value-of select="listeners" /><xsl:text>
etc/icecast2/admin/xspf.xsl:</xsl:text></xsl:if>
etc/icecast2/admin/xspf.xsl:<xsl:if test="listener_peak">Peak Listeners: <xsl:value-of select="listener_peak" /><xsl:text>
etc/icecast2/admin/xspf.xsl:</xsl:text></xsl:if>
etc/icecast2/admin/xspf.xsl:<xsl:if test="genre">Stream Genre: <xsl:value-of select="genre" /></xsl:if>
etc/icecast2/admin/xspf.xsl:</annotation>
etc/icecast2/admin/xspf.xsl:<xsl:if test="server_url"><info><xsl:value-of select="server_url" /></info></xsl:if>
etc/icecast2/admin/xspf.xsl:</track>
etc/icecast2/admin/xspf.xsl:</xsl:for-each>
etc/icecast2/admin/xspf.xsl:</trackList>
etc/icecast2/admin/xspf.xsl:</playlist>
etc/icecast2/admin/xspf.xsl:</xsl:template>
etc/icecast2/admin/xspf.xsl:</xsl:stylesheet>
etc/icecast2/icecast.xml:<icecast>
etc/icecast2/icecast.xml:    <limits>
etc/icecast2/icecast.xml:        <clients>1000</clients>
etc/icecast2/icecast.xml:        <sources>42</sources>
etc/icecast2/icecast.xml:        <threadpool>5</threadpool>
etc/icecast2/icecast.xml:        <queue-size>524288</queue-size>
etc/icecast2/icecast.xml:        <client-timeout>30</client-timeout>
etc/icecast2/icecast.xml:        <header-timeout>15</header-timeout>
etc/icecast2/icecast.xml:        <source-timeout>10</source-timeout>
etc/icecast2/icecast.xml:        <!-- If enabled, this will provide a burst of data when a client 
etc/icecast2/icecast.xml:             first connects, thereby significantly reducing the startup 
etc/icecast2/icecast.xml:             time for listeners that do substantial buffering. However,
etc/icecast2/icecast.xml:             it also significantly increases latency between the source
etc/icecast2/icecast.xml:             client and listening client.  For low-latency setups, you
etc/icecast2/icecast.xml:             might want to disable this. -->
etc/icecast2/icecast.xml:        <burst-on-connect>1</burst-on-connect>
etc/icecast2/icecast.xml:        <!-- same as burst-on-connect, but this allows for being more
etc/icecast2/icecast.xml:             specific on how much to burst. Most people won't need to
etc/icecast2/icecast.xml:             change from the default 64k. Applies to all mountpoints  -->
etc/icecast2/icecast.xml:        <burst-size>65535</burst-size>
etc/icecast2/icecast.xml:    </limits>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <authentication>
etc/icecast2/icecast.xml:        <!-- Sources log in with username 'source' -->
etc/icecast2/icecast.xml:        <source-password>hackme</source-password>
etc/icecast2/icecast.xml:        <!-- Relays log in username 'relay' -->
etc/icecast2/icecast.xml:        <relay-password>hackme</relay-password>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:        <!-- Admin logs in with the username given below -->
etc/icecast2/icecast.xml:        <admin-user>admin</admin-user>
etc/icecast2/icecast.xml:        <admin-password>hackme</admin-password>
etc/icecast2/icecast.xml:    </authentication>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <!-- set the mountpoint for a shoutcast source to use, the default if not
etc/icecast2/icecast.xml:         specified is /stream but you can change it here if an alternative is
etc/icecast2/icecast.xml:         wanted or an extension is required
etc/icecast2/icecast.xml:    <shoutcast-mount>/live.nsv</shoutcast-mount>
etc/icecast2/icecast.xml:    -->
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <!-- Uncomment this if you want directory listings -->
etc/icecast2/icecast.xml:    <!--
etc/icecast2/icecast.xml:    <directory>
etc/icecast2/icecast.xml:        <yp-url-timeout>15</yp-url-timeout>
etc/icecast2/icecast.xml:        <yp-url>http://dir.xiph.org/cgi-bin/yp-cgi</yp-url>
etc/icecast2/icecast.xml:    </directory>
etc/icecast2/icecast.xml:     -->
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <!-- This is the hostname other people will use to connect to your server.
etc/icecast2/icecast.xml:    It affects mainly the urls generated by Icecast for playlists and yp
etc/icecast2/icecast.xml:    listings. -->
etc/icecast2/icecast.xml:    <hostname>localhost</hostname>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <!-- You may have multiple <listener> elements -->
etc/icecast2/icecast.xml:    <listen-socket>
etc/icecast2/icecast.xml:        <port>8000</port>
etc/icecast2/icecast.xml:        <!-- <bind-address>127.0.0.1</bind-address> -->
etc/icecast2/icecast.xml:        <!-- <shoutcast-mount>/stream</shoutcast-mount> -->
etc/icecast2/icecast.xml:    </listen-socket>
etc/icecast2/icecast.xml:    <!--
etc/icecast2/icecast.xml:    <listen-socket>
etc/icecast2/icecast.xml:        <port>8001</port>
etc/icecast2/icecast.xml:    </listen-socket>
etc/icecast2/icecast.xml:    -->
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <!--<master-server>127.0.0.1</master-server>-->
etc/icecast2/icecast.xml:    <!--<master-server-port>8001</master-server-port>-->
etc/icecast2/icecast.xml:    <!--<master-update-interval>120</master-update-interval>-->
etc/icecast2/icecast.xml:    <!--<master-password>hackme</master-password>-->
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <!-- setting this makes all relays on-demand unless overridden, this is
etc/icecast2/icecast.xml:         useful for master relays which do not have <relay> definitions here.
etc/icecast2/icecast.xml:         The default is 0 -->
etc/icecast2/icecast.xml:    <!--<relays-on-demand>1</relays-on-demand>-->
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <!--
etc/icecast2/icecast.xml:    <relay>
etc/icecast2/icecast.xml:        <server>127.0.0.1</server>
etc/icecast2/icecast.xml:        <port>8001</port>
etc/icecast2/icecast.xml:        <mount>/example.ogg</mount>
etc/icecast2/icecast.xml:        <local-mount>/different.ogg</local-mount>
etc/icecast2/icecast.xml:        <on-demand>0</on-demand>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:        <relay-shoutcast-metadata>0</relay-shoutcast-metadata>
etc/icecast2/icecast.xml:    </relay>
etc/icecast2/icecast.xml:    -->
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <!-- Only define a <mount> section if you want to use advanced options,
etc/icecast2/icecast.xml:         like alternative usernames or passwords
etc/icecast2/icecast.xml:    <mount>
etc/icecast2/icecast.xml:        <mount-name>/example-complex.ogg</mount-name>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:        <username>othersource</username>
etc/icecast2/icecast.xml:        <password>hackmemore</password>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:        <max-listeners>1</max-listeners>
etc/icecast2/icecast.xml:        <dump-file>/tmp/dump-example1.ogg</dump-file>
etc/icecast2/icecast.xml:        <burst-size>65536</burst-size>
etc/icecast2/icecast.xml:        <fallback-mount>/example2.ogg</fallback-mount>
etc/icecast2/icecast.xml:        <fallback-override>1</fallback-override>
etc/icecast2/icecast.xml:        <fallback-when-full>1</fallback-when-full>
etc/icecast2/icecast.xml:        <intro>/example_intro.ogg</intro>
etc/icecast2/icecast.xml:        <hidden>1</hidden>
etc/icecast2/icecast.xml:        <no-yp>1</no-yp>
etc/icecast2/icecast.xml:        <authentication type="htpasswd">
etc/icecast2/icecast.xml:                <option name="filename" value="myauth"/>
etc/icecast2/icecast.xml:                <option name="allow_duplicate_users" value="0"/>
etc/icecast2/icecast.xml:        </authentication>
etc/icecast2/icecast.xml:        <on-connect>/home/icecast/bin/stream-start</on-connect>
etc/icecast2/icecast.xml:        <on-disconnect>/home/icecast/bin/stream-stop</on-disconnect>
etc/icecast2/icecast.xml:    </mount>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <mount>
etc/icecast2/icecast.xml:        <mount-name>/auth_example.ogg</mount-name>
etc/icecast2/icecast.xml:        <authentication type="url">
etc/icecast2/icecast.xml:            <option name="mount_add"       value="http://myauthserver.net/notify_mount.php"/>
etc/icecast2/icecast.xml:            <option name="mount_remove"    value="http://myauthserver.net/notify_mount.php"/>
etc/icecast2/icecast.xml:            <option name="listener_add"    value="http://myauthserver.net/notify_listener.php"/>
etc/icecast2/icecast.xml:            <option name="listener_remove" value="http://myauthserver.net/notify_listener.php"/>
etc/icecast2/icecast.xml:        </authentication>
etc/icecast2/icecast.xml:    </mount>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    -->
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <fileserve>1</fileserve>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <paths>
etc/icecast2/icecast.xml:		<!-- basedir is only used if chroot is enabled -->
etc/icecast2/icecast.xml:        <basedir>/usr/share/icecast2</basedir>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:        <!-- Note that if <chroot> is turned on below, these paths must both
etc/icecast2/icecast.xml:             be relative to the new root, not the original root -->
etc/icecast2/icecast.xml:        <logdir>/var/log/icecast2</logdir>
etc/icecast2/icecast.xml:        <webroot>/usr/share/icecast2/web</webroot>
etc/icecast2/icecast.xml:        <adminroot>/usr/share/icecast2/admin</adminroot>
etc/icecast2/icecast.xml:        <!-- <pidfile>/usr/share/icecast2/icecast.pid</pidfile> -->
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:        <!-- Aliases: treat requests for 'source' path as being for 'dest' path
etc/icecast2/icecast.xml:             May be made specific to a port or bound address using the "port"
etc/icecast2/icecast.xml:             and "bind-address" attributes.
etc/icecast2/icecast.xml:          -->
etc/icecast2/icecast.xml:        <!--
etc/icecast2/icecast.xml:        <alias source="/foo" dest="/bar"/>
etc/icecast2/icecast.xml:          -->
etc/icecast2/icecast.xml:        <!-- Aliases: can also be used for simple redirections as well,
etc/icecast2/icecast.xml:             this example will redirect all requests for http://server:port/ to
etc/icecast2/icecast.xml:             the status page
etc/icecast2/icecast.xml:          -->
etc/icecast2/icecast.xml:        <alias source="/" dest="/status.xsl"/>
etc/icecast2/icecast.xml:    </paths>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <logging>
etc/icecast2/icecast.xml:        <accesslog>access.log</accesslog>
etc/icecast2/icecast.xml:        <errorlog>error.log</errorlog>
etc/icecast2/icecast.xml:        <!-- <playlistlog>playlist.log</playlistlog> -->
etc/icecast2/icecast.xml:      	<loglevel>3</loglevel> <!-- 4 Debug, 3 Info, 2 Warn, 1 Error -->
etc/icecast2/icecast.xml:      	<logsize>10000</logsize> <!-- Max size of a logfile -->
etc/icecast2/icecast.xml:        <!-- If logarchive is enabled (1), then when logsize is reached
etc/icecast2/icecast.xml:             the logfile will be moved to [error|access|playlist].log.DATESTAMP,
etc/icecast2/icecast.xml:             otherwise it will be moved to [error|access|playlist].log.old.
etc/icecast2/icecast.xml:             Default is non-archive mode (i.e. overwrite)
etc/icecast2/icecast.xml:        -->
etc/icecast2/icecast.xml:        <!-- <logarchive>1</logarchive> -->
etc/icecast2/icecast.xml:    </logging>
etc/icecast2/icecast.xml:
etc/icecast2/icecast.xml:    <security>
etc/icecast2/icecast.xml:        <chroot>0</chroot>
etc/icecast2/icecast.xml:        <!--
etc/icecast2/icecast.xml:        <changeowner>
etc/icecast2/icecast.xml:            <user>nobody</user>
etc/icecast2/icecast.xml:            <group>nogroup</group>
etc/icecast2/icecast.xml:        </changeowner>
etc/icecast2/icecast.xml:        -->
etc/icecast2/icecast.xml:    </security>
etc/icecast2/icecast.xml:</icecast>
etc/icecast2/web/auth.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/web/auth.xsl:<xsl:output omit-xml-declaration="no" method="html" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/web/auth.xsl:<xsl:template match = "/icestats" >
etc/icecast2/web/auth.xsl:<html>
etc/icecast2/web/auth.xsl:<head>
etc/icecast2/web/auth.xsl:<title>Icecast Streaming Media Server</title>
etc/icecast2/web/auth.xsl:<link rel="stylesheet" type="text/css" href="style.css" />
etc/icecast2/web/auth.xsl:</head>
etc/icecast2/web/auth.xsl:<body topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">
etc/icecast2/web/auth.xsl:<table border="0" width="100%%">
etc/icecast2/web/auth.xsl:<tr>
etc/icecast2/web/auth.xsl:<td width="50"></td>
etc/icecast2/web/auth.xsl:<td>
etc/icecast2/web/auth.xsl:<h2>Authorization Page</h2>
etc/icecast2/web/auth.xsl:<div class="roundcont">
etc/icecast2/web/auth.xsl:<div class="roundtop">
etc/icecast2/web/auth.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/web/auth.xsl:</div>
etc/icecast2/web/auth.xsl:<div class="newscontent">
etc/icecast2/web/auth.xsl:<xsl:for-each select="source">
etc/icecast2/web/auth.xsl:<xsl:choose>
etc/icecast2/web/auth.xsl:<xsl:when test="listeners">
etc/icecast2/web/auth.xsl:<xsl:if test="authenticator">
etc/icecast2/web/auth.xsl:<xsl:if test="server_name"><xsl:value-of select="server_name" /> </xsl:if>
etc/icecast2/web/auth.xsl:<h3>(<xsl:value-of select="@mount" />)</h3>
etc/icecast2/web/auth.xsl:<form method="GET" action="/admin/buildm3u">
etc/icecast2/web/auth.xsl:<table border="0" cellpadding="4">
etc/icecast2/web/auth.xsl:<tr><td>Username : <input type="text" name="username"/></td></tr>
etc/icecast2/web/auth.xsl:<tr><td>Password : <input type="password" name="password"/></td></tr>
etc/icecast2/web/auth.xsl:<tr><td><input type="Submit" value="Login"/></td></tr>
etc/icecast2/web/auth.xsl:</table>
etc/icecast2/web/auth.xsl:<input type="hidden" name="mount" value="{@mount}"/>
etc/icecast2/web/auth.xsl:</form>
etc/icecast2/web/auth.xsl:</xsl:if>
etc/icecast2/web/auth.xsl:</xsl:when>
etc/icecast2/web/auth.xsl:<xsl:otherwise>
etc/icecast2/web/auth.xsl:<h3><xsl:value-of select="@mount" /> - Not Connected</h3>
etc/icecast2/web/auth.xsl:</xsl:otherwise>
etc/icecast2/web/auth.xsl:</xsl:choose>
etc/icecast2/web/auth.xsl:<br></br>
etc/icecast2/web/auth.xsl:<br></br>
etc/icecast2/web/auth.xsl:</xsl:for-each>
etc/icecast2/web/auth.xsl:<xsl:text disable-output-escaping="yes">&amp;</xsl:text>nbsp;
etc/icecast2/web/auth.xsl:</div>
etc/icecast2/web/auth.xsl:<div class="roundbottom">
etc/icecast2/web/auth.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/web/auth.xsl:</div>
etc/icecast2/web/auth.xsl:</div>
etc/icecast2/web/auth.xsl:<br></br><br></br>
etc/icecast2/web/auth.xsl:</td>
etc/icecast2/web/auth.xsl:<td width="25"></td></tr>
etc/icecast2/web/auth.xsl:</table>
etc/icecast2/web/auth.xsl:<div class="poster">Support icecast development at <a class="nav" target="_blank" href="http://www.icecast.org">www.icecast.org</a></div>
etc/icecast2/web/auth.xsl:</body>
etc/icecast2/web/auth.xsl:</html>
etc/icecast2/web/auth.xsl:</xsl:template>
etc/icecast2/web/auth.xsl:</xsl:stylesheet>
etc/icecast2/web/server_version.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/web/server_version.xsl:<xsl:output omit-xml-declaration="no" method="html" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/web/server_version.xsl:<xsl:template match = "/icestats" >
etc/icecast2/web/server_version.xsl:<html>
etc/icecast2/web/server_version.xsl:<head>
etc/icecast2/web/server_version.xsl:<title>Icecast Streaming Media Server</title>
etc/icecast2/web/server_version.xsl:<link rel="stylesheet" type="text/css" href="style.css" />
etc/icecast2/web/server_version.xsl:</head>
etc/icecast2/web/server_version.xsl:<body topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">
etc/icecast2/web/server_version.xsl:<h2>Server Information</h2>
etc/icecast2/web/server_version.xsl:<br />
etc/icecast2/web/server_version.xsl:<!--index header menu -->
etc/icecast2/web/server_version.xsl:<div class="roundcont">
etc/icecast2/web/server_version.xsl:<div class="roundtop">
etc/icecast2/web/server_version.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/web/server_version.xsl:</div>
etc/icecast2/web/server_version.xsl:<table border="0" width="100%" id="table1" cellspacing="0" cellpadding="4">
etc/icecast2/web/server_version.xsl:	<tr>
etc/icecast2/web/server_version.xsl:		<td bgcolor="#656565">
etc/icecast2/web/server_version.xsl:	    <a class="nav" href="admin/">Administration</a>
etc/icecast2/web/server_version.xsl:		<a class="nav" href="status.xsl">Server Status</a>
etc/icecast2/web/server_version.xsl:		<a class="nav" href="server_version.xsl">Version</a></td>
etc/icecast2/web/server_version.xsl:	</tr>
etc/icecast2/web/server_version.xsl:</table>
etc/icecast2/web/server_version.xsl:<div class="roundbottom">
etc/icecast2/web/server_version.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/web/server_version.xsl:</div>
etc/icecast2/web/server_version.xsl:</div>
etc/icecast2/web/server_version.xsl:<br />
etc/icecast2/web/server_version.xsl:<br />
etc/icecast2/web/server_version.xsl:<!--end index header menu -->
etc/icecast2/web/server_version.xsl:
etc/icecast2/web/server_version.xsl:<div class="roundcont">
etc/icecast2/web/server_version.xsl:<div class="roundtop">
etc/icecast2/web/server_version.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/web/server_version.xsl:</div>
etc/icecast2/web/server_version.xsl:<div class="newscontent">
etc/icecast2/web/server_version.xsl:<h3>Server Information</h3>
etc/icecast2/web/server_version.xsl:<table border="0" cellpadding="4">
etc/icecast2/web/server_version.xsl:<xsl:for-each select="/icestats">
etc/icecast2/web/server_version.xsl:<tr>
etc/icecast2/web/server_version.xsl:	<td width="130">Location</td>
etc/icecast2/web/server_version.xsl:	<td class="streamdata"><xsl:value-of select="location" /></td>
etc/icecast2/web/server_version.xsl:</tr>
etc/icecast2/web/server_version.xsl:<tr>
etc/icecast2/web/server_version.xsl:	<td width="130">Admin</td>
etc/icecast2/web/server_version.xsl:	<td class="streamdata"><xsl:value-of select="admin" /></td>
etc/icecast2/web/server_version.xsl:</tr>
etc/icecast2/web/server_version.xsl:<tr>
etc/icecast2/web/server_version.xsl:    <td width="130">Host</td>
etc/icecast2/web/server_version.xsl:    <td class="streamdata"><xsl:value-of select="host" /></td>
etc/icecast2/web/server_version.xsl:</tr>
etc/icecast2/web/server_version.xsl:<tr>
etc/icecast2/web/server_version.xsl:    <td width="130">Version</td>
etc/icecast2/web/server_version.xsl:    <td class="streamdata"><xsl:value-of select="server_id" /></td>
etc/icecast2/web/server_version.xsl:</tr>
etc/icecast2/web/server_version.xsl:</xsl:for-each>
etc/icecast2/web/server_version.xsl:<tr>
etc/icecast2/web/server_version.xsl:	<td width="130">Download</td>
etc/icecast2/web/server_version.xsl:	<td class="streamdata"><a class="nav" target="_blank" href="http://icecast.org/download.php">icecast.org</a></td>
etc/icecast2/web/server_version.xsl:</tr>
etc/icecast2/web/server_version.xsl:<tr>
etc/icecast2/web/server_version.xsl:	<td width="130">Subversion</td>
etc/icecast2/web/server_version.xsl:	<td class="streamdata"><a class="nav" target="_blank" href="http://icecast.org/svn.php">click here</a></td>
etc/icecast2/web/server_version.xsl:</tr>
etc/icecast2/web/server_version.xsl:<tr>
etc/icecast2/web/server_version.xsl:	<td width="130">Documentation</td>
etc/icecast2/web/server_version.xsl:	<td class="streamdata"><a class="nav" target="_blank" href="http://icecast.org/docs.php">click here</a></td>
etc/icecast2/web/server_version.xsl:</tr>
etc/icecast2/web/server_version.xsl:<tr>
etc/icecast2/web/server_version.xsl:	<td width="130">Stream Directory </td>
etc/icecast2/web/server_version.xsl:	<td class="streamdata"><a class="nav" target="_blank" href="http://dir.xiph.org/index.php">dir.xiph.org</a></td>
etc/icecast2/web/server_version.xsl:</tr>
etc/icecast2/web/server_version.xsl:<tr>
etc/icecast2/web/server_version.xsl:	<td width="130">Community</td>
etc/icecast2/web/server_version.xsl:	<td class="streamdata"><a class="nav" target="_blank" href="http://forum.icecast.org/">forum.icecast.org</a></td>
etc/icecast2/web/server_version.xsl:</tr>
etc/icecast2/web/server_version.xsl:</table>
etc/icecast2/web/server_version.xsl:</div>
etc/icecast2/web/server_version.xsl:<div class="roundbottom">
etc/icecast2/web/server_version.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/web/server_version.xsl:</div>
etc/icecast2/web/server_version.xsl:</div>
etc/icecast2/web/server_version.xsl:<br />
etc/icecast2/web/server_version.xsl:<br />
etc/icecast2/web/server_version.xsl:
etc/icecast2/web/server_version.xsl:<div class="poster">Support icecast development at <a class="nav" target="_blank" href="http://www.icecast.org">www.icecast.org</a></div>
etc/icecast2/web/server_version.xsl:</body>
etc/icecast2/web/server_version.xsl:</html>
etc/icecast2/web/server_version.xsl:</xsl:template>
etc/icecast2/web/server_version.xsl:</xsl:stylesheet>
etc/icecast2/web/status.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/web/status.xsl:<xsl:output omit-xml-declaration="no" method="html" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/web/status.xsl:<xsl:template match = "/icestats" >
etc/icecast2/web/status.xsl:<html>
etc/icecast2/web/status.xsl:<head>
etc/icecast2/web/status.xsl:<title>Icecast Streaming Media Server</title>
etc/icecast2/web/status.xsl:<link rel="stylesheet" type="text/css" href="style.css" />
etc/icecast2/web/status.xsl:</head>
etc/icecast2/web/status.xsl:<body topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">
etc/icecast2/web/status.xsl:<h2>Icecast2 Status</h2>
etc/icecast2/web/status.xsl:<br />
etc/icecast2/web/status.xsl:<!--index header menu -->
etc/icecast2/web/status.xsl:<div class="roundcont">
etc/icecast2/web/status.xsl:<div class="roundtop">
etc/icecast2/web/status.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/web/status.xsl:</div>
etc/icecast2/web/status.xsl:<table border="0" width="100%" id="table1" cellspacing="0" cellpadding="4">
etc/icecast2/web/status.xsl:	<tr>
etc/icecast2/web/status.xsl:		<td bgcolor="#656565">
etc/icecast2/web/status.xsl:		<a class="nav" href="admin/">Administration</a>
etc/icecast2/web/status.xsl:		<a class="nav" href="status.xsl">Server Status</a>
etc/icecast2/web/status.xsl:		<a class="nav" href="server_version.xsl">Version</a></td>
etc/icecast2/web/status.xsl:	</tr>
etc/icecast2/web/status.xsl:</table>
etc/icecast2/web/status.xsl:<div class="roundbottom">
etc/icecast2/web/status.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/web/status.xsl:</div>
etc/icecast2/web/status.xsl:</div>
etc/icecast2/web/status.xsl:<br />
etc/icecast2/web/status.xsl:<br />
etc/icecast2/web/status.xsl:<!--end index header menu -->
etc/icecast2/web/status.xsl:<!--mount point stats-->
etc/icecast2/web/status.xsl:<xsl:for-each select="source">
etc/icecast2/web/status.xsl:<xsl:choose>
etc/icecast2/web/status.xsl:<xsl:when test="listeners">
etc/icecast2/web/status.xsl:<div class="roundcont">
etc/icecast2/web/status.xsl:<div class="roundtop">
etc/icecast2/web/status.xsl:<img src="/corner_topleft.jpg" class="corner" style="display: none" />
etc/icecast2/web/status.xsl:</div>
etc/icecast2/web/status.xsl:<div class="newscontent">
etc/icecast2/web/status.xsl:    <div class="streamheader">
etc/icecast2/web/status.xsl:        <table cellspacing="0" cellpadding="0">
etc/icecast2/web/status.xsl:            <colgroup align="left" />
etc/icecast2/web/status.xsl:            <colgroup align="right" width="300" />
etc/icecast2/web/status.xsl:            <tr>
etc/icecast2/web/status.xsl:                <td><h3>Mount Point <xsl:value-of select="@mount" /></h3></td>
etc/icecast2/web/status.xsl:                <xsl:choose>
etc/icecast2/web/status.xsl:                    <xsl:when test="authenticator">
etc/icecast2/web/status.xsl:                        <td align="right"><a class="auth" href="/auth.xsl">Login</a></td>
etc/icecast2/web/status.xsl:                    </xsl:when>
etc/icecast2/web/status.xsl:                    <xsl:otherwise>
etc/icecast2/web/status.xsl:                        <td align="right"> <a href="{@mount}.m3u">M3U</a> <a href="{@mount}.xspf">XSPF</a></td>
etc/icecast2/web/status.xsl:                    </xsl:otherwise>
etc/icecast2/web/status.xsl:                </xsl:choose>
etc/icecast2/web/status.xsl:        </tr></table>
etc/icecast2/web/status.xsl:    </div>
etc/icecast2/web/status.xsl:
etc/icecast2/web/status.xsl:<table border="0" cellpadding="4">
etc/icecast2/web/status.xsl:<xsl:if test="server_name">
etc/icecast2/web/status.xsl:<tr><td>Stream Title:</td><td class="streamdata"> <xsl:value-of select="server_name" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="server_description">
etc/icecast2/web/status.xsl:<tr><td>Stream Description:</td><td class="streamdata"> <xsl:value-of select="server_description" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="server_type">
etc/icecast2/web/status.xsl:<tr><td>Content Type:</td><td class="streamdata"><xsl:value-of select="server_type" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="stream_start">
etc/icecast2/web/status.xsl:<tr><td>Mount started:</td><td class="streamdata"><xsl:value-of select="stream_start" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="bitrate">
etc/icecast2/web/status.xsl:<tr><td>Bitrate:</td><td class="streamdata"> <xsl:value-of select="bitrate" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="quality">
etc/icecast2/web/status.xsl:<tr><td>Quality:</td><td class="streamdata"> <xsl:value-of select="quality" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="video_quality">
etc/icecast2/web/status.xsl:<tr><td>Video Quality:</td><td class="streamdata"> <xsl:value-of select="video_quality" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="frame_size">
etc/icecast2/web/status.xsl:<tr><td>Framesize:</td><td class="streamdata"> <xsl:value-of select="frame_size" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="frame_rate">
etc/icecast2/web/status.xsl:<tr><td>Framerate:</td><td class="streamdata"> <xsl:value-of select="frame_rate" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="listeners">
etc/icecast2/web/status.xsl:<tr><td>Current Listeners:</td><td class="streamdata"> <xsl:value-of select="listeners" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="listener_peak">
etc/icecast2/web/status.xsl:<tr><td>Peak Listeners:</td><td class="streamdata"> <xsl:value-of select="listener_peak" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="genre">
etc/icecast2/web/status.xsl:<tr><td>Stream Genre:</td><td class="streamdata"> <xsl:value-of select="genre" /></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<xsl:if test="server_url">
etc/icecast2/web/status.xsl:<tr><td>Stream URL:</td><td class="streamdata"> <a target="_blank" href="{server_url}"><xsl:value-of select="server_url" /></a></td></tr>
etc/icecast2/web/status.xsl:</xsl:if>
etc/icecast2/web/status.xsl:<tr><td>Current Song:</td><td class="streamdata"> 
etc/icecast2/web/status.xsl:<xsl:if test="artist"><xsl:value-of select="artist" /> - </xsl:if><xsl:value-of select="title" /></td></tr>
etc/icecast2/web/status.xsl:</table>
etc/icecast2/web/status.xsl:</div>
etc/icecast2/web/status.xsl:<div class="roundbottom">
etc/icecast2/web/status.xsl:<img src="/corner_bottomleft.jpg" class="corner" style="display: none" />
etc/icecast2/web/status.xsl:</div>
etc/icecast2/web/status.xsl:</div>
etc/icecast2/web/status.xsl:<br />
etc/icecast2/web/status.xsl:<br />
etc/icecast2/web/status.xsl:</xsl:when>
etc/icecast2/web/status.xsl:<xsl:otherwise>
etc/icecast2/web/status.xsl:<h3><xsl:value-of select="@mount" /> - Not Connected</h3>
etc/icecast2/web/status.xsl:</xsl:otherwise>
etc/icecast2/web/status.xsl:</xsl:choose>
etc/icecast2/web/status.xsl:
etc/icecast2/web/status.xsl:</xsl:for-each>
etc/icecast2/web/status.xsl:<xsl:text disable-output-escaping="yes">&amp;</xsl:text>nbsp;
etc/icecast2/web/status.xsl:
etc/icecast2/web/status.xsl:
etc/icecast2/web/status.xsl:<div class="poster">Support icecast development at <a class="nav" target="_blank" href="http://www.icecast.org">www.icecast.org</a></div>
etc/icecast2/web/status.xsl:</body>
etc/icecast2/web/status.xsl:</html>
etc/icecast2/web/status.xsl:</xsl:template>
etc/icecast2/web/status.xsl:</xsl:stylesheet>
etc/icecast2/web/status2.xsl:<xsl:stylesheet xmlns:xsl = "http://www.w3.org/1999/XSL/Transform" version = "1.0" >
etc/icecast2/web/status2.xsl:<xsl:output omit-xml-declaration="no" method="xml" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" indent="yes" encoding="UTF-8" />
etc/icecast2/web/status2.xsl:<xsl:template match = "/icestats" >
etc/icecast2/web/status2.xsl:<pre>
etc/icecast2/web/status2.xsl:MountPoint,Connections,Stream Name,Current Listeners,Description,Currently Playing,Stream URL 
etc/icecast2/web/status2.xsl:Global,Client:<xsl:value-of select="connections" /> Source: <xsl:value-of select="source_connections" />,,<xsl:value-of select="listeners" />,,
etc/icecast2/web/status2.xsl:<xsl:for-each select="source">
etc/icecast2/web/status2.xsl:<xsl:value-of select="@mount" />,,<xsl:value-of select="name" />,<xsl:value-of select="listeners" />,<xsl:value-of select="description" />,<xsl:value-of select="artist" /> - <xsl:value-of select="title" />,<xsl:value-of select="url" />
etc/icecast2/web/status2.xsl:</xsl:for-each>
etc/icecast2/web/status2.xsl:</pre>
etc/icecast2/web/status2.xsl:</xsl:template>
etc/icecast2/web/status2.xsl:</xsl:stylesheet>
etc/icecast2/web/style.css:/******************************************************************************
etc/icecast2/web/style.css:	This file styles the bar that goes across the top of all Xiph.Org
etc/icecast2/web/style.css:	pages.
etc/icecast2/web/style.css:	
etc/icecast2/web/style.css:	The style that comes from this was first (to my knowledge) at
etc/icecast2/web/style.css:	http://alistapart.com/stories/practicalcss/ in the
etc/icecast2/web/style.css:	"Splitting the Difference" section.
etc/icecast2/web/style.css:******************************************************************************/
etc/icecast2/web/style.css:/* This effect doesn't work at all if all content is pinched in a bit. */
etc/icecast2/web/style.css:html, body {
etc/icecast2/web/style.css:	margin: 0;
etc/icecast2/web/style.css:	padding: 0;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:body {
etc/icecast2/web/style.css:	margin-left: 50px;
etc/icecast2/web/style.css:	margin-right: 25px;
etc/icecast2/web/style.css:	background-color: #000;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.xiphnav {
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:	font-weight: normal;
etc/icecast2/web/style.css:	padding:    .25em;
etc/icecast2/web/style.css:	margin-bottom:  .5em;
etc/icecast2/web/style.css:	border-bottom:  1px solid #000;
etc/icecast2/web/style.css:	color: #000;
etc/icecast2/web/style.css:	background: #aaa;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:h2 {
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:	text-decoration: none;
etc/icecast2/web/style.css:	font-weight: bold;
etc/icecast2/web/style.css:    font-size: 3em;
etc/icecast2/web/style.css:	color: #fff;
etc/icecast2/web/style.css:    padding: 10px 0px 10px 80px;
etc/icecast2/web/style.css:	margin-top:3px;
etc/icecast2/web/style.css:    background: transparent url(/icecast.png) no-repeat scroll left center
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:h1 {
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:	text-decoration: none;
etc/icecast2/web/style.css:	font-weight: bold;
etc/icecast2/web/style.css:	font-size: 100%;
etc/icecast2/web/style.css:	color: #fff;
etc/icecast2/web/style.css:	margin-top:3px;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.nav {
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:	text-decoration: none;
etc/icecast2/web/style.css:	font-weight: bold;
etc/icecast2/web/style.css:	font-size: 110%;
etc/icecast2/web/style.css:	color: #fff;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.nav:hover {
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:	text-decoration: none;
etc/icecast2/web/style.css:	font-weight: bold;
etc/icecast2/web/style.css:	color: #f8ef64;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.xiphnav_a {
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    font-weight: normal;
etc/icecast2/web/style.css:    color: #000;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.news {
etc/icecast2/web/style.css:    font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    font-weight: normal;
etc/icecast2/web/style.css:    color: #fff;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newsheader {
etc/icecast2/web/style.css:    font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    font-weight: normal;
etc/icecast2/web/style.css:    font-size: 110%;
etc/icecast2/web/style.css:    color: #f8ef64;
etc/icecast2/web/style.css:    background: #444;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.streamtd {
etc/icecast2/web/style.css:    font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    font-weight: normal;
etc/icecast2/web/style.css:    font-size: 85%;
etc/icecast2/web/style.css:    color: #fff;
etc/icecast2/web/style.css:    padding:15px;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.streamtd_alt {
etc/icecast2/web/style.css:    font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    font-weight: normal;
etc/icecast2/web/style.css:    font-size: 85%;
etc/icecast2/web/style.css:    color: #fff;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.streamtd_alt_2 {
etc/icecast2/web/style.css:    font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    text-decoration: underline;
etc/icecast2/web/style.css:    font-weight: normal;
etc/icecast2/web/style.css:    font-size: 85%;
etc/icecast2/web/style.css:    color: #fff;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:td {
etc/icecast2/web/style.css:    font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    font-weight: normal;
etc/icecast2/web/style.css:    color: #fff;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.roundcont {
etc/icecast2/web/style.css:	width: 90%;
etc/icecast2/web/style.css:	background-color: #656565;
etc/icecast2/web/style.css:	color: #fff;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.roundcont a {
etc/icecast2/web/style.css:    margin: 0px 10px;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newscontent {
etc/icecast2/web/style.css:	margin: 0 20px;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:h3 {
etc/icecast2/web/style.css:	margin: 0px;
etc/icecast2/web/style.css:    padding: 0px;
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:	text-decoration: none;
etc/icecast2/web/style.css:	font-weight: bold;
etc/icecast2/web/style.css:	font-size: 110%;
etc/icecast2/web/style.css:	color: #f8ef64;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newscontent h3 {
etc/icecast2/web/style.css:    margin-bottom: 10px;
etc/icecast2/web/style.css:    border-bottom: 1px groove #ACACAC;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newscontent h4 {
etc/icecast2/web/style.css:	margin: 10px 0px;
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:	text-decoration: none;
etc/icecast2/web/style.css:	font-weight: bold;
etc/icecast2/web/style.css:	font-size: 110%;
etc/icecast2/web/style.css:	color: #f8ef64;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newscontent p {
etc/icecast2/web/style.css:	margin: 0 0;
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:	text-decoration: none;
etc/icecast2/web/style.css:	font-weight: none;
etc/icecast2/web/style.css:	font-size: 90%;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newscontent td {
etc/icecast2/web/style.css:	margin: 0 0;
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:	text-decoration: none;
etc/icecast2/web/style.css:	font-weight: none;
etc/icecast2/web/style.css:	font-size: 90%;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newscontent td.streamdata {
etc/icecast2/web/style.css:	margin: 0 0;
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:	text-decoration: none;
etc/icecast2/web/style.css:	font-weight: none;
etc/icecast2/web/style.css:	font-size: 90%;
etc/icecast2/web/style.css:        color: #f8ef64;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.streamheader table {
etc/icecast2/web/style.css:    width: 100%;
etc/icecast2/web/style.css:    margin-bottom: 5px;
etc/icecast2/web/style.css:    border-bottom:  1px groove #ACACAC;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.streamheader td {
etc/icecast2/web/style.css:    margin: 0px;
etc/icecast2/web/style.css:    padding-top: 10px;
etc/icecast2/web/style.css:    padding-bottom: 10px;
etc/icecast2/web/style.css:    padding: 10 5 10 5;
etc/icecast2/web/style.css:    border: 0px solid white;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.streamheader h3 {
etc/icecast2/web/style.css:    border: 0px;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.streamheader a {
etc/icecast2/web/style.css:    padding: 8px 5px 3px 30px;
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    background: transparent url("/tunein.png") no-repeat left center;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.streamheader a.auth {
etc/icecast2/web/style.css:    padding-top: 10px;
etc/icecast2/web/style.css:    padding-bottom: 10px;
etc/icecast2/web/style.css:    padding-left: 32px;
etc/icecast2/web/style.css:    background: transparent url("/key.png") no-repeat left center;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newscontent a {
etc/icecast2/web/style.css:    font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    font-weight: bold;
etc/icecast2/web/style.css:    margin: 0px;
etc/icecast2/web/style.css:    color: #f8ef64;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newscontent a:hover {
etc/icecast2/web/style.css:    font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    font-weight: bold;
etc/icecast2/web/style.css:    color: #fff;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newscontent a.nav2 {
etc/icecast2/web/style.css:    font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    font-weight: bold;
etc/icecast2/web/style.css:    padding: 2px 9px;
etc/icecast2/web/style.css:    background: #444;
etc/icecast2/web/style.css:    color: #f8ef64;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.newscontent a.nav2:hover {
etc/icecast2/web/style.css:    font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    text-decoration: none;
etc/icecast2/web/style.css:    background: #777;
etc/icecast2/web/style.css:    font-weight: bold;
etc/icecast2/web/style.css:    color: #fff;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.poster {
etc/icecast2/web/style.css:	font-family: Verdana, sans-serif;
etc/icecast2/web/style.css:    margin: 50px 120px 20px 0px;
etc/icecast2/web/style.css:	display: block;
etc/icecast2/web/style.css:	text-decoration: none;
etc/icecast2/web/style.css:	font-size: 100%;
etc/icecast2/web/style.css:	color: #f8ef64;
etc/icecast2/web/style.css:    padding: 5px;
etc/icecast2/web/style.css:    border-top:  1px groove #ACACAC;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.roundcont p {
etc/icecast2/web/style.css:	margin: 10px 50px;
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.roundtop { 
etc/icecast2/web/style.css:	background: url(/corner_topright.jpg) no-repeat top right; 
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:.roundbottom {
etc/icecast2/web/style.css:	background: url(/corner_bottomright.jpg) no-repeat top right; 
etc/icecast2/web/style.css:}
etc/icecast2/web/style.css:img.corner {
etc/icecast2/web/style.css:	width: 15px;
etc/icecast2/web/style.css:	height: 15px;
etc/icecast2/web/style.css:	border: none;
etc/icecast2/web/style.css:	display: block !important;
etc/icecast2/web/style.css:}
etc/supervisord.conf:[unix_http_server]
etc/supervisord.conf:file=/tmp/supervisor.sock
etc/supervisord.conf:[supervisord]
etc/supervisord.conf:logfile=/tmp/supervisord.log
etc/supervisord.conf:logfile_maxbytes=50MB
etc/supervisord.conf:logfile_backups=10
etc/supervisord.conf:loglevel=info
etc/supervisord.conf:pidfile=/tmp/supervisord.pid
etc/supervisord.conf:nodaemon=false
etc/supervisord.conf:minfds=1024
etc/supervisord.conf:minprocs=200
etc/supervisord.conf:user=icecast2
etc/supervisord.conf:[rpcinterface:supervisor]
etc/supervisord.conf:supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface
etc/supervisord.conf:[supervisorctl]
etc/supervisord.conf:serverurl=unix:///tmp/supervisor.sock
etc/supervisord.conf:[program:icecast2]
etc/supervisord.conf:user=icecast2
etc/supervisord.conf:command=icecast2 -n -c /etc/icecast2/icecast.xml
etc/supervisord.conf:stopsignal=6
etc/supervisord.conf:stdout_events_enabled=true
etc/supervisord.conf:stderr_events_enabled=true
etc/supervisord.conf:autorestart=true
etc/supervisord.conf:[eventlistener:stdout]
etc/supervisord.conf:command=supervisor_stdout
etc/supervisord.conf:buffer_size=100
etc/supervisord.conf:events=PROCESS_LOG
etc/supervisord.conf:result_hander=supervisor_stdout:event_handler
start.sh:#!/bin/sh
start.sh:env
start.sh:set -x
start.sh:if [ -n "$ICECAST_SOURCE_PASSWORD" ]; then
start.sh:    sed -i "s/<source-password>[^<]*<\/source-password>/<source-password>$ICECAST_SOURCE_PASSWORD<\/source-password>/g" /etc/icecast2/icecast.xml
start.sh:fi
start.sh:if [ -n "$ICECAST_RELAY_PASSWORD" ]; then
start.sh:    sed -i "s/<relay-password>[^<]*<\/relay-password>/<relay-password>$ICECAST_RELAY_PASSWORD<\/relay-password>/g" /etc/icecast2/icecast.xml
start.sh:fi
start.sh:if [ -n "$ICECAST_ADMIN_PASSWORD" ]; then
start.sh:    sed -i "s/<admin-password>[^<]*<\/admin-password>/<admin-password>$ICECAST_ADMIN_PASSWORD<\/admin-password>/g" /etc/icecast2/icecast.xml
start.sh:fi
start.sh:if [ -n "$ICECAST_PASSWORD" ]; then
start.sh:    sed -i "s/<password>[^<]*<\/password>/<password>$ICECAST_PASSWORD<\/password>/g" /etc/icecast2/icecast.xml
start.sh:fi
start.sh:cat /etc/icecast2/icecast.xml
start.sh:supervisord -n -c /etc/supervisord.conf
.dockerignore:pgsql
.dockerignore:es
.dockerignore:user_build
Dockerfile:FROM ubuntu:latest
Dockerfile:MAINTAINER Manfred Touron "m@42.am"
Dockerfile:ENV DEBIAN_FRONTEND noninteractive
Dockerfile:ENV APPDIR /app
Dockerfile:ENV DJANGO_SETTINGS_MODULE config
Dockerfile:ENV LANG en_US.UTF-8
Dockerfile:ENV LC_ALL en_US.UTF-8
Dockerfile:ENV VIRTUAL_ENV /venv
Dockerfile:ENV PATH /venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
Dockerfile:# Set locale to UTF-8
Dockerfile:RUN locale-gen en_US.UTF-8 && \
Dockerfile:    update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8
Dockerfile:RUN locale-gen fr_FR.UTF-8
Dockerfile:# Update python
Dockerfile:RUN apt-get -qq update && \
Dockerfile:    apt-get -y -qq upgrade && \
Dockerfile:    apt-get install -y -qq \
Dockerfile:        python libxml2-dev libxslt1-dev expat libevent-dev wget python-dev \
Dockerfile:        texlive texlive-latex-extra language-pack-en unzip git python-pip \
Dockerfile:        zlib1g-dev lib32z1-dev libpq-dev gettext curl && \
Dockerfile:    apt-get clean
Dockerfile:# Install test dependencies
Dockerfile:RUN pip install -q \
Dockerfile:    virtualenv \
Dockerfile:    pep8 \
Dockerfile:    mock \
Dockerfile:    nose \
Dockerfile:    coverage \
Dockerfile:    pylint
Dockerfile:# Setting up virtualenv
Dockerfile:RUN virtualenv /venv
Dockerfile:# Add user py
Dockerfile:RUN adduser --gecos 'py' --disabled-password py
Dockerfile:RUN mkdir -p $APPDIR && cd /tmp && \
Dockerfile:    wget -q --no-check-certificate https://github.com/rtfd/readthedocs.org/archive/master.zip 
Dockerfile:ADD config /
Dockerfile:RUN /bin/rtd-install.sh
Dockerfile:# Docker config
Dockerfile:EXPOSE 8000
Dockerfile:VOLUME ["/app"]
Dockerfile:CMD ["/bin/rtd-start.sh"]
Makefile:NAME =	moul/readthedocs
Makefile:build:
Makefile:	docker build -t $(NAME) .
Makefile:release:
Makefile:	docker push $(NAME)
Makefile:run:
Makefile:	docker-compose run --service-ports --rm readthedocs
Makefile:debug-run:
Makefile:	docker-compose run --service-ports --rm readthedocs bash
Makefile:debug-app:
Makefile:	docker exec -ti dockerreadthedocs_readthedocs_run_9 bash
config/bin/rtd-install.sh:#!/bin/bash
config/bin/rtd-install.sh:cd $APPDIR
config/bin/rtd-install.sh:set -e
config/bin/rtd-install.sh:unzip /tmp/master.zip >/dev/null 2>/dev/null && \
config/bin/rtd-install.sh:mv readthedocs.org-master/* readthedocs.org-master/.??* . && \
config/bin/rtd-install.sh:rmdir readthedocs.org-master
config/bin/rtd-install.sh:PYTHON=/venv/bin/python
config/bin/rtd-install.sh:PIP=/venv/bin/pip
config/bin/rtd-install.sh:cp -f /etc/default/rtd-config.py $APPDIR/readthedocs/config.py
config/bin/rtd-install.sh:$PIP install -U \
config/bin/rtd-install.sh:    --allow-external bzr --allow-unverified bzr \
config/bin/rtd-install.sh:    -r $APPDIR/requirements.txt
config/bin/rtd-install.sh:cd $APPDIR && /venv/bin/python setup.py develop
config/bin/rtd-install.sh:cd $APPDIR/readthedocs
config/bin/rtd-install.sh:chown -R py $APPDIR
config/bin/rtd-install.sh:$PIP install psycopg2
config/bin/rtd-install.sh:/usr/bin/pip install psycopg2
config/bin/rtd-install.sh:/usr/bin/pip install git+https://github.com/rtfd/readthedocs-sphinx-ext.git
config/bin/rtd-install.sh:ln -s /app/readthedocs/core/static /app/media/
config/bin/rtd-install.sh:mkdir -p /app/prod_artifacts/media
config/bin/rtd-start.sh:#!/bin/bash -x
config/bin/rtd-start.sh:curl -XPUT 'http://elasticsearch:9200/readthedocs/'
config/bin/rtd-start.sh:cd /app/readthedocs
config/bin/rtd-start.sh:ln -s ../manage.py .
config/bin/rtd-start.sh:PYTHON=/venv/bin/python
config/bin/rtd-start.sh:$PYTHON manage.py syncdb --noinput
config/bin/rtd-start.sh:$PYTHON manage.py migrate
config/bin/rtd-start.sh:echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@localhost', 'admin')" | $PYTHON manage.py shell
config/bin/rtd-start.sh:$PYTHON manage.py loaddata test_data
config/bin/rtd-start.sh:$PYTHON manage.py makemessages --all
config/bin/rtd-start.sh:$PYTHON manage.py compilemessages
config/bin/rtd-start.sh:/venv/bin/python manage.py celeryd -l INFO &
config/bin/rtd-start.sh:/venv/bin/python manage.py runserver 0.0.0.0:8000
config/etc/default/locale:LANG="fr_FR.UTF-8"
config/etc/default/rtd-config.py:from readthedocs.settings.docker import *
config/etc/default/rtd-config.py:from readthedocs.settings.sqlite import *
config/etc/default/rtd-config.py:import os
config/etc/default/rtd-config.py:environ = os.environ
config/etc/default/rtd-config.py:DATABASES = {
config/etc/default/rtd-config.py:    'default': {
config/etc/default/rtd-config.py:        'ENGINE': 'django.db.backends.postgresql_psycopg2',
config/etc/default/rtd-config.py:        'NAME': environ['DB_ENV_DB_NAME'],
config/etc/default/rtd-config.py:        'USER': environ['DB_ENV_DB_USER'],
config/etc/default/rtd-config.py:        'PASSWORD': environ['DB_ENV_DB_PASS'],
config/etc/default/rtd-config.py:        'HOST': 'db',
config/etc/default/rtd-config.py:        'PORT': 5432,
config/etc/default/rtd-config.py:    }
config/etc/default/rtd-config.py:}
config/etc/default/rtd-config.py:SITE_ROOT = '/app'
config/etc/default/rtd-config.py:ES_HOSTS = ['elasticsearch:9200']
config/etc/default/rtd-config.py:REDIS = {
config/etc/default/rtd-config.py:    'host': 'redis',
config/etc/default/rtd-config.py:    'port': 6379,
config/etc/default/rtd-config.py:    'db': 0,
config/etc/default/rtd-config.py:}
config/etc/default/rtd-config.py:BROKER_URL = 'redis://redis:6379/0'
config/etc/default/rtd-config.py:CELERY_RESULT_BACKEND = 'redis://redis:6379/0'
config/etc/default/rtd-config.py:DEBUG = True
config/etc/default/rtd-config.py:CELERY_ALWAYS_EAGER = False
Makefile:SOURCES := $(shell find . -name "*.go")
Makefile:all: build
Makefile:.PHONY: build
Makefile:build: dockerpatch
Makefile:dockerpatch: $(SOURCES)
Makefile:	go get ./...
Makefile:	go build -o $@ ./cmd/$@
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	go get github.com/smartystreets/goconvey
Makefile:	goconvey -cover -port=6042 -workDir="$(realpath .)" -depth=-1
cmd/appspot/app.go:package dockerpatchapp
cmd/appspot/app.go:import (
cmd/appspot/app.go:	"encoding/json"
cmd/appspot/app.go:	"fmt"
cmd/appspot/app.go:	"net/http"
cmd/appspot/app.go:	"github.com/moul/dockerpatch"
cmd/appspot/app.go:)
cmd/appspot/app.go:func init() {
cmd/appspot/app.go:	http.HandleFunc("/", handler)
cmd/appspot/app.go:}
cmd/appspot/app.go:type ConvertRequest struct {
cmd/appspot/app.go:	Dockerfile string          `json:"Dockerfile,omitempty"`
cmd/appspot/app.go:	Options    map[string]bool `json:"Options,omitempty"`
cmd/appspot/app.go:}
cmd/appspot/app.go:func handler(w http.ResponseWriter, r *http.Request) {
cmd/appspot/app.go:	decoder := json.NewDecoder(r.Body)
cmd/appspot/app.go:	var convertRequest ConvertRequest
cmd/appspot/app.go:	err := decoder.Decode(&convertRequest)
cmd/appspot/app.go:	if err != nil {
cmd/appspot/app.go:		fmt.Fprintf(w, "POST parsing error: %v\n", err)
cmd/appspot/app.go:		return
cmd/appspot/app.go:	}
cmd/appspot/app.go:	dockerfile, err := dockerpatch.DockerfileFromString(convertRequest.Dockerfile)
cmd/appspot/app.go:	if err != nil {
cmd/appspot/app.go:		fmt.Fprintf(w, "Invalid Dockerfile: %v", err)
cmd/appspot/app.go:		return
cmd/appspot/app.go:	}
cmd/appspot/app.go:	if convertRequest.Options["ToArm"] {
cmd/appspot/app.go:		dockerfile.FilterToArm("armhf")
cmd/appspot/app.go:	}
cmd/appspot/app.go:	if convertRequest.Options["DisableNetwork"] {
cmd/appspot/app.go:		dockerfile.FilterDisableNetwork()
cmd/appspot/app.go:	}
cmd/appspot/app.go:	if convertRequest.Options["Optimize"] {
cmd/appspot/app.go:		dockerfile.FilterOptimize()
cmd/appspot/app.go:	}
cmd/appspot/app.go:	fmt.Fprintf(w, "%v\n", dockerfile)
cmd/appspot/app.go:}
cmd/appspot/app.yaml:application: dockerpatch
cmd/appspot/app.yaml:version: 1
cmd/appspot/app.yaml:runtime: go
cmd/appspot/app.yaml:api_version: go1
cmd/appspot/app.yaml:handlers:
cmd/appspot/app.yaml:- url: /
cmd/appspot/app.yaml:  static_files: static/index.html
cmd/appspot/app.yaml:  upload: static/index.html
cmd/appspot/app.yaml:- url: /favicon\.ico
cmd/appspot/app.yaml:  static_files: static/favicon.ico
cmd/appspot/app.yaml:  upload: static/favicon\.ico
cmd/appspot/app.yaml:- url: /convert
cmd/appspot/app.yaml:  script: _go_app
cmd/appspot/static/index.html:<!doctype html>
cmd/appspot/static/index.html:<html>
cmd/appspot/static/index.html:  <head>
cmd/appspot/static/index.html:    <title>Docker Patch</title>
cmd/appspot/static/index.html:    <meta charset="utf-8">
cmd/appspot/static/index.html:    <meta http-equiv="X-UA-Compatible" content="IE=edge">
cmd/appspot/static/index.html:    <meta name="viewport" content="width=device-width, initial-scale=1">
cmd/appspot/static/index.html:    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.3/angular.js"></script>
cmd/appspot/static/index.html:    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.3/angular-animate.js"></script>
cmd/appspot/static/index.html:    <script src="//angular-ui.github.io/bootstrap/ui-bootstrap-tpls-0.13.3.js"></script>
cmd/appspot/static/index.html:    <script src="//cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/0.13.3/ui-bootstrap.min.js"></script>
cmd/appspot/static/index.html:    <script src="//cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/ace.min.js"></script>
cmd/appspot/static/index.html:    <script src="//cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/mode-dockerfile.js"></script>
cmd/appspot/static/index.html:    <script src="//cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/theme-cobalt.js"></script>
cmd/appspot/static/index.html:    <script src="//cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/worker-javascript.js"></script>
cmd/appspot/static/index.html:    <script src="//angular-ui.github.io/ui-ace/dist/ui-ace.min.js"></script>
cmd/appspot/static/index.html:    <script type="text/javascript">
cmd/appspot/static/index.html:     angular.module("dockerpatch", ['dockerpatch.controllers','ngAnimate','ui.bootstrap', 'ui.ace']);
cmd/appspot/static/index.html:     angular.module("dockerpatch.controllers", [])
cmd/appspot/static/index.html:            .controller('DockerPatchCtrl', ['$scope', '$http', '$interval', function($scope, $http, $interval) {
cmd/appspot/static/index.html:       $scope.requestType = 'post';
cmd/appspot/static/index.html:       $scope.url = '/convert';
cmd/appspot/static/index.html:       $scope.response = null;
cmd/appspot/static/index.html:       $scope.errors = null;
cmd/appspot/static/index.html:       $scope.inputHasChanged = false;
cmd/appspot/static/index.html:       $scope.checkModel = {
cmd/appspot/static/index.html:         optimize: false,
cmd/appspot/static/index.html:         disableNetwork: false,
cmd/appspot/static/index.html:         toArm: false,
cmd/appspot/static/index.html:       };
cmd/appspot/static/index.html:       $scope.$watchCollection('checkModel', function() {
cmd/appspot/static/index.html:         $scope.sendRequest();
cmd/appspot/static/index.html:       });
cmd/appspot/static/index.html:       var cron = $interval(function() {
cmd/appspot/static/index.html:         if ($scope.inputHasChanged) {
cmd/appspot/static/index.html:           $scope.sendRequest();
cmd/appspot/static/index.html:         }
cmd/appspot/static/index.html:       }, 1000);
cmd/appspot/static/index.html:       $scope.reqdata = "FROM ubuntu:14.04\n" +
cmd/appspot/static/index.html:                        "# This is the influxdb Dockerfile\n" +
cmd/appspot/static/index.html:                        "\n" +
cmd/appspot/static/index.html:                        "RUN apt-get update && apt-get install wget -y\n" +
cmd/appspot/static/index.html:                        "RUN wget http://s3.amazonaws.com/influxdb/influxdb_latest_amd64.deb\n" +
cmd/appspot/static/index.html:                        "RUN dpkg -i influxdb_latest_amd64.deb\n" +
cmd/appspot/static/index.html:                        "RUN rm -r /opt/influxdb/shared\n" +
cmd/appspot/static/index.html:                        "\n" +
cmd/appspot/static/index.html:                        "VOLUME /opt/influxdb/shared\n" +
cmd/appspot/static/index.html:                        "\n" +
cmd/appspot/static/index.html:                        "CMD /usr/bin/influxdb --pidfile /var/run/influxdb.pid -config /opt/influxdb/shared/config.toml\n" +
cmd/appspot/static/index.html:                        "\n" +
cmd/appspot/static/index.html:                        "EXPOSE 8083\n" +
cmd/appspot/static/index.html:                        "EXPOSE 8086\n" +
cmd/appspot/static/index.html:                        "EXPOSE 8090\n" +
cmd/appspot/static/index.html:                        "EXPOSE 8099";
cmd/appspot/static/index.html:       $scope.inputLoaded = function(_editor) {
cmd/appspot/static/index.html:         $scope.inputEditor = _editor;
cmd/appspot/static/index.html:       };
cmd/appspot/static/index.html:       $scope.outputLoaded = function(_editor) {
cmd/appspot/static/index.html:         $scope.outputEditor = _editor;
cmd/appspot/static/index.html:       };
cmd/appspot/static/index.html:       $scope.inputChanged = function(e) {
cmd/appspot/static/index.html:         $scope.inputHasChanged = true;
cmd/appspot/static/index.html:       };
cmd/appspot/static/index.html:       $scope.sendRequest = function(){
cmd/appspot/static/index.html:         $scope.inputHasChanged = false;
cmd/appspot/static/index.html:         var data = {
cmd/appspot/static/index.html:           Dockerfile: $scope.reqdata,
cmd/appspot/static/index.html:           Options: {
cmd/appspot/static/index.html:             ToArm: $scope.checkModel.toArm,
cmd/appspot/static/index.html:             Optimize: $scope.checkModel.optimize,
cmd/appspot/static/index.html:             DisableNetwork: $scope.checkModel.disableNetwork,
cmd/appspot/static/index.html:           }
cmd/appspot/static/index.html:         };
cmd/appspot/static/index.html:         $http.post($scope.url, data)
cmd/appspot/static/index.html:              .success(function(data,status,headers,config) {
cmd/appspot/static/index.html:           $scope.errors = {};
cmd/appspot/static/index.html:           $scope.response = {};
cmd/appspot/static/index.html:           $scope.response.data = data;
cmd/appspot/static/index.html:           $scope.response.status = status;
cmd/appspot/static/index.html:           $scope.response.headers = headers;
cmd/appspot/static/index.html:           $scope.response.config = config;
cmd/appspot/static/index.html:           $scope.outputEditor.setValue(data, 1);
cmd/appspot/static/index.html:         })
cmd/appspot/static/index.html:              .error(function(data,status,headers,config) {
cmd/appspot/static/index.html:           $scope.errors = {};
cmd/appspot/static/index.html:           $scope.response = {};
cmd/appspot/static/index.html:           $scope.errors.data = data;
cmd/appspot/static/index.html:           $scope.errors.status = status;
cmd/appspot/static/index.html:           $scope.errors.headers = headers;
cmd/appspot/static/index.html:           $scope.errors.config = config;
cmd/appspot/static/index.html:           $scope.outputEditor.setValue(data, 1);
cmd/appspot/static/index.html:         });
cmd/appspot/static/index.html:       };
cmd/appspot/static/index.html:     }]);
cmd/appspot/static/index.html:    </script>
cmd/appspot/static/index.html:    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
cmd/appspot/static/index.html:    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.3/styles/github.min.css">
cmd/appspot/static/index.html:    <style>.ace_editor { height: 400px; }</style>
cmd/appspot/static/index.html:  </head>
cmd/appspot/static/index.html:  <body ng-app="dockerpatch">
cmd/appspot/static/index.html:    <div class="container" ng-controller="DockerPatchCtrl">
cmd/appspot/static/index.html:      <div class="row">
cmd/appspot/static/index.html:        <div class="page-header">
cmd/appspot/static/index.html:          <h1>Docker Patch <small>Read, write, manipulate, convert & apply filters to Dockerfiles</small></h1>
cmd/appspot/static/index.html:        </div>
cmd/appspot/static/index.html:      </div>
cmd/appspot/static/index.html:      <div class="row">
cmd/appspot/static/index.html:        <div class="col-md-6">
cmd/appspot/static/index.html:          <form name="dpform" ng-submit="sendRequest()" class="well">
cmd/appspot/static/index.html:            <fieldset>
cmd/appspot/static/index.html:              <legend>Input</legend>
cmd/appspot/static/index.html:              <div class="container-fluid">
cmd/appspot/static/index.html:                <div class="row">
cmd/appspot/static/index.html:                  <label for="reqdata">Dockerfile</label>
cmd/appspot/static/index.html:                  <div ng-model="reqdata" name="reqdata" id="reqdata" language="dockerfile"
cmd/appspot/static/index.html:                       ui-ace="{mode:'dockerfile',theme:'cobalt',onChange:inputChanged,onLoad:inputLoaded,useWrapMode:true}">
cmd/appspot/static/index.html:                  </div>
cmd/appspot/static/index.html:                </div>
cmd/appspot/static/index.html:                <div class="row">
cmd/appspot/static/index.html:                  <br />
cmd/appspot/static/index.html:                </div>
cmd/appspot/static/index.html:                <div class="row">
cmd/appspot/static/index.html:                  <div class="col-md-12">
cmd/appspot/static/index.html:                    <div class="btn-group">
cmd/appspot/static/index.html:                      <label class="btn btn-primary" ng-model="checkModel.optimize" btn-checkbox>Optimize</label>
cmd/appspot/static/index.html:                      <label class="btn btn-primary" ng-model="checkModel.disableNetwork" btn-checkbox>No network</label>
cmd/appspot/static/index.html:                      <label class="btn btn-primary" ng-model="checkModel.toArm" btn-checkbox>To ARCH=arm</label>
cmd/appspot/static/index.html:                    </div>
cmd/appspot/static/index.html:                  </div>
cmd/appspot/static/index.html:                </div>
cmd/appspot/static/index.html:              </div>
cmd/appspot/static/index.html:            </fieldset>
cmd/appspot/static/index.html:          </form>
cmd/appspot/static/index.html:        </div>
cmd/appspot/static/index.html:        <div class="col-md-6">
cmd/appspot/static/index.html:          <div class="well">
cmd/appspot/static/index.html:            <fieldset>
cmd/appspot/static/index.html:              <legend>Output</legend>
cmd/appspot/static/index.html:              <label>Dockerfile</label>
cmd/appspot/static/index.html:              <div ui-ace="{mode:'dockerfile',theme:'cobalt',onLoad:outputLoaded,useWrapMode:true}" readonly></div>
cmd/appspot/static/index.html:            </fieldset>
cmd/appspot/static/index.html:          </div>
cmd/appspot/static/index.html:        </div>
cmd/appspot/static/index.html:      </div>
cmd/appspot/static/index.html:    </div>
cmd/appspot/static/index.html:  </body>
cmd/appspot/static/index.html:</html>
cmd/dockerpatch/main.go:package main
cmd/dockerpatch/main.go:import (
cmd/dockerpatch/main.go:	"fmt"
cmd/dockerpatch/main.go:	"io"
cmd/dockerpatch/main.go:	"os"
cmd/dockerpatch/main.go:	"path"
cmd/dockerpatch/main.go:	"github.com/Sirupsen/logrus"
cmd/dockerpatch/main.go:	"github.com/codegangsta/cli"
cmd/dockerpatch/main.go:	"github.com/moul/dockerpatch"
cmd/dockerpatch/main.go:)
cmd/dockerpatch/main.go:func main() {
cmd/dockerpatch/main.go:	app := cli.NewApp()
cmd/dockerpatch/main.go:	app.Name = path.Base(os.Args[0])
cmd/dockerpatch/main.go:	app.Author = "Manfred Touron"
cmd/dockerpatch/main.go:	app.Email = "https://github.com/moul/dockerpatch"
cmd/dockerpatch/main.go:	app.Version = "0.1.0"
cmd/dockerpatch/main.go:	app.Usage = "Read, write, manipulate, convert & apply filters to Dockerfiles"
cmd/dockerpatch/main.go:	app.Commands = []cli.Command{
cmd/dockerpatch/main.go:		{
cmd/dockerpatch/main.go:			Name:        "patch",
cmd/dockerpatch/main.go:			Usage:       "Patch a Dockerfile with filters",
cmd/dockerpatch/main.go:			Description: "patch [--to-arm]",
cmd/dockerpatch/main.go:			Action:      CmdPatch,
cmd/dockerpatch/main.go:			Flags: []cli.Flag{
cmd/dockerpatch/main.go:				cli.BoolFlag{
cmd/dockerpatch/main.go:					Name:  "to-arm",
cmd/dockerpatch/main.go:					Usage: "Convert to armhf architecture",
cmd/dockerpatch/main.go:				},
cmd/dockerpatch/main.go:				cli.BoolFlag{
cmd/dockerpatch/main.go:					Name:  "disable-network",
cmd/dockerpatch/main.go:					Usage: "Remove network rules",
cmd/dockerpatch/main.go:				},
cmd/dockerpatch/main.go:				cli.BoolFlag{
cmd/dockerpatch/main.go:					Name:  "optimize",
cmd/dockerpatch/main.go:					Usage: "Optimize Dockerfile",
cmd/dockerpatch/main.go:				},
cmd/dockerpatch/main.go:			},
cmd/dockerpatch/main.go:		},
cmd/dockerpatch/main.go:	}
cmd/dockerpatch/main.go:	app.Run(os.Args)
cmd/dockerpatch/main.go:}
cmd/dockerpatch/main.go:func CmdPatch(c *cli.Context) {
cmd/dockerpatch/main.go:	if len(c.Args()) == 0 {
cmd/dockerpatch/main.go:		cli.ShowSubcommandHelp(c)
cmd/dockerpatch/main.go:		os.Exit(1)
cmd/dockerpatch/main.go:	}
cmd/dockerpatch/main.go:	var input io.Reader
cmd/dockerpatch/main.go:	var err error
cmd/dockerpatch/main.go:	path := c.Args()[0]
cmd/dockerpatch/main.go:	switch path {
cmd/dockerpatch/main.go:	case "-":
cmd/dockerpatch/main.go:		input = os.Stdin
cmd/dockerpatch/main.go:	default:
cmd/dockerpatch/main.go:		input, err = os.Open(path)
cmd/dockerpatch/main.go:		if err != nil {
cmd/dockerpatch/main.go:			logrus.Fatalf("os.Open failed: %v", err)
cmd/dockerpatch/main.go:		}
cmd/dockerpatch/main.go:	}
cmd/dockerpatch/main.go:	dockerfile, err := dockerpatch.DockerfileRead(input)
cmd/dockerpatch/main.go:	if err != nil {
cmd/dockerpatch/main.go:		logrus.Fatalf("dockerpatch.DockerfileRead failed: %v", err)
cmd/dockerpatch/main.go:	}
cmd/dockerpatch/main.go:	if c.Bool("to-arm") {
cmd/dockerpatch/main.go:		if dockerfile.FilterToArm("armhf") != nil {
cmd/dockerpatch/main.go:			logrus.Fatalf("dockerfile.FilterToArm failed: %v", err)
cmd/dockerpatch/main.go:		}
cmd/dockerpatch/main.go:	}
cmd/dockerpatch/main.go:	if c.Bool("disable-network") {
cmd/dockerpatch/main.go:		if dockerfile.FilterDisableNetwork() != nil {
cmd/dockerpatch/main.go:			logrus.Fatalf("dockerfile.FilterDisableNetwork failed: %v", err)
cmd/dockerpatch/main.go:		}
cmd/dockerpatch/main.go:	}
cmd/dockerpatch/main.go:	if c.Bool("optimize") {
cmd/dockerpatch/main.go:		if dockerfile.FilterOptimize() != nil {
cmd/dockerpatch/main.go:			logrus.Fatalf("dockerfile.FilterOptimize failed: %v", err)
cmd/dockerpatch/main.go:		}
cmd/dockerpatch/main.go:	}
cmd/dockerpatch/main.go:	fmt.Println(dockerfile.String())
cmd/dockerpatch/main.go:}
dockerpatch.go:package dockerpatch
dockerpatch.go:import (
dockerpatch.go:	"bytes"
dockerpatch.go:	"fmt"
dockerpatch.go:	"io"
dockerpatch.go:	"strings"
dockerpatch.go:	"github.com/docker/docker/builder/dockerfile/command"
dockerpatch.go:	"github.com/docker/docker/builder/dockerfile/parser"
dockerpatch.go:)
dockerpatch.go:type Dockerfile struct {
dockerpatch.go:	root *parser.Node
dockerpatch.go:}
dockerpatch.go:// DockerfileNew returns an empty Dockerfile
dockerpatch.go:func DockerfileNew() *Dockerfile {
dockerpatch.go:	dockerfile, _ := DockerfileFromString("")
dockerpatch.go:	return dockerfile
dockerpatch.go:}
dockerpatch.go:// DockerfileFromString reads a Dockerfiler as string
dockerpatch.go:func DockerfileFromString(input string) (*Dockerfile, error) {
dockerpatch.go:	payload := new(bytes.Buffer)
dockerpatch.go:	payload.Write([]byte(input))
dockerpatch.go:	return DockerfileRead(payload)
dockerpatch.go:}
dockerpatch.go:// DockerfileRead reads a Dockerfile as io.Reader
dockerpatch.go:func DockerfileRead(input io.Reader) (*Dockerfile, error) {
dockerpatch.go:	dockerfile := Dockerfile{}
dockerpatch.go:	root, err := parser.Parse(input)
dockerpatch.go:	if err != nil {
dockerpatch.go:		return nil, err
dockerpatch.go:	}
dockerpatch.go:	dockerfile.root = root
dockerpatch.go:	return &dockerfile, nil
dockerpatch.go:}
dockerpatch.go:func (d *Dockerfile) RemoveAt(i int) error {
dockerpatch.go:	if i >= 0 && i < d.Length() {
dockerpatch.go:		d.root.Children = append(d.root.Children[:i], d.root.Children[i+1:]...)
dockerpatch.go:		return nil
dockerpatch.go:	}
dockerpatch.go:	return fmt.Errorf("Cannot remove %d: index error", i)
dockerpatch.go:}
dockerpatch.go:// String returns a docker-readable Dockerfile
dockerpatch.go:func (d *Dockerfile) String() string {
dockerpatch.go:	lines := []string{}
dockerpatch.go:	for _, child := range d.root.Children {
dockerpatch.go:		lines = append(lines, child.Original)
dockerpatch.go:	}
dockerpatch.go:	return strings.Join(lines, "\n")
dockerpatch.go:}
dockerpatch.go:// PrependNode attach a new node on first position of the AST
dockerpatch.go:func (d *Dockerfile) PrependNode(node *parser.Node) error {
dockerpatch.go:	d.root.Children = append([]*parser.Node{node}, d.root.Children...)
dockerpatch.go:	return nil
dockerpatch.go:}
dockerpatch.go:// AppendNode attach a new node on last position of the AST
dockerpatch.go:func (d *Dockerfile) AppendNode(node *parser.Node) error {
dockerpatch.go:	d.root.Children = append(d.root.Children, node)
dockerpatch.go:	return nil
dockerpatch.go:}
dockerpatch.go:// RemoveNodesByType removes all nodes of a specific type from the AST
dockerpatch.go:func (d *Dockerfile) RemoveNodesByType(nodeType string) error {
dockerpatch.go:	newChildren := []*parser.Node{}
dockerpatch.go:	for _, node := range d.root.Children {
dockerpatch.go:		if node.Value != nodeType {
dockerpatch.go:			newChildren = append(newChildren, node)
dockerpatch.go:		}
dockerpatch.go:	}
dockerpatch.go:	d.root.Children = newChildren
dockerpatch.go:	return nil
dockerpatch.go:}
dockerpatch.go:// SetFrom sets the current FROM
dockerpatch.go:func (d *Dockerfile) SetFrom(from string) error {
dockerpatch.go:	if err := d.RemoveNodesByType(command.From); err != nil {
dockerpatch.go:		return err
dockerpatch.go:	}
dockerpatch.go:	return d.PrependLine(fmt.Sprintf("FROM %s", from))
dockerpatch.go:}
dockerpatch.go:// ParseLine returns an AST node based on a line
dockerpatch.go:func ParseLine(line string) (*parser.Node, error) {
dockerpatch.go:	tmp, err := DockerfileFromString(line)
dockerpatch.go:	if err != nil {
dockerpatch.go:		return nil, err
dockerpatch.go:	}
dockerpatch.go:	return tmp.root.Children[0], nil
dockerpatch.go:}
dockerpatch.go:// GetFrom returns the current FROM
dockerpatch.go:func (d *Dockerfile) From() string {
dockerpatch.go:	for _, node := range d.root.Children {
dockerpatch.go:		if node.Value == command.From {
dockerpatch.go:			return strings.Split(node.Original, " ")[1]
dockerpatch.go:		}
dockerpatch.go:	}
dockerpatch.go:	return ""
dockerpatch.go:}
dockerpatch.go:// Length returns length of the AST
dockerpatch.go:func (d *Dockerfile) Length() int {
dockerpatch.go:	return len(d.root.Children)
dockerpatch.go:}
dockerpatch.go:// AppendLine parses and appends a new line to the AST
dockerpatch.go:func (d *Dockerfile) AppendLine(line string) error {
dockerpatch.go:	node, err := ParseLine(line)
dockerpatch.go:	if err != nil {
dockerpatch.go:		return err
dockerpatch.go:	}
dockerpatch.go:	return d.AppendNode(node)
dockerpatch.go:}
dockerpatch.go:// PrependLine parses and prepends a new line to the AST
dockerpatch.go:func (d *Dockerfile) PrependLine(line string) error {
dockerpatch.go:	node, err := ParseLine(line)
dockerpatch.go:	if err != nil {
dockerpatch.go:		return err
dockerpatch.go:	}
dockerpatch.go:	return d.PrependNode(node)
dockerpatch.go:}
dockerpatch.go:// AddLineAfterFrom parses and add a line after from in the AST
dockerpatch.go:func (d *Dockerfile) AddLineAfterFrom(line string) error {
dockerpatch.go:	node, err := ParseLine(line)
dockerpatch.go:	if err != nil {
dockerpatch.go:		return err
dockerpatch.go:	}
dockerpatch.go:	return d.AddNodeAfterFrom(node)
dockerpatch.go:}
dockerpatch.go:// AddNodeAfterFrom adds a node after from in the AST
dockerpatch.go:func (d *Dockerfile) AddNodeAfterFrom(node *parser.Node) error {
dockerpatch.go:	if d.Length() == 0 {
dockerpatch.go:		return d.AppendNode(node)
dockerpatch.go:	}
dockerpatch.go:	firstNode := d.root.Children[0]
dockerpatch.go:	if firstNode.Value != command.From {
dockerpatch.go:		return d.PrependNode(node)
dockerpatch.go:	}
dockerpatch.go:	newChildren := []*parser.Node{firstNode, node}
dockerpatch.go:	newChildren = append(newChildren, d.root.Children[1:]...)
dockerpatch.go:	d.root.Children = newChildren
dockerpatch.go:	return nil
dockerpatch.go:}
dockerpatch.go:// Replace tries to replace a string with another in each lines
dockerpatch.go:func (d *Dockerfile) Replace(from, to string) error {
dockerpatch.go:	for i, node := range d.root.Children {
dockerpatch.go:		if strings.Contains(node.Original, from) {
dockerpatch.go:			newNode, err := ParseLine(strings.Replace(node.Original, from, to, -1))
dockerpatch.go:			if err != nil {
dockerpatch.go:				return err
dockerpatch.go:			}
dockerpatch.go:			d.root.Children[i] = newNode
dockerpatch.go:		}
dockerpatch.go:	}
dockerpatch.go:	return nil
dockerpatch.go:}
dockerpatch.go:// GetNodesByType returns nodes matching a type
dockerpatch.go:func (d *Dockerfile) GetNodesByType(nodeType string) []*parser.Node {
dockerpatch.go:	output := []*parser.Node{}
dockerpatch.go:	for _, node := range d.root.Children {
dockerpatch.go:		if node.Value == nodeType {
dockerpatch.go:			output = append(output, node)
dockerpatch.go:		}
dockerpatch.go:	}
dockerpatch.go:	return output
dockerpatch.go:}
dockerpatch.go:// NodeGetArgs returns the arguments of a node
dockerpatch.go:func NodeGetArgs(node *parser.Node) []string {
dockerpatch.go:	return strings.Split(node.Original, " ")[1:]
dockerpatch.go:}
dockerpatch.go:// NodeGetLine returns the arguments of a node as a string
dockerpatch.go:func NodeGetLine(node *parser.Node) string {
dockerpatch.go:	return strings.Join(NodeGetArgs(node), " ")
dockerpatch.go:}
dockerpatch_test.go:package dockerpatch
dockerpatch_test.go:import (
dockerpatch_test.go:	"bytes"
dockerpatch_test.go:	"fmt"
dockerpatch_test.go:	"testing"
dockerpatch_test.go:	. "github.com/smartystreets/goconvey/convey"
dockerpatch_test.go:)
dockerpatch_test.go:const (
dockerpatch_test.go:	ExampleDockerfile = `FROM ubuntu:14.04
dockerpatch_test.go:# COMMENT
dockerpatch_test.go:RUN apt-get update && apt-get install wget -y
dockerpatch_test.go:RUN wget http://s3.amazonaws.com/influxdb/influxdb_latest_amd64.deb
dockerpatch_test.go:RUN dpkg -i influxdb_latest_amd64.deb
dockerpatch_test.go:RUN rm -r /opt/influxdb/shared
dockerpatch_test.go:VOLUME /opt/influxdb/shared
dockerpatch_test.go:CMD /usr/bin/influxdb --pidfile /var/run/influxdb.pid -config /opt/influxdb/shared/config.toml
dockerpatch_test.go:EXPOSE 8083
dockerpatch_test.go:EXPOSE 8086
dockerpatch_test.go:EXPOSE 8090
dockerpatch_test.go:EXPOSE 8099`
dockerpatch_test.go:	ExampleDockerfileDump = `(from "ubuntu:14.04")
dockerpatch_test.go:(run "apt-get update && apt-get install wget -y")
dockerpatch_test.go:(run "wget http://s3.amazonaws.com/influxdb/influxdb_latest_amd64.deb")
dockerpatch_test.go:(run "dpkg -i influxdb_latest_amd64.deb")
dockerpatch_test.go:(run "rm -r /opt/influxdb/shared")
dockerpatch_test.go:(volume "/opt/influxdb/shared")
dockerpatch_test.go:(cmd "/usr/bin/influxdb --pidfile /var/run/influxdb.pid -config /opt/influxdb/shared/config.toml")
dockerpatch_test.go:(expose "8083")
dockerpatch_test.go:(expose "8086")
dockerpatch_test.go:(expose "8090")
dockerpatch_test.go:(expose "8099")`
dockerpatch_test.go:	ExampleDockerfileString = `FROM ubuntu:14.04
dockerpatch_test.go:RUN apt-get update && apt-get install wget -y
dockerpatch_test.go:RUN wget http://s3.amazonaws.com/influxdb/influxdb_latest_amd64.deb
dockerpatch_test.go:RUN dpkg -i influxdb_latest_amd64.deb
dockerpatch_test.go:RUN rm -r /opt/influxdb/shared
dockerpatch_test.go:VOLUME /opt/influxdb/shared
dockerpatch_test.go:CMD /usr/bin/influxdb --pidfile /var/run/influxdb.pid -config /opt/influxdb/shared/config.toml
dockerpatch_test.go:EXPOSE 8083
dockerpatch_test.go:EXPOSE 8086
dockerpatch_test.go:EXPOSE 8090
dockerpatch_test.go:EXPOSE 8099`
dockerpatch_test.go:)
dockerpatch_test.go:func TestDockerfileFromString(t *testing.T) {
dockerpatch_test.go:	Convey("Testing DockerfileFromString", t, func() {
dockerpatch_test.go:		dockerfile, err := DockerfileFromString(ExampleDockerfile)
dockerpatch_test.go:		So(err, ShouldBeNil)
dockerpatch_test.go:		So(dockerfile.root, ShouldNotBeNil)
dockerpatch_test.go:		So(dockerfile.root.Dump(), ShouldEqual, ExampleDockerfileDump)
dockerpatch_test.go:	})
dockerpatch_test.go:}
dockerpatch_test.go:func TestDockerfileRead(t *testing.T) {
dockerpatch_test.go:	Convey("Testing DockerfileFromString", t, func() {
dockerpatch_test.go:		payload := new(bytes.Buffer)
dockerpatch_test.go:		payload.Write([]byte(ExampleDockerfile))
dockerpatch_test.go:		dockerfile, err := DockerfileRead(payload)
dockerpatch_test.go:		So(err, ShouldBeNil)
dockerpatch_test.go:		So(dockerfile.root, ShouldNotBeNil)
dockerpatch_test.go:		So(dockerfile.root.Dump(), ShouldEqual, ExampleDockerfileDump)
dockerpatch_test.go:	})
dockerpatch_test.go:}
dockerpatch_test.go:func TestDockerfile_String(t *testing.T) {
dockerpatch_test.go:	Convey("Testing Dockerfile.String", t, func() {
dockerpatch_test.go:		dockerfile, err := DockerfileFromString(ExampleDockerfile)
dockerpatch_test.go:		So(err, ShouldBeNil)
dockerpatch_test.go:		So(dockerfile.root, ShouldNotBeNil)
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, ExampleDockerfileString)
dockerpatch_test.go:		So(fmt.Sprintf("%s", dockerfile), ShouldEqual, ExampleDockerfileString)
dockerpatch_test.go:	})
dockerpatch_test.go:}
dockerpatch_test.go:func TestDockerfile_New(t *testing.T) {
dockerpatch_test.go:	Convey("Testing Dockerfile.New", t, func() {
dockerpatch_test.go:		dockerfile := DockerfileNew()
dockerpatch_test.go:		So(dockerfile, ShouldNotBeNil)
dockerpatch_test.go:	})
dockerpatch_test.go:}
dockerpatch_test.go:func TestDockerfile_AppendNode(t *testing.T) {
dockerpatch_test.go:	Convey("Testing Dockerfile.AppendNode()", t, func() {
dockerpatch_test.go:		dockerfile := DockerfileNew()
dockerpatch_test.go:		So(dockerfile, ShouldNotBeNil)
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 0)
dockerpatch_test.go:		for i := 0; i < 10; i++ {
dockerpatch_test.go:			node, err := ParseLine(fmt.Sprintf("RUN echo %d", i))
dockerpatch_test.go:			So(err, ShouldBeNil)
dockerpatch_test.go:			err = dockerfile.AppendNode(node)
dockerpatch_test.go:			So(err, ShouldBeNil)
dockerpatch_test.go:			So(dockerfile.Length(), ShouldEqual, i+1)
dockerpatch_test.go:		}
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 10)
dockerpatch_test.go:		expected := `RUN echo 0
dockerpatch_test.go:RUN echo 1
dockerpatch_test.go:RUN echo 2
dockerpatch_test.go:RUN echo 3
dockerpatch_test.go:RUN echo 4
dockerpatch_test.go:RUN echo 5
dockerpatch_test.go:RUN echo 6
dockerpatch_test.go:RUN echo 7
dockerpatch_test.go:RUN echo 8
dockerpatch_test.go:RUN echo 9`
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, expected)
dockerpatch_test.go:	})
dockerpatch_test.go:}
dockerpatch_test.go:func TestDockerfile_PrependNode(t *testing.T) {
dockerpatch_test.go:	Convey("Testing Dockerfile.PrependNode()", t, func() {
dockerpatch_test.go:		dockerfile := DockerfileNew()
dockerpatch_test.go:		So(dockerfile, ShouldNotBeNil)
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 0)
dockerpatch_test.go:		for i := 0; i < 10; i++ {
dockerpatch_test.go:			node, err := ParseLine(fmt.Sprintf("RUN echo %d", i))
dockerpatch_test.go:			So(err, ShouldBeNil)
dockerpatch_test.go:			err = dockerfile.PrependNode(node)
dockerpatch_test.go:			So(err, ShouldBeNil)
dockerpatch_test.go:			So(dockerfile.Length(), ShouldEqual, i+1)
dockerpatch_test.go:		}
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 10)
dockerpatch_test.go:		expected := `RUN echo 9
dockerpatch_test.go:RUN echo 8
dockerpatch_test.go:RUN echo 7
dockerpatch_test.go:RUN echo 6
dockerpatch_test.go:RUN echo 5
dockerpatch_test.go:RUN echo 4
dockerpatch_test.go:RUN echo 3
dockerpatch_test.go:RUN echo 2
dockerpatch_test.go:RUN echo 1
dockerpatch_test.go:RUN echo 0`
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, expected)
dockerpatch_test.go:	})
dockerpatch_test.go:}
dockerpatch_test.go:func TestDockerfile_AppendLine(t *testing.T) {
dockerpatch_test.go:	Convey("Testing Dockerfile.AppendLine()", t, func() {
dockerpatch_test.go:		dockerfile := DockerfileNew()
dockerpatch_test.go:		So(dockerfile, ShouldNotBeNil)
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 0)
dockerpatch_test.go:		for i := 0; i < 10; i++ {
dockerpatch_test.go:			err := dockerfile.AppendLine(fmt.Sprintf("RUN echo %d", i))
dockerpatch_test.go:			So(err, ShouldBeNil)
dockerpatch_test.go:			So(dockerfile.Length(), ShouldEqual, i+1)
dockerpatch_test.go:		}
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 10)
dockerpatch_test.go:		expected := `RUN echo 0
dockerpatch_test.go:RUN echo 1
dockerpatch_test.go:RUN echo 2
dockerpatch_test.go:RUN echo 3
dockerpatch_test.go:RUN echo 4
dockerpatch_test.go:RUN echo 5
dockerpatch_test.go:RUN echo 6
dockerpatch_test.go:RUN echo 7
dockerpatch_test.go:RUN echo 8
dockerpatch_test.go:RUN echo 9`
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, expected)
dockerpatch_test.go:	})
dockerpatch_test.go:}
dockerpatch_test.go:func TestDockerfile_PrependLine(t *testing.T) {
dockerpatch_test.go:	Convey("Testing Dockerfile.PrependLine()", t, func() {
dockerpatch_test.go:		dockerfile := DockerfileNew()
dockerpatch_test.go:		So(dockerfile, ShouldNotBeNil)
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 0)
dockerpatch_test.go:		for i := 0; i < 10; i++ {
dockerpatch_test.go:			err := dockerfile.PrependLine(fmt.Sprintf("RUN echo %d", i))
dockerpatch_test.go:			So(err, ShouldBeNil)
dockerpatch_test.go:			So(dockerfile.Length(), ShouldEqual, i+1)
dockerpatch_test.go:		}
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 10)
dockerpatch_test.go:		expected := `RUN echo 9
dockerpatch_test.go:RUN echo 8
dockerpatch_test.go:RUN echo 7
dockerpatch_test.go:RUN echo 6
dockerpatch_test.go:RUN echo 5
dockerpatch_test.go:RUN echo 4
dockerpatch_test.go:RUN echo 3
dockerpatch_test.go:RUN echo 2
dockerpatch_test.go:RUN echo 1
dockerpatch_test.go:RUN echo 0`
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, expected)
dockerpatch_test.go:	})
dockerpatch_test.go:}
dockerpatch_test.go:func TestDockerfile_RemoveNodesByType(t *testing.T) {
dockerpatch_test.go:	Convey("Testing Dockerfile.RemoveNodesByType", t, func() {
dockerpatch_test.go:		dockerfile, err := DockerfileFromString(ExampleDockerfile)
dockerpatch_test.go:		So(err, ShouldBeNil)
dockerpatch_test.go:		So(dockerfile.root, ShouldNotBeNil)
dockerpatch_test.go:		So(dockerfile.root.Dump(), ShouldEqual, ExampleDockerfileDump)
dockerpatch_test.go:	})
dockerpatch_test.go:}
dockerpatch_test.go:func TestDockerfile(t *testing.T) {
dockerpatch_test.go:	Convey("Testing Dockerfile", t, func() {
dockerpatch_test.go:		dockerfile := DockerfileNew()
dockerpatch_test.go:		So(dockerfile, ShouldNotBeNil)
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, "")
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 0)
dockerpatch_test.go:		So(dockerfile.From(), ShouldEqual, "")
dockerpatch_test.go:		err := dockerfile.SetFrom("ubuntu:latest")
dockerpatch_test.go:		So(err, ShouldBeNil)
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, "FROM ubuntu:latest")
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 1)
dockerpatch_test.go:		So(dockerfile.From(), ShouldEqual, "ubuntu:latest")
dockerpatch_test.go:		err = dockerfile.SetFrom("debian")
dockerpatch_test.go:		So(err, ShouldBeNil)
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, "FROM debian")
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 1)
dockerpatch_test.go:		So(dockerfile.From(), ShouldEqual, "debian")
dockerpatch_test.go:		err = dockerfile.AppendLine("RUN echo hello world")
dockerpatch_test.go:		So(err, ShouldBeNil)
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, "FROM debian\nRUN echo hello world")
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 2)
dockerpatch_test.go:		err = dockerfile.AppendLine("RUN echo goodbye world")
dockerpatch_test.go:		So(err, ShouldBeNil)
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, "FROM debian\nRUN echo hello world\nRUN echo goodbye world")
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 3)
dockerpatch_test.go:		err = dockerfile.AddLineAfterFrom("RUN echo after from")
dockerpatch_test.go:		So(err, ShouldBeNil)
dockerpatch_test.go:		So(dockerfile.String(), ShouldEqual, "FROM debian\nRUN echo after from\nRUN echo hello world\nRUN echo goodbye world")
dockerpatch_test.go:		So(dockerfile.Length(), ShouldEqual, 4)
dockerpatch_test.go:	})
dockerpatch_test.go:}
filters.go:package dockerpatch
filters.go:import (
filters.go:	"fmt"
filters.go:	"strings"
filters.go:	"github.com/docker/docker/builder/dockerfile/command"
filters.go:)
filters.go:func stdFromToArm(input string) string {
filters.go:	return fmt.Sprintf("armbuild/%s", strings.Replace(input, "/", "-", -1))
filters.go:}
filters.go:func (d *Dockerfile) FilterToArm(destArchitecture string) error {
filters.go:	d.SetFrom(stdFromToArm(d.From()))
filters.go:	d.Replace("amd64", destArchitecture)
filters.go:	d.Replace("x86_64", destArchitecture)
filters.go:	d.Replace("i386", destArchitecture)
filters.go:	return nil
filters.go:}
filters.go:func (d *Dockerfile) FilterDisableNetwork() error {
filters.go:	d.RemoveNodesByType(command.Expose)
filters.go:	return nil
filters.go:}
filters.go:func (d *Dockerfile) combineNodesByType(nodeType string) error {
filters.go:	combinedArgs := []string{}
filters.go:	for _, node := range d.GetNodesByType(nodeType) {
filters.go:		nodeArgs := strings.Split(node.Original, " ")[1:]
filters.go:		combinedArgs = append(combinedArgs, nodeArgs...)
filters.go:	}
filters.go:	d.RemoveNodesByType(nodeType)
filters.go:	if len(combinedArgs) > 0 {
filters.go:		d.AppendLine(fmt.Sprintf("%s %s", strings.ToUpper(nodeType), strings.Join(combinedArgs, " ")))
filters.go:	}
filters.go:	return nil
filters.go:}
filters.go:func (d *Dockerfile) combineFollowingRunNodes() error {
filters.go:	hasChanged := true
filters.go:	for hasChanged {
filters.go:		hasChanged = false
filters.go:		for i, node := range d.root.Children {
filters.go:			switch node.Value {
filters.go:			case command.Run:
filters.go:				if i >= d.Length()-1 {
filters.go:					continue
filters.go:				}
filters.go:				next := d.root.Children[i+1]
filters.go:				if next.Value == command.Run {
filters.go:					nodeCommand := NodeGetLine(node)
filters.go:					nextCommand := NodeGetLine(next)
filters.go:					combined := fmt.Sprintf("RUN %s && %s", nodeCommand, nextCommand)
filters.go:					newNode, err := ParseLine(combined)
filters.go:					if err != nil {
filters.go:						return err
filters.go:					}
filters.go:					d.root.Children[i] = newNode
filters.go:					d.RemoveAt(i + 1)
filters.go:					hasChanged = true
filters.go:					break
filters.go:				}
filters.go:			}
filters.go:		}
filters.go:	}
filters.go:	return nil
filters.go:}
filters.go:func (d *Dockerfile) FilterOptimize() error {
filters.go:	if err := d.combineNodesByType(command.Expose); err != nil {
filters.go:		return err
filters.go:	}
filters.go:	if err := d.combineFollowingRunNodes(); err != nil {
filters.go:		return err
filters.go:	}
filters.go:	return nil
filters.go:}
filters_test.go:package dockerpatch
filters_test.go:import (
filters_test.go:	"testing"
filters_test.go:	. "github.com/smartystreets/goconvey/convey"
filters_test.go:)
filters_test.go:const (
filters_test.go:	ExampleDockerfileArmString = `FROM armbuild/ubuntu:14.04
filters_test.go:RUN apt-get update && apt-get install wget -y
filters_test.go:RUN wget http://s3.amazonaws.com/influxdb/influxdb_latest_armhf.deb
filters_test.go:RUN dpkg -i influxdb_latest_armhf.deb
filters_test.go:RUN rm -r /opt/influxdb/shared
filters_test.go:VOLUME /opt/influxdb/shared
filters_test.go:CMD /usr/bin/influxdb --pidfile /var/run/influxdb.pid -config /opt/influxdb/shared/config.toml
filters_test.go:EXPOSE 8083
filters_test.go:EXPOSE 8086
filters_test.go:EXPOSE 8090
filters_test.go:EXPOSE 8099`
filters_test.go:	ExampleDockerfileDisableNetworkString = `FROM ubuntu:14.04
filters_test.go:RUN apt-get update && apt-get install wget -y
filters_test.go:RUN wget http://s3.amazonaws.com/influxdb/influxdb_latest_amd64.deb
filters_test.go:RUN dpkg -i influxdb_latest_amd64.deb
filters_test.go:RUN rm -r /opt/influxdb/shared
filters_test.go:VOLUME /opt/influxdb/shared
filters_test.go:CMD /usr/bin/influxdb --pidfile /var/run/influxdb.pid -config /opt/influxdb/shared/config.toml`
filters_test.go:	ExampleDockerfileOptimizeString = `FROM ubuntu:14.04
filters_test.go:RUN apt-get update && apt-get install wget -y && wget http://s3.amazonaws.com/influxdb/influxdb_latest_amd64.deb && dpkg -i influxdb_latest_amd64.deb && rm -r /opt/influxdb/shared
filters_test.go:VOLUME /opt/influxdb/shared
filters_test.go:CMD /usr/bin/influxdb --pidfile /var/run/influxdb.pid -config /opt/influxdb/shared/config.toml
filters_test.go:EXPOSE 8083 8086 8090 8099`
filters_test.go:)
filters_test.go:func TestDockerfile_FilterToArm(t *testing.T) {
filters_test.go:	Convey("Testing Dockerfile.FilterToArm", t, func() {
filters_test.go:		dockerfile, err := DockerfileFromString(ExampleDockerfile)
filters_test.go:		So(err, ShouldBeNil)
filters_test.go:		err = dockerfile.FilterToArm("armhf")
filters_test.go:		So(err, ShouldBeNil)
filters_test.go:		So(dockerfile.String(), ShouldEqual, ExampleDockerfileArmString)
filters_test.go:	})
filters_test.go:}
filters_test.go:func TestDockerfile_FilterDisableNetwork(t *testing.T) {
filters_test.go:	Convey("Testing Dockerfile.FilterDisableNetwork", t, func() {
filters_test.go:		dockerfile, err := DockerfileFromString(ExampleDockerfile)
filters_test.go:		So(err, ShouldBeNil)
filters_test.go:		err = dockerfile.FilterDisableNetwork()
filters_test.go:		So(err, ShouldBeNil)
filters_test.go:		So(dockerfile.String(), ShouldEqual, ExampleDockerfileDisableNetworkString)
filters_test.go:	})
filters_test.go:}
filters_test.go:func TestDockerfile_FilterOptimize(t *testing.T) {
filters_test.go:	Convey("Testing Dockerfile.FilterOptimize", t, func() {
filters_test.go:		dockerfile, err := DockerfileFromString(ExampleDockerfile)
filters_test.go:		So(err, ShouldBeNil)
filters_test.go:		err = dockerfile.FilterOptimize()
filters_test.go:		So(err, ShouldBeNil)
filters_test.go:		So(dockerfile.String(), ShouldEqual, ExampleDockerfileOptimizeString)
filters_test.go:	})
filters_test.go:}
Makefile:alL: test
Makefile:.PHONY: build
Makefile:build:
Makefile:	@echo "Nothing to do."
Makefile:.PHONY: test
Makefile:test:
Makefile:	go get -t ./...
Makefile:	go test -v ./...
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	go get github.com/smartystreets/goconvey
Makefile:	go get -t ./...
Makefile:	goconvey -cover -port=9042 -workDir="$(realpath .)" -depth=1
Makefile:.PHONY: cover
Makefile:cover:
Makefile:	go get -t ./...
Makefile:	rm -f profile.out
Makefile:	go test -covermode=count -coverpkg=. -coverprofile=profile.out .
city-list.go:package sncf
city-list.go:import (
city-list.go:	"encoding/json"
city-list.go:	"strings"
city-list.go:	"github.com/parnurzeal/gorequest"
city-list.go:)
city-list.go:type City string
city-list.go:type CityListResponse struct {
city-list.go:	Cities []City `json:"CITIES"`
city-list.go:}
city-list.go:func GetCityList() ([]City, error) {
city-list.go:	url := "http://www.sncf.com/theme/js/cityList.js"
city-list.go:	request := gorequest.New()
city-list.go:	var result CityListResponse
city-list.go:	_, body, errs := request.Get(url).End()
city-list.go:	if len(errs) > 0 {
city-list.go:		// FIXME: concat errors
city-list.go:		return nil, errs[0]
city-list.go:	}
city-list.go:	body = strings.TrimSpace(body)
city-list.go:	body = body[strings.Index(body, "{"):]
city-list.go:	body = body[:len(body)-1]
city-list.go:	if err := json.Unmarshal([]byte(body), &result); err != nil {
city-list.go:		return nil, err
city-list.go:	}
city-list.go:	return result.Cities, nil
city-list.go:}
city-list_test.go:package sncf
city-list_test.go:import (
city-list_test.go:	"os"
city-list_test.go:	"testing"
city-list_test.go:	. "github.com/smartystreets/goconvey/convey"
city-list_test.go:)
city-list_test.go:func TestGetCityList(t *testing.T) {
city-list_test.go:	Convey("Testing GetCityList", t, func() {
city-list_test.go:		if os.Getenv("SKIP_NETWORK_TESTS") == "1" {
city-list_test.go:			t.Skip()
city-list_test.go:		}
city-list_test.go:		cities, err := GetCityList()
city-list_test.go:		So(err, ShouldBeNil)
city-list_test.go:		So(len(cities) >= 4233, ShouldBeTrue)
city-list_test.go:		So(cities[0], ShouldEqual, "Aéroport Paris - Roissy - Charles-de-Gaulle (CDG 2) - Gare TGV")
city-list_test.go:	})
city-list_test.go:}
train-times.go:package sncf
train-times.go:import (
train-times.go:	"encoding/json"
train-times.go:	"fmt"
train-times.go:	"github.com/parnurzeal/gorequest"
train-times.go:)
train-times.go:type TrainTimesDeparture struct {
train-times.go:	OrigDest string `json:"origdest"`
train-times.go:	Num      string `json:"num"`
train-times.go:	Type     string `json:"type"`
train-times.go:	Picto    string `json:"picto"`
train-times.go:	Voie     string `json:"voie"`
train-times.go:	VoieAttr string `json:"voie_attr"`
train-times.go:	Heure    string `json:"heure"`
train-times.go:	Etat     string `json:"etat"`
train-times.go:	Retard   string `json:"retard"`
train-times.go:	Infos    string `json:"infos"`
train-times.go:}
train-times.go:type TrainTimesDepartures struct {
train-times.go:	Trains  []TrainTimesDeparture `json:"trains"`
train-times.go:	Updated string                `json:"updated"`
train-times.go:}
train-times.go:func GetTrainTimesDeparture(cityCode string) (*TrainTimesDepartures, error) {
train-times.go:	url := fmt.Sprintf("http://www.gares-sncf.com/fr/train-times/departure/%s/gl", cityCode)
train-times.go:	request := gorequest.New()
train-times.go:	var result TrainTimesDepartures
train-times.go:	_, body, errs := request.Get(url).End()
train-times.go:	if len(errs) > 0 {
train-times.go:		// FIXME: concat errors
train-times.go:		return nil, errs[0]
train-times.go:	}
train-times.go:	if err := json.Unmarshal([]byte(body), &result); err != nil {
train-times.go:		return nil, err
train-times.go:	}
train-times.go:	return &result, nil
train-times.go:}
train-times_test.go:package sncf
train-times_test.go:import (
train-times_test.go:	"os"
train-times_test.go:	"testing"
train-times_test.go:	. "github.com/smartystreets/goconvey/convey"
train-times_test.go:)
train-times_test.go:func TestGetTrainTimesDeparture(t *testing.T) {
train-times_test.go:	Convey("Testing GetTrainTimesDeparture", t, func() {
train-times_test.go:		if os.Getenv("SKIP_NETWORK_TESTS") == "1" {
train-times_test.go:			t.Skip()
train-times_test.go:		}
train-times_test.go:		result, err := GetTrainTimesDeparture("RRD")
train-times_test.go:		So(err, ShouldBeNil)
train-times_test.go:		trains := result.Trains
train-times_test.go:		So(len(trains), ShouldEqual, 20)
train-times_test.go:		firstTrain := trains[0]
train-times_test.go:		So(firstTrain.OrigDest, ShouldNotBeEmpty)
train-times_test.go:		So(firstTrain.Num, ShouldNotBeEmpty)
train-times_test.go:		So(firstTrain.Heure, ShouldNotBeEmpty)
train-times_test.go:	})
train-times_test.go:}
Makefile:# Project-specific variables
Makefile:CONVEY_PORT ?=	9042
Makefile:# Common variables
Makefile:SOURCES :=	$(shell find . -type f -name "*.go")
Makefile:GOENV ?=	GO15VENDOREXPERIMENT=1
Makefile:GO ?=		$(GOENV) go
Makefile:GODEP ?=	$(GOENV) godep
Makefile:USER ?=		$(shell whoami)
Makefile:all:	build
Makefile:.PHONY: build
Makefile:build:
Makefile:	echo "nothing to do"
Makefile:.PHONY: test
Makefile:test:
Makefile:	$(GO) get -t .
Makefile:	$(GO) test -v .
Makefile:.PHONY: godep-save
Makefile:godep-save:
Makefile:	$(GODEP) save $(PACKAGES) $(COMMANDS)
Makefile:.PHONY: re
Makefile:re:	clean all
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	$(GO) get github.com/smartystreets/goconvey
Makefile:	goconvey -cover -port=$(CONVEY_PORT) -workDir="$(realpath .)" -depth=1
Makefile:.PHONY:	cover
Makefile:cover:	profile.out
Makefile:profile.out:	$(SOURCES)
Makefile:	rm -f $@
Makefile:	$(GO) test -covermode=count -coverpkg=. -coverprofile=$@ .
http2curl.go:package http2curl
http2curl.go:import (
http2curl.go:	"bytes"
http2curl.go:	"fmt"
http2curl.go:	"io"
http2curl.go:	"io/ioutil"
http2curl.go:	"net/http"
http2curl.go:	"sort"
http2curl.go:	"strings"
http2curl.go:)
http2curl.go:// CurlCommand contains exec.Command compatible slice + helpers
http2curl.go:type CurlCommand struct {
http2curl.go:	slice []string
http2curl.go:}
http2curl.go:// append appends a string to the CurlCommand
http2curl.go:func (c *CurlCommand) append(newSlice ...string) {
http2curl.go:	c.slice = append(c.slice, newSlice...)
http2curl.go:}
http2curl.go:// String returns a ready to copy/paste command
http2curl.go:func (c *CurlCommand) String() string {
http2curl.go:	slice := make([]string, len(c.slice))
http2curl.go:	copy(slice, c.slice)
http2curl.go:	for i := range slice {
http2curl.go:		quoted := fmt.Sprintf("%q", slice[i])
http2curl.go:		if strings.Contains(slice[i], " ") || len(quoted) != len(slice[i])+2 {
http2curl.go:			slice[i] = quoted
http2curl.go:		}
http2curl.go:	}
http2curl.go:	return strings.Join(slice, " ")
http2curl.go:}
http2curl.go:// nopCloser is used to create a new io.ReadCloser for req.Body
http2curl.go:type nopCloser struct {
http2curl.go:	io.Reader
http2curl.go:}
http2curl.go:func (nopCloser) Close() error { return nil }
http2curl.go:// GetCurlCommand returns a CurlCommand corresponding to an http.Request
http2curl.go:func GetCurlCommand(req *http.Request) (*CurlCommand, error) {
http2curl.go:	command := CurlCommand{}
http2curl.go:	command.append("curl")
http2curl.go:	command.append("-X", req.Method)
http2curl.go:	if req.Body != nil {
http2curl.go:		body, err := ioutil.ReadAll(req.Body)
http2curl.go:		if err != nil {
http2curl.go:			return nil, err
http2curl.go:		}
http2curl.go:		req.Body = nopCloser{bytes.NewBuffer(body)}
http2curl.go:		command.append("-d", fmt.Sprintf("%s", bytes.Trim(body, "\n")))
http2curl.go:	}
http2curl.go:	var keys []string
http2curl.go:	for k := range req.Header {
http2curl.go:		keys = append(keys, k)
http2curl.go:	}
http2curl.go:	sort.Strings(keys)
http2curl.go:	for _, k := range keys {
http2curl.go:		command.append("-H", fmt.Sprintf("%s: %s", k, strings.Join(req.Header[k], " ")))
http2curl.go:	}
http2curl.go:	command.append(req.URL.String())
http2curl.go:	return &command, nil
http2curl.go:}
http2curl_test.go:package http2curl
http2curl_test.go:import (
http2curl_test.go:	"bytes"
http2curl_test.go:	"fmt"
http2curl_test.go:	"net/http"
http2curl_test.go:	"testing"
http2curl_test.go:	. "github.com/smartystreets/goconvey/convey"
http2curl_test.go:)
http2curl_test.go:func ExampleGetCurlCommand() {
http2curl_test.go:	req, _ := http.NewRequest("PUT", "http://www.example.com/abc/def.ghi?jlk=mno&pqr=stu", bytes.NewBufferString(`{"hello":"world","answer":42}`))
http2curl_test.go:	req.Header.Set("Content-Type", "application/json")
http2curl_test.go:	command, _ := GetCurlCommand(req)
http2curl_test.go:	fmt.Println(command)
http2curl_test.go:	// Output:
http2curl_test.go:	// curl -X PUT -d "{\"hello\":\"world\",\"answer\":42}" -H "Content-Type: application/json" http://www.example.com/abc/def.ghi?jlk=mno&pqr=stu
http2curl_test.go:}
http2curl_test.go:func TestGetCurlCommand(t *testing.T) {
http2curl_test.go:	Convey("Testing http2curl", t, func() {
http2curl_test.go:		uri := "http://www.example.com/abc/def.ghi?jlk=mno&pqr=stu"
http2curl_test.go:		payload := new(bytes.Buffer)
http2curl_test.go:		payload.Write([]byte(`{"hello":"world","answer":42}`))
http2curl_test.go:		req, err := http.NewRequest("PUT", uri, payload)
http2curl_test.go:		So(err, ShouldBeNil)
http2curl_test.go:		req.Header.Set("X-Auth-Token", "private-token")
http2curl_test.go:		req.Header.Set("Content-Type", "application/json")
http2curl_test.go:		command, err := GetCurlCommand(req)
http2curl_test.go:		So(err, ShouldBeNil)
http2curl_test.go:		expected := `curl -X PUT -d "{\"hello\":\"world\",\"answer\":42}" -H "Content-Type: application/json" -H "X-Auth-Token: private-token" http://www.example.com/abc/def.ghi?jlk=mno&pqr=stu`
http2curl_test.go:		So(command.String(), ShouldEqual, expected)
http2curl_test.go:	})
http2curl_test.go:}
Makefile:test:
Makefile:	@echo "Checking if './bin/iocat' runs without syntax error"
Makefile:	./bin/iocat --help
Makefile:build:
Makefile:	coffee -c -o lib src
Makefile:watch:
Makefile:	coffee -w -c -o lib src
bin/iocat:#!/usr/bin/env node
bin/iocat:var path = require('path');
bin/iocat:var fs   = require('fs');
bin/iocat:var lib  = path.join(path.dirname(fs.realpathSync(__filename)), '../lib');
bin/iocat:require(lib + '/Program').run();
index.js:module.exports = {
index.js:    Client:  require('lib/Client'),
index.js:    Program: require('lib/Program'),
index.js:    Shell:   require('lib/Shell'),
index.js:    Url:     require('lib/Url')
index.js:};
lib/Base.js:// Generated by CoffeeScript 1.10.0
lib/Base.js:(function() {
lib/Base.js:  var Base, EventEmitter,
lib/Base.js:    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
lib/Base.js:    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
lib/Base.js:    hasProp = {}.hasOwnProperty,
lib/Base.js:    slice = [].slice;
lib/Base.js:  EventEmitter = require('events').EventEmitter;
lib/Base.js:  Base = (function(superClass) {
lib/Base.js:    extend(Base, superClass);
lib/Base.js:    function Base() {
lib/Base.js:      this.log = bind(this.log, this);
lib/Base.js:      return Base.__super__.constructor.apply(this, arguments);
lib/Base.js:    }
lib/Base.js:    Base.prototype.log = function() {
lib/Base.js:      var args, name, ref, ref1;
lib/Base.js:      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
lib/Base.js:      if (!this.options.verbose) {
lib/Base.js:        return false;
lib/Base.js:      }
lib/Base.js:      name = (typeof this !== "undefined" && this !== null ? (ref = this.constructor) != null ? typeof ref.toString === "function" ? (ref1 = ref.toString().match(/function\s*(\w+)/)) != null ? ref1[1] : void 0 : void 0 : void 0 : void 0) || 'ApiBase';
lib/Base.js:      return console.log.apply(console, [name + ">"].concat(slice.call(args)));
lib/Base.js:    };
lib/Base.js:    return Base;
lib/Base.js:  })(EventEmitter);
lib/Base.js:  module.exports = {
lib/Base.js:    Base: Base
lib/Base.js:  };
lib/Base.js:}).call(this);
lib/Program.js:// Generated by CoffeeScript 1.10.0
lib/Program.js:(function() {
lib/Program.js:  var Program, Url, fs, program,
lib/Program.js:    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
lib/Program.js:    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
lib/Program.js:    hasProp = {}.hasOwnProperty;
lib/Program.js:  fs = require('fs');
lib/Program.js:  program = require('commander');
lib/Program.js:  Url = require('./Url').Url;
lib/Program.js:  Program = (function() {
lib/Program.js:    function Program(options1) {
lib/Program.js:      var base;
lib/Program.js:      this.options = options1 != null ? options1 : {};
lib/Program.js:      this.run = bind(this.run, this);
lib/Program.js:      this.runServer = bind(this.runServer, this);
lib/Program.js:      this.runClient = bind(this.runClient, this);
lib/Program.js:      this.initSIOServer = bind(this.initSIOServer, this);
lib/Program.js:      this.initWSServer = bind(this.initWSServer, this);
lib/Program.js:      this.initSIOClient = bind(this.initSIOClient, this);
lib/Program.js:      this.initWSClient = bind(this.initWSClient, this);
lib/Program.js:      this.initShell = bind(this.initShell, this);
lib/Program.js:      this.parseOptions = bind(this.parseOptions, this);
lib/Program.js:      if ((base = this.options).name == null) {
lib/Program.js:        base.name = 'iocat';
lib/Program.js:      }
lib/Program.js:      this.initCommander();
lib/Program.js:      return this;
lib/Program.js:    }
lib/Program.js:    Program.prototype.initCommander = function() {
lib/Program.js:      program.name = this.options.name;
lib/Program.js:      return program.version(Program.getVersion()).usage('[options] URL').option('-v, --verbose', 'verbose').option('-l, --listen', 'Start in listen mode, creating a server').option('-p, --local-port <port>', 'Specify local port for remote conntects', parseInt).option('--socketio', 'Use socket.io').option('-k, --keep-listen', 'Keep inbound sockets open for multiple connects').option('-e, --emit-key <key>', 'Emit-key, default is "message"', "message");
lib/Program.js:    };
lib/Program.js:    Program.getVersion = function() {
lib/Program.js:      return JSON.parse(fs.readFileSync(__dirname + "/../package.json", 'utf8')).version;
lib/Program.js:    };
lib/Program.js:    Program.prototype.parseOptions = function() {
lib/Program.js:      program.parse(process.argv);
lib/Program.js:      return extend(this.options, program);
lib/Program.js:    };
lib/Program.js:    Program.prototype.initShell = function() {
lib/Program.js:      var Shell;
lib/Program.js:      Shell = require('./Shell').Shell;
lib/Program.js:      this.shell = new Shell;
lib/Program.js:      return this.shell.start();
lib/Program.js:    };
lib/Program.js:    Program.prototype.initWSClient = function(destString) {
lib/Program.js:      var WSClient, dest;
lib/Program.js:      WSClient = require('./WSClient').WSClient;
lib/Program.js:      dest = new Url(destString);
lib/Program.js:      this.client = new WSClient(dest, this.options);
lib/Program.js:      return this.client.start();
lib/Program.js:    };
lib/Program.js:    Program.prototype.initSIOClient = function(destString) {
lib/Program.js:      var SIOClient, dest;
lib/Program.js:      SIOClient = require('./SIOClient').SIOClient;
lib/Program.js:      dest = new Url(destString);
lib/Program.js:      this.client = new SIOClient(dest, this.options);
lib/Program.js:      return this.client.start();
lib/Program.js:    };
lib/Program.js:    Program.prototype.initWSServer = function() {
lib/Program.js:      var WSServer;
lib/Program.js:      WSServer = require('./WSServer').WSServer;
lib/Program.js:      this.server = new WSServer(this.options);
lib/Program.js:      return this.server.start();
lib/Program.js:    };
lib/Program.js:    Program.prototype.initSIOServer = function() {
lib/Program.js:      var SIOServer;
lib/Program.js:      SIOServer = require('./SIOServer').SIOServer;
lib/Program.js:      this.server = new SIOServer(this.options);
lib/Program.js:      return this.server.start();
lib/Program.js:    };
lib/Program.js:    Program.prototype.runClient = function(destString) {
lib/Program.js:      this.initShell();
lib/Program.js:      if (this.options.socketio) {
lib/Program.js:        this.initSIOClient(destString);
lib/Program.js:      } else {
lib/Program.js:        this.initWSClient(destString);
lib/Program.js:      }
lib/Program.js:      this.shell.on('line', (function(_this) {
lib/Program.js:        return function(d) {
lib/Program.js:          return _this.client.send(d);
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      this.client.on('error', (function(_this) {
lib/Program.js:        return function(err) {
lib/Program.js:          console.log('client.on error');
lib/Program.js:          return _this.shell.exit(0);
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      this.client.on('data', (function(_this) {
lib/Program.js:        return function(d) {
lib/Program.js:          _this.shell.stdin.pause();
lib/Program.js:          _this.shell.send(d);
lib/Program.js:          return _this.shell.stdin.resume();
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      this.client.on(this.options.emitKey, (function(_this) {
lib/Program.js:        return function(d) {
lib/Program.js:          return _this.shell.send(d);
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      this.client.on('close', (function(_this) {
lib/Program.js:        return function() {
lib/Program.js:          console.log('client.on close');
lib/Program.js:          _this.shell.stdin.pause();
lib/Program.js:          _this.shell.send("\nconnection closed by foreign host.");
lib/Program.js:          _this.shell.close();
lib/Program.js:          return _this.shell.exit(0);
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      this.client.on('open', (function(_this) {
lib/Program.js:        return function() {
lib/Program.js:          return _this.shell.send("Connection to " + destString + " succeeded!");
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      return this.shell.on('SIGINT', (function(_this) {
lib/Program.js:        return function() {
lib/Program.js:          console.log('shell.on SIGINT');
lib/Program.js:          _this.shell.stdin.pause();
lib/Program.js:          _this.shell.send("\nending session");
lib/Program.js:          _this.shell.close();
lib/Program.js:          _this.client.end();
lib/Program.js:          return _this.shell.exit(0);
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:    };
lib/Program.js:    Program.prototype.runServer = function() {
lib/Program.js:      this.initShell();
lib/Program.js:      if (this.options.socketio) {
lib/Program.js:        this.initSIOServer();
lib/Program.js:      } else {
lib/Program.js:        this.initWSServer();
lib/Program.js:      }
lib/Program.js:      this.shell.on('line', (function(_this) {
lib/Program.js:        return function(d) {
lib/Program.js:          return _this.server.send(d);
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      this.server.on('error', (function(_this) {
lib/Program.js:        return function(err) {
lib/Program.js:          console.log('server.on error');
lib/Program.js:          return _this.shell.exit(0);
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      this.server.on(this.options.emitKey, (function(_this) {
lib/Program.js:        return function(d) {
lib/Program.js:          return _this.shell.send(d);
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      this.server.on('connection', (function(_this) {
lib/Program.js:        return function() {
lib/Program.js:          return console.log('New connection');
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      this.server.on('close', (function(_this) {
lib/Program.js:        return function() {
lib/Program.js:          _this.shell.stdin.pause();
lib/Program.js:          _this.shell.send("\nconnection closed by foreign host.");
lib/Program.js:          if (!_this.options.keepListen) {
lib/Program.js:            _this.shell.close();
lib/Program.js:            return _this.shell.exit(0);
lib/Program.js:          }
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:      return this.shell.on('SIGINT', (function(_this) {
lib/Program.js:        return function() {
lib/Program.js:          console.log('shell.on SIGINT');
lib/Program.js:          _this.shell.stdin.pause();
lib/Program.js:          _this.shell.send("\nending session");
lib/Program.js:          _this.shell.close();
lib/Program.js:          _this.server.end();
lib/Program.js:          return _this.shell.exit(0);
lib/Program.js:        };
lib/Program.js:      })(this));
lib/Program.js:    };
lib/Program.js:    Program.prototype.run = function() {
lib/Program.js:      var ref;
lib/Program.js:      this.parseOptions();
lib/Program.js:      if (((ref = this.options.args) != null ? ref.length : void 0) === 1) {
lib/Program.js:        return this.runClient(this.options.args[0]);
lib/Program.js:      } else if (this.options.listen) {
lib/Program.js:        return this.runServer();
lib/Program.js:      } else {
lib/Program.js:        return program.help();
lib/Program.js:      }
lib/Program.js:    };
lib/Program.js:    Program.create = function(options) {
lib/Program.js:      if (options == null) {
lib/Program.js:        options = {};
lib/Program.js:      }
lib/Program.js:      return new Program(options);
lib/Program.js:    };
lib/Program.js:    Program.run = function() {
lib/Program.js:      var prog;
lib/Program.js:      prog = Program.create();
lib/Program.js:      return prog.run();
lib/Program.js:    };
lib/Program.js:    return Program;
lib/Program.js:  })();
lib/Program.js:  module.exports = {
lib/Program.js:    Program: Program,
lib/Program.js:    create: Program.create,
lib/Program.js:    run: Program.run
lib/Program.js:  };
lib/Program.js:}).call(this);
lib/SIOClient.js:// Generated by CoffeeScript 1.10.0
lib/SIOClient.js:(function() {
lib/SIOClient.js:  var Base, SIOClient, io,
lib/SIOClient.js:    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
lib/SIOClient.js:    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
lib/SIOClient.js:    hasProp = {}.hasOwnProperty,
lib/SIOClient.js:    slice = [].slice;
lib/SIOClient.js:  Base = require('./Base').Base;
lib/SIOClient.js:  io = require('socket.io-client');
lib/SIOClient.js:  SIOClient = (function(superClass) {
lib/SIOClient.js:    extend(SIOClient, superClass);
lib/SIOClient.js:    function SIOClient(url, options) {
lib/SIOClient.js:      this.url = url;
lib/SIOClient.js:      this.options = options != null ? options : {};
lib/SIOClient.js:      this.onMessage = bind(this.onMessage, this);
lib/SIOClient.js:      this.onError = bind(this.onError, this);
lib/SIOClient.js:      this.onClose = bind(this.onClose, this);
lib/SIOClient.js:      this.onOpen = bind(this.onOpen, this);
lib/SIOClient.js:      this.onConnect = bind(this.onConnect, this);
lib/SIOClient.js:      this.end = bind(this.end, this);
lib/SIOClient.js:      this.send = bind(this.send, this);
lib/SIOClient.js:      this.start = bind(this.start, this);
lib/SIOClient.js:      return this;
lib/SIOClient.js:    }
lib/SIOClient.js:    SIOClient.prototype.start = function() {
lib/SIOClient.js:      var href;
lib/SIOClient.js:      this.log('SIOClient: url->', this.url.format());
lib/SIOClient.js:      href = this.url.format();
lib/SIOClient.js:      this.io = io.connect(this.url.format());
lib/SIOClient.js:      this.io.on('open', this.onOpen);
lib/SIOClient.js:      this.io.on('close', this.onClose);
lib/SIOClient.js:      this.io.on('error', this.onError);
lib/SIOClient.js:      this.io.on(this.options.emitKey, this.onMessage);
lib/SIOClient.js:      return this.io.on('connect', this.onConnect);
lib/SIOClient.js:    };
lib/SIOClient.js:    SIOClient.prototype.send = function(d) {
lib/SIOClient.js:      this.log('send', d);
lib/SIOClient.js:      return this.io.emit(this.options.emitKey, d);
lib/SIOClient.js:    };
lib/SIOClient.js:    SIOClient.prototype.end = function() {
lib/SIOClient.js:      this.log('end');
lib/SIOClient.js:      return this.io.disconnect();
lib/SIOClient.js:    };
lib/SIOClient.js:    SIOClient.prototype.onConnect = function() {
lib/SIOClient.js:      this.log('onConnect');
lib/SIOClient.js:      return this.emit('connect');
lib/SIOClient.js:    };
lib/SIOClient.js:    SIOClient.prototype.onOpen = function() {
lib/SIOClient.js:      this.log('onOpen');
lib/SIOClient.js:      return this.emit('open');
lib/SIOClient.js:    };
lib/SIOClient.js:    SIOClient.prototype.onClose = function() {
lib/SIOClient.js:      this.log('onClose');
lib/SIOClient.js:      return this.emit('close');
lib/SIOClient.js:    };
lib/SIOClient.js:    SIOClient.prototype.onError = function(err) {
lib/SIOClient.js:      this.log('onError', err);
lib/SIOClient.js:      return this.emit('error', err);
lib/SIOClient.js:    };
lib/SIOClient.js:    SIOClient.prototype.onMessage = function() {
lib/SIOClient.js:      var msg;
lib/SIOClient.js:      msg = 1 <= arguments.length ? slice.call(arguments, 0) : [];
lib/SIOClient.js:      this.log('onMessage', msg);
lib/SIOClient.js:      return this.emit(this.options.emitKey, msg);
lib/SIOClient.js:    };
lib/SIOClient.js:    return SIOClient;
lib/SIOClient.js:  })(Base);
lib/SIOClient.js:  module.exports = {
lib/SIOClient.js:    SIOClient: SIOClient
lib/SIOClient.js:  };
lib/SIOClient.js:}).call(this);
lib/SIOServer.js:// Generated by CoffeeScript 1.10.0
lib/SIOServer.js:(function() {
lib/SIOServer.js:  var Base, SIOServer, io,
lib/SIOServer.js:    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
lib/SIOServer.js:    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
lib/SIOServer.js:    hasProp = {}.hasOwnProperty;
lib/SIOServer.js:  Base = require('./Base').Base;
lib/SIOServer.js:  io = require('socket.io');
lib/SIOServer.js:  SIOServer = (function(superClass) {
lib/SIOServer.js:    extend(SIOServer, superClass);
lib/SIOServer.js:    function SIOServer(options) {
lib/SIOServer.js:      var base;
lib/SIOServer.js:      this.options = options != null ? options : {};
lib/SIOServer.js:      this.onClientMessage = bind(this.onClientMessage, this);
lib/SIOServer.js:      this.onClientError = bind(this.onClientError, this);
lib/SIOServer.js:      this.onClientClose = bind(this.onClientClose, this);
lib/SIOServer.js:      this.onClientOpen = bind(this.onClientOpen, this);
lib/SIOServer.js:      this.onClientDisonnect = bind(this.onClientDisonnect, this);
lib/SIOServer.js:      this.onClientConnect = bind(this.onClientConnect, this);
lib/SIOServer.js:      this.onSIOServerError = bind(this.onSIOServerError, this);
lib/SIOServer.js:      this.onSIOServerConnection = bind(this.onSIOServerConnection, this);
lib/SIOServer.js:      this.onSIOServerSocketConnection = bind(this.onSIOServerSocketConnection, this);
lib/SIOServer.js:      this.onSIOServerDisconnect = bind(this.onSIOServerDisconnect, this);
lib/SIOServer.js:      this.onSIOServerListening = bind(this.onSIOServerListening, this);
lib/SIOServer.js:      this.isActive = bind(this.isActive, this);
lib/SIOServer.js:      this.end = bind(this.end, this);
lib/SIOServer.js:      this.send = bind(this.send, this);
lib/SIOServer.js:      this._enqueue = bind(this._enqueue, this);
lib/SIOServer.js:      this.start = bind(this.start, this);
lib/SIOServer.js:      if ((base = this.options).port == null) {
lib/SIOServer.js:        base.port = this.options.localPort;
lib/SIOServer.js:      }
lib/SIOServer.js:      this.options.log = !!this.options.verbose;
lib/SIOServer.js:      this.log('constructor');
lib/SIOServer.js:      this._queue = [];
lib/SIOServer.js:      return this;
lib/SIOServer.js:    }
lib/SIOServer.js:    SIOServer.prototype.start = function(fn) {
lib/SIOServer.js:      if (fn == null) {
lib/SIOServer.js:        fn = null;
lib/SIOServer.js:      }
lib/SIOServer.js:      this.log('start');
lib/SIOServer.js:      this.sio = io.listen(this.options.port, this.options);
lib/SIOServer.js:      this.sio.on('listening', this.onSIOServerListening);
lib/SIOServer.js:      this.sio.on('connection', this.onSIOServerSocketConnection);
lib/SIOServer.js:      this.sio.on('error', this.onSIOServerError);
lib/SIOServer.js:      this.sio.sockets.on('disconnect', this.onSIOServerDisconnect);
lib/SIOServer.js:      this.sio.sockets.on('connection', this.onSIOServerConnection);
lib/SIOServer.js:      this.sio.sockets.on('error', this.onSIOServerError);
lib/SIOServer.js:      if (fn) {
lib/SIOServer.js:        return fn();
lib/SIOServer.js:      }
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype._enqueue = function(data) {
lib/SIOServer.js:      return this._queue.push(data);
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.send = function(data, fn) {
lib/SIOServer.js:      if (fn == null) {
lib/SIOServer.js:        fn = null;
lib/SIOServer.js:      }
lib/SIOServer.js:      if (!this.isActive()) {
lib/SIOServer.js:        return this._enqueue(data);
lib/SIOServer.js:      } else {
lib/SIOServer.js:        this.log('send', data);
lib/SIOServer.js:        this.ioc.emit(this.options.emitKey, data);
lib/SIOServer.js:        if (fn) {
lib/SIOServer.js:          return fn();
lib/SIOServer.js:        }
lib/SIOServer.js:      }
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.end = function(fn) {
lib/SIOServer.js:      if (fn == null) {
lib/SIOServer.js:        fn = null;
lib/SIOServer.js:      }
lib/SIOServer.js:      this.log('end');
lib/SIOServer.js:      if (this.isActive()) {
lib/SIOServer.js:        this.ioc.disconnect();
lib/SIOServer.js:      }
lib/SIOServer.js:      this.ioc = null;
lib/SIOServer.js:      this.ready = false;
lib/SIOServer.js:      if (fn) {
lib/SIOServer.js:        return fn();
lib/SIOServer.js:      }
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.isActive = function() {
lib/SIOServer.js:      return (this.ioc != null) && this.ready;
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onSIOServerListening = function() {
lib/SIOServer.js:      this.log('onSIOServerListening');
lib/SIOServer.js:      return this.emit('listening');
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onSIOServerDisconnect = function() {
lib/SIOServer.js:      this.log('onSIOServerDisconnect');
lib/SIOServer.js:      return this.emit('disconnect');
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onSIOServerSocketConnection = function(socket) {
lib/SIOServer.js:      return this.log("onSIOServerSocketConnection");
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onSIOServerConnection = function(socket) {
lib/SIOServer.js:      var data, i, len, ref;
lib/SIOServer.js:      this.log('onSIOServerConnection');
lib/SIOServer.js:      this.emit('connection', socket);
lib/SIOServer.js:      this.ioc = socket;
lib/SIOServer.js:      this.ioc.on('open', this.onClientOpen);
lib/SIOServer.js:      this.ioc.on('close', this.onClientClose);
lib/SIOServer.js:      this.ioc.on('error', this.onClientError);
lib/SIOServer.js:      this.ioc.on(this.options.emitKey, this.onClientMessage);
lib/SIOServer.js:      this.ioc.on('connect', this.onClientConnect);
lib/SIOServer.js:      this.ioc.on('disconnect', this.onClientDisonnect);
lib/SIOServer.js:      this.ready = true;
lib/SIOServer.js:      ref = this._queue;
lib/SIOServer.js:      for (i = 0, len = ref.length; i < len; i++) {
lib/SIOServer.js:        data = ref[i];
lib/SIOServer.js:        this.send(data);
lib/SIOServer.js:      }
lib/SIOServer.js:      return this.emit('ready');
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onSIOServerError = function(err) {
lib/SIOServer.js:      this.log('onSIOServerError', err);
lib/SIOServer.js:      return this.emit('error', err);
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onClientConnect = function() {
lib/SIOServer.js:      this.log('onClientConnect');
lib/SIOServer.js:      return this.emit('connect');
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onClientDisonnect = function() {
lib/SIOServer.js:      this.log('onClientDisonnect');
lib/SIOServer.js:      return this.emit('disconnect');
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onClientOpen = function() {
lib/SIOServer.js:      this.log('onClientOpen');
lib/SIOServer.js:      return this.emit('open');
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onClientClose = function() {
lib/SIOServer.js:      this.log('onClientClose');
lib/SIOServer.js:      return this.emit('close');
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onClientError = function(err) {
lib/SIOServer.js:      this.log('onClientError', err);
lib/SIOServer.js:      return this.emit('error', err);
lib/SIOServer.js:    };
lib/SIOServer.js:    SIOServer.prototype.onClientMessage = function(msg) {
lib/SIOServer.js:      this.log('onClientMessage', msg);
lib/SIOServer.js:      return this.emit(this.options.emitKey, msg);
lib/SIOServer.js:    };
lib/SIOServer.js:    return SIOServer;
lib/SIOServer.js:  })(Base);
lib/SIOServer.js:  module.exports = {
lib/SIOServer.js:    SIOServer: SIOServer
lib/SIOServer.js:  };
lib/SIOServer.js:}).call(this);
lib/Shell.js:// Generated by CoffeeScript 1.10.0
lib/Shell.js:(function() {
lib/Shell.js:  var Base, Shell, readline,
lib/Shell.js:    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
lib/Shell.js:    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
lib/Shell.js:    hasProp = {}.hasOwnProperty;
lib/Shell.js:  Base = require('./Base').Base;
lib/Shell.js:  readline = require('readline');
lib/Shell.js:  Shell = (function(superClass) {
lib/Shell.js:    extend(Shell, superClass);
lib/Shell.js:    function Shell(options) {
lib/Shell.js:      var base, base1;
lib/Shell.js:      this.options = options != null ? options : {};
lib/Shell.js:      this.close = bind(this.close, this);
lib/Shell.js:      this.send = bind(this.send, this);
lib/Shell.js:      this.exit = bind(this.exit, this);
lib/Shell.js:      this.onSigint = bind(this.onSigint, this);
lib/Shell.js:      this.onLine = bind(this.onLine, this);
lib/Shell.js:      this.start = bind(this.start, this);
lib/Shell.js:      if ((base = this.options).input == null) {
lib/Shell.js:        base.input = process.stdin;
lib/Shell.js:      }
lib/Shell.js:      if ((base1 = this.options).output == null) {
lib/Shell.js:        base1.output = process.stdout;
lib/Shell.js:      }
lib/Shell.js:      this.stdin = process.stdin;
lib/Shell.js:      this.stdout = process.stdout;
lib/Shell.js:      return this;
lib/Shell.js:    }
lib/Shell.js:    Shell.prototype.start = function() {
lib/Shell.js:      this.rl = readline.createInterface(this.options);
lib/Shell.js:      this.rl.on('line', this.onLine);
lib/Shell.js:      this.rl.on('SIGINT', this.onSigint);
lib/Shell.js:      return this.rl.prompt();
lib/Shell.js:    };
lib/Shell.js:    Shell.prototype.onLine = function(d) {
lib/Shell.js:      this.log('onLine', d);
lib/Shell.js:      this.emit('line', d);
lib/Shell.js:      return this.rl.prompt();
lib/Shell.js:    };
lib/Shell.js:    Shell.prototype.onSigint = function() {
lib/Shell.js:      this.log('onSigint');
lib/Shell.js:      return this.emit('SIGINT');
lib/Shell.js:    };
lib/Shell.js:    Shell.prototype.exit = function(code) {
lib/Shell.js:      this.log('exit:', code);
lib/Shell.js:      return process.exit(code);
lib/Shell.js:    };
lib/Shell.js:    Shell.prototype.send = function(d) {
lib/Shell.js:      this.log('write', d);
lib/Shell.js:      return console.log(d);
lib/Shell.js:    };
lib/Shell.js:    Shell.prototype.close = function() {
lib/Shell.js:      return this.log('close');
lib/Shell.js:    };
lib/Shell.js:    return Shell;
lib/Shell.js:  })(Base);
lib/Shell.js:  module.exports = {
lib/Shell.js:    Shell: Shell
lib/Shell.js:  };
lib/Shell.js:}).call(this);
lib/Url.js:// Generated by CoffeeScript 1.10.0
lib/Url.js:(function() {
lib/Url.js:  var Url, url,
lib/Url.js:    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };
lib/Url.js:  url = require('url');
lib/Url.js:  Url = (function() {
lib/Url.js:    function Url(inputString) {
lib/Url.js:      this.inputString = inputString != null ? inputString : '';
lib/Url.js:      this.format = bind(this.format, this);
lib/Url.js:      this.obj = Url.parse(this.inputString);
lib/Url.js:      this.string = Url.format(this.obj);
lib/Url.js:      return this;
lib/Url.js:    }
lib/Url.js:    Url.prototype.format = function() {
lib/Url.js:      return Url.format(this.obj);
lib/Url.js:    };
lib/Url.js:    Url.parse = function(string) {
lib/Url.js:      var noprotocol, obj;
lib/Url.js:      noprotocol = string.indexOf('://') === -1;
lib/Url.js:      if (noprotocol) {
lib/Url.js:        string = "ws://" + string;
lib/Url.js:      }
lib/Url.js:      obj = url.parse(string);
lib/Url.js:      if (!obj.port) {
lib/Url.js:        obj.port = (function() {
lib/Url.js:          switch (obj.protocol) {
lib/Url.js:            case 'https:':
lib/Url.js:            case 'wss:':
lib/Url.js:              return 443;
lib/Url.js:            case 'http:':
lib/Url.js:            case 'ws:':
lib/Url.js:              return 80;
lib/Url.js:          }
lib/Url.js:        })();
lib/Url.js:      }
lib/Url.js:      if (noprotocol && obj.port === 443) {
lib/Url.js:        obj.protocol = 'wss:';
lib/Url.js:      }
lib/Url.js:      return obj;
lib/Url.js:    };
lib/Url.js:    Url.format = function(obj) {
lib/Url.js:      return url.format(obj);
lib/Url.js:    };
lib/Url.js:    return Url;
lib/Url.js:  })();
lib/Url.js:  module.exports = {
lib/Url.js:    Url: Url,
lib/Url.js:    parse: Url.prototype.parse,
lib/Url.js:    format: Url.prototype.format
lib/Url.js:  };
lib/Url.js:}).call(this);
lib/WSClient.js:// Generated by CoffeeScript 1.10.0
lib/WSClient.js:(function() {
lib/WSClient.js:  var Base, WSClient, ws,
lib/WSClient.js:    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
lib/WSClient.js:    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
lib/WSClient.js:    hasProp = {}.hasOwnProperty;
lib/WSClient.js:  Base = require('./Base').Base;
lib/WSClient.js:  ws = require('ws');
lib/WSClient.js:  WSClient = (function(superClass) {
lib/WSClient.js:    extend(WSClient, superClass);
lib/WSClient.js:    function WSClient(url, options) {
lib/WSClient.js:      this.url = url;
lib/WSClient.js:      this.options = options != null ? options : {};
lib/WSClient.js:      this.onMessage = bind(this.onMessage, this);
lib/WSClient.js:      this.onError = bind(this.onError, this);
lib/WSClient.js:      this.onClose = bind(this.onClose, this);
lib/WSClient.js:      this.onOpen = bind(this.onOpen, this);
lib/WSClient.js:      this.onConnect = bind(this.onConnect, this);
lib/WSClient.js:      this.end = bind(this.end, this);
lib/WSClient.js:      this.send = bind(this.send, this);
lib/WSClient.js:      this.start = bind(this.start, this);
lib/WSClient.js:      this.log("constructor");
lib/WSClient.js:      return this;
lib/WSClient.js:    }
lib/WSClient.js:    WSClient.prototype.start = function() {
lib/WSClient.js:      var href;
lib/WSClient.js:      this.log('WSClient: url->', this.url.format());
lib/WSClient.js:      href = this.url.format();
lib/WSClient.js:      this.ws = new ws(this.url.format());
lib/WSClient.js:      this.ws.on('open', this.onOpen);
lib/WSClient.js:      this.ws.on('close', this.onClose);
lib/WSClient.js:      this.ws.on('error', this.onError);
lib/WSClient.js:      this.ws.on(this.options.emitKey, this.onMessage);
lib/WSClient.js:      return this.ws.on('connect', this.onConnect);
lib/WSClient.js:    };
lib/WSClient.js:    WSClient.prototype.send = function(d) {
lib/WSClient.js:      this.log('send', d);
lib/WSClient.js:      return this.ws.send(d);
lib/WSClient.js:    };
lib/WSClient.js:    WSClient.prototype.end = function() {
lib/WSClient.js:      this.log('end');
lib/WSClient.js:      return this.ws.close();
lib/WSClient.js:    };
lib/WSClient.js:    WSClient.prototype.onConnect = function() {
lib/WSClient.js:      this.log('onConnect');
lib/WSClient.js:      return this.emit('connect');
lib/WSClient.js:    };
lib/WSClient.js:    WSClient.prototype.onOpen = function() {
lib/WSClient.js:      this.log('onOpen');
lib/WSClient.js:      return this.emit('open');
lib/WSClient.js:    };
lib/WSClient.js:    WSClient.prototype.onClose = function() {
lib/WSClient.js:      this.log('onClose');
lib/WSClient.js:      return this.emit('close');
lib/WSClient.js:    };
lib/WSClient.js:    WSClient.prototype.onError = function(err) {
lib/WSClient.js:      this.log('onError', err);
lib/WSClient.js:      return this.emit('error', err);
lib/WSClient.js:    };
lib/WSClient.js:    WSClient.prototype.onMessage = function(msg) {
lib/WSClient.js:      this.log('onMessage', msg);
lib/WSClient.js:      return this.emit(this.options.emitKey, msg);
lib/WSClient.js:    };
lib/WSClient.js:    return WSClient;
lib/WSClient.js:  })(Base);
lib/WSClient.js:  module.exports = {
lib/WSClient.js:    WSClient: WSClient
lib/WSClient.js:  };
lib/WSClient.js:}).call(this);
lib/WSServer.js:// Generated by CoffeeScript 1.10.0
lib/WSServer.js:(function() {
lib/WSServer.js:  var Base, WSServer, ws,
lib/WSServer.js:    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
lib/WSServer.js:    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
lib/WSServer.js:    hasProp = {}.hasOwnProperty;
lib/WSServer.js:  Base = require('./Base').Base;
lib/WSServer.js:  ws = require('ws');
lib/WSServer.js:  WSServer = (function(superClass) {
lib/WSServer.js:    extend(WSServer, superClass);
lib/WSServer.js:    function WSServer(options) {
lib/WSServer.js:      var base;
lib/WSServer.js:      this.options = options != null ? options : {};
lib/WSServer.js:      this.onClientMessage = bind(this.onClientMessage, this);
lib/WSServer.js:      this.onClientError = bind(this.onClientError, this);
lib/WSServer.js:      this.onClientClose = bind(this.onClientClose, this);
lib/WSServer.js:      this.onClientOpen = bind(this.onClientOpen, this);
lib/WSServer.js:      this.onClientConnect = bind(this.onClientConnect, this);
lib/WSServer.js:      this.onWSServerError = bind(this.onWSServerError, this);
lib/WSServer.js:      this.onWSServerConnection = bind(this.onWSServerConnection, this);
lib/WSServer.js:      this.onWSServerListening = bind(this.onWSServerListening, this);
lib/WSServer.js:      this.end = bind(this.end, this);
lib/WSServer.js:      this.send = bind(this.send, this);
lib/WSServer.js:      this._enqueue = bind(this._enqueue, this);
lib/WSServer.js:      this.isActive = bind(this.isActive, this);
lib/WSServer.js:      this.start = bind(this.start, this);
lib/WSServer.js:      this.log('constructor');
lib/WSServer.js:      this._queue = [];
lib/WSServer.js:      if ((base = this.options).port == null) {
lib/WSServer.js:        base.port = this.options.localPort;
lib/WSServer.js:      }
lib/WSServer.js:      return this;
lib/WSServer.js:    }
lib/WSServer.js:    WSServer.prototype.start = function() {
lib/WSServer.js:      this.log('start');
lib/WSServer.js:      this.wss = new ws.Server(this.options);
lib/WSServer.js:      this.wss.on('listening', this.onWSServerListening);
lib/WSServer.js:      this.wss.on('connection', this.onWSServerConnection);
lib/WSServer.js:      return this.wss.on('error', this.onWSServerError);
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.isActive = function() {
lib/WSServer.js:      return (this.wss != null) && (this.ws != null) && this.ready;
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype._enqueue = function(data) {
lib/WSServer.js:      return this._queue.push(data);
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.send = function(data) {
lib/WSServer.js:      if (!this.isActive()) {
lib/WSServer.js:        return this._enqueue(data);
lib/WSServer.js:      } else {
lib/WSServer.js:        this.log('send', data);
lib/WSServer.js:        return this.ws.send(data);
lib/WSServer.js:      }
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.end = function(fn) {
lib/WSServer.js:      if (fn == null) {
lib/WSServer.js:        fn = null;
lib/WSServer.js:      }
lib/WSServer.js:      this.log('end');
lib/WSServer.js:      if (this.isActive()) {
lib/WSServer.js:        this.ws.close();
lib/WSServer.js:      }
lib/WSServer.js:      this.wss = null;
lib/WSServer.js:      this.ws = null;
lib/WSServer.js:      this.ready = false;
lib/WSServer.js:      if (fn) {
lib/WSServer.js:        return fn();
lib/WSServer.js:      }
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.onWSServerListening = function() {
lib/WSServer.js:      this.log('onWSServerListening');
lib/WSServer.js:      return this.emit('listening');
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.onWSServerConnection = function(socket) {
lib/WSServer.js:      var data, i, len, ref, results;
lib/WSServer.js:      this.log('onWSServerConnection');
lib/WSServer.js:      this.emit('connection');
lib/WSServer.js:      this.ws = socket;
lib/WSServer.js:      this.ws.on('open', this.onClientOpen);
lib/WSServer.js:      this.ws.on('close', this.onClientClose);
lib/WSServer.js:      this.ws.on('error', this.onClientError);
lib/WSServer.js:      this.ws.on(this.options.emitKey, this.onClientMessage);
lib/WSServer.js:      this.ws.on('connect', this.onClientConnect);
lib/WSServer.js:      this.ready = true;
lib/WSServer.js:      ref = this._queue;
lib/WSServer.js:      results = [];
lib/WSServer.js:      for (i = 0, len = ref.length; i < len; i++) {
lib/WSServer.js:        data = ref[i];
lib/WSServer.js:        results.push(this.send(data));
lib/WSServer.js:      }
lib/WSServer.js:      return results;
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.onWSServerError = function(err) {
lib/WSServer.js:      this.log('onWSServerError', err);
lib/WSServer.js:      return this.emit('error', err);
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.onClientConnect = function() {
lib/WSServer.js:      this.log('onClientConnect');
lib/WSServer.js:      return this.emit('connect');
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.onClientOpen = function() {
lib/WSServer.js:      this.log('onClientOpen');
lib/WSServer.js:      return this.emit('open');
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.onClientClose = function() {
lib/WSServer.js:      this.log('onClientClose');
lib/WSServer.js:      return this.emit('close');
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.onClientError = function(err) {
lib/WSServer.js:      this.log('onClientError', err);
lib/WSServer.js:      return this.emit('error', err);
lib/WSServer.js:    };
lib/WSServer.js:    WSServer.prototype.onClientMessage = function(msg) {
lib/WSServer.js:      this.log('onClientMessage', msg);
lib/WSServer.js:      return this.emit(this.options.emitKey, msg);
lib/WSServer.js:    };
lib/WSServer.js:    return WSServer;
lib/WSServer.js:  })(Base);
lib/WSServer.js:  module.exports = {
lib/WSServer.js:    WSServer: WSServer
lib/WSServer.js:  };
lib/WSServer.js:}).call(this);
src/Base.coffee:{EventEmitter} = require 'events'
src/Base.coffee:class Base extends EventEmitter
src/Base.coffee:  log: (args...) =>
src/Base.coffee:    return false unless @options.verbose
src/Base.coffee:    name = @?.constructor?.toString?().match(/function\s*(\w+)/)?[1] || 'ApiBase'
src/Base.coffee:    console.log "#{name}>", args...
src/Base.coffee:module.exports =
src/Base.coffee:  Base: Base
src/Program.coffee:fs =         require 'fs'
src/Program.coffee:program =    require 'commander'
src/Program.coffee:{Url} =      require './Url'
src/Program.coffee:class Program
src/Program.coffee:  constructor: (@options = {}) ->
src/Program.coffee:    @options.name ?= 'iocat'
src/Program.coffee:    do @initCommander
src/Program.coffee:    return @
src/Program.coffee:  initCommander: ->
src/Program.coffee:    program.name = @options.name
src/Program.coffee:    program
src/Program.coffee:      .version(do Program.getVersion)
src/Program.coffee:      .usage('[options] URL')
src/Program.coffee:      .option('-v, --verbose',                             'verbose')
src/Program.coffee:      .option('-l, --listen',                              'Start in listen mode, creating a server')
src/Program.coffee:      .option('-p, --local-port <port>',                   'Specify local port for remote conntects',                 parseInt)
src/Program.coffee:      .option('--socketio',                                'Use socket.io')
src/Program.coffee:      .option('-k, --keep-listen',                         'Keep inbound sockets open for multiple connects')
src/Program.coffee:      .option('-e, --emit-key <key>',                      'Emit-key, default is "message"',                          "message")
src/Program.coffee:      #.option('-U, --use-unix-domain-socket',              'Use UNIX domain socket')
src/Program.coffee:      #.option('-X, --proxy-protocol {socks[45],connect}',  'proxy protocol')
src/Program.coffee:      #.option('-b, --bind-interface <if>',                 'Bind socket to interface')                                #checkInterface
src/Program.coffee:      #.option('-c, --send-crlf',                           'Send CRLF as line-ending')
src/Program.coffee:      #.option('-d, --detach-stdin',                        'Detach from stdin')
src/Program.coffee:      #.option('-i, --interval <secs>',                     'Delay interval for lines sent, ports scanned',            parseFloat)
src/Program.coffee:      #.option('-m, --text-mode {text,binary,auto}',        'Specify the message transmit mode (default: auto)')
src/Program.coffee:      #.option('-n, --new-lines',                           'Separate each received message with a newline')
src/Program.coffee:      #.option('-n, --no-name-resolution',                  'Suppress name/port resolutions')
src/Program.coffee:      #.option('-q, --quit-on-eof <secs>',                  'Quit after EOF on stdin and delay of secs (0 allowed)',   parseFloat)
src/Program.coffee:      #.option('-r, --randomize-local-port',                'Randomize local port')
src/Program.coffee:      #.option('-s, --local-source-address <addr>',         'Local source address')
src/Program.coffee:      #.option('-u, --udp',                                 'UDP mode')
src/Program.coffee:      #.option('-w, --wait <secs>',                         'Timeout for connects and final net reads',                parseFloat)
src/Program.coffee:      #.option('-x, --proxy <addr[:port]>',                 'Proxy address and port')                                  # parseAddr
src/Program.coffee:      #.option('-z, --zero-io-mode',                        'Zero-I/O mode [used for scanning]')
src/Program.coffee:  @getVersion: -> JSON.parse(fs.readFileSync "#{__dirname}/../package.json", 'utf8').version
src/Program.coffee:  parseOptions: =>
src/Program.coffee:    program.parse(process.argv)
src/Program.coffee:    @options extends program
src/Program.coffee:  initShell: =>
src/Program.coffee:    {Shell} = require './Shell'
src/Program.coffee:    @shell = new Shell
src/Program.coffee:    do @shell.start
src/Program.coffee:  initWSClient: (destString) =>
src/Program.coffee:    {WSClient} = require './WSClient'
src/Program.coffee:    dest = new Url destString
src/Program.coffee:    @client = new WSClient dest, @options
src/Program.coffee:    do @client.start
src/Program.coffee:  initSIOClient: (destString) =>
src/Program.coffee:    {SIOClient} = require './SIOClient'
src/Program.coffee:    dest = new Url destString
src/Program.coffee:    @client = new SIOClient dest, @options
src/Program.coffee:    do @client.start
src/Program.coffee:  initWSServer: =>
src/Program.coffee:    {WSServer} = require './WSServer'
src/Program.coffee:    @server = new WSServer @options
src/Program.coffee:    do @server.start
src/Program.coffee:  initSIOServer: =>
src/Program.coffee:    {SIOServer} = require './SIOServer'
src/Program.coffee:    @server = new SIOServer @options
src/Program.coffee:    do @server.start
src/Program.coffee:  runClient: (destString) =>
src/Program.coffee:    do @initShell
src/Program.coffee:    if @options.socketio then @initSIOClient destString else @initWSClient destString
src/Program.coffee:    @shell.on 'line', (d) =>
src/Program.coffee:      @client.send d
src/Program.coffee:    @client.on 'error', (err) =>
src/Program.coffee:      console.log 'client.on error'
src/Program.coffee:      @shell.exit 0
src/Program.coffee:    @client.on 'data', (d) =>
src/Program.coffee:      do @shell.stdin.pause
src/Program.coffee:      @shell.send d
src/Program.coffee:      do @shell.stdin.resume
src/Program.coffee:    @client.on @options.emitKey, (d) =>
src/Program.coffee:      @shell.send d
src/Program.coffee:    @client.on 'close', =>
src/Program.coffee:      console.log 'client.on close'
src/Program.coffee:      do @shell.stdin.pause
src/Program.coffee:      @shell.send "\nconnection closed by foreign host."
src/Program.coffee:      do @shell.close
src/Program.coffee:      @shell.exit 0
src/Program.coffee:    @client.on 'open', =>
src/Program.coffee:      @shell.send "Connection to #{destString} succeeded!"
src/Program.coffee:    @shell.on 'SIGINT', =>
src/Program.coffee:      console.log 'shell.on SIGINT'
src/Program.coffee:      do @shell.stdin.pause
src/Program.coffee:      @shell.send "\nending session"
src/Program.coffee:      do @shell.close
src/Program.coffee:      do @client.end
src/Program.coffee:      @shell.exit 0
src/Program.coffee:  runServer: =>
src/Program.coffee:    do @initShell
src/Program.coffee:    if @options.socketio then do @initSIOServer else do @initWSServer
src/Program.coffee:    @shell.on 'line', (d) =>
src/Program.coffee:      @server.send d
src/Program.coffee:    @server.on 'error', (err) =>
src/Program.coffee:      console.log 'server.on error'
src/Program.coffee:      @shell.exit 0
src/Program.coffee:    @server.on @options.emitKey, (d) =>
src/Program.coffee:      @shell.send d
src/Program.coffee:    @server.on 'connection', =>
src/Program.coffee:      console.log 'New connection'
src/Program.coffee:    @server.on 'close', =>
src/Program.coffee:      do @shell.stdin.pause
src/Program.coffee:      @shell.send "\nconnection closed by foreign host."
src/Program.coffee:      unless @options.keepListen
src/Program.coffee:        do @shell.close
src/Program.coffee:        @shell.exit 0
src/Program.coffee:    @shell.on 'SIGINT', =>
src/Program.coffee:      console.log 'shell.on SIGINT'
src/Program.coffee:      do @shell.stdin.pause
src/Program.coffee:      @shell.send "\nending session"
src/Program.coffee:      do @shell.close
src/Program.coffee:      do @server.end
src/Program.coffee:      @shell.exit 0
src/Program.coffee:  run: =>
src/Program.coffee:    do @parseOptions
src/Program.coffee:    if @options.args?.length is 1
src/Program.coffee:      @runClient @options.args[0]
src/Program.coffee:    else if @options.listen
src/Program.coffee:      do @runServer
src/Program.coffee:    else
src/Program.coffee:      do program.help
src/Program.coffee:  @create: (options = {}) ->
src/Program.coffee:    new Program options
src/Program.coffee:  @run: ->
src/Program.coffee:    prog = do Program.create
src/Program.coffee:    prog.run()
src/Program.coffee:module.exports =
src/Program.coffee:  Program: Program
src/Program.coffee:  create:  Program.create
src/Program.coffee:  run:     Program.run
src/SIOClient.coffee:{Base} = require './Base'
src/SIOClient.coffee:io =     require 'socket.io-client'
src/SIOClient.coffee:class SIOClient extends Base
src/SIOClient.coffee:  constructor: (@url, @options = {}) ->
src/SIOClient.coffee:    return @
src/SIOClient.coffee:  start: =>
src/SIOClient.coffee:    @log 'SIOClient: url->', @url.format()
src/SIOClient.coffee:    href = @url.format()
src/SIOClient.coffee:    @io = io.connect @url.format()
src/SIOClient.coffee:    @io.on 'open',    @onOpen
src/SIOClient.coffee:    @io.on 'close',   @onClose
src/SIOClient.coffee:    @io.on 'error',   @onError
src/SIOClient.coffee:    @io.on @options.emitKey, @onMessage
src/SIOClient.coffee:    @io.on 'connect', @onConnect
src/SIOClient.coffee:  # Methods
src/SIOClient.coffee:  send: (d) =>
src/SIOClient.coffee:    @log 'send', d
src/SIOClient.coffee:    @io.emit @options.emitKey, d
src/SIOClient.coffee:  end: =>
src/SIOClient.coffee:    @log 'end'
src/SIOClient.coffee:    do @io.disconnect
src/SIOClient.coffee:  # Events
src/SIOClient.coffee:  onConnect: =>
src/SIOClient.coffee:    @log 'onConnect'
src/SIOClient.coffee:    @emit 'connect'
src/SIOClient.coffee:  onOpen: =>
src/SIOClient.coffee:    @log 'onOpen'
src/SIOClient.coffee:    @emit 'open'
src/SIOClient.coffee:  onClose: =>
src/SIOClient.coffee:    @log 'onClose'
src/SIOClient.coffee:    @emit 'close'
src/SIOClient.coffee:  onError: (err) =>
src/SIOClient.coffee:    @log 'onError', err
src/SIOClient.coffee:    @emit 'error', err
src/SIOClient.coffee:  onMessage: (msg...) =>
src/SIOClient.coffee:    @log 'onMessage', msg
src/SIOClient.coffee:    @emit @options.emitKey, msg
src/SIOClient.coffee:module.exports =
src/SIOClient.coffee:  SIOClient: SIOClient
src/SIOServer.coffee:{Base} = require './Base'
src/SIOServer.coffee:io =     require 'socket.io'
src/SIOServer.coffee:class SIOServer extends Base
src/SIOServer.coffee:  constructor: (@options = {}) ->
src/SIOServer.coffee:    @options.port ?= @options.localPort
src/SIOServer.coffee:    @options.log   = !!@options.verbose
src/SIOServer.coffee:    @log 'constructor'
src/SIOServer.coffee:    @_queue = []
src/SIOServer.coffee:    return @
src/SIOServer.coffee:  start: (fn = null) =>
src/SIOServer.coffee:    @log 'start'
src/SIOServer.coffee:    @sio = io.listen @options.port, @options
src/SIOServer.coffee:    #@sio.set    'log', false
src/SIOServer.coffee:    #@sio.enable 'browser client mignification'
src/SIOServer.coffee:    #@sio.enable 'browser client etag'
src/SIOServer.coffee:    #@sio.enable 'browser client gzip'
src/SIOServer.coffee:    @sio.on 'listening', @onSIOServerListening
src/SIOServer.coffee:    #@sio.server.on 'request',
src/SIOServer.coffee:    @sio.on 'connection', @onSIOServerSocketConnection
src/SIOServer.coffee:    #@sio.server.on 'close',
src/SIOServer.coffee:    #@sio.server.on 'checkContinue',
src/SIOServer.coffee:    #@sio.server.on 'connect',
src/SIOServer.coffee:    #@sio.server.on 'upgrade',
src/SIOServer.coffee:    #@sio.server.on 'clientError',
src/SIOServer.coffee:    @sio.on 'error',              @onSIOServerError
src/SIOServer.coffee:    @sio.sockets.on 'disconnect', @onSIOServerDisconnect
src/SIOServer.coffee:    @sio.sockets.on 'connection', @onSIOServerConnection
src/SIOServer.coffee:    @sio.sockets.on 'error',      @onSIOServerError
src/SIOServer.coffee:    do fn if fn
src/SIOServer.coffee:  _enqueue: (data) =>
src/SIOServer.coffee:    @_queue.push data
src/SIOServer.coffee:  # Methods
src/SIOServer.coffee:  send: (data, fn = null) =>
src/SIOServer.coffee:    unless do @isActive
src/SIOServer.coffee:      @_enqueue data
src/SIOServer.coffee:    else
src/SIOServer.coffee:      @log 'send', data
src/SIOServer.coffee:      @ioc.emit @options.emitKey, data
src/SIOServer.coffee:      do fn if fn
src/SIOServer.coffee:  end: (fn = null) =>
src/SIOServer.coffee:    @log 'end'
src/SIOServer.coffee:    do @ioc.disconnect if do @isActive
src/SIOServer.coffee:    @ioc = null
src/SIOServer.coffee:    @ready = false
src/SIOServer.coffee:    do fn if fn
src/SIOServer.coffee:  isActive: =>
src/SIOServer.coffee:    @ioc? and @ready
src/SIOServer.coffee:  # SIOServer Events
src/SIOServer.coffee:  onSIOServerListening: =>
src/SIOServer.coffee:    @log  'onSIOServerListening'
src/SIOServer.coffee:    @emit 'listening'
src/SIOServer.coffee:  onSIOServerDisconnect: =>
src/SIOServer.coffee:    @log  'onSIOServerDisconnect'
src/SIOServer.coffee:    @emit 'disconnect'
src/SIOServer.coffee:  onSIOServerSocketConnection: (socket) => # socket connection without socket.io handshake
src/SIOServer.coffee:    @log "onSIOServerSocketConnection"
src/SIOServer.coffee:  onSIOServerConnection: (socket) =>
src/SIOServer.coffee:    @log  'onSIOServerConnection'
src/SIOServer.coffee:    @emit 'connection', socket
src/SIOServer.coffee:    @ioc = socket
src/SIOServer.coffee:    @ioc.on 'open',       @onClientOpen
src/SIOServer.coffee:    @ioc.on 'close',      @onClientClose
src/SIOServer.coffee:    @ioc.on 'error',      @onClientError
src/SIOServer.coffee:    @ioc.on @options.emitKey,     @onClientMessage
src/SIOServer.coffee:    @ioc.on 'connect',    @onClientConnect
src/SIOServer.coffee:    @ioc.on 'disconnect', @onClientDisonnect
src/SIOServer.coffee:    @ready = true
src/SIOServer.coffee:    for data in @_queue
src/SIOServer.coffee:      @send data
src/SIOServer.coffee:    @emit 'ready'
src/SIOServer.coffee:  onSIOServerError: (err) =>
src/SIOServer.coffee:    @log  'onSIOServerError', err
src/SIOServer.coffee:    @emit 'error', err
src/SIOServer.coffee:  # Client Events
src/SIOServer.coffee:  onClientConnect: =>
src/SIOServer.coffee:    @log  'onClientConnect'
src/SIOServer.coffee:    @emit 'connect'
src/SIOServer.coffee:  onClientDisonnect: =>
src/SIOServer.coffee:    @log  'onClientDisonnect'
src/SIOServer.coffee:    @emit 'disconnect'
src/SIOServer.coffee:  onClientOpen: =>
src/SIOServer.coffee:    @log  'onClientOpen'
src/SIOServer.coffee:    @emit 'open'
src/SIOServer.coffee:  onClientClose: =>
src/SIOServer.coffee:    @log  'onClientClose'
src/SIOServer.coffee:    @emit 'close'
src/SIOServer.coffee:  onClientError: (err) =>
src/SIOServer.coffee:    @log  'onClientError', err
src/SIOServer.coffee:    @emit 'error', err
src/SIOServer.coffee:  onClientMessage: (msg) =>
src/SIOServer.coffee:    @log  'onClientMessage', msg
src/SIOServer.coffee:    @emit @options.emitKey, msg
src/SIOServer.coffee:module.exports =
src/SIOServer.coffee:  SIOServer: SIOServer
src/Shell.coffee:{Base}   = require './Base'
src/Shell.coffee:readline = require 'readline'
src/Shell.coffee:class Shell extends Base
src/Shell.coffee:  constructor: (@options = {}) ->
src/Shell.coffee:    @options.input  ?= process.stdin
src/Shell.coffee:    @options.output ?= process.stdout
src/Shell.coffee:    @stdin =  process.stdin
src/Shell.coffee:    @stdout = process.stdout
src/Shell.coffee:    return @
src/Shell.coffee:  start: =>
src/Shell.coffee:    @rl =   readline.createInterface @options
src/Shell.coffee:    @rl.on 'line',   @onLine
src/Shell.coffee:    @rl.on 'SIGINT', @onSigint # ^C
src/Shell.coffee:    #@rl.on 'SIGTSTP',          # ^Z
src/Shell.coffee:    #@rl.on 'SIGCONT',          # fg after ^Z
src/Shell.coffee:    #@rl.on 'close',
src/Shell.coffee:    #@rl.on 'pause',
src/Shell.coffee:    #@rl.on 'resume',
src/Shell.coffee:    do @rl.prompt
src/Shell.coffee:  onLine: (d) =>
src/Shell.coffee:    @log 'onLine', d
src/Shell.coffee:    @emit 'line', d
src/Shell.coffee:    do @rl.prompt
src/Shell.coffee:  onSigint: =>
src/Shell.coffee:    @log 'onSigint'
src/Shell.coffee:    @emit 'SIGINT'
src/Shell.coffee:  exit: (code) =>
src/Shell.coffee:    @log 'exit:', code
src/Shell.coffee:    process.exit code
src/Shell.coffee:  send: (d) =>
src/Shell.coffee:    @log 'write', d
src/Shell.coffee:    console.log d
src/Shell.coffee:  close: =>
src/Shell.coffee:    @log 'close'
src/Shell.coffee:module.exports =
src/Shell.coffee:  Shell: Shell
src/Url.coffee:url = require 'url'
src/Url.coffee:class Url
src/Url.coffee:  constructor: (@inputString = '') ->
src/Url.coffee:    @obj =    Url.parse  @inputString
src/Url.coffee:    @string = Url.format @obj
src/Url.coffee:    return @
src/Url.coffee:  format: => Url.format @obj
src/Url.coffee:  @parse: (string) ->
src/Url.coffee:    noprotocol = string.indexOf('://') is -1
src/Url.coffee:    string = "ws://#{string}" if noprotocol
src/Url.coffee:    obj = url.parse string
src/Url.coffee:    if not obj.port
src/Url.coffee:      obj.port = switch obj.protocol
src/Url.coffee:        when 'https:', 'wss:' then 443
src/Url.coffee:        when 'http:',  'ws:'  then 80
src/Url.coffee:    obj.protocol = 'wss:' if noprotocol and obj.port is 443
src/Url.coffee:    obj
src/Url.coffee:  @format: (obj) -> url.format obj
src/Url.coffee:module.exports =
src/Url.coffee:  Url:     Url
src/Url.coffee:  parse:   Url::parse
src/Url.coffee:  format:  Url::format
src/WSClient.coffee:{Base} = require './Base'
src/WSClient.coffee:ws =     require 'ws'
src/WSClient.coffee:class WSClient extends Base
src/WSClient.coffee:  constructor: (@url, @options = {}) ->
src/WSClient.coffee:    @log "constructor"
src/WSClient.coffee:    return @
src/WSClient.coffee:  start: =>
src/WSClient.coffee:    @log 'WSClient: url->', @url.format()
src/WSClient.coffee:    href = @url.format()
src/WSClient.coffee:    @ws = new ws @url.format()
src/WSClient.coffee:    @ws.on 'open',    @onOpen
src/WSClient.coffee:    @ws.on 'close',   @onClose
src/WSClient.coffee:    @ws.on 'error',   @onError
src/WSClient.coffee:    @ws.on @options.emitKey,  @onMessage
src/WSClient.coffee:    @ws.on 'connect', @onConnect
src/WSClient.coffee:  # Methods
src/WSClient.coffee:  send: (d) =>
src/WSClient.coffee:    @log 'send', d
src/WSClient.coffee:    @ws.send d
src/WSClient.coffee:  end: =>
src/WSClient.coffee:    @log 'end'
src/WSClient.coffee:    do @ws.close
src/WSClient.coffee:  # Events
src/WSClient.coffee:  onConnect: =>
src/WSClient.coffee:    @log 'onConnect'
src/WSClient.coffee:    @emit 'connect'
src/WSClient.coffee:  onOpen: =>
src/WSClient.coffee:    @log 'onOpen'
src/WSClient.coffee:    @emit 'open'
src/WSClient.coffee:  onClose: =>
src/WSClient.coffee:    @log 'onClose'
src/WSClient.coffee:    @emit 'close'
src/WSClient.coffee:  onError: (err) =>
src/WSClient.coffee:    @log 'onError', err
src/WSClient.coffee:    @emit 'error', err
src/WSClient.coffee:  onMessage: (msg) =>
src/WSClient.coffee:    @log 'onMessage', msg
src/WSClient.coffee:    @emit @options.emitKey, msg
src/WSClient.coffee:module.exports =
src/WSClient.coffee:  WSClient: WSClient
src/WSServer.coffee:{Base} = require './Base'
src/WSServer.coffee:ws =     require 'ws'
src/WSServer.coffee:class WSServer extends Base
src/WSServer.coffee:  constructor: (@options = {}) ->
src/WSServer.coffee:    @log 'constructor'
src/WSServer.coffee:    @_queue = []
src/WSServer.coffee:    @options.port ?= @options.localPort
src/WSServer.coffee:    return @
src/WSServer.coffee:  start: =>
src/WSServer.coffee:    @log 'start'
src/WSServer.coffee:    @wss = new ws.Server  @options
src/WSServer.coffee:    @wss.on 'listening',  @onWSServerListening
src/WSServer.coffee:    @wss.on 'connection', @onWSServerConnection
src/WSServer.coffee:    @wss.on 'error',      @onWSServerError
src/WSServer.coffee:  isActive: =>
src/WSServer.coffee:    @wss? and @ws? and @ready
src/WSServer.coffee:  _enqueue: (data) =>
src/WSServer.coffee:    @_queue.push data
src/WSServer.coffee:  # Methods
src/WSServer.coffee:  send: (data) =>
src/WSServer.coffee:    unless do @isActive
src/WSServer.coffee:      @_enqueue data
src/WSServer.coffee:    else
src/WSServer.coffee:      @log 'send', data
src/WSServer.coffee:      @ws.send data
src/WSServer.coffee:  end: (fn = null) =>
src/WSServer.coffee:    @log 'end'
src/WSServer.coffee:    do @ws.close if do @isActive
src/WSServer.coffee:    @wss = null
src/WSServer.coffee:    @ws = null
src/WSServer.coffee:    @ready = false
src/WSServer.coffee:    do fn if fn
src/WSServer.coffee:  # WSServer Events
src/WSServer.coffee:  onWSServerListening: =>
src/WSServer.coffee:    @log  'onWSServerListening'
src/WSServer.coffee:    @emit 'listening'
src/WSServer.coffee:  onWSServerConnection: (socket) =>
src/WSServer.coffee:    #console.dir socket
src/WSServer.coffee:    @log  'onWSServerConnection'
src/WSServer.coffee:    @emit 'connection'
src/WSServer.coffee:    @ws = socket
src/WSServer.coffee:    @ws.on 'open',       @onClientOpen
src/WSServer.coffee:    @ws.on 'close',      @onClientClose
src/WSServer.coffee:    @ws.on 'error',      @onClientError
src/WSServer.coffee:    @ws.on @options.emitKey,     @onClientMessage
src/WSServer.coffee:    @ws.on 'connect',    @onClientConnect
src/WSServer.coffee:    @ready = true
src/WSServer.coffee:    for data in @_queue
src/WSServer.coffee:      @send data
src/WSServer.coffee:  onWSServerError: (err) =>
src/WSServer.coffee:    @log  'onWSServerError', err
src/WSServer.coffee:    @emit 'error', err
src/WSServer.coffee:  # Client Events
src/WSServer.coffee:  onClientConnect: =>
src/WSServer.coffee:    @log  'onClientConnect'
src/WSServer.coffee:    @emit 'connect'
src/WSServer.coffee:  onClientOpen: =>
src/WSServer.coffee:    @log  'onClientOpen'
src/WSServer.coffee:    @emit 'open'
src/WSServer.coffee:  onClientClose: =>
src/WSServer.coffee:    @log  'onClientClose'
src/WSServer.coffee:    @emit 'close'
src/WSServer.coffee:  onClientError: (err) =>
src/WSServer.coffee:    @log  'onClientError', err
src/WSServer.coffee:    @emit 'error', err
src/WSServer.coffee:  onClientMessage: (msg) =>
src/WSServer.coffee:    @log  'onClientMessage', msg
src/WSServer.coffee:    @emit @options.emitKey, msg
src/WSServer.coffee:module.exports =
src/WSServer.coffee:  WSServer: WSServer
rocket-3d/web/Makefile:COMPILER	= ../../tools/compiler.jar
rocket-3d/web/Makefile:DEST		= jquery.rocket-3d.min.js
rocket-3d/web/Makefile:SOURCE		= jquery.rocket-3d.js
rocket-3d/web/Makefile:all		: $(DEST)
rocket-3d/web/Makefile:$(DEST)		: $(COMPILER) $(SOURCE)
rocket-3d/web/Makefile:		java -jar $(COMPILER) --js $(SOURCE) --js_output_file $(DEST)
rocket-3d/web/Makefile:clean		:
rocket-3d/web/Makefile:		rm -f $(DEST)
rocket-3d/web/index.html:<!DOCTYPE html>
rocket-3d/web/index.html:<html>
rocket-3d/web/index.html:  <head>
rocket-3d/web/index.html:    <title>Welcome to our world</title>
rocket-3d/web/index.html:    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
rocket-3d/web/index.html:    <!--[if IE]><script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
rocket-3d/web/index.html:  </head>
rocket-3d/web/index.html:  <body>
rocket-3d/web/index.html:    <script src="js/Three.js"></script>
rocket-3d/web/index.html:    <script src="js/Detector.js"></script>
rocket-3d/web/index.html:    <script src="js/RequestAnimationFrame.js"></script>
rocket-3d/web/index.html:    <script src="js/Stats.js"></script>
rocket-3d/web/index.html:    <script src="js/Tween.js"></script>
rocket-3d/web/index.html:    <script src="js/jquery.min.js"></script>
rocket-3d/web/index.html:    <!--<script src="js/dsp.js"></script>-->
rocket-3d/web/index.html:    <!--<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>-->
rocket-3d/web/index.html:    <script src="jquery.rocket-3d.js"></script>
rocket-3d/web/index.html:    <p><a id="clickme" href="#">click me !</a></p>
rocket-3d/web/index.html:    <p>or: <span>↑ ↑ ↓ ↓ ← → ← → B A</span></p>
rocket-3d/web/index.html:    <script type="text/javascript">
rocket-3d/web/index.html:      //$(window).rocket3d({enterOn: 'now'});
rocket-3d/web/index.html:      //$(window).rocket3d({enterOn: 'timer', delayTime: 2000});
rocket-3d/web/index.html:      $(window).rocket3d({enterOn: 'konami-code'});
rocket-3d/web/index.html:      $('#clickme').rocket3d({enterOn: 'click'});
rocket-3d/web/index.html:    </script>
rocket-3d/web/index.html:  </body>
rocket-3d/web/index.html:</html>
rocket-3d/web/jquery.rocket-3d-anim1.js:;(function($) {
rocket-3d/web/jquery.rocket-3d-anim1.js:     $.fn.rocket3d = function(options) {
rocket-3d/web/jquery.rocket-3d-anim1.js:         var defaults = {
rocket-3d/web/jquery.rocket-3d-anim1.js:             enterOn: 'now',
rocket-3d/web/jquery.rocket-3d-anim1.js:             delayTime: 5000,
rocket-3d/web/jquery.rocket-3d-anim1.js:         };
rocket-3d/web/jquery.rocket-3d-anim1.js:         var options = $.extend(defaults, options);
rocket-3d/web/jquery.rocket-3d-anim1.js:         return this.each(function() {
rocket-3d/web/jquery.rocket-3d-anim1.js:                              var _this = $(this);
rocket-3d/web/jquery.rocket-3d-anim1.js:                              var _started = false;
rocket-3d/web/jquery.rocket-3d-anim1.js:                              function init() {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  if (_started) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      return ;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  }
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  _started = true;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  var WIDTH = $('body').width();
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  var HEIGHT = Math.max($('body').height(), $(window).height());
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  /******/
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  if (typeof(Detector) == 'undefined' || !Detector.webgl) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      Detector.addGetWebGLMessage();
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  }
rocket-3d/web/jquery.rocket-3d-anim1.js:			          var container, stats;
rocket-3d/web/jquery.rocket-3d-anim1.js:			          var camera, scene, renderer;
rocket-3d/web/jquery.rocket-3d-anim1.js:			          var mesh, mesh2, mesh3, light;
rocket-3d/web/jquery.rocket-3d-anim1.js:			          var mouseX = 0, mouseY = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:			          var windowHalfX = WIDTH / 2;
rocket-3d/web/jquery.rocket-3d-anim1.js:			          var windowHalfY = HEIGHT / 2;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  var windowRatio = WIDTH / HEIGHT;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  $('body').append('<div id="rocket3dcontainer"></div>');
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  container = $('#rocket3dcontainer');
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  var _overflow_state = container.parent().css('overflow');
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  container.css({position: 'absolute', width: WIDTH, height: HEIGHT, top: 0, left: 0});
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  var VIEW_ANGLE = 40,
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  ASPECT = WIDTH / HEIGHT,
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  NEAR = 0.1,
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  FAR = 10000;
rocket-3d/web/jquery.rocket-3d-anim1.js:				  camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);
rocket-3d/web/jquery.rocket-3d-anim1.js:				  camera.position.z = 4000;
rocket-3d/web/jquery.rocket-3d-anim1.js:				  scene = new THREE.Scene();
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  scene.fog = new THREE.FogExp2( 0xffffff, 0.0003 );
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  //scene.fog.color.setHSV( 0.1, 0.5, 1 );
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  scene.fog.color.setHSV( 0.1, 0.10, 1 );
rocket-3d/web/jquery.rocket-3d-anim1.js:				  light = new THREE.DirectionalLight(0xffffff);
rocket-3d/web/jquery.rocket-3d-anim1.js:				  light.position.set(0, 0, 1).normalize();
rocket-3d/web/jquery.rocket-3d-anim1.js:				  scene.add(light);
rocket-3d/web/jquery.rocket-3d-anim1.js:				  var loader = new THREE.JSONLoader();
rocket-3d/web/jquery.rocket-3d-anim1.js:				  loader.load("obj/rocket3d.js", function (geometry) {
rocket-3d/web/jquery.rocket-3d-anim1.js:				                  geometry.materials[0].shading = THREE.FlatShading;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                  mesh = new THREE.Object3D();
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                  mesh.position.x = WIDTH / 2;
rocket-3d/web/jquery.rocket-3d-anim1.js:				                  mesh.position.y = -HEIGHT / 2 + 50;
rocket-3d/web/jquery.rocket-3d-anim1.js:				                  mesh.position.z = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                  mesh.rotation.x = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                  mesh.rotation.y = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                  mesh.rotation.z = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:				                  mesh.scale.x = mesh.scale.y = mesh.scale.z = 100;
rocket-3d/web/jquery.rocket-3d-anim1.js:				                  scene.add( mesh );
rocket-3d/web/jquery.rocket-3d-anim1.js:				                  var part1 = new THREE.Mesh(geometry, new THREE.MeshPhongMaterial({map:THREE.ImageUtils.loadTexture('tex/rocket3d_uvmap.png')}));
rocket-3d/web/jquery.rocket-3d-anim1.js:				                  mesh.add(part1);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                  //var part2 = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({ color: 0xff0000, opacity: 0.9, shading: THREE.FlatShading, wireframe: true, wireframeLinewidth: 2, transparent: true }));
rocket-3d/web/jquery.rocket-3d-anim1.js:				                  //mesh.add(part2);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              });
rocket-3d/web/jquery.rocket-3d-anim1.js:				  renderer = new THREE.WebGLRenderer({antialias: true});
rocket-3d/web/jquery.rocket-3d-anim1.js:				  renderer.setSize(WIDTH, HEIGHT);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  container.append(renderer.domElement);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  if (typeof(Stats) != 'undefined') {
rocket-3d/web/jquery.rocket-3d-anim1.js:				      stats = new Stats();
rocket-3d/web/jquery.rocket-3d-anim1.js:				      stats.domElement.style.position = 'absolute';
rocket-3d/web/jquery.rocket-3d-anim1.js:				      stats.domElement.style.top = '0px';
rocket-3d/web/jquery.rocket-3d-anim1.js:				      stats.domElement.style.right = '0px';
rocket-3d/web/jquery.rocket-3d-anim1.js:				      container.append(stats.domElement);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  } else {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      stats = false;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  }
rocket-3d/web/jquery.rocket-3d-anim1.js:				  /*document.addEventListener('mousemove', function(event) {
rocket-3d/web/jquery.rocket-3d-anim1.js:				                                mouseX = (event.clientX - windowHalfX);
rocket-3d/web/jquery.rocket-3d-anim1.js:				                                mouseY = (event.clientY - windowHalfY);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                            }, false);*/
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  //container.parent().css('overflow', 'hidden');
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  var step = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  var sleep_counter = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  $('#aawidth').html(WIDTH);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  $('#aaheight').html(HEIGHT);
rocket-3d/web/jquery.rocket-3d-anim1.js:				  $('#aacamera').html(camera.position.z);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  $("html:not(:animated),body:not(:animated)").animate({scrollTop: HEIGHT - $(window).height()}, 500, animate);
rocket-3d/web/jquery.rocket-3d-anim1.js:			          function animate() {
rocket-3d/web/jquery.rocket-3d-anim1.js:				      requestAnimationFrame(animate);
rocket-3d/web/jquery.rocket-3d-anim1.js:				      camera.position.x += (mouseX - camera.position.x ) * 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:				      camera.position.y += (-mouseY - camera.position.y ) * 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:				      camera.lookAt(scene.position);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      $('#aastep').html(step);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      $('#aasleep_counter').html(sleep_counter);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      $('#rotationx').html(mesh.rotation.x);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      $('#rotationy').html(mesh.rotation.y);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      $('#rotationz').html(mesh.rotation.z);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      $('#positionx').html(mesh.position.x);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      $('#positiony').html(mesh.position.y);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      $('#positionz').html(mesh.position.z);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      if (step == 0) {
rocket-3d/web/jquery.rocket-3d-anim1.js:					  mesh.rotation.y += 0.1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.position.x -= 14;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.position.x <= -WIDTH / 2 + 200) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              mesh.rotation.y = Math.round(mesh.rotation.y * 10) / 10;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              mesh.position.x = Math.round(mesh.position.x * 10) / 10;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              sleep_counter = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 1) {
rocket-3d/web/jquery.rocket-3d-anim1.js:					  mesh.rotation.y += 0.1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.rotation.y % 6 < 0.2) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              mesh.rotation.y = Math.round(mesh.rotation.y * 10) / 10;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 2;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 2) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          sleep_counter += 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (sleep_counter > 40) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 3;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 3) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.position.x += 2;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.position.x >= -WIDTH / 2 + 300) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              sleep_counter = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 5;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 5) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          sleep_counter += 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (sleep_counter > 20) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 10;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 10) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.rotation.y += 0.01;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.rotation.y >= 4.5) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              sleep_counter = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 15;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 15) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          sleep_counter += 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (sleep_counter > 20) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 20;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 20) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.rotation.y += 0.01;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.rotation.x -= 0.02;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.rotation.x <= -0.3) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              sleep_counter = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 30;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 25) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          sleep_counter += 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (sleep_counter > 10) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 30;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      } else if (step == 30) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.rotation.y += 0.01;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.rotation.z -= 0.01;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.rotation.z <= -0.4) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              sleep_counter = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 35;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 35) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          sleep_counter += 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (sleep_counter > 10) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 40;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      } else if (step == 40) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.rotation.y += 0.01;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          //mesh.position.x += 0.01;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          //alert(mesh.rotation.y);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          //mesh.p
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.rotation.y > 5.5) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              sleep_counter = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 45;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 45) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          sleep_counter += 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (sleep_counter > 10) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 50;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      } else if (step == 50) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.rotation.y -= 0.03;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          //console.log(mesh.rotation.y % 6);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.rotation.y % 6 > 4.6 && mesh.rotation.y % 6 < 4.8) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 55;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              sleep_counter = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 55) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          sleep_counter += 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (sleep_counter > 10) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 60;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      } else if (step == 60) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.rotation.y += 0.01;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.rotation.y % 6 > 5.3 && mesh.rotation.y % 6 < 5.5) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 65;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              sleep_counter = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 65) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          sleep_counter += 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (sleep_counter > 10) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 70;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      } else if (step == 70) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.rotation.x -= 0.01;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.rotation.x % 6 + 6 > 5 && mesh.rotation.x % 6 + 6 < 5.2) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 75;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              sleep_counter = 0;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      } else if (step == 75) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          sleep_counter += 1;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (sleep_counter > 50) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 80;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      } else if (step == 80) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.position.y += 5;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.position.x += 5 * windowRatio;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.scale.x -= 0.2;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.scale.y -= 0.2;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          mesh.scale.z -= 0.2;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          if (mesh.position.x > WIDTH) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                              step = 100;
rocket-3d/web/jquery.rocket-3d-anim1.js:                                          }
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      }
rocket-3d/web/jquery.rocket-3d-anim1.js:				      renderer.render(scene, camera);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      if (stats && false) {
rocket-3d/web/jquery.rocket-3d-anim1.js:				          stats.update();
rocket-3d/web/jquery.rocket-3d-anim1.js:                                      }
rocket-3d/web/jquery.rocket-3d-anim1.js:			          }
rocket-3d/web/jquery.rocket-3d-anim1.js:                              }
rocket-3d/web/jquery.rocket-3d-anim1.js:                              if (options.enterOn == 'now') {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  init();
rocket-3d/web/jquery.rocket-3d-anim1.js:                              } else if (options.enterOn == 'timer') {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  setTimeout(init, options.delayTime);
rocket-3d/web/jquery.rocket-3d-anim1.js:                              } else if(options.enterOn == 'click') {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  _this.bind('click', function(e) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                 e.preventDefault();
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                 init();
rocket-3d/web/jquery.rocket-3d-anim1.js:                                             });
rocket-3d/web/jquery.rocket-3d-anim1.js:                              } else if(options.enterOn == 'konami-code') {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  var kkeys = [], konami = "38,38,40,40,37,39,37,39,66,65";
rocket-3d/web/jquery.rocket-3d-anim1.js:                                  $(window).bind("keydown.rocketz", function(e) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                     kkeys.push(e.keyCode);
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                     if (kkeys.toString().indexOf(konami) >= 0) {
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                         init();
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                         kkeys = []
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                     }
rocket-3d/web/jquery.rocket-3d-anim1.js:                                                 }, true);
rocket-3d/web/jquery.rocket-3d-anim1.js:                              }
rocket-3d/web/jquery.rocket-3d-anim1.js:                          });
rocket-3d/web/jquery.rocket-3d-anim1.js:     }
rocket-3d/web/jquery.rocket-3d-anim1.js: })(jQuery);
rocket-3d/web/jquery.rocket-3d.js:;(function($) {
rocket-3d/web/jquery.rocket-3d.js:     $.fn.rocket3d = function(options) {
rocket-3d/web/jquery.rocket-3d.js:         var defaults = {
rocket-3d/web/jquery.rocket-3d.js:             enterOn: 'now',
rocket-3d/web/jquery.rocket-3d.js:             delayTime: 5000,
rocket-3d/web/jquery.rocket-3d.js:             width: $(window).width(),
rocket-3d/web/jquery.rocket-3d.js:             height: $(window).height(),
rocket-3d/web/jquery.rocket-3d.js:             far: 10000,
rocket-3d/web/jquery.rocket-3d.js:             near: 0.1,
rocket-3d/web/jquery.rocket-3d.js:             angle: 40,
rocket-3d/web/jquery.rocket-3d.js:             show_stats: true,
rocket-3d/web/jquery.rocket-3d.js:             stars: 800,
rocket-3d/web/jquery.rocket-3d.js:             konami_code: "38,38,40,40,37,39,37,39,66,65",
rocket-3d/web/jquery.rocket-3d.js:             show_wireframes: false,
rocket-3d/web/jquery.rocket-3d.js:             use_mouse: true,
rocket-3d/web/jquery.rocket-3d.js:             camera_z_position: 1500,
rocket-3d/web/jquery.rocket-3d.js:             light_color: 0xFFFFFF,
rocket-3d/web/jquery.rocket-3d.js:             orbit_light_color: 0xff8800,
rocket-3d/web/jquery.rocket-3d.js:             rocket_obj: 'obj/rocket3d.js',
rocket-3d/web/jquery.rocket-3d.js:             rocket_tex: 'tex/rocket3d_uvmap.png',
rocket-3d/web/jquery.rocket-3d.js:             rocket_rotation: {
rocket-3d/web/jquery.rocket-3d.js:                 x: Math.PI / 2,
rocket-3d/web/jquery.rocket-3d.js:                 y: Math.PI * 1.1,
rocket-3d/web/jquery.rocket-3d.js:                 z: Math.PI / 2
rocket-3d/web/jquery.rocket-3d.js:             },
rocket-3d/web/jquery.rocket-3d.js:             fire_particles: 1800,
rocket-3d/web/jquery.rocket-3d.js:             fire_particle_tex: 'tex/fireParticle.png',
rocket-3d/web/jquery.rocket-3d.js:             fire_obj: 'obj/rocket3d_flame.js',
rocket-3d/web/jquery.rocket-3d.js:             fire_color: 0xFFBB00,
rocket-3d/web/jquery.rocket-3d.js:             onInitCallback: false,
rocket-3d/web/jquery.rocket-3d.js:             //playSong: 'http://files.42k.fr/files/hehengT016-space.mp3'
rocket-3d/web/jquery.rocket-3d.js:             playSong: ['mus/space-loop-2.ogg', 'mus/space-loop-2.mp3', 'mus/space-loop-2.mp4'],
rocket-3d/web/jquery.rocket-3d.js:             playSong_volume: 0.7
rocket-3d/web/jquery.rocket-3d.js:         };
rocket-3d/web/jquery.rocket-3d.js:         var options = $.extend(defaults, options);
rocket-3d/web/jquery.rocket-3d.js:         return this.each(function() {
rocket-3d/web/jquery.rocket-3d.js:                              var _this = $(this);
rocket-3d/web/jquery.rocket-3d.js:                              var _started = false;
rocket-3d/web/jquery.rocket-3d.js:                              function init() {
rocket-3d/web/jquery.rocket-3d.js:                                  if (_started) {
rocket-3d/web/jquery.rocket-3d.js:                                      return ;
rocket-3d/web/jquery.rocket-3d.js:                                  }
rocket-3d/web/jquery.rocket-3d.js:                                  _started = true;
rocket-3d/web/jquery.rocket-3d.js:                                  if (typeof(Detector) == 'undefined' || !Detector.webgl) {
rocket-3d/web/jquery.rocket-3d.js:                                      Detector.addGetWebGLMessage();
rocket-3d/web/jquery.rocket-3d.js:                                      return ;
rocket-3d/web/jquery.rocket-3d.js:                                  }
rocket-3d/web/jquery.rocket-3d.js:                                  var camera, scene, container, renderer, mesh, light, light1, l1, fireParticles, fireParticleSystem;
rocket-3d/web/jquery.rocket-3d.js:                                  var stats = false,
rocket-3d/web/jquery.rocket-3d.js:                                  mouseX = 0,
rocket-3d/web/jquery.rocket-3d.js:                                  mouseY = 0,
rocket-3d/web/jquery.rocket-3d.js:			          windowHalfX = options.width / 2,
rocket-3d/web/jquery.rocket-3d.js:			          windowHalfY = options.height / 2,
rocket-3d/web/jquery.rocket-3d.js:                                  aspect = options.width / options.height;
rocket-3d/web/jquery.rocket-3d.js:                                  $('body').append('<div id="rocket3dcontainer"></div>');
rocket-3d/web/jquery.rocket-3d.js:                                  container = $('#rocket3dcontainer');
rocket-3d/web/jquery.rocket-3d.js:                                  container.css({position: 'absolute', width: options.width, height: options.height, top: 0, left: 0});
rocket-3d/web/jquery.rocket-3d.js:                                  container.css({background: '#000000'});
rocket-3d/web/jquery.rocket-3d.js:                                  container.hide();
rocket-3d/web/jquery.rocket-3d.js:                                  container.fadeIn(3000);
rocket-3d/web/jquery.rocket-3d.js:				  camera = new THREE.PerspectiveCamera(options.angle, aspect, options.near, options.far);
rocket-3d/web/jquery.rocket-3d.js:				  camera.position.z = options.camera_z_position;
rocket-3d/web/jquery.rocket-3d.js:				  scene = new THREE.Scene();
rocket-3d/web/jquery.rocket-3d.js://                                  scene.fog = new THREE.FogExp2(0x888888, 0.0003);
rocket-3d/web/jquery.rocket-3d.js://                                  scene.fog.color.setRGB(0.5, 0.5, 0.5);
rocket-3d/web/jquery.rocket-3d.js:				  var light = new THREE.DirectionalLight(options.light_color);
rocket-3d/web/jquery.rocket-3d.js:				  light.position.set(0, 0, 1).normalize();
rocket-3d/web/jquery.rocket-3d.js:				  scene.add(light);
rocket-3d/web/jquery.rocket-3d.js:                                  //var ambientLight = new THREE.AmbientLight(0x0000FF);
rocket-3d/web/jquery.rocket-3d.js:                                  //scene.add(ambientLight);
rocket-3d/web/jquery.rocket-3d.js:				  var loader = new THREE.JSONLoader();
rocket-3d/web/jquery.rocket-3d.js:                                  var particleMaterial= new THREE.ParticleBasicMaterial({
rocket-3d/web/jquery.rocket-3d.js:                                                                                            color: 0xFF66FF,
rocket-3d/web/jquery.rocket-3d.js:                                                                                            size: 15,
rocket-3d/web/jquery.rocket-3d.js:                                                                                            blending: THREE.AdditiveBlending,
rocket-3d/web/jquery.rocket-3d.js:                                                                                            transparent: true
rocket-3d/web/jquery.rocket-3d.js:                                                                                        });
rocket-3d/web/jquery.rocket-3d.js:                                  var particleGeometry = new THREE.Geometry();
rocket-3d/web/jquery.rocket-3d.js:                                  for (var p = 0; p < options.stars; p++) {
rocket-3d/web/jquery.rocket-3d.js:                                      particleGeometry.vertices.push(
rocket-3d/web/jquery.rocket-3d.js:                                          new THREE.Vertex(
rocket-3d/web/jquery.rocket-3d.js:                                              new THREE.Vector3(
rocket-3d/web/jquery.rocket-3d.js:                                                  Math.random() * options.camera_z_position * 15 - options.camera_z_position * 3,
rocket-3d/web/jquery.rocket-3d.js:                                                  Math.random() * options.camera_z_position * 6 - options.camera_z_position * 3,
rocket-3d/web/jquery.rocket-3d.js:                                                  -1000
rocket-3d/web/jquery.rocket-3d.js:                                              )
rocket-3d/web/jquery.rocket-3d.js:                                          )
rocket-3d/web/jquery.rocket-3d.js:                                      );
rocket-3d/web/jquery.rocket-3d.js:                                  }
rocket-3d/web/jquery.rocket-3d.js:                                  var particleSystem = new THREE.ParticleSystem(particleGeometry, particleMaterial);
rocket-3d/web/jquery.rocket-3d.js:                                  scene.add(particleSystem);
rocket-3d/web/jquery.rocket-3d.js:				  loader.load(options.rocket_obj, function (geometry) {
rocket-3d/web/jquery.rocket-3d.js:				                  geometry.materials[0].shading = THREE.FlatShading;
rocket-3d/web/jquery.rocket-3d.js:                                                  mesh = new THREE.Object3D();
rocket-3d/web/jquery.rocket-3d.js:				                  mesh.position.x = 0;
rocket-3d/web/jquery.rocket-3d.js:/*                                                  mesh.rotation = {
rocket-3d/web/jquery.rocket-3d.js:                                                      x: options.rocket_rotation.x,
rocket-3d/web/jquery.rocket-3d.js:                                                      y: options.rocket_rotation.y,
rocket-3d/web/jquery.rocket-3d.js:                                                      z: options.rocket_rotation.z
rocket-3d/web/jquery.rocket-3d.js:                                                      };*/
rocket-3d/web/jquery.rocket-3d.js:				                  mesh.scale.x = mesh.scale.y = mesh.scale.z = 150;
rocket-3d/web/jquery.rocket-3d.js:				                  //scene.add(mesh);
rocket-3d/web/jquery.rocket-3d.js:				                  var part1 = new THREE.Mesh(geometry, new THREE.MeshPhongMaterial({map:THREE.ImageUtils.loadTexture(options.rocket_tex)}));
rocket-3d/web/jquery.rocket-3d.js:				                  mesh.add(part1);
rocket-3d/web/jquery.rocket-3d.js:                                                  if (options.show_wireframes) {
rocket-3d/web/jquery.rocket-3d.js:                                                      var part2 = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({ color: 0xff0000, opacity: 0.9, shading: THREE.FlatShading, wireframe: true, wireframeLinewidth: 2, transparent: true }));
rocket-3d/web/jquery.rocket-3d.js:				                      mesh.add(part2);
rocket-3d/web/jquery.rocket-3d.js:                                                  }
rocket-3d/web/jquery.rocket-3d.js:                                                  container.parent().css('overflow', 'hidden');
rocket-3d/web/jquery.rocket-3d.js:                                                  $('html,body').css('overflow', 'hidden');
rocket-3d/web/jquery.rocket-3d.js:                                                  $("html:not(:animated),body:not(:animated)").animate({scrollTop: 0}, 500);
rocket-3d/web/jquery.rocket-3d.js:                                                  if (options.onInitCallback) {
rocket-3d/web/jquery.rocket-3d.js:                                                      options.onInitCallback();
rocket-3d/web/jquery.rocket-3d.js:                                                  }
rocket-3d/web/jquery.rocket-3d.js:                                                  //animate();
rocket-3d/web/jquery.rocket-3d.js:				                  loader.load(options.fire_obj, function (geometry) {
rocket-3d/web/jquery.rocket-3d.js:                                                                  var dummy = new THREE.Object3D();
rocket-3d/web/jquery.rocket-3d.js:                                                                  dummy.rotation = {
rocket-3d/web/jquery.rocket-3d.js:                                                                      x: options.rocket_rotation.x,
rocket-3d/web/jquery.rocket-3d.js:                                                                      y: options.rocket_rotation.y,
rocket-3d/web/jquery.rocket-3d.js:                                                                      z: options.rocket_rotation.z
rocket-3d/web/jquery.rocket-3d.js:                                                                  };
rocket-3d/web/jquery.rocket-3d.js:                                                                  dummy.position.x = -250;
rocket-3d/web/jquery.rocket-3d.js:                                                                  if (options.fire_particles) {
rocket-3d/web/jquery.rocket-3d.js:                                                                      fireParticles = new THREE.Geometry();
rocket-3d/web/jquery.rocket-3d.js:                                                                      var pMaterial = new THREE.ParticleBasicMaterial({
rocket-3d/web/jquery.rocket-3d.js:                                                                                                                          size: 60,
rocket-3d/web/jquery.rocket-3d.js:                                                                                                                          map: THREE.ImageUtils.loadTexture(options.fire_particle_tex),
rocket-3d/web/jquery.rocket-3d.js:                                                                                                                          blending: THREE.AdditiveBlending,
rocket-3d/web/jquery.rocket-3d.js:                                                                                                                          transparent: true,
rocket-3d/web/jquery.rocket-3d.js:                                                                                                                          vertexColors: true
rocket-3d/web/jquery.rocket-3d.js:                                                                                                                      });
rocket-3d/web/jquery.rocket-3d.js:                                                                      var colors = [];
rocket-3d/web/jquery.rocket-3d.js:                                                                      fireParticles.colors = colors;
rocket-3d/web/jquery.rocket-3d.js:                                                                      for (var i = 0; i < options.fire_particles; i++) {
rocket-3d/web/jquery.rocket-3d.js:                                                                          var particle = new THREE.Vertex(new THREE.Vector3(0, 0, 0));
rocket-3d/web/jquery.rocket-3d.js:                                                                          particle.velocity = new THREE.Vector3((Math.random() - 0.5) * 2, -Math.random(), -Math.random() + Math.random() * 2);
rocket-3d/web/jquery.rocket-3d.js:                                                                          //particle.rotation = mesh.rotation;
rocket-3d/web/jquery.rocket-3d.js:                                                                          fireParticles.vertices.push(particle);
rocket-3d/web/jquery.rocket-3d.js:                                                                          var c = new THREE.Color(Math.random() * 0xffffff);
rocket-3d/web/jquery.rocket-3d.js:                                                                          colors[i] = c;
rocket-3d/web/jquery.rocket-3d.js:                                                                      }
rocket-3d/web/jquery.rocket-3d.js:                                                                      fireParticleSystem = new THREE.ParticleSystem(fireParticles, pMaterial);
rocket-3d/web/jquery.rocket-3d.js:                                                                      fireParticleSystem.sortParticles = true;
rocket-3d/web/jquery.rocket-3d.js:                                                                      dummy.add(fireParticleSystem);
rocket-3d/web/jquery.rocket-3d.js:                                                                  } else {
rocket-3d/web/jquery.rocket-3d.js:				                                      geometry.materials[0].shading = THREE.FlatShading;
rocket-3d/web/jquery.rocket-3d.js:                                                                      mesh2 = new THREE.Object3D();
rocket-3d/web/jquery.rocket-3d.js:                                                                      mesh2.position = mesh.position;
rocket-3d/web/jquery.rocket-3d.js:                                                                      //mesh2.rotation = mesh.rotation;
rocket-3d/web/jquery.rocket-3d.js:				                                      mesh2.scale.x = mesh2.scale.y = mesh2.scale.z = 150;
rocket-3d/web/jquery.rocket-3d.js:                                                                      var part1 = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({color: options.fire_color, opacity: 0.9, overdraw: false}));
rocket-3d/web/jquery.rocket-3d.js:				                                      mesh2.add(part1);
rocket-3d/web/jquery.rocket-3d.js:                                                                      if (options.show_wireframes) {
rocket-3d/web/jquery.rocket-3d.js:                                                                          var part2 = new THREE.Mesh(geometry, new THREE.Mesh({ color: 0xff0000, opacity: 0.9, shading: THREE.FlatShading, wireframe: true, wireframeLinewidth: 2, transparent: true }));
rocket-3d/web/jquery.rocket-3d.js:				                                          mesh2.add(part2);
rocket-3d/web/jquery.rocket-3d.js:                                                                      }
rocket-3d/web/jquery.rocket-3d.js:                                                                      dummy.add(mesh2);
rocket-3d/web/jquery.rocket-3d.js:                                                                      fireNewTween(mesh2, false, 150);
rocket-3d/web/jquery.rocket-3d.js:                                                                  }
rocket-3d/web/jquery.rocket-3d.js:                                                                  light1 = new THREE.PointLight(options.orbit_light_color, 5, 300);
rocket-3d/web/jquery.rocket-3d.js:                                                                  scene.add(light1);
rocket-3d/web/jquery.rocket-3d.js:                                                                  light1.intensity = 5;
rocket-3d/web/jquery.rocket-3d.js:                                                                  var sphere = new THREE.SphereGeometry(5, 16, 8);
rocket-3d/web/jquery.rocket-3d.js:                                                                  l1 = new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: options.orbit_light_color }));
rocket-3d/web/jquery.rocket-3d.js:                                                                  l1.position = light1.position;
rocket-3d/web/jquery.rocket-3d.js:                                                                  scene.add(l1);
rocket-3d/web/jquery.rocket-3d.js:                                                                  dummy.add(mesh);
rocket-3d/web/jquery.rocket-3d.js:                                                                  scene.add(dummy);
rocket-3d/web/jquery.rocket-3d.js:                                                                  oscilNewTween(dummy);
rocket-3d/web/jquery.rocket-3d.js:                                                                  if (options.playSong) {
rocket-3d/web/jquery.rocket-3d.js:                                                                      var audio = document.createElement('audio');
rocket-3d/web/jquery.rocket-3d.js:                                                                      for (var i = 0; i < options.playSong.length; i++) {
rocket-3d/web/jquery.rocket-3d.js:                                                                          var source = document.createElement('source');
rocket-3d/web/jquery.rocket-3d.js:                                                                          source.src = options.playSong[i];
rocket-3d/web/jquery.rocket-3d.js:                                                                          audio.appendChild(source);
rocket-3d/web/jquery.rocket-3d.js:                                                                      }
rocket-3d/web/jquery.rocket-3d.js:                                                                      audio.volume = options.playSong_volume;
rocket-3d/web/jquery.rocket-3d.js:                                                                      audio.loop = 'loop';
rocket-3d/web/jquery.rocket-3d.js:                                                                      audio.play();
rocket-3d/web/jquery.rocket-3d.js:                                                                  }
rocket-3d/web/jquery.rocket-3d.js:                                                                  animate();
rocket-3d/web/jquery.rocket-3d.js:                                                              });
rocket-3d/web/jquery.rocket-3d.js:                                              });
rocket-3d/web/jquery.rocket-3d.js:                                  function fireNewTween(mesh, pointLight, oldSize) {
rocket-3d/web/jquery.rocket-3d.js:                                      var newSize = Math.random() * 100 + 100;
rocket-3d/web/jquery.rocket-3d.js:                                      //console.dir(pointLight.position);
rocket-3d/web/jquery.rocket-3d.js:                                      if (pointLight) {
rocket-3d/web/jquery.rocket-3d.js:                                          new TWEEN.Tween(pointLight)
rocket-3d/web/jquery.rocket-3d.js:                                              .to({intensity: newSize / 5}, 150)
rocket-3d/web/jquery.rocket-3d.js:                                              .easing(TWEEN.Easing.Cubic.EaseIn)
rocket-3d/web/jquery.rocket-3d.js:                                              .start();
rocket-3d/web/jquery.rocket-3d.js:                                      }
rocket-3d/web/jquery.rocket-3d.js:                                      new TWEEN.Tween(mesh.scale)
rocket-3d/web/jquery.rocket-3d.js:                                          .to({
rocket-3d/web/jquery.rocket-3d.js:                                                  x: newSize,
rocket-3d/web/jquery.rocket-3d.js:                                                  y: newSize,
rocket-3d/web/jquery.rocket-3d.js:                                                  z: newSize
rocket-3d/web/jquery.rocket-3d.js:                                              }, 150)
rocket-3d/web/jquery.rocket-3d.js:                                          .easing(TWEEN.Easing.Cubic.EaseIn)
rocket-3d/web/jquery.rocket-3d.js:                                          .onComplete(function() { fireNewTween(mesh, pointLight, newSize); })
rocket-3d/web/jquery.rocket-3d.js:                                          .start();
rocket-3d/web/jquery.rocket-3d.js:                                  }
rocket-3d/web/jquery.rocket-3d.js:                                  function oscilNewTween(mesh) {
rocket-3d/web/jquery.rocket-3d.js:                                      new TWEEN.Tween(mesh.rotation)
rocket-3d/web/jquery.rocket-3d.js:                                          .to({
rocket-3d/web/jquery.rocket-3d.js:                                                  x: options.rocket_rotation.x + Math.random() * Math.PI / 15,
rocket-3d/web/jquery.rocket-3d.js:                                                  y: options.rocket_rotation.y + Math.random() * Math.PI / 20,
rocket-3d/web/jquery.rocket-3d.js:                                                  z: options.rocket_rotation.z + Math.random() * Math.PI / 15
rocket-3d/web/jquery.rocket-3d.js:                                              }, 930)
rocket-3d/web/jquery.rocket-3d.js:                                          .easing(TWEEN.Easing.Linear.EaseNone)
rocket-3d/web/jquery.rocket-3d.js:                                          //.easing(TWEEN.Easing.Circular.EaseInOut)
rocket-3d/web/jquery.rocket-3d.js:                                          .onComplete(function() { oscilNewTween(mesh); })
rocket-3d/web/jquery.rocket-3d.js:                                          .start();
rocket-3d/web/jquery.rocket-3d.js:                                  }
rocket-3d/web/jquery.rocket-3d.js:				  renderer = new THREE.WebGLRenderer({antialias: true});
rocket-3d/web/jquery.rocket-3d.js:				  renderer.setSize(options.width, options.height);
rocket-3d/web/jquery.rocket-3d.js:                                  container.append(renderer.domElement);
rocket-3d/web/jquery.rocket-3d.js:                                  if (options.show_stats && typeof(Stats) != 'undefined') {
rocket-3d/web/jquery.rocket-3d.js:				      stats = new Stats();
rocket-3d/web/jquery.rocket-3d.js:				      stats.domElement.style.position = 'absolute';
rocket-3d/web/jquery.rocket-3d.js:				      stats.domElement.style.top = '0px';
rocket-3d/web/jquery.rocket-3d.js:				      stats.domElement.style.right = '0px';
rocket-3d/web/jquery.rocket-3d.js:				      container.append(stats.domElement);
rocket-3d/web/jquery.rocket-3d.js:                                  }
rocket-3d/web/jquery.rocket-3d.js:                                  if (options.use_mouse) {
rocket-3d/web/jquery.rocket-3d.js:				      document.addEventListener('mousemove', function(event) {
rocket-3d/web/jquery.rocket-3d.js:				                                    mouseX = (event.clientX - windowHalfX) * 2;
rocket-3d/web/jquery.rocket-3d.js:				                                    mouseY = (event.clientY - windowHalfY) * 2;
rocket-3d/web/jquery.rocket-3d.js:                                                                }, false);
rocket-3d/web/jquery.rocket-3d.js:                                  }
rocket-3d/web/jquery.rocket-3d.js:                                  var activeFireParticles = 0;
rocket-3d/web/jquery.rocket-3d.js:			          function animate() {
rocket-3d/web/jquery.rocket-3d.js:				      requestAnimationFrame(animate);
rocket-3d/web/jquery.rocket-3d.js:                                      if (l1) {
rocket-3d/web/jquery.rocket-3d.js:                                          var time = Date.now() * 0.0005;
rocket-3d/web/jquery.rocket-3d.js:                                          l1.position.x = Math.sin(time * 1) * 500;
rocket-3d/web/jquery.rocket-3d.js:                                          l1.position.y = Math.cos(time * 1) * 300;
rocket-3d/web/jquery.rocket-3d.js:                                          l1.position.z = Math.cos(time * 1) * 200;
rocket-3d/web/jquery.rocket-3d.js:                                      }
rocket-3d/web/jquery.rocket-3d.js:				      camera.position.x += (mouseX - camera.position.x ) * 1;
rocket-3d/web/jquery.rocket-3d.js:				      camera.position.y += (-mouseY - camera.position.y ) * 1;
rocket-3d/web/jquery.rocket-3d.js:				      camera.lookAt(scene.position);
rocket-3d/web/jquery.rocket-3d.js:                                      particleSystem.position.x -= 0.5;
rocket-3d/web/jquery.rocket-3d.js:                                      //console.log(activeFireParticles);
rocket-3d/web/jquery.rocket-3d.js:                                      if (options.fire_particles) {
rocket-3d/web/jquery.rocket-3d.js:                                          for (var i = 0; i < activeFireParticles; i++) {
rocket-3d/web/jquery.rocket-3d.js:                                              var particle = fireParticles.vertices[i];
rocket-3d/web/jquery.rocket-3d.js:                                              if (particle.position.y < 0 - Math.random() * 100 - 200) {
rocket-3d/web/jquery.rocket-3d.js:                                                  var pos = particle.position;
rocket-3d/web/jquery.rocket-3d.js:                                                  pos.x = 0;
rocket-3d/web/jquery.rocket-3d.js:                                                  pos.y = 0;
rocket-3d/web/jquery.rocket-3d.js:                                                  pos.z = 0;
rocket-3d/web/jquery.rocket-3d.js:                                                  particle.velocity.y = 0;
rocket-3d/web/jquery.rocket-3d.js:                                              }
rocket-3d/web/jquery.rocket-3d.js:                                              particle.velocity.y -= Math.random() * .1;
rocket-3d/web/jquery.rocket-3d.js:                                              particle.position.addSelf(particle.velocity);
rocket-3d/web/jquery.rocket-3d.js:                                          }
rocket-3d/web/jquery.rocket-3d.js:                                          if (activeFireParticles < options.fire_particles) {
rocket-3d/web/jquery.rocket-3d.js:                                              activeFireParticles += 10;
rocket-3d/web/jquery.rocket-3d.js:                                          }
rocket-3d/web/jquery.rocket-3d.js:                                          fireParticleSystem.geometry.__dirtyVertices = true;
rocket-3d/web/jquery.rocket-3d.js:                                      }
rocket-3d/web/jquery.rocket-3d.js:                                      TWEEN.update();
rocket-3d/web/jquery.rocket-3d.js:				      renderer.render(scene, camera);
rocket-3d/web/jquery.rocket-3d.js:                                      if (options.show_stats && stats) {
rocket-3d/web/jquery.rocket-3d.js:				          stats.update();
rocket-3d/web/jquery.rocket-3d.js:                                      }
rocket-3d/web/jquery.rocket-3d.js:			          }
rocket-3d/web/jquery.rocket-3d.js:                              }
rocket-3d/web/jquery.rocket-3d.js:                              if (options.enterOn == 'now') {
rocket-3d/web/jquery.rocket-3d.js:                                  init();
rocket-3d/web/jquery.rocket-3d.js:                              } else if (options.enterOn == 'timer') {
rocket-3d/web/jquery.rocket-3d.js:                                  setTimeout(init, options.delayTime);
rocket-3d/web/jquery.rocket-3d.js:                              } else if(options.enterOn == 'click') {
rocket-3d/web/jquery.rocket-3d.js:                                  _this.bind('click', function(e) {
rocket-3d/web/jquery.rocket-3d.js:                                                 e.preventDefault();
rocket-3d/web/jquery.rocket-3d.js:                                                 init();
rocket-3d/web/jquery.rocket-3d.js:                                             });
rocket-3d/web/jquery.rocket-3d.js:                              } else if(options.enterOn == 'konami-code') {
rocket-3d/web/jquery.rocket-3d.js:                                  var kkeys = [], konami = options.konami_code;
rocket-3d/web/jquery.rocket-3d.js:                                  $(window).bind("keydown.rocketz", function(e) {
rocket-3d/web/jquery.rocket-3d.js:                                                     kkeys.push(e.keyCode);
rocket-3d/web/jquery.rocket-3d.js:                                                     if (kkeys.toString().indexOf(konami) >= 0) {
rocket-3d/web/jquery.rocket-3d.js:                                                         init();
rocket-3d/web/jquery.rocket-3d.js:                                                         kkeys = []
rocket-3d/web/jquery.rocket-3d.js:                                                     }
rocket-3d/web/jquery.rocket-3d.js:                                                 }, true);
rocket-3d/web/jquery.rocket-3d.js:                              }
rocket-3d/web/jquery.rocket-3d.js:                          });
rocket-3d/web/jquery.rocket-3d.js:     }
rocket-3d/web/jquery.rocket-3d.js: })(jQuery);
rocket-3d/web/jquery.rocket-3d.min.js:(function(e){e.fn.rocket3d=function(a){var n={enterOn:"now",delayTime:5E3,width:e(window).width(),height:e(window).height(),far:1E4,near:0.1,angle:40,show_stats:!0,stars:800,konami_code:"38,38,40,40,37,39,37,39,66,65",show_wireframes:!1,use_mouse:!0,camera_z_position:1500,light_color:16777215,orbit_light_color:16746496,rocket_obj:"obj/rocket3d.js",rocket_tex:"tex/rocket3d_uvmap.png",rocket_rotation:{x:Math.PI/2,y:Math.PI*1.1,z:Math.PI/2},fire_particles:1800,fire_particle_tex:"tex/fireParticle.png",
rocket-3d/web/jquery.rocket-3d.min.js:fire_obj:"obj/rocket3d_flame.js",fire_color:16759552,onInitCallback:!1,playSong:["mus/space-loop-2.ogg","mus/space-loop-2.mp3","mus/space-loop-2.mp4"],playSong_volume:0.7},a=e.extend(n,a);return this.each(function(){function j(){function v(a,d){var c=Math.random()*100+100;d&&(new TWEEN.Tween(d)).to({intensity:c/5},150).easing(TWEEN.Easing.Cubic.EaseIn).start();(new TWEEN.Tween(a.scale)).to({x:c,y:c,z:c},150).easing(TWEEN.Easing.Cubic.EaseIn).onComplete(function(){v(a,d,c)}).start()}function j(b){(new TWEEN.Tween(b.rotation)).to({x:a.rocket_rotation.x+
rocket-3d/web/jquery.rocket-3d.min.js:Math.random()*Math.PI/15,y:a.rocket_rotation.y+Math.random()*Math.PI/20,z:a.rocket_rotation.z+Math.random()*Math.PI/15},930).easing(TWEEN.Easing.Linear.EaseNone).onComplete(function(){j(b)}).start()}function n(){requestAnimationFrame(n);if(k){var b=Date.now()*5.0E-4;k.position.x=Math.sin(b*1)*500;k.position.y=Math.cos(b*1)*300;k.position.z=Math.cos(b*1)*200}f.position.x+=(o-f.position.x)*1;f.position.y+=(-w-f.position.y)*1;f.lookAt(h.position);x.position.x-=0.5;if(a.fire_particles){for(b=0;b<t;b++){var d=
rocket-3d/web/jquery.rocket-3d.min.js:p.vertices[b];if(d.position.y<0-Math.random()*100-200){var c=d.position;c.x=0;c.y=0;c.z=0;d.velocity.y=0}d.velocity.y-=Math.random()*0.1;d.position.addSelf(d.velocity)}t<a.fire_particles&&(t+=10);q.geometry.__dirtyVertices=!0}TWEEN.update();r.render(h,f);a.show_stats&&l&&l.update()}if(!y)if(y=!0,typeof Detector=="undefined"||!Detector.webgl)Detector.addGetWebGLMessage();else{var f,h,i,r,g,m,s,k,p,q,l=!1,o=0,w=0,u=a.width/2,C=a.height/2;m=a.width/a.height;e("body").append('<div id="rocket3dcontainer"></div>');
rocket-3d/web/jquery.rocket-3d.min.js:i=e("#rocket3dcontainer");i.css({position:"absolute",width:a.width,height:a.height,top:0,left:0});i.css({background:"#000000"});i.hide();i.fadeIn(3E3);f=new THREE.PerspectiveCamera(a.angle,m,a.near,a.far);f.position.z=a.camera_z_position;h=new THREE.Scene;m=new THREE.DirectionalLight(a.light_color);m.position.set(0,0,1).normalize();h.add(m);var z=new THREE.JSONLoader;m=new THREE.ParticleBasicMaterial({color:16738047,size:15,blending:THREE.AdditiveBlending,transparent:!0});for(var A=new THREE.Geometry,
rocket-3d/web/jquery.rocket-3d.min.js:B=0;B<a.stars;B++)A.vertices.push(new THREE.Vertex(new THREE.Vector3(Math.random()*a.camera_z_position*15-a.camera_z_position*3,Math.random()*a.camera_z_position*6-a.camera_z_position*3,-1E3)));var x=new THREE.ParticleSystem(A,m);h.add(x);z.load(a.rocket_obj,function(b){b.materials[0].shading=THREE.FlatShading;g=new THREE.Object3D;g.position.x=0;g.scale.x=g.scale.y=g.scale.z=150;var d=new THREE.Mesh(b,new THREE.MeshPhongMaterial({map:THREE.ImageUtils.loadTexture(a.rocket_tex)}));g.add(d);a.show_wireframes&&
rocket-3d/web/jquery.rocket-3d.min.js:(b=new THREE.Mesh(b,new THREE.MeshLambertMaterial({color:16711680,opacity:0.9,shading:THREE.FlatShading,wireframe:!0,wireframeLinewidth:2,transparent:!0})),g.add(b));i.parent().css("overflow","hidden");e("html,body").css("overflow","hidden");e("html:not(:animated),body:not(:animated)").animate({scrollTop:0},500);if(a.onInitCallback)a.onInitCallback();z.load(a.fire_obj,function(c){var b=new THREE.Object3D;b.rotation={x:a.rocket_rotation.x,y:a.rocket_rotation.y,z:a.rocket_rotation.z};b.position.x=-250;
rocket-3d/web/jquery.rocket-3d.min.js:if(a.fire_particles){p=new THREE.Geometry;var d=new THREE.ParticleBasicMaterial({size:60,map:THREE.ImageUtils.loadTexture(a.fire_particle_tex),blending:THREE.AdditiveBlending,transparent:!0,vertexColors:!0}),e=[];p.colors=e;for(c=0;c<a.fire_particles;c++){var f=new THREE.Vertex(new THREE.Vector3(0,0,0));f.velocity=new THREE.Vector3((Math.random()-0.5)*2,-Math.random(),-Math.random()+Math.random()*2);p.vertices.push(f);f=new THREE.Color(Math.random()*16777215);e[c]=f}q=new THREE.ParticleSystem(p,d);
rocket-3d/web/jquery.rocket-3d.min.js:q.sortParticles=!0;b.add(q)}else c.materials[0].shading=THREE.FlatShading,mesh2=new THREE.Object3D,mesh2.position=g.position,mesh2.scale.x=mesh2.scale.y=mesh2.scale.z=150,d=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:a.fire_color,opacity:0.9,overdraw:!1})),mesh2.add(d),a.show_wireframes&&(c=new THREE.Mesh(c,new THREE.Mesh({color:16711680,opacity:0.9,shading:THREE.FlatShading,wireframe:!0,wireframeLinewidth:2,transparent:!0})),mesh2.add(c)),b.add(mesh2),v(mesh2,!1,150);s=new THREE.PointLight(a.orbit_light_color,
rocket-3d/web/jquery.rocket-3d.min.js:5,300);h.add(s);s.intensity=5;c=new THREE.SphereGeometry(5,16,8);k=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:a.orbit_light_color}));k.position=s.position;h.add(k);b.add(g);h.add(b);j(b);if(a.playSong){b=document.createElement("audio");for(c=0;c<a.playSong.length;c++)d=document.createElement("source"),d.src=a.playSong[c],b.appendChild(d);b.volume=a.playSong_volume;b.loop="loop";b.play()}n()})});r=new THREE.WebGLRenderer({antialias:!0});r.setSize(a.width,a.height);i.append(r.domElement);if(a.show_stats&&
rocket-3d/web/jquery.rocket-3d.min.js:typeof Stats!="undefined")l=new Stats,l.domElement.style.position="absolute",l.domElement.style.top="0px",l.domElement.style.right="0px",i.append(l.domElement);a.use_mouse&&document.addEventListener("mousemove",function(a){o=(a.clientX-u)*2;w=(a.clientY-C)*2},!1);var t=0}}var n=e(this),y=!1;if(a.enterOn=="now")j();else if(a.enterOn=="timer")setTimeout(j,a.delayTime);else if(a.enterOn=="click")n.bind("click",function(a){a.preventDefault();j()});else if(a.enterOn=="konami-code"){var o=[],u=a.konami_code;
rocket-3d/web/jquery.rocket-3d.min.js:e(window).bind("keydown.rocketz",function(a){o.push(a.keyCode);o.toString().indexOf(u)>=0&&(j(),o=[])},!0)}})}})(jQuery);
rocket-3d/web/js/Detector.js:/**
rocket-3d/web/js/Detector.js: * @author alteredq / http://alteredqualia.com/
rocket-3d/web/js/Detector.js: * @author mr.doob / http://mrdoob.com/
rocket-3d/web/js/Detector.js: */
rocket-3d/web/js/Detector.js:Detector = {
rocket-3d/web/js/Detector.js:	canvas : !! window.CanvasRenderingContext2D,
rocket-3d/web/js/Detector.js:	webgl : ( function () { try { return !! window.WebGLRenderingContext && !! document.createElement( 'canvas' ).getContext( 'experimental-webgl' ); } catch( e ) { return false; } } )(),
rocket-3d/web/js/Detector.js:	workers : !! window.Worker,
rocket-3d/web/js/Detector.js:	fileapi : window.File && window.FileReader && window.FileList && window.Blob,
rocket-3d/web/js/Detector.js:	getWebGLErrorMessage : function () {
rocket-3d/web/js/Detector.js:		var domElement = document.createElement( 'div' );
rocket-3d/web/js/Detector.js:		domElement.style.fontFamily = 'monospace';
rocket-3d/web/js/Detector.js:		domElement.style.fontSize = '13px';
rocket-3d/web/js/Detector.js:		domElement.style.textAlign = 'center';
rocket-3d/web/js/Detector.js:		domElement.style.background = '#eee';
rocket-3d/web/js/Detector.js:		domElement.style.color = '#000';
rocket-3d/web/js/Detector.js:		domElement.style.padding = '1em';
rocket-3d/web/js/Detector.js:		domElement.style.width = '475px';
rocket-3d/web/js/Detector.js:		domElement.style.margin = '5em auto 0';
rocket-3d/web/js/Detector.js:		if ( ! this.webgl ) {
rocket-3d/web/js/Detector.js:			domElement.innerHTML = window.WebGLRenderingContext ? [
rocket-3d/web/js/Detector.js:				'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a>.<br />',
rocket-3d/web/js/Detector.js:				'Find out how to get it <a href="http://get.webgl.org/">here</a>.'
rocket-3d/web/js/Detector.js:			].join( '\n' ) : [
rocket-3d/web/js/Detector.js:				'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a>.<br/>',
rocket-3d/web/js/Detector.js:				'Find out how to get it <a href="http://get.webgl.org/">here</a>.'
rocket-3d/web/js/Detector.js:			].join( '\n' );
rocket-3d/web/js/Detector.js:		}
rocket-3d/web/js/Detector.js:		return domElement;
rocket-3d/web/js/Detector.js:	},
rocket-3d/web/js/Detector.js:	addGetWebGLMessage : function ( parameters ) {
rocket-3d/web/js/Detector.js:		var parent, id, domElement;
rocket-3d/web/js/Detector.js:		parameters = parameters || {};
rocket-3d/web/js/Detector.js:		parent = parameters.parent !== undefined ? parameters.parent : document.body;
rocket-3d/web/js/Detector.js:		id = parameters.id !== undefined ? parameters.id : 'oldie';
rocket-3d/web/js/Detector.js:		domElement = Detector.getWebGLErrorMessage();
rocket-3d/web/js/Detector.js:		domElement.id = id;
rocket-3d/web/js/Detector.js:		parent.appendChild( domElement );
rocket-3d/web/js/Detector.js:	}
rocket-3d/web/js/Detector.js:};
rocket-3d/web/js/RequestAnimationFrame.js:/**
rocket-3d/web/js/RequestAnimationFrame.js: * Provides requestAnimationFrame in a cross browser way.
rocket-3d/web/js/RequestAnimationFrame.js: * http://paulirish.com/2011/requestanimationframe-for-smart-animating/
rocket-3d/web/js/RequestAnimationFrame.js: */
rocket-3d/web/js/RequestAnimationFrame.js:if ( !window.requestAnimationFrame ) {
rocket-3d/web/js/RequestAnimationFrame.js:	window.requestAnimationFrame = ( function() {
rocket-3d/web/js/RequestAnimationFrame.js:		return window.webkitRequestAnimationFrame ||
rocket-3d/web/js/RequestAnimationFrame.js:		window.mozRequestAnimationFrame ||
rocket-3d/web/js/RequestAnimationFrame.js:		window.oRequestAnimationFrame ||
rocket-3d/web/js/RequestAnimationFrame.js:		window.msRequestAnimationFrame ||
rocket-3d/web/js/RequestAnimationFrame.js:		function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {
rocket-3d/web/js/RequestAnimationFrame.js:			window.setTimeout( callback, 1000 / 60 );
rocket-3d/web/js/RequestAnimationFrame.js:		};
rocket-3d/web/js/RequestAnimationFrame.js:	} )();
rocket-3d/web/js/RequestAnimationFrame.js:}
rocket-3d/web/js/Stats.js:// stats.js r8 - http://github.com/mrdoob/stats.js
rocket-3d/web/js/Stats.js:var Stats=function(){var h,a,n=0,o=0,i=Date.now(),u=i,p=i,l=0,q=1E3,r=0,e,j,f,b=[[16,16,48],[0,255,255]],m=0,s=1E3,t=0,d,k,g,c=[[16,48,16],[0,255,0]];h=document.createElement("div");h.style.cursor="pointer";h.style.width="80px";h.style.opacity="0.9";h.style.zIndex="10001";h.addEventListener("mousedown",function(a){a.preventDefault();n=(n+1)%2;n==0?(e.style.display="block",d.style.display="none"):(e.style.display="none",d.style.display="block")},!1);e=document.createElement("div");e.style.textAlign=
rocket-3d/web/js/Stats.js:"left";e.style.lineHeight="1.2em";e.style.backgroundColor="rgb("+Math.floor(b[0][0]/2)+","+Math.floor(b[0][1]/2)+","+Math.floor(b[0][2]/2)+")";e.style.padding="0 0 3px 3px";h.appendChild(e);j=document.createElement("div");j.style.fontFamily="Helvetica, Arial, sans-serif";j.style.fontSize="9px";j.style.color="rgb("+b[1][0]+","+b[1][1]+","+b[1][2]+")";j.style.fontWeight="bold";j.innerHTML="FPS";e.appendChild(j);f=document.createElement("div");f.style.position="relative";f.style.width="74px";f.style.height=
rocket-3d/web/js/Stats.js:"30px";f.style.backgroundColor="rgb("+b[1][0]+","+b[1][1]+","+b[1][2]+")";for(e.appendChild(f);f.children.length<74;)a=document.createElement("span"),a.style.width="1px",a.style.height="30px",a.style.cssFloat="left",a.style.backgroundColor="rgb("+b[0][0]+","+b[0][1]+","+b[0][2]+")",f.appendChild(a);d=document.createElement("div");d.style.textAlign="left";d.style.lineHeight="1.2em";d.style.backgroundColor="rgb("+Math.floor(c[0][0]/2)+","+Math.floor(c[0][1]/2)+","+Math.floor(c[0][2]/2)+")";d.style.padding=
rocket-3d/web/js/Stats.js:"0 0 3px 3px";d.style.display="none";h.appendChild(d);k=document.createElement("div");k.style.fontFamily="Helvetica, Arial, sans-serif";k.style.fontSize="9px";k.style.color="rgb("+c[1][0]+","+c[1][1]+","+c[1][2]+")";k.style.fontWeight="bold";k.innerHTML="MS";d.appendChild(k);g=document.createElement("div");g.style.position="relative";g.style.width="74px";g.style.height="30px";g.style.backgroundColor="rgb("+c[1][0]+","+c[1][1]+","+c[1][2]+")";for(d.appendChild(g);g.children.length<74;)a=document.createElement("span"),
rocket-3d/web/js/Stats.js:a.style.width="1px",a.style.height=Math.random()*30+"px",a.style.cssFloat="left",a.style.backgroundColor="rgb("+c[0][0]+","+c[0][1]+","+c[0][2]+")",g.appendChild(a);return{domElement:h,update:function(){i=Date.now();m=i-u;s=Math.min(s,m);t=Math.max(t,m);k.textContent=m+" MS ("+s+"-"+t+")";var a=Math.min(30,30-m/200*30);g.appendChild(g.firstChild).style.height=a+"px";u=i;o++;if(i>p+1E3)l=Math.round(o*1E3/(i-p)),q=Math.min(q,l),r=Math.max(r,l),j.textContent=l+" FPS ("+q+"-"+r+")",a=Math.min(30,30-l/
rocket-3d/web/js/Stats.js:100*30),f.appendChild(f.firstChild).style.height=a+"px",p=i,o=0}}};
rocket-3d/web/js/Three.js:// Three.js r46 - http://github.com/mrdoob/three.js
rocket-3d/web/js/Three.js:var THREE=THREE||{};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;THREE.Clock=function(a){this.autoStart=a!==void 0?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){this.elapsedTime+=this.getDelta();return this.elapsedTime};
rocket-3d/web/js/Three.js:THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var c=Date.now(),a=0.001*(c-this.oldTime);this.oldTime=c;this.elapsedTime+=a}return a};THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
rocket-3d/web/js/Three.js:THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},setRGB:function(a,c,b){this.r=a;this.g=c;this.b=b;return this},setHSV:function(a,c,b){var d,g,f;if(b===0)this.r=this.g=this.b=0;else switch(d=Math.floor(a*6),g=a*6-d,a=b*(1-c),f=b*(1-
rocket-3d/web/js/Three.js:c*g),c=b*(1-c*(1-g)),d){case 1:this.r=f;this.g=b;this.b=a;break;case 2:this.r=a;this.g=b;this.b=c;break;case 3:this.r=a;this.g=f;this.b=b;break;case 4:this.r=c;this.g=a;this.b=b;break;case 5:this.r=b;this.g=a;this.b=f;break;case 6:case 0:this.r=b,this.g=c,this.b=a}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},getContextStyle:function(){return"rgb("+
rocket-3d/web/js/Three.js:Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
rocket-3d/web/js/Three.js:THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},
rocket-3d/web/js/Three.js:divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var c=this.x-a.x,a=this.y-a.y;return c*c+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
rocket-3d/web/js/Three.js:equals:function(a){return a.x===this.x&&a.y===this.y}};THREE.Vector3=function(a,c,b){this.x=a||0;this.y=c||0;this.z=b||0};
rocket-3d/web/js/Three.js:THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,c,b){this.x=a;this.y=c;this.z=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},
rocket-3d/web/js/Three.js:addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},
rocket-3d/web/js/Three.js:divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},
rocket-3d/web/js/Three.js:cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,b=this.y,d=this.z;this.x=b*a.z-d*a.y;this.y=d*a.x-c*a.z;this.z=c*a.y-b*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},setPositionFromMatrix:function(a){this.x=a.n14;this.y=a.n24;this.z=a.n34},setRotationFromMatrix:function(a){var c=Math.cos(this.y);
rocket-3d/web/js/Three.js:this.y=Math.asin(a.n13);Math.abs(c)>1.0E-5?(this.x=Math.atan2(-a.n23/c,a.n33/c),this.z=Math.atan2(-a.n12/c,a.n11/c)):(this.x=0,this.z=Math.atan2(a.n21,a.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};THREE.Vector4=function(a,c,b,d){this.x=a||0;this.y=c||0;this.z=b||0;this.w=d!==void 0?d:1};
rocket-3d/web/js/Three.js:THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,c,b,d){this.x=a;this.y=c;this.z=b;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-
rocket-3d/web/js/Three.js:c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
rocket-3d/web/js/Three.js:normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c;return this}};
rocket-3d/web/js/Three.js:THREE.Ray=function(a,c){function b(a,b,c){o.sub(c,a);r=o.dot(b);if(r<=0)return null;n=p.add(a,m.copy(b).multiplyScalar(r));return q=c.distanceTo(n)}function d(a,b,c,d){o.sub(d,b);p.sub(c,b);m.sub(a,b);t=o.dot(o);w=o.dot(p);u=o.dot(m);B=p.dot(p);F=p.dot(m);A=1/(t*B-w*w);x=(B*u-w*F)*A;y=(t*F-w*u)*A;return x>=0&&y>=0&&x+y<1}this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3;this.intersectScene=function(a){return this.intersectObjects(a.children)};this.intersectObjects=function(a){var b,
rocket-3d/web/js/Three.js:c,d=[];b=0;for(c=a.length;b<c;b++)Array.prototype.push.apply(d,this.intersectObject(a[b]));d.sort(function(a,b){return a.distance-b.distance});return d};var g=new THREE.Vector3,f=new THREE.Vector3,e=new THREE.Vector3,h=new THREE.Vector3,a=new THREE.Vector3,c=new THREE.Vector3,i=new THREE.Vector3,l=new THREE.Vector3,k=new THREE.Vector3;this.intersectObject=function(m){for(var n,o=[],p=0,r=m.children.length;p<r;p++)Array.prototype.push.apply(o,this.intersectObject(m.children[p]));if(m instanceof THREE.Particle){p=
rocket-3d/web/js/Three.js:b(this.origin,this.direction,m.matrixWorld.getPosition());if(p===null||p>m.scale.x)return[];n={distance:p,point:m.position,face:null,object:m};o.push(n)}else if(m instanceof THREE.Mesh){p=b(this.origin,this.direction,m.matrixWorld.getPosition());if(p===null||p>m.geometry.boundingSphere.radius*Math.max(m.scale.x,Math.max(m.scale.y,m.scale.z)))return o;var q,t=m.geometry,w=t.vertices,u;m.matrixRotationWorld.extractRotation(m.matrixWorld);p=0;for(r=t.faces.length;p<r;p++)if(n=t.faces[p],a.copy(this.origin),
rocket-3d/web/js/Three.js:c.copy(this.direction),u=m.matrixWorld,i=u.multiplyVector3(i.copy(n.centroid)).subSelf(a),q=i.dot(c),!(q<=0)&&(g=u.multiplyVector3(g.copy(w[n.a].position)),f=u.multiplyVector3(f.copy(w[n.b].position)),e=u.multiplyVector3(e.copy(w[n.c].position)),n instanceof THREE.Face4&&(h=u.multiplyVector3(h.copy(w[n.d].position))),l=m.matrixRotationWorld.multiplyVector3(l.copy(n.normal)),q=c.dot(l),m.doubleSided||(m.flipSided?q>0:q<0)))if(q=l.dot(i.sub(g,a))/q,k.add(a,c.multiplyScalar(q)),n instanceof THREE.Face3)d(k,
rocket-3d/web/js/Three.js:g,f,e)&&(n={distance:a.distanceTo(k),point:k.clone(),face:n,object:m},o.push(n));else if(n instanceof THREE.Face4&&(d(k,g,f,h)||d(k,f,e,h)))n={distance:a.distanceTo(k),point:k.clone(),face:n,object:m},o.push(n)}return o};var o=new THREE.Vector3,p=new THREE.Vector3,m=new THREE.Vector3,r,n,q,t,w,u,B,F,A,x,y};
rocket-3d/web/js/Three.js:THREE.Rectangle=function(){function a(){f=d-c;e=g-b}var c,b,d,g,f,e,h=!0;this.getX=function(){return c};this.getY=function(){return b};this.getWidth=function(){return f};this.getHeight=function(){return e};this.getLeft=function(){return c};this.getTop=function(){return b};this.getRight=function(){return d};this.getBottom=function(){return g};this.set=function(f,e,k,o){h=!1;c=f;b=e;d=k;g=o;a()};this.addPoint=function(f,e){h?(h=!1,c=f,b=e,d=f,g=e):(c=c<f?c:f,b=b<e?b:e,d=d>f?d:f,g=g>e?g:e);a()};this.add3Points=
rocket-3d/web/js/Three.js:function(f,e,k,o,p,m){h?(h=!1,c=f<k?f<p?f:p:k<p?k:p,b=e<o?e<m?e:m:o<m?o:m,d=f>k?f>p?f:p:k>p?k:p,g=e>o?e>m?e:m:o>m?o:m):(c=f<k?f<p?f<c?f:c:p<c?p:c:k<p?k<c?k:c:p<c?p:c,b=e<o?e<m?e<b?e:b:m<b?m:b:o<m?o<b?o:b:m<b?m:b,d=f>k?f>p?f>d?f:d:p>d?p:d:k>p?k>d?k:d:p>d?p:d,g=e>o?e>m?e>g?e:g:m>g?m:g:o>m?o>g?o:g:m>g?m:g);a()};this.addRectangle=function(f){h?(h=!1,c=f.getLeft(),b=f.getTop(),d=f.getRight(),g=f.getBottom()):(c=c<f.getLeft()?c:f.getLeft(),b=b<f.getTop()?b:f.getTop(),d=d>f.getRight()?d:f.getRight(),g=g>
rocket-3d/web/js/Three.js:f.getBottom()?g:f.getBottom());a()};this.inflate=function(f){c-=f;b-=f;d+=f;g+=f;a()};this.minSelf=function(f){c=c>f.getLeft()?c:f.getLeft();b=b>f.getTop()?b:f.getTop();d=d<f.getRight()?d:f.getRight();g=g<f.getBottom()?g:f.getBottom();a()};this.intersects=function(a){return Math.min(d,a.getRight())-Math.max(c,a.getLeft())>=0&&Math.min(g,a.getBottom())-Math.max(b,a.getTop())>=0};this.empty=function(){h=!0;g=d=b=c=0;a()};this.isEmpty=function(){return h}};
rocket-3d/web/js/Three.js:THREE.Math={clamp:function(a,c,b){return a<c?c:a>b?b:a},clampBottom:function(a,c){return a<c?c:a},mapLinear:function(a,c,b,d,g){return d+(a-c)*(g-d)/(b-c)},random16:function(){return(65280*Math.random()+255*Math.random())/65535}};THREE.Matrix3=function(){this.m=[]};
rocket-3d/web/js/Three.js:THREE.Matrix3.prototype={constructor:THREE.Matrix3,transpose:function(){var a,c=this.m;a=c[1];c[1]=c[3];c[3]=a;a=c[2];c[2]=c[6];c[6]=a;a=c[5];c[5]=c[7];c[7]=a;return this},transposeIntoArray:function(a){var c=this.m;a[0]=c[0];a[1]=c[3];a[2]=c[6];a[3]=c[1];a[4]=c[4];a[5]=c[7];a[6]=c[2];a[7]=c[5];a[8]=c[8];return this}};
rocket-3d/web/js/Three.js:THREE.Matrix4=function(a,c,b,d,g,f,e,h,i,l,k,o,p,m,r,n){this.set(a!==void 0?a:1,c||0,b||0,d||0,g||0,f!==void 0?f:1,e||0,h||0,i||0,l||0,k!==void 0?k:1,o||0,p||0,m||0,r||0,n!==void 0?n:1);this.flat=Array(16);this.m33=new THREE.Matrix3};
rocket-3d/web/js/Three.js:THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,c,b,d,g,f,e,h,i,l,k,o,p,m,r,n){this.n11=a;this.n12=c;this.n13=b;this.n14=d;this.n21=g;this.n22=f;this.n23=e;this.n24=h;this.n31=i;this.n32=l;this.n33=k;this.n34=o;this.n41=p;this.n42=m;this.n43=r;this.n44=n;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,
rocket-3d/web/js/Three.js:c,b){var d=THREE.Matrix4.__v1,g=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;f.sub(a,c).normalize();if(f.length()===0)f.z=1;d.cross(b,f).normalize();d.length()===0&&(f.x+=1.0E-4,d.cross(b,f).normalize());g.cross(f,d).normalize();this.n11=d.x;this.n12=g.x;this.n13=f.x;this.n21=d.y;this.n22=g.y;this.n23=f.y;this.n31=d.z;this.n32=g.z;this.n33=f.z;return this},multiply:function(a,c){var b=a.n11,d=a.n12,g=a.n13,f=a.n14,e=a.n21,h=a.n22,i=a.n23,l=a.n24,k=a.n31,o=a.n32,p=a.n33,m=a.n34,r=a.n41,n=a.n42,q=a.n43,
rocket-3d/web/js/Three.js:t=a.n44,w=c.n11,u=c.n12,B=c.n13,F=c.n14,A=c.n21,x=c.n22,y=c.n23,v=c.n24,J=c.n31,s=c.n32,E=c.n33,R=c.n34,U=c.n41,K=c.n42,P=c.n43,O=c.n44;this.n11=b*w+d*A+g*J+f*U;this.n12=b*u+d*x+g*s+f*K;this.n13=b*B+d*y+g*E+f*P;this.n14=b*F+d*v+g*R+f*O;this.n21=e*w+h*A+i*J+l*U;this.n22=e*u+h*x+i*s+l*K;this.n23=e*B+h*y+i*E+l*P;this.n24=e*F+h*v+i*R+l*O;this.n31=k*w+o*A+p*J+m*U;this.n32=k*u+o*x+p*s+m*K;this.n33=k*B+o*y+p*E+m*P;this.n34=k*F+o*v+p*R+m*O;this.n41=r*w+n*A+q*J+t*U;this.n42=r*u+n*x+q*s+t*K;this.n43=r*B+n*
rocket-3d/web/js/Three.js:y+q*E+t*P;this.n44=r*F+n*v+q*R+t*O;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,c,b){this.multiply(a,c);b[0]=this.n11;b[1]=this.n21;b[2]=this.n31;b[3]=this.n41;b[4]=this.n12;b[5]=this.n22;b[6]=this.n32;b[7]=this.n42;b[8]=this.n13;b[9]=this.n23;b[10]=this.n33;b[11]=this.n43;b[12]=this.n14;b[13]=this.n24;b[14]=this.n34;b[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=
rocket-3d/web/js/Three.js:a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var c=a.x,b=a.y,d=a.z,g=1/(this.n41*c+this.n42*b+this.n43*d+this.n44);a.x=(this.n11*c+this.n12*b+this.n13*d+this.n14)*g;a.y=(this.n21*c+this.n22*b+this.n23*d+this.n24)*g;a.z=(this.n31*c+this.n32*b+this.n33*d+this.n34)*g;return a},multiplyVector4:function(a){var c=a.x,b=a.y,d=a.z,g=a.w;a.x=this.n11*c+this.n12*b+this.n13*d+this.n14*g;a.y=this.n21*c+this.n22*
rocket-3d/web/js/Three.js:b+this.n23*d+this.n24*g;a.z=this.n31*c+this.n32*b+this.n33*d+this.n34*g;a.w=this.n41*c+this.n42*b+this.n43*d+this.n44*g;return a},rotateAxis:function(a){var c=a.x,b=a.y,d=a.z;a.x=c*this.n11+b*this.n12+d*this.n13;a.y=c*this.n21+b*this.n22+d*this.n23;a.z=c*this.n31+b*this.n32+d*this.n33;a.normalize();return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*
rocket-3d/web/js/Three.js:a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},determinant:function(){var a=this.n11,c=this.n12,b=this.n13,d=this.n14,g=this.n21,f=this.n22,e=this.n23,h=this.n24,i=this.n31,l=this.n32,k=this.n33,o=this.n34,p=this.n41,m=this.n42,r=this.n43,n=this.n44;return d*e*l*p-b*h*l*p-d*f*k*p+c*h*k*p+b*f*o*p-c*e*o*p-d*e*i*m+b*h*i*m+d*g*k*m-a*h*k*m-b*g*o*m+a*e*o*m+d*f*i*r-c*h*i*r-d*g*l*r+a*h*l*r+c*g*o*r-a*f*o*r-b*f*i*n+c*e*i*n+b*g*l*n-a*e*l*n-c*g*k*n+a*f*k*n},transpose:function(){var a;
rocket-3d/web/js/Three.js:a=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n43=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;
rocket-3d/web/js/Three.js:a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},flattenToArray:function(a){a[0]=this.n11;a[1]=this.n21;a[2]=this.n31;
rocket-3d/web/js/Three.js:a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,c){a[c]=this.n11;a[c+1]=this.n21;a[c+2]=this.n31;a[c+3]=this.n41;a[c+4]=this.n12;a[c+5]=this.n22;a[c+6]=this.n32;a[c+7]=this.n42;a[c+8]=this.n13;a[c+9]=this.n23;a[c+10]=this.n33;a[c+11]=this.n43;a[c+12]=this.n14;a[c+13]=this.n24;a[c+14]=this.n34;a[c+15]=this.n44;return a},
rocket-3d/web/js/Three.js:setTranslation:function(a,c,b){this.set(1,0,0,a,0,1,0,c,0,0,1,b,0,0,0,1);return this},setScale:function(a,c,b){this.set(a,0,0,0,0,c,0,0,0,0,b,0,0,0,0,1);return this},setRotationX:function(a){var c=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,c,-a,0,0,a,c,0,0,0,0,1);return this},setRotationY:function(a){var c=Math.cos(a),a=Math.sin(a);this.set(c,0,a,0,0,1,0,0,-a,0,c,0,0,0,0,1);return this},setRotationZ:function(a){var c=Math.cos(a),a=Math.sin(a);this.set(c,-a,0,0,a,c,0,0,0,0,1,0,0,0,0,1);return this},
rocket-3d/web/js/Three.js:setRotationAxis:function(a,c){var b=Math.cos(c),d=Math.sin(c),g=1-b,f=a.x,e=a.y,h=a.z,i=g*f,l=g*e;this.set(i*f+b,i*e-d*h,i*h+d*e,0,i*e+d*h,l*e+b,l*h-d*f,0,i*h-d*e,l*h+d*f,g*h*h+b,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,this.n21,this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,
rocket-3d/web/js/Three.js:this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var c=a.n11,b=a.n12,d=a.n13,g=a.n14,f=a.n21,e=a.n22,h=a.n23,i=a.n24,l=a.n31,k=a.n32,o=a.n33,p=a.n34,m=a.n41,r=a.n42,n=a.n43,q=a.n44;this.n11=h*p*r-i*o*r+i*k*n-e*p*n-h*k*q+e*o*q;this.n12=g*o*r-d*p*r-g*k*n+b*p*n+d*k*q-b*o*q;this.n13=d*i*r-g*h*r+g*e*n-b*i*n-d*e*q+b*h*q;this.n14=g*h*k-d*i*k-g*e*o+b*i*o+d*e*p-b*h*p;this.n21=i*o*m-h*p*m-i*l*n+f*p*n+h*l*q-f*o*q;this.n22=d*p*m-g*o*m+
rocket-3d/web/js/Three.js:g*l*n-c*p*n-d*l*q+c*o*q;this.n23=g*h*m-d*i*m-g*f*n+c*i*n+d*f*q-c*h*q;this.n24=d*i*l-g*h*l+g*f*o-c*i*o-d*f*p+c*h*p;this.n31=e*p*m-i*k*m+i*l*r-f*p*r-e*l*q+f*k*q;this.n32=g*k*m-b*p*m-g*l*r+c*p*r+b*l*q-c*k*q;this.n33=d*i*m-g*e*m+g*f*r-c*i*r-b*f*q+c*e*q;this.n34=g*e*l-b*i*l-g*f*k+c*i*k+b*f*p-c*e*p;this.n41=h*k*m-e*o*m-h*l*r+f*o*r+e*l*n-f*k*n;this.n42=b*o*m-d*k*m+d*l*r-c*o*r-b*l*n+c*k*n;this.n43=d*e*m-b*h*m-d*f*r+c*h*r+b*f*n-c*e*n;this.n44=b*h*l-d*e*l+d*f*k-c*h*k-b*f*o+c*e*o;this.multiplyScalar(1/a.determinant());
rocket-3d/web/js/Three.js:return this},setRotationFromEuler:function(a,c){var b=a.x,d=a.y,g=a.z,f=Math.cos(b),b=Math.sin(b),e=Math.cos(d),d=Math.sin(d),h=Math.cos(g),g=Math.sin(g);switch(c){case "YXZ":var i=e*h,l=e*g,k=d*h,o=d*g;this.n11=i+o*b;this.n12=k*b-l;this.n13=f*d;this.n21=f*g;this.n22=f*h;this.n23=-b;this.n31=l*b-k;this.n32=o+i*b;this.n33=f*e;break;case "ZXY":i=e*h;l=e*g;k=d*h;o=d*g;this.n11=i-o*b;this.n12=-f*g;this.n13=k+l*b;this.n21=l+k*b;this.n22=f*h;this.n23=o-i*b;this.n31=-f*d;this.n32=b;this.n33=f*e;break;case "ZYX":i=
rocket-3d/web/js/Three.js:f*h;l=f*g;k=b*h;o=b*g;this.n11=e*h;this.n12=k*d-l;this.n13=i*d+o;this.n21=e*g;this.n22=o*d+i;this.n23=l*d-k;this.n31=-d;this.n32=b*e;this.n33=f*e;break;case "YZX":i=f*e;l=f*d;k=b*e;o=b*d;this.n11=e*h;this.n12=o-i*g;this.n13=k*g+l;this.n21=g;this.n22=f*h;this.n23=-b*h;this.n31=-d*h;this.n32=l*g+k;this.n33=i-o*g;break;case "XZY":i=f*e;l=f*d;k=b*e;o=b*d;this.n11=e*h;this.n12=-g;this.n13=d*h;this.n21=i*g+o;this.n22=f*h;this.n23=l*g-k;this.n31=k*g-l;this.n32=b*h;this.n33=o*g+i;break;default:i=f*h,l=f*
rocket-3d/web/js/Three.js:g,k=b*h,o=b*g,this.n11=e*h,this.n12=-e*g,this.n13=d,this.n21=l+k*d,this.n22=i-o*d,this.n23=-b*e,this.n31=o-i*d,this.n32=k+l*d,this.n33=f*e}return this},setRotationFromQuaternion:function(a){var c=a.x,b=a.y,d=a.z,g=a.w,f=c+c,e=b+b,h=d+d,a=c*f,i=c*e;c*=h;var l=b*e;b*=h;d*=h;f*=g;e*=g;g*=h;this.n11=1-(l+d);this.n12=i-g;this.n13=c+e;this.n21=i+g;this.n22=1-(a+d);this.n23=b-f;this.n31=c-e;this.n32=b+f;this.n33=1-(a+l);return this},scale:function(a){var c=a.x,b=a.y,a=a.z;this.n11*=c;this.n12*=b;this.n13*=
rocket-3d/web/js/Three.js:a;this.n21*=c;this.n22*=b;this.n23*=a;this.n31*=c;this.n32*=b;this.n33*=a;this.n41*=c;this.n42*=b;this.n43*=a;return this},compose:function(a,c,b){var d=THREE.Matrix4.__m1,g=THREE.Matrix4.__m2;d.identity();d.setRotationFromQuaternion(c);g.setScale(b.x,b.y,b.z);this.multiply(d,g);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,c,b){var d=THREE.Matrix4.__v1,g=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;d.set(this.n11,this.n21,this.n31);g.set(this.n12,this.n22,this.n32);f.set(this.n13,
rocket-3d/web/js/Three.js:this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;c=c instanceof THREE.Quaternion?c:new THREE.Quaternion;b=b instanceof THREE.Vector3?b:new THREE.Vector3;b.x=d.length();b.y=g.length();b.z=f.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;d=THREE.Matrix4.__m1;d.copy(this);d.n11/=b.x;d.n21/=b.x;d.n31/=b.x;d.n12/=b.y;d.n22/=b.y;d.n32/=b.y;d.n13/=b.z;d.n23/=b.z;d.n33/=b.z;c.setFromRotationMatrix(d);return[a,c,b]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;
rocket-3d/web/js/Three.js:return this},extractRotation:function(a){var c=THREE.Matrix4.__v1,b=1/c.set(a.n11,a.n21,a.n31).length(),d=1/c.set(a.n12,a.n22,a.n32).length(),c=1/c.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*b;this.n21=a.n21*b;this.n31=a.n31*b;this.n12=a.n12*d;this.n22=a.n22*d;this.n32=a.n32*d;this.n13=a.n13*c;this.n23=a.n23*c;this.n33=a.n33*c;return this}};
rocket-3d/web/js/Three.js:THREE.Matrix4.makeInvert3x3=function(a){var c=a.m33,b=c.m,d=a.n33*a.n22-a.n32*a.n23,g=-a.n33*a.n21+a.n31*a.n23,f=a.n32*a.n21-a.n31*a.n22,e=-a.n33*a.n12+a.n32*a.n13,h=a.n33*a.n11-a.n31*a.n13,i=-a.n32*a.n11+a.n31*a.n12,l=a.n23*a.n12-a.n22*a.n13,k=-a.n23*a.n11+a.n21*a.n13,o=a.n22*a.n11-a.n21*a.n12,a=a.n11*d+a.n21*e+a.n31*l;a===0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");a=1/a;b[0]=a*d;b[1]=a*g;b[2]=a*f;b[3]=a*e;b[4]=a*h;b[5]=a*i;b[6]=a*l;b[7]=a*k;b[8]=a*o;return c};
rocket-3d/web/js/Three.js:THREE.Matrix4.makeFrustum=function(a,c,b,d,g,f){var e;e=new THREE.Matrix4;e.n11=2*g/(c-a);e.n12=0;e.n13=(c+a)/(c-a);e.n14=0;e.n21=0;e.n22=2*g/(d-b);e.n23=(d+b)/(d-b);e.n24=0;e.n31=0;e.n32=0;e.n33=-(f+g)/(f-g);e.n34=-2*f*g/(f-g);e.n41=0;e.n42=0;e.n43=-1;e.n44=0;return e};THREE.Matrix4.makePerspective=function(a,c,b,d){var g,a=b*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*c,a*c,g,a,b,d)};
rocket-3d/web/js/Three.js:THREE.Matrix4.makeOrtho=function(a,c,b,d,g,f){var e,h,i,l;e=new THREE.Matrix4;h=c-a;i=b-d;l=f-g;e.n11=2/h;e.n12=0;e.n13=0;e.n14=-((c+a)/h);e.n21=0;e.n22=2/i;e.n23=0;e.n24=-((b+d)/i);e.n31=0;e.n32=0;e.n33=-2/l;e.n34=-((f+g)/l);e.n41=0;e.n42=0;e.n43=0;e.n44=1;return e};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
rocket-3d/web/js/Three.js:THREE.Object3D=function(){this.name="";this.id=THREE.Object3DCount++;this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
rocket-3d/web/js/Three.js:!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
rocket-3d/web/js/Three.js:THREE.Object3D.prototype={constructor:THREE.Object3D,translate:function(a,c){this.matrix.rotateAxis(c);this.position.addSelf(c.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},add:function(a){if(this.children.indexOf(a)===
rocket-3d/web/js/Three.js:-1){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var c=this;c.parent!==void 0;)c=c.parent;c!==void 0&&c instanceof THREE.Scene&&c.addObject(a)}},remove:function(a){var c=this.children.indexOf(a);if(c!==-1){a.parent=void 0;this.children.splice(c,1);for(c=this;c.parent!==void 0;)c=c.parent;c!==void 0&&c instanceof THREE.Scene&&c.removeObject(a)}},getChildByName:function(a,c){var b,d,g;b=0;for(d=this.children.length;b<d;b++){g=this.children[b];if(g.name===a)return g;
rocket-3d/web/js/Three.js:if(c&&(g=g.getChildByName(a,c),g!==void 0))return g}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&
rocket-3d/web/js/Three.js:this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var c=0,b=this.children.length;c<b;c++)this.children[c].updateMatrixWorld(a)}};THREE.Object3DCount=0;
rocket-3d/web/js/Three.js:THREE.Projector=function(){function a(){var a=e[f]=e[f]||new THREE.RenderableObject;f++;return a}function c(){var a=l[i]=l[i]||new THREE.RenderableVertex;i++;return a}function b(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,g=a.z+a.w,f=b.z+b.w,e=-a.z+a.w,h=-b.z+b.w;return g>=0&&f>=0&&e>=0&&h>=0?!0:g<0&&f<0||e<0&&h<0?!1:(g<0?c=Math.max(c,g/(g-f)):f<0&&(d=Math.min(d,g/(g-f))),e<0?c=Math.max(c,e/(e-h)):h<0&&(d=Math.min(d,e/(e-h))),d<c?!1:(a.lerpSelf(b,c),b.lerpSelf(a,1-d),!0))}var g,f,e=[],h,i,l=[],
rocket-3d/web/js/Three.js:k,o,p=[],m,r=[],n,q,t=[],w,u,B=[],F={objects:[],sprites:[],lights:[],elements:[]},A=new THREE.Vector3,x=new THREE.Vector4,y=new THREE.Matrix4,v=new THREE.Matrix4,J=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],s=new THREE.Vector4,E=new THREE.Vector4;this.computeFrustum=function(a){J[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);J[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);J[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+
rocket-3d/web/js/Three.js:a.n23,a.n44+a.n24);J[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);J[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);J[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;a<6;a++){var b=J[a];b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}};this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);y.multiply(b.projectionMatrix,b.matrixWorldInverse);y.multiplyVector3(a);return a};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);
rocket-3d/web/js/Three.js:y.multiply(b.matrixWorld,b.projectionMatrixInverse);y.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectGraph=function(c,d){f=0;F.objects.length=0;F.sprites.length=0;F.lights.length=0;var e=function(b){if(b.visible!==!1){var c;if(c=b instanceof THREE.Mesh||b instanceof THREE.Line)if(!(c=b.frustumCulled===!1))a:{for(var d=b.matrixWorld,
rocket-3d/web/js/Three.js:f=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),h=0;h<6;h++)if(c=J[h].x*d.n14+J[h].y*d.n24+J[h].z*d.n34+J[h].w,c<=f){c=!1;break a}c=!0}c?(y.multiplyVector3(A.copy(b.position)),g=a(),g.object=b,g.z=A.z,F.objects.push(g)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(y.multiplyVector3(A.copy(b.position)),g=a(),g.object=b,g.z=A.z,F.sprites.push(g)):b instanceof THREE.Light&&F.lights.push(b);c=0;for(d=b.children.length;c<d;c++)e(b.children[c])}};e(c);d&&
rocket-3d/web/js/Three.js:F.objects.sort(b);return F};this.projectScene=function(a,g,f){var e=g.near,J=g.far,A,H,G,I,M,S,ba,W,j,X,V,da,ga,$,ua,ra;u=q=m=o=0;F.elements.length=0;g.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(g));a.updateMatrixWorld();g.matrixWorldInverse.getInverse(g.matrixWorld);y.multiply(g.projectionMatrix,g.matrixWorldInverse);this.computeFrustum(y);F=this.projectGraph(a,!1);a=0;for(A=F.objects.length;a<A;a++)if(j=F.objects[a].object,X=j.matrixWorld,
rocket-3d/web/js/Three.js:da=j.material,i=0,j instanceof THREE.Mesh){V=j.geometry;ga=j.geometry.materials;I=V.vertices;$=V.faces;ua=V.faceVertexUvs;V=j.matrixRotationWorld.extractRotation(X);H=0;for(G=I.length;H<G;H++)h=c(),h.positionWorld.copy(I[H].position),X.multiplyVector3(h.positionWorld),h.positionScreen.copy(h.positionWorld),y.multiplyVector4(h.positionScreen),h.positionScreen.x/=h.positionScreen.w,h.positionScreen.y/=h.positionScreen.w,h.visible=h.positionScreen.z>e&&h.positionScreen.z<J;I=0;for(H=$.length;I<H;I++){G=
rocket-3d/web/js/Three.js:$[I];if(G instanceof THREE.Face3)if(M=l[G.a],S=l[G.b],ba=l[G.c],M.visible&&S.visible&&ba.visible&&(j.doubleSided||j.flipSided!=(ba.positionScreen.x-M.positionScreen.x)*(S.positionScreen.y-M.positionScreen.y)-(ba.positionScreen.y-M.positionScreen.y)*(S.positionScreen.x-M.positionScreen.x)<0))W=p[o]=p[o]||new THREE.RenderableFace3,o++,k=W,k.v1.copy(M),k.v2.copy(S),k.v3.copy(ba);else continue;else if(G instanceof THREE.Face4)if(M=l[G.a],S=l[G.b],ba=l[G.c],W=l[G.d],M.visible&&S.visible&&ba.visible&&W.visible&&
rocket-3d/web/js/Three.js:(j.doubleSided||j.flipSided!=((W.positionScreen.x-M.positionScreen.x)*(S.positionScreen.y-M.positionScreen.y)-(W.positionScreen.y-M.positionScreen.y)*(S.positionScreen.x-M.positionScreen.x)<0||(S.positionScreen.x-ba.positionScreen.x)*(W.positionScreen.y-ba.positionScreen.y)-(S.positionScreen.y-ba.positionScreen.y)*(W.positionScreen.x-ba.positionScreen.x)<0)))ra=r[m]=r[m]||new THREE.RenderableFace4,m++,k=ra,k.v1.copy(M),k.v2.copy(S),k.v3.copy(ba),k.v4.copy(W);else continue;k.normalWorld.copy(G.normal);
rocket-3d/web/js/Three.js:V.multiplyVector3(k.normalWorld);k.centroidWorld.copy(G.centroid);X.multiplyVector3(k.centroidWorld);k.centroidScreen.copy(k.centroidWorld);y.multiplyVector3(k.centroidScreen);ba=G.vertexNormals;M=0;for(S=ba.length;M<S;M++)W=k.vertexNormalsWorld[M],W.copy(ba[M]),V.multiplyVector3(W);M=0;for(S=ua.length;M<S;M++)if(ra=ua[M][I]){ba=0;for(W=ra.length;ba<W;ba++)k.uvs[M][ba]=ra[ba]}k.material=da;k.faceMaterial=G.materialIndex!==null?ga[G.materialIndex]:null;k.z=k.centroidScreen.z;F.elements.push(k)}}else if(j instanceof
rocket-3d/web/js/Three.js:THREE.Line){v.multiply(y,X);I=j.geometry.vertices;M=c();M.positionScreen.copy(I[0].position);v.multiplyVector4(M.positionScreen);H=1;for(G=I.length;H<G;H++)if(M=c(),M.positionScreen.copy(I[H].position),v.multiplyVector4(M.positionScreen),S=l[i-2],s.copy(M.positionScreen),E.copy(S.positionScreen),d(s,E))s.multiplyScalar(1/s.w),E.multiplyScalar(1/E.w),j=t[q]=t[q]||new THREE.RenderableLine,q++,n=j,n.v1.positionScreen.copy(s),n.v2.positionScreen.copy(E),n.z=Math.max(s.z,E.z),n.material=da,F.elements.push(n)}a=
rocket-3d/web/js/Three.js:0;for(A=F.sprites.length;a<A;a++)if(j=F.sprites[a].object,X=j.matrixWorld,j instanceof THREE.Particle&&(x.set(X.n14,X.n24,X.n34,1),y.multiplyVector4(x),x.z/=x.w,x.z>0&&x.z<1))e=B[u]=B[u]||new THREE.RenderableParticle,u++,w=e,w.x=x.x/x.w,w.y=x.y/x.w,w.z=x.z,w.rotation=j.rotation.z,w.scale.x=j.scale.x*Math.abs(w.x-(x.x+g.projectionMatrix.n11)/(x.w+g.projectionMatrix.n14)),w.scale.y=j.scale.y*Math.abs(w.y-(x.y+g.projectionMatrix.n22)/(x.w+g.projectionMatrix.n24)),w.material=j.material,F.elements.push(w);
rocket-3d/web/js/Three.js:f&&F.elements.sort(b);return F}};THREE.Quaternion=function(a,c,b,d){this.set(a||0,c||0,b||0,d!==void 0?d:1)};
rocket-3d/web/js/Three.js:THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,c,b,d){this.x=a;this.y=c;this.z=b;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var c=Math.PI/360,b=a.x*c,d=a.y*c,g=a.z*c,a=Math.cos(d),d=Math.sin(d),c=Math.cos(-g),g=Math.sin(-g),f=Math.cos(b),b=Math.sin(b),e=a*c,h=d*g;this.w=e*f-h*b;this.x=e*b+h*f;this.y=d*c*f+a*g*b;this.z=a*g*f-d*c*b;return this},setFromAxisAngle:function(a,c){var b=c/2,d=Math.sin(b);
rocket-3d/web/js/Three.js:this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(b);return this},setFromRotationMatrix:function(a){var c=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,c+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,c+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,c-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,c-a.n11-a.n22+a.n33))/2;this.x=a.n32-a.n23<0?-Math.abs(this.x):Math.abs(this.x);this.y=a.n13-a.n31<0?-Math.abs(this.y):Math.abs(this.y);this.z=a.n21-a.n12<0?-Math.abs(this.z):Math.abs(this.z);
rocket-3d/web/js/Three.js:this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);a===0?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var c=
rocket-3d/web/js/Three.js:this.x,b=this.y,d=this.z,g=this.w,f=a.x,e=a.y,h=a.z,a=a.w;this.x=c*a+g*f+b*h-d*e;this.y=b*a+g*e+d*f-c*h;this.z=d*a+g*h+c*e-b*f;this.w=g*a-c*f-b*e-d*h;return this},multiply:function(a,c){this.x=a.x*c.w+a.y*c.z-a.z*c.y+a.w*c.x;this.y=-a.x*c.z+a.y*c.w+a.z*c.x+a.w*c.y;this.z=a.x*c.y-a.y*c.x+a.z*c.w+a.w*c.z;this.w=-a.x*c.x-a.y*c.y-a.z*c.z+a.w*c.w;return this},multiplyVector3:function(a,c){c||(c=a);var b=a.x,d=a.y,g=a.z,f=this.x,e=this.y,h=this.z,i=this.w,l=i*b+e*g-h*d,k=i*d+h*b-f*g,o=i*g+f*d-e*b,b=-f*
rocket-3d/web/js/Three.js:b-e*d-h*g;c.x=l*i+b*-f+k*-h-o*-e;c.y=k*i+b*-e+o*-f-l*-h;c.z=o*i+b*-h+l*-e-k*-f;return c}};
rocket-3d/web/js/Three.js:THREE.Quaternion.slerp=function(a,c,b,d){var g=a.w*c.w+a.x*c.x+a.y*c.y+a.z*c.z;g<0?(b.w=-c.w,b.x=-c.x,b.y=-c.y,b.z=-c.z,g=-g):b.copy(c);if(Math.abs(g)>=1)return b.w=a.w,b.x=a.x,b.y=a.y,b.z=a.z,b;var f=Math.acos(g),g=Math.sqrt(1-g*g);if(Math.abs(g)<0.001)return b.w=0.5*(a.w+c.w),b.x=0.5*(a.x+c.x),b.y=0.5*(a.y+c.y),b.z=0.5*(a.z+c.z),b;c=Math.sin((1-d)*f)/g;d=Math.sin(d*f)/g;b.w=a.w*c+b.w*d;b.x=a.x*c+b.x*d;b.y=a.y*c+b.y*d;b.z=a.z*c+b.z*d;return b};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};
rocket-3d/web/js/Three.js:THREE.Face3=function(a,c,b,d,g,f){this.a=a;this.b=c;this.c=b;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
rocket-3d/web/js/Three.js:THREE.Face4=function(a,c,b,d,g,f,e){this.a=a;this.b=c;this.c=b;this.d=d;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=e;this.centroid=new THREE.Vector3};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
rocket-3d/web/js/Three.js:THREE.UV.prototype={constructor:THREE.UV,set:function(a,c){this.u=a;this.v=c;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
rocket-3d/web/js/Three.js:THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
rocket-3d/web/js/Three.js:THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var c=new THREE.Matrix4;c.extractRotation(a,new THREE.Vector3(1,1,1));for(var b=0,d=this.vertices.length;b<d;b++)a.multiplyVector3(this.vertices[b].position);b=0;for(d=this.faces.length;b<d;b++){var g=this.faces[b];c.multiplyVector3(g.normal);for(var f=0,e=g.vertexNormals.length;f<e;f++)c.multiplyVector3(g.vertexNormals[f]);a.multiplyVector3(g.centroid)}},computeCentroids:function(){var a,c,b;a=0;for(c=this.faces.length;a<
rocket-3d/web/js/Three.js:c;a++)b=this.faces[a],b.centroid.set(0,0,0),b instanceof THREE.Face3?(b.centroid.addSelf(this.vertices[b.a].position),b.centroid.addSelf(this.vertices[b.b].position),b.centroid.addSelf(this.vertices[b.c].position),b.centroid.divideScalar(3)):b instanceof THREE.Face4&&(b.centroid.addSelf(this.vertices[b.a].position),b.centroid.addSelf(this.vertices[b.b].position),b.centroid.addSelf(this.vertices[b.c].position),b.centroid.addSelf(this.vertices[b.d].position),b.centroid.divideScalar(4))},computeFaceNormals:function(){var a,
rocket-3d/web/js/Three.js:c,b,d,g,f,e=new THREE.Vector3,h=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++)b=this.faces[a],d=this.vertices[b.a],g=this.vertices[b.b],f=this.vertices[b.c],e.sub(f.position,g.position),h.sub(d.position,g.position),e.crossSelf(h),e.isZero()||e.normalize(),b.normal.copy(e)},computeVertexNormals:function(){var a,c,b,d;if(this.__tmpVertices===void 0){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(c=this.vertices.length;a<c;a++)d[a]=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++)if(b=
rocket-3d/web/js/Three.js:this.faces[a],b instanceof THREE.Face3)b.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(b instanceof THREE.Face4)b.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{d=this.__tmpVertices;a=0;for(c=this.vertices.length;a<c;a++)d[a].set(0,0,0)}a=0;for(c=this.faces.length;a<c;a++)b=this.faces[a],b instanceof THREE.Face3?(d[b.a].addSelf(b.normal),d[b.b].addSelf(b.normal),d[b.c].addSelf(b.normal)):b instanceof THREE.Face4&&(d[b.a].addSelf(b.normal),
rocket-3d/web/js/Three.js:d[b.b].addSelf(b.normal),d[b.c].addSelf(b.normal),d[b.d].addSelf(b.normal));a=0;for(c=this.vertices.length;a<c;a++)d[a].normalize();a=0;for(c=this.faces.length;a<c;a++)b=this.faces[a],b instanceof THREE.Face3?(b.vertexNormals[0].copy(d[b.a]),b.vertexNormals[1].copy(d[b.b]),b.vertexNormals[2].copy(d[b.c])):b instanceof THREE.Face4&&(b.vertexNormals[0].copy(d[b.a]),b.vertexNormals[1].copy(d[b.b]),b.vertexNormals[2].copy(d[b.c]),b.vertexNormals[3].copy(d[b.d]))},computeTangents:function(){function a(a,
rocket-3d/web/js/Three.js:b,c,d,g,f,R){h=a.vertices[b].position;i=a.vertices[c].position;l=a.vertices[d].position;k=e[g];o=e[f];p=e[R];m=i.x-h.x;r=l.x-h.x;n=i.y-h.y;q=l.y-h.y;t=i.z-h.z;w=l.z-h.z;u=o.u-k.u;B=p.u-k.u;F=o.v-k.v;A=p.v-k.v;x=1/(u*A-B*F);s.set((A*m-F*r)*x,(A*n-F*q)*x,(A*t-F*w)*x);E.set((u*r-B*m)*x,(u*q-B*n)*x,(u*w-B*t)*x);v[b].addSelf(s);v[c].addSelf(s);v[d].addSelf(s);J[b].addSelf(E);J[c].addSelf(E);J[d].addSelf(E)}var c,b,d,g,f,e,h,i,l,k,o,p,m,r,n,q,t,w,u,B,F,A,x,y,v=[],J=[],s=new THREE.Vector3,E=new THREE.Vector3,
rocket-3d/web/js/Three.js:R=new THREE.Vector3,U=new THREE.Vector3,K=new THREE.Vector3;c=0;for(b=this.vertices.length;c<b;c++)v[c]=new THREE.Vector3,J[c]=new THREE.Vector3;c=0;for(b=this.faces.length;c<b;c++)f=this.faces[c],e=this.faceVertexUvs[0][c],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.c,0,1,2),a(this,f.a,f.b,f.d,0,1,3));var P=["a","b","c","d"];c=0;for(b=this.faces.length;c<b;c++){f=this.faces[c];for(d=0;d<f.vertexNormals.length;d++)K.copy(f.vertexNormals[d]),g=f[P[d]],
rocket-3d/web/js/Three.js:y=v[g],R.copy(y),R.subSelf(K.multiplyScalar(K.dot(y))).normalize(),U.cross(f.vertexNormals[d],y),g=U.dot(J[g]),g=g<0?-1:1,f.vertexTangents[d]=new THREE.Vector4(R.x,R.y,R.z,g)}this.hasTangents=!0},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,b=this.vertices.length;c<b;c++){a=
rocket-3d/web/js/Three.js:this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=
rocket-3d/web/js/Three.js:0,c=0,b=this.vertices.length;c<b;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},mergeVertices:function(){var a={},c=[],b=[],d,g=Math.pow(10,4),f,e;f=0;for(e=this.vertices.length;f<e;f++)d=this.vertices[f].position,d=[Math.round(d.x*g),Math.round(d.y*g),Math.round(d.z*g)].join("_"),a[d]===void 0?(a[d]=f,c.push(this.vertices[f]),b[f]=c.length-1):b[f]=b[a[d]];f=0;for(e=this.faces.length;f<e;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=b[a.a],a.b=b[a.b],a.c=
rocket-3d/web/js/Three.js:b[a.c];else if(a instanceof THREE.Face4)a.a=b[a.a],a.b=b[a.b],a.c=b[a.c],a.d=b[a.d];this.vertices=c}};THREE.GeometryCount=0;
rocket-3d/web/js/Three.js:THREE.Spline=function(a){function c(a,b,c,d,g,f,e){a=(c-a)*0.5;d=(d-b)*0.5;return(2*(b-c)+a+d)*e+(-3*(b-c)-2*a-d)*f+a*g+b}this.points=a;var b=[],d={x:0,y:0,z:0},g,f,e,h,i,l,k,o,p;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){g=(this.points.length-1)*a;f=Math.floor(g);e=g-f;b[0]=f===0?f:f-1;b[1]=f;b[2]=f>this.points.length-2?f:f+1;b[3]=f>this.points.length-3?f:f+2;l=this.points[b[0]];k=this.points[b[1]];
rocket-3d/web/js/Three.js:o=this.points[b[2]];p=this.points[b[3]];h=e*e;i=e*h;d.x=c(l.x,k.x,o.x,p.x,e,h,i);d.y=c(l.y,k.y,o.y,p.y,e,h,i);d.z=c(l.z,k.z,o.z,p.z,e,h,i);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,g=b=b=0,f=new THREE.Vector3,e=new THREE.Vector3,h=[],i=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=a/c,d=this.getPoint(b),e.copy(d),i+=e.distanceTo(f),
rocket-3d/web/js/Three.js:f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=g&&(h[b]=i,g=b);h[h.length]=i;return{chunks:h,total:i}};this.reparametrizeByArcLength=function(a){var b,c,d,g,f,e,h=[],i=new THREE.Vector3,k=this.getLength();h.push(i.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=k.chunks[b]-k.chunks[b-1];e=Math.ceil(a*c/k.total);g=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<e-1;c++)d=g+c*(1/e)*(f-g),d=this.getPoint(d),h.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=
rocket-3d/web/js/Three.js:h}};THREE.Edge=function(a,c,b,d){this.vertices=[a,c];this.vertexIndices=[b,d];this.faces=[];this.faceIndices=[]};THREE.Camera=function(){if(arguments.length)return console.warn("DEPRECATED: Camera() is now PerspectiveCamera() or OrthographicCamera()."),new THREE.PerspectiveCamera(arguments[0],arguments[1],arguments[2],arguments[3]);THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};
rocket-3d/web/js/Three.js:THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)};THREE.OrthographicCamera=function(a,c,b,d,g,f){THREE.Camera.call(this);this.left=a;this.right=c;this.top=b;this.bottom=d;this.near=g!==void 0?g:0.1;this.far=f!==void 0?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;
rocket-3d/web/js/Three.js:THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,c,b,d){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=c!==void 0?c:1;this.near=b!==void 0?b:0.1;this.far=d!==void 0?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;
rocket-3d/web/js/Three.js:THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,c){this.fov=2*Math.atan((c!==void 0?c:43.25)/(a*2));this.fov*=180/Math.PI;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,c,b,d,g,f){this.fullWidth=a;this.fullHeight=c;this.x=b;this.y=d;this.width=g;this.height=f;this.updateProjectionMatrix()};
rocket-3d/web/js/Three.js:THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,c=Math.tan(this.fov*Math.PI/360)*this.near,b=-c,d=a*b,a=Math.abs(a*c-d),b=Math.abs(c-b);this.projectionMatrix=THREE.Matrix4.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,c-(this.y+this.height)*b/this.fullHeight,c-this.y*b/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,
rocket-3d/web/js/Three.js:this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
rocket-3d/web/js/Three.js:THREE.DirectionalLight=function(a,c,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c!==void 0?c:1;this.distance=b!==void 0?b:0};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,c,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=c!==void 0?c:1;this.distance=b!==void 0?b:0};THREE.PointLight.prototype=new THREE.Light;
rocket-3d/web/js/Three.js:THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(a,c,b,d){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=c!==void 0?c:1;this.distance=b!==void 0?b:0;this.castShadow=d!==void 0?d:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
rocket-3d/web/js/Three.js:THREE.Material=function(a){this.name="";this.id=THREE.MaterialCount++;a=a||{};this.opacity=a.opacity!==void 0?a.opacity:1;this.transparent=a.transparent!==void 0?a.transparent:!1;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.depthTest=a.depthTest!==void 0?a.depthTest:!0;this.depthWrite=a.depthWrite!==void 0?a.depthWrite:!0;this.polygonOffset=a.polygonOffset!==void 0?a.polygonOffset:!1;this.polygonOffsetFactor=a.polygonOffsetFactor!==void 0?a.polygonOffsetFactor:0;this.polygonOffsetUnits=
rocket-3d/web/js/Three.js:a.polygonOffsetUnits!==void 0?a.polygonOffsetUnits:0;this.alphaTest=a.alphaTest!==void 0?a.alphaTest:0;this.overdraw=a.overdraw!==void 0?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;
rocket-3d/web/js/Three.js:THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=a.linewidth!==void 0?a.linewidth:1;this.linecap=a.linecap!==void 0?a.linecap:"round";this.linejoin=a.linejoin!==void 0?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
rocket-3d/web/js/Three.js:THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:
rocket-3d/web/js/Three.js:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:
rocket-3d/web/js/Three.js:!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
rocket-3d/web/js/Three.js:THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=
rocket-3d/web/js/Three.js:a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=
rocket-3d/web/js/Three.js:a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
rocket-3d/web/js/Three.js:THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.specular=a.specular!==void 0?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=a.shininess!==void 0?a.shininess:30;this.metal=a.metal!==void 0?a.metal:!1;this.perPixel=a.perPixel!==void 0?a.perPixel:!1;this.map=a.map!==void 0?a.map:null;this.lightMap=
rocket-3d/web/js/Three.js:a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=
rocket-3d/web/js/Three.js:a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
rocket-3d/web/js/Three.js:THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
rocket-3d/web/js/Three.js:THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
rocket-3d/web/js/Three.js:THREE.MeshShaderMaterial=function(a){console.warn("DEPRECATED: MeshShaderMaterial() is now ShaderMaterial().");return new THREE.ShaderMaterial(a)};
rocket-3d/web/js/Three.js:THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.size=a.size!==void 0?a.size:1;this.sizeAttenuation=a.sizeAttenuation!==void 0?a.sizeAttenuation:!0;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
rocket-3d/web/js/Three.js:THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.program=a.program!==void 0?a.program:function(){}};THREE.ParticleCanvasMaterial.prototype=new THREE.Material;THREE.ParticleCanvasMaterial.prototype.constructor=THREE.ParticleCanvasMaterial;THREE.ParticleDOMMaterial=function(a){THREE.Material.call(this);this.domElement=a};
rocket-3d/web/js/Three.js:THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=a.fragmentShader!==void 0?a.fragmentShader:"void main() {}";this.vertexShader=a.vertexShader!==void 0?a.vertexShader:"void main() {}";this.uniforms=a.uniforms!==void 0?a.uniforms:{};this.attributes=a.attributes;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.fog=a.fog!==
rocket-3d/web/js/Three.js:void 0?a.fog:!1;this.lights=a.lights!==void 0?a.lights:!1;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
rocket-3d/web/js/Three.js:THREE.Texture=function(a,c,b,d,g,f){this.id=THREE.TextureCount++;this.image=a;this.mapping=c!==void 0?c:new THREE.UVMapping;this.wrapS=b!==void 0?b:THREE.ClampToEdgeWrapping;this.wrapT=d!==void 0?d:THREE.ClampToEdgeWrapping;this.magFilter=g!==void 0?g:THREE.LinearFilter;this.minFilter=f!==void 0?f:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1;this.onUpdate=null};
rocket-3d/web/js/Three.js:THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
rocket-3d/web/js/Three.js:THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;
rocket-3d/web/js/Three.js:THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,c,b,d,g,f,e,h,i){THREE.Texture.call(this,null,g,f,e,h,i);this.image={data:a,width:c,height:b};this.format=d!==void 0?d:THREE.RGBAFormat};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
rocket-3d/web/js/Three.js:THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.data.slice(0),this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.material=c;this.sortParticles=!1};
rocket-3d/web/js/Three.js:THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,c,b){THREE.Object3D.call(this);this.geometry=a;this.material=c;this.type=b!==void 0?b:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
rocket-3d/web/js/Three.js:THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.material=c;if(c instanceof Array)console.warn("DEPRECATED: Mesh material can no longer be an Array. Using material at index 0..."),this.material=c[0];if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};
rocket-3d/web/js/Three.js:for(var b=0;b<this.geometry.morphTargets.length;b++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[b].name]=b}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;
rocket-3d/web/js/Three.js:THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
rocket-3d/web/js/Three.js:THREE.Bone.prototype.update=function(a,c){this.matrixAutoUpdate&&(c|=this.updateMatrix());if(c||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,c=!0;var b,d=this.children.length;for(b=0;b<d;b++)this.children[b].update(this.skinMatrix,c)};
rocket-3d/web/js/Three.js:THREE.SkinnedMesh=function(a,c){THREE.Mesh.call(this,a,c);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var b,d,g,f,e,h;if(this.geometry.bones!==void 0){for(b=0;b<this.geometry.bones.length;b++)g=this.geometry.bones[b],f=g.pos,e=g.rotq,h=g.scl,d=this.addBone(),d.name=g.name,d.position.set(f[0],f[1],f[2]),d.quaternion.set(e[0],e[1],e[2],e[3]),d.useQuaternion=!0,h!==void 0?d.scale.set(h[0],h[1],h[2]):d.scale.set(1,1,1);for(b=0;b<this.bones.length;b++)g=this.geometry.bones[b],
rocket-3d/web/js/Three.js:d=this.bones[b],g.parent===-1?this.add(d):this.bones[g.parent].add(d);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
rocket-3d/web/js/Three.js:THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,c=this.children.length;a<c;a++){var b=this.children[a];b instanceof THREE.Bone?b.update(this.identityMatrix,!1):b.updateMatrixWorld(!0)}for(var c=this.bones.length,b=this.bones,d=this.boneMatrices,a=0;a<c;a++)b[a].skinMatrix.flattenToArrayOffset(d,
rocket-3d/web/js/Three.js:a*16)};
rocket-3d/web/js/Three.js:THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,c=[],b=0;b<this.bones.length;b++){a=this.bones[b];var d=new THREE.Matrix4;d.getInverse(a.skinMatrix);c.push(d);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,b*16)}if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.vertices[a].position,g=this.geometry.skinIndices[a].x,f=this.geometry.skinIndices[a].y,d=
rocket-3d/web/js/Three.js:new THREE.Vector3(b.x,b.y,b.z);this.geometry.skinVerticesA.push(c[g].multiplyVector3(d));d=new THREE.Vector3(b.x,b.y,b.z);this.geometry.skinVerticesB.push(c[f].multiplyVector3(d));this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1&&(b=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*0.5,this.geometry.skinWeights[a].x+=b,this.geometry.skinWeights[a].y+=b)}}};
rocket-3d/web/js/Three.js:THREE.MorphAnimMesh=function(a,c){THREE.Mesh.call(this,a,c);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype=new THREE.Mesh;THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;
rocket-3d/web/js/Three.js:THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var c=this.duration/(this.geometry.morphTargets.length-1);this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||this.time<0){this.direction*=-1;if(this.time>this.duration)this.time=this.duration,this.directionBackwards=!0;if(this.time<0)this.time=0,this.directionBackwards=!1}}else this.time%=this.duration;a=THREE.Math.clamp(Math.floor(this.time/c),0,this.geometry.morphTargets.length-1);if(a!=this.currentKeyframe)this.morphTargetInfluences[this.lastKeyframe]=
rocket-3d/web/js/Three.js:0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a;c=this.time%c/c;this.directionBackwards&&(c=1-c);this.morphTargetInfluences[this.currentKeyframe]=c;this.morphTargetInfluences[this.lastKeyframe]=1-c};THREE.Ribbon=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.material=c};THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;
rocket-3d/web/js/Three.js:THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,c){c===void 0&&(c=0);for(var c=Math.abs(c),b=0;b<this.LODs.length;b++)if(c<this.LODs[b].visibleAtDistance)break;this.LODs.splice(b,0,{visibleAtDistance:c,object3D:a});this.add(a)};
rocket-3d/web/js/Three.js:THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.position.x+a.n32*this.position.y+a.n33*this.position.z+a.n34);this.LODs[0].object3D.visible=!0;for(var c=1;c<this.LODs.length;c++)if(a>=this.LODs[c].visibleAtDistance)this.LODs[c-1].object3D.visible=!1,this.LODs[c].object3D.visible=!0;else break;for(;c<this.LODs.length;c++)this.LODs[c].object3D.visible=!1}};
rocket-3d/web/js/Three.js:THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map instanceof THREE.Texture?a.map:THREE.ImageUtils.loadTexture(a.map);this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?a.useScreenCoordinates:!0;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:
rocket-3d/web/js/Three.js:!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
rocket-3d/web/js/Three.js:THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);
rocket-3d/web/js/Three.js:THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
rocket-3d/web/js/Three.js:THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
rocket-3d/web/js/Three.js:THREE.Scene.prototype.addObject=function(a){if(a instanceof THREE.Light)this.lights.indexOf(a)===-1&&this.lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.objects.indexOf(a)===-1){this.objects.push(a);this.__objectsAdded.push(a);var c=this.__objectsRemoved.indexOf(a);c!==-1&&this.__objectsRemoved.splice(c,1)}for(c=0;c<a.children.length;c++)this.addObject(a.children[c])};
rocket-3d/web/js/Three.js:THREE.Scene.prototype.removeObject=function(a){if(a instanceof THREE.Light){var c=this.lights.indexOf(a);c!==-1&&this.lights.splice(c,1)}else a instanceof THREE.Camera||(c=this.objects.indexOf(a),c!==-1&&(this.objects.splice(c,1),this.__objectsRemoved.push(a),c=this.__objectsAdded.indexOf(a),c!==-1&&this.__objectsAdded.splice(c,1)));for(c=0;c<a.children.length;c++)this.removeObject(a.children[c])};
rocket-3d/web/js/Three.js:THREE.Fog=function(a,c,b){this.color=new THREE.Color(a);this.near=c!==void 0?c:1;this.far=b!==void 0?b:1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c!==void 0?c:2.5E-4};
rocket-3d/web/js/Three.js:THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,b,d,g,f;this.domElement=document.createElement("div");this.setSize=function(a,c){b=a;d=c;g=b/2;f=d/2};this.render=function(b,d){var i,l,k,o,p,m,r,n;a=c.projectScene(b,d);i=0;for(l=a.length;i<l;i++)if(p=a[i],p instanceof THREE.RenderableParticle){r=p.x*g+g;n=p.y*f+f;k=0;for(o=p.material.length;k<o;k++)if(m=p.material[k],m instanceof THREE.ParticleDOMMaterial)m=m.domElement,m.style.left=r+"px",m.style.top=n+"px"}}};
rocket-3d/web/js/Three.js:THREE.CanvasRenderer=function(a){function c(a){if(w!=a)n.globalAlpha=w=a}function b(a){if(u!=a){switch(a){case THREE.NormalBlending:n.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:n.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:n.globalCompositeOperation="darker"}u=a}}function d(a){if(B!=a)n.strokeStyle=B=a}function g(a){if(F!=a)n.fillStyle=F=a}var f=this,e,h,i,l=new THREE.Projector,a=a||{},k=a.canvas!==void 0?a.canvas:document.createElement("canvas"),
rocket-3d/web/js/Three.js:o,p,m,r,n=k.getContext("2d"),q=new THREE.Color(0),t=0,w=1,u=0,B=null,F=null,A=null,x=null,y=null,v,J,s,E,R=new THREE.RenderableVertex,U=new THREE.RenderableVertex,K,P,O,aa,H,G,I,M,S,ba,W,j,X=new THREE.Color,V=new THREE.Color,da=new THREE.Color,ga=new THREE.Color,$=new THREE.Color,ua=[],ra=[],qa,na,oa,pa,Da,za,Aa,Ba,L,Z,Q=new THREE.Rectangle,ea=new THREE.Rectangle,ha=new THREE.Rectangle,N=!1,ca=new THREE.Color,la=new THREE.Color,ma=new THREE.Color,fa=new THREE.Vector3,Y,xa,va,ta,T,wa,a=16;Y=document.createElement("canvas");
rocket-3d/web/js/Three.js:Y.width=Y.height=2;xa=Y.getContext("2d");xa.fillStyle="rgba(0,0,0,1)";xa.fillRect(0,0,2,2);va=xa.getImageData(0,0,2,2);ta=va.data;T=document.createElement("canvas");T.width=T.height=a;wa=T.getContext("2d");wa.translate(-a/2,-a/2);wa.scale(a,a);a--;this.domElement=k;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){o=a;p=b;m=Math.floor(o/2);r=Math.floor(p/2);k.width=o;k.height=p;Q.set(-m,-r,m,r);ea.set(-m,-r,m,r);w=1;u=0;y=x=A=F=
rocket-3d/web/js/Three.js:B=null};this.setClearColor=function(a,b){q.copy(a);t=b;ea.set(-m,-r,m,r)};this.setClearColorHex=function(a,b){q.setHex(a);t=b;ea.set(-m,-r,m,r)};this.clear=function(){n.setTransform(1,0,0,-1,m,r);ea.isEmpty()||(ea.minSelf(Q),ea.inflate(2),t<1&&n.clearRect(Math.floor(ea.getX()),Math.floor(ea.getY()),Math.floor(ea.getWidth()),Math.floor(ea.getHeight())),t>0&&(b(THREE.NormalBlending),c(1),g("rgba("+Math.floor(q.r*255)+","+Math.floor(q.g*255)+","+Math.floor(q.b*255)+","+t+")"),n.fillRect(Math.floor(ea.getX()),
rocket-3d/web/js/Three.js:Math.floor(ea.getY()),Math.floor(ea.getWidth()),Math.floor(ea.getHeight()))),ea.empty())};this.render=function(a,k){function p(a){var b,c,d,g;ca.setRGB(0,0,0);la.setRGB(0,0,0);ma.setRGB(0,0,0);b=0;for(c=a.length;b<c;b++)d=a[b],g=d.color,d instanceof THREE.AmbientLight?(ca.r+=g.r,ca.g+=g.g,ca.b+=g.b):d instanceof THREE.DirectionalLight?(la.r+=g.r,la.g+=g.g,la.b+=g.b):d instanceof THREE.PointLight&&(ma.r+=g.r,ma.g+=g.g,ma.b+=g.b)}function o(a,b,c,d){var g,f,e,j,h,i;g=0;for(f=a.length;g<f;g++)e=a[g],
rocket-3d/web/js/Three.js:j=e.color,e instanceof THREE.DirectionalLight?(h=e.matrixWorld.getPosition(),i=c.dot(h),i<=0||(i*=e.intensity,d.r+=j.r*i,d.g+=j.g*i,d.b+=j.b*i)):e instanceof THREE.PointLight&&(h=e.matrixWorld.getPosition(),i=c.dot(fa.sub(h,b).normalize()),i<=0||(i*=e.distance==0?1:1-Math.min(b.distanceTo(h)/e.distance,1),i!=0&&(i*=e.intensity,d.r+=j.r*i,d.g+=j.g*i,d.b+=j.b*i)))}function q(a,f,e){c(e.opacity);b(e.blending);var j,h,i,k,l,ia;if(e instanceof THREE.ParticleBasicMaterial){if(e.map)k=e.map.image,l=k.width>>
rocket-3d/web/js/Three.js:1,ia=k.height>>1,e=f.scale.x*m,i=f.scale.y*r,j=e*l,h=i*ia,ha.set(a.x-j,a.y-h,a.x+j,a.y+h),Q.intersects(ha)&&(n.save(),n.translate(a.x,a.y),n.rotate(-f.rotation),n.scale(e,-i),n.translate(-l,-ia),n.drawImage(k,0,0),n.restore())}else e instanceof THREE.ParticleCanvasMaterial&&(j=f.scale.x*m,h=f.scale.y*r,ha.set(a.x-j,a.y-h,a.x+j,a.y+h),Q.intersects(ha)&&(d(e.color.getContextStyle()),g(e.color.getContextStyle()),n.save(),n.translate(a.x,a.y),n.rotate(-f.rotation),n.scale(j,h),e.program(n),n.restore()))}
rocket-3d/web/js/Three.js:function t(a,g,f,e){c(e.opacity);b(e.blending);n.beginPath();n.moveTo(a.positionScreen.x,a.positionScreen.y);n.lineTo(g.positionScreen.x,g.positionScreen.y);n.closePath();if(e instanceof THREE.LineBasicMaterial){a=e.linewidth;if(A!=a)n.lineWidth=A=a;a=e.linecap;if(x!=a)n.lineCap=x=a;a=e.linejoin;if(y!=a)n.lineJoin=y=a;d(e.color.getContextStyle());n.stroke();ha.inflate(e.linewidth*2)}}function w(a,d,g,e,j,h,m,n){f.info.render.vertices+=3;f.info.render.faces++;c(n.opacity);b(n.blending);K=a.positionScreen.x;
rocket-3d/web/js/Three.js:P=a.positionScreen.y;O=d.positionScreen.x;aa=d.positionScreen.y;H=g.positionScreen.x;G=g.positionScreen.y;Ga(K,P,O,aa,H,G);if(n instanceof THREE.MeshBasicMaterial)if(n.map)n.map.mapping instanceof THREE.UVMapping&&(pa=m.uvs[0],Ka(K,P,O,aa,H,G,pa[e].u,pa[e].v,pa[j].u,pa[j].v,pa[h].u,pa[h].v,n.map));else if(n.envMap){if(n.envMap.mapping instanceof THREE.SphericalReflectionMapping)a=k.matrixWorldInverse,fa.copy(m.vertexNormalsWorld[e]),Da=(fa.x*a.n11+fa.y*a.n12+fa.z*a.n13)*0.5+0.5,za=-(fa.x*a.n21+fa.y*
rocket-3d/web/js/Three.js:a.n22+fa.z*a.n23)*0.5+0.5,fa.copy(m.vertexNormalsWorld[j]),Aa=(fa.x*a.n11+fa.y*a.n12+fa.z*a.n13)*0.5+0.5,Ba=-(fa.x*a.n21+fa.y*a.n22+fa.z*a.n23)*0.5+0.5,fa.copy(m.vertexNormalsWorld[h]),L=(fa.x*a.n11+fa.y*a.n12+fa.z*a.n13)*0.5+0.5,Z=-(fa.x*a.n21+fa.y*a.n22+fa.z*a.n23)*0.5+0.5,Ka(K,P,O,aa,H,G,Da,za,Aa,Ba,L,Z,n.envMap)}else n.wireframe?u(n.color,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):Ca(n.color);else if(n instanceof THREE.MeshLambertMaterial)n.map&&!n.wireframe&&(n.map.mapping instanceof
rocket-3d/web/js/Three.js:THREE.UVMapping&&(pa=m.uvs[0],Ka(K,P,O,aa,H,G,pa[e].u,pa[e].v,pa[j].u,pa[j].v,pa[h].u,pa[h].v,n.map)),b(THREE.SubtractiveBlending)),N?!n.wireframe&&n.shading==THREE.SmoothShading&&m.vertexNormalsWorld.length==3?(V.r=da.r=ga.r=ca.r,V.g=da.g=ga.g=ca.g,V.b=da.b=ga.b=ca.b,o(i,m.v1.positionWorld,m.vertexNormalsWorld[0],V),o(i,m.v2.positionWorld,m.vertexNormalsWorld[1],da),o(i,m.v3.positionWorld,m.vertexNormalsWorld[2],ga),V.r=Math.max(0,Math.min(n.color.r*V.r,1)),V.g=Math.max(0,Math.min(n.color.g*V.g,
rocket-3d/web/js/Three.js:1)),V.b=Math.max(0,Math.min(n.color.b*V.b,1)),da.r=Math.max(0,Math.min(n.color.r*da.r,1)),da.g=Math.max(0,Math.min(n.color.g*da.g,1)),da.b=Math.max(0,Math.min(n.color.b*da.b,1)),ga.r=Math.max(0,Math.min(n.color.r*ga.r,1)),ga.g=Math.max(0,Math.min(n.color.g*ga.g,1)),ga.b=Math.max(0,Math.min(n.color.b*ga.b,1)),$.r=(da.r+ga.r)*0.5,$.g=(da.g+ga.g)*0.5,$.b=(da.b+ga.b)*0.5,oa=Ha(V,da,ga,$),Fa(K,P,O,aa,H,G,0,0,1,0,0,1,oa)):(X.r=ca.r,X.g=ca.g,X.b=ca.b,o(i,m.centroidWorld,m.normalWorld,X),X.r=Math.max(0,Math.min(n.color.r*
rocket-3d/web/js/Three.js:X.r,1)),X.g=Math.max(0,Math.min(n.color.g*X.g,1)),X.b=Math.max(0,Math.min(n.color.b*X.b,1)),n.wireframe?u(X,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):Ca(X)):n.wireframe?u(n.color,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):Ca(n.color);else if(n instanceof THREE.MeshDepthMaterial)qa=k.near,na=k.far,V.r=V.g=V.b=1-B(a.positionScreen.z,qa,na),da.r=da.g=da.b=1-B(d.positionScreen.z,qa,na),ga.r=ga.g=ga.b=1-B(g.positionScreen.z,qa,na),$.r=(da.r+ga.r)*0.5,$.g=(da.g+ga.g)*
rocket-3d/web/js/Three.js:0.5,$.b=(da.b+ga.b)*0.5,oa=Ha(V,da,ga,$),Fa(K,P,O,aa,H,G,0,0,1,0,0,1,oa);else if(n instanceof THREE.MeshNormalMaterial)X.r=F(m.normalWorld.x),X.g=F(m.normalWorld.y),X.b=F(m.normalWorld.z),n.wireframe?u(X,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):Ca(X)}function Ma(a,d,g,e,h,n,m,l,p){f.info.render.vertices+=4;f.info.render.faces++;c(l.opacity);b(l.blending);if(l.map||l.envMap)w(a,d,e,0,1,3,m,l,p),w(h,g,n,1,2,3,m,l,p);else if(K=a.positionScreen.x,P=a.positionScreen.y,O=d.positionScreen.x,
rocket-3d/web/js/Three.js:aa=d.positionScreen.y,H=g.positionScreen.x,G=g.positionScreen.y,I=e.positionScreen.x,M=e.positionScreen.y,S=h.positionScreen.x,ba=h.positionScreen.y,W=n.positionScreen.x,j=n.positionScreen.y,l instanceof THREE.MeshBasicMaterial)Ia(K,P,O,aa,H,G,I,M),l.wireframe?u(l.color,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):Ca(l.color);else if(l instanceof THREE.MeshLambertMaterial)N?!l.wireframe&&l.shading==THREE.SmoothShading&&m.vertexNormalsWorld.length==4?(V.r=da.r=ga.r=$.r=ca.r,V.g=da.g=
rocket-3d/web/js/Three.js:ga.g=$.g=ca.g,V.b=da.b=ga.b=$.b=ca.b,o(i,m.v1.positionWorld,m.vertexNormalsWorld[0],V),o(i,m.v2.positionWorld,m.vertexNormalsWorld[1],da),o(i,m.v4.positionWorld,m.vertexNormalsWorld[3],ga),o(i,m.v3.positionWorld,m.vertexNormalsWorld[2],$),V.r=Math.max(0,Math.min(l.color.r*V.r,1)),V.g=Math.max(0,Math.min(l.color.g*V.g,1)),V.b=Math.max(0,Math.min(l.color.b*V.b,1)),da.r=Math.max(0,Math.min(l.color.r*da.r,1)),da.g=Math.max(0,Math.min(l.color.g*da.g,1)),da.b=Math.max(0,Math.min(l.color.b*da.b,1)),ga.r=
rocket-3d/web/js/Three.js:Math.max(0,Math.min(l.color.r*ga.r,1)),ga.g=Math.max(0,Math.min(l.color.g*ga.g,1)),ga.b=Math.max(0,Math.min(l.color.b*ga.b,1)),$.r=Math.max(0,Math.min(l.color.r*$.r,1)),$.g=Math.max(0,Math.min(l.color.g*$.g,1)),$.b=Math.max(0,Math.min(l.color.b*$.b,1)),oa=Ha(V,da,ga,$),Ga(K,P,O,aa,I,M),Fa(K,P,O,aa,I,M,0,0,1,0,0,1,oa),Ga(S,ba,H,G,W,j),Fa(S,ba,H,G,W,j,1,0,1,1,0,1,oa)):(X.r=ca.r,X.g=ca.g,X.b=ca.b,o(i,m.centroidWorld,m.normalWorld,X),X.r=Math.max(0,Math.min(l.color.r*X.r,1)),X.g=Math.max(0,Math.min(l.color.g*
rocket-3d/web/js/Three.js:X.g,1)),X.b=Math.max(0,Math.min(l.color.b*X.b,1)),Ia(K,P,O,aa,H,G,I,M),l.wireframe?u(X,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):Ca(X)):(Ia(K,P,O,aa,H,G,I,M),l.wireframe?u(l.color,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):Ca(l.color));else if(l instanceof THREE.MeshNormalMaterial)X.r=F(m.normalWorld.x),X.g=F(m.normalWorld.y),X.b=F(m.normalWorld.z),Ia(K,P,O,aa,H,G,I,M),l.wireframe?u(X,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):Ca(X);else if(l instanceof
rocket-3d/web/js/Three.js:THREE.MeshDepthMaterial)qa=k.near,na=k.far,V.r=V.g=V.b=1-B(a.positionScreen.z,qa,na),da.r=da.g=da.b=1-B(d.positionScreen.z,qa,na),ga.r=ga.g=ga.b=1-B(e.positionScreen.z,qa,na),$.r=$.g=$.b=1-B(g.positionScreen.z,qa,na),oa=Ha(V,da,ga,$),Ga(K,P,O,aa,I,M),Fa(K,P,O,aa,I,M,0,0,1,0,0,1,oa),Ga(S,ba,H,G,W,j),Fa(S,ba,H,G,W,j,1,0,1,1,0,1,oa)}function Ga(a,b,c,d,g,e){n.beginPath();n.moveTo(a,b);n.lineTo(c,d);n.lineTo(g,e);n.lineTo(a,b);n.closePath()}function Ia(a,b,c,d,g,e,f,j){n.beginPath();n.moveTo(a,b);n.lineTo(c,
rocket-3d/web/js/Three.js:d);n.lineTo(g,e);n.lineTo(f,j);n.lineTo(a,b);n.closePath()}function u(a,b,c,g){if(A!=b)n.lineWidth=A=b;if(x!=c)n.lineCap=x=c;if(y!=g)n.lineJoin=y=g;d(a.getContextStyle());n.stroke();ha.inflate(b*2)}function Ca(a){g(a.getContextStyle());n.fill()}function Ka(a,b,c,d,e,f,j,h,i,m,k,l,ia){if(ia.image.width!=0){if(ia.needsUpdate==!0||ua[ia.id]==void 0){var o=ia.wrapS==THREE.RepeatWrapping,p=ia.wrapT==THREE.RepeatWrapping;ua[ia.id]=n.createPattern(ia.image,o&&p?"repeat":o&&!p?"repeat-x":!o&&p?"repeat-y":
rocket-3d/web/js/Three.js:"no-repeat");ia.needsUpdate=!1}g(ua[ia.id]);var o=ia.offset.x/ia.repeat.x,p=ia.offset.y/ia.repeat.y,L=ia.image.width*ia.repeat.x,q=ia.image.height*ia.repeat.y,j=(j+o)*L,h=(h+p)*q,i=(i+o)*L,m=(m+p)*q,k=(k+o)*L,l=(l+p)*q;c-=a;d-=b;e-=a;f-=b;i-=j;m-=h;k-=j;l-=h;o=i*l-k*m;if(o==0){if(ra[ia.id]==void 0)b=document.createElement("canvas"),b.width=ia.image.width,b.height=ia.image.height,a=b.getContext("2d"),a.drawImage(ia.image,0,0),ra[ia.id]=a.getImageData(0,0,ia.image.width,ia.image.height).data,delete b;
rocket-3d/web/js/Three.js:b=ra[ia.id];j=(Math.floor(j)+Math.floor(h)*ia.image.width)*4;X.setRGB(b[j]/255,b[j+1]/255,b[j+2]/255);Ca(X)}else o=1/o,ia=(l*c-m*e)*o,m=(l*d-m*f)*o,c=(i*e-k*c)*o,d=(i*f-k*d)*o,a=a-ia*j-c*h,j=b-m*j-d*h,n.save(),n.transform(ia,m,c,d,a,j),n.fill(),n.restore()}}function Fa(a,b,c,d,g,e,f,j,h,i,m,k,l){var ia,o;ia=l.width-1;o=l.height-1;f*=ia;j*=o;h*=ia;i*=o;m*=ia;k*=o;c-=a;d-=b;g-=a;e-=b;h-=f;i-=j;m-=f;k-=j;o=1/(h*k-m*i);ia=(k*c-i*g)*o;i=(k*d-i*e)*o;c=(h*g-m*c)*o;d=(h*e-m*d)*o;a=a-ia*f-c*j;b=b-i*f-d*j;
rocket-3d/web/js/Three.js:n.save();n.transform(ia,i,c,d,a,b);n.clip();n.drawImage(l,0,0);n.restore()}function Ha(a,b,c,d){var g=~~(a.r*255),e=~~(a.g*255),a=~~(a.b*255),f=~~(b.r*255),j=~~(b.g*255),b=~~(b.b*255),h=~~(c.r*255),i=~~(c.g*255),c=~~(c.b*255),m=~~(d.r*255),k=~~(d.g*255),d=~~(d.b*255);ta[0]=g<0?0:g>255?255:g;ta[1]=e<0?0:e>255?255:e;ta[2]=a<0?0:a>255?255:a;ta[4]=f<0?0:f>255?255:f;ta[5]=j<0?0:j>255?255:j;ta[6]=b<0?0:b>255?255:b;ta[8]=h<0?0:h>255?255:h;ta[9]=i<0?0:i>255?255:i;ta[10]=c<0?0:c>255?255:c;ta[12]=m<0?0:m>255?
rocket-3d/web/js/Three.js:255:m;ta[13]=k<0?0:k>255?255:k;ta[14]=d<0?0:d>255?255:d;xa.putImageData(va,0,0);wa.drawImage(Y,0,0);return T}function B(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function F(a){a=(a+1)*0.5;return a<0?0:a>1?1:a}function Ea(a,b){var c=b.x-a.x,d=b.y-a.y,g=c*c+d*d;g!=0&&(g=1/Math.sqrt(g),c*=g,d*=g,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}var Ja,La,sa,D;this.autoClear?this.clear():n.setTransform(1,0,0,-1,m,r);f.info.render.vertices=0;f.info.render.faces=0;e=l.projectScene(a,k,this.sortElements);h=e.elements;i=e.lights;
rocket-3d/web/js/Three.js:(N=i.length>0)&&p(i);Ja=0;for(La=h.length;Ja<La;Ja++)if(sa=h[Ja],D=sa.material,D=D instanceof THREE.MeshFaceMaterial?sa.faceMaterial:D,!(D==null||D.opacity==0)){ha.empty();if(sa instanceof THREE.RenderableParticle)v=sa,v.x*=m,v.y*=r,q(v,sa,D,a);else if(sa instanceof THREE.RenderableLine)v=sa.v1,J=sa.v2,v.positionScreen.x*=m,v.positionScreen.y*=r,J.positionScreen.x*=m,J.positionScreen.y*=r,ha.addPoint(v.positionScreen.x,v.positionScreen.y),ha.addPoint(J.positionScreen.x,J.positionScreen.y),Q.intersects(ha)&&
rocket-3d/web/js/Three.js:t(v,J,sa,D,a);else if(sa instanceof THREE.RenderableFace3)v=sa.v1,J=sa.v2,s=sa.v3,v.positionScreen.x*=m,v.positionScreen.y*=r,J.positionScreen.x*=m,J.positionScreen.y*=r,s.positionScreen.x*=m,s.positionScreen.y*=r,D.overdraw&&(Ea(v.positionScreen,J.positionScreen),Ea(J.positionScreen,s.positionScreen),Ea(s.positionScreen,v.positionScreen)),ha.add3Points(v.positionScreen.x,v.positionScreen.y,J.positionScreen.x,J.positionScreen.y,s.positionScreen.x,s.positionScreen.y),Q.intersects(ha)&&w(v,J,s,0,1,
rocket-3d/web/js/Three.js:2,sa,D,a);else if(sa instanceof THREE.RenderableFace4)v=sa.v1,J=sa.v2,s=sa.v3,E=sa.v4,v.positionScreen.x*=m,v.positionScreen.y*=r,J.positionScreen.x*=m,J.positionScreen.y*=r,s.positionScreen.x*=m,s.positionScreen.y*=r,E.positionScreen.x*=m,E.positionScreen.y*=r,R.positionScreen.copy(J.positionScreen),U.positionScreen.copy(E.positionScreen),D.overdraw&&(Ea(v.positionScreen,J.positionScreen),Ea(J.positionScreen,E.positionScreen),Ea(E.positionScreen,v.positionScreen),Ea(s.positionScreen,R.positionScreen),
rocket-3d/web/js/Three.js:Ea(s.positionScreen,U.positionScreen)),ha.addPoint(v.positionScreen.x,v.positionScreen.y),ha.addPoint(J.positionScreen.x,J.positionScreen.y),ha.addPoint(s.positionScreen.x,s.positionScreen.y),ha.addPoint(E.positionScreen.x,E.positionScreen.y),Q.intersects(ha)&&Ma(v,J,s,E,R,U,sa,D,a);ea.addRectangle(ha)}n.setTransform(1,0,0,1,0,0)}};
rocket-3d/web/js/Three.js:THREE.SVGRenderer=function(){function a(a,b,c,d){var g,e,f,h,i,m;g=0;for(e=a.length;g<e;g++)f=a[g],h=f.color,f instanceof THREE.DirectionalLight?(i=f.matrixWorld.getPosition(),m=c.dot(i),m<=0||(m*=f.intensity,d.r+=h.r*m,d.g+=h.g*m,d.b+=h.b*m)):f instanceof THREE.PointLight&&(i=f.matrixWorld.getPosition(),m=c.dot(v.sub(i,b).normalize()),m<=0||(m*=f.distance==0?1:1-Math.min(b.distanceTo(i)/f.distance,1),m!=0&&(m*=f.intensity,d.r+=h.r*m,d.g+=h.g*m,d.b+=h.b*m)))}function c(a){J[a]==null&&(J[a]=document.createElementNS("http://www.w3.org/2000/svg",
rocket-3d/web/js/Three.js:"path"),K==0&&J[a].setAttribute("shape-rendering","crispEdges"));return J[a]}function b(a){a=(a+1)*0.5;return a<0?0:a>1?1:a}var d=this,g,f,e,h=new THREE.Projector,i=document.createElementNS("http://www.w3.org/2000/svg","svg"),l,k,o,p,m,r,n,q,t=new THREE.Rectangle,w=new THREE.Rectangle,u=!1,B=new THREE.Color,F=new THREE.Color,A=new THREE.Color,x=new THREE.Color,y,v=new THREE.Vector3,J=[],s=[],E,R,U,K=1;this.domElement=i;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,
rocket-3d/web/js/Three.js:faces:0}};this.setQuality=function(a){switch(a){case "high":K=1;break;case "low":K=0}};this.setSize=function(a,b){l=a;k=b;o=l/2;p=k/2;i.setAttribute("viewBox",-o+" "+-p+" "+l+" "+k);i.setAttribute("width",l);i.setAttribute("height",k);t.set(-o,-p,o,p)};this.clear=function(){for(;i.childNodes.length>0;)i.removeChild(i.childNodes[0])};this.render=function(k,l){var J,v,G,I;this.autoClear&&this.clear();d.info.render.vertices=0;d.info.render.faces=0;g=h.projectScene(k,l,this.sortElements);f=g.elements;
rocket-3d/web/js/Three.js:e=g.lights;U=R=0;if(u=e.length>0){F.setRGB(0,0,0);A.setRGB(0,0,0);x.setRGB(0,0,0);J=0;for(v=e.length;J<v;J++)I=e[J],G=I.color,I instanceof THREE.AmbientLight?(F.r+=G.r,F.g+=G.g,F.b+=G.b):I instanceof THREE.DirectionalLight?(A.r+=G.r,A.g+=G.g,A.b+=G.b):I instanceof THREE.PointLight&&(x.r+=G.r,x.g+=G.g,x.b+=G.b)}J=0;for(v=f.length;J<v;J++)if(G=f[J],I=G.material,I=I instanceof THREE.MeshFaceMaterial?G.faceMaterial:I,!(I==null||I.opacity==0))if(w.empty(),G instanceof THREE.RenderableParticle)m=G,m.x*=
rocket-3d/web/js/Three.js:o,m.y*=-p;else if(G instanceof THREE.RenderableLine){if(m=G.v1,r=G.v2,m.positionScreen.x*=o,m.positionScreen.y*=-p,r.positionScreen.x*=o,r.positionScreen.y*=-p,w.addPoint(m.positionScreen.x,m.positionScreen.y),w.addPoint(r.positionScreen.x,r.positionScreen.y),t.intersects(w)){G=m;var M=r,S=U++;s[S]==null&&(s[S]=document.createElementNS("http://www.w3.org/2000/svg","line"),K==0&&s[S].setAttribute("shape-rendering","crispEdges"));E=s[S];E.setAttribute("x1",G.positionScreen.x);E.setAttribute("y1",G.positionScreen.y);
rocket-3d/web/js/Three.js:E.setAttribute("x2",M.positionScreen.x);E.setAttribute("y2",M.positionScreen.y);I instanceof THREE.LineBasicMaterial&&(E.setAttribute("style","fill: none; stroke: "+I.color.getContextStyle()+"; stroke-width: "+I.linewidth+"; stroke-opacity: "+I.opacity+"; stroke-linecap: "+I.linecap+"; stroke-linejoin: "+I.linejoin),i.appendChild(E))}}else if(G instanceof THREE.RenderableFace3){if(m=G.v1,r=G.v2,n=G.v3,m.positionScreen.x*=o,m.positionScreen.y*=-p,r.positionScreen.x*=o,r.positionScreen.y*=-p,n.positionScreen.x*=
rocket-3d/web/js/Three.js:o,n.positionScreen.y*=-p,w.addPoint(m.positionScreen.x,m.positionScreen.y),w.addPoint(r.positionScreen.x,r.positionScreen.y),w.addPoint(n.positionScreen.x,n.positionScreen.y),t.intersects(w)){var M=m,S=r,ba=n;d.info.render.vertices+=3;d.info.render.faces++;E=c(R++);E.setAttribute("d","M "+M.positionScreen.x+" "+M.positionScreen.y+" L "+S.positionScreen.x+" "+S.positionScreen.y+" L "+ba.positionScreen.x+","+ba.positionScreen.y+"z");I instanceof THREE.MeshBasicMaterial?B.copy(I.color):I instanceof THREE.MeshLambertMaterial?
rocket-3d/web/js/Three.js:u?(B.r=F.r,B.g=F.g,B.b=F.b,a(e,G.centroidWorld,G.normalWorld,B),B.r=Math.max(0,Math.min(I.color.r*B.r,1)),B.g=Math.max(0,Math.min(I.color.g*B.g,1)),B.b=Math.max(0,Math.min(I.color.b*B.b,1))):B.copy(I.color):I instanceof THREE.MeshDepthMaterial?(y=1-I.__2near/(I.__farPlusNear-G.z*I.__farMinusNear),B.setRGB(y,y,y)):I instanceof THREE.MeshNormalMaterial&&B.setRGB(b(G.normalWorld.x),b(G.normalWorld.y),b(G.normalWorld.z));I.wireframe?E.setAttribute("style","fill: none; stroke: "+B.getContextStyle()+"; stroke-width: "+
rocket-3d/web/js/Three.js:I.wireframeLinewidth+"; stroke-opacity: "+I.opacity+"; stroke-linecap: "+I.wireframeLinecap+"; stroke-linejoin: "+I.wireframeLinejoin):E.setAttribute("style","fill: "+B.getContextStyle()+"; fill-opacity: "+I.opacity);i.appendChild(E)}}else if(G instanceof THREE.RenderableFace4&&(m=G.v1,r=G.v2,n=G.v3,q=G.v4,m.positionScreen.x*=o,m.positionScreen.y*=-p,r.positionScreen.x*=o,r.positionScreen.y*=-p,n.positionScreen.x*=o,n.positionScreen.y*=-p,q.positionScreen.x*=o,q.positionScreen.y*=-p,w.addPoint(m.positionScreen.x,
rocket-3d/web/js/Three.js:m.positionScreen.y),w.addPoint(r.positionScreen.x,r.positionScreen.y),w.addPoint(n.positionScreen.x,n.positionScreen.y),w.addPoint(q.positionScreen.x,q.positionScreen.y),t.intersects(w))){var M=m,S=r,ba=n,W=q;d.info.render.vertices+=4;d.info.render.faces++;E=c(R++);E.setAttribute("d","M "+M.positionScreen.x+" "+M.positionScreen.y+" L "+S.positionScreen.x+" "+S.positionScreen.y+" L "+ba.positionScreen.x+","+ba.positionScreen.y+" L "+W.positionScreen.x+","+W.positionScreen.y+"z");I instanceof THREE.MeshBasicMaterial?
rocket-3d/web/js/Three.js:B.copy(I.color):I instanceof THREE.MeshLambertMaterial?u?(B.r=F.r,B.g=F.g,B.b=F.b,a(e,G.centroidWorld,G.normalWorld,B),B.r=Math.max(0,Math.min(I.color.r*B.r,1)),B.g=Math.max(0,Math.min(I.color.g*B.g,1)),B.b=Math.max(0,Math.min(I.color.b*B.b,1))):B.copy(I.color):I instanceof THREE.MeshDepthMaterial?(y=1-I.__2near/(I.__farPlusNear-G.z*I.__farMinusNear),B.setRGB(y,y,y)):I instanceof THREE.MeshNormalMaterial&&B.setRGB(b(G.normalWorld.x),b(G.normalWorld.y),b(G.normalWorld.z));I.wireframe?E.setAttribute("style",
rocket-3d/web/js/Three.js:"fill: none; stroke: "+B.getContextStyle()+"; stroke-width: "+I.wireframeLinewidth+"; stroke-opacity: "+I.opacity+"; stroke-linecap: "+I.wireframeLinecap+"; stroke-linejoin: "+I.wireframeLinejoin):E.setAttribute("style","fill: "+B.getContextStyle()+"; fill-opacity: "+I.opacity);i.appendChild(E)}}};
rocket-3d/web/js/Three.js:THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",
rocket-3d/web/js/Three.js:envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
rocket-3d/web/js/Three.js:map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
rocket-3d/web/js/Three.js:lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif",
rocket-3d/web/js/Three.js:lights_lambert_vertex:"vLightWeighting = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n}\n#endif\nvLightWeighting = vLightWeighting * diffuse + ambient * ambientLightColor;",
rocket-3d/web/js/Three.js:lights_phong_pars_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",lights_phong_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif",
rocket-3d/web/js/Three.js:lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
rocket-3d/web/js/Three.js:lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = pow( pointDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = pow( dirDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
rocket-3d/web/js/Three.js:color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
rocket-3d/web/js/Three.js:morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
rocket-3d/web/js/Three.js:default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
rocket-3d/web/js/Three.js:shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nshadowCoord.z += shadowBias;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( shadowDarkness );\n#endif\n}\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
rocket-3d/web/js/Three.js:shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
rocket-3d/web/js/Three.js:THREE.UniformsUtils={merge:function(a){var c,b,d,g={};for(c=0;c<a.length;c++)for(b in d=this.clone(a[c]),d)g[b]=d[b];return g},clone:function(a){var c,b,d,g={};for(c in a)for(b in g[c]={},a[c])d=a[c][b],g[c][b]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return g}};
rocket-3d/web/js/Three.js:THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
rocket-3d/web/js/Three.js:value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",
rocket-3d/web/js/Three.js:value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
rocket-3d/web/js/Three.js:THREE.ShaderLib={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"},
rocket-3d/web/js/Three.js:depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},
rocket-3d/web/js/Three.js:vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
rocket-3d/web/js/Three.js:THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
rocket-3d/web/js/Three.js:THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
rocket-3d/web/js/Three.js:THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)}}]),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,
rocket-3d/web/js/Three.js:THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",
rocket-3d/web/js/Three.js:THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
rocket-3d/web/js/Three.js:THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"gl_FragColor.xyz = gl_FragColor.xyz * vLightWeighting;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",
rocket-3d/web/js/Three.js:value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
rocket-3d/web/js/Three.js:THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;\nvec3 transformedNormal = normalMatrix * normal;\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,
rocket-3d/web/js/Three.js:"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,
rocket-3d/web/js/Three.js:THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
rocket-3d/web/js/Three.js:THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,
rocket-3d/web/js/Three.js:THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,
rocket-3d/web/js/Three.js:THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
rocket-3d/web/js/Three.js:THREE.WebGLRenderer=function(a){function c(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var g in d.attributes){var f=d.attributes[g];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var e=1;f.type==="v2"?e=2:f.type==="v3"?e=3:f.type==="v4"?e=4:f.type==="c"&&(e=3);f.size=e;f.array=new Float32Array(c*e);f.buffer=j.createBuffer();f.buffer.belongsToAttribute=g;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
rocket-3d/web/js/Three.js:function b(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;else if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function d(a){if(a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial)return!1;return a&&a.shading!==void 0&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function g(a){if(a.vertexColors)return a.vertexColors;return!1}function f(a){if(a.map||a.lightMap||a instanceof THREE.ShaderMaterial)return!0;
rocket-3d/web/js/Three.js:return!1}function e(a,b,c){var d,g,f,e,h=a.vertices;e=h.length;var i=a.colors,m=i.length,k=a.__vertexArray,n=a.__colorArray,l=a.__sortArray,o=a.__dirtyVertices,p=a.__dirtyColors,L=a.__webglCustomAttributesList;if(c.sortParticles){N.multiplySelf(c.matrixWorld);for(d=0;d<e;d++)g=h[d].position,ma.copy(g),N.multiplyVector3(ma),l[d]=[ma.z,d];l.sort(function(a,b){return b[0]-a[0]});for(d=0;d<e;d++)g=h[l[d][1]].position,f=d*3,k[f]=g.x,k[f+1]=g.y,k[f+2]=g.z;for(d=0;d<m;d++)f=d*3,g=i[l[d][1]],n[f]=g.r,n[f+
rocket-3d/web/js/Three.js:1]=g.g,n[f+2]=g.b;if(L){i=0;for(m=L.length;i<m;i++)if(h=L[i],h.boundTo===void 0||h.boundTo==="vertices")if(f=0,g=h.value.length,h.size===1)for(d=0;d<g;d++)e=l[d][1],h.array[d]=h.value[e];else if(h.size===2)for(d=0;d<g;d++)e=l[d][1],e=h.value[e],h.array[f]=e.x,h.array[f+1]=e.y,f+=2;else if(h.size===3)if(h.type==="c")for(d=0;d<g;d++)e=l[d][1],e=h.value[e],h.array[f]=e.r,h.array[f+1]=e.g,h.array[f+2]=e.b,f+=3;else for(d=0;d<g;d++)e=l[d][1],e=h.value[e],h.array[f]=e.x,h.array[f+1]=e.y,h.array[f+2]=e.z,
rocket-3d/web/js/Three.js:f+=3;else if(h.size===4)for(d=0;d<g;d++)e=l[d][1],e=h.value[e],h.array[f]=e.x,h.array[f+1]=e.y,h.array[f+2]=e.z,h.array[f+3]=e.w,f+=4}}else{if(o)for(d=0;d<e;d++)g=h[d].position,f=d*3,k[f]=g.x,k[f+1]=g.y,k[f+2]=g.z;if(p)for(d=0;d<m;d++)g=i[d],f=d*3,n[f]=g.r,n[f+1]=g.g,n[f+2]=g.b;if(L){i=0;for(m=L.length;i<m;i++)if(h=L[i],h.needsUpdate&&(h.boundTo===void 0||h.boundTo==="vertices"))if(g=h.value.length,f=0,h.size===1)for(d=0;d<g;d++)h.array[d]=h.value[d];else if(h.size===2)for(d=0;d<g;d++)e=h.value[d],
rocket-3d/web/js/Three.js:h.array[f]=e.x,h.array[f+1]=e.y,f+=2;else if(h.size===3)if(h.type==="c")for(d=0;d<g;d++)e=h.value[d],h.array[f]=e.r,h.array[f+1]=e.g,h.array[f+2]=e.b,f+=3;else for(d=0;d<g;d++)e=h.value[d],h.array[f]=e.x,h.array[f+1]=e.y,h.array[f+2]=e.z,f+=3;else if(h.size===4)for(d=0;d<g;d++)e=h.value[d],h.array[f]=e.x,h.array[f+1]=e.y,h.array[f+2]=e.z,h.array[f+3]=e.w,f+=4}}if(o||c.sortParticles)j.bindBuffer(j.ARRAY_BUFFER,a.__webglVertexBuffer),j.bufferData(j.ARRAY_BUFFER,k,b);if(p||c.sortParticles)j.bindBuffer(j.ARRAY_BUFFER,
rocket-3d/web/js/Three.js:a.__webglColorBuffer),j.bufferData(j.ARRAY_BUFFER,n,b);if(L){i=0;for(m=L.length;i<m;i++)if(h=L[i],h.needsUpdate||c.sortParticles)j.bindBuffer(j.ARRAY_BUFFER,h.buffer),j.bufferData(j.ARRAY_BUFFER,h.array,b)}}function h(a,b,c){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=j.createBuffer();if(!a.__webglNormalBuffer)a.__webglNormalBuffer=j.createBuffer();a.hasPos&&(j.bindBuffer(j.ARRAY_BUFFER,a.__webglVertexBuffer),j.bufferData(j.ARRAY_BUFFER,a.positionArray,j.DYNAMIC_DRAW),j.enableVertexAttribArray(b.attributes.position),
rocket-3d/web/js/Three.js:j.vertexAttribPointer(b.attributes.position,3,j.FLOAT,!1,0,0));if(a.hasNormal){j.bindBuffer(j.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var d,g,f,e,h,i,m,k,n,l,o=a.count*3;for(l=0;l<o;l+=9)c=a.normalArray,d=c[l],g=c[l+1],f=c[l+2],e=c[l+3],i=c[l+4],k=c[l+5],h=c[l+6],m=c[l+7],n=c[l+8],d=(d+e+h)/3,g=(g+i+m)/3,f=(f+k+n)/3,c[l]=d,c[l+1]=g,c[l+2]=f,c[l+3]=d,c[l+4]=g,c[l+5]=f,c[l+6]=d,c[l+7]=g,c[l+8]=f}j.bufferData(j.ARRAY_BUFFER,a.normalArray,j.DYNAMIC_DRAW);j.enableVertexAttribArray(b.attributes.normal);
rocket-3d/web/js/Three.js:j.vertexAttribPointer(b.attributes.normal,3,j.FLOAT,!1,0,0)}j.drawArrays(j.TRIANGLES,0,a.count);a.count=0}function i(a,b,c,d,g,f){if(d.opacity!==0){var e,h,c=u(a,b,c,d,f),b=c.attributes,a=!1,c=g.id*16777215+c.id*2+(d.wireframe?1:0);c!==$&&($=c,a=!0);if(!d.morphTargets&&b.position>=0)a&&(j.bindBuffer(j.ARRAY_BUFFER,g.__webglVertexBuffer),j.vertexAttribPointer(b.position,3,j.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;f.morphTargetBase!==-1?(j.bindBuffer(j.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[f.morphTargetBase]),
rocket-3d/web/js/Three.js:j.vertexAttribPointer(c.position,3,j.FLOAT,!1,0,0)):c.position>=0&&(j.bindBuffer(j.ARRAY_BUFFER,g.__webglVertexBuffer),j.vertexAttribPointer(c.position,3,j.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){e=0;var i=f.morphTargetForcedOrder;for(h=f.morphTargetInfluences;e<d.numSupportedMorphTargets&&e<i.length;)j.bindBuffer(j.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[i[e]]),j.vertexAttribPointer(c["morphTarget"+e],3,j.FLOAT,!1,0,0),f.__webglMorphTargetInfluences[e]=h[i[e]],e++}else{var i=[],m=-1,
rocket-3d/web/js/Three.js:l=0;h=f.morphTargetInfluences;var k,n=h.length;e=0;for(f.morphTargetBase!==-1&&(i[f.morphTargetBase]=!0);e<d.numSupportedMorphTargets;){for(k=0;k<n;k++)!i[k]&&h[k]>m&&(l=k,m=h[l]);j.bindBuffer(j.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[l]);j.vertexAttribPointer(c["morphTarget"+e],3,j.FLOAT,!1,0,0);f.__webglMorphTargetInfluences[e]=m;i[l]=1;m=-1;e++}}d.program.uniforms.morphTargetInfluences!==null&&j.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(g.__webglCustomAttributesList){e=
rocket-3d/web/js/Three.js:0;for(h=g.__webglCustomAttributesList.length;e<h;e++)c=g.__webglCustomAttributesList[e],b[c.buffer.belongsToAttribute]>=0&&(j.bindBuffer(j.ARRAY_BUFFER,c.buffer),j.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,j.FLOAT,!1,0,0))}b.color>=0&&(j.bindBuffer(j.ARRAY_BUFFER,g.__webglColorBuffer),j.vertexAttribPointer(b.color,3,j.FLOAT,!1,0,0));b.normal>=0&&(j.bindBuffer(j.ARRAY_BUFFER,g.__webglNormalBuffer),j.vertexAttribPointer(b.normal,3,j.FLOAT,!1,0,0));b.tangent>=0&&(j.bindBuffer(j.ARRAY_BUFFER,
rocket-3d/web/js/Three.js:g.__webglTangentBuffer),j.vertexAttribPointer(b.tangent,4,j.FLOAT,!1,0,0));b.uv>=0&&(g.__webglUVBuffer?(j.bindBuffer(j.ARRAY_BUFFER,g.__webglUVBuffer),j.vertexAttribPointer(b.uv,2,j.FLOAT,!1,0,0),j.enableVertexAttribArray(b.uv)):j.disableVertexAttribArray(b.uv));b.uv2>=0&&(g.__webglUV2Buffer?(j.bindBuffer(j.ARRAY_BUFFER,g.__webglUV2Buffer),j.vertexAttribPointer(b.uv2,2,j.FLOAT,!1,0,0),j.enableVertexAttribArray(b.uv2)):j.disableVertexAttribArray(b.uv2));d.skinning&&b.skinVertexA>=0&&b.skinVertexB>=
rocket-3d/web/js/Three.js:0&&b.skinIndex>=0&&b.skinWeight>=0&&(j.bindBuffer(j.ARRAY_BUFFER,g.__webglSkinVertexABuffer),j.vertexAttribPointer(b.skinVertexA,4,j.FLOAT,!1,0,0),j.bindBuffer(j.ARRAY_BUFFER,g.__webglSkinVertexBBuffer),j.vertexAttribPointer(b.skinVertexB,4,j.FLOAT,!1,0,0),j.bindBuffer(j.ARRAY_BUFFER,g.__webglSkinIndicesBuffer),j.vertexAttribPointer(b.skinIndex,4,j.FLOAT,!1,0,0),j.bindBuffer(j.ARRAY_BUFFER,g.__webglSkinWeightsBuffer),j.vertexAttribPointer(b.skinWeight,4,j.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?
rocket-3d/web/js/Three.js:(d=d.wireframeLinewidth,d!==Ba&&(j.lineWidth(d),Ba=d),a&&j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,g.__webglLineBuffer),j.drawElements(j.LINES,g.__webglLineCount,j.UNSIGNED_SHORT,0)):(a&&j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,g.__webglFaceBuffer),j.drawElements(j.TRIANGLES,g.__webglFaceCount,j.UNSIGNED_SHORT,0)),W.info.render.calls++,W.info.render.vertices+=g.__webglFaceCount,W.info.render.faces+=g.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?j.LINE_STRIP:j.LINES,d=d.linewidth,d!==
rocket-3d/web/js/Three.js:Ba&&(j.lineWidth(d),Ba=d),j.drawArrays(f,0,g.__webglLineCount),W.info.render.calls++):f instanceof THREE.ParticleSystem?(j.drawArrays(j.POINTS,0,g.__webglParticleCount),W.info.render.calls++):f instanceof THREE.Ribbon&&(j.drawArrays(j.TRIANGLE_STRIP,0,g.__webglVertexCount),W.info.render.calls++)}}function l(a){ha[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);ha[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);ha[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);ha[3].set(a.n41-
rocket-3d/web/js/Three.js:a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);ha[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);ha[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(var b,a=0;a<6;a++)b=ha[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))}function k(a){for(var b=a.matrixWorld,c=-a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)),d=0;d<6;d++)if(a=ha[d].x*b.n14+ha[d].y*b.n24+ha[d].z*b.n34+ha[d].w,a<=c)return!1;return!0}function o(a,b){return b.z-a.z}function p(a){var b,
rocket-3d/web/js/Three.js:c,d,g,f,e,m,n,o=0,p=a.lights;Y||(Y=new THREE.PerspectiveCamera(W.shadowCameraFov,W.shadowMapWidth/W.shadowMapHeight,W.shadowCameraNear,W.shadowCameraFar));b=0;for(c=p.length;b<c;b++)if(n=p[b],n.castShadow&&n instanceof THREE.SpotLight){ga=-1;W.shadowMap[o]||(W.shadowMap[o]=new THREE.WebGLRenderTarget(W.shadowMapWidth,W.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),xa[o]=new THREE.Matrix4);d=W.shadowMap[o];g=xa[o];Y.position.copy(n.position);Y.lookAt(n.target.position);
rocket-3d/web/js/Three.js:Y.parent==null&&(console.warn("Camera is not on the Scene. Adding it..."),a.add(Y),this.autoUpdateScene&&a.updateMatrixWorld());Y.matrixWorldInverse.getInverse(Y.matrixWorld);g.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);g.multiplySelf(Y.projectionMatrix);g.multiplySelf(Y.matrixWorldInverse);Y.matrixWorldInverse.flattenToArray(la);Y.projectionMatrix.flattenToArray(ca);N.multiply(Y.projectionMatrix,Y.matrixWorldInverse);l(N);U(d);j.clearColor(1,1,1,1);W.clear();j.clearColor(M.r,M.g,M.b,S);g=a.__webglObjects.length;
rocket-3d/web/js/Three.js:for(d=0;d<g;d++)if(e=a.__webglObjects[d],n=e.object,e.render=!1,n.visible&&n.castShadow&&(!(n instanceof THREE.Mesh)||!n.frustumCulled||k(n)))n.matrixWorld.flattenToArray(n._objectMatrixArray),B(n,Y,!1),e.render=!0;A(!0);v(THREE.NormalBlending);for(d=0;d<g;d++)if(e=a.__webglObjects[d],e.render)n=e.object,e=e.buffer,F(n),m=n.customDepthMaterial?n.customDepthMaterial:n.geometry.morphTargets.length?ta:va,i(Y,p,null,m,e,n);g=a.__webglObjectsImmediate.length;for(d=0;d<g;d++)e=a.__webglObjectsImmediate[d],
rocket-3d/web/js/Three.js:n=e.object,n.visible&&n.castShadow&&(n.matrixAutoUpdate&&n.matrixWorld.flattenToArray(n._objectMatrixArray),$=-1,B(n,Y,!1),F(n),f=u(Y,p,null,va,n),n.immediateRenderCallback?n.immediateRenderCallback(f,j,ha):n.render(function(a){h(a,f,va.shading)}));o++}}function m(a,b,c,d,g,f,e,h){var j,m,n,l;b?(m=a.length-1,l=b=-1):(m=0,b=a.length,l=1);for(var k=m;k!==b;k+=l)if(j=a[k],j.render){m=j.object;n=j.buffer;if(h)j=h;else{j=j[c];if(!j)continue;e&&v(j.blending);A(j.depthTest);x(j.depthWrite);y(j.polygonOffset,
rocket-3d/web/js/Three.js:j.polygonOffsetFactor,j.polygonOffsetUnits)}F(m);i(d,g,f,j,n,m)}}function r(a,b,c,d,g,f,e){for(var i,m,n,l,k=0,o=a.length;k<o;k++)if(i=a[k],m=i.object,m.visible){$=-1;if(e)n=e;else{n=i[b];if(!n)continue;f&&v(n.blending);A(n.depthTest);x(n.depthWrite);y(n.polygonOffset,n.polygonOffsetFactor,n.polygonOffsetUnits)}F(m);l=u(c,d,g,n,m);m.immediateRenderCallback?m.immediateRenderCallback(l,j,ha):m.render(function(a){h(a,l,n.shading)})}}function n(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}
rocket-3d/web/js/Three.js:function q(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function t(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function w(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function u(a,b,c,d,g){d.program||W.initMaterial(d,b,c,g);if(d.morphTargets&&!g.__webglMorphTargetInfluences){g.__webglMorphTargetInfluences=new Float32Array(W.maxMorphTargets);for(var f=0,e=W.maxMorphTargets;f<e;f++)g.__webglMorphTargetInfluences[f]=0}var h=!1,f=d.program,
rocket-3d/web/js/Three.js:e=f.uniforms,i=d.uniforms;f!==V&&(j.useProgram(f),V=f,h=!0);if(d.id!==ga)ga=d.id,h=!0;if(h){j.uniformMatrix4fv(e.projectionMatrix,!1,ca);if(c&&d.fog)if(i.fogColor.value=c.color,c instanceof THREE.Fog)i.fogNear.value=c.near,i.fogFar.value=c.far;else if(c instanceof THREE.FogExp2)i.fogDensity.value=c.density;if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){for(var m,n,l=0,k=0,o=0,p,L,q,r=fa,t=r.directional.colors,Q=r.directional.positions,Z=r.point.colors,w=
rocket-3d/web/js/Three.js:r.point.positions,u=r.point.distances,J=0,ea=0,c=m=q=0,h=b.length;c<h;c++)if(m=b[c],n=m.color,p=m.position,L=m.intensity,q=m.distance,m instanceof THREE.AmbientLight)W.gammaInput?(l+=n.r*n.r,k+=n.g*n.g,o+=n.b*n.b):(l+=n.r,k+=n.g,o+=n.b);else if(m instanceof THREE.DirectionalLight)q=J*3,W.gammaInput?(t[q]=n.r*n.r*L*L,t[q+1]=n.g*n.g*L*L,t[q+2]=n.b*n.b*L*L):(t[q]=n.r*L,t[q+1]=n.g*L,t[q+2]=n.b*L),Q[q]=p.x,Q[q+1]=p.y,Q[q+2]=p.z,J+=1;else if(m instanceof THREE.SpotLight)q=J*3,W.gammaInput?(t[q]=n.r*n.r*
rocket-3d/web/js/Three.js:L*L,t[q+1]=n.g*n.g*L*L,t[q+2]=n.b*n.b*L*L):(t[q]=n.r*L,t[q+1]=n.g*L,t[q+2]=n.b*L),n=1/p.length(),Q[q]=p.x*n,Q[q+1]=p.y*n,Q[q+2]=p.z*n,J+=1;else if(m instanceof THREE.PointLight)m=ea*3,W.gammaInput?(Z[m]=n.r*n.r*L*L,Z[m+1]=n.g*n.g*L*L,Z[m+2]=n.b*n.b*L*L):(Z[m]=n.r*L,Z[m+1]=n.g*L,Z[m+2]=n.b*L),w[m]=p.x,w[m+1]=p.y,w[m+2]=p.z,u[ea]=q,ea+=1;c=J*3;for(h=t.length;c<h;c++)t[c]=0;c=ea*3;for(h=Z.length;c<h;c++)Z[c]=0;r.point.length=ea;r.directional.length=J;r.ambient[0]=l;r.ambient[1]=k;r.ambient[2]=o;b=fa;
rocket-3d/web/js/Three.js:i.ambientLightColor.value=b.ambient;i.directionalLightColor.value=b.directional.colors;i.directionalLightDirection.value=b.directional.positions;i.pointLightColor.value=b.point.colors;i.pointLightPosition.value=b.point.positions;i.pointLightDistance.value=b.point.distances}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)i.opacity.value=d.opacity,W.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color,(i.map.texture=
rocket-3d/web/js/Three.js:d.map)&&i.offsetRepeat.value.set(d.map.offset.x,d.map.offset.y,d.map.repeat.x,d.map.repeat.y),i.lightMap.texture=d.lightMap,i.envMap.texture=d.envMap,i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,i.reflectivity.value=d.reflectivity,i.refractionRatio.value=d.refractionRatio,i.combine.value=d.combine,i.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping;if(d instanceof THREE.LineBasicMaterial)i.diffuse.value=d.color,i.opacity.value=d.opacity;
rocket-3d/web/js/Three.js:else if(d instanceof THREE.ParticleBasicMaterial)i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=O.height/2,i.map.texture=d.map;else if(d instanceof THREE.MeshPhongMaterial)i.shininess.value=d.shininess,W.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.specular.value.copyGammaToLinear(d.specular)):(i.ambient.value=d.ambient,i.specular.value=d.specular);else if(d instanceof THREE.MeshLambertMaterial)W.gammaInput?i.ambient.value.copyGammaToLinear(d.ambient):
rocket-3d/web/js/Three.js:i.ambient.value=d.ambient;else if(d instanceof THREE.MeshDepthMaterial)i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity;else if(d instanceof THREE.MeshNormalMaterial)i.opacity.value=d.opacity;if(g.receiveShadow&&!d._shadowPass&&i.shadowMatrix){for(b=0;b<xa.length;b++)i.shadowMatrix.value[b]=xa[b],i.shadowMap.texture[b]=W.shadowMap[b];i.shadowDarkness.value=W.shadowMapDarkness;i.shadowBias.value=W.shadowMapBias}b=d.uniformsList;i=0;for(c=b.length;i<c;i++)if(k=f.uniforms[b[i][1]])if(l=
rocket-3d/web/js/Three.js:b[i][0],o=l.type,h=l.value,o==="i")j.uniform1i(k,h);else if(o==="f")j.uniform1f(k,h);else if(o==="v2")j.uniform2f(k,h.x,h.y);else if(o==="v3")j.uniform3f(k,h.x,h.y,h.z);else if(o==="v4")j.uniform4f(k,h.x,h.y,h.z,h.w);else if(o==="c")j.uniform3f(k,h.r,h.g,h.b);else if(o==="fv1")j.uniform1fv(k,h);else if(o==="fv")j.uniform3fv(k,h);else if(o==="v3v"){if(!l._array)l._array=new Float32Array(3*h.length);o=0;for(p=h.length;o<p;o++)r=o*3,l._array[r]=h[o].x,l._array[r+1]=h[o].y,l._array[r+2]=h[o].z;j.uniform3fv(k,
rocket-3d/web/js/Three.js:l._array)}else if(o==="m4"){if(!l._array)l._array=new Float32Array(16);h.flattenToArray(l._array);j.uniformMatrix4fv(k,!1,l._array)}else if(o==="m4v"){if(!l._array)l._array=new Float32Array(16*h.length);o=0;for(p=h.length;o<p;o++)h[o].flattenToArrayOffset(l._array,o*16);j.uniformMatrix4fv(k,!1,l._array)}else if(o==="t"){if(j.uniform1i(k,h),k=l.texture)if(k.image instanceof Array&&k.image.length===6){if(l=k,l.image.length===6)if(l.needsUpdate){if(!l.image.__webglTextureCube)l.image.__webglTextureCube=
rocket-3d/web/js/Three.js:j.createTexture();j.activeTexture(j.TEXTURE0+h);j.bindTexture(j.TEXTURE_CUBE_MAP,l.image.__webglTextureCube);h=s(j.TEXTURE_CUBE_MAP,l,l.image[0]);for(k=0;k<6;k++)j.texImage2D(j.TEXTURE_CUBE_MAP_POSITIVE_X+k,0,j.RGBA,j.RGBA,j.UNSIGNED_BYTE,l.image[k]);h&&j.generateMipmap(j.TEXTURE_CUBE_MAP);l.needsUpdate=!1}else j.activeTexture(j.TEXTURE0+h),j.bindTexture(j.TEXTURE_CUBE_MAP,l.image.__webglTextureCube)}else k instanceof THREE.WebGLRenderTargetCube?(l=k,j.activeTexture(j.TEXTURE0+h),j.bindTexture(j.TEXTURE_CUBE_MAP,
rocket-3d/web/js/Three.js:l.__webglTexture)):E(k,h)}else if(o==="tv"){if(!l._array){l._array=[];o=0;for(p=l.texture.length;o<p;o++)l._array[o]=h+o}j.uniform1iv(k,l._array);o=0;for(p=l.texture.length;o<p;o++)(k=l.texture[o])&&E(k,l._array[o])}(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&e.cameraPosition!==null&&j.uniform3f(e.cameraPosition,a.position.x,a.position.y,a.position.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||
rocket-3d/web/js/Three.js:d.skinning)&&e.viewMatrix!==null&&j.uniformMatrix4fv(e.viewMatrix,!1,la);d.skinning&&(j.uniformMatrix4fv(e.cameraInverseMatrix,!1,la),j.uniformMatrix4fv(e.boneGlobalMatrices,!1,g.boneMatrices))}j.uniformMatrix4fv(e.modelViewMatrix,!1,g._modelViewMatrixArray);e.normalMatrix&&j.uniformMatrix3fv(e.normalMatrix,!1,g._normalMatrixArray);(d instanceof THREE.ShaderMaterial||d.envMap||d.skinning||g.receiveShadow)&&e.objectMatrix!==null&&j.uniformMatrix4fv(e.objectMatrix,!1,g._objectMatrixArray);return f}
rocket-3d/web/js/Three.js:function B(a,b,c){a._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);c&&THREE.Matrix4.makeInvert3x3(a._modelViewMatrix).transposeIntoArray(a._normalMatrixArray)}function F(a){if(ra!==a.doubleSided)a.doubleSided?j.disable(j.CULL_FACE):j.enable(j.CULL_FACE),ra=a.doubleSided;if(qa!==a.flipSided)a.flipSided?j.frontFace(j.CW):j.frontFace(j.CCW),qa=a.flipSided}function A(a){oa!==a&&(a?j.enable(j.DEPTH_TEST):j.disable(j.DEPTH_TEST),oa=a)}function x(a){pa!==a&&
rocket-3d/web/js/Three.js:(j.depthMask(a),pa=a)}function y(a,b,c){Da!==a&&(a?j.enable(j.POLYGON_OFFSET_FILL):j.disable(j.POLYGON_OFFSET_FILL),Da=a);if(a&&(za!==b||Aa!==c))j.polygonOffset(b,c),za=b,Aa=c}function v(a){if(a!==na){switch(a){case THREE.AdditiveBlending:j.blendEquation(j.FUNC_ADD);j.blendFunc(j.SRC_ALPHA,j.ONE);break;case THREE.SubtractiveBlending:j.blendEquation(j.FUNC_ADD);j.blendFunc(j.ZERO,j.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:j.blendEquation(j.FUNC_ADD);j.blendFunc(j.ZERO,j.SRC_COLOR);break;
rocket-3d/web/js/Three.js:default:j.blendEquationSeparate(j.FUNC_ADD,j.FUNC_ADD),j.blendFuncSeparate(j.SRC_ALPHA,j.ONE_MINUS_SRC_ALPHA,j.ONE,j.ONE_MINUS_SRC_ALPHA)}na=a}}function J(a,b){var c;a==="fragment"?c=j.createShader(j.FRAGMENT_SHADER):a==="vertex"&&(c=j.createShader(j.VERTEX_SHADER));j.shaderSource(c,b);j.compileShader(c);if(!j.getShaderParameter(c,j.COMPILE_STATUS))return console.error(j.getShaderInfoLog(c)),console.error(b),null;return c}function s(a,b,c){return(c.width&c.width-1)===0&&(c.height&c.height-1)===0?
rocket-3d/web/js/Three.js:(j.texParameteri(a,j.TEXTURE_WRAP_S,P(b.wrapS)),j.texParameteri(a,j.TEXTURE_WRAP_T,P(b.wrapT)),j.texParameteri(a,j.TEXTURE_MAG_FILTER,P(b.magFilter)),j.texParameteri(a,j.TEXTURE_MIN_FILTER,P(b.minFilter)),!0):(j.texParameteri(a,j.TEXTURE_WRAP_S,j.CLAMP_TO_EDGE),j.texParameteri(a,j.TEXTURE_WRAP_T,j.CLAMP_TO_EDGE),j.texParameteri(a,j.TEXTURE_MAG_FILTER,K(b.magFilter)),j.texParameteri(a,j.TEXTURE_MIN_FILTER,K(b.minFilter)),!1)}function E(a,b){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=!0,a.__webglTexture=
rocket-3d/web/js/Three.js:j.createTexture(),W.info.memory.textures++;j.activeTexture(j.TEXTURE0+b);j.bindTexture(j.TEXTURE_2D,a.__webglTexture);var c=s(j.TEXTURE_2D,a,a.image);a instanceof THREE.DataTexture?j.texImage2D(j.TEXTURE_2D,0,P(a.format),a.image.width,a.image.height,0,P(a.format),j.UNSIGNED_BYTE,a.image.data):j.texImage2D(j.TEXTURE_2D,0,j.RGBA,j.RGBA,j.UNSIGNED_BYTE,a.image);c&&j.generateMipmap(j.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdated)a.onUpdated()}else j.activeTexture(j.TEXTURE0+b),j.bindTexture(j.TEXTURE_2D,
rocket-3d/web/js/Three.js:a.__webglTexture)}function R(a,b){j.bindRenderbuffer(j.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(j.renderbufferStorage(j.RENDERBUFFER,j.DEPTH_COMPONENT16,b.width,b.height),j.framebufferRenderbuffer(j.FRAMEBUFFER,j.DEPTH_ATTACHMENT,j.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(j.renderbufferStorage(j.RENDERBUFFER,j.DEPTH_STENCIL,b.width,b.height),j.framebufferRenderbuffer(j.FRAMEBUFFER,j.DEPTH_STENCIL_ATTACHMENT,j.RENDERBUFFER,a)):j.renderbufferStorage(j.RENDERBUFFER,j.RGBA4,b.width,b.height)}
rocket-3d/web/js/Three.js:function U(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=!0;if(a.stencilBuffer===void 0)a.stencilBuffer=!0;a.__webglTexture=j.createTexture();if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];j.bindTexture(j.TEXTURE_CUBE_MAP,a.__webglTexture);s(j.TEXTURE_CUBE_MAP,a,a);for(var c=0;c<6;c++){a.__webglFramebuffer[c]=j.createFramebuffer();a.__webglRenderbuffer[c]=j.createRenderbuffer();j.texImage2D(j.TEXTURE_CUBE_MAP_POSITIVE_X+
rocket-3d/web/js/Three.js:c,0,P(a.format),a.width,a.height,0,P(a.format),P(a.type),null);var d=a,g=j.TEXTURE_CUBE_MAP_POSITIVE_X+c;j.bindFramebuffer(j.FRAMEBUFFER,a.__webglFramebuffer[c]);j.framebufferTexture2D(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,g,d.__webglTexture,0);R(a.__webglRenderbuffer[c],a)}}else a.__webglFramebuffer=j.createFramebuffer(),a.__webglRenderbuffer=j.createRenderbuffer(),j.bindTexture(j.TEXTURE_2D,a.__webglTexture),s(j.TEXTURE_2D,a,a),j.texImage2D(j.TEXTURE_2D,0,P(a.format),a.width,a.height,0,P(a.format),
rocket-3d/web/js/Three.js:P(a.type),null),c=j.TEXTURE_2D,j.bindFramebuffer(j.FRAMEBUFFER,a.__webglFramebuffer),j.framebufferTexture2D(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,c,a.__webglTexture,0),R(a.__webglRenderbuffer,a);b?j.bindTexture(j.TEXTURE_CUBE_MAP,null):j.bindTexture(j.TEXTURE_2D,null);j.bindRenderbuffer(j.RENDERBUFFER,null);j.bindFramebuffer(j.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,g=d=0):(b=null,c=Q,a=ea,d=L,g=Z);b!==da&&(j.bindFramebuffer(j.FRAMEBUFFER,
rocket-3d/web/js/Three.js:b),j.viewport(d,g,c,a),da=b)}function K(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return j.NEAREST;default:return j.LINEAR}}function P(a){switch(a){case THREE.RepeatWrapping:return j.REPEAT;case THREE.ClampToEdgeWrapping:return j.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return j.MIRRORED_REPEAT;case THREE.NearestFilter:return j.NEAREST;case THREE.NearestMipMapNearestFilter:return j.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return j.NEAREST_MIPMAP_LINEAR;
rocket-3d/web/js/Three.js:case THREE.LinearFilter:return j.LINEAR;case THREE.LinearMipMapNearestFilter:return j.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return j.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return j.BYTE;case THREE.UnsignedByteType:return j.UNSIGNED_BYTE;case THREE.ShortType:return j.SHORT;case THREE.UnsignedShortType:return j.UNSIGNED_SHORT;case THREE.IntType:return j.INT;case THREE.UnsignedShortType:return j.UNSIGNED_INT;case THREE.FloatType:return j.FLOAT;case THREE.AlphaFormat:return j.ALPHA;
rocket-3d/web/js/Three.js:case THREE.RGBFormat:return j.RGB;case THREE.RGBAFormat:return j.RGBA;case THREE.LuminanceFormat:return j.LUMINANCE;case THREE.LuminanceAlphaFormat:return j.LUMINANCE_ALPHA}return 0}var a=a||{},O=a.canvas!==void 0?a.canvas:document.createElement("canvas"),aa=a.precision!==void 0?a.precision:"highp",H=a.antialias!==void 0?a.antialias:!1,G=a.stencil!==void 0?a.stencil:!0,I=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:!1,M=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),
rocket-3d/web/js/Three.js:S=a.clearAlpha!==void 0?a.clearAlpha:0,ba=a.maxLights!==void 0?a.maxLights:4;this.domElement=O;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapBias=0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowMap=
rocket-3d/web/js/Three.js:[];this.shadowMapEnabled=!1;this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.maxMorphTargets=8;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0}};var W=this,j,X=[],V=null,da=null,ga=-1,$=null,ua=0,ra=null,qa=null,na=null,oa=null,pa=null,Da=null,za=null,Aa=null,Ba=null,L=0,Z=0,Q=0,ea=0,ha=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],N=new THREE.Matrix4,ca=new Float32Array(16),la=new Float32Array(16),
rocket-3d/web/js/Three.js:ma=new THREE.Vector4,fa={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},Y,xa=[],va,ta,T={},wa=!1;j=function(){var a;try{if(!(a=O.getContext("experimental-webgl",{antialias:H,stencil:G,preserveDrawingBuffer:I})))throw"Error creating WebGL context.";console.log(navigator.userAgent+" | "+a.getParameter(a.VERSION)+" | "+a.getParameter(a.VENDOR)+" | "+a.getParameter(a.RENDERER)+" | "+a.getParameter(a.SHADING_LANGUAGE_VERSION))}catch(b){console.error(b)}return a}();
rocket-3d/web/js/Three.js:j.clearColor(0,0,0,1);j.clearDepth(1);j.clearStencil(0);j.enable(j.DEPTH_TEST);j.depthFunc(j.LEQUAL);j.frontFace(j.CCW);j.cullFace(j.BACK);j.enable(j.CULL_FACE);j.enable(j.BLEND);j.blendEquation(j.FUNC_ADD);j.blendFunc(j.SRC_ALPHA,j.ONE_MINUS_SRC_ALPHA);j.clearColor(M.r,M.g,M.b,S);(function(){T.vertices=new Float32Array(16);T.faces=new Uint16Array(6);var a=0;T.vertices[a++]=-1;T.vertices[a++]=-1;T.vertices[a++]=0;T.vertices[a++]=1;T.vertices[a++]=1;T.vertices[a++]=-1;T.vertices[a++]=1;T.vertices[a++]=
rocket-3d/web/js/Three.js:1;T.vertices[a++]=1;T.vertices[a++]=1;T.vertices[a++]=1;T.vertices[a++]=0;T.vertices[a++]=-1;T.vertices[a++]=1;T.vertices[a++]=0;a=T.vertices[a++]=0;T.faces[a++]=0;T.faces[a++]=1;T.faces[a++]=2;T.faces[a++]=0;T.faces[a++]=2;T.faces[a++]=3;T.vertexBuffer=j.createBuffer();T.elementBuffer=j.createBuffer();j.bindBuffer(j.ARRAY_BUFFER,T.vertexBuffer);j.bufferData(j.ARRAY_BUFFER,T.vertices,j.STATIC_DRAW);j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,T.elementBuffer);j.bufferData(j.ELEMENT_ARRAY_BUFFER,T.faces,j.STATIC_DRAW);
rocket-3d/web/js/Three.js:T.program=j.createProgram();j.attachShader(T.program,J("fragment",THREE.ShaderLib.sprite.fragmentShader));j.attachShader(T.program,J("vertex",THREE.ShaderLib.sprite.vertexShader));j.linkProgram(T.program);T.attributes={};T.uniforms={};T.attributes.position=j.getAttribLocation(T.program,"position");T.attributes.uv=j.getAttribLocation(T.program,"uv");T.uniforms.uvOffset=j.getUniformLocation(T.program,"uvOffset");T.uniforms.uvScale=j.getUniformLocation(T.program,"uvScale");T.uniforms.rotation=j.getUniformLocation(T.program,
rocket-3d/web/js/Three.js:"rotation");T.uniforms.scale=j.getUniformLocation(T.program,"scale");T.uniforms.alignment=j.getUniformLocation(T.program,"alignment");T.uniforms.color=j.getUniformLocation(T.program,"color");T.uniforms.map=j.getUniformLocation(T.program,"map");T.uniforms.opacity=j.getUniformLocation(T.program,"opacity");T.uniforms.useScreenCoordinates=j.getUniformLocation(T.program,"useScreenCoordinates");T.uniforms.affectedByDistance=j.getUniformLocation(T.program,"affectedByDistance");T.uniforms.screenPosition=
rocket-3d/web/js/Three.js:j.getUniformLocation(T.program,"screenPosition");T.uniforms.modelViewMatrix=j.getUniformLocation(T.program,"modelViewMatrix");T.uniforms.projectionMatrix=j.getUniformLocation(T.program,"projectionMatrix")})();(function(){var a=THREE.ShaderLib.depthRGBA,b=THREE.UniformsUtils.clone(a.uniforms);va=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:b});ta=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:b,morphTargets:!0});
rocket-3d/web/js/Three.js:va._shadowPass=!0;ta._shadowPass=!0})();this.context=j;var ya=j.getParameter(j.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;this.getContext=function(){return j};this.supportsVertexTextures=function(){return ya};this.setSize=function(a,b){O.width=a;O.height=b;this.setViewport(0,0,O.width,O.height)};this.setViewport=function(a,b,c,d){L=a;Z=b;Q=c;ea=d;j.viewport(L,Z,Q,ea)};this.setScissor=function(a,b,c,d){j.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?j.enable(j.SCISSOR_TEST):j.disable(j.SCISSOR_TEST)};
rocket-3d/web/js/Three.js:this.setClearColorHex=function(a,b){M.setHex(a);S=b;j.clearColor(M.r,M.g,M.b,S)};this.setClearColor=function(a,b){M.copy(a);S=b;j.clearColor(M.r,M.g,M.b,S)};this.getClearColor=function(){return M};this.getClearAlpha=function(){return S};this.clear=function(a,b,c){var d=0;if(a===void 0||a)d|=j.COLOR_BUFFER_BIT;if(b===void 0||b)d|=j.DEPTH_BUFFER_BIT;if(c===void 0||c)d|=j.STENCIL_BUFFER_BIT;j.clear(d)};this.clearTarget=function(a,b,c,d){U(a);this.clear(b,c,d)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=
rocket-3d/web/js/Three.js:!1,delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];j.deleteBuffer(c.__webglVertexBuffer);j.deleteBuffer(c.__webglNormalBuffer);j.deleteBuffer(c.__webglTangentBuffer);j.deleteBuffer(c.__webglColorBuffer);j.deleteBuffer(c.__webglUVBuffer);j.deleteBuffer(c.__webglUV2Buffer);j.deleteBuffer(c.__webglSkinVertexABuffer);j.deleteBuffer(c.__webglSkinVertexBBuffer);
rocket-3d/web/js/Three.js:j.deleteBuffer(c.__webglSkinIndicesBuffer);j.deleteBuffer(c.__webglSkinWeightsBuffer);j.deleteBuffer(c.__webglFaceBuffer);j.deleteBuffer(c.__webglLineBuffer);if(c.numMorphTargets)for(var d=0,g=c.numMorphTargets;d<g;d++)j.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)j.deleteBuffer(c.__webglCustomAttributesList[d].buffer);W.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,j.deleteBuffer(a.__webglVertexBuffer),
rocket-3d/web/js/Three.js:j.deleteBuffer(a.__webglColorBuffer),W.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,j.deleteBuffer(a.__webglVertexBuffer),j.deleteBuffer(a.__webglColorBuffer),W.info.memory.geometries--;else if(a instanceof THREE.ParticleSystem)a=a.geometry,j.deleteBuffer(a.__webglVertexBuffer),j.deleteBuffer(a.__webglColorBuffer),W.info.memory.geometries--};this.deallocateTexture=function(a){if(a.__webglInit)a.__webglInit=!1,j.deleteTexture(a.__webglTexture),W.info.memory.textures--};this.updateShadowMap=
rocket-3d/web/js/Three.js:function(a,b){p(a,b)};this.render=function(a,b,c,d){var g,f,e,h,i=a.lights,n=a.fog;ga=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);b.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(b));this.autoUpdateScene&&a.updateMatrixWorld();this.shadowMapEnabled&&this.shadowMapAutoUpdate&&p(a,b);W.info.render.calls=0;W.info.render.vertices=0;W.info.render.faces=0;b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(la);
rocket-3d/web/js/Three.js:b.projectionMatrix.flattenToArray(ca);N.multiply(b.projectionMatrix,b.matrixWorldInverse);l(N);U(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(g=h.length;d<g;d++)if(f=h[d],e=f.object,f.render=!1,e.visible&&(!(e instanceof THREE.Mesh)||!e.frustumCulled||k(e))){e.matrixWorld.flattenToArray(e._objectMatrixArray);B(e,b,!0);var L=f,q=L.object,t=L.buffer,Z=void 0,Z=Z=void 0,Z=q.material;if(Z instanceof THREE.MeshFaceMaterial){if(Z=
rocket-3d/web/js/Three.js:t.materialIndex,Z>=0)Z=q.geometry.materials[Z],Z.transparent?(L.transparent=Z,L.opaque=null):(L.opaque=Z,L.transparent=null)}else if(Z)Z.transparent?(L.transparent=Z,L.opaque=null):(L.opaque=Z,L.transparent=null);f.render=!0;if(this.sortObjects)e.renderDepth?f.z=e.renderDepth:(ma.copy(e.position),N.multiplyVector3(ma),f.z=ma.z)}this.sortObjects&&h.sort(o);h=a.__webglObjectsImmediate;d=0;for(g=h.length;d<g;d++)if(f=h[d],e=f.object,e.visible)e.matrixAutoUpdate&&e.matrixWorld.flattenToArray(e._objectMatrixArray),
rocket-3d/web/js/Three.js:B(e,b,!0),e=f.object.material,e.transparent?(f.transparent=e,f.opaque=null):(f.opaque=e,f.transparent=null);a.overrideMaterial?(v(a.overrideMaterial.blending),A(a.overrideMaterial.depthTest),x(a.overrideMaterial.depthWrite),y(a.overrideMaterial.polygonOffset,a.overrideMaterial.polygonOffsetFactor,a.overrideMaterial.polygonOffsetUnits),m(a.__webglObjects,!1,"",b,i,n,!0,a.overrideMaterial),r(a.__webglObjectsImmediate,"",b,i,n,!1,a.overrideMaterial)):(v(THREE.NormalBlending),m(a.__webglObjects,!0,"opaque",
rocket-3d/web/js/Three.js:b,i,n,!1),r(a.__webglObjectsImmediate,"opaque",b,i,n,!1),m(a.__webglObjects,!1,"transparent",b,i,n,!0),r(a.__webglObjectsImmediate,"transparent",b,i,n,!0));if(a.__webglSprites.length){e=T.attributes;i=T.uniforms;n=ea/Q;d=[];g=Q*0.5;h=ea*0.5;f=!0;j.useProgram(T.program);V=T.program;$=oa=na=-1;wa||(j.enableVertexAttribArray(T.attributes.position),j.enableVertexAttribArray(T.attributes.uv),wa=!0);j.disable(j.CULL_FACE);j.enable(j.BLEND);j.depthMask(!0);j.bindBuffer(j.ARRAY_BUFFER,T.vertexBuffer);j.vertexAttribPointer(e.position,
rocket-3d/web/js/Three.js:2,j.FLOAT,!1,16,0);j.vertexAttribPointer(e.uv,2,j.FLOAT,!1,16,8);j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,T.elementBuffer);j.uniformMatrix4fv(i.projectionMatrix,!1,ca);j.activeTexture(j.TEXTURE0);j.uniform1i(i.map,0);e=0;for(L=a.__webglSprites.length;e<L;e++)if(q=a.__webglSprites[e],q.visible&&q.opacity!==0)q.useScreenCoordinates?q.z=-q.position.z:(q._modelViewMatrix.multiplyToArray(b.matrixWorldInverse,q.matrixWorld,q._modelViewMatrixArray),q.z=-q._modelViewMatrix.n34);a.__webglSprites.sort(o);e=0;for(L=
rocket-3d/web/js/Three.js:a.__webglSprites.length;e<L;e++)q=a.__webglSprites[e],q.visible&&q.opacity!==0&&q.map&&q.map.image&&q.map.image.width&&(q.useScreenCoordinates?(j.uniform1i(i.useScreenCoordinates,1),j.uniform3f(i.screenPosition,(q.position.x-g)/g,(h-q.position.y)/h,Math.max(0,Math.min(1,q.position.z)))):(j.uniform1i(i.useScreenCoordinates,0),j.uniform1i(i.affectedByDistance,q.affectedByDistance?1:0),j.uniformMatrix4fv(i.modelViewMatrix,!1,q._modelViewMatrixArray)),b=q.map.image.width/(q.scaleByViewport?ea:1),d[0]=
rocket-3d/web/js/Three.js:b*n*q.scale.x,d[1]=b*q.scale.y,j.uniform2f(i.uvScale,q.uvScale.x,q.uvScale.y),j.uniform2f(i.uvOffset,q.uvOffset.x,q.uvOffset.y),j.uniform2f(i.alignment,q.alignment.x,q.alignment.y),j.uniform1f(i.opacity,q.opacity),j.uniform3f(i.color,q.color.r,q.color.g,q.color.b),j.uniform1f(i.rotation,q.rotation),j.uniform2fv(i.scale,d),q.mergeWith3D&&!f?(j.enable(j.DEPTH_TEST),f=!0):!q.mergeWith3D&&f&&(j.disable(j.DEPTH_TEST),f=!1),v(q.blending),E(q.map,0),j.drawElements(j.TRIANGLES,6,j.UNSIGNED_SHORT,0));j.enable(j.CULL_FACE);
rocket-3d/web/js/Three.js:j.enable(j.DEPTH_TEST);j.depthMask(pa)}c&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(j.bindTexture(j.TEXTURE_CUBE_MAP,c.__webglTexture),j.generateMipmap(j.TEXTURE_CUBE_MAP),j.bindTexture(j.TEXTURE_CUBE_MAP,null)):(j.bindTexture(j.TEXTURE_2D,c.__webglTexture),j.generateMipmap(j.TEXTURE_2D),j.bindTexture(j.TEXTURE_2D,null)))};this.initWebGLObjects=function(a){if(!a.__webglObjects)a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=
rocket-3d/web/js/Three.js:[];for(;a.__objectsAdded.length;){var h=a.__objectsAdded[0],i=a,m=void 0,l=void 0,k=void 0;if(!h.__webglInit)if(h.__webglInit=!0,h._modelViewMatrix=new THREE.Matrix4,h._normalMatrixArray=new Float32Array(9),h._modelViewMatrixArray=new Float32Array(16),h._objectMatrixArray=new Float32Array(16),h.matrixWorld.flattenToArray(h._objectMatrixArray),h instanceof THREE.Mesh){l=h.geometry;if(l.geometryGroups===void 0){var k=l,o=void 0,p=void 0,L=void 0,r=void 0,Q=void 0,Z=void 0,s=void 0,u={},J=k.morphTargets.length;
rocket-3d/web/js/Three.js:k.geometryGroups={};o=0;for(p=k.faces.length;o<p;o++)L=k.faces[o],r=L.materialIndex,Z=r!==void 0?r:-1,u[Z]===void 0&&(u[Z]={hash:Z,counter:0}),s=u[Z].hash+"_"+u[Z].counter,k.geometryGroups[s]===void 0&&(k.geometryGroups[s]={faces3:[],faces4:[],materialIndex:r,vertices:0,numMorphTargets:J}),Q=L instanceof THREE.Face3?3:4,k.geometryGroups[s].vertices+Q>65535&&(u[Z].counter+=1,s=u[Z].hash+"_"+u[Z].counter,k.geometryGroups[s]===void 0&&(k.geometryGroups[s]={faces3:[],faces4:[],materialIndex:r,vertices:0,
rocket-3d/web/js/Three.js:numMorphTargets:J})),L instanceof THREE.Face3?k.geometryGroups[s].faces3.push(o):k.geometryGroups[s].faces4.push(o),k.geometryGroups[s].vertices+=Q;k.geometryGroupsList=[];o=void 0;for(o in k.geometryGroups)k.geometryGroups[o].id=ua++,k.geometryGroupsList.push(k.geometryGroups[o])}for(m in l.geometryGroups)if(k=l.geometryGroups[m],!k.__webglVertexBuffer){o=k;o.__webglVertexBuffer=j.createBuffer();o.__webglNormalBuffer=j.createBuffer();o.__webglTangentBuffer=j.createBuffer();o.__webglColorBuffer=j.createBuffer();
rocket-3d/web/js/Three.js:o.__webglUVBuffer=j.createBuffer();o.__webglUV2Buffer=j.createBuffer();o.__webglSkinVertexABuffer=j.createBuffer();o.__webglSkinVertexBBuffer=j.createBuffer();o.__webglSkinIndicesBuffer=j.createBuffer();o.__webglSkinWeightsBuffer=j.createBuffer();o.__webglFaceBuffer=j.createBuffer();o.__webglLineBuffer=j.createBuffer();if(o.numMorphTargets){L=p=void 0;o.__webglMorphTargetsBuffers=[];p=0;for(L=o.numMorphTargets;p<L;p++)o.__webglMorphTargetsBuffers.push(j.createBuffer())}W.info.memory.geometries++;
rocket-3d/web/js/Three.js:r=h;Q=r.geometry;p=k.faces3;Z=k.faces4;o=p.length*3+Z.length*4;L=p.length*1+Z.length*2;Z=p.length*3+Z.length*4;p=b(r,k);s=f(p);u=d(p);J=g(p);k.__vertexArray=new Float32Array(o*3);if(u)k.__normalArray=new Float32Array(o*3);if(Q.hasTangents)k.__tangentArray=new Float32Array(o*4);if(J)k.__colorArray=new Float32Array(o*3);if(s){if(Q.faceUvs.length>0||Q.faceVertexUvs.length>0)k.__uvArray=new Float32Array(o*2);if(Q.faceUvs.length>1||Q.faceVertexUvs.length>1)k.__uv2Array=new Float32Array(o*2)}if(r.geometry.skinWeights.length&&
rocket-3d/web/js/Three.js:r.geometry.skinIndices.length)k.__skinVertexAArray=new Float32Array(o*4),k.__skinVertexBArray=new Float32Array(o*4),k.__skinIndexArray=new Float32Array(o*4),k.__skinWeightArray=new Float32Array(o*4);k.__faceArray=new Uint16Array(L*3);k.__lineArray=new Uint16Array(Z*2);if(k.numMorphTargets){k.__morphTargetsArrays=[];r=0;for(Q=k.numMorphTargets;r<Q;r++)k.__morphTargetsArrays.push(new Float32Array(o*3))}k.__webglFaceCount=L*3;k.__webglLineCount=Z*2;if(p.attributes){if(k.__webglCustomAttributesList===
rocket-3d/web/js/Three.js:void 0)k.__webglCustomAttributesList=[];L=void 0;for(L in p.attributes){var r=p.attributes[L],Q={},ea;for(ea in r)Q[ea]=r[ea];if(!Q.__webglInitialized||Q.createUniqueBuffers)Q.__webglInitialized=!0,Z=1,Q.type==="v2"?Z=2:Q.type==="v3"?Z=3:Q.type==="v4"?Z=4:Q.type==="c"&&(Z=3),Q.size=Z,Q.array=new Float32Array(o*Z),Q.buffer=j.createBuffer(),Q.buffer.belongsToAttribute=L,r.needsUpdate=!0,Q.__original=r;k.__webglCustomAttributesList.push(Q)}}k.__inittedArrays=!0;l.__dirtyVertices=!0;l.__dirtyMorphTargets=
rocket-3d/web/js/Three.js:!0;l.__dirtyElements=!0;l.__dirtyUvs=!0;l.__dirtyNormals=!0;l.__dirtyTangents=!0;l.__dirtyColors=!0}}else if(h instanceof THREE.Ribbon){if(l=h.geometry,!l.__webglVertexBuffer)k=l,k.__webglVertexBuffer=j.createBuffer(),k.__webglColorBuffer=j.createBuffer(),W.info.memory.geometries++,k=l,o=k.vertices.length,k.__vertexArray=new Float32Array(o*3),k.__colorArray=new Float32Array(o*3),k.__webglVertexCount=o,l.__dirtyVertices=!0,l.__dirtyColors=!0}else if(h instanceof THREE.Line){if(l=h.geometry,!l.__webglVertexBuffer)k=
rocket-3d/web/js/Three.js:l,k.__webglVertexBuffer=j.createBuffer(),k.__webglColorBuffer=j.createBuffer(),W.info.memory.geometries++,k=l,o=h,p=k.vertices.length,k.__vertexArray=new Float32Array(p*3),k.__colorArray=new Float32Array(p*3),k.__webglLineCount=p,c(k,o),l.__dirtyVertices=!0,l.__dirtyColors=!0}else if(h instanceof THREE.ParticleSystem&&(l=h.geometry,!l.__webglVertexBuffer))k=l,k.__webglVertexBuffer=j.createBuffer(),k.__webglColorBuffer=j.createBuffer(),W.info.geometries++,k=l,o=h,p=k.vertices.length,k.__vertexArray=
rocket-3d/web/js/Three.js:new Float32Array(p*3),k.__colorArray=new Float32Array(p*3),k.__sortArray=[],k.__webglParticleCount=p,c(k,o),l.__dirtyVertices=!0,l.__dirtyColors=!0;if(!h.__webglActive){if(h instanceof THREE.Mesh)for(m in l=h.geometry,l.geometryGroups)k=l.geometryGroups[m],n(i.__webglObjects,k,h);else h instanceof THREE.Ribbon||h instanceof THREE.Line||h instanceof THREE.ParticleSystem?(l=h.geometry,n(i.__webglObjects,l,h)):THREE.MarchingCubes!==void 0&&h instanceof THREE.MarchingCubes||h.immediateRenderCallback?
rocket-3d/web/js/Three.js:i.__webglObjectsImmediate.push({object:h,opaque:null,transparent:null}):h instanceof THREE.Sprite&&i.__webglSprites.push(h);h.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){h=a.__objectsRemoved[0];i=a;if(h instanceof THREE.Mesh||h instanceof THREE.ParticleSystem||h instanceof THREE.Ribbon||h instanceof THREE.Line)w(i.__webglObjects,h);else if(h instanceof THREE.Sprite){i=i.__webglSprites;m=h;for(l=i.length-1;l>=0;l--)i[l]===m&&i.splice(l,1)}else(h instanceof THREE.MarchingCubes||
rocket-3d/web/js/Three.js:h.immediateRenderCallback)&&w(i.__webglObjectsImmediate,h);h.__webglActive=!1;a.__objectsRemoved.splice(0,1)}h=0;for(i=a.__webglObjects.length;h<i;h++)if(ea=a.__webglObjects[h].object,m=ea.geometry,l=L=p=void 0,ea instanceof THREE.Mesh){k=0;for(o=m.geometryGroupsList.length;k<o;k++)if(p=m.geometryGroupsList[k],l=b(ea,p),L=l.attributes&&q(l),m.__dirtyVertices||m.__dirtyMorphTargets||m.__dirtyElements||m.__dirtyUvs||m.__dirtyNormals||m.__dirtyColors||m.__dirtyTangents||L){var E=ea,L=j.DYNAMIC_DRAW,
rocket-3d/web/js/Three.js:r=!m.dynamic,s=l;if(p.__inittedArrays){var Q=d(s),Z=g(s),B=f(s),R=Q===THREE.SmoothShading,M=u=s=void 0,D=void 0,G=void 0,I=void 0,v=void 0,A=void 0,ha=void 0,F=M=void 0,y=void 0,x=void 0,N=void 0,H=D=void 0,P=void 0,S=void 0,ca=D=ha=void 0,U=void 0,X=N=x=y=v=void 0,K=D=N=x=y=X=N=x=y=X=N=x=y=void 0,O=void 0,la=I=void 0,T=void 0,V=void 0,ga=void 0,aa=void 0,ba=F=V=O=0,da=0,ma=K=M=0,Y=v=H=0,C=0,fa=void 0,Y=p.__vertexArray,T=p.__uvArray,C=p.__uv2Array,la=p.__normalArray,G=p.__tangentArray,P=p.__colorArray,
rocket-3d/web/js/Three.js:ca=p.__skinVertexAArray,U=p.__skinVertexBArray,A=p.__skinIndexArray,$=p.__skinWeightArray,X=p.__morphTargetsArrays,J=p.__webglCustomAttributesList,z=void 0,z=p.__faceArray,fa=p.__lineArray,S=E.geometry,xa=S.__dirtyElements,ta=S.__dirtyUvs,I=S.__dirtyNormals,ha=S.__dirtyTangents,ra=S.__dirtyColors,ga=S.__dirtyMorphTargets,aa=S.vertices,E=p.faces3,ja=p.faces4,ka=S.faces,qa=S.faceVertexUvs[0],pa=S.faceVertexUvs[1],va=S.skinVerticesA,wa=S.skinVerticesB,oa=S.skinIndices,na=S.skinWeights,ya=S.morphTargets;
rocket-3d/web/js/Three.js:if(S.__dirtyVertices){s=0;for(u=E.length;s<u;s++)D=ka[E[s]],y=aa[D.a].position,x=aa[D.b].position,N=aa[D.c].position,Y[V]=y.x,Y[V+1]=y.y,Y[V+2]=y.z,Y[V+3]=x.x,Y[V+4]=x.y,Y[V+5]=x.z,Y[V+6]=N.x,Y[V+7]=N.y,Y[V+8]=N.z,V+=9;s=0;for(u=ja.length;s<u;s++)D=ka[ja[s]],y=aa[D.a].position,x=aa[D.b].position,N=aa[D.c].position,D=aa[D.d].position,Y[V]=y.x,Y[V+1]=y.y,Y[V+2]=y.z,Y[V+3]=x.x,Y[V+4]=x.y,Y[V+5]=x.z,Y[V+6]=N.x,Y[V+7]=N.y,Y[V+8]=N.z,Y[V+9]=D.x,Y[V+10]=D.y,Y[V+11]=D.z,V+=12;j.bindBuffer(j.ARRAY_BUFFER,
rocket-3d/web/js/Three.js:p.__webglVertexBuffer);j.bufferData(j.ARRAY_BUFFER,Y,L)}if(ga){V=0;for(ga=ya.length;V<ga;V++){s=Y=0;for(u=E.length;s<u;s++)D=ka[E[s]],y=ya[V].vertices[D.a].position,x=ya[V].vertices[D.b].position,N=ya[V].vertices[D.c].position,aa=X[V],aa[Y]=y.x,aa[Y+1]=y.y,aa[Y+2]=y.z,aa[Y+3]=x.x,aa[Y+4]=x.y,aa[Y+5]=x.z,aa[Y+6]=N.x,aa[Y+7]=N.y,aa[Y+8]=N.z,Y+=9;s=0;for(u=ja.length;s<u;s++)D=ka[ja[s]],y=ya[V].vertices[D.a].position,x=ya[V].vertices[D.b].position,N=ya[V].vertices[D.c].position,D=ya[V].vertices[D.d].position,
rocket-3d/web/js/Three.js:aa=X[V],aa[Y]=y.x,aa[Y+1]=y.y,aa[Y+2]=y.z,aa[Y+3]=x.x,aa[Y+4]=x.y,aa[Y+5]=x.z,aa[Y+6]=N.x,aa[Y+7]=N.y,aa[Y+8]=N.z,aa[Y+9]=D.x,aa[Y+10]=D.y,aa[Y+11]=D.z,Y+=12;j.bindBuffer(j.ARRAY_BUFFER,p.__webglMorphTargetsBuffers[V]);j.bufferData(j.ARRAY_BUFFER,X[V],L)}}if(na.length){s=0;for(u=E.length;s<u;s++)D=ka[E[s]],y=na[D.a],x=na[D.b],N=na[D.c],$[v]=y.x,$[v+1]=y.y,$[v+2]=y.z,$[v+3]=y.w,$[v+4]=x.x,$[v+5]=x.y,$[v+6]=x.z,$[v+7]=x.w,$[v+8]=N.x,$[v+9]=N.y,$[v+10]=N.z,$[v+11]=N.w,y=oa[D.a],x=oa[D.b],N=oa[D.c],A[v]=
rocket-3d/web/js/Three.js:y.x,A[v+1]=y.y,A[v+2]=y.z,A[v+3]=y.w,A[v+4]=x.x,A[v+5]=x.y,A[v+6]=x.z,A[v+7]=x.w,A[v+8]=N.x,A[v+9]=N.y,A[v+10]=N.z,A[v+11]=N.w,y=va[D.a],x=va[D.b],N=va[D.c],ca[v]=y.x,ca[v+1]=y.y,ca[v+2]=y.z,ca[v+3]=1,ca[v+4]=x.x,ca[v+5]=x.y,ca[v+6]=x.z,ca[v+7]=1,ca[v+8]=N.x,ca[v+9]=N.y,ca[v+10]=N.z,ca[v+11]=1,y=wa[D.a],x=wa[D.b],N=wa[D.c],U[v]=y.x,U[v+1]=y.y,U[v+2]=y.z,U[v+3]=1,U[v+4]=x.x,U[v+5]=x.y,U[v+6]=x.z,U[v+7]=1,U[v+8]=N.x,U[v+9]=N.y,U[v+10]=N.z,U[v+11]=1,v+=12;s=0;for(u=ja.length;s<u;s++)D=ka[ja[s]],y=na[D.a],
rocket-3d/web/js/Three.js:x=na[D.b],N=na[D.c],X=na[D.d],$[v]=y.x,$[v+1]=y.y,$[v+2]=y.z,$[v+3]=y.w,$[v+4]=x.x,$[v+5]=x.y,$[v+6]=x.z,$[v+7]=x.w,$[v+8]=N.x,$[v+9]=N.y,$[v+10]=N.z,$[v+11]=N.w,$[v+12]=X.x,$[v+13]=X.y,$[v+14]=X.z,$[v+15]=X.w,y=oa[D.a],x=oa[D.b],N=oa[D.c],X=oa[D.d],A[v]=y.x,A[v+1]=y.y,A[v+2]=y.z,A[v+3]=y.w,A[v+4]=x.x,A[v+5]=x.y,A[v+6]=x.z,A[v+7]=x.w,A[v+8]=N.x,A[v+9]=N.y,A[v+10]=N.z,A[v+11]=N.w,A[v+12]=X.x,A[v+13]=X.y,A[v+14]=X.z,A[v+15]=X.w,y=va[D.a],x=va[D.b],N=va[D.c],X=va[D.d],ca[v]=y.x,ca[v+1]=y.y,ca[v+2]=y.z,
rocket-3d/web/js/Three.js:ca[v+3]=1,ca[v+4]=x.x,ca[v+5]=x.y,ca[v+6]=x.z,ca[v+7]=1,ca[v+8]=N.x,ca[v+9]=N.y,ca[v+10]=N.z,ca[v+11]=1,ca[v+12]=X.x,ca[v+13]=X.y,ca[v+14]=X.z,ca[v+15]=1,y=wa[D.a],x=wa[D.b],N=wa[D.c],D=wa[D.d],U[v]=y.x,U[v+1]=y.y,U[v+2]=y.z,U[v+3]=1,U[v+4]=x.x,U[v+5]=x.y,U[v+6]=x.z,U[v+7]=1,U[v+8]=N.x,U[v+9]=N.y,U[v+10]=N.z,U[v+11]=1,U[v+12]=D.x,U[v+13]=D.y,U[v+14]=D.z,U[v+15]=1,v+=16;v>0&&(j.bindBuffer(j.ARRAY_BUFFER,p.__webglSkinVertexABuffer),j.bufferData(j.ARRAY_BUFFER,ca,L),j.bindBuffer(j.ARRAY_BUFFER,p.__webglSkinVertexBBuffer),
rocket-3d/web/js/Three.js:j.bufferData(j.ARRAY_BUFFER,U,L),j.bindBuffer(j.ARRAY_BUFFER,p.__webglSkinIndicesBuffer),j.bufferData(j.ARRAY_BUFFER,A,L),j.bindBuffer(j.ARRAY_BUFFER,p.__webglSkinWeightsBuffer),j.bufferData(j.ARRAY_BUFFER,$,L))}if(ra&&Z){s=0;for(u=E.length;s<u;s++)D=ka[E[s]],v=D.vertexColors,A=D.color,v.length===3&&Z===THREE.VertexColors?(D=v[0],ca=v[1],U=v[2]):U=ca=D=A,P[H]=D.r,P[H+1]=D.g,P[H+2]=D.b,P[H+3]=ca.r,P[H+4]=ca.g,P[H+5]=ca.b,P[H+6]=U.r,P[H+7]=U.g,P[H+8]=U.b,H+=9;s=0;for(u=ja.length;s<u;s++)D=ka[ja[s]],
rocket-3d/web/js/Three.js:v=D.vertexColors,A=D.color,v.length===4&&Z===THREE.VertexColors?(D=v[0],ca=v[1],U=v[2],v=v[3]):v=U=ca=D=A,P[H]=D.r,P[H+1]=D.g,P[H+2]=D.b,P[H+3]=ca.r,P[H+4]=ca.g,P[H+5]=ca.b,P[H+6]=U.r,P[H+7]=U.g,P[H+8]=U.b,P[H+9]=v.r,P[H+10]=v.g,P[H+11]=v.b,H+=12;H>0&&(j.bindBuffer(j.ARRAY_BUFFER,p.__webglColorBuffer),j.bufferData(j.ARRAY_BUFFER,P,L))}if(ha&&S.hasTangents){s=0;for(u=E.length;s<u;s++)D=ka[E[s]],ha=D.vertexTangents,H=ha[0],P=ha[1],S=ha[2],G[K]=H.x,G[K+1]=H.y,G[K+2]=H.z,G[K+3]=H.w,G[K+4]=P.x,G[K+5]=
rocket-3d/web/js/Three.js:P.y,G[K+6]=P.z,G[K+7]=P.w,G[K+8]=S.x,G[K+9]=S.y,G[K+10]=S.z,G[K+11]=S.w,K+=12;s=0;for(u=ja.length;s<u;s++)D=ka[ja[s]],ha=D.vertexTangents,H=ha[0],P=ha[1],S=ha[2],ha=ha[3],G[K]=H.x,G[K+1]=H.y,G[K+2]=H.z,G[K+3]=H.w,G[K+4]=P.x,G[K+5]=P.y,G[K+6]=P.z,G[K+7]=P.w,G[K+8]=S.x,G[K+9]=S.y,G[K+10]=S.z,G[K+11]=S.w,G[K+12]=ha.x,G[K+13]=ha.y,G[K+14]=ha.z,G[K+15]=ha.w,K+=16;j.bindBuffer(j.ARRAY_BUFFER,p.__webglTangentBuffer);j.bufferData(j.ARRAY_BUFFER,G,L)}if(I&&Q){s=0;for(u=E.length;s<u;s++)if(D=ka[E[s]],G=D.vertexNormals,
rocket-3d/web/js/Three.js:I=D.normal,G.length===3&&R)for(K=0;K<3;K++)I=G[K],la[M]=I.x,la[M+1]=I.y,la[M+2]=I.z,M+=3;else for(K=0;K<3;K++)la[M]=I.x,la[M+1]=I.y,la[M+2]=I.z,M+=3;s=0;for(u=ja.length;s<u;s++)if(D=ka[ja[s]],G=D.vertexNormals,I=D.normal,G.length===4&&R)for(K=0;K<4;K++)I=G[K],la[M]=I.x,la[M+1]=I.y,la[M+2]=I.z,M+=3;else for(K=0;K<4;K++)la[M]=I.x,la[M+1]=I.y,la[M+2]=I.z,M+=3;j.bindBuffer(j.ARRAY_BUFFER,p.__webglNormalBuffer);j.bufferData(j.ARRAY_BUFFER,la,L)}if(ta&&qa&&B){s=0;for(u=E.length;s<u;s++)if(M=E[s],M=qa[M],
rocket-3d/web/js/Three.js:M!==void 0)for(K=0;K<3;K++)la=M[K],T[F]=la.u,T[F+1]=la.v,F+=2;s=0;for(u=ja.length;s<u;s++)if(M=ja[s],M=qa[M],M!==void 0)for(K=0;K<4;K++)la=M[K],T[F]=la.u,T[F+1]=la.v,F+=2;F>0&&(j.bindBuffer(j.ARRAY_BUFFER,p.__webglUVBuffer),j.bufferData(j.ARRAY_BUFFER,T,L))}if(ta&&pa&&B){s=0;for(u=E.length;s<u;s++)if(M=E[s],F=pa[M],F!==void 0)for(K=0;K<3;K++)T=F[K],C[ba]=T.u,C[ba+1]=T.v,ba+=2;s=0;for(u=ja.length;s<u;s++)if(M=ja[s],F=pa[M],F!==void 0)for(K=0;K<4;K++)T=F[K],C[ba]=T.u,C[ba+1]=T.v,ba+=2;ba>0&&(j.bindBuffer(j.ARRAY_BUFFER,
rocket-3d/web/js/Three.js:p.__webglUV2Buffer),j.bufferData(j.ARRAY_BUFFER,C,L))}if(xa){s=0;for(u=E.length;s<u;s++)z[da]=O,z[da+1]=O+1,z[da+2]=O+2,da+=3,fa[ma]=O,fa[ma+1]=O+1,fa[ma+2]=O,fa[ma+3]=O+2,fa[ma+4]=O+1,fa[ma+5]=O+2,ma+=6,O+=3;s=0;for(u=ja.length;s<u;s++)z[da]=O,z[da+1]=O+1,z[da+2]=O+3,z[da+3]=O+1,z[da+4]=O+2,z[da+5]=O+3,da+=6,fa[ma]=O,fa[ma+1]=O+1,fa[ma+2]=O,fa[ma+3]=O+3,fa[ma+4]=O+1,fa[ma+5]=O+2,fa[ma+6]=O+2,fa[ma+7]=O+3,ma+=8,O+=4;j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,p.__webglFaceBuffer);j.bufferData(j.ELEMENT_ARRAY_BUFFER,
rocket-3d/web/js/Three.js:z,L);j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,p.__webglLineBuffer);j.bufferData(j.ELEMENT_ARRAY_BUFFER,fa,L)}if(J){K=0;for(O=J.length;K<O;K++)if(z=J[K],z.__original.needsUpdate){C=0;if(z.size===1)if(z.boundTo===void 0||z.boundTo==="vertices"){s=0;for(u=E.length;s<u;s++)D=ka[E[s]],z.array[C]=z.value[D.a],z.array[C+1]=z.value[D.b],z.array[C+2]=z.value[D.c],C+=3;s=0;for(u=ja.length;s<u;s++)D=ka[ja[s]],z.array[C]=z.value[D.a],z.array[C+1]=z.value[D.b],z.array[C+2]=z.value[D.c],z.array[C+3]=z.value[D.d],C+=
rocket-3d/web/js/Three.js:4}else{if(z.boundTo==="faces"){s=0;for(u=E.length;s<u;s++)fa=z.value[E[s]],z.array[C]=fa,z.array[C+1]=fa,z.array[C+2]=fa,C+=3;s=0;for(u=ja.length;s<u;s++)fa=z.value[ja[s]],z.array[C]=fa,z.array[C+1]=fa,z.array[C+2]=fa,z.array[C+3]=fa,C+=4}}else if(z.size===2)if(z.boundTo===void 0||z.boundTo==="vertices"){s=0;for(u=E.length;s<u;s++)D=ka[E[s]],y=z.value[D.a],x=z.value[D.b],N=z.value[D.c],z.array[C]=y.x,z.array[C+1]=y.y,z.array[C+2]=x.x,z.array[C+3]=x.y,z.array[C+4]=N.x,z.array[C+5]=N.y,C+=6;s=0;for(u=
rocket-3d/web/js/Three.js:ja.length;s<u;s++)D=ka[ja[s]],y=z.value[D.a],x=z.value[D.b],N=z.value[D.c],D=z.value[D.d],z.array[C]=y.x,z.array[C+1]=y.y,z.array[C+2]=x.x,z.array[C+3]=x.y,z.array[C+4]=N.x,z.array[C+5]=N.y,z.array[C+6]=D.x,z.array[C+7]=D.y,C+=8}else{if(z.boundTo==="faces"){s=0;for(u=E.length;s<u;s++)N=x=y=fa=z.value[E[s]],z.array[C]=y.x,z.array[C+1]=y.y,z.array[C+2]=x.x,z.array[C+3]=x.y,z.array[C+4]=N.x,z.array[C+5]=N.y,C+=6;s=0;for(u=ja.length;s<u;s++)D=N=x=y=fa=z.value[ja[s]],z.array[C]=y.x,z.array[C+1]=y.y,z.array[C+
rocket-3d/web/js/Three.js:2]=x.x,z.array[C+3]=x.y,z.array[C+4]=N.x,z.array[C+5]=N.y,z.array[C+6]=D.x,z.array[C+7]=D.y,C+=8}}else if(z.size===3)if(Q=z.type==="c"?["r","g","b"]:["x","y","z"],z.boundTo===void 0||z.boundTo==="vertices"){s=0;for(u=E.length;s<u;s++)D=ka[E[s]],y=z.value[D.a],x=z.value[D.b],N=z.value[D.c],z.array[C]=y[Q[0]],z.array[C+1]=y[Q[1]],z.array[C+2]=y[Q[2]],z.array[C+3]=x[Q[0]],z.array[C+4]=x[Q[1]],z.array[C+5]=x[Q[2]],z.array[C+6]=N[Q[0]],z.array[C+7]=N[Q[1]],z.array[C+8]=N[Q[2]],C+=9;s=0;for(u=ja.length;s<
rocket-3d/web/js/Three.js:u;s++)D=ka[ja[s]],y=z.value[D.a],x=z.value[D.b],N=z.value[D.c],D=z.value[D.d],z.array[C]=y[Q[0]],z.array[C+1]=y[Q[1]],z.array[C+2]=y[Q[2]],z.array[C+3]=x[Q[0]],z.array[C+4]=x[Q[1]],z.array[C+5]=x[Q[2]],z.array[C+6]=N[Q[0]],z.array[C+7]=N[Q[1]],z.array[C+8]=N[Q[2]],z.array[C+9]=D[Q[0]],z.array[C+10]=D[Q[1]],z.array[C+11]=D[Q[2]],C+=12}else{if(z.boundTo==="faces"){s=0;for(u=E.length;s<u;s++)N=x=y=fa=z.value[E[s]],z.array[C]=y[Q[0]],z.array[C+1]=y[Q[1]],z.array[C+2]=y[Q[2]],z.array[C+3]=x[Q[0]],z.array[C+
rocket-3d/web/js/Three.js:4]=x[Q[1]],z.array[C+5]=x[Q[2]],z.array[C+6]=N[Q[0]],z.array[C+7]=N[Q[1]],z.array[C+8]=N[Q[2]],C+=9;s=0;for(u=ja.length;s<u;s++)D=N=x=y=fa=z.value[ja[s]],z.array[C]=y[Q[0]],z.array[C+1]=y[Q[1]],z.array[C+2]=y[Q[2]],z.array[C+3]=x[Q[0]],z.array[C+4]=x[Q[1]],z.array[C+5]=x[Q[2]],z.array[C+6]=N[Q[0]],z.array[C+7]=N[Q[1]],z.array[C+8]=N[Q[2]],z.array[C+9]=D[Q[0]],z.array[C+10]=D[Q[1]],z.array[C+11]=D[Q[2]],C+=12}}else if(z.size===4)if(z.boundTo===void 0||z.boundTo==="vertices"){s=0;for(u=E.length;s<u;s++)D=
rocket-3d/web/js/Three.js:ka[E[s]],y=z.value[D.a],x=z.value[D.b],N=z.value[D.c],z.array[C]=y.x,z.array[C+1]=y.y,z.array[C+2]=y.z,z.array[C+3]=y.w,z.array[C+4]=x.x,z.array[C+5]=x.y,z.array[C+6]=x.z,z.array[C+7]=x.w,z.array[C+8]=N.x,z.array[C+9]=N.y,z.array[C+10]=N.z,z.array[C+11]=N.w,C+=12;s=0;for(u=ja.length;s<u;s++)D=ka[ja[s]],y=z.value[D.a],x=z.value[D.b],N=z.value[D.c],D=z.value[D.d],z.array[C]=y.x,z.array[C+1]=y.y,z.array[C+2]=y.z,z.array[C+3]=y.w,z.array[C+4]=x.x,z.array[C+5]=x.y,z.array[C+6]=x.z,z.array[C+7]=x.w,z.array[C+
rocket-3d/web/js/Three.js:8]=N.x,z.array[C+9]=N.y,z.array[C+10]=N.z,z.array[C+11]=N.w,z.array[C+12]=D.x,z.array[C+13]=D.y,z.array[C+14]=D.z,z.array[C+15]=D.w,C+=16}else if(z.boundTo==="faces"){s=0;for(u=E.length;s<u;s++)N=x=y=fa=z.value[E[s]],z.array[C]=y.x,z.array[C+1]=y.y,z.array[C+2]=y.z,z.array[C+3]=y.w,z.array[C+4]=x.x,z.array[C+5]=x.y,z.array[C+6]=x.z,z.array[C+7]=x.w,z.array[C+8]=N.x,z.array[C+9]=N.y,z.array[C+10]=N.z,z.array[C+11]=N.w,C+=12;s=0;for(u=ja.length;s<u;s++)D=N=x=y=fa=z.value[ja[s]],z.array[C]=y.x,z.array[C+
rocket-3d/web/js/Three.js:1]=y.y,z.array[C+2]=y.z,z.array[C+3]=y.w,z.array[C+4]=x.x,z.array[C+5]=x.y,z.array[C+6]=x.z,z.array[C+7]=x.w,z.array[C+8]=N.x,z.array[C+9]=N.y,z.array[C+10]=N.z,z.array[C+11]=N.w,z.array[C+12]=D.x,z.array[C+13]=D.y,z.array[C+14]=D.z,z.array[C+15]=D.w,C+=16}j.bindBuffer(j.ARRAY_BUFFER,z.buffer);j.bufferData(j.ARRAY_BUFFER,z.array,L)}}r&&(delete p.__inittedArrays,delete p.__colorArray,delete p.__normalArray,delete p.__tangentArray,delete p.__uvArray,delete p.__uv2Array,delete p.__faceArray,delete p.__vertexArray,
rocket-3d/web/js/Three.js:delete p.__lineArray,delete p.__skinVertexAArray,delete p.__skinVertexBArray,delete p.__skinIndexArray,delete p.__skinWeightArray)}}m.__dirtyVertices=!1;m.__dirtyMorphTargets=!1;m.__dirtyElements=!1;m.__dirtyUvs=!1;m.__dirtyNormals=!1;m.__dirtyColors=!1;m.__dirtyTangents=!1;l.attributes&&t(l)}else if(ea instanceof THREE.Ribbon){if(m.__dirtyVertices||m.__dirtyColors){l=m;ea=j.DYNAMIC_DRAW;Q=k=Q=r=r=void 0;Z=l.vertices;o=l.colors;s=Z.length;p=o.length;u=l.__vertexArray;L=l.__colorArray;J=l.__dirtyColors;
rocket-3d/web/js/Three.js:if(l.__dirtyVertices){for(r=0;r<s;r++)Q=Z[r].position,k=r*3,u[k]=Q.x,u[k+1]=Q.y,u[k+2]=Q.z;j.bindBuffer(j.ARRAY_BUFFER,l.__webglVertexBuffer);j.bufferData(j.ARRAY_BUFFER,u,ea)}if(J){for(r=0;r<p;r++)Q=o[r],k=r*3,L[k]=Q.r,L[k+1]=Q.g,L[k+2]=Q.b;j.bindBuffer(j.ARRAY_BUFFER,l.__webglColorBuffer);j.bufferData(j.ARRAY_BUFFER,L,ea)}}m.__dirtyVertices=!1;m.__dirtyColors=!1}else if(ea instanceof THREE.Line){l=b(ea,p);L=l.attributes&&q(l);if(m.__dirtyVertices||m.__dirtyColors||L){ea=m;k=j.DYNAMIC_DRAW;s=o=R=
rocket-3d/web/js/Three.js:Z=B=void 0;Z=ea.vertices;p=ea.colors;s=Z.length;L=p.length;u=ea.__vertexArray;r=ea.__colorArray;J=ea.__dirtyColors;Q=ea.__webglCustomAttributesList;O=ka=ja=E=R=B=void 0;if(ea.__dirtyVertices){for(B=0;B<s;B++)R=Z[B].position,o=B*3,u[o]=R.x,u[o+1]=R.y,u[o+2]=R.z;j.bindBuffer(j.ARRAY_BUFFER,ea.__webglVertexBuffer);j.bufferData(j.ARRAY_BUFFER,u,k)}if(J){for(Z=0;Z<L;Z++)s=p[Z],o=Z*3,r[o]=s.r,r[o+1]=s.g,r[o+2]=s.b;j.bindBuffer(j.ARRAY_BUFFER,ea.__webglColorBuffer);j.bufferData(j.ARRAY_BUFFER,r,k)}if(Q){B=
rocket-3d/web/js/Three.js:0;for(R=Q.length;B<R;B++)if(O=Q[B],O.needsUpdate&&(O.boundTo===void 0||O.boundTo==="vertices")){o=0;ja=O.value.length;if(O.size===1)for(E=0;E<ja;E++)O.array[E]=O.value[E];else if(O.size===2)for(E=0;E<ja;E++)ka=O.value[E],O.array[o]=ka.x,O.array[o+1]=ka.y,o+=2;else if(O.size===3)if(O.type==="c")for(E=0;E<ja;E++)ka=O.value[E],O.array[o]=ka.r,O.array[o+1]=ka.g,O.array[o+2]=ka.b,o+=3;else for(E=0;E<ja;E++)ka=O.value[E],O.array[o]=ka.x,O.array[o+1]=ka.y,O.array[o+2]=ka.z,o+=3;else if(O.size===4)for(E=
rocket-3d/web/js/Three.js:0;E<ja;E++)ka=O.value[E],O.array[o]=ka.x,O.array[o+1]=ka.y,O.array[o+2]=ka.z,O.array[o+3]=ka.w,o+=4;j.bindBuffer(j.ARRAY_BUFFER,O.buffer);j.bufferData(j.ARRAY_BUFFER,O.array,k)}}}m.__dirtyVertices=!1;m.__dirtyColors=!1;l.attributes&&t(l)}else if(ea instanceof THREE.ParticleSystem)l=b(ea,p),L=l.attributes&&q(l),(m.__dirtyVertices||m.__dirtyColors||ea.sortParticles||L)&&e(m,j.DYNAMIC_DRAW,ea),m.__dirtyVertices=!1,m.__dirtyColors=!1,l.attributes&&t(l)};this.initMaterial=function(a,b,c,d){var g,e,f,h;
rocket-3d/web/js/Three.js:a instanceof THREE.MeshDepthMaterial?h="depth":a instanceof THREE.MeshNormalMaterial?h="normal":a instanceof THREE.MeshBasicMaterial?h="basic":a instanceof THREE.MeshLambertMaterial?h="lambert":a instanceof THREE.MeshPhongMaterial?h="phong":a instanceof THREE.LineBasicMaterial?h="basic":a instanceof THREE.ParticleBasicMaterial&&(h="particle_basic");if(h){var i=THREE.ShaderLib[h];a.uniforms=THREE.UniformsUtils.clone(i.uniforms);a.vertexShader=i.vertexShader;a.fragmentShader=i.fragmentShader}var k,
rocket-3d/web/js/Three.js:l,m;k=m=i=0;for(l=b.length;k<l;k++)f=b[k],f instanceof THREE.SpotLight&&m++,f instanceof THREE.DirectionalLight&&m++,f instanceof THREE.PointLight&&i++;i+m<=ba?k=m:(k=Math.ceil(ba*m/(i+m)),i=ba-k);f={directional:k,point:i};i=m=0;for(k=b.length;i<k;i++)l=b[i],l instanceof THREE.SpotLight&&l.castShadow&&m++;var n=50;if(d!==void 0&&d instanceof THREE.SkinnedMesh)n=d.bones.length;var o;a:{k=a.fragmentShader;l=a.vertexShader;var i=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,
rocket-3d/web/js/Three.js:vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,maxMorphTargets:this.maxMorphTargets,maxDirLights:f.directional,maxPointLights:f.point,maxBones:n,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:m,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel},p,d=[];h?d.push(h):(d.push(k),d.push(l));for(p in c)d.push(p),
rocket-3d/web/js/Three.js:d.push(c[p]);h=d.join();p=0;for(d=X.length;p<d;p++)if(X[p].code===h){o=X[p].program;break a}p=j.createProgram();d=[ya?"#define VERTEX_TEXTURES":"",W.gammaInput?"#define GAMMA_INPUT":"",W.gammaOutput?"#define GAMMA_OUTPUT":"",W.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",
rocket-3d/web/js/Three.js:c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
rocket-3d/web/js/Three.js:f=["#ifdef GL_ES","precision "+aa+" float;","#endif","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",W.gammaInput?"#define GAMMA_INPUT":"",W.gammaOutput?"#define GAMMA_OUTPUT":"",W.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":
rocket-3d/web/js/Three.js:"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapSoft?"#define SHADOWMAP_WIDTH "+c.shadowMapWidth.toFixed(1):"",c.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+c.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");j.attachShader(p,J("fragment",f+k));j.attachShader(p,
rocket-3d/web/js/Three.js:J("vertex",d+l));j.linkProgram(p);j.getProgramParameter(p,j.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+j.getProgramParameter(p,j.VALIDATE_STATUS)+", gl error ["+j.getError()+"]");p.uniforms={};p.attributes={};var L,d=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(L in i)d.push(L);L=d;d=0;for(i=L.length;d<i;d++)k=L[d],p.uniforms[k]=j.getUniformLocation(p,
rocket-3d/web/js/Three.js:k);d=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(L=0;L<c.maxMorphTargets;L++)d.push("morphTarget"+L);for(o in b)d.push(o);o=d;L=0;for(b=o.length;L<b;L++)c=o[L],p.attributes[c]=j.getAttribLocation(p,c);p.id=X.length;X.push({program:p,code:h});W.info.memory.programs=X.length;o=p}a.program=o;o=a.program.attributes;o.position>=0&&j.enableVertexAttribArray(o.position);o.color>=0&&j.enableVertexAttribArray(o.color);o.normal>=0&&j.enableVertexAttribArray(o.normal);
rocket-3d/web/js/Three.js:o.tangent>=0&&j.enableVertexAttribArray(o.tangent);a.skinning&&o.skinVertexA>=0&&o.skinVertexB>=0&&o.skinIndex>=0&&o.skinWeight>=0&&(j.enableVertexAttribArray(o.skinVertexA),j.enableVertexAttribArray(o.skinVertexB),j.enableVertexAttribArray(o.skinIndex),j.enableVertexAttribArray(o.skinWeight));if(a.attributes)for(e in a.attributes)o[e]!==void 0&&o[e]>=0&&j.enableVertexAttribArray(o[e]);if(a.morphTargets)for(e=a.numSupportedMorphTargets=0;e<this.maxMorphTargets;e++)L="morphTarget"+e,o[L]>=0&&(j.enableVertexAttribArray(o[L]),
rocket-3d/web/js/Three.js:a.numSupportedMorphTargets++);a.uniformsList=[];for(g in a.uniforms)a.uniformsList.push([a.uniforms[g],g])};this.setFaceCulling=function(a,b){a?(!b||b==="ccw"?j.frontFace(j.CCW):j.frontFace(j.CW),a==="back"?j.cullFace(j.BACK):a==="front"?j.cullFace(j.FRONT):j.cullFace(j.FRONT_AND_BACK),j.enable(j.CULL_FACE)):j.disable(j.CULL_FACE)}};
rocket-3d/web/js/Three.js:THREE.WebGLRenderTarget=function(a,c,b){this.width=a;this.height=c;b=b||{};this.wrapS=b.wrapS!==void 0?b.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=b.wrapT!==void 0?b.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=b.magFilter!==void 0?b.magFilter:THREE.LinearFilter;this.minFilter=b.minFilter!==void 0?b.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=b.format!==void 0?b.format:THREE.RGBAFormat;this.type=b.type!==void 0?b.type:
rocket-3d/web/js/Three.js:THREE.UnsignedByteType;this.depthBuffer=b.depthBuffer!==void 0?b.depthBuffer:!0;this.stencilBuffer=b.stencilBuffer!==void 0?b.stencilBuffer:!0};
rocket-3d/web/js/Three.js:THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,c,b){THREE.WebGLRenderTarget.call(this,a,c,b);this.activeCubeFace=0};
rocket-3d/web/js/Three.js:THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
rocket-3d/web/js/Three.js:THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};
rocket-3d/web/js/Three.js:THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};
rocket-3d/web/js/Three.js:THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
rocket-3d/web/js/Three.js:THREE.ColorUtils={adjustHSV:function(a,c,b,d){var g=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,g);g.h=THREE.Math.clamp(g.h+c,0,1);g.s=THREE.Math.clamp(g.s+b,0,1);g.v=THREE.Math.clamp(g.v+d,0,1);a.setHSV(g.h,g.s,g.v)},rgbToHsv:function(a,c){var b=a.r,d=a.g,g=a.b,f=Math.max(Math.max(b,d),g),e=Math.min(Math.min(b,d),g);if(e===f)e=b=0;else{var h=f-e,e=h/f,b=b===f?(d-g)/h:d===f?2+(g-b)/h:4+(b-d)/h;b/=6;b<0&&(b+=1);b>1&&(b-=1)}c===void 0&&(c={h:0,s:0,v:0});c.h=b;c.s=e;c.v=f;return c}};
rocket-3d/web/js/Three.js:THREE.ColorUtils.__hsv={h:0,s:0,v:0};
rocket-3d/web/js/Three.js:THREE.GeometryUtils={merge:function(a,c){for(var b,d,g=a.vertices.length,f=c instanceof THREE.Mesh?c.geometry:c,e=a.vertices,h=f.vertices,i=a.faces,l=f.faces,k=a.faceVertexUvs[0],o=f.faceVertexUvs[0],p={},m=0;m<a.materials.length;m++)p[a.materials[m].id]=m;if(c instanceof THREE.Mesh)c.matrixAutoUpdate&&c.updateMatrix(),b=c.matrix,d=new THREE.Matrix4,d.extractRotation(b,c.scale);for(var m=0,r=h.length;m<r;m++){var n=new THREE.Vertex(h[m].position.clone());b&&b.multiplyVector3(n.position);e.push(n)}m=
rocket-3d/web/js/Three.js:0;for(r=l.length;m<r;m++){var e=l[m],q,t,w=e.vertexNormals,u=e.vertexColors;e instanceof THREE.Face3?q=new THREE.Face3(e.a+g,e.b+g,e.c+g):e instanceof THREE.Face4&&(q=new THREE.Face4(e.a+g,e.b+g,e.c+g,e.d+g));q.normal.copy(e.normal);d&&d.multiplyVector3(q.normal);h=0;for(n=w.length;h<n;h++)t=w[h].clone(),d&&d.multiplyVector3(t),q.vertexNormals.push(t);q.color.copy(e.color);h=0;for(n=u.length;h<n;h++)t=u[h],q.vertexColors.push(t.clone());if(e.materialIndex!==void 0){h=f.materials[e.materialIndex];
rocket-3d/web/js/Three.js:n=p[h.id];if(n===void 0)n=a.materials.length,a.materials.push(h);q.materialIndex=n}q.centroid.copy(e.centroid);b&&b.multiplyVector3(q.centroid);i.push(q)}m=0;for(r=o.length;m<r;m++){b=o[m];d=[];h=0;for(n=b.length;h<n;h++)d.push(new THREE.UV(b[h].u,b[h].v));k.push(d)}},clone:function(a){var c=new THREE.Geometry,b,d=a.vertices,g=a.faces,f=a.faceVertexUvs[0];if(a.materials)c.materials=a.materials.slice();a=0;for(b=d.length;a<b;a++){var e=new THREE.Vertex(d[a].position.clone());c.vertices.push(e)}a=0;
rocket-3d/web/js/Three.js:for(b=g.length;a<b;a++){var h=g[a],i,l,k=h.vertexNormals,o=h.vertexColors;h instanceof THREE.Face3?i=new THREE.Face3(h.a,h.b,h.c):h instanceof THREE.Face4&&(i=new THREE.Face4(h.a,h.b,h.c,h.d));i.normal.copy(h.normal);d=0;for(e=k.length;d<e;d++)l=k[d],i.vertexNormals.push(l.clone());i.color.copy(h.color);d=0;for(e=o.length;d<e;d++)l=o[d],i.vertexColors.push(l.clone());i.materialIndex=h.materialIndex;i.centroid.copy(h.centroid);c.faces.push(i)}a=0;for(b=f.length;a<b;a++){g=f[a];i=[];d=0;for(e=g.length;d<
rocket-3d/web/js/Three.js:e;d++)i.push(new THREE.UV(g[d].u,g[d].v));c.faceVertexUvs[0].push(i)}return c},randomPointInTriangle:function(a,c,b){var d,g,f,e=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();g=THREE.GeometryUtils.random();d+g>1&&(d=1-d,g=1-g);f=1-d-g;e.copy(a);e.multiplyScalar(d);h.copy(c);h.multiplyScalar(g);e.addSelf(h);h.copy(b);h.multiplyScalar(f);e.addSelf(h);return e},randomPointInFace:function(a,c,b){var d,g,f;if(a instanceof THREE.Face3)return d=c.vertices[a.a].position,g=c.vertices[a.b].position,
rocket-3d/web/js/Three.js:f=c.vertices[a.c].position,THREE.GeometryUtils.randomPointInTriangle(d,g,f);else if(a instanceof THREE.Face4){d=c.vertices[a.a].position;g=c.vertices[a.b].position;f=c.vertices[a.c].position;var c=c.vertices[a.d].position,e;b?a._area1&&a._area2?(b=a._area1,e=a._area2):(b=THREE.GeometryUtils.triangleArea(d,g,c),e=THREE.GeometryUtils.triangleArea(g,f,c),a._area1=b,a._area2=e):(b=THREE.GeometryUtils.triangleArea(d,g,c),e=THREE.GeometryUtils.triangleArea(g,f,c));return THREE.GeometryUtils.random()*(b+
rocket-3d/web/js/Three.js:e)<b?THREE.GeometryUtils.randomPointInTriangle(d,g,c):THREE.GeometryUtils.randomPointInTriangle(g,f,c)}},randomPointsInGeometry:function(a,c){function b(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return l[e]>a?b(c,e-1):l[e]<a?b(e+1,d):e}return b(0,l.length-1)}var d,g,f=a.faces,e=a.vertices,h=f.length,i=0,l=[],k,o,p,m;for(g=0;g<h;g++){d=f[g];if(d instanceof THREE.Face3)k=e[d.a].position,o=e[d.b].position,p=e[d.c].position,d._area=THREE.GeometryUtils.triangleArea(k,o,p);else if(d instanceof
rocket-3d/web/js/Three.js:THREE.Face4)k=e[d.a].position,o=e[d.b].position,p=e[d.c].position,m=e[d.d].position,d._area1=THREE.GeometryUtils.triangleArea(k,o,m),d._area2=THREE.GeometryUtils.triangleArea(o,p,m),d._area=d._area1+d._area2;i+=d._area;l[g]=i}d=[];e={};for(g=0;g<c;g++)h=THREE.GeometryUtils.random()*i,h=b(h),d[g]=THREE.GeometryUtils.randomPointInFace(f[h],a,!0),e[h]?e[h]+=1:e[h]=1;return d},triangleArea:function(a,c,b){var d,g=THREE.GeometryUtils.__v1;g.sub(a,c);d=g.length();g.sub(a,b);a=g.length();g.sub(c,b);b=g.length();
rocket-3d/web/js/Three.js:c=0.5*(d+a+b);return Math.sqrt(c*(c-d)*(c-a)*(c-b))},center:function(a){a.computeBoundingBox();var c=new THREE.Matrix4;c.setTranslation(-0.5*(a.boundingBox.x[1]+a.boundingBox.x[0]),-0.5*(a.boundingBox.y[1]+a.boundingBox.y[0]),-0.5*(a.boundingBox.z[1]+a.boundingBox.z[0]));a.applyMatrix(c);a.computeBoundingBox()}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;
rocket-3d/web/js/Three.js:THREE.ImageUtils={loadTexture:function(a,c,b){var d=new Image,g=new THREE.Texture(d,c);d.onload=function(){g.needsUpdate=!0;b&&b(this)};d.crossOrigin="";d.src=a;return g},loadTextureCube:function(a,c,b){var d,g=[],f=new THREE.Texture(g,c),c=g.loadCount=0;for(d=a.length;c<d;++c)g[c]=new Image,g[c].onload=function(){g.loadCount+=1;if(g.loadCount===6)f.needsUpdate=!0;b&&b(this)},g[c].crossOrigin="",g[c].src=a[c];return f},getNormalMap:function(a,c){var b=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+
rocket-3d/web/js/Three.js:a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};c|=1;var d=a.width,g=a.height,f=document.createElement("canvas");f.width=d;f.height=g;var e=f.getContext("2d");e.drawImage(a,0,0);for(var h=e.getImageData(0,0,d,g).data,i=e.createImageData(d,g),l=i.data,k=0;k<d;k++)for(var o=1;o<g;o++){var p=o-1<0?g-1:o-1,m=(o+1)%g,r=k-1<0?d-1:k-1,n=(k+1)%d,q=[],t=[0,0,h[(o*d+k)*4]/255*c];q.push([-1,0,h[(o*d+r)*4]/255*c]);q.push([-1,-1,h[(p*d+r)*4]/255*c]);q.push([0,-1,h[(p*d+k)*4]/255*c]);q.push([1,-1,h[(p*d+n)*4]/255*c]);
rocket-3d/web/js/Three.js:q.push([1,0,h[(o*d+n)*4]/255*c]);q.push([1,1,h[(m*d+n)*4]/255*c]);q.push([0,1,h[(m*d+k)*4]/255*c]);q.push([-1,1,h[(m*d+r)*4]/255*c]);p=[];r=q.length;for(m=0;m<r;m++){var n=q[m],w=q[(m+1)%r],n=[n[0]-t[0],n[1]-t[1],n[2]-t[2]],w=[w[0]-t[0],w[1]-t[1],w[2]-t[2]];p.push(b([n[1]*w[2]-n[2]*w[1],n[2]*w[0]-n[0]*w[2],n[0]*w[1]-n[1]*w[0]]))}q=[0,0,0];for(m=0;m<p.length;m++)q[0]+=p[m][0],q[1]+=p[m][1],q[2]+=p[m][2];q[0]/=p.length;q[1]/=p.length;q[2]/=p.length;t=(o*d+k)*4;l[t]=(q[0]+1)/2*255|0;l[t+1]=(q[1]+0.5)*
rocket-3d/web/js/Three.js:255|0;l[t+2]=q[2]*255|0;l[t+3]=255}e.putImageData(i,0,0);return f}};
rocket-3d/web/js/Three.js:THREE.SceneUtils={showHierarchy:function(a,c){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=c})},traverseHierarchy:function(a,c){var b,d,g=a.children.length;for(d=0;d<g;d++)b=a.children[d],c(b),THREE.SceneUtils.traverseHierarchy(b,c)},createMultiMaterialObject:function(a,c){var b,d=c.length,g=new THREE.Object3D;for(b=0;b<d;b++){var f=new THREE.Mesh(a,c[b]);g.add(f)}return g},cloneObject:function(a){var c;a instanceof THREE.MorphAnimMesh?(c=new THREE.MorphAnimMesh(a.geometry,a.material),
rocket-3d/web/js/Three.js:c.duration=a.duration,c.mirroredLoop=a.mirroredLoop,c.time=a.time,c.lastKeyframe=a.lastKeyframe,c.currentKeyframe=a.currentKeyframe,c.direction=a.direction,c.directionBackwards=a.directionBackwards):a instanceof THREE.SkinnedMesh?c=new THREE.SkinnedMesh(a.geometry,a.material):a instanceof THREE.Mesh?c=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?c=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?c=new THREE.Ribbon(a.geometry,a.material):a instanceof THREE.ParticleSystem?
rocket-3d/web/js/Three.js:(c=new THREE.ParticleSystem(a.geometry,a.material),c.sortParticles=a.sortParticles):a instanceof THREE.Particle?c=new THREE.Particle(a.material):a instanceof THREE.Sprite?(c=new THREE.Sprite({}),c.color.copy(a.color),c.map=a.map,c.blending=a.blending,c.useScreenCoordinates=a.useScreenCoordinates,c.mergeWith3D=a.mergeWith3D,c.affectedByDistance=a.affectedByDistance,c.scaleByViewport=a.scaleByViewport,c.alignment=a.alignment,c.rotation3d.copy(a.rotation3d),c.rotation=a.rotation,c.opacity=a.opacity,
rocket-3d/web/js/Three.js:c.uvOffset.copy(a.uvOffset),c.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?c=new THREE.LOD:a instanceof THREE.MarchingCubes?(c=new THREE.MarchingCubes(a.resolution,a.material),c.field.set(a.field),c.isolation=a.isolation):a instanceof THREE.Object3D&&(c=new THREE.Object3D);c.parent=a.parent;c.up.copy(a.up);c.position.copy(a.position);c.rotation instanceof THREE.Vector3&&c.rotation.copy(a.rotation);c.eulerOrder=a.eulerOrder;c.scale.copy(a.scale);c.dynamic=a.dynamic;c.doubleSided=a.doubleSided;c.flipSided=
rocket-3d/web/js/Three.js:a.flipSided;c.renderDepth=a.renderDepth;c.rotationAutoUpdate=a.rotationAutoUpdate;c.matrix.copy(a.matrix);c.matrixWorld.copy(a.matrixWorld);c.matrixRotationWorld.copy(a.matrixRotationWorld);c.matrixAutoUpdate=a.matrixAutoUpdate;c.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;c.quaternion.copy(a.quaternion);c.useQuaternion=a.useQuaternion;c.boundRadius=a.boundRadius;c.boundRadiusScale=a.boundRadiusScale;c.visible=a.visible;c.castShadow=a.castShadow;c.receiveShadow=a.receiveShadow;c.frustumCulled=
rocket-3d/web/js/Three.js:a.frustumCulled;for(var b=0;b<a.children.length;b++){var d=THREE.SceneUtils.cloneObject(a.children[b]);c.children[b]=d;d.parent=c}if(a instanceof THREE.LOD)for(b=0;b<a.LODs.length;b++)c.LODs[b]={visibleAtDistance:a.LODs[b].visibleAtDistance,object3D:c.children[b]};return c}};
rocket-3d/web/js/Three.js:if(THREE.WebGLRenderer)THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
rocket-3d/web/js/Three.js:vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
rocket-3d/web/js/Three.js:normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tCube:{type:"t",value:1,texture:null},tNormal:{type:"t",value:2,texture:null},tSpecular:{type:"t",value:3,texture:null},tAO:{type:"t",value:4,texture:null},tDisplacement:{type:"t",value:5,texture:null},uNormalScale:{type:"f",
rocket-3d/web/js/Three.js:value:1},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform float uNormalScale;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
rocket-3d/web/js/Three.js:THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\nif( enableAO )\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nvec3 pointHalfVector = normalize( vPointLight[ i ].xyz + viewPosition );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * pow( pointDotNormalHalf, uShininess );\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * pow( dirDotNormalHalf, uShininess );\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\nif ( enableReflection ) {\nvec3 wPos = cameraPosition - vViewPosition;\nvec3 vReflect = reflect( normalize( wPos ), normal );\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, uReflectivity );\n}",
rocket-3d/web/js/Three.js:THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
rocket-3d/web/js/Three.js:THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv * uRepeat + uOffset;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif",
rocket-3d/web/js/Three.js:THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:1,texture:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}};
rocket-3d/web/js/Three.js:THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){return this.getPoint(this.getUtoTmapping(a))};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var c,b=[];for(c=0;c<=a;c++)b.push(this.getPoint(c/a));return b};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var c,b=[];for(c=0;c<=a;c++)b.push(this.getPointAt(c/a));return b};
rocket-3d/web/js/Three.js:THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1)return this.cacheArcLengths;var c=[],b,d=this.getPoint(0),g,f=0;c.push(0);for(g=1;g<=a;g++)b=this.getPoint(g/a),f+=b.distanceTo(d),c.push(f),d=b;return this.cacheArcLengths=c};
rocket-3d/web/js/Three.js:THREE.Curve.prototype.getUtoTmapping=function(a,c){var b=this.getLengths(),d=0,g=b.length,f;f=c?c:a*b[g-1];for(var e=0,h=g-1,i;e<=h;)if(d=Math.floor(e+(h-e)/2),i=b[d]-f,i<0)e=d+1;else if(i>0)h=d-1;else{h=d;break}d=h;if(b[d]==f)return d/(g-1);e=b[d];return b=(d+(f-e)/(b[d+1]-e))/(g-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};
rocket-3d/web/js/Three.js:THREE.Curve.prototype.getTangent=function(a){var c=a-1.0E-4;a+=1.0E-4;c<0&&(c=0);a>1&&(a=1);c=this.getPoint(c);a=this.getPoint(a);return c.clone().subSelf(a).normalize()};THREE.Curve.prototype.getTangentAt=function(a){return this.getTangent(this.getUtoTmapping(a))};THREE.LineCurve=function(a,c){a instanceof THREE.Vector2?(this.v1=a,this.v2=c):THREE.LineCurve.oldConstructor.apply(this,arguments)};
rocket-3d/web/js/Three.js:THREE.LineCurve.oldConstructor=function(a,c,b,d){this.constructor(new THREE.Vector2(a,c),new THREE.Vector2(b,d))};THREE.LineCurve.prototype=new THREE.Curve;THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var c=new THREE.Vector2;c.sub(this.v2,this.v1);c.multiplyScalar(a).addSelf(this.v1);return c};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};
rocket-3d/web/js/Three.js:THREE.LineCurve.prototype.getTangent=function(){var a=new THREE.Vector2;a.sub(this.v2,this.v1);a.normalize();return a};THREE.QuadraticBezierCurve=function(a,c,b){if(!(c instanceof THREE.Vector2))var d=Array.prototype.slice.call(arguments),a=new THREE.Vector2(d[0],d[1]),c=new THREE.Vector2(d[2],d[3]),b=new THREE.Vector2(d[4],d[5]);this.v0=a;this.v1=c;this.v2=b};THREE.QuadraticBezierCurve.prototype=new THREE.Curve;THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;
rocket-3d/web/js/Three.js:THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var c;c=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(c,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var c;c=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);c=new THREE.Vector2(c,a);c.normalize();return c};
rocket-3d/web/js/Three.js:THREE.CubicBezierCurve=function(a,c,b,d){if(!(c instanceof THREE.Vector2))var g=Array.prototype.slice.call(arguments),a=new THREE.Vector2(g[0],g[1]),c=new THREE.Vector2(g[2],g[3]),b=new THREE.Vector2(g[4],g[5]),d=new THREE.Vector2(g[6],g[7]);this.v0=a;this.v1=c;this.v2=b;this.v3=d};THREE.CubicBezierCurve.prototype=new THREE.Curve;THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;
rocket-3d/web/js/Three.js:THREE.CubicBezierCurve.prototype.getPoint=function(a){var c;c=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(c,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var c;c=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);c=new THREE.Vector2(c,a);c.normalize();return c};
rocket-3d/web/js/Three.js:THREE.SplineCurve=function(a){this.points=a==void 0?[]:a};THREE.SplineCurve.prototype=new THREE.Curve;THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;
rocket-3d/web/js/Three.js:THREE.SplineCurve.prototype.getPoint=function(a){var c=new THREE.Vector2,b=[],d=this.points,g;g=(d.length-1)*a;a=Math.floor(g);g-=a;b[0]=a==0?a:a-1;b[1]=a;b[2]=a>d.length-2?a:a+1;b[3]=a>d.length-3?a:a+2;c.x=THREE.Curve.Utils.interpolate(d[b[0]].x,d[b[1]].x,d[b[2]].x,d[b[3]].x,g);c.y=THREE.Curve.Utils.interpolate(d[b[0]].y,d[b[1]].y,d[b[2]].y,d[b[3]].y,g);return c};THREE.ArcCurve=function(a,c,b,d,g,f){this.aX=a;this.aY=c;this.aRadius=b;this.aStartAngle=d;this.aEndAngle=g;this.aClockwise=f};
rocket-3d/web/js/Three.js:THREE.ArcCurve.prototype=new THREE.Curve;THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.ArcCurve.prototype.getPoint=function(a){var c=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);a=this.aStartAngle+a*c;return new THREE.Vector2(this.aX+this.aRadius*Math.cos(a),this.aY+this.aRadius*Math.sin(a))};
rocket-3d/web/js/Three.js:THREE.Curve.Utils={tangentQuadraticBezier:function(a,c,b,d){return 2*(1-a)*(b-c)+2*a*(d-b)},tangentCubicBezier:function(a,c,b,d,g){return-3*c*(1-a)*(1-a)+3*b*(1-a)*(1-a)-6*a*b*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*g},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,c,b,d,g){var a=(b-a)*0.5,d=(d-c)*0.5,f=g*g;return(2*c-2*b+a+d)*g*f+(-3*c+3*b-2*a-d)*f+a*g+c}};
rocket-3d/web/js/Three.js:THREE.Curve.create=function(a,c){a.prototype=new THREE.Curve;a.prototype.constructor=a;a.prototype.getPoint=c;return a};THREE.LineCurve3=THREE.Curve.create(function(a,c){this.v1=a;this.v2=c},function(a){var c=new THREE.Vector3;c.sub(this.v2,this.v1);c.multiplyScalar(a);c.addSelf(this.v1);return c});
rocket-3d/web/js/Three.js:THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,c,b){this.v0=a;this.v1=c;this.v2=b},function(a){var c,b;c=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(c,b,a)});
rocket-3d/web/js/Three.js:THREE.CubicBezierCurve3=THREE.Curve.create(function(a,c,b,d){this.v0=a;this.v1=c;this.v2=b;this.v3=d},function(a){var c,b;c=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);b=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(c,b,a)});
rocket-3d/web/js/Three.js:THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var c=new THREE.Vector3,b=[],d=this.points,g;g=(d.length-1)*a;a=Math.floor(g);g-=a;b[0]=a==0?a:a-1;b[1]=a;b[2]=a>d.length-2?a:a+1;b[3]=a>d.length-3?a:a+2;c.x=THREE.Curve.Utils.interpolate(d[b[0]].x,d[b[1]].x,d[b[2]].x,d[b[3]].x,g);c.y=THREE.Curve.Utils.interpolate(d[b[0]].y,d[b[1]].y,d[b[2]].y,d[b[3]].y,g);c.z=THREE.Curve.Utils.interpolate(d[b[0]].z,d[b[1]].z,d[b[2]].z,d[b[3]].z,g);return c});
rocket-3d/web/js/Three.js:THREE.CurvePath=function(){this.curves=[];this.bends=[]};THREE.CurvePath.prototype=new THREE.Curve;THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){};
rocket-3d/web/js/Three.js:THREE.CurvePath.prototype.getPoint=function(a){for(var c=a*this.getLength(),b=this.getCurveLengths(),a=0;a<b.length;){if(b[a]>=c)return c=b[a]-c,a=this.curves[a],c=1-c/a.getLength(),a.getPointAt(c);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
rocket-3d/web/js/Three.js:THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],c=0,b,d=this.curves.length;for(b=0;b<d;b++)c+=this.curves[b].getLength(),a.push(c);return this.cacheLengths=a};
rocket-3d/web/js/Three.js:THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),c,b,d,g;c=b=Number.NEGATIVE_INFINITY;d=g=Number.POSITIVE_INFINITY;var f,e,h,i;i=new THREE.Vector2;e=0;for(h=a.length;e<h;e++){f=a[e];if(f.x>c)c=f.x;else if(f.x<d)d=f.x;if(f.y>b)b=f.y;else if(f.y<b)g=f.y;i.addSelf(f.x,f.y)}return{minX:d,minY:g,maxX:c,maxY:b,centroid:i.divideScalar(h)}};THREE.CurvePath.prototype.createPointsGeometry=function(a){return this.createGeometry(this.getPoints(a,!0))};
rocket-3d/web/js/Three.js:THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){return this.createGeometry(this.getSpacedPoints(a,!0))};THREE.CurvePath.prototype.createGeometry=function(a){for(var c=new THREE.Geometry,b=0;b<a.length;b++)c.vertices.push(new THREE.Vertex(new THREE.Vector3(a[b].x,a[b].y,0)));return c};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
rocket-3d/web/js/Three.js:THREE.CurvePath.prototype.getTransformedPoints=function(a,c){var b=this.getPoints(a),d,g;if(!c)c=this.bends;d=0;for(g=c.length;d<g;d++)b=this.getWrapPoints(b,c[d]);return b};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,c){var b=this.getSpacedPoints(a),d,g;if(!c)c=this.bends;d=0;for(g=c.length;d<g;d++)b=this.getWrapPoints(b,c[d]);return b};
rocket-3d/web/js/Three.js:THREE.CurvePath.prototype.getWrapPoints=function(a,c){var b=this.getBoundingBox(),d,g,f,e,h,i;d=0;for(g=a.length;d<g;d++)f=a[d],e=f.x,h=f.y,i=e/b.maxX,i=c.getUtoTmapping(i,e),e=c.getPoint(i),h=c.getNormalVector(i).multiplyScalar(h),f.x=e.x+h.x,f.y=e.y+h.y;return a};THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=new THREE.CurvePath;THREE.Path.prototype.constructor=THREE.Path;
rocket-3d/web/js/Three.js:THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);var c,b=a.length;for(c=1;c<b;c++)this.lineTo(a[c].x,a[c].y)};THREE.Path.prototype.moveTo=function(){var a=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:a})};
rocket-3d/web/js/Three.js:THREE.Path.prototype.lineTo=function(a,c){var b=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args;this.curves.push(new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,c)));this.actions.push({action:THREE.PathActions.LINE_TO,args:b})};
rocket-3d/web/js/Three.js:THREE.Path.prototype.quadraticCurveTo=function(a,c,b,d){var g=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args;this.curves.push(new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,c),new THREE.Vector2(b,d)));this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:g})};
rocket-3d/web/js/Three.js:THREE.Path.prototype.bezierCurveTo=function(a,c,b,d,g,f){var e=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args;this.curves.push(new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,c),new THREE.Vector2(b,d),new THREE.Vector2(g,f)));this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:e})};
rocket-3d/web/js/Three.js:THREE.Path.prototype.splineThru=function(a){var c=Array.prototype.slice.call(arguments),b=this.actions[this.actions.length-1].args,b=[new THREE.Vector2(b[b.length-2],b[b.length-1])];Array.prototype.push.apply(b,a);this.curves.push(new THREE.SplineCurve(b));this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:c})};
rocket-3d/web/js/Three.js:THREE.Path.prototype.arc=function(a,c,b,d,g,f){var e=Array.prototype.slice.call(arguments);this.curves.push(new THREE.ArcCurve(a,c,b,d,g,f));this.actions.push({action:THREE.PathActions.ARC,args:e})};THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var c=[],b=0;b<a;b++)c.push(this.getPoint(b/a));return c};
rocket-3d/web/js/Three.js:THREE.Path.prototype.getPoints=function(a,c){var a=a||12,b=[],d,g,f,e,h,i,l,k,o,p,m,r,n;d=0;for(g=this.actions.length;d<g;d++)switch(f=this.actions[d],e=f.action,f=f.args,e){case THREE.PathActions.LINE_TO:b.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];i=f[3];o=f[0];p=f[1];b.length>0?(e=b[b.length-1],m=e.x,r=e.y):(e=this.actions[d-1].args,m=e[e.length-2],r=e[e.length-1]);for(e=1;e<=a;e++)n=e/a,f=THREE.Shape.Utils.b2(n,m,o,h),n=THREE.Shape.Utils.b2(n,r,p,
rocket-3d/web/js/Three.js:i),b.push(new THREE.Vector2(f,n));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];i=f[5];o=f[0];p=f[1];l=f[2];k=f[3];b.length>0?(e=b[b.length-1],m=e.x,r=e.y):(e=this.actions[d-1].args,m=e[e.length-2],r=e[e.length-1]);for(e=1;e<=a;e++)n=e/a,f=THREE.Shape.Utils.b3(n,m,o,l,h),n=THREE.Shape.Utils.b3(n,r,p,k,i),b.push(new THREE.Vector2(f,n));break;case THREE.PathActions.CSPLINE_THRU:e=this.actions[d-1].args;e=[new THREE.Vector2(e[e.length-2],e[e.length-1])];n=a*f[0].length;e=e.concat(f[0]);f=new THREE.SplineCurve(e);
rocket-3d/web/js/Three.js:for(e=1;e<=n;e++)b.push(f.getPointAt(e/n));break;case THREE.PathActions.ARC:e=this.actions[d-1].args;h=f[0];i=f[1];l=f[2];o=f[3];n=f[4];p=!!f[5];k=e[e.length-2];m=e[e.length-1];e.length==0&&(k=m=0);r=n-o;var q=a*2;for(e=1;e<=q;e++)n=e/q,p||(n=1-n),n=o+n*r,f=k+h+l*Math.cos(n),n=m+i+l*Math.sin(n),b.push(new THREE.Vector2(f,n))}c&&b.push(b[0]);return b};THREE.Path.prototype.transform=function(a,c){this.getBoundingBox();return this.getWrapPoints(this.getPoints(c),a)};
rocket-3d/web/js/Three.js:THREE.Path.prototype.nltransform=function(a,c,b,d,g,f){var e=this.getPoints(),h,i,l,k,o;h=0;for(i=e.length;h<i;h++)l=e[h],k=l.x,o=l.y,l.x=a*k+c*o+b,l.y=d*o+g*k+f;return e};
rocket-3d/web/js/Three.js:THREE.Path.prototype.debug=function(a){var c=this.getBoundingBox();a||(a=document.createElement("canvas"),a.setAttribute("width",c.maxX+100),a.setAttribute("height",c.maxY+100),document.body.appendChild(a));c=a.getContext("2d");c.fillStyle="white";c.fillRect(0,0,a.width,a.height);c.strokeStyle="black";c.beginPath();var b,d,g,a=0;for(b=this.actions.length;a<b;a++)d=this.actions[a],g=d.args,d=d.action,d!=THREE.PathActions.CSPLINE_THRU&&c[d].apply(c,g);c.stroke();c.closePath();c.strokeStyle="red";d=
rocket-3d/web/js/Three.js:this.getPoints();a=0;for(b=d.length;a<b;a++)g=d[a],c.beginPath(),c.arc(g.x,g.y,1.5,0,Math.PI*2,!1),c.stroke(),c.closePath()};
rocket-3d/web/js/Three.js:THREE.Path.prototype.toShapes=function(){var a,c,b,d,g=[],f=new THREE.Path;a=0;for(c=this.actions.length;a<c;a++)b=this.actions[a],d=b.args,b=b.action,b==THREE.PathActions.MOVE_TO&&f.actions.length!=0&&(g.push(f),f=new THREE.Path),f[b].apply(f,d);f.actions.length!=0&&g.push(f);if(g.length==0)return[];var e,f=[];if(THREE.Shape.Utils.isClockWise(g[0].getPoints())){a=0;for(c=g.length;a<c;a++)d=g[a],THREE.Shape.Utils.isClockWise(d.getPoints())?(e&&f.push(e),e=new THREE.Shape,e.actions=d.actions,e.curves=
rocket-3d/web/js/Three.js:d.curves):e.holes.push(d);f.push(e)}else{e=new THREE.Shape;a=0;for(c=g.length;a<c;a++)d=g[a],THREE.Shape.Utils.isClockWise(d.getPoints())?(e.actions=d.actions,e.curves=d.curves,f.push(e),e=new THREE.Shape):e.holes.push(d)}return f};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=new THREE.Path;THREE.Shape.prototype.constructor=THREE.Path;THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};
rocket-3d/web/js/Three.js:THREE.Shape.prototype.getPointsHoles=function(a){var c,b=this.holes.length,d=[];for(c=0;c<b;c++)d[c]=this.holes[c].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var c,b=this.holes.length,d=[];for(c=0;c<b;c++)d[c]=this.holes[c].getTransformedSpacedPoints(a,this.bends);return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};
rocket-3d/web/js/Three.js:THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
rocket-3d/web/js/Three.js:THREE.Shape.Utils={removeHoles:function(a,c){var b=a.concat(),d=b.concat(),g,f,e,h,i,l,k,o,p,m,r=[];for(i=0;i<c.length;i++){l=c[i];Array.prototype.push.apply(d,l);f=Number.POSITIVE_INFINITY;for(g=0;g<l.length;g++){p=l[g];m=[];for(o=0;o<b.length;o++)k=b[o],k=p.distanceToSquared(k),m.push(k),k<f&&(f=k,e=g,h=o)}g=h-1>=0?h-1:b.length-1;f=e-1>=0?e-1:l.length-1;var n=[l[e],b[h],b[g]];o=THREE.FontUtils.Triangulate.area(n);var q=[l[e],l[f],b[h]];p=THREE.FontUtils.Triangulate.area(q);m=h;k=e;h+=1;e+=-1;h<
rocket-3d/web/js/Three.js:0&&(h+=b.length);h%=b.length;e<0&&(e+=l.length);e%=l.length;g=h-1>=0?h-1:b.length-1;f=e-1>=0?e-1:l.length-1;n=[l[e],b[h],b[g]];n=THREE.FontUtils.Triangulate.area(n);q=[l[e],l[f],b[h]];q=THREE.FontUtils.Triangulate.area(q);o+p>n+q&&(h=m,e=k,h<0&&(h+=b.length),h%=b.length,e<0&&(e+=l.length),e%=l.length,g=h-1>=0?h-1:b.length-1,f=e-1>=0?e-1:l.length-1);o=b.slice(0,h);p=b.slice(h);m=l.slice(e);k=l.slice(0,e);f=[l[e],l[f],b[h]];r.push([l[e],b[h],b[g]]);r.push(f);b=o.concat(m).concat(k).concat(p)}return{shape:b,
rocket-3d/web/js/Three.js:isolatedPts:r,allpoints:d}},triangulateShape:function(a,c){var b=THREE.Shape.Utils.removeHoles(a,c),d=b.allpoints,g=b.isolatedPts,b=THREE.FontUtils.Triangulate(b.shape,!1),f,e,h,i,l={};f=0;for(e=d.length;f<e;f++)i=d[f].x+":"+d[f].y,l[i]!==void 0&&console.log("Duplicate point",i),l[i]=f;f=0;for(e=b.length;f<e;f++){h=b[f];for(d=0;d<3;d++)i=h[d].x+":"+h[d].y,i=l[i],i!==void 0&&(h[d]=i)}f=0;for(e=g.length;f<e;f++){h=g[f];for(d=0;d<3;d++)i=h[d].x+":"+h[d].y,i=l[i],i!==void 0&&(h[d]=i)}return b.concat(g)},
rocket-3d/web/js/Three.js:isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,c){var b=1-a;return b*b*c},b2p1:function(a,c){return 2*(1-a)*a*c},b2p2:function(a,c){return a*a*c},b2:function(a,c,b,d){return this.b2p0(a,c)+this.b2p1(a,b)+this.b2p2(a,d)},b3p0:function(a,c){var b=1-a;return b*b*b*c},b3p1:function(a,c){var b=1-a;return 3*b*b*a*c},b3p2:function(a,c){return 3*(1-a)*a*a*c},b3p3:function(a,c){return a*a*a*c},b3:function(a,c,b,d,g){return this.b3p0(a,c)+this.b3p1(a,b)+this.b3p2(a,d)+
rocket-3d/web/js/Three.js:this.b3p3(a,g)}};THREE.TextPath=function(a,c){THREE.Path.call(this);this.parameters=c||{};this.set(a)};THREE.TextPath.prototype.set=function(a,c){this.text=a;var c=c||this.parameters,b=c.curveSegments!==void 0?c.curveSegments:4,d=c.font!==void 0?c.font:"helvetiker",g=c.weight!==void 0?c.weight:"normal",f=c.style!==void 0?c.style:"normal";THREE.FontUtils.size=c.size!==void 0?c.size:100;THREE.FontUtils.divisions=b;THREE.FontUtils.face=d;THREE.FontUtils.weight=g;THREE.FontUtils.style=f};
rocket-3d/web/js/Three.js:THREE.TextPath.prototype.toShapes=function(){for(var a=THREE.FontUtils.drawText(this.text).paths,c=[],b=0,d=a.length;b<d;b++)Array.prototype.push.apply(c,a[b].toShapes());return c};
rocket-3d/web/js/Three.js:THREE.AnimationHandler=function(){var a=[],c={},b={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){a.indexOf(b)===-1&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);b!==-1&&a.splice(b,1)},add:function(a){c[a.name]!==void 0&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");c[a.name]=a;if(a.initialized!==!0){for(var b=0;b<a.hierarchy.length;b++){for(var d=0;d<a.hierarchy[b].keys.length;d++){if(a.hierarchy[b].keys[d].time<
rocket-3d/web/js/Three.js:0)a.hierarchy[b].keys[d].time=0;if(a.hierarchy[b].keys[d].rot!==void 0&&!(a.hierarchy[b].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[b].keys[d].rot;a.hierarchy[b].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}}if(a.hierarchy[b].keys[0].morphTargets!==void 0){h={};for(d=0;d<a.hierarchy[b].keys.length;d++)for(var i=0;i<a.hierarchy[b].keys[d].morphTargets.length;i++){var l=a.hierarchy[b].keys[d].morphTargets[i];h[l]=-1}a.hierarchy[b].usedMorphTargets=h;for(d=0;d<a.hierarchy[b].keys.length;d++){var k=
rocket-3d/web/js/Three.js:{};for(l in h){for(i=0;i<a.hierarchy[b].keys[d].morphTargets.length;i++)if(a.hierarchy[b].keys[d].morphTargets[i]===l){k[l]=a.hierarchy[b].keys[d].morphTargetsInfluences[i];break}i===a.hierarchy[b].keys[d].morphTargets.length&&(k[l]=0)}a.hierarchy[b].keys[d].morphTargetsInfluences=k}}for(d=1;d<a.hierarchy[b].keys.length;d++)a.hierarchy[b].keys[d].time===a.hierarchy[b].keys[d-1].time&&(a.hierarchy[b].keys.splice(d,1),d--);for(d=1;d<a.hierarchy[b].keys.length;d++)a.hierarchy[b].keys[d].index=d}d=parseInt(a.length*
rocket-3d/web/js/Three.js:a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(b=0;b<a.hierarchy.length;b++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if(typeof a==="string")return c[a]?c[a]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+a),null)},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)};b.LINEAR=0;b.CATMULLROM=1;b.CATMULLROM_FORWARD=
rocket-3d/web/js/Three.js:2;return b}();THREE.Animation=function(a,c,b,d){this.root=a;this.data=THREE.AnimationHandler.get(c);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=b!==void 0?b:THREE.AnimationHandler.LINEAR;this.JITCompile=d!==void 0?d:!0;this.points=[];this.target=new THREE.Vector3};
rocket-3d/web/js/Three.js:THREE.Animation.prototype.play=function(a,c){if(!this.isPlaying){this.isPlaying=!0;this.loop=a!==void 0?a:!0;this.currentTime=c!==void 0?c:0;var b,d=this.hierarchy.length,g;for(b=0;b<d;b++){g=this.hierarchy[b];if(this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD)g.useQuaternion=!0;g.matrixAutoUpdate=!0;if(g.animationCache===void 0)g.animationCache={},g.animationCache.prevKey={pos:0,rot:0,scl:0},g.animationCache.nextKey={pos:0,rot:0,scl:0},g.animationCache.originalMatrix=g instanceof
rocket-3d/web/js/Three.js:THREE.Bone?g.skinMatrix:g.matrix;var f=g.animationCache.prevKey;g=g.animationCache.nextKey;f.pos=this.data.hierarchy[b].keys[0];f.rot=this.data.hierarchy[b].keys[0];f.scl=this.data.hierarchy[b].keys[0];g.pos=this.getNextKeyWith("pos",b,1);g.rot=this.getNextKeyWith("rot",b,1);g.scl=this.getNextKeyWith("scl",b,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
rocket-3d/web/js/Three.js:THREE.Animation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
rocket-3d/web/js/Three.js:THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.hierarchy.length;a++)if(this.hierarchy[a].animationCache!==void 0)this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix=this.hierarchy[a].animationCache.originalMatrix:this.hierarchy[a].matrix=this.hierarchy[a].animationCache.originalMatrix,delete this.hierarchy[a].animationCache};
rocket-3d/web/js/Three.js:THREE.Animation.prototype.update=function(a){if(this.isPlaying){var c=["pos","rot","scl"],b,d,g,f,e,h,i,l,k=this.data.JIT.hierarchy,o,p;this.currentTime+=a*this.timeScale;p=this.currentTime;o=this.currentTime%=this.data.length;l=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10);for(var m=0,r=this.hierarchy.length;m<r;m++)if(a=this.hierarchy[m],i=a.animationCache,this.JITCompile&&k[m][l]!==void 0)a instanceof THREE.Bone?(a.skinMatrix=k[m][l],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=
rocket-3d/web/js/Three.js:!1):(a.matrix=k[m][l],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!0);else{if(this.JITCompile)a instanceof THREE.Bone?a.skinMatrix=a.animationCache.originalMatrix:a.matrix=a.animationCache.originalMatrix;for(var n=0;n<3;n++){b=c[n];e=i.prevKey[b];h=i.nextKey[b];if(h.time<=p){if(o<p)if(this.loop){e=this.data.hierarchy[m].keys[0];for(h=this.getNextKeyWith(b,m,1);h.time<o;)e=h,h=this.getNextKeyWith(b,m,h.index+1)}else{this.stop();return}else{do e=h,h=this.getNextKeyWith(b,m,h.index+1);while(h.time<
rocket-3d/web/js/Three.js:o)}i.prevKey[b]=e;i.nextKey[b]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(o-e.time)/(h.time-e.time);g=e[b];f=h[b];if(d<0||d>1)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+m),d=d<0?0:1;if(b==="pos")if(b=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)b.x=g[0]+(f[0]-g[0])*d,b.y=g[1]+(f[1]-g[1])*d,b.z=g[2]+(f[2]-g[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)if(this.points[0]=
rocket-3d/web/js/Three.js:this.getPrevKeyWith("pos",m,e.index-1).pos,this.points[1]=g,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",m,h.index+1).pos,d=d*0.33+0.33,g=this.interpolateCatmullRom(this.points,d),b.x=g[0],b.y=g[1],b.z=g[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)d=this.interpolateCatmullRom(this.points,d*1.01),this.target.set(d[0],d[1],d[2]),this.target.subSelf(b),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0)}else if(b===
rocket-3d/web/js/Three.js:"rot")THREE.Quaternion.slerp(g,f,a.quaternion,d);else if(b==="scl")b=a.scale,b.x=g[0]+(f[0]-g[0])*d,b.y=g[1]+(f[1]-g[1])*d,b.z=g[2]+(f[2]-g[2])*d}}if(this.JITCompile&&k[0][l]===void 0){this.hierarchy[0].update(null,!0);for(m=0;m<this.hierarchy.length;m++)k[m][l]=this.hierarchy[m]instanceof THREE.Bone?this.hierarchy[m].skinMatrix.clone():this.hierarchy[m].matrix.clone()}}};
rocket-3d/web/js/Three.js:THREE.Animation.prototype.interpolateCatmullRom=function(a,c){var b=[],d=[],g,f,e,h,i,l;g=(a.length-1)*c;f=Math.floor(g);g-=f;b[0]=f===0?f:f-1;b[1]=f;b[2]=f>a.length-2?f:f+1;b[3]=f>a.length-3?f:f+2;f=a[b[0]];h=a[b[1]];i=a[b[2]];l=a[b[3]];b=g*g;e=g*b;d[0]=this.interpolate(f[0],h[0],i[0],l[0],g,b,e);d[1]=this.interpolate(f[1],h[1],i[1],l[1],g,b,e);d[2]=this.interpolate(f[2],h[2],i[2],l[2],g,b,e);return d};
rocket-3d/web/js/Three.js:THREE.Animation.prototype.interpolate=function(a,c,b,d,g,f,e){a=(b-a)*0.5;d=(d-c)*0.5;return(2*(c-b)+a+d)*e+(-3*(c-b)-2*a-d)*f+a*g+c};THREE.Animation.prototype.getNextKeyWith=function(a,c,b){var d=this.data.hierarchy[c].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?b=b<d.length-1?b:d.length-1:b%=d.length;b<d.length;b++)if(d[b][a]!==void 0)return d[b];return this.data.hierarchy[c].keys[0]};
rocket-3d/web/js/Three.js:THREE.Animation.prototype.getPrevKeyWith=function(a,c,b){for(var d=this.data.hierarchy[c].keys,b=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?b>0?b:0:b>=0?b:b+d.length;b>=0;b--)if(d[b][a]!==void 0)return d[b];return this.data.hierarchy[c].keys[d.length-1]};
rocket-3d/web/js/Three.js:THREE.CubeCamera=function(a,c,b,d){this.heightOffset=b;this.position=new THREE.Vector3(0,b,0);this.cameraPX=new THREE.PerspectiveCamera(90,1,a,c);this.cameraNX=new THREE.PerspectiveCamera(90,1,a,c);this.cameraPY=new THREE.PerspectiveCamera(90,1,a,c);this.cameraNY=new THREE.PerspectiveCamera(90,1,a,c);this.cameraPZ=new THREE.PerspectiveCamera(90,1,a,c);this.cameraNZ=new THREE.PerspectiveCamera(90,1,a,c);this.cameraPX.position=this.position;this.cameraNX.position=this.position;this.cameraPY.position=
rocket-3d/web/js/Three.js:this.position;this.cameraNY.position=this.position;this.cameraPZ.position=this.position;this.cameraNZ.position=this.position;this.cameraPX.up.set(0,-1,0);this.cameraNX.up.set(0,-1,0);this.cameraPY.up.set(0,0,1);this.cameraNY.up.set(0,0,-1);this.cameraPZ.up.set(0,-1,0);this.cameraNZ.up.set(0,-1,0);this.targetPX=new THREE.Vector3(0,0,0);this.targetNX=new THREE.Vector3(0,0,0);this.targetPY=new THREE.Vector3(0,0,0);this.targetNY=new THREE.Vector3(0,0,0);this.targetPZ=new THREE.Vector3(0,0,0);this.targetNZ=
rocket-3d/web/js/Three.js:new THREE.Vector3(0,0,0);this.renderTarget=new THREE.WebGLRenderTargetCube(d,d,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updatePosition=function(a){this.position.copy(a);this.position.y+=this.heightOffset;this.targetPX.copy(this.position);this.targetNX.copy(this.position);this.targetPY.copy(this.position);this.targetNY.copy(this.position);this.targetPZ.copy(this.position);this.targetNZ.copy(this.position);this.targetPX.x+=1;this.targetNX.x-=1;this.targetPY.y+=
rocket-3d/web/js/Three.js:1;this.targetNY.y-=1;this.targetPZ.z+=1;this.targetNZ.z-=1;this.cameraPX.lookAt(this.targetPX);this.cameraNX.lookAt(this.targetNX);this.cameraPY.lookAt(this.targetPY);this.cameraNY.lookAt(this.targetNY);this.cameraPZ.lookAt(this.targetPZ);this.cameraNZ.lookAt(this.targetNZ)};this.updateCubeMap=function(a,b){var c=this.renderTarget;c.activeCubeFace=0;a.render(b,this.cameraPX,c);c.activeCubeFace=1;a.render(b,this.cameraNX,c);c.activeCubeFace=2;a.render(b,this.cameraPY,c);c.activeCubeFace=3;a.render(b,
rocket-3d/web/js/Three.js:this.cameraNY,c);c.activeCubeFace=4;a.render(b,this.cameraPZ,c);c.activeCubeFace=5;a.render(b,this.cameraNZ,c)}};THREE.FirstPersonCamera=function(){console.warn("DEPRECATED: FirstPersonCamera() is FirstPersonControls().")};THREE.PathCamera=function(){console.warn("DEPRECATED: PathCamera() is PathControls().")};THREE.FlyCamera=function(){console.warn("DEPRECATED: FlyCamera() is FlyControls().")};THREE.RollCamera=function(){console.warn("DEPRECATED: RollCamera() is RollControls().")};
rocket-3d/web/js/Three.js:THREE.TrackballCamera=function(){console.warn("DEPRECATED: TrackballCamera() is TrackballControls().")};THREE.CombinedCamera=function(a,c,b,d,g,f,e){THREE.Camera.call(this);this.fov=b;this.left=-a/2;this.right=a/2;this.top=c/2;this.bottom=-c/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,c/2,c/-2,f,e);this.cameraP=new THREE.PerspectiveCamera(b,a/c,d,g);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=new THREE.Camera;THREE.CombinedCamera.prototype.constructor=THREE.CoolCamera;
rocket-3d/web/js/Three.js:THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPersepectiveMode=!0;this.inOrthographicMode=!1};
rocket-3d/web/js/Three.js:THREE.CombinedCamera.prototype.toOrthographic=function(){var a=Math.tan(this.fov/2)*((this.cameraP.near+this.cameraP.far)/2),c=2*a*this.cameraP.aspect/2;a/=this.zoom;c/=this.zoom;this.cameraO.left=-c;this.cameraO.right=c;this.cameraO.top=a;this.cameraO.bottom=-a;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPersepectiveMode=!1;this.inOrthographicMode=!0};
rocket-3d/web/js/Three.js:THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.setLens=function(a,c){c||(c=43.25);var b=2*Math.atan(c/(a*2));b*=180/Math.PI;this.setFov(b);return b};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};
rocket-3d/web/js/Three.js:THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
rocket-3d/web/js/Three.js:THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
rocket-3d/web/js/Three.js:THREE.FirstPersonControls=function(a,c){function b(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=c!==void 0?c:document;this.movementSpeed=1;this.lookSpeed=0.005;this.noFly=!1;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
rocket-3d/web/js/Three.js:0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1));this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=
rocket-3d/web/js/Three.js:!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=
rocket-3d/web/js/Three.js:function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=
rocket-3d/web/js/Three.js:!1;break;case 70:this.moveDown=!1}};this.update=function(a){var b=0;if(!this.freeze){if(this.heightSpeed){var c=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin;this.autoSpeedFactor=a*c*this.heightCoef}else this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&
rocket-3d/web/js/Three.js:this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);c=a*this.lookSpeed;this.activeLook||(c=0);this.lon+=this.mouseX*c;this.lookVertical&&(this.lat-=this.mouseY*c);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;a=this.target;b=this.object.position;a.x=b.x+100*Math.sin(this.phi)*Math.cos(this.theta);a.y=b.y+100*Math.cos(this.phi);a.z=b.z+100*Math.sin(this.phi)*Math.sin(this.theta)}a=
rocket-3d/web/js/Three.js:1;this.constrainVertical&&(a=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*c;this.lookVertical&&(this.lat-=this.mouseY*c*a);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;if(this.constrainVertical)this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax);a=this.target;b=this.object.position;a.x=b.x+100*Math.sin(this.phi)*Math.cos(this.theta);a.y=b.y+100*Math.cos(this.phi);a.z=b.z+100*Math.sin(this.phi)*
rocket-3d/web/js/Three.js:Math.sin(this.theta);this.object.lookAt(a)};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",b(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",b(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",b(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",b(this,this.onKeyDown),!1);this.domElement.addEventListener("keyup",b(this,this.onKeyUp),!1)};
rocket-3d/web/js/Three.js:THREE.PathControls=function(a,c){function b(a){if((a*=2)<1)return 0.5*a*a;return-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function g(a,b,c,d){var e={name:c,fps:0.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),h=b.getLength(),q=g.length,t=0;f=q-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<q-1;f++)t=d*h.chunks[f]/h.total,b.keys[f]={time:t,pos:g[f]};e.hierarchy[0]=
rocket-3d/web/js/Three.js:b;THREE.AnimationHandler.add(e);return new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function f(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),e.vertices[c]=new THREE.Vertex(new THREE.Vector3(d.x,d.y,d.z));return e}this.object=a;this.domElement=c!==void 0?c:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=
rocket-3d/web/js/Three.js:new THREE.Object3D;this.debugDummy=new THREE.Object3D;this.animationParent=new THREE.Object3D;this.lookSpeed=0.005;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=
rocket-3d/web/js/Three.js:this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1));var e=Math.PI*2,h=Math.PI/180;this.update=function(a){var c;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%e;this.phi=a>=0?a:a+e;c=this.verticalAngleMap.srcRange;
rocket-3d/web/js/Three.js:a=this.verticalAngleMap.dstRange;c=THREE.Math.mapLinear(this.phi,c[0],c[1],a[0],a[1]);var d=a[1]-a[0];this.phi=b((c-a[0])/d)*d+a[0];c=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;c=THREE.Math.mapLinear(this.theta,c[0],c[1],a[0],a[1]);d=a[1]-a[0];this.theta=b((c-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};this.onMouseMove=
rocket-3d/web/js/Three.js:function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),
rocket-3d/web/js/Three.js:c=new THREE.CubeGeometry(10,10,20),e=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(e,b);a.position.set(0,10,0);this.animation=g(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=g(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=
rocket-3d/web/js/Three.js:this.debugPath,b=this.spline,e=f(b,10),c=f(b,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),e=new THREE.Line(e,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));e.scale.set(1,1,1);a.add(e);c.scale.set(1,1,1);a.add(c);for(var e=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),m=0;m<b.points.length;m++)c=new THREE.Mesh(e,h),c.position.copy(b.points[m]),a.add(c)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),
rocket-3d/web/js/Three.js:!1)}};THREE.PathControlsIdCounter=0;
rocket-3d/web/js/Three.js:THREE.FlyControls=function(a,c){function b(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=c!==void 0?c:document;c&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.005;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,
rocket-3d/web/js/Three.js:0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if(typeof this[a.type]=="function")this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=
rocket-3d/web/js/Three.js:1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=
rocket-3d/web/js/Three.js:0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
rocket-3d/web/js/Three.js:!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||this.mouseStatus>0){var b=this.getContainerDimensions(),c=b.size[0]/2,e=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-e)/e;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=
rocket-3d/web/js/Three.js:!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed;a*=this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
rocket-3d/web/js/Three.js:this.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
rocket-3d/web/js/Three.js:-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",b(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",b(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",b(this,
rocket-3d/web/js/Three.js:this.mouseup),!1);this.domElement.addEventListener("keydown",b(this,this.keydown),!1);this.domElement.addEventListener("keyup",b(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};
rocket-3d/web/js/Three.js:THREE.RollControls=function(a,c){this.object=a;this.domElement=c!==void 0?c:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var b=new THREE.Vector3,d=new THREE.Vector3,g=new THREE.Vector3,f=new THREE.Matrix4,e=!1,h=1,i=0,l=0,k=0,o=0,p=0,m=window.innerWidth/2,r=window.innerHeight/2;this.update=function(a){if(this.mouseLook){var c=a*this.lookSpeed;
rocket-3d/web/js/Three.js:this.rotateHorizontally(c*o);this.rotateVertically(c*p)}c=a*this.movementSpeed;this.object.translateZ(-c*(i>0||this.autoForward&&!(i<0)?1:i));this.object.translateX(c*l);this.object.translateY(c*k);e&&(this.roll+=this.rollSpeed*a*h);if(this.forward.y>this.constrainVertical[1])this.forward.y=this.constrainVertical[1],this.forward.normalize();else if(this.forward.y<this.constrainVertical[0])this.forward.y=this.constrainVertical[0],this.forward.normalize();g.copy(this.forward);d.set(0,1,0);b.cross(d,
rocket-3d/web/js/Three.js:g).normalize();d.cross(g,b).normalize();this.object.matrix.n11=b.x;this.object.matrix.n12=d.x;this.object.matrix.n13=g.x;this.object.matrix.n21=b.y;this.object.matrix.n22=d.y;this.object.matrix.n23=g.y;this.object.matrix.n31=b.z;this.object.matrix.n32=d.z;this.object.matrix.n33=g.z;f.identity();f.n11=Math.cos(this.roll);f.n12=-Math.sin(this.roll);f.n21=Math.sin(this.roll);f.n22=Math.cos(this.roll);this.object.matrix.multiplySelf(f);this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.n14=this.object.position.x;
rocket-3d/web/js/Three.js:this.object.matrix.n24=this.object.position.y;this.object.matrix.n34=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.n11*a;this.object.position.y+=this.object.matrix.n21*a;this.object.position.z+=this.object.matrix.n31*a};this.translateY=function(a){this.object.position.x+=this.object.matrix.n12*a;this.object.position.y+=this.object.matrix.n22*a;this.object.position.z+=this.object.matrix.n32*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.n13*
rocket-3d/web/js/Three.js:a;this.object.position.y-=this.object.matrix.n23*a;this.object.position.z-=this.object.matrix.n33*a};this.rotateHorizontally=function(a){b.set(this.object.matrix.n11,this.object.matrix.n21,this.object.matrix.n31);b.multiplyScalar(a);this.forward.subSelf(b);this.forward.normalize()};this.rotateVertically=function(a){d.set(this.object.matrix.n12,this.object.matrix.n22,this.object.matrix.n32);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",
rocket-3d/web/js/Three.js:function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){o=(a.clientX-m)/window.innerWidth;p=(a.clientY-r)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=1;break;case 2:i=-1}},!1);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=0;break;case 2:i=0}},!1);this.domElement.addEventListener("keydown",
rocket-3d/web/js/Three.js:function(a){switch(a.keyCode){case 38:case 87:i=1;break;case 37:case 65:l=-1;break;case 40:case 83:i=-1;break;case 39:case 68:l=1;break;case 81:e=!0;h=1;break;case 69:e=!0;h=-1;break;case 82:k=1;break;case 70:k=-1}},!1);this.domElement.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:i=0;break;case 37:case 65:l=0;break;case 40:case 83:i=0;break;case 39:case 68:l=0;break;case 81:e=!1;break;case 69:e=!1;break;case 82:k=0;break;case 70:k=0}},!1)};
rocket-3d/web/js/Three.js:THREE.TrackballControls=function(a,c){var b=this,d={NONE:-1,ROTATE:0,ZOOM:1,PAN:2};this.object=a;this.domElement=c!==void 0?c:document;this.enabled=!0;this.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];
rocket-3d/web/js/Three.js:this.target=new THREE.Vector3(0,0,0);var g=!1,f=d.NONE,e=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,l=new THREE.Vector2,k=new THREE.Vector2,o=new THREE.Vector2,p=new THREE.Vector2;this.handleEvent=function(a){if(typeof this[a.type]=="function")this[a.type](a)};this.getMouseOnScreen=function(a,c){return new THREE.Vector2((a-b.screen.offsetLeft)/b.radius*0.5,(c-b.screen.offsetTop)/b.radius*0.5)};this.getMouseProjectionOnBall=function(a,c){var d=new THREE.Vector3((a-b.screen.width*0.5-
rocket-3d/web/js/Three.js:b.screen.offsetLeft)/b.radius,(b.screen.height*0.5+b.screen.offsetTop-c)/b.radius,0),f=d.length();f>1?d.normalize():d.z=Math.sqrt(1-f*f);e.copy(b.object.position).subSelf(b.target);f=b.object.up.clone().setLength(d.y);f.addSelf(b.object.up.clone().crossSelf(e).setLength(d.x));f.addSelf(e.setLength(d.z));return f};this.rotateCamera=function(){var a=Math.acos(h.dot(i)/h.length()/i.length());if(a){var c=(new THREE.Vector3).cross(h,i).normalize(),d=new THREE.Quaternion;a*=b.rotateSpeed;d.setFromAxisAngle(c,
rocket-3d/web/js/Three.js:-a);d.multiplyVector3(e);d.multiplyVector3(b.object.up);d.multiplyVector3(i);b.staticMoving?h=i:(d.setFromAxisAngle(c,a*(b.dynamicDampingFactor-1)),d.multiplyVector3(h))}};this.zoomCamera=function(){var a=1+(k.y-l.y)*b.zoomSpeed;a!==1&&a>0&&(e.multiplyScalar(a),b.staticMoving?l=k:l.y+=(k.y-l.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=p.clone().subSelf(o);if(a.lengthSq()){a.multiplyScalar(e.length()*b.panSpeed);var c=e.clone().crossSelf(b.object.up).setLength(a.x);c.addSelf(b.object.up.clone().setLength(a.y));
rocket-3d/web/js/Three.js:b.object.position.addSelf(c);b.target.addSelf(c);b.staticMoving?o=p:o.addSelf(a.sub(p,o).multiplyScalar(b.dynamicDampingFactor))}};this.checkDistances=function(){if(!b.noZoom||!b.noPan)b.object.position.lengthSq()>b.maxDistance*b.maxDistance&&b.object.position.setLength(b.maxDistance),e.lengthSq()<b.minDistance*b.minDistance&&b.object.position.add(b.target,e.setLength(b.minDistance))};this.update=function(){e.copy(b.object.position).subSelf(this.target);b.noRotate||b.rotateCamera();b.noZoom||b.zoomCamera();
rocket-3d/web/js/Three.js:b.noPan||b.panCamera();b.object.position.add(b.target,e);b.checkDistances();b.object.lookAt(b.target)};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){b.enabled&&(g&&(h=i=b.getMouseProjectionOnBall(a.clientX,a.clientY),l=k=b.getMouseOnScreen(a.clientX,a.clientY),o=p=b.getMouseOnScreen(a.clientX,a.clientY),g=!1),f!==d.NONE&&(f===d.ROTATE&&!b.noRotate?i=b.getMouseProjectionOnBall(a.clientX,a.clientY):f===d.ZOOM&&
rocket-3d/web/js/Three.js:!b.noZoom?k=b.getMouseOnScreen(a.clientX,a.clientY):f===d.PAN&&!b.noPan&&(p=b.getMouseOnScreen(a.clientX,a.clientY))))},!1);this.domElement.addEventListener("mousedown",function(a){if(b.enabled&&(a.preventDefault(),a.stopPropagation(),f===d.NONE))f=a.button,f===d.ROTATE&&!b.noRotate?h=i=b.getMouseProjectionOnBall(a.clientX,a.clientY):f===d.ZOOM&&!b.noZoom?l=k=b.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(o=p=b.getMouseOnScreen(a.clientX,a.clientY))},!1);this.domElement.addEventListener("mouseup",
rocket-3d/web/js/Three.js:function(a){if(b.enabled)a.preventDefault(),a.stopPropagation(),f=d.NONE},!1);window.addEventListener("keydown",function(a){if(b.enabled&&f===d.NONE){if(a.keyCode===b.keys[d.ROTATE]&&!b.noRotate)f=d.ROTATE;else if(a.keyCode===b.keys[d.ZOOM]&&!b.noZoom)f=d.ZOOM;else if(a.keyCode===b.keys[d.PAN]&&!b.noPan)f=d.PAN;f!==d.NONE&&(g=!0)}},!1);window.addEventListener("keyup",function(){if(b.enabled&&f!==d.NONE)f=d.NONE},!1)};
rocket-3d/web/js/Three.js:THREE.CubeGeometry=function(a,c,b,d,g,f,e,h){function i(a,b,c,e,h,i,k,m){var n,o=d||1,p=g||1,q=h/2,r=i/2,t=l.vertices.length;if(a==="x"&&b==="y"||a==="y"&&b==="x")n="z";else if(a==="x"&&b==="z"||a==="z"&&b==="x")n="y",p=f||1;else if(a==="z"&&b==="y"||a==="y"&&b==="z")n="x",o=f||1;var u=o+1,w=p+1,G=h/o,I=i/p,M=new THREE.Vector3;M[n]=k>0?1:-1;for(h=0;h<w;h++)for(i=0;i<u;i++){var S=new THREE.Vector3;S[a]=(i*G-q)*c;S[b]=(h*I-r)*e;S[n]=k;l.vertices.push(new THREE.Vertex(S))}for(h=0;h<p;h++)for(i=0;i<o;i++)a=
rocket-3d/web/js/Three.js:new THREE.Face4(i+u*h+t,i+u*(h+1)+t,i+1+u*(h+1)+t,i+1+u*h+t),a.normal.copy(M),a.vertexNormals.push(M.clone(),M.clone(),M.clone(),M.clone()),a.materialIndex=m,l.faces.push(a),l.faceVertexUvs[0].push([new THREE.UV(i/o,h/p),new THREE.UV(i/o,(h+1)/p),new THREE.UV((i+1)/o,(h+1)/p),new THREE.UV((i+1)/o,h/p)])}THREE.Geometry.call(this);var l=this,k=a/2,o=c/2,p=b/2,m,r,n,q,t,w;if(e!==void 0){if(e instanceof Array)this.materials=e;else{this.materials=[];for(m=0;m<6;m++)this.materials.push(e)}m=0;q=1;r=2;t=
rocket-3d/web/js/Three.js:3;n=4;w=5}else this.materials=[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(h!=void 0)for(var u in h)this.sides[u]!=void 0&&(this.sides[u]=h[u]);this.sides.px&&i("z","y",-1,-1,b,c,k,m);this.sides.nx&&i("z","y",1,-1,b,c,-k,q);this.sides.py&&i("x","z",1,1,a,b,o,r);this.sides.ny&&i("x","z",1,-1,a,b,-o,t);this.sides.pz&&i("x","y",1,-1,a,c,p,n);this.sides.nz&&i("x","y",-1,-1,a,c,-p,w);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=new THREE.Geometry;
rocket-3d/web/js/Three.js:THREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry;
rocket-3d/web/js/Three.js:THREE.CylinderGeometry=function(a,c,b,d,g,f){THREE.Geometry.call(this);var a=a!=null?a:20,c=c!=null?c:20,b=b||100,e=b/2,d=d||8,g=g||1,h,i,l=[],k=[];for(i=0;i<=g;i++){var o=[],p=[],m=i/g,r=m*(c-a)+a;for(h=0;h<=d;h++){var n=h/d;this.vertices.push(new THREE.Vertex(new THREE.Vector3(r*Math.sin(n*Math.PI*2),-m*b+e,r*Math.cos(n*Math.PI*2))));o.push(this.vertices.length-1);p.push(new THREE.UV(n,m))}l.push(o);k.push(p)}for(i=0;i<g;i++)for(h=0;h<d;h++){var b=l[i][h],o=l[i+1][h],p=l[i+1][h+1],m=l[i][h+1],r=
rocket-3d/web/js/Three.js:this.vertices[b].position.clone().setY(0).normalize(),n=this.vertices[o].position.clone().setY(0).normalize(),q=this.vertices[p].position.clone().setY(0).normalize(),t=this.vertices[m].position.clone().setY(0).normalize(),w=k[i][h].clone(),u=k[i+1][h].clone(),B=k[i+1][h+1].clone(),F=k[i][h+1].clone();this.faces.push(new THREE.Face4(b,o,p,m,[r,n,q,t]));this.faceVertexUvs[0].push([w,u,B,F])}if(!f&&a>0){this.vertices.push(new THREE.Vertex(new THREE.Vector3(0,e,0)));for(h=0;h<d;h++)b=l[0][h],o=l[0][h+
rocket-3d/web/js/Three.js:1],p=this.vertices.length-1,r=new THREE.Vector3(0,1,0),n=new THREE.Vector3(0,1,0),q=new THREE.Vector3(0,1,0),w=k[0][h].clone(),u=k[0][h+1].clone(),B=new THREE.UV(u.u,0),this.faces.push(new THREE.Face3(b,o,p,[r,n,q])),this.faceVertexUvs[0].push([w,u,B])}if(!f&&c>0){this.vertices.push(new THREE.Vertex(new THREE.Vector3(0,-e,0)));for(h=0;h<d;h++)b=l[i][h+1],o=l[i][h],p=this.vertices.length-1,r=new THREE.Vector3(0,-1,0),n=new THREE.Vector3(0,-1,0),q=new THREE.Vector3(0,-1,0),w=k[i][h+1].clone(),u=k[i][h].clone(),
rocket-3d/web/js/Three.js:B=new THREE.UV(u.u,1),this.faces.push(new THREE.Face3(b,o,p,[r,n,q])),this.faceVertexUvs[0].push([w,u,B])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=new THREE.Geometry;THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;
rocket-3d/web/js/Three.js:THREE.ExtrudeGeometry=function(a,c){if(typeof a!=="undefined"){THREE.Geometry.call(this);var a=a instanceof Array?a:[a],b,d=a.length,g;this.shapebb=a[d-1].getBoundingBox();for(b=0;b<d;b++)g=a[b],this.addShape(g,c);this.computeCentroids();this.computeFaceNormals()}};THREE.ExtrudeGeometry.prototype=new THREE.Geometry;THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;
rocket-3d/web/js/Three.js:THREE.ExtrudeGeometry.prototype.addShape=function(a,c){function b(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);i.copy(a).addSelf(g);if(h.equals(i))return g.clone();
rocket-3d/web/js/Three.js:h.copy(b).addSelf(f);i.copy(c).addSelf(g);f=d.dot(g);g=i.subSelf(h).dot(g);f===0&&(console.log("Either infinite or no solutions!"),g===0?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;if(g<0)return b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=Math.PI*2),a=(b+a)/2,new THREE.Vector2(-Math.cos(a),-Math.sin(a));return d.multiplyScalar(g).addSelf(h).subSelf(a).clone()}function g(a){for(s=a.length;--s>=0;){S=s;ba=s-1;ba<0&&(ba=a.length-1);for(var b=
rocket-3d/web/js/Three.js:0,c=m+k*2,b=0;b<c;b++){var d=O*b,e=O*(b+1),f=W+S+d,g=W+S+e,l=f,d=W+ba+d,e=W+ba+e,n=g;l+=J;d+=J;e+=J;n+=J;v.faces.push(new THREE.Face4(l,d,e,n,null,null,B));B&&(l=b/c,d=(b+1)/c,e=h+i*2,f=(v.vertices[f].position.z+i)/e,g=(v.vertices[g].position.z+i)/e,v.faceVertexUvs[0].push([new THREE.UV(f,l),new THREE.UV(g,l),new THREE.UV(g,d),new THREE.UV(f,d)]))}}}function f(a,b,c){v.vertices.push(new THREE.Vertex(new THREE.Vector3(a,b,c)))}function e(a,b,c){a+=J;b+=J;c+=J;v.faces.push(new THREE.Face3(a,b,c,null,
rocket-3d/web/js/Three.js:null,u));if(u){var d=F.maxY,e=F.maxX,f=v.vertices[b].position.x,b=v.vertices[b].position.y,g=v.vertices[c].position.x,c=v.vertices[c].position.y;v.faceVertexUvs[0].push([new THREE.UV(v.vertices[a].position.x/e,v.vertices[a].position.y/d),new THREE.UV(f/e,b/d),new THREE.UV(g/e,c/d)])}}var h=c.amount!==void 0?c.amount:100,i=c.bevelThickness!==void 0?c.bevelThickness:6,l=c.bevelSize!==void 0?c.bevelSize:i-2,k=c.bevelSegments!==void 0?c.bevelSegments:3,o=c.bevelEnabled!==void 0?c.bevelEnabled:!0,p=c.curveSegments!==
rocket-3d/web/js/Three.js:void 0?c.curveSegments:12,m=c.steps!==void 0?c.steps:1,r=c.bendPath,n=c.extrudePath,q,t=!1,w=c.useSpacedPoints!==void 0?c.useSpacedPoints:!1,u=c.material,B=c.extrudeMaterial,F=this.shapebb;if(n)q=n.getPoints(p),m=q.length,t=!0,o=!1;o||(l=i=k=0);var A,x,y,v=this,J=this.vertices.length;r&&a.addWrapPath(r);p=w?a.extractAllSpacedPoints(p):a.extractAllPoints(p);r=p.shape;p=p.holes;if(n=!THREE.Shape.Utils.isClockWise(r)){r=r.reverse();x=0;for(y=p.length;x<y;x++)A=p[x],THREE.Shape.Utils.isClockWise(A)&&
rocket-3d/web/js/Three.js:(p[x]=A.reverse());n=!1}n=THREE.Shape.Utils.triangulateShape(r,p);w=r;x=0;for(y=p.length;x<y;x++)A=p[x],r=r.concat(A);var s,E,R,U,K,P,O=r.length,aa=n.length,H=[];s=0;E=w.length;S=E-1;for(ba=s+1;s<E;s++,S++,ba++)S===E&&(S=0),ba===E&&(ba=0),H[s]=d(w[s],w[S],w[ba]);var G=[],I,M=H.concat();x=0;for(y=p.length;x<y;x++){A=p[x];I=[];s=0;E=A.length;S=E-1;for(ba=s+1;s<E;s++,S++,ba++)S===E&&(S=0),ba===E&&(ba=0),I[s]=d(A[s],A[S],A[ba]);G.push(I);M=M.concat(I)}for(R=0;R<k;R++){U=R/k;K=i*(1-U);U=l*Math.sin(U*Math.PI/
rocket-3d/web/js/Three.js:2);s=0;for(E=w.length;s<E;s++)P=b(w[s],H[s],U),f(P.x,P.y,-K);x=0;for(y=p.length;x<y;x++){A=p[x];I=G[x];s=0;for(E=A.length;s<E;s++)P=b(A[s],I[s],U),f(P.x,P.y,-K)}}U=l;for(s=0;s<O;s++)P=o?b(r[s],M[s],U):r[s],t?f(P.x,P.y+q[0].y,q[0].x):f(P.x,P.y,0);for(R=1;R<=m;R++)for(s=0;s<O;s++)P=o?b(r[s],M[s],U):r[s],t?f(P.x,P.y+q[R-1].y,q[R-1].x):f(P.x,P.y,h/m*R);for(R=k-1;R>=0;R--){U=R/k;K=i*(1-U);U=l*Math.sin(U*Math.PI/2);s=0;for(E=w.length;s<E;s++)P=b(w[s],H[s],U),f(P.x,P.y,h+K);x=0;for(y=p.length;x<y;x++){A=
rocket-3d/web/js/Three.js:p[x];I=G[x];s=0;for(E=A.length;s<E;s++)P=b(A[s],I[s],U),t?f(P.x,P.y+q[m-1].y,q[m-1].x+K):f(P.x,P.y,h+K)}}if(o){o=O*0;for(s=0;s<aa;s++)l=n[s],e(l[2]+o,l[1]+o,l[0]+o);o=O*(m+k*2);for(s=0;s<aa;s++)l=n[s],e(l[0]+o,l[1]+o,l[2]+o)}else{for(s=0;s<aa;s++)l=n[s],e(l[2],l[1],l[0]);for(s=0;s<aa;s++)l=n[s],e(l[0]+O*m,l[1]+O*m,l[2]+O*m)}var S,ba,W=0;g(w);W+=w.length;x=0;for(y=p.length;x<y;x++)A=p[x],g(A),W+=A.length};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;
rocket-3d/web/js/Three.js:THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;
rocket-3d/web/js/Three.js:THREE.IcosahedronGeometry=function(a){function c(a,b,c){var d=Math.sqrt(a*a+b*b+c*c);return g.vertices.push(new THREE.Vertex(new THREE.Vector3(a/d,b/d,c/d)))-1}function b(a,b,c,d){var e=g.vertices[a].position,f=g.vertices[b].position,h=g.vertices[c].position,a=new THREE.Face3(a,b,c);a.vertexNormals.push(e.clone().normalize(),f.clone().normalize(),h.clone().normalize());d.faces.push(a);d.faceVertexUvs[0].push([new THREE.UV(1-(Math.atan2(e.z,e.x)+Math.PI)%Math.PI/Math.PI*0.5,0.5-e.y/2),new THREE.UV(1-
rocket-3d/web/js/Three.js:(Math.atan2(f.z,f.x)+Math.PI)%Math.PI/Math.PI*0.5,0.5-f.y/2),new THREE.UV(1-(Math.atan2(h.z,h.x)+Math.PI)%Math.PI/Math.PI*0.5,0.5-h.y/2)])}function d(a,b){var d=g.vertices[a].position,e=g.vertices[b].position;return c((d.x+e.x)/2,(d.y+e.y)/2,(d.z+e.z)/2)}var g=this,f=new THREE.Geometry;this.subdivisions=a||0;THREE.Geometry.call(this);a=(1+Math.sqrt(5))/2;c(-1,a,0);c(1,a,0);c(-1,-a,0);c(1,-a,0);c(0,-1,a);c(0,1,a);c(0,-1,-a);c(0,1,-a);c(a,0,-1);c(a,0,1);c(-a,0,-1);c(-a,0,1);b(0,11,5,f);b(0,5,1,f);b(0,
rocket-3d/web/js/Three.js:1,7,f);b(0,7,10,f);b(0,10,11,f);b(1,5,9,f);b(5,11,4,f);b(11,10,2,f);b(10,7,6,f);b(7,1,8,f);b(3,9,4,f);b(3,4,2,f);b(3,2,6,f);b(3,6,8,f);b(3,8,9,f);b(4,9,5,f);b(2,4,11,f);b(6,2,10,f);b(8,6,7,f);b(9,8,1,f);for(var e=0;e<this.subdivisions;e++){var a=new THREE.Geometry,h;for(h in f.faces){var i=d(f.faces[h].a,f.faces[h].b),l=d(f.faces[h].b,f.faces[h].c),k=d(f.faces[h].c,f.faces[h].a);b(f.faces[h].a,i,k,a);b(f.faces[h].b,l,i,a);b(f.faces[h].c,k,l,a);b(i,l,k,a)}f.faces=a.faces;f.faceVertexUvs[0]=a.faceVertexUvs[0]}g.faces=
rocket-3d/web/js/Three.js:f.faces;g.faceVertexUvs[0]=f.faceVertexUvs[0];this.computeCentroids();this.computeFaceNormals()};THREE.IcosahedronGeometry.prototype=new THREE.Geometry;THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;
rocket-3d/web/js/Three.js:THREE.LatheGeometry=function(a,c,b){THREE.Geometry.call(this);this.steps=c||12;this.angle=b||2*Math.PI;for(var c=this.angle/this.steps,b=[],d=[],g=[],f=[],e=(new THREE.Matrix4).setRotationZ(c),h=0;h<a.length;h++)this.vertices.push(new THREE.Vertex(a[h])),b[h]=a[h].clone(),d[h]=this.vertices.length-1;for(var i=0;i<=this.angle+0.001;i+=c){for(h=0;h<b.length;h++)i<this.angle?(b[h]=e.multiplyVector3(b[h].clone()),this.vertices.push(new THREE.Vertex(b[h])),g[h]=this.vertices.length-1):g=f;i==0&&(f=d);
rocket-3d/web/js/Three.js:for(h=0;h<d.length-1;h++)this.faces.push(new THREE.Face4(g[h],g[h+1],d[h+1],d[h])),this.faceVertexUvs[0].push([new THREE.UV(1-i/this.angle,h/a.length),new THREE.UV(1-i/this.angle,(h+1)/a.length),new THREE.UV(1-(i-c)/this.angle,(h+1)/a.length),new THREE.UV(1-(i-c)/this.angle,h/a.length)]);d=g;g=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=new THREE.Geometry;THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;
rocket-3d/web/js/Three.js:THREE.OctahedronGeometry=function(a,c){function b(b){var c=b.clone().normalize(),c=new THREE.Vertex(c.clone().multiplyScalar(a));c.index=e.vertices.push(c)-1;c.uv=new THREE.UV(Math.atan2(b.z,-b.x)/2/Math.PI+0.5,Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))/Math.PI+0.5);return c}function d(a,b,c,h){h<1?(h=new THREE.Face3(a.index,b.index,c.index,[a.position,b.position,c.position]),h.centroid.addSelf(a.position).addSelf(b.position).addSelf(c.position).divideScalar(3),h.normal=h.centroid.clone().normalize(),
rocket-3d/web/js/Three.js:e.faces.push(h),h=Math.atan2(h.centroid.z,-h.centroid.x),e.faceVertexUvs[0].push([f(a.uv,a.position,h),f(b.uv,b.position,h),f(c.uv,c.position,h)])):(h-=1,d(a,g(a,b),g(a,c),h),d(g(a,b),b,g(b,c),h),d(g(a,c),g(b,c),c,h),d(g(a,b),g(b,c),g(a,c),h))}function g(a,c){h[a.index]||(h[a.index]=[]);h[c.index]||(h[c.index]=[]);var d=h[a.index][c.index];d===void 0&&(h[a.index][c.index]=h[c.index][a.index]=d=b((new THREE.Vector3).add(a.position,c.position).divideScalar(2)));return d}function f(a,b,c){c<0&&a.u===
rocket-3d/web/js/Three.js:1&&(a=new THREE.UV(a.u-1,a.v));b.x===0&&b.z===0&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);var c=c||0,e=this;b(new THREE.Vector3(1,0,0));b(new THREE.Vector3(-1,0,0));b(new THREE.Vector3(0,1,0));b(new THREE.Vector3(0,-1,0));b(new THREE.Vector3(0,0,1));b(new THREE.Vector3(0,0,-1));var h=[],i=this.vertices;d(i[0],i[2],i[4],c);d(i[0],i[4],i[3],c);d(i[0],i[3],i[5],c);d(i[0],i[5],i[2],c);d(i[1],i[2],i[5],c);d(i[1],i[5],i[3],c);d(i[1],i[3],i[4],c);d(i[1],i[4],i[2],c);this.boundingSphere=
rocket-3d/web/js/Three.js:{radius:a}};THREE.OctahedronGeometry.prototype=new THREE.Geometry;THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;
rocket-3d/web/js/Three.js:THREE.PlaneGeometry=function(a,c,b,d){THREE.Geometry.call(this);for(var g=a/2,f=c/2,b=b||1,d=d||1,e=b+1,h=d+1,i=a/b,l=c/d,k=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(c=0;c<e;c++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(c*i-g,-(a*l-f),0)));for(a=0;a<d;a++)for(c=0;c<b;c++)g=new THREE.Face4(c+e*a,c+e*(a+1),c+1+e*(a+1),c+1+e*a),g.normal.copy(k),g.vertexNormals.push(k.clone(),k.clone(),k.clone(),k.clone()),this.faces.push(g),this.faceVertexUvs[0].push([new THREE.UV(c/b,a/d),new THREE.UV(c/
rocket-3d/web/js/Three.js:b,(a+1)/d),new THREE.UV((c+1)/b,(a+1)/d),new THREE.UV((c+1)/b,a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=new THREE.Geometry;THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;
rocket-3d/web/js/Three.js:THREE.SphereGeometry=function(a,c,b,d,g,f,e){THREE.Geometry.call(this);var a=a||50,c=Math.max(3,Math.floor(c)||8),b=Math.max(2,Math.floor(b)||6),d=d!=void 0?d:0,g=g!=void 0?g:Math.PI*2,f=f!=void 0?f:0,e=e!=void 0?e:Math.PI,h,i,l=[],k=[];for(i=0;i<=b;i++){var o=[],p=[];for(h=0;h<=c;h++){var m=h/c,r=i/b;this.vertices.push(new THREE.Vertex(new THREE.Vector3(-a*Math.cos(d+m*g)*Math.sin(f+r*e),a*Math.cos(f+r*e),a*Math.sin(d+m*g)*Math.sin(f+r*e))));o.push(this.vertices.length-1);p.push(new THREE.UV(m,r))}l.push(o);
rocket-3d/web/js/Three.js:k.push(p)}for(i=0;i<b;i++)for(h=0;h<c;h++){var d=l[i][h+1],g=l[i][h],f=l[i+1][h],e=l[i+1][h+1],o=this.vertices[d].position.clone().normalize(),p=this.vertices[g].position.clone().normalize(),m=this.vertices[f].position.clone().normalize(),r=this.vertices[e].position.clone().normalize(),n=k[i][h+1].clone(),q=k[i][h].clone(),t=k[i+1][h].clone(),w=k[i+1][h+1].clone();Math.abs(this.vertices[d].position.y)==a?(this.faces.push(new THREE.Face3(d,f,e,[o,m,r])),this.faceVertexUvs[0].push([n,t,w])):Math.abs(this.vertices[f].position.y)==
rocket-3d/web/js/Three.js:a?(this.faces.push(new THREE.Face3(d,g,f,[o,p,m])),this.faceVertexUvs[0].push([n,q,t])):(this.faces.push(new THREE.Face4(d,g,f,e,[o,p,m,r])),this.faceVertexUvs[0].push([n,q,t,w]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=new THREE.Geometry;THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;
rocket-3d/web/js/Three.js:THREE.TextGeometry=function(a,c){var b=(new THREE.TextPath(a,c)).toShapes();c.amount=c.height!==void 0?c.height:50;if(c.bevelThickness===void 0)c.bevelThickness=10;if(c.bevelSize===void 0)c.bevelSize=8;if(c.bevelEnabled===void 0)c.bevelEnabled=!1;if(c.bend){var d=b[b.length-1].getBoundingBox().maxX;c.bendPath=new THREE.QuadraticBezierCurve(new THREE.Vector2(0,0),new THREE.Vector2(d/2,120),new THREE.Vector2(d,0))}THREE.ExtrudeGeometry.call(this,b,c)};THREE.TextGeometry.prototype=new THREE.ExtrudeGeometry;
rocket-3d/web/js/Three.js:THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;
rocket-3d/web/js/Three.js:THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var c=a.familyName.toLowerCase();this.faces[c]=this.faces[c]||{};this.faces[c][a.cssFontWeight]=this.faces[c][a.cssFontWeight]||{};this.faces[c][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[c][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var c=this.getFace(),b=this.size/c.resolution,d=
rocket-3d/web/js/Three.js:0,g=String(a).split(""),f=g.length,e=[],a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(g[a],c,b,d,h);d+=h.offset;e.push(h.path)}return{paths:e,offset:d/2}},extractGlyphPoints:function(a,c,b,d,g){var f=[],e,h,i,l,k,o,p,m,r,n,q,t=c.glyphs[a]||c.glyphs["?"];if(t){if(t.o){c=t._cachedOutline||(t._cachedOutline=t.o.split(" "));l=c.length;for(a=0;a<l;)switch(i=c[a++],i){case "m":i=c[a++]*b+d;k=c[a++]*b;f.push(new THREE.Vector2(i,k));g.moveTo(i,k);break;case "l":i=c[a++]*b+d;k=c[a++]*b;f.push(new THREE.Vector2(i,
rocket-3d/web/js/Three.js:k));g.lineTo(i,k);break;case "q":i=c[a++]*b+d;k=c[a++]*b;m=c[a++]*b+d;r=c[a++]*b;g.quadraticCurveTo(m,r,i,k);if(e=f[f.length-1]){o=e.x;p=e.y;e=1;for(h=this.divisions;e<=h;e++){var w=e/h,u=THREE.Shape.Utils.b2(w,o,m,i),w=THREE.Shape.Utils.b2(w,p,r,k);f.push(new THREE.Vector2(u,w))}}break;case "b":if(i=c[a++]*b+d,k=c[a++]*b,m=c[a++]*b+d,r=c[a++]*-b,n=c[a++]*b+d,q=c[a++]*-b,g.bezierCurveTo(i,k,m,r,n,q),e=f[f.length-1]){o=e.x;p=e.y;e=1;for(h=this.divisions;e<=h;e++)w=e/h,u=THREE.Shape.Utils.b3(w,o,m,
rocket-3d/web/js/Three.js:n,i),w=THREE.Shape.Utils.b3(w,p,r,q,k),f.push(new THREE.Vector2(u,w))}}}return{offset:t.ha*b,points:f,path:g}}}};
rocket-3d/web/js/Three.js:(function(a){var c=function(a){for(var c=a.length,g=0,f=c-1,e=0;e<c;f=e++)g+=a[f].x*a[e].y-a[e].x*a[f].y;return g*0.5};a.Triangulate=function(a,d){var g=a.length;if(g<3)return null;var f=[],e=[],h=[],i,l,k;if(c(a)>0)for(l=0;l<g;l++)e[l]=l;else for(l=0;l<g;l++)e[l]=g-1-l;var o=2*g;for(l=g-1;g>2;){if(o--<=0){console.log("Warning, unable to triangulate polygon!");if(d)return h;return f}i=l;g<=i&&(i=0);l=i+1;g<=l&&(l=0);k=l+1;g<=k&&(k=0);var p;a:{p=a;var m=i,r=l,n=k,q=g,t=e,w=void 0,u=void 0,B=void 0,
rocket-3d/web/js/Three.js:F=void 0,A=void 0,x=void 0,y=void 0,v=void 0,J=void 0,u=p[t[m]].x,B=p[t[m]].y,F=p[t[r]].x,A=p[t[r]].y,x=p[t[n]].x,y=p[t[n]].y;if(1.0E-10>(F-u)*(y-B)-(A-B)*(x-u))p=!1;else{for(w=0;w<q;w++)if(!(w==m||w==r||w==n)){var v=p[t[w]].x,J=p[t[w]].y,s=void 0,E=void 0,R=void 0,U=void 0,K=void 0,P=void 0,O=void 0,aa=void 0,H=void 0,G=void 0,I=void 0,M=void 0,s=R=K=void 0,s=x-F,E=y-A,R=u-x,U=B-y,K=F-u,P=A-B,O=v-u,aa=J-B,H=v-F,G=J-A,I=v-x,M=J-y,s=s*G-E*H,K=K*aa-P*O,R=R*M-U*I;if(s>=0&&R>=0&&K>=0){p=!1;break a}}p=
rocket-3d/web/js/Three.js:!0}}if(p){f.push([a[e[i]],a[e[l]],a[e[k]]]);h.push([e[i],e[l],e[k]]);i=l;for(k=l+1;k<g;i++,k++)e[i]=e[k];g--;o=2*g}}if(d)return h;return f};a.Triangulate.area=c;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};
rocket-3d/web/js/Three.js:THREE.TorusGeometry=function(a,c,b,d,g){THREE.Geometry.call(this);this.radius=a||100;this.tube=c||40;this.segmentsR=b||8;this.segmentsT=d||6;this.arc=g||Math.PI*2;g=new THREE.Vector3;a=[];c=[];for(b=0;b<=this.segmentsR;b++)for(d=0;d<=this.segmentsT;d++){var f=d/this.segmentsT*this.arc,e=b/this.segmentsR*Math.PI*2;g.x=this.radius*Math.cos(f);g.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(e))*Math.cos(f);h.y=(this.radius+this.tube*Math.cos(e))*Math.sin(f);h.z=
rocket-3d/web/js/Three.js:this.tube*Math.sin(e);this.vertices.push(new THREE.Vertex(h));a.push(new THREE.UV(d/this.segmentsT,1-b/this.segmentsR));c.push(h.clone().subSelf(g).normalize())}for(b=1;b<=this.segmentsR;b++)for(d=1;d<=this.segmentsT;d++){var g=(this.segmentsT+1)*b+d-1,f=(this.segmentsT+1)*(b-1)+d-1,e=(this.segmentsT+1)*(b-1)+d,h=(this.segmentsT+1)*b+d,i=new THREE.Face4(g,f,e,h,[c[g],c[f],c[e],c[h]]);i.normal.addSelf(c[g]);i.normal.addSelf(c[f]);i.normal.addSelf(c[e]);i.normal.addSelf(c[h]);i.normal.normalize();this.faces.push(i);
rocket-3d/web/js/Three.js:this.faceVertexUvs[0].push([a[g].clone(),a[f].clone(),a[e].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=new THREE.Geometry;THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;
rocket-3d/web/js/Three.js:THREE.TorusKnotGeometry=function(a,c,b,d,g,f,e){function h(a,b,c,d,e,f){b=c/d*a;c=Math.cos(b);return new THREE.Vector3(e*(2+c)*0.5*Math.cos(a),e*(2+c)*Math.sin(a)*0.5,f*e*Math.sin(b)*0.5)}THREE.Geometry.call(this);this.radius=a||200;this.tube=c||40;this.segmentsR=b||64;this.segmentsT=d||8;this.p=g||2;this.q=f||3;this.heightScale=e||1;this.grid=Array(this.segmentsR);b=new THREE.Vector3;d=new THREE.Vector3;f=new THREE.Vector3;for(a=0;a<this.segmentsR;++a){this.grid[a]=Array(this.segmentsT);for(c=0;c<
rocket-3d/web/js/Three.js:this.segmentsT;++c){var i=a/this.segmentsR*2*this.p*Math.PI,e=c/this.segmentsT*2*Math.PI,g=h(i,e,this.q,this.p,this.radius,this.heightScale),i=h(i+0.01,e,this.q,this.p,this.radius,this.heightScale);b.x=i.x-g.x;b.y=i.y-g.y;b.z=i.z-g.z;d.x=i.x+g.x;d.y=i.y+g.y;d.z=i.z+g.z;f.cross(b,d);d.cross(f,b);f.normalize();d.normalize();i=-this.tube*Math.cos(e);e=this.tube*Math.sin(e);g.x+=i*d.x+e*f.x;g.y+=i*d.y+e*f.y;g.z+=i*d.z+e*f.z;this.grid[a][c]=this.vertices.push(new THREE.Vertex(new THREE.Vector3(g.x,g.y,
rocket-3d/web/js/Three.js:g.z)))-1}}for(a=0;a<this.segmentsR;++a)for(c=0;c<this.segmentsT;++c){var d=(a+1)%this.segmentsR,f=(c+1)%this.segmentsT,g=this.grid[a][c],b=this.grid[d][c],d=this.grid[d][f],f=this.grid[a][f],e=new THREE.UV(a/this.segmentsR,c/this.segmentsT),i=new THREE.UV((a+1)/this.segmentsR,c/this.segmentsT),l=new THREE.UV((a+1)/this.segmentsR,(c+1)/this.segmentsT),k=new THREE.UV(a/this.segmentsR,(c+1)/this.segmentsT);this.faces.push(new THREE.Face4(g,b,d,f));this.faceVertexUvs[0].push([e,i,l,k])}this.computeCentroids();
rocket-3d/web/js/Three.js:this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=new THREE.Geometry;THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;THREE.SubdivisionModifier=function(a){this.subdivisions=a===void 0?1:a;this.useOldVertexColors=!1;this.supportUVs=!0};THREE.SubdivisionModifier.prototype.constructor=THREE.SubdivisionModifier;THREE.SubdivisionModifier.prototype.modify=function(a){for(var c=this.subdivisions;c-- >0;)this.smooth(a)};
rocket-3d/web/js/Three.js:THREE.SubdivisionModifier.prototype.smooth=function(a){function c(a,b,c,d,h,i){var k=new THREE.Face4(a,b,c,d,null,h.color,h.material);if(e.useOldVertexColors){k.vertexColors=[];for(var l,m,n,j=0;j<4;j++){n=i[j];l=new THREE.Color;l.setRGB(0,0,0);for(var o=0;o<n.length;o++)m=h.vertexColors[n[o]-1],l.r+=m.r,l.g+=m.g,l.b+=m.b;l.r/=n.length;l.g/=n.length;l.b/=n.length;k.vertexColors[j]=l}}g.push(k);(!e.supportUVs||p.length!=0)&&f.push([p[a],p[b],p[c],p[d]])}function b(a,b){return Math.min(a,b)+"_"+Math.max(a,
rocket-3d/web/js/Three.js:b)}var d=[],g=[],f=[],e=this,h=a.vertices,d=a.faces,i=h.concat(),l=[],k={},o={},p=[],m,r,n,q,t,w=a.faceVertexUvs[0];m=0;for(r=w.length;m<r;m++){n=0;for(q=w[m].length;n<q;n++)t=d[m]["abcd".charAt(n)],p[t]||(p[t]=w[m][n])}var u;m=0;for(r=d.length;m<r;m++)if(t=d[m],l.push(t.centroid),i.push(new THREE.Vertex(t.centroid)),e.supportUVs&&p.length!=0){u=new THREE.UV;if(t instanceof THREE.Face3)u.u=p[t.a].u+p[t.b].u+p[t.c].u,u.v=p[t.a].v+p[t.b].v+p[t.c].v,u.u/=3,u.v/=3;else if(t instanceof THREE.Face4)u.u=
rocket-3d/web/js/Three.js:p[t.a].u+p[t.b].u+p[t.c].u+p[t.d].u,u.v=p[t.a].v+p[t.b].v+p[t.c].v+p[t.d].v,u.u/=4,u.v/=4;p.push(u)}r=function(a){function c(a,b,d){a[b]===void 0&&(a[b]=[]);a[b].push(d)}var d,e,f,g,h={};d=0;for(e=a.faces.length;d<e;d++)f=a.faces[d],f instanceof THREE.Face3?(g=b(f.a,f.b),c(h,g,d),g=b(f.b,f.c),c(h,g,d),g=b(f.c,f.a),c(h,g,d)):f instanceof THREE.Face4&&(g=b(f.a,f.b),c(h,g,d),g=b(f.b,f.c),c(h,g,d),g=b(f.c,f.d),c(h,g,d),g=b(f.d,f.a),c(h,g,d));return h}(a);var B=0,w=h.length,F,A,x={},y={},v=function(a,
rocket-3d/web/js/Three.js:b){x[a]===void 0&&(x[a]=[]);x[a].push(b)},J=function(a,b){y[a]===void 0&&(y[a]={});y[a][b]=null};for(m in r){u=r[m];F=m.split("_");A=F[0];F=F[1];v(A,[A,F]);v(F,[A,F]);n=0;for(q=u.length;n<q;n++)t=u[n],J(A,t,m),J(F,t,m);u.length<2&&(o[m]=!0)}for(m in r)if(u=r[m],t=u[0],u=u[1],F=m.split("_"),A=F[0],F=F[1],q=new THREE.Vector3,o[m]?(q.addSelf(h[A].position),q.addSelf(h[F].position),q.multiplyScalar(0.5)):(q.addSelf(l[t]),q.addSelf(l[u]),q.addSelf(h[A].position),q.addSelf(h[F].position),q.multiplyScalar(0.25)),
rocket-3d/web/js/Three.js:k[m]=w+d.length+B,i.push(new THREE.Vertex(q)),B++,e.supportUVs&&p.length!=0)u=new THREE.UV,u.u=p[A].u+p[F].u,u.v=p[A].v+p[F].v,u.u/=2,u.v/=2,p.push(u);var s,E;F=["123","12","2","23"];q=["123","23","3","31"];var v=["123","31","1","12"],J=["1234","12","2","23"],R=["1234","23","3","34"],U=["1234","34","4","41"],K=["1234","41","1","12"];m=0;for(r=l.length;m<r;m++)t=d[m],u=w+m,t instanceof THREE.Face3?(B=b(t.a,t.b),A=b(t.b,t.c),s=b(t.c,t.a),c(u,k[B],t.b,k[A],t,F),c(u,k[A],t.c,k[s],t,q),c(u,k[s],t.a,k[B],
rocket-3d/web/js/Three.js:t,v)):t instanceof THREE.Face4?(B=b(t.a,t.b),A=b(t.b,t.c),s=b(t.c,t.d),E=b(t.d,t.a),c(u,k[B],t.b,k[A],t,J),c(u,k[A],t.c,k[s],t,R),c(u,k[s],t.d,k[E],t,U),c(u,k[E],t.a,k[B],t,K)):console.log("face should be a face!",t);d=i;i=new THREE.Vector3;k=new THREE.Vector3;m=0;for(r=h.length;m<r;m++)if(x[m]!==void 0){i.set(0,0,0);k.set(0,0,0);t=new THREE.Vector3(0,0,0);u=0;for(n in y[m])i.addSelf(l[n]),u++;B=0;w=x[m].length;for(n=0;n<w;n++)o[b(x[m][n][0],x[m][n][1])]&&B++;if(B!=2){i.divideScalar(u);for(n=0;n<
rocket-3d/web/js/Three.js:w;n++)u=x[m][n],u=h[u[0]].position.clone().addSelf(h[u[1]].position).divideScalar(2),k.addSelf(u);k.divideScalar(w);t.addSelf(h[m].position);t.multiplyScalar(w-3);t.addSelf(i);t.addSelf(k.multiplyScalar(2));t.divideScalar(w);d[m].position=t}}a.vertices=d;a.faces=g;a.faceVertexUvs[0]=f;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};
rocket-3d/web/js/Three.js:THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
rocket-3d/web/js/Three.js:THREE.Loader.prototype={constructor:THREE.Loader,addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var c="Loaded ";c+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/
rocket-3d/web/js/Three.js:1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=c},extractUrlbase:function(a){a=a.split("/");a.pop();return a.length<1?"":a.join("/")+"/"},initMaterials:function(a,c,b){a.materials=[];for(var d=0;d<c.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(c[d],b)},hasNormals:function(a){var c,b,d=a.materials.length;for(b=0;b<d;b++)if(c=a.materials[b],c instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,c){function b(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==
rocket-3d/web/js/Three.js:a}function d(a,c){var d=new Image;d.onload=function(){if(!b(this.width)||!b(this.height)){var c=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),d=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));a.image.width=c;a.image.height=d;a.image.getContext("2d").drawImage(this,0,0,c,d)}else a.image=this;a.needsUpdate=!0};d.src=c}function g(a,b,e,f,g,h){var i=document.createElement("canvas");a[b]=new THREE.Texture(i);a[b].sourceFile=e;if(f){a[b].repeat.set(f[0],f[1]);if(f[0]!=1)a[b].wrapS=THREE.RepeatWrapping;
rocket-3d/web/js/Three.js:if(f[1]!=1)a[b].wrapT=THREE.RepeatWrapping}g&&a[b].offset.set(g[0],g[1]);if(h){f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(f[h[0]]!==void 0)a[b].wrapS=f[h[0]];if(f[h[1]]!==void 0)a[b].wrapT=f[h[1]]}d(a[b],c+"/"+e)}function f(a){return(a[0]*255<<16)+(a[1]*255<<8)+a[2]*255}var e,h,i;h="MeshLambertMaterial";e={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,wireframe:a.wireframe};a.shading&&(a.shading=="Phong"?h="MeshPhongMaterial":a.shading=="Basic"&&(h="MeshBasicMaterial"));
rocket-3d/web/js/Three.js:if(a.blending)if(a.blending=="Additive")e.blending=THREE.AdditiveBlending;else if(a.blending=="Subtractive")e.blending=THREE.SubtractiveBlending;else if(a.blending=="Multiply")e.blending=THREE.MultiplyBlending;if(a.transparent!==void 0||a.opacity<1)e.transparent=a.transparent;if(a.depthTest!==void 0)e.depthTest=a.depthTest;if(a.vertexColors!==void 0)if(a.vertexColors=="face")e.vertexColors=THREE.FaceColors;else if(a.vertexColors)e.vertexColors=THREE.VertexColors;if(a.colorDiffuse)e.color=f(a.colorDiffuse);
rocket-3d/web/js/Three.js:else if(a.DbgColor)e.color=a.DbgColor;if(a.colorSpecular)e.specular=f(a.colorSpecular);if(a.colorAmbient)e.ambient=f(a.colorAmbient);if(a.transparency)e.opacity=a.transparency;if(a.specularCoef)e.shininess=a.specularCoef;a.mapDiffuse&&c&&g(e,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap);a.mapLight&&c&&g(e,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap);a.mapNormal&&c&&g(e,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap);
rocket-3d/web/js/Three.js:a.mapSpecular&&c&&g(e,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap);if(a.mapNormal){var l=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(l.uniforms),o=e.color;h=e.specular;i=e.ambient;var p=e.shininess;k.tNormal.texture=e.normalMap;if(a.mapNormalFactor)k.uNormalScale.value=a.mapNormalFactor;if(e.map)k.tDiffuse.texture=e.map,k.enableDiffuse.value=!0;if(e.specularMap)k.tSpecular.texture=e.specularMap,k.enableSpecular.value=!0;if(e.lightMap)k.tAO.texture=
rocket-3d/web/js/Three.js:e.lightMap,k.enableAO.value=!0;k.uDiffuseColor.value.setHex(o);k.uSpecularColor.value.setHex(h);k.uAmbientColor.value.setHex(i);k.uShininess.value=p;if(e.opacity)k.uOpacity.value=e.opacity;e=new THREE.ShaderMaterial({fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:k,lights:!0,fog:!0})}else e=new THREE[h](e);return e}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=new THREE.Loader;THREE.BinaryLoader.prototype.constructor=THREE.BinaryLoader;
rocket-3d/web/js/Three.js:THREE.BinaryLoader.prototype.supr=THREE.Loader.prototype;THREE.BinaryLoader.prototype.load=function(a,c,b,d){if(a instanceof Object)console.warn("DEPRECATED: BinaryLoader( parameters ) is now BinaryLoader( url, callback, texturePath, binaryPath )."),d=a,a=d.model,c=d.callback,b=d.texture_path,d=d.bin_path;var b=b?b:this.extractUrlbase(a),d=d?d:this.extractUrlbase(a),g=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,c,b,d,g)};
rocket-3d/web/js/Three.js:THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,c,b,d,g,f){var e=new XMLHttpRequest;e.onreadystatechange=function(){if(e.readyState==4)if(e.status==200||e.status==0)try{var h=JSON.parse(e.responseText);h.metadata===void 0||h.metadata.formatVersion===void 0||h.metadata.formatVersion!==3?console.error("Deprecated file format."):a.loadAjaxBuffers(h,b,g,d,f)}catch(i){console.error(i),console.warn("DEPRECATED: ["+c+"] seems to be using old model format")}else console.error("Couldn't load ["+c+"] ["+
rocket-3d/web/js/Three.js:e.status+"]")};e.open("GET",c,!0);e.overrideMimeType("text/plain; charset=x-user-defined");e.setRequestHeader("Content-Type","text/plain");e.send(null)};
rocket-3d/web/js/Three.js:THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,c,b,d,g){var f=new XMLHttpRequest,e=b+"/"+a.buffers,h=0;f.onreadystatechange=function(){f.readyState==4?f.status==200||f.status==0?THREE.BinaryLoader.prototype.createBinModel(f.response,c,d,a.materials):console.error("Couldn't load ["+e+"] ["+f.status+"]"):f.readyState==3?g&&(h==0&&(h=f.getResponseHeader("Content-Length")),g({total:h,loaded:f.responseText.length})):f.readyState==2&&(h=f.getResponseHeader("Content-Length"))};f.open("GET",e,!0);
rocket-3d/web/js/Three.js:f.responseType="arraybuffer";f.send(null)};
rocket-3d/web/js/Three.js:THREE.BinaryLoader.prototype.createBinModel=function(a,c,b,d){var g=function(b){function c(a){return a%4?4-a%4:0}function g(a,b){return(new Uint8Array(a,b,1))[0]}function i(a,b){return(new Uint32Array(a,b,1))[0]}function l(b,c){var d,e,f,g,h,i,k,l,m=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){e=m[d*3];f=m[d*3+1];g=m[d*3+2];h=u[e*2];e=u[e*2+1];i=u[f*2];k=u[f*2+1];f=u[g*2];l=u[g*2+1];g=n.faceVertexUvs[0];var o=[];o.push(new THREE.UV(h,e));o.push(new THREE.UV(i,k));o.push(new THREE.UV(f,l));g.push(o)}}
rocket-3d/web/js/Three.js:function k(b,c){var d,e,f,g,h,i,k,l,m,o,p=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){e=p[d*4];f=p[d*4+1];g=p[d*4+2];h=p[d*4+3];i=u[e*2];e=u[e*2+1];k=u[f*2];m=u[f*2+1];l=u[g*2];o=u[g*2+1];g=u[h*2];f=u[h*2+1];h=n.faceVertexUvs[0];var q=[];q.push(new THREE.UV(i,e));q.push(new THREE.UV(k,m));q.push(new THREE.UV(l,o));q.push(new THREE.UV(g,f));h.push(q)}}function o(b,c,d){for(var e,f,g,h,c=new Uint32Array(a,c,3*b),i=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[d*3],f=c[d*3+1],g=c[d*3+2],h=i[d],n.faces.push(new THREE.Face3(e,
rocket-3d/web/js/Three.js:f,g,null,null,h))}function p(b,c,d){for(var e,f,g,h,i,c=new Uint32Array(a,c,4*b),k=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[d*4],f=c[d*4+1],g=c[d*4+2],h=c[d*4+3],i=k[d],n.faces.push(new THREE.Face4(e,f,g,h,null,null,i))}function m(b,c,d,e){for(var f,g,h,i,k,l,m,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),o=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[e*3];g=c[e*3+1];h=c[e*3+2];k=d[e*3];l=d[e*3+1];m=d[e*3+2];i=o[e];var p=w[l*3],q=w[l*3+1];l=w[l*3+2];var r=w[m*3],t=w[m*3+1];m=w[m*3+2];n.faces.push(new THREE.Face3(f,
rocket-3d/web/js/Three.js:g,h,[new THREE.Vector3(w[k*3],w[k*3+1],w[k*3+2]),new THREE.Vector3(p,q,l),new THREE.Vector3(r,t,m)],null,i))}}function r(b,c,d,e){for(var f,g,h,i,k,l,m,o,p,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),q=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[e*4];g=c[e*4+1];h=c[e*4+2];i=c[e*4+3];l=d[e*4];m=d[e*4+1];o=d[e*4+2];p=d[e*4+3];k=q[e];var r=w[m*3],t=w[m*3+1];m=w[m*3+2];var j=w[o*3],u=w[o*3+1];o=w[o*3+2];var v=w[p*3],x=w[p*3+1];p=w[p*3+2];n.faces.push(new THREE.Face4(f,g,h,i,[new THREE.Vector3(w[l*
rocket-3d/web/js/Three.js:3],w[l*3+1],w[l*3+2]),new THREE.Vector3(r,t,m),new THREE.Vector3(j,u,o),new THREE.Vector3(v,x,p)],null,k))}}var n=this,q=0,t,w=[],u=[],B,F,A,x,y,v;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(n,d,b);t={signature:function(a,b,c){for(var a=new Uint8Array(a,b,c),d="",e=0;e<c;e++)d+=String.fromCharCode(a[b+e]);return d}(a,q,12),header_bytes:g(a,q+12),vertex_coordinate_bytes:g(a,q+13),normal_coordinate_bytes:g(a,q+14),uv_coordinate_bytes:g(a,q+15),vertex_index_bytes:g(a,q+16),normal_index_bytes:g(a,
rocket-3d/web/js/Three.js:q+17),uv_index_bytes:g(a,q+18),material_index_bytes:g(a,q+19),nvertices:i(a,q+20),nnormals:i(a,q+20+4),nuvs:i(a,q+20+8),ntri_flat:i(a,q+20+12),ntri_smooth:i(a,q+20+16),ntri_flat_uv:i(a,q+20+20),ntri_smooth_uv:i(a,q+20+24),nquad_flat:i(a,q+20+28),nquad_smooth:i(a,q+20+32),nquad_flat_uv:i(a,q+20+36),nquad_smooth_uv:i(a,q+20+40)};t.signature!=="Three.js 003"&&console.warn("DEPRECATED: binary model seems to be using old format");q+=t.header_bytes;b=t.vertex_index_bytes*3+t.material_index_bytes;v=t.vertex_index_bytes*
rocket-3d/web/js/Three.js:4+t.material_index_bytes;B=t.ntri_flat*b;F=t.ntri_smooth*(b+t.normal_index_bytes*3);A=t.ntri_flat_uv*(b+t.uv_index_bytes*3);x=t.ntri_smooth_uv*(b+t.normal_index_bytes*3+t.uv_index_bytes*3);y=t.nquad_flat*v;b=t.nquad_smooth*(v+t.normal_index_bytes*4);v=t.nquad_flat_uv*(v+t.uv_index_bytes*4);q+=function(b){var c=t.nvertices,b=new Float32Array(a,b,c*3),d,e,f,g;for(d=0;d<c;d++)e=b[d*3],f=b[d*3+1],g=b[d*3+2],n.vertices.push(new THREE.Vertex(new THREE.Vector3(e,f,g)));return c*3*Float32Array.BYTES_PER_ELEMENT}(q);
rocket-3d/web/js/Three.js:q+=function(b){var c=t.nnormals;if(c){var b=new Int8Array(a,b,c*3),d,e,f,g;for(d=0;d<c;d++)e=b[d*3],f=b[d*3+1],g=b[d*3+2],w.push(e/127,f/127,g/127)}return c*3*Int8Array.BYTES_PER_ELEMENT}(q);q+=c(t.nnormals*3);q+=function(b){var c=t.nuvs;if(c){var b=new Float32Array(a,b,c*2),d,e,f;for(d=0;d<c;d++)e=b[d*2],f=b[d*2+1],u.push(e,f)}return c*2*Float32Array.BYTES_PER_ELEMENT}(q);B=q+B+c(t.ntri_flat*2);F=B+F+c(t.ntri_smooth*2);A=F+A+c(t.ntri_flat_uv*2);x=A+x+c(t.ntri_smooth_uv*2);y=x+y+c(t.nquad_flat*2);
rocket-3d/web/js/Three.js:b=y+b+c(t.nquad_smooth*2);v=b+v+c(t.nquad_flat_uv*2);(function(a){var b=t.ntri_flat_uv;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*3;o(b,a,c+b*Uint32Array.BYTES_PER_ELEMENT*3);l(b,c)}})(F);(function(a){var b=t.ntri_smooth_uv;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*3,d=c+b*Uint32Array.BYTES_PER_ELEMENT*3;m(b,a,c,d+b*Uint32Array.BYTES_PER_ELEMENT*3);l(b,d)}})(A);(function(a){var b=t.nquad_flat_uv;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*4;p(b,a,c+b*Uint32Array.BYTES_PER_ELEMENT*4);k(b,
rocket-3d/web/js/Three.js:c)}})(b);(function(a){var b=t.nquad_smooth_uv;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*4,d=c+b*Uint32Array.BYTES_PER_ELEMENT*4;r(b,a,c,d+b*Uint32Array.BYTES_PER_ELEMENT*4);k(b,d)}})(v);(function(a){var b=t.ntri_flat;b&&o(b,a,a+b*Uint32Array.BYTES_PER_ELEMENT*3)})(q);(function(a){var b=t.ntri_smooth;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*3;m(b,a,c,c+b*Uint32Array.BYTES_PER_ELEMENT*3)}})(B);(function(a){var b=t.nquad_flat;b&&p(b,a,a+b*Uint32Array.BYTES_PER_ELEMENT*4)})(x);(function(a){var b=
rocket-3d/web/js/Three.js:t.nquad_smooth;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*4;r(b,a,c,c+b*Uint32Array.BYTES_PER_ELEMENT*4)}})(y);this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};g.prototype=new THREE.Geometry;g.prototype.constructor=g;c(new g(b))};
rocket-3d/web/js/Three.js:THREE.ColladaLoader=function(){function a(a,d,g){j=a;d=d||da;g!==void 0&&(a=g.split("/"),a.pop(),Da=a.length<1?"":a.join("/")+"/");$=c("//dae:library_images/dae:image",e,"image");na=c("//dae:library_materials/dae:material",y,"material");oa=c("//dae:library_effects/dae:effect",R,"effect");qa=c("//dae:library_geometries/dae:geometry",q,"geometry");ra=c("//dae:library_controllers/dae:controller",h,"controller");ua=c("//dae:library_animations/dae:animation",K,"animation");pa=c(".//dae:library_visual_scenes/dae:visual_scene",
rocket-3d/web/js/Three.js:k,"visual_scene");za=[];Aa=[];(a=j.evaluate(".//dae:scene/dae:instance_visual_scene",j,H,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())?(a=a.getAttribute("url").replace(/^#/,""),V=pa[a]):V=null;X=new THREE.Object3D;for(a=0;a<V.nodes.length;a++)X.add(f(V.nodes[a]));b();for(var i in ua);i={scene:X,morphs:za,skins:Aa,dae:{images:$,materials:na,effects:oa,geometries:qa,controllers:ra,animations:ua,visualScenes:pa,scene:V}};d&&d(i);return i}function c(a,b,c){for(var a=j.evaluate(a,j,H,XPathResult.ORDERED_NODE_ITERATOR_TYPE,
rocket-3d/web/js/Three.js:null),d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(e.id.length==0)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function b(){var a=1E6,b=-a,c=0,d;for(d in ua)for(var e=ua[d],f=0;f<e.sampler.length;f++){var g=e.sampler[f];g.create();a=Math.min(a,g.startTime);b=Math.max(b,g.endTime);c=Math.max(c,g.input.length)}return{start:a,end:b,frames:c}}function d(a,b,c,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[c];
rocket-3d/web/js/Three.js:f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiply(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],b,c,a.world)}function g(a,c,e){var f=ra[c.url];if(!f||!f.skin)console.log("ColladaLoader: Could not find skin controller.");else if(!c.skeleton||!c.skeleton.length)console.log("ColladaLoader: Could not find the skeleton for the skin. ");else{var g=b(),c=V.getChildById(c.skeleton[0],!0)||V.getChildBySid(c.skeleton[0],!0),h,i,j,k,l=new THREE.Vector3,m;for(h=0;h<a.vertices.length;h++)f.skin.bindShapeMatrix.multiplyVector3(a.vertices[h].position);
rocket-3d/web/js/Three.js:for(e=0;e<g.frames;e++){var n=[],o=[];for(h=0;h<a.vertices.length;h++)o.push(new THREE.Vertex(new THREE.Vector3));d(c,n,e);h=n;i=f.skin;for(k=0;k<h.length;k++)if(j=h[k],m=-1,j.type=="JOINT"){for(var p=0;p<i.joints.length;p++)if(j.sid==i.joints[p]){m=p;break}if(m>=0){p=i.invBindMatrices[m];j.invBindMatrix=p;j.skinningMatrix=new THREE.Matrix4;j.skinningMatrix.multiply(j.world,p);j.weights=[];for(p=0;p<i.weights.length;p++)for(var q=0;q<i.weights[p].length;q++){var r=i.weights[p][q];r.joint==m&&j.weights.push(r)}}else throw"ColladaLoader: Could not find joint '"+
rocket-3d/web/js/Three.js:j.sid+"'.";}for(h=0;h<n.length;h++)if(n[h].type=="JOINT")for(i=0;i<n[h].weights.length;i++)j=n[h].weights[i],k=j.index,j=j.weight,m=a.vertices[k],k=o[k],l.x=m.position.x,l.y=m.position.y,l.z=m.position.z,n[h].skinningMatrix.multiplyVector3(l),k.position.x+=l.x*j,k.position.y+=l.y*j,k.position.z+=l.z*j;a.morphTargets.push({name:"target_"+e,vertices:o})}}}function f(a){var b=new THREE.Object3D,c,d,e,h;for(e=0;e<a.controllers.length;e++){var i=ra[a.controllers[e].url];switch(i.type){case "skin":if(qa[i.skin.source]){var j=
rocket-3d/web/js/Three.js:new n;j.url=i.skin.source;j.instance_material=a.controllers[e].instance_material;a.geometries.push(j);c=a.controllers[e]}else if(ra[i.skin.source]&&(d=i=ra[i.skin.source],i.morph&&qa[i.morph.source]))j=new n,j.url=i.morph.source,j.instance_material=a.controllers[e].instance_material,a.geometries.push(j);break;case "morph":if(qa[i.morph.source])j=new n,j.url=i.morph.source,j.instance_material=a.controllers[e].instance_material,a.geometries.push(j),d=a.controllers[e];console.log("ColladaLoader: Morph-controller partially supported.")}}for(e=
rocket-3d/web/js/Three.js:0;e<a.geometries.length;e++){var i=a.geometries[e],j=i.instance_material,i=qa[i.url],k={},l=0,o;if(i&&i.mesh&&i.mesh.primitives){if(b.name.length==0)b.name=i.id;if(j)for(h=0;h<j.length;h++){o=j[h];var p=oa[na[o.target].instance_effect.url].shader;p.material.opacity=!p.material.opacity?1:p.material.opacity;o=k[o.symbol]=p.material;l++}j=o||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading});i=i.mesh.geometry3js;if(l>1){j=new THREE.MeshFaceMaterial;for(h=0;h<i.faces.length;h++)l=
rocket-3d/web/js/Three.js:i.faces[h],l.materials=[k[l.daeMaterial]]}if(c!==void 0)g(i,c),j.morphTargets=!0,j=new THREE.SkinnedMesh(i,j),j.skeleton=c.skeleton,j.skinController=ra[c.url],j.skinInstanceController=c,j.name="skin_"+Aa.length,Aa.push(j);else if(d!==void 0){h=i;k=d instanceof m?ra[d.url]:d;if(!k||!k.morph)console.log("could not find morph controller!");else{k=k.morph;for(l=0;l<k.targets.length;l++)if(p=qa[k.targets[l]],p.mesh&&p.mesh.primitives&&p.mesh.primitives.length)p=p.mesh.primitives[0].geometry,p.vertices.length===
rocket-3d/web/js/Three.js:h.vertices.length&&h.morphTargets.push({name:"target_1",vertices:p.vertices});h.morphTargets.push({name:"target_Z",vertices:h.vertices})}j.morphTargets=!0;j=new THREE.Mesh(i,j);j.name="morph_"+za.length;za.push(j)}else j=new THREE.Mesh(i,j);a.geometries.length>1?b.add(j):b=j}}b.name=a.id||"";a.matrix.decompose(b.position,b.rotation,b.scale);for(e=0;e<a.nodes.length;e++)b.add(f(a.nodes[e],a));return b}function e(){this.init_from=this.id=""}function h(){this.type=this.name=this.id="";this.morph=this.skin=
rocket-3d/web/js/Three.js:null}function i(){this.weights=this.targets=this.source=this.method=null}function l(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function k(){this.name=this.id="";this.nodes=[];this.scene=new THREE.Object3D}function o(){this.sid=this.name=this.id="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=[];this.matrix=new THREE.Matrix4}function p(){this.type=this.sid="";this.data=[];this.matrix=new THREE.Matrix4}function m(){this.url=
rocket-3d/web/js/Three.js:"";this.skeleton=[];this.instance_material=[]}function r(){this.target=this.symbol=""}function n(){this.url="";this.instance_material=[]}function q(){this.id="";this.mesh=null}function t(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function w(){}function u(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}function B(){this.source="";this.stride=this.count=0;this.params=[]}function F(){this.input={}}function A(){this.semantic=
rocket-3d/web/js/Three.js:"";this.offset=0;this.source="";this.set=0}function x(a){this.id=a;this.type=null}function y(){this.name=this.id="";this.instance_effect=null}function v(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texcoord=this.texture=null}function J(a,b){this.type=a;this.effect=b;this.material=null}function s(a){this.effect=a;this.format=this.init_from=null}function E(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=
rocket-3d/web/js/Three.js:this.source=null}function R(){this.name=this.id="";this.sampler=this.surface=this.shader=null}function U(){this.url=""}function K(){this.name=this.id="";this.source={};this.sampler=[];this.channel=[]}function P(a){this.animation=a;this.target=this.source="";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=this.sid=null}function O(a){this.id="";this.animation=a;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.output=this.input=null;this.duration=0}function aa(a){var b=a.getAttribute("id");
rocket-3d/web/js/Three.js:if(ga[b]!=void 0)return ga[b];ga[b]=(new x(b)).parse(a);return ga[b]}function H(a){if(a=="dae")return"http://www.collada.org/2005/11/COLLADASchema";return null}function G(a){for(var a=M(a),b=[],c=0;c<a.length;c++)b.push(parseFloat(a[c]));return b}function I(a){for(var a=M(a),b=[],c=0;c<a.length;c++)b.push(parseInt(a[c],10));return b}function M(a){return a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/)}function S(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function ba(a,b){if(a===
rocket-3d/web/js/Three.js:void 0){for(var c="0.";c.length<b+2;)c+="0";return c}b=b||2;c=a.toString().split(".");for(c[1]=c.length>1?c[1].substr(0,b):"0";c[1].length<b;)c[1]+="0";return c.join(".")}function W(a,b){var c="";c+=ba(a.x,b)+",";c+=ba(a.y,b)+",";c+=ba(a.z,b);return c}var j=null,X=null,V,da=null,ga={},$={},ua={},ra={},qa={},na={},oa={},pa,Da,za,Aa,Ba=THREE.SmoothShading;e.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeName=="init_from")this.init_from=
rocket-3d/web/js/Three.js:c.textContent}return this};h.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.type="none";for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "skin":this.skin=(new l).parse(c);this.type=c.nodeName;break;case "morph":this.morph=(new i).parse(c),this.type=c.nodeName}}return this};i.prototype.parse=function(a){var b={},c=[],d;this.method=a.getAttribute("method");this.source=a.getAttribute("source").replace(/^#/,"");for(d=
rocket-3d/web/js/Three.js:0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(e.nodeType==1)switch(e.nodeName){case "source":e=(new x).parse(e);b[e.id]=e;break;case "targets":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++)switch(a=c[d],e=b[a.source],a.semantic){case "MORPH_TARGET":this.targets=e.read();break;case "MORPH_WEIGHT":this.weights=e.read()}return this};i.prototype.parseInputs=function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "input":b.push((new A).parse(d))}}return b};
rocket-3d/web/js/Three.js:l.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(f.nodeType==1)switch(f.nodeName){case "bind_shape_matrix":f=G(f.textContent);this.bindShapeMatrix=new THREE.Matrix4;this.bindShapeMatrix.set(f[0],f[1],f[2],f[3],f[4],f[5],f[6],f[7],f[8],f[9],f[10],f[11],f[12],f[13],f[14],f[15]);break;case "source":f=(new x).parse(f);b[f.id]=f;break;case "joints":c=
rocket-3d/web/js/Three.js:f;break;case "vertex_weights":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,b);return this};l.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "input":var d=(new A).parse(d),e=b[d.source];if(d.semantic=="JOINT")this.joints=e.read();else if(d.semantic=="INV_BIND_MATRIX")this.invBindMatrices=e.read()}}};l.prototype.parseWeights=function(a,b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=
rocket-3d/web/js/Three.js:a.childNodes[f];if(g.nodeType==1)switch(g.nodeName){case "input":e.push((new A).parse(g));break;case "v":c=I(g.textContent);break;case "vcount":d=I(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],i=[],j=0;j<h;j++){for(var k={},l=0;l<e.length;l++){var m=e[l],n=c[g+m.offset];switch(m.semantic){case "JOINT":k.joint=n;break;case "WEIGHT":k.weight=b[m.source].data[n]}}i.push(k);g+=e.length}for(j=0;j<i.length;j++)i[j].index=f;this.weights.push(i)}};k.prototype.getChildById=function(a,b){for(var c=
rocket-3d/web/js/Three.js:0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};k.prototype.getChildBySid=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};k.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "node":this.nodes.push((new o).parse(c))}}return this};o.prototype.getChannelForTransform=
rocket-3d/web/js/Three.js:function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],d=c.target.split("/");d.shift();var e=d.shift(),f=e.indexOf(".")>=0,g=e.indexOf("(")>=0,h;if(f)d=e.split("."),e=d.shift(),d.shift();else if(g){h=e.split("(");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\)/,""))}if(e==a)return c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h},c}return null};o.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,
rocket-3d/web/js/Three.js:b);if(d)return d}return null};o.prototype.getChildBySid=function(a,b){if(this.sid==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};o.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};o.prototype.parse=function(a){var b;this.id=a.getAttribute("id");this.sid=a.getAttribute("sid");this.name=a.getAttribute("name");this.type=a.getAttribute("type");
rocket-3d/web/js/Three.js:this.type=this.type=="JOINT"?this.type:"NODE";this.nodes=[];this.transforms=[];this.geometries=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++)if(b=a.childNodes[c],b.nodeType==1)switch(b.nodeName){case "node":this.nodes.push((new o).parse(b));break;case "instance_camera":break;case "instance_controller":this.controllers.push((new m).parse(b));break;case "instance_geometry":this.geometries.push((new n).parse(b));break;case "instance_light":break;case "instance_node":b=
rocket-3d/web/js/Three.js:b.getAttribute("url").replace(/^#/,"");(b=j.evaluate(".//dae:library_nodes//dae:node[@id='"+b+"']",j,H,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new o).parse(b));break;case "rotate":case "translate":case "scale":case "matrix":case "lookat":case "skew":this.transforms.push((new p).parse(b));break;case "extra":break;default:console.log(b.nodeName)}a=[];c=1E6;b=-1E6;for(var d in ua)for(var e=ua[d],f=0;f<e.channel.length;f++){var g=e.channel[f],h=e.sampler[f];d=g.target.split("/")[0];
rocket-3d/web/js/Three.js:if(d==this.id)h.create(),g.sampler=h,c=Math.min(c,h.startTime),b=Math.max(b,h.endTime),a.push(g)}if(a.length)this.startTime=c,this.endTime=b;if((this.channels=a)&&this.channels.length){d=1E7;for(a=0;a<this.channels.length;a++){c=this.channels[a].sampler;for(b=0;b<c.input.length-1;b++)d=Math.min(d,c.input[b+1]-c.input[b])}c=[];for(a=this.startTime;a<this.endTime;a+=d){b=a;for(var e={},i=f=void 0,f=0;f<this.channels.length;f++)i=this.channels[f],e[i.sid]=i;g=new THREE.Matrix4;for(f=0;f<this.transforms.length;f++)if(h=
rocket-3d/web/js/Three.js:this.transforms[f],i=e[h.sid],i!==void 0){for(var k=i.sampler,l,i=0;i<k.input.length-1;i++)if(k.input[i+1]>b){l=k.output[i];break}g=l!==void 0?l instanceof THREE.Matrix4?g.multiply(g,l):g.multiply(g,h.matrix):g.multiply(g,h.matrix)}else g=g.multiply(g,h.matrix);b=g;c.push({time:a,pos:[b.n14,b.n24,b.n34],rotq:[0,0,0,1],scl:[1,1,1]})}this.keys=c}this.updateMatrix();return this};o.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.matrix.multiply(this.matrix,
rocket-3d/web/js/Three.js:this.transforms[a].matrix)};p.prototype.parse=function(a){this.sid=a.getAttribute("sid");this.type=a.nodeName;this.data=G(a.textContent);this.updateMatrix();return this};p.prototype.updateMatrix=function(){var a=0;this.matrix.identity();switch(this.type){case "matrix":this.matrix.set(this.data[0],this.data[1],this.data[2],this.data[3],this.data[4],this.data[5],this.data[6],this.data[7],this.data[8],this.data[9],this.data[10],this.data[11],this.data[12],this.data[13],this.data[14],this.data[15]);break;
rocket-3d/web/js/Three.js:case "translate":this.matrix.setTranslation(this.data[0],this.data[1],this.data[2]);break;case "rotate":a=this.data[3]*(Math.PI/180);this.matrix.setRotationAxis(new THREE.Vector3(this.data[0],this.data[1],this.data[2]),a);break;case "scale":this.matrix.setScale(this.data[0],this.data[1],this.data[2])}return this.matrix};m.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];
rocket-3d/web/js/Three.js:if(c.nodeType==1)switch(c.nodeName){case "skeleton":this.skeleton.push(c.textContent.replace(/^#/,""));break;case "bind_material":if(c=j.evaluate(".//dae:instance_material",c,H,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=c.iterateNext();d;)this.instance_material.push((new r).parse(d)),d=c.iterateNext()}}return this};r.prototype.parse=function(a){this.symbol=a.getAttribute("symbol");this.target=a.getAttribute("target").replace(/^#/,"");return this};n.prototype.parse=function(a){this.url=
rocket-3d/web/js/Three.js:a.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1&&c.nodeName=="bind_material"){if(a=j.evaluate(".//dae:instance_material",c,H,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(b=a.iterateNext();b;)this.instance_material.push((new r).parse(b)),b=a.iterateNext();break}}return this};q.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "mesh":this.mesh=
rocket-3d/web/js/Three.js:(new t(this)).parse(c)}}return this};t.prototype.parse=function(a){function b(a,c){var d=W(a.position);e[d]===void 0&&(e[d]={v:a,index:c});return e[d]}this.primitives=[];var c;for(c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];switch(d.nodeName){case "source":aa(d);break;case "vertices":this.vertices=(new F).parse(d);break;case "triangles":this.primitives.push((new u).parse(d));break;case "polygons":console.warn("polygon holes not yet supported!");case "polylist":this.primitives.push((new w).parse(d))}}var e=
rocket-3d/web/js/Three.js:{};this.geometry3js=new THREE.Geometry;d=ga[this.vertices.input.POSITION.source].data;for(a=c=0;c<d.length;c+=3,a++){var f=new THREE.Vertex(new THREE.Vector3(d[c],d[c+1],d[c+2]));b(f,a);this.geometry3js.vertices.push(f)}for(c=0;c<this.primitives.length;c++)a=this.primitives[c],a.setVertices(this.vertices),this.handlePrimitive(a,this.geometry3js,e);this.geometry3js.computeCentroids();this.geometry3js.computeFaceNormals();this.geometry3js.computeVertexNormals();this.geometry3js.computeBoundingBox();
rocket-3d/web/js/Three.js:return this};t.prototype.handlePrimitive=function(a,b,c){var d=0,e,f,g=a.p,h=a.inputs,i,j,k,l,m=0,n=3,o=[];for(e=0;e<h.length;e++)switch(i=h[e],i.semantic){case "TEXCOORD":o.push(i.set)}for(;d<g.length;){var p=[],q=[],r={},t=[];a.vcount&&(n=a.vcount[m++]);for(e=0;e<n;e++)for(f=0;f<h.length;f++)switch(i=h[f],l=ga[i.source],j=g[d+e*h.length+i.offset],k=l.accessor.params.length,k*=j,i.semantic){case "VERTEX":i=W(b.vertices[j].position);p.push(c[i].index);break;case "NORMAL":q.push(new THREE.Vector3(l.data[k],
rocket-3d/web/js/Three.js:l.data[k+1],l.data[k+2]));break;case "TEXCOORD":r[i.set]===void 0&&(r[i.set]=[]);r[i.set].push(new THREE.UV(l.data[k],l.data[k+1]));break;case "COLOR":t.push((new THREE.Color).setRGB(l.data[k],l.data[k+1],l.data[k+2]))}var s;n==3?s=new THREE.Face3(p[0],p[1],p[2],[q[0],q[1],q[2]],t.length?t:new THREE.Color):n==4&&(s=new THREE.Face4(p[0],p[1],p[2],p[3],[q[0],q[1],q[2],q[3]],t.length?t:new THREE.Color));s.daeMaterial=a.material;b.faces.push(s);for(f=0;f<o.length;f++)e=r[o[f]],b.faceVertexUvs[f].push([e[0],
rocket-3d/web/js/Three.js:e[1],e[2]]);d+=h.length*n}};w.prototype=new u;w.prototype.constructor=w;u.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)if(this.inputs[b].source==a.id)this.inputs[b].source=a.input.POSITION.source};u.prototype.parse=function(a){this.inputs=[];this.material=a.getAttribute("material");this.count=S(a,"count",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "input":this.inputs.push((new A).parse(a.childNodes[b]));break;case "vcount":this.vcount=
rocket-3d/web/js/Three.js:I(c.textContent);break;case "p":this.p=I(c.textContent)}}return this};B.prototype.parse=function(a){this.params=[];this.source=a.getAttribute("source");this.count=S(a,"count",0);this.stride=S(a,"stride",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeName=="param"){var d={};d.name=c.getAttribute("name");d.type=c.getAttribute("type");this.params.push(d)}}return this};F.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++)if(a.childNodes[b].nodeName==
rocket-3d/web/js/Three.js:"input"){var c=(new A).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};A.prototype.parse=function(a){this.semantic=a.getAttribute("semantic");this.source=a.getAttribute("source").replace(/^#/,"");this.set=S(a,"set",-1);this.offset=S(a,"offset",0);if(this.semantic=="TEXCOORD"&&this.set<0)this.set=0;return this};x.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "bool_array":for(var d=M(c.textContent),
rocket-3d/web/js/Three.js:e=[],f=0;f<d.length;f++)e.push(d[f]=="true"||d[f]=="1"?!0:!1);this.data=e;this.type=c.nodeName;break;case "float_array":this.data=G(c.textContent);this.type=c.nodeName;break;case "int_array":this.data=I(c.textContent);this.type=c.nodeName;break;case "IDREF_array":case "Name_array":this.data=M(c.textContent);this.type=c.nodeName;break;case "technique_common":for(d=0;d<c.childNodes.length;d++)if(c.childNodes[d].nodeName=="accessor"){this.accessor=(new B).parse(c.childNodes[d]);break}}}return this};
rocket-3d/web/js/Three.js:x.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case "IDREF":case "Name":case "name":case "float":return this.data;case "float4x4":for(b=0;b<this.data.length;b+=16){var c=this.data.slice(b,b+16),d=new THREE.Matrix4;d.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15]);a.push(d)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+b.type+".")}return a};y.prototype.parse=function(a){this.id=a.getAttribute("id");
rocket-3d/web/js/Three.js:this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++)if(a.childNodes[b].nodeName=="instance_effect"){this.instance_effect=(new U).parse(a.childNodes[b]);break}return this};v.prototype.isColor=function(){return this.texture==null};v.prototype.isTexture=function(){return this.texture!=null};v.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "color":c=G(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],
rocket-3d/web/js/Three.js:c[1],c[2]);this.color.a=c[3];break;case "texture":this.texture=c.getAttribute("texture"),this.texcoord=c.getAttribute("texcoord")}}return this};J.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "ambient":case "emission":case "diffuse":case "specular":case "transparent":this[c.nodeName]=(new v).parse(c);break;case "shininess":case "reflectivity":case "transparency":var d;d=j.evaluate(".//dae:float",c,H,XPathResult.ORDERED_NODE_ITERATOR_TYPE,
rocket-3d/web/js/Three.js:null);for(var e=d.iterateNext(),f=[];e;)f.push(e),e=d.iterateNext();d=f;d.length>0&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};J.prototype.create=function(){var a={},b=this.transparency!==void 0&&this.transparency<1,c;for(c in this)switch(c){case "ambient":case "emission":case "diffuse":case "specular":var d=this[c];if(d instanceof v)if(d.isTexture()){if(this.effect.sampler&&this.effect.surface&&this.effect.sampler.source==this.effect.surface.sid&&(d=$[this.effect.surface.init_from]))a.map=
rocket-3d/web/js/Three.js:THREE.ImageUtils.loadTexture(Da+d.init_from),a.map.wrapS=THREE.RepeatWrapping,a.map.wrapT=THREE.RepeatWrapping,a.map.repeat.x=1,a.map.repeat.y=-1}else c=="diffuse"?a.color=d.color.getHex():b||(a[c]=d.color.getHex());break;case "shininess":case "reflectivity":a[c]=this[c];break;case "transparency":if(b)a.transparent=!0,a.opacity=this[c],b=!0}a.shading=Ba;return this.material=new THREE.MeshLambertMaterial(a)};s.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];
rocket-3d/web/js/Three.js:if(c.nodeType==1)switch(c.nodeName){case "init_from":this.init_from=c.textContent;break;case "format":this.format=c.textContent;break;default:console.log("unhandled Surface prop: "+c.nodeName)}}return this};E.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "source":this.source=c.textContent;break;case "minfilter":this.minfilter=c.textContent;break;case "magfilter":this.magfilter=c.textContent;break;case "mipfilter":this.mipfilter=
rocket-3d/web/js/Three.js:c.textContent;break;case "wrap_s":this.wrap_s=c.textContent;break;case "wrap_t":this.wrap_t=c.textContent;break;default:console.log("unhandled Sampler2D prop: "+c.nodeName)}}return this};R.prototype.create=function(){if(this.shader==null)return null};R.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};
rocket-3d/web/js/Three.js:R.prototype.parseNewparam=function(a){for(var b=a.getAttribute("sid"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "surface":this.surface=(new s(this)).parse(d);this.surface.sid=b;break;case "sampler2D":this.sampler=(new E(this)).parse(d);this.sampler.sid=b;break;case "extra":break;default:console.log(d.nodeName)}}};R.prototype.parseProfileCOMMON=function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "profile_COMMON":this.parseProfileCOMMON(d);
rocket-3d/web/js/Three.js:break;case "technique":b=d;break;case "newparam":this.parseNewparam(d);break;case "extra":break;default:console.log(d.nodeName)}}return b};R.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "lambert":case "blinn":case "phong":this.shader=(new J(c.nodeName,this)).parse(c)}}};U.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};K.prototype.parse=function(a){this.id=a.getAttribute("id");
rocket-3d/web/js/Three.js:this.name=a.getAttribute("name");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "source":c=(new x).parse(c);this.source[c.id]=c;break;case "sampler":this.sampler.push((new O(this)).parse(c));break;case "channel":this.channel.push((new P(this)).parse(c))}}return this};P.prototype.parse=function(a){this.source=a.getAttribute("source").replace(/^#/,"");this.target=a.getAttribute("target");var b=this.target.split("/");b.shift();var a=
rocket-3d/web/js/Three.js:b.shift(),c=a.indexOf(".")>=0,d=a.indexOf("(")>=0,e,f;if(c)b=a.split("."),a=b.shift(),f=b.shift();else if(d){e=a.split("(");a=e.shift();for(b=0;b<e.length;b++)e[b]=parseInt(e[b].replace(/\)/,""))}this.sid=a;this.dotSyntax=c;this.arrSyntax=d;this.arrIndices=e;this.member=f;return this};O.prototype.parse=function(a){this.id=a.getAttribute("id");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "input":this.inputs.push((new A).parse(c))}}return this};
rocket-3d/web/js/Three.js:O.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=this.inputs[a],c=this.animation.source[b.source];switch(b.semantic){case "INPUT":this.input=c.read();break;case "OUTPUT":this.output=c.read();break;case "INTERPOLATION":this.interpolation=c.read();break;case "IN_TANGENT":break;case "OUT_TANGENT":break;default:console.log(b.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=0;a<this.input.length;a++)this.startTime=
rocket-3d/web/js/Three.js:Math.min(this.startTime,this.input[a]),this.endTime=Math.max(this.endTime,this.input[a]);this.duration=this.endTime-this.startTime}};return{load:function(b,c){if(document.implementation&&document.implementation.createDocument){document.implementation.createDocument("http://www.collada.org/2005/11/COLLADASchema","COLLADA",null);b+="?rnd="+Math.random();var d=new XMLHttpRequest;d.overrideMimeType&&d.overrideMimeType("text/xml");d.onreadystatechange=function(){if(d.readyState==4&&(d.status==0||d.status==
rocket-3d/web/js/Three.js:200))da=c,a(d.responseXML,void 0,b)};d.open("GET",b,!0);d.send(null)}else alert("Don't know how to parse XML!")},parse:a,setPreferredShading:function(a){Ba=a},applySkin:g,geometries:qa}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=new THREE.Loader;THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;THREE.JSONLoader.prototype.supr=THREE.Loader.prototype;
rocket-3d/web/js/Three.js:THREE.JSONLoader.prototype.load=function(a,c,b){if(a instanceof Object)console.warn("DEPRECATED: JSONLoader( parameters ) is now JSONLoader( url, callback, texturePath )."),b=a,a=b.model,c=b.callback,b=b.texture_path;b=b?b:this.extractUrlbase(a);this.onLoadStart();this.loadAjaxJSON(this,a,c,b)};
rocket-3d/web/js/Three.js:THREE.JSONLoader.prototype.loadAjaxJSON=function(a,c,b,d,g){var f=new XMLHttpRequest,e=0;f.onreadystatechange=function(){if(f.readyState==4)if(f.status==200||f.status==0)try{var h=JSON.parse(f.responseText);a.createModel(h,b,d);a.onLoadComplete()}catch(i){console.error(i),console.warn("DEPRECATED: ["+c+"] seems to be using old model format")}else console.error("Couldn't load ["+c+"] ["+f.status+"]");else f.readyState==3?g&&(e==0&&(e=f.getResponseHeader("Content-Length")),g({total:e,loaded:f.responseText.length})):
rocket-3d/web/js/Three.js:f.readyState==2&&(e=f.getResponseHeader("Content-Length"))};f.open("GET",c,!0);f.overrideMimeType("text/plain; charset=x-user-defined");f.setRequestHeader("Content-Type","text/plain");f.send(null)};
rocket-3d/web/js/Three.js:THREE.JSONLoader.prototype.createModel=function(a,c,b){var d=new THREE.Geometry,g=a.scale!==void 0?1/a.scale:1;this.initMaterials(d,a.materials,b);(function(b){if(a.metadata===void 0||a.metadata.formatVersion===void 0||a.metadata.formatVersion!==3)console.error("Deprecated file format.");else{var c,g,i,l,k,o,p,m,r,n,q,t,w,u,B=a.faces;o=a.vertices;var F=a.normals,A=a.colors,x=0;for(c=0;c<a.uvs.length;c++)a.uvs[c].length&&x++;for(c=0;c<x;c++)d.faceUvs[c]=[],d.faceVertexUvs[c]=[];l=0;for(k=o.length;l<
rocket-3d/web/js/Three.js:k;)p=new THREE.Vertex,p.position.x=o[l++]*b,p.position.y=o[l++]*b,p.position.z=o[l++]*b,d.vertices.push(p);l=0;for(k=B.length;l<k;){b=B[l++];o=b&1;i=b&2;c=b&4;g=b&8;m=b&16;p=b&32;n=b&64;b&=128;o?(q=new THREE.Face4,q.a=B[l++],q.b=B[l++],q.c=B[l++],q.d=B[l++],o=4):(q=new THREE.Face3,q.a=B[l++],q.b=B[l++],q.c=B[l++],o=3);if(i)i=B[l++],q.materialIndex=i;i=d.faces.length;if(c)for(c=0;c<x;c++)t=a.uvs[c],r=B[l++],u=t[r*2],r=t[r*2+1],d.faceUvs[c][i]=new THREE.UV(u,r);if(g)for(c=0;c<x;c++){t=a.uvs[c];w=[];
rocket-3d/web/js/Three.js:for(g=0;g<o;g++)r=B[l++],u=t[r*2],r=t[r*2+1],w[g]=new THREE.UV(u,r);d.faceVertexUvs[c][i]=w}if(m)m=B[l++]*3,g=new THREE.Vector3,g.x=F[m++],g.y=F[m++],g.z=F[m],q.normal=g;if(p)for(c=0;c<o;c++)m=B[l++]*3,g=new THREE.Vector3,g.x=F[m++],g.y=F[m++],g.z=F[m],q.vertexNormals.push(g);if(n)p=B[l++],p=new THREE.Color(A[p]),q.color=p;if(b)for(c=0;c<o;c++)p=B[l++],p=new THREE.Color(A[p]),q.vertexColors.push(p);d.faces.push(q)}}})(g);(function(){var b,c,g,i;if(a.skinWeights){b=0;for(c=a.skinWeights.length;b<c;b+=
rocket-3d/web/js/Three.js:2)g=a.skinWeights[b],i=a.skinWeights[b+1],d.skinWeights.push(new THREE.Vector4(g,i,0,0))}if(a.skinIndices){b=0;for(c=a.skinIndices.length;b<c;b+=2)g=a.skinIndices[b],i=a.skinIndices[b+1],d.skinIndices.push(new THREE.Vector4(g,i,0,0))}d.bones=a.bones;d.animation=a.animation})();(function(b){if(a.morphTargets!==void 0){var c,g,i,l,k,o,p,m,r;c=0;for(g=a.morphTargets.length;c<g;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];m=d.morphTargets[c].vertices;
rocket-3d/web/js/Three.js:r=a.morphTargets[c].vertices;i=0;for(l=r.length;i<l;i+=3)k=r[i]*b,o=r[i+1]*b,p=r[i+2]*b,m.push(new THREE.Vertex(new THREE.Vector3(k,o,p)))}}if(a.morphColors!==void 0){c=0;for(g=a.morphColors.length;c<g;c++){d.morphColors[c]={};d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=[];l=d.morphColors[c].colors;k=a.morphColors[c].colors;b=0;for(i=k.length;b<i;b+=3)o=new THREE.Color(16755200),o.setRGB(k[b],k[b+1],k[b+2]),l.push(o)}}})(g);d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&
rocket-3d/web/js/Three.js:d.computeTangents();c(d)};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){}};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
rocket-3d/web/js/Three.js:THREE.SceneLoader.prototype.load=function(a,c){var b=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(d.readyState==4)if(d.status==200||d.status==0)try{var g=JSON.parse(d.responseText);g.metadata===void 0||g.metadata.formatVersion===void 0||g.metadata.formatVersion!==3?console.error("Deprecated file format."):b.createScene(g,c,a)}catch(f){console.error(f),console.warn("DEPRECATED: ["+a+"] seems to be using old model format")}else console.error("Couldn't load ["+a+"] ["+d.status+"]")};
rocket-3d/web/js/Three.js:d.open("GET",a,!0);d.overrideMimeType("text/plain; charset=x-user-defined");d.setRequestHeader("Content-Type","text/plain");d.send(null)};
rocket-3d/web/js/Three.js:THREE.SceneLoader.prototype.createScene=function(a,c,b){function d(a,b){return b=="relativeToHTML"?a:l+"/"+a}function g(){var a;for(p in R.objects)if(!H.objects[p])if(t=R.objects[p],t.geometry!==void 0){if(v=H.geometries[t.geometry]){a=!1;for(I=0;I<t.materials.length;I++)E=H.materials[t.materials[I]],a=E instanceof THREE.ShaderMaterial;a&&v.computeTangents();B=t.position;F=t.rotation;A=t.quaternion;x=t.scale;A=0;E.length==0&&(E=new THREE.MeshFaceMaterial);E.length>1&&(E=new THREE.MeshFaceMaterial);
rocket-3d/web/js/Three.js:a=new THREE.Mesh(v,E);a.name=p;a.position.set(B[0],B[1],B[2]);A?(a.quaternion.set(A[0],A[1],A[2],A[3]),a.useQuaternion=!0):a.rotation.set(F[0],F[1],F[2]);a.scale.set(x[0],x[1],x[2]);a.visible=t.visible;H.scene.add(a);H.objects[p]=a;if(t.meshCollider){var b=THREE.CollisionUtils.MeshColliderWBox(a);H.scene.collisions.colliders.push(b)}if(t.castsShadow)b=new THREE.ShadowVolume(v),H.scene.add(b),b.position=a.position,b.rotation=a.rotation,b.scale=a.scale;t.trigger&&t.trigger.toLowerCase()!="none"&&(b=
rocket-3d/web/js/Three.js:{type:t.trigger,object:t},H.triggers[a.name]=b)}}else B=t.position,F=t.rotation,A=t.quaternion,x=t.scale,A=0,a=new THREE.Object3D,a.name=p,a.position.set(B[0],B[1],B[2]),A?(a.quaternion.set(A[0],A[1],A[2],A[3]),a.useQuaternion=!0):a.rotation.set(F[0],F[1],F[2]),a.scale.set(x[0],x[1],x[2]),a.visible=t.visible!==void 0?t.visible:!1,H.scene.add(a),H.objects[p]=a,H.empties[p]=a,t.trigger&&t.trigger.toLowerCase()!="none"&&(b={type:t.trigger,object:t},H.triggers[a.name]=b)}function f(a){return function(b){H.geometries[a]=
rocket-3d/web/js/Three.js:b;g();K-=1;i.onLoadComplete();h()}}function e(a){return function(b){H.geometries[a]=b}}function h(){i.callbackProgress({totalModels:O,totalTextures:aa,loadedModels:O-K,loadedTextures:aa-P},H);i.onLoadProgress();K==0&&P==0&&c(H)}var i=this,l=THREE.Loader.prototype.extractUrlbase(b),k,o,p,m,r,n,q,t,w,u,B,F,A,x,y,v,J,s,E,R,U,K,P,O,aa,H;R=a;b=new THREE.BinaryLoader;U=new THREE.JSONLoader;P=K=0;H={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},triggers:{},
rocket-3d/web/js/Three.js:empties:{}};a=!1;for(p in R.objects)if(t=R.objects[p],t.meshCollider){a=!0;break}if(a)H.scene.collisions=new THREE.CollisionSystem;if(R.transform){a=R.transform.position;w=R.transform.rotation;var G=R.transform.scale;a&&H.scene.position.set(a[0],a[1],a[2]);w&&H.scene.rotation.set(w[0],w[1],w[2]);G&&H.scene.scale.set(G[0],G[1],G[2]);(a||w||G)&&H.scene.updateMatrix()}a=function(){P-=1;h();i.onLoadComplete()};for(r in R.cameras)w=R.cameras[r],w.type=="perspective"?J=new THREE.PerspectiveCamera(w.fov,
rocket-3d/web/js/Three.js:w.aspect,w.near,w.far):w.type=="ortho"&&(J=new THREE.OrthographicCamera(w.left,w.right,w.top,w.bottom,w.near,w.far)),B=w.position,w=w.target,J.position.set(B[0],B[1],B[2]),J.target=new THREE.Vector3(w[0],w[1],w[2]),H.cameras[r]=J;for(m in R.lights)w=R.lights[m],r=w.color!==void 0?w.color:16777215,J=w.intensity!==void 0?w.intensity:1,w.type=="directional"?(B=w.direction,u=new THREE.DirectionalLight(r,J),u.position.set(B[0],B[1],B[2]),u.position.normalize()):w.type=="point"?(B=w.position,u=w.distance,
rocket-3d/web/js/Three.js:u=new THREE.PointLight(r,J,u),u.position.set(B[0],B[1],B[2])):w.type=="ambient"&&(u=new THREE.AmbientLight(r)),H.scene.add(u),H.lights[m]=u;for(n in R.fogs)m=R.fogs[n],m.type=="linear"?s=new THREE.Fog(0,m.near,m.far):m.type=="exp2"&&(s=new THREE.FogExp2(0,m.density)),w=m.color,s.color.setRGB(w[0],w[1],w[2]),H.fogs[n]=s;if(H.cameras&&R.defaults.camera)H.currentCamera=H.cameras[R.defaults.camera];if(H.fogs&&R.defaults.fog)H.scene.fog=H.fogs[R.defaults.fog];w=R.defaults.bgcolor;H.bgColor=new THREE.Color;
rocket-3d/web/js/Three.js:H.bgColor.setRGB(w[0],w[1],w[2]);H.bgColorAlpha=R.defaults.bgalpha;for(k in R.geometries)if(n=R.geometries[k],n.type=="bin_mesh"||n.type=="ascii_mesh")K+=1,i.onLoadStart();O=K;for(k in R.geometries)n=R.geometries[k],n.type=="cube"?(v=new THREE.CubeGeometry(n.width,n.height,n.depth,n.segmentsWidth,n.segmentsHeight,n.segmentsDepth,null,n.flipped,n.sides),H.geometries[k]=v):n.type=="plane"?(v=new THREE.PlaneGeometry(n.width,n.height,n.segmentsWidth,n.segmentsHeight),H.geometries[k]=v):n.type=="sphere"?
rocket-3d/web/js/Three.js:(v=new THREE.SphereGeometry(n.radius,n.segmentsWidth,n.segmentsHeight),H.geometries[k]=v):n.type=="cylinder"?(v=new THREE.CylinderGeometry(n.topRad,n.botRad,n.height,n.radSegs,n.heightSegs),H.geometries[k]=v):n.type=="torus"?(v=new THREE.TorusGeometry(n.radius,n.tube,n.segmentsR,n.segmentsT),H.geometries[k]=v):n.type=="icosahedron"?(v=new THREE.IcosahedronGeometry(n.subdivisions),H.geometries[k]=v):n.type=="bin_mesh"?b.load(d(n.url,R.urlBaseType),f(k)):n.type=="ascii_mesh"?U.load(d(n.url,R.urlBaseType),
rocket-3d/web/js/Three.js:f(k)):n.type=="embedded_mesh"&&(n=R.embeds[n.id])&&U.createModel(n,e(k),"");for(q in R.textures)if(k=R.textures[q],k.url instanceof Array){P+=k.url.length;for(n=0;n<k.url.length;n++)i.onLoadStart()}else P+=1,i.onLoadStart();aa=P;for(q in R.textures){k=R.textures[q];if(k.mapping!=void 0&&THREE[k.mapping]!=void 0)k.mapping=new THREE[k.mapping];if(k.url instanceof Array){n=[];for(var I=0;I<k.url.length;I++)n[I]=d(k.url[I],R.urlBaseType);n=THREE.ImageUtils.loadTextureCube(n,k.mapping,a)}else{n=THREE.ImageUtils.loadTexture(d(k.url,
rocket-3d/web/js/Three.js:R.urlBaseType),k.mapping,a);if(THREE[k.minFilter]!=void 0)n.minFilter=THREE[k.minFilter];if(THREE[k.magFilter]!=void 0)n.magFilter=THREE[k.magFilter];if(k.repeat){n.repeat.set(k.repeat[0],k.repeat[1]);if(k.repeat[0]!=1)n.wrapS=THREE.RepeatWrapping;if(k.repeat[1]!=1)n.wrapT=THREE.RepeatWrapping}k.offset&&n.offset.set(k.offset[0],k.offset[1]);if(k.wrap){s={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(s[k.wrap[0]]!==void 0)n.wrapS=s[k.wrap[0]];if(s[k.wrap[1]]!==void 0)n.wrapT=
rocket-3d/web/js/Three.js:s[k.wrap[1]]}}H.textures[q]=n}for(o in R.materials){q=R.materials[o];for(y in q.parameters)if(y=="envMap"||y=="map"||y=="lightMap")q.parameters[y]=H.textures[q.parameters[y]];else if(y=="shading")q.parameters[y]=q.parameters[y]=="flat"?THREE.FlatShading:THREE.SmoothShading;else if(y=="blending")q.parameters[y]=THREE[q.parameters[y]]?THREE[q.parameters[y]]:THREE.NormalBlending;else if(y=="combine")q.parameters[y]=q.parameters[y]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation;else if(y==
rocket-3d/web/js/Three.js:"vertexColors")if(q.parameters[y]=="face")q.parameters[y]=THREE.FaceColors;else if(q.parameters[y])q.parameters[y]=THREE.VertexColors;if(q.parameters.opacity!==void 0&&q.parameters.opacity<1)q.parameters.transparent=!0;if(q.parameters.normalMap){k=THREE.ShaderUtils.lib.normal;a=THREE.UniformsUtils.clone(k.uniforms);n=q.parameters.color;s=q.parameters.specular;b=q.parameters.ambient;U=q.parameters.shininess;a.tNormal.texture=H.textures[q.parameters.normalMap];if(q.parameters.normalMapFactor)a.uNormalScale.value=
rocket-3d/web/js/Three.js:q.parameters.normalMapFactor;if(q.parameters.map)a.tDiffuse.texture=q.parameters.map,a.enableDiffuse.value=!0;if(q.parameters.lightMap)a.tAO.texture=q.parameters.lightMap,a.enableAO.value=!0;if(q.parameters.specularMap)a.tSpecular.texture=H.textures[q.parameters.specularMap],a.enableSpecular.value=!0;a.uDiffuseColor.value.setHex(n);a.uSpecularColor.value.setHex(s);a.uAmbientColor.value.setHex(b);a.uShininess.value=U;if(q.parameters.opacity)a.uOpacity.value=q.parameters.opacity;q=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,
rocket-3d/web/js/Three.js:vertexShader:k.vertexShader,uniforms:a,lights:!0,fog:!0})}else q=new THREE[q.type](q.parameters);H.materials[o]=q}g();i.callbackSync(H);h()};THREE.UTF8Loader=function(){};THREE.UTF8Loader.prototype=new THREE.UTF8Loader;THREE.UTF8Loader.prototype.constructor=THREE.UTF8Loader;
rocket-3d/web/js/Three.js:THREE.UTF8Loader.prototype.load=function(a,c,b){if(a instanceof Object)console.warn("DEPRECATED: UTF8Loader( parameters ) is now UTF8Loader( url, callback, metaData )."),b=a,a=b.model,c=b.callback,b={scale:b.scale,offsetX:b.offsetX,offsetY:b.offsetY,offsetZ:b.offsetZ};var d=new XMLHttpRequest,g=b.scale!==void 0?b.scale:1,f=b.offsetX!==void 0?b.offsetX:0,e=b.offsetY!==void 0?b.offsetY:0,h=b.offsetZ!==void 0?b.offsetZ:0;d.onreadystatechange=function(){d.readyState==4?d.status==200||d.status==0?THREE.UTF8Loader.prototype.createModel(d.responseText,
rocket-3d/web/js/Three.js:c,g,f,e,h):alert("Couldn't load ["+a+"] ["+d.status+"]"):d.readyState!=3&&d.readyState==2&&d.getResponseHeader("Content-Length")};d.open("GET",a,!0);d.send(null)};THREE.UTF8Loader.prototype.decompressMesh=function(a){var c=a.charCodeAt(0);c>=57344&&(c-=2048);c++;for(var b=new Float32Array(8*c),d=1,g=0;g<8;g++){for(var f=0,e=0;e<c;++e){var h=a.charCodeAt(e+d);f+=h>>1^-(h&1);b[8*e+g]=f}d+=c}c=a.length-d;f=new Uint16Array(c);for(g=e=0;g<c;g++)h=a.charCodeAt(g+d),f[g]=e-h,h==0&&e++;return[b,f]};
rocket-3d/web/js/Three.js:THREE.UTF8Loader.prototype.createModel=function(a,c,b,d,g,f){var e=function(){var c=this;c.materials=[];THREE.Geometry.call(this);var e=THREE.UTF8Loader.prototype.decompressMesh(a),l=[],k=[];(function(a,e,i){for(var k,l,q,t=a.length;i<t;i+=e)k=a[i],l=a[i+1],q=a[i+2],k=k/16383*b,l=l/16383*b,q=q/16383*b,k+=d,l+=g,q+=f,c.vertices.push(new THREE.Vertex(new THREE.Vector3(k,l,q)))})(e[0],8,0);(function(a,b,c){for(var d,e,f=a.length;c<f;c+=b)d=a[c],e=a[c+1],d/=1023,e/=1023,k.push(d,1-e)})(e[0],8,3);(function(a,
rocket-3d/web/js/Three.js:b,c){for(var d,e,f,g=a.length;c<g;c+=b)d=a[c],e=a[c+1],f=a[c+2],d=(d-512)/511,e=(e-512)/511,f=(f-512)/511,l.push(d,e,f)})(e[0],8,5);(function(a){var b,d,e,f,g,i,w,u,B,F=a.length;for(b=0;b<F;b+=3){d=a[b];e=a[b+1];f=a[b+2];g=c;u=d;B=e;i=f;w=d;var A=e,x=f,y=g.materials[0],v=l[A*3],J=l[A*3+1],A=l[A*3+2],s=l[x*3],E=l[x*3+1],x=l[x*3+2];w=new THREE.Vector3(l[w*3],l[w*3+1],l[w*3+2]);A=new THREE.Vector3(v,J,A);x=new THREE.Vector3(s,E,x);g.faces.push(new THREE.Face3(u,B,i,[w,A,x],null,y));g=k[d*2];d=k[d*2+
rocket-3d/web/js/Three.js:1];i=k[e*2];w=k[e*2+1];u=k[f*2];B=k[f*2+1];f=c.faceVertexUvs[0];e=i;i=w;w=[];w.push(new THREE.UV(g,d));w.push(new THREE.UV(e,i));w.push(new THREE.UV(u,B));f.push(w)}})(e[1]);this.computeCentroids();this.computeFaceNormals()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;c(new e)};
rocket-3d/web/js/Three.js:THREE.Axes=function(){THREE.Object3D.call(this);var a=new THREE.Geometry;a.vertices.push(new THREE.Vertex);a.vertices.push(new THREE.Vertex(new THREE.Vector3(0,100,0)));var c=new THREE.CylinderGeometry(0,5,25,5,1),b=new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680}));b.rotation.z=-Math.PI/2;this.add(b);b=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:16711680}));b.position.x=100;b.rotation.z=-Math.PI/2;this.add(b);b=new THREE.Line(a,new THREE.LineBasicMaterial({color:65280}));this.add(b);
rocket-3d/web/js/Three.js:b=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:65280}));b.position.y=100;this.add(b);b=new THREE.Line(a,new THREE.LineBasicMaterial({color:255}));b.rotation.x=Math.PI/2;this.add(b);b=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:255}));b.position.z=100;b.rotation.x=Math.PI/2;this.add(b)};THREE.Axes.prototype=new THREE.Object3D;THREE.Axes.prototype.constructor=THREE.Axes;
rocket-3d/web/js/Three.js:THREE.MarchingCubes=function(a,c){THREE.Object3D.call(this);this.material=c;this.init=function(a){this.resolution=a;this.isolation=80;this.size=a;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(this.size3*3);this.vlist=new Float32Array(36);this.nlist=new Float32Array(36);this.firstDraw=!0;this.maxCount=4096;this.count=0;this.hasNormal=
rocket-3d/web/js/Three.js:this.hasPos=!1;this.positionArray=new Float32Array(this.maxCount*3);this.normalArray=new Float32Array(this.maxCount*3)};this.lerp=function(a,c,g){return a+(c-a)*g};this.VIntX=function(a,c,g,f,e,h,i,l,k,o){e=(e-k)/(o-k);k=this.normal_cache;c[f]=h+e*this.delta;c[f+1]=i;c[f+2]=l;g[f]=this.lerp(k[a],k[a+3],e);g[f+1]=this.lerp(k[a+1],k[a+4],e);g[f+2]=this.lerp(k[a+2],k[a+5],e)};this.VIntY=function(a,c,g,f,e,h,i,l,k,o){e=(e-k)/(o-k);k=this.normal_cache;c[f]=h;c[f+1]=i+e*this.delta;c[f+2]=l;c=a+this.yd*
rocket-3d/web/js/Three.js:3;g[f]=this.lerp(k[a],k[c],e);g[f+1]=this.lerp(k[a+1],k[c+1],e);g[f+2]=this.lerp(k[a+2],k[c+2],e)};this.VIntZ=function(a,c,g,f,e,h,i,l,k,o){e=(e-k)/(o-k);k=this.normal_cache;c[f]=h;c[f+1]=i;c[f+2]=l+e*this.delta;c=a+this.zd*3;g[f]=this.lerp(k[a],k[c],e);g[f+1]=this.lerp(k[a+1],k[c+1],e);g[f+2]=this.lerp(k[a+2],k[c+2],e)};this.compNorm=function(a){var c=a*3;this.normal_cache[c]===0&&(this.normal_cache[c]=this.field[a-1]-this.field[a+1],this.normal_cache[c+1]=this.field[a-this.yd]-this.field[a+this.yd],
rocket-3d/web/js/Three.js:this.normal_cache[c+2]=this.field[a-this.zd]-this.field[a+this.zd])};this.polygonize=function(a,c,g,f,e,h){var i=f+1,l=f+this.yd,k=f+this.zd,o=i+this.yd,p=i+this.zd,m=f+this.yd+this.zd,r=i+this.yd+this.zd,n=0,q=this.field[f],t=this.field[i],w=this.field[l],u=this.field[o],B=this.field[k],F=this.field[p],A=this.field[m],x=this.field[r];q<e&&(n|=1);t<e&&(n|=2);w<e&&(n|=8);u<e&&(n|=4);B<e&&(n|=16);F<e&&(n|=32);A<e&&(n|=128);x<e&&(n|=64);var y=THREE.edgeTable[n];if(y===0)return 0;var v=this.delta,J=a+
rocket-3d/web/js/Three.js:v,s=c+v,v=g+v;y&1&&(this.compNorm(f),this.compNorm(i),this.VIntX(f*3,this.vlist,this.nlist,0,e,a,c,g,q,t));y&2&&(this.compNorm(i),this.compNorm(o),this.VIntY(i*3,this.vlist,this.nlist,3,e,J,c,g,t,u));y&4&&(this.compNorm(l),this.compNorm(o),this.VIntX(l*3,this.vlist,this.nlist,6,e,a,s,g,w,u));y&8&&(this.compNorm(f),this.compNorm(l),this.VIntY(f*3,this.vlist,this.nlist,9,e,a,c,g,q,w));y&16&&(this.compNorm(k),this.compNorm(p),this.VIntX(k*3,this.vlist,this.nlist,12,e,a,c,v,B,F));y&32&&(this.compNorm(p),
rocket-3d/web/js/Three.js:this.compNorm(r),this.VIntY(p*3,this.vlist,this.nlist,15,e,J,c,v,F,x));y&64&&(this.compNorm(m),this.compNorm(r),this.VIntX(m*3,this.vlist,this.nlist,18,e,a,s,v,A,x));y&128&&(this.compNorm(k),this.compNorm(m),this.VIntY(k*3,this.vlist,this.nlist,21,e,a,c,v,B,A));y&256&&(this.compNorm(f),this.compNorm(k),this.VIntZ(f*3,this.vlist,this.nlist,24,e,a,c,g,q,B));y&512&&(this.compNorm(i),this.compNorm(p),this.VIntZ(i*3,this.vlist,this.nlist,27,e,J,c,g,t,F));y&1024&&(this.compNorm(o),this.compNorm(r),this.VIntZ(o*
rocket-3d/web/js/Three.js:3,this.vlist,this.nlist,30,e,J,s,g,u,x));y&2048&&(this.compNorm(l),this.compNorm(m),this.VIntZ(l*3,this.vlist,this.nlist,33,e,a,s,g,w,A));n<<=4;for(e=f=0;THREE.triTable[n+e]!=-1;)a=n+e,c=a+1,g=a+2,this.posnormtriv(this.vlist,this.nlist,3*THREE.triTable[a],3*THREE.triTable[c],3*THREE.triTable[g],h),e+=3,f++;return f};this.posnormtriv=function(a,c,g,f,e,h){var i=this.count*3;this.positionArray[i]=a[g];this.positionArray[i+1]=a[g+1];this.positionArray[i+2]=a[g+2];this.positionArray[i+3]=a[f];this.positionArray[i+
rocket-3d/web/js/Three.js:4]=a[f+1];this.positionArray[i+5]=a[f+2];this.positionArray[i+6]=a[e];this.positionArray[i+7]=a[e+1];this.positionArray[i+8]=a[e+2];this.normalArray[i]=c[g];this.normalArray[i+1]=c[g+1];this.normalArray[i+2]=c[g+2];this.normalArray[i+3]=c[f];this.normalArray[i+4]=c[f+1];this.normalArray[i+5]=c[f+2];this.normalArray[i+6]=c[e];this.normalArray[i+7]=c[e+1];this.normalArray[i+8]=c[e+2];this.hasNormal=this.hasPos=!0;this.count+=3;this.count>=this.maxCount-3&&h(this)};this.begin=function(){this.count=0;
rocket-3d/web/js/Three.js:this.hasNormal=this.hasPos=!1};this.end=function(a){if(this.count!==0){for(var c=this.count*3;c<this.positionArray.length;c++)this.positionArray[c]=0;a(this)}};this.addBall=function(a,c,g,f,e){var h=this.size*Math.sqrt(f/e),i=g*this.size,l=c*this.size,k=a*this.size,o=Math.floor(i-h);o<1&&(o=1);i=Math.floor(i+h);i>this.size-1&&(i=this.size-1);var p=Math.floor(l-h);p<1&&(p=1);l=Math.floor(l+h);l>this.size-1&&(l=this.size-1);var m=Math.floor(k-h);m<1&&(m=1);h=Math.floor(k+h);h>this.size-1&&(h=this.size-
rocket-3d/web/js/Three.js:1);for(var r,n,q,t,w,u;o<i;o++){k=this.size2*o;n=o/this.size-g;w=n*n;for(n=p;n<l;n++){q=k+this.size*n;r=n/this.size-c;u=r*r;for(r=m;r<h;r++)t=r/this.size-a,t=f/(1.0E-6+t*t+u+w)-e,t>0&&(this.field[q+r]+=t)}}};this.addPlaneX=function(a,c){var g,f,e,h,i,l=this.size,k=this.yd,o=this.zd,p=this.field,m=l*Math.sqrt(a/c);m>l&&(m=l);for(g=0;g<m;g++)if(f=g/l,f*=f,h=a/(1.0E-4+f)-c,h>0)for(f=0;f<l;f++){i=g+f*k;for(e=0;e<l;e++)p[o*e+i]+=h}};this.addPlaneY=function(a,c){var g,f,e,h,i,l,k=this.size,o=this.yd,p=
rocket-3d/web/js/Three.js:this.zd,m=this.field,r=k*Math.sqrt(a/c);r>k&&(r=k);for(f=0;f<r;f++)if(g=f/k,g*=g,h=a/(1.0E-4+g)-c,h>0){i=f*o;for(g=0;g<k;g++){l=i+g;for(e=0;e<k;e++)m[p*e+l]+=h}}};this.addPlaneZ=function(a,c){var g,f,e,h,i,l,k=this.size,o=this.yd,p=this.zd,m=this.field,r=k*Math.sqrt(a/c);r>k&&(r=k);for(e=0;e<r;e++)if(g=e/k,g*=g,h=a/(1.0E-4+g)-c,h>0){i=p*e;for(f=0;f<k;f++){l=i+f*o;for(g=0;g<k;g++)m[l+g]+=h}}};this.reset=function(){var a;for(a=0;a<this.size3;a++)this.normal_cache[a*3]=0,this.field[a]=0};this.render=
rocket-3d/web/js/Three.js:function(a){this.begin();var c,g,f,e,h,i,l,k,o,p=this.size-2;for(e=1;e<p;e++){o=this.size2*e;l=(e-this.halfsize)/this.halfsize;for(f=1;f<p;f++){k=o+this.size*f;i=(f-this.halfsize)/this.halfsize;for(g=1;g<p;g++)h=(g-this.halfsize)/this.halfsize,c=k+g,this.polygonize(h,i,l,c,this.isolation,a)}}this.end(a)};this.generateGeometry=function(){var a=0,c=new THREE.Geometry,g=[];this.render(function(f){var e,h,i,l,k,o,p,m;for(e=0;e<f.count;e++)p=e*3,k=p+1,m=p+2,h=f.positionArray[p],i=f.positionArray[k],l=
rocket-3d/web/js/Three.js:f.positionArray[m],o=new THREE.Vector3(h,i,l),h=f.normalArray[p],i=f.normalArray[k],l=f.normalArray[m],p=new THREE.Vector3(h,i,l),p.normalize(),k=new THREE.Vertex(o),c.vertices.push(k),g.push(p);o=f.count/3;for(e=0;e<o;e++)p=(a+e)*3,k=p+1,m=p+2,h=g[p],i=g[k],l=g[m],p=new THREE.Face3(p,k,m,[h,i,l]),c.faces.push(p);a+=o;f.count=0});return c};this.init(a)};THREE.MarchingCubes.prototype=new THREE.Object3D;THREE.MarchingCubes.prototype.constructor=THREE.MarchingCubes;
rocket-3d/web/js/Three.js:THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,
rocket-3d/web/js/Three.js:1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,
rocket-3d/web/js/Three.js:419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);
rocket-3d/web/js/Three.js:THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,
rocket-3d/web/js/Three.js:-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,
rocket-3d/web/js/Three.js:-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,
rocket-3d/web/js/Three.js:-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,
rocket-3d/web/js/Three.js:8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,
rocket-3d/web/js/Three.js:-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,
rocket-3d/web/js/Three.js:5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,
rocket-3d/web/js/Three.js:-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,
rocket-3d/web/js/Three.js:10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,
rocket-3d/web/js/Three.js:6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,
rocket-3d/web/js/Three.js:8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,
rocket-3d/web/js/Three.js:2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,
rocket-3d/web/js/Three.js:-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,
rocket-3d/web/js/Three.js:-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,
rocket-3d/web/js/Three.js:-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
rocket-3d/web/js/Three.js:1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,
rocket-3d/web/js/Three.js:-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,
rocket-3d/web/js/Three.js:2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,
rocket-3d/web/js/Three.js:4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,
rocket-3d/web/js/Three.js:-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,
rocket-3d/web/js/Three.js:2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);
rocket-3d/web/js/Three.js:if(THREE.WebGLRenderer)THREE.AnaglyphWebGLRenderer=function(a){THREE.WebGLRenderer.call(this,a);this.autoUpdateScene=!1;var c=this,b=this.setSize,d=this.render,g=new THREE.PerspectiveCamera,f=new THREE.PerspectiveCamera,e=new THREE.Matrix4,h=new THREE.Matrix4,i,l,k,o;g.matrixAutoUpdate=f.matrixAutoUpdate=!1;var a={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},p=new THREE.WebGLRenderTarget(512,512,a),m=new THREE.WebGLRenderTarget(512,512,a),r=new THREE.PerspectiveCamera(53,
rocket-3d/web/js/Three.js:1,1,1E4);r.position.z=2;var a=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",value:0,texture:p},mapRight:{type:"t",value:1,texture:m}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\nvec4 colorL, colorR;\nvec2 uv = vUv;\ncolorL = texture2D( mapLeft, uv );\ncolorR = texture2D( mapRight, uv );\ngl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\n}"}),
rocket-3d/web/js/Three.js:n=new THREE.Scene;n.add(new THREE.Mesh(new THREE.PlaneGeometry(2,2),a));n.add(r);this.setSize=function(a,d){b.call(c,a,d);p.width=a;p.height=d;m.width=a;m.height=d};this.render=function(a,b){a.updateMatrixWorld();if(i!==b.aspect||l!==b.near||k!==b.far||o!==b.fov){i=b.aspect;l=b.near;k=b.far;o=b.fov;var w=b.projectionMatrix.clone(),u=125/30*0.5,B=u*l/125,F=l*Math.tan(o*Math.PI/360),A;e.n14=u;h.n14=-u;u=-F*i+B;A=F*i+B;w.n11=2*l/(A-u);w.n13=(A+u)/(A-u);g.projectionMatrix.copy(w);u=-F*i-B;A=F*i-B;w.n11=
rocket-3d/web/js/Three.js:2*l/(A-u);w.n13=(A+u)/(A-u);f.projectionMatrix.copy(w)}g.matrixWorld.copy(b.matrixWorld).multiplySelf(h);g.position.copy(b.position);g.near=b.near;g.far=b.far;d.call(c,a,g,p,!0);f.matrixWorld.copy(b.matrixWorld).multiplySelf(e);f.position.copy(b.position);f.near=b.near;f.far=b.far;d.call(c,a,f,m,!0);n.updateMatrixWorld();d.call(c,n,r)}};
rocket-3d/web/js/Three.js:if(THREE.WebGLRenderer)THREE.CrosseyedWebGLRenderer=function(a){THREE.WebGLRenderer.call(this,a);this.autoClear=!1;var c=this,b=this.setSize,d=this.render,g,f,e=new THREE.PerspectiveCamera;e.target=new THREE.Vector3(0,0,0);var h=new THREE.PerspectiveCamera;h.target=new THREE.Vector3(0,0,0);c.separation=10;if(a&&a.separation!==void 0)c.separation=a.separation;this.setSize=function(a,d){b.call(c,a,d);g=a/2;f=d};this.render=function(a,b){this.clear();e.fov=b.fov;e.aspect=0.5*b.aspect;e.near=b.near;e.far=
rocket-3d/web/js/Three.js:b.far;e.updateProjectionMatrix();e.position.copy(b.position);e.target.copy(b.target);e.translateX(c.separation);e.lookAt(e.target);h.projectionMatrix=e.projectionMatrix;h.position.copy(b.position);h.target.copy(b.target);h.translateX(-c.separation);h.lookAt(h.target);this.setViewport(0,0,g,f);d.call(c,a,e);this.setViewport(g,0,g,f);d.call(c,a,h,!1)}};
rocket-3d/web/js/Tween.js:// tween.js r2 - http://github.com/sole/tween.js
rocket-3d/web/js/Tween.js:var TWEEN=TWEEN||function(){var a,e,c,d,f=[];return{start:function(g){c=setInterval(this.update,1E3/(g||60))},stop:function(){clearInterval(c)},add:function(g){f.push(g)},getAll:function(){return f},removeAll:function(){f=[]},remove:function(g){a=f.indexOf(g);a!==-1&&f.splice(a,1)},update:function(){a=0;e=f.length;for(d=(new Date).getTime();a<e;)if(f[a].update(d))a++;else{f.splice(a,1);e--}}}}();
rocket-3d/web/js/Tween.js:TWEEN.Tween=function(a){var e={},c={},d={},f=1E3,g=0,j=null,n=TWEEN.Easing.Linear.EaseNone,k=null,l=null,m=null;this.to=function(b,h){if(h!==null)f=h;for(var i in b)if(a[i]!==null)d[i]=b[i];return this};this.start=function(){TWEEN.add(this);j=(new Date).getTime()+g;for(var b in d)if(a[b]!==null){e[b]=a[b];c[b]=d[b]-a[b]}return this};this.stop=function(){TWEEN.remove(this);return this};this.delay=function(b){g=b;return this};this.easing=function(b){n=b;return this};this.chain=function(b){k=b};this.onUpdate=
rocket-3d/web/js/Tween.js:function(b){l=b;return this};this.onComplete=function(b){m=b;return this};this.update=function(b){var h,i;if(b<j)return true;b=(b-j)/f;b=b>1?1:b;i=n(b);for(h in c)a[h]=e[h]+c[h]*i;l!==null&&l.call(a,i);if(b==1){m!==null&&m.call(a);k!==null&&k.start();return false}return true}};TWEEN.Easing={Linear:{},Quadratic:{},Cubic:{},Quartic:{},Quintic:{},Sinusoidal:{},Exponential:{},Circular:{},Elastic:{},Back:{},Bounce:{}};TWEEN.Easing.Linear.EaseNone=function(a){return a};
rocket-3d/web/js/Tween.js:TWEEN.Easing.Quadratic.EaseIn=function(a){return a*a};TWEEN.Easing.Quadratic.EaseOut=function(a){return-a*(a-2)};TWEEN.Easing.Quadratic.EaseInOut=function(a){if((a*=2)<1)return 0.5*a*a;return-0.5*(--a*(a-2)-1)};TWEEN.Easing.Cubic.EaseIn=function(a){return a*a*a};TWEEN.Easing.Cubic.EaseOut=function(a){return--a*a*a+1};TWEEN.Easing.Cubic.EaseInOut=function(a){if((a*=2)<1)return 0.5*a*a*a;return 0.5*((a-=2)*a*a+2)};TWEEN.Easing.Quartic.EaseIn=function(a){return a*a*a*a};
rocket-3d/web/js/Tween.js:TWEEN.Easing.Quartic.EaseOut=function(a){return-(--a*a*a*a-1)};TWEEN.Easing.Quartic.EaseInOut=function(a){if((a*=2)<1)return 0.5*a*a*a*a;return-0.5*((a-=2)*a*a*a-2)};TWEEN.Easing.Quintic.EaseIn=function(a){return a*a*a*a*a};TWEEN.Easing.Quintic.EaseOut=function(a){return(a-=1)*a*a*a*a+1};TWEEN.Easing.Quintic.EaseInOut=function(a){if((a*=2)<1)return 0.5*a*a*a*a*a;return 0.5*((a-=2)*a*a*a*a+2)};TWEEN.Easing.Sinusoidal.EaseIn=function(a){return-Math.cos(a*Math.PI/2)+1};
rocket-3d/web/js/Tween.js:TWEEN.Easing.Sinusoidal.EaseOut=function(a){return Math.sin(a*Math.PI/2)};TWEEN.Easing.Sinusoidal.EaseInOut=function(a){return-0.5*(Math.cos(Math.PI*a)-1)};TWEEN.Easing.Exponential.EaseIn=function(a){return a==0?0:Math.pow(2,10*(a-1))};TWEEN.Easing.Exponential.EaseOut=function(a){return a==1?1:-Math.pow(2,-10*a)+1};TWEEN.Easing.Exponential.EaseInOut=function(a){if(a==0)return 0;if(a==1)return 1;if((a*=2)<1)return 0.5*Math.pow(2,10*(a-1));return 0.5*(-Math.pow(2,-10*(a-1))+2)};
rocket-3d/web/js/Tween.js:TWEEN.Easing.Circular.EaseIn=function(a){return-(Math.sqrt(1-a*a)-1)};TWEEN.Easing.Circular.EaseOut=function(a){return Math.sqrt(1- --a*a)};TWEEN.Easing.Circular.EaseInOut=function(a){if((a/=0.5)<1)return-0.5*(Math.sqrt(1-a*a)-1);return 0.5*(Math.sqrt(1-(a-=2)*a)+1)};TWEEN.Easing.Elastic.EaseIn=function(a){var e,c=0.1,d=0.4;if(a==0)return 0;if(a==1)return 1;d||(d=0.3);if(!c||c<1){c=1;e=d/4}else e=d/(2*Math.PI)*Math.asin(1/c);return-(c*Math.pow(2,10*(a-=1))*Math.sin((a-e)*2*Math.PI/d))};
rocket-3d/web/js/Tween.js:TWEEN.Easing.Elastic.EaseOut=function(a){var e,c=0.1,d=0.4;if(a==0)return 0;if(a==1)return 1;d||(d=0.3);if(!c||c<1){c=1;e=d/4}else e=d/(2*Math.PI)*Math.asin(1/c);return c*Math.pow(2,-10*a)*Math.sin((a-e)*2*Math.PI/d)+1};
rocket-3d/web/js/Tween.js:TWEEN.Easing.Elastic.EaseInOut=function(a){var e,c=0.1,d=0.4;if(a==0)return 0;if(a==1)return 1;d||(d=0.3);if(!c||c<1){c=1;e=d/4}else e=d/(2*Math.PI)*Math.asin(1/c);if((a*=2)<1)return-0.5*c*Math.pow(2,10*(a-=1))*Math.sin((a-e)*2*Math.PI/d);return c*Math.pow(2,-10*(a-=1))*Math.sin((a-e)*2*Math.PI/d)*0.5+1};TWEEN.Easing.Back.EaseIn=function(a){return a*a*(2.70158*a-1.70158)};TWEEN.Easing.Back.EaseOut=function(a){return(a-=1)*a*(2.70158*a+1.70158)+1};
rocket-3d/web/js/Tween.js:TWEEN.Easing.Back.EaseInOut=function(a){if((a*=2)<1)return 0.5*a*a*(3.5949095*a-2.5949095);return 0.5*((a-=2)*a*(3.5949095*a+2.5949095)+2)};TWEEN.Easing.Bounce.EaseIn=function(a){return 1-TWEEN.Easing.Bounce.EaseOut(1-a)};TWEEN.Easing.Bounce.EaseOut=function(a){return(a/=1)<1/2.75?7.5625*a*a:a<2/2.75?7.5625*(a-=1.5/2.75)*a+0.75:a<2.5/2.75?7.5625*(a-=2.25/2.75)*a+0.9375:7.5625*(a-=2.625/2.75)*a+0.984375};
rocket-3d/web/js/Tween.js:TWEEN.Easing.Bounce.EaseInOut=function(a){if(a<0.5)return TWEEN.Easing.Bounce.EaseIn(a*2)*0.5;return TWEEN.Easing.Bounce.EaseOut(a*2-1)*0.5+0.5};
rocket-3d/web/js/jquery.min.js:/*!
rocket-3d/web/js/jquery.min.js: * jQuery JavaScript Library v1.4.2
rocket-3d/web/js/jquery.min.js: * http://jquery.com/
rocket-3d/web/js/jquery.min.js: *
rocket-3d/web/js/jquery.min.js: * Copyright 2010, John Resig
rocket-3d/web/js/jquery.min.js: * Dual licensed under the MIT or GPL Version 2 licenses.
rocket-3d/web/js/jquery.min.js: * http://jquery.org/license
rocket-3d/web/js/jquery.min.js: *
rocket-3d/web/js/jquery.min.js: * Includes Sizzle.js
rocket-3d/web/js/jquery.min.js: * http://sizzlejs.com/
rocket-3d/web/js/jquery.min.js: * Copyright 2010, The Dojo Foundation
rocket-3d/web/js/jquery.min.js: * Released under the MIT, BSD, and GPL Licenses.
rocket-3d/web/js/jquery.min.js: *
rocket-3d/web/js/jquery.min.js: * Date: Sat Feb 13 22:33:48 2010 -0500
rocket-3d/web/js/jquery.min.js: */
rocket-3d/web/js/jquery.min.js:(function(A,w){function ma(){if(!c.isReady){try{s.documentElement.doScroll("left")}catch(a){setTimeout(ma,1);return}c.ready()}}function Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalEval(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.removeChild(b)}function X(a,b,d,f,e,j){var i=a.length;if(typeof b==="object"){for(var o in b)X(a,o,b[o],f,e,d);return a}if(d!==w){f=!j&&f&&c.isFunction(d);for(o=0;o<i;o++)e(a[o],b,f?d.call(a[o],o,e(a[o],b)):d,j);return a}return i?
rocket-3d/web/js/jquery.min.js:e(a[0],b):w}function J(){return(new Date).getTime()}function Y(){return false}function Z(){return true}function na(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function oa(a){var b,d=[],f=[],e=arguments,j,i,o,k,n,r;i=c.data(this,"events");if(!(a.liveFired===this||!i||!i.live||a.button&&a.type==="click")){a.liveFired=this;var u=i.live.slice(0);for(k=0;k<u.length;k++){i=u[k];i.origType.replace(O,"")===a.type?f.push(i.selector):u.splice(k--,1)}j=c(a.target).closest(f,a.currentTarget);n=0;for(r=
rocket-3d/web/js/jquery.min.js:j.length;n<r;n++)for(k=0;k<u.length;k++){i=u[k];if(j[n].selector===i.selector){o=j[n].elem;f=null;if(i.preType==="mouseenter"||i.preType==="mouseleave")f=c(a.relatedTarget).closest(i.selector)[0];if(!f||f!==o)d.push({elem:o,handleObj:i})}}n=0;for(r=d.length;n<r;n++){j=d[n];a.currentTarget=j.elem;a.data=j.handleObj.data;a.handleObj=j.handleObj;if(j.handleObj.origHandler.apply(j.elem,e)===false){b=false;break}}return b}}function pa(a,b){return"live."+(a&&a!=="*"?a+".":"")+b.replace(/\./g,"`").replace(/ /g,
rocket-3d/web/js/jquery.min.js:"&")}function qa(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function ra(a,b){var d=0;b.each(function(){if(this.nodeName===(a[d]&&a[d].nodeName)){var f=c.data(a[d++]),e=c.data(this,f);if(f=f&&f.events){delete e.handle;e.events={};for(var j in f)for(var i in f[j])c.event.add(this,j,f[j][i],f[j][i].data)}}})}function sa(a,b,d){var f,e,j;b=b&&b[0]?b[0].ownerDocument||b[0]:s;if(a.length===1&&typeof a[0]==="string"&&a[0].length<512&&b===s&&!ta.test(a[0])&&(c.support.checkClone||!ua.test(a[0]))){e=
rocket-3d/web/js/jquery.min.js:true;if(j=c.fragments[a[0]])if(j!==1)f=j}if(!f){f=b.createDocumentFragment();c.clean(a,b,f,d)}if(e)c.fragments[a[0]]=j?f:1;return{fragment:f,cacheable:e}}function K(a,b){var d={};c.each(va.concat.apply([],va.slice(0,b)),function(){d[this]=a});return d}function wa(a){return"scrollTo"in a&&a.document?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var c=function(a,b){return new c.fn.init(a,b)},Ra=A.jQuery,Sa=A.$,s=A.document,T,Ta=/^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,Ua=/^.[^:#\[\.,]*$/,Va=/\S/,
rocket-3d/web/js/jquery.min.js:Wa=/^(\s|\u00A0)+|(\s|\u00A0)+$/g,Xa=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,P=navigator.userAgent,xa=false,Q=[],L,$=Object.prototype.toString,aa=Object.prototype.hasOwnProperty,ba=Array.prototype.push,R=Array.prototype.slice,ya=Array.prototype.indexOf;c.fn=c.prototype={init:function(a,b){var d,f;if(!a)return this;if(a.nodeType){this.context=this[0]=a;this.length=1;return this}if(a==="body"&&!b){this.context=s;this[0]=s.body;this.selector="body";this.length=1;return this}if(typeof a==="string")if((d=Ta.exec(a))&&
rocket-3d/web/js/jquery.min.js:(d[1]||!b))if(d[1]){f=b?b.ownerDocument||b:s;if(a=Xa.exec(a))if(c.isPlainObject(b)){a=[s.createElement(a[1])];c.fn.attr.call(a,b,true)}else a=[f.createElement(a[1])];else{a=sa([d[1]],[f]);a=(a.cacheable?a.fragment.cloneNode(true):a.fragment).childNodes}return c.merge(this,a)}else{if(b=s.getElementById(d[2])){if(b.id!==d[2])return T.find(a);this.length=1;this[0]=b}this.context=s;this.selector=a;return this}else if(!b&&/^\w+$/.test(a)){this.selector=a;this.context=s;a=s.getElementsByTagName(a);return c.merge(this,
rocket-3d/web/js/jquery.min.js:a)}else return!b||b.jquery?(b||T).find(a):c(b).find(a);else if(c.isFunction(a))return T.ready(a);if(a.selector!==w){this.selector=a.selector;this.context=a.context}return c.makeArray(a,this)},selector:"",jquery:"1.4.2",length:0,size:function(){return this.length},toArray:function(){return R.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this.slice(a)[0]:this[a]},pushStack:function(a,b,d){var f=c();c.isArray(a)?ba.apply(f,a):c.merge(f,a);f.prevObject=this;f.context=this.context;if(b===
rocket-3d/web/js/jquery.min.js:"find")f.selector=this.selector+(this.selector?" ":"")+d;else if(b)f.selector=this.selector+"."+b+"("+d+")";return f},each:function(a,b){return c.each(this,a,b)},ready:function(a){c.bindReady();if(c.isReady)a.call(s,c);else Q&&Q.push(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(R.apply(this,arguments),"slice",R.call(arguments).join(","))},map:function(a){return this.pushStack(c.map(this,
rocket-3d/web/js/jquery.min.js:function(b,d){return a.call(b,d,b)}))},end:function(){return this.prevObject||c(null)},push:ba,sort:[].sort,splice:[].splice};c.fn.init.prototype=c.fn;c.extend=c.fn.extend=function(){var a=arguments[0]||{},b=1,d=arguments.length,f=false,e,j,i,o;if(typeof a==="boolean"){f=a;a=arguments[1]||{};b=2}if(typeof a!=="object"&&!c.isFunction(a))a={};if(d===b){a=this;--b}for(;b<d;b++)if((e=arguments[b])!=null)for(j in e){i=a[j];o=e[j];if(a!==o)if(f&&o&&(c.isPlainObject(o)||c.isArray(o))){i=i&&(c.isPlainObject(i)||
rocket-3d/web/js/jquery.min.js:c.isArray(i))?i:c.isArray(o)?[]:{};a[j]=c.extend(f,i,o)}else if(o!==w)a[j]=o}return a};c.extend({noConflict:function(a){A.$=Sa;if(a)A.jQuery=Ra;return c},isReady:false,ready:function(){if(!c.isReady){if(!s.body)return setTimeout(c.ready,13);c.isReady=true;if(Q){for(var a,b=0;a=Q[b++];)a.call(s,c);Q=null}c.fn.triggerHandler&&c(s).triggerHandler("ready")}},bindReady:function(){if(!xa){xa=true;if(s.readyState==="complete")return c.ready();if(s.addEventListener){s.addEventListener("DOMContentLoaded",
rocket-3d/web/js/jquery.min.js:L,false);A.addEventListener("load",c.ready,false)}else if(s.attachEvent){s.attachEvent("onreadystatechange",L);A.attachEvent("onload",c.ready);var a=false;try{a=A.frameElement==null}catch(b){}s.documentElement.doScroll&&a&&ma()}}},isFunction:function(a){return $.call(a)==="[object Function]"},isArray:function(a){return $.call(a)==="[object Array]"},isPlainObject:function(a){if(!a||$.call(a)!=="[object Object]"||a.nodeType||a.setInterval)return false;if(a.constructor&&!aa.call(a,"constructor")&&!aa.call(a.constructor.prototype,
rocket-3d/web/js/jquery.min.js:"isPrototypeOf"))return false;var b;for(b in a);return b===w||aa.call(a,b)},isEmptyObject:function(a){for(var b in a)return false;return true},error:function(a){throw a;},parseJSON:function(a){if(typeof a!=="string"||!a)return null;a=c.trim(a);if(/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return A.JSON&&A.JSON.parse?A.JSON.parse(a):(new Function("return "+
rocket-3d/web/js/jquery.min.js:a))();else c.error("Invalid JSON: "+a)},noop:function(){},globalEval:function(a){if(a&&Va.test(a)){var b=s.getElementsByTagName("head")[0]||s.documentElement,d=s.createElement("script");d.type="text/javascript";if(c.support.scriptEval)d.appendChild(s.createTextNode(a));else d.text=a;b.insertBefore(d,b.firstChild);b.removeChild(d)}},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,b,d){var f,e=0,j=a.length,i=j===w||c.isFunction(a);if(d)if(i)for(f in a){if(b.apply(a[f],
rocket-3d/web/js/jquery.min.js:d)===false)break}else for(;e<j;){if(b.apply(a[e++],d)===false)break}else if(i)for(f in a){if(b.call(a[f],f,a[f])===false)break}else for(d=a[0];e<j&&b.call(d,e,d)!==false;d=a[++e]);return a},trim:function(a){return(a||"").replace(Wa,"")},makeArray:function(a,b){b=b||[];if(a!=null)a.length==null||typeof a==="string"||c.isFunction(a)||typeof a!=="function"&&a.setInterval?ba.call(b,a):c.merge(b,a);return b},inArray:function(a,b){if(b.indexOf)return b.indexOf(a);for(var d=0,f=b.length;d<f;d++)if(b[d]===
rocket-3d/web/js/jquery.min.js:a)return d;return-1},merge:function(a,b){var d=a.length,f=0;if(typeof b.length==="number")for(var e=b.length;f<e;f++)a[d++]=b[f];else for(;b[f]!==w;)a[d++]=b[f++];a.length=d;return a},grep:function(a,b,d){for(var f=[],e=0,j=a.length;e<j;e++)!d!==!b(a[e],e)&&f.push(a[e]);return f},map:function(a,b,d){for(var f=[],e,j=0,i=a.length;j<i;j++){e=b(a[j],j,d);if(e!=null)f[f.length]=e}return f.concat.apply([],f)},guid:1,proxy:function(a,b,d){if(arguments.length===2)if(typeof b==="string"){d=a;a=d[b];b=w}else if(b&&
rocket-3d/web/js/jquery.min.js:!c.isFunction(b)){d=b;b=w}if(!b&&a)b=function(){return a.apply(d||this,arguments)};if(a)b.guid=a.guid=a.guid||b.guid||c.guid++;return b},uaMatch:function(a){a=a.toLowerCase();a=/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version)?[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||!/compatible/.test(a)&&/(mozilla)(?:.*? rv:([\w.]+))?/.exec(a)||[];return{browser:a[1]||"",version:a[2]||"0"}},browser:{}});P=c.uaMatch(P);if(P.browser){c.browser[P.browser]=true;c.browser.version=P.version}if(c.browser.webkit)c.browser.safari=
rocket-3d/web/js/jquery.min.js:true;if(ya)c.inArray=function(a,b){return ya.call(b,a)};T=c(s);if(s.addEventListener)L=function(){s.removeEventListener("DOMContentLoaded",L,false);c.ready()};else if(s.attachEvent)L=function(){if(s.readyState==="complete"){s.detachEvent("onreadystatechange",L);c.ready()}};(function(){c.support={};var a=s.documentElement,b=s.createElement("script"),d=s.createElement("div"),f="script"+J();d.style.display="none";d.innerHTML="   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
rocket-3d/web/js/jquery.min.js:var e=d.getElementsByTagName("*"),j=d.getElementsByTagName("a")[0];if(!(!e||!e.length||!j)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("link").length,style:/red/.test(j.getAttribute("style")),hrefNormalized:j.getAttribute("href")==="/a",opacity:/^0.55$/.test(j.style.opacity),cssFloat:!!j.style.cssFloat,checkOn:d.getElementsByTagName("input")[0].value==="on",optSelected:s.createElement("select").appendChild(s.createElement("option")).selected,
rocket-3d/web/js/jquery.min.js:parentNode:d.removeChild(d.appendChild(s.createElement("div"))).parentNode===null,deleteExpando:true,checkClone:false,scriptEval:false,noCloneEvent:true,boxModel:null};b.type="text/javascript";try{b.appendChild(s.createTextNode("window."+f+"=1;"))}catch(i){}a.insertBefore(b,a.firstChild);if(A[f]){c.support.scriptEval=true;delete A[f]}try{delete b.test}catch(o){c.support.deleteExpando=false}a.removeChild(b);if(d.attachEvent&&d.fireEvent){d.attachEvent("onclick",function k(){c.support.noCloneEvent=
rocket-3d/web/js/jquery.min.js:false;d.detachEvent("onclick",k)});d.cloneNode(true).fireEvent("onclick")}d=s.createElement("div");d.innerHTML="<input type='radio' name='radiotest' checked='checked'/>";a=s.createDocumentFragment();a.appendChild(d.firstChild);c.support.checkClone=a.cloneNode(true).cloneNode(true).lastChild.checked;c(function(){var k=s.createElement("div");k.style.width=k.style.paddingLeft="1px";s.body.appendChild(k);c.boxModel=c.support.boxModel=k.offsetWidth===2;s.body.removeChild(k).style.display="none"});a=function(k){var n=
rocket-3d/web/js/jquery.min.js:s.createElement("div");k="on"+k;var r=k in n;if(!r){n.setAttribute(k,"return;");r=typeof n[k]==="function"}return r};c.support.submitBubbles=a("submit");c.support.changeBubbles=a("change");a=b=d=e=j=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};var G="jQuery"+J(),Ya=0,za={};c.extend({cache:{},expando:G,noData:{embed:true,object:true,
rocket-3d/web/js/jquery.min.js:applet:true},data:function(a,b,d){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var f=a[G],e=c.cache;if(!f&&typeof b==="string"&&d===w)return null;f||(f=++Ya);if(typeof b==="object"){a[G]=f;e[f]=c.extend(true,{},b)}else if(!e[f]){a[G]=f;e[f]={}}a=e[f];if(d!==w)a[b]=d;return typeof b==="string"?a[b]:a}},removeData:function(a,b){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var d=a[G],f=c.cache,e=f[d];if(b){if(e){delete e[b];c.isEmptyObject(e)&&c.removeData(a)}}else{if(c.support.deleteExpando)delete a[c.expando];
rocket-3d/web/js/jquery.min.js:else a.removeAttribute&&a.removeAttribute(c.expando);delete f[d]}}}});c.fn.extend({data:function(a,b){if(typeof a==="undefined"&&this.length)return c.data(this[0]);else if(typeof a==="object")return this.each(function(){c.data(this,a)});var d=a.split(".");d[1]=d[1]?"."+d[1]:"";if(b===w){var f=this.triggerHandler("getData"+d[1]+"!",[d[0]]);if(f===w&&this.length)f=c.data(this[0],a);return f===w&&d[1]?this.data(d[0]):f}else return this.trigger("setData"+d[1]+"!",[d[0],b]).each(function(){c.data(this,
rocket-3d/web/js/jquery.min.js:a,b)})},removeData:function(a){return this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var f=c.data(a,b);if(!d)return f||[];if(!f||c.isArray(d))f=c.data(a,b,c.makeArray(d));else f.push(d);return f}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),f=d.shift();if(f==="inprogress")f=d.shift();if(f){b==="fx"&&d.unshift("inprogress");f.call(a,function(){c.dequeue(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof a!=="string"){b=a;a="fx"}if(b===
rocket-3d/web/js/jquery.min.js:w)return c.queue(this[0],a);return this.each(function(){var d=c.queue(this,a,b);a==="fx"&&d[0]!=="inprogress"&&c.dequeue(this,a)})},dequeue:function(a){return this.each(function(){c.dequeue(this,a)})},delay:function(a,b){a=c.fx?c.fx.speeds[a]||a:a;b=b||"fx";return this.queue(b,function(){var d=this;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])}});var Aa=/[\n\t]/g,ca=/\s+/,Za=/\r/g,$a=/href|src|style/,ab=/(button|input)/i,bb=/(button|input|object|select|textarea)/i,
rocket-3d/web/js/jquery.min.js:cb=/^(a|area)$/i,Ba=/radio|checkbox/;c.fn.extend({attr:function(a,b){return X(this,a,b,true,c.attr)},removeAttr:function(a){return this.each(function(){c.attr(this,a,"");this.nodeType===1&&this.removeAttribute(a)})},addClass:function(a){if(c.isFunction(a))return this.each(function(n){var r=c(this);r.addClass(a.call(this,n,r.attr("class")))});if(a&&typeof a==="string")for(var b=(a||"").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1)if(e.className){for(var j=" "+e.className+" ",
rocket-3d/web/js/jquery.min.js:i=e.className,o=0,k=b.length;o<k;o++)if(j.indexOf(" "+b[o]+" ")<0)i+=" "+b[o];e.className=c.trim(i)}else e.className=a}return this},removeClass:function(a){if(c.isFunction(a))return this.each(function(k){var n=c(this);n.removeClass(a.call(this,k,n.attr("class")))});if(a&&typeof a==="string"||a===w)for(var b=(a||"").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1&&e.className)if(a){for(var j=(" "+e.className+" ").replace(Aa," "),i=0,o=b.length;i<o;i++)j=j.replace(" "+b[i]+" ",
rocket-3d/web/js/jquery.min.js:" ");e.className=c.trim(j)}else e.className=""}return this},toggleClass:function(a,b){var d=typeof a,f=typeof b==="boolean";if(c.isFunction(a))return this.each(function(e){var j=c(this);j.toggleClass(a.call(this,e,j.attr("class"),b),b)});return this.each(function(){if(d==="string")for(var e,j=0,i=c(this),o=b,k=a.split(ca);e=k[j++];){o=f?o:!i.hasClass(e);i[o?"addClass":"removeClass"](e)}else if(d==="undefined"||d==="boolean"){this.className&&c.data(this,"__className__",this.className);this.className=
rocket-3d/web/js/jquery.min.js:this.className||a===false?"":c.data(this,"__className__")||""}})},hasClass:function(a){a=" "+a+" ";for(var b=0,d=this.length;b<d;b++)if((" "+this[b].className+" ").replace(Aa," ").indexOf(a)>-1)return true;return false},val:function(a){if(a===w){var b=this[0];if(b){if(c.nodeName(b,"option"))return(b.attributes.value||{}).specified?b.value:b.text;if(c.nodeName(b,"select")){var d=b.selectedIndex,f=[],e=b.options;b=b.type==="select-one";if(d<0)return null;var j=b?d:0;for(d=b?d+1:e.length;j<d;j++){var i=
rocket-3d/web/js/jquery.min.js:e[j];if(i.selected){a=c(i).val();if(b)return a;f.push(a)}}return f}if(Ba.test(b.type)&&!c.support.checkOn)return b.getAttribute("value")===null?"on":b.value;return(b.value||"").replace(Za,"")}return w}var o=c.isFunction(a);return this.each(function(k){var n=c(this),r=a;if(this.nodeType===1){if(o)r=a.call(this,k,n.val());if(typeof r==="number")r+="";if(c.isArray(r)&&Ba.test(this.type))this.checked=c.inArray(n.val(),r)>=0;else if(c.nodeName(this,"select")){var u=c.makeArray(r);c("option",this).each(function(){this.selected=
rocket-3d/web/js/jquery.min.js:c.inArray(c(this).val(),u)>=0});if(!u.length)this.selectedIndex=-1}else this.value=r}})}});c.extend({attrFn:{val:true,css:true,html:true,text:true,data:true,width:true,height:true,offset:true},attr:function(a,b,d,f){if(!a||a.nodeType===3||a.nodeType===8)return w;if(f&&b in c.attrFn)return c(a)[b](d);f=a.nodeType!==1||!c.isXMLDoc(a);var e=d!==w;b=f&&c.props[b]||b;if(a.nodeType===1){var j=$a.test(b);if(b in a&&f&&!j){if(e){b==="type"&&ab.test(a.nodeName)&&a.parentNode&&c.error("type property can't be changed");
rocket-3d/web/js/jquery.min.js:a[b]=d}if(c.nodeName(a,"form")&&a.getAttributeNode(b))return a.getAttributeNode(b).nodeValue;if(b==="tabIndex")return(b=a.getAttributeNode("tabIndex"))&&b.specified?b.value:bb.test(a.nodeName)||cb.test(a.nodeName)&&a.href?0:w;return a[b]}if(!c.support.style&&f&&b==="style"){if(e)a.style.cssText=""+d;return a.style.cssText}e&&a.setAttribute(b,""+d);a=!c.support.hrefNormalized&&f&&j?a.getAttribute(b,2):a.getAttribute(b);return a===null?w:a}return c.style(a,b,d)}});var O=/\.(.*)$/,db=function(a){return a.replace(/[^\w\s\.\|`]/g,
rocket-3d/web/js/jquery.min.js:function(b){return"\\"+b})};c.event={add:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){if(a.setInterval&&a!==A&&!a.frameElement)a=A;var e,j;if(d.handler){e=d;d=e.handler}if(!d.guid)d.guid=c.guid++;if(j=c.data(a)){var i=j.events=j.events||{},o=j.handle;if(!o)j.handle=o=function(){return typeof c!=="undefined"&&!c.event.triggered?c.event.handle.apply(o.elem,arguments):w};o.elem=a;b=b.split(" ");for(var k,n=0,r;k=b[n++];){j=e?c.extend({},e):{handler:d,data:f};if(k.indexOf(".")>-1){r=k.split(".");
rocket-3d/web/js/jquery.min.js:k=r.shift();j.namespace=r.slice(0).sort().join(".")}else{r=[];j.namespace=""}j.type=k;j.guid=d.guid;var u=i[k],z=c.event.special[k]||{};if(!u){u=i[k]=[];if(!z.setup||z.setup.call(a,f,r,o)===false)if(a.addEventListener)a.addEventListener(k,o,false);else a.attachEvent&&a.attachEvent("on"+k,o)}if(z.add){z.add.call(a,j);if(!j.handler.guid)j.handler.guid=d.guid}u.push(j);c.event.global[k]=true}a=null}}},global:{},remove:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){var e,j=0,i,o,k,n,r,u,z=c.data(a),
rocket-3d/web/js/jquery.min.js:C=z&&z.events;if(z&&C){if(b&&b.type){d=b.handler;b=b.type}if(!b||typeof b==="string"&&b.charAt(0)==="."){b=b||"";for(e in C)c.event.remove(a,e+b)}else{for(b=b.split(" ");e=b[j++];){n=e;i=e.indexOf(".")<0;o=[];if(!i){o=e.split(".");e=o.shift();k=new RegExp("(^|\\.)"+c.map(o.slice(0).sort(),db).join("\\.(?:.*\\.)?")+"(\\.|$)")}if(r=C[e])if(d){n=c.event.special[e]||{};for(B=f||0;B<r.length;B++){u=r[B];if(d.guid===u.guid){if(i||k.test(u.namespace)){f==null&&r.splice(B--,1);n.remove&&n.remove.call(a,u)}if(f!=
rocket-3d/web/js/jquery.min.js:null)break}}if(r.length===0||f!=null&&r.length===1){if(!n.teardown||n.teardown.call(a,o)===false)Ca(a,e,z.handle);delete C[e]}}else for(var B=0;B<r.length;B++){u=r[B];if(i||k.test(u.namespace)){c.event.remove(a,n,u.handler,B);r.splice(B--,1)}}}if(c.isEmptyObject(C)){if(b=z.handle)b.elem=null;delete z.events;delete z.handle;c.isEmptyObject(z)&&c.removeData(a)}}}}},trigger:function(a,b,d,f){var e=a.type||a;if(!f){a=typeof a==="object"?a[G]?a:c.extend(c.Event(e),a):c.Event(e);if(e.indexOf("!")>=0){a.type=
rocket-3d/web/js/jquery.min.js:e=e.slice(0,-1);a.exclusive=true}if(!d){a.stopPropagation();c.event.global[e]&&c.each(c.cache,function(){this.events&&this.events[e]&&c.event.trigger(a,b,this.handle.elem)})}if(!d||d.nodeType===3||d.nodeType===8)return w;a.result=w;a.target=d;b=c.makeArray(b);b.unshift(a)}a.currentTarget=d;(f=c.data(d,"handle"))&&f.apply(d,b);f=d.parentNode||d.ownerDocument;try{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d["on"+e]&&d["on"+e].apply(d,b)===false)a.result=false}catch(j){}if(!a.isPropagationStopped()&&
rocket-3d/web/js/jquery.min.js:f)c.event.trigger(a,b,f,true);else if(!a.isDefaultPrevented()){f=a.target;var i,o=c.nodeName(f,"a")&&e==="click",k=c.event.special[e]||{};if((!k._default||k._default.call(d,a)===false)&&!o&&!(f&&f.nodeName&&c.noData[f.nodeName.toLowerCase()])){try{if(f[e]){if(i=f["on"+e])f["on"+e]=null;c.event.triggered=true;f[e]()}}catch(n){}if(i)f["on"+e]=i;c.event.triggered=false}}},handle:function(a){var b,d,f,e;a=arguments[0]=c.event.fix(a||A.event);a.currentTarget=this;b=a.type.indexOf(".")<0&&!a.exclusive;
rocket-3d/web/js/jquery.min.js:if(!b){d=a.type.split(".");a.type=d.shift();f=new RegExp("(^|\\.)"+d.slice(0).sort().join("\\.(?:.*\\.)?")+"(\\.|$)")}e=c.data(this,"events");d=e[a.type];if(e&&d){d=d.slice(0);e=0;for(var j=d.length;e<j;e++){var i=d[e];if(b||f.test(i.namespace)){a.handler=i.handler;a.data=i.data;a.handleObj=i;i=i.handler.apply(this,arguments);if(i!==w){a.result=i;if(i===false){a.preventDefault();a.stopPropagation()}}if(a.isImmediatePropagationStopped())break}}}return a.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
rocket-3d/web/js/jquery.min.js:fix:function(a){if(a[G])return a;var b=a;a=c.Event(b);for(var d=this.props.length,f;d;){f=this.props[--d];a[f]=b[f]}if(!a.target)a.target=a.srcElement||s;if(a.target.nodeType===3)a.target=a.target.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement;if(a.pageX==null&&a.clientX!=null){b=s.documentElement;d=s.body;a.pageX=a.clientX+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft||0);a.pageY=a.clientY+(b&&b.scrollTop||
rocket-3d/web/js/jquery.min.js:d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(!a.which&&(a.charCode||a.charCode===0?a.charCode:a.keyCode))a.which=a.charCode||a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=a.ctrlKey;if(!a.which&&a.button!==w)a.which=a.button&1?1:a.button&2?3:a.button&4?2:0;return a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.noop},live:{add:function(a){c.event.add(this,a.origType,c.extend({},a,{handler:oa}))},remove:function(a){var b=true,d=a.origType.replace(O,"");c.each(c.data(this,
rocket-3d/web/js/jquery.min.js:"events").live||[],function(){if(d===this.origType.replace(O,""))return b=false});b&&c.event.remove(this,a.origType,oa)}},beforeunload:{setup:function(a,b,d){if(this.setInterval)this.onbeforeunload=d;return false},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}};var Ca=s.removeEventListener?function(a,b,d){a.removeEventListener(b,d,false)}:function(a,b,d){a.detachEvent("on"+b,d)};c.Event=function(a){if(!this.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=
rocket-3d/web/js/jquery.min.js:a;this.type=a.type}else this.type=a;this.timeStamp=J();this[G]=true};c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=Z;var a=this.originalEvent;if(a){a.preventDefault&&a.preventDefault();a.returnValue=false}},stopPropagation:function(){this.isPropagationStopped=Z;var a=this.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.cancelBubble=true}},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=Z;this.stopPropagation()},isDefaultPrevented:Y,isPropagationStopped:Y,
rocket-3d/web/js/jquery.min.js:isImmediatePropagationStopped:Y};var Da=function(a){var b=a.relatedTarget;try{for(;b&&b!==this;)b=b.parentNode;if(b!==this){a.type=a.data;c.event.handle.apply(this,arguments)}}catch(d){}},Ea=function(a){a.type=a.data;c.event.handle.apply(this,arguments)};c.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){c.event.special[a]={setup:function(d){c.event.add(this,b,d&&d.selector?Ea:Da,a)},teardown:function(d){c.event.remove(this,b,d&&d.selector?Ea:Da)}}});if(!c.support.submitBubbles)c.event.special.submit=
rocket-3d/web/js/jquery.min.js:{setup:function(){if(this.nodeName.toLowerCase()!=="form"){c.event.add(this,"click.specialSubmit",function(a){var b=a.target,d=b.type;if((d==="submit"||d==="image")&&c(b).closest("form").length)return na("submit",this,arguments)});c.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,d=b.type;if((d==="text"||d==="password")&&c(b).closest("form").length&&a.keyCode===13)return na("submit",this,arguments)})}else return false},teardown:function(){c.event.remove(this,".specialSubmit")}};
rocket-3d/web/js/jquery.min.js:if(!c.support.changeBubbles){var da=/textarea|input|select/i,ea,Fa=function(a){var b=a.type,d=a.value;if(b==="radio"||b==="checkbox")d=a.checked;else if(b==="select-multiple")d=a.selectedIndex>-1?c.map(a.options,function(f){return f.selected}).join("-"):"";else if(a.nodeName.toLowerCase()==="select")d=a.selectedIndex;return d},fa=function(a,b){var d=a.target,f,e;if(!(!da.test(d.nodeName)||d.readOnly)){f=c.data(d,"_change_data");e=Fa(d);if(a.type!=="focusout"||d.type!=="radio")c.data(d,"_change_data",
rocket-3d/web/js/jquery.min.js:e);if(!(f===w||e===f))if(f!=null||e){a.type="change";return c.event.trigger(a,b,d)}}};c.event.special.change={filters:{focusout:fa,click:function(a){var b=a.target,d=b.type;if(d==="radio"||d==="checkbox"||b.nodeName.toLowerCase()==="select")return fa.call(this,a)},keydown:function(a){var b=a.target,d=b.type;if(a.keyCode===13&&b.nodeName.toLowerCase()!=="textarea"||a.keyCode===32&&(d==="checkbox"||d==="radio")||d==="select-multiple")return fa.call(this,a)},beforeactivate:function(a){a=a.target;c.data(a,
rocket-3d/web/js/jquery.min.js:"_change_data",Fa(a))}},setup:function(){if(this.type==="file")return false;for(var a in ea)c.event.add(this,a+".specialChange",ea[a]);return da.test(this.nodeName)},teardown:function(){c.event.remove(this,".specialChange");return da.test(this.nodeName)}};ea=c.event.special.change.filters}s.addEventListener&&c.each({focus:"focusin",blur:"focusout"},function(a,b){function d(f){f=c.event.fix(f);f.type=b;return c.event.handle.call(this,f)}c.event.special[b]={setup:function(){this.addEventListener(a,
rocket-3d/web/js/jquery.min.js:d,true)},teardown:function(){this.removeEventListener(a,d,true)}}});c.each(["bind","one"],function(a,b){c.fn[b]=function(d,f,e){if(typeof d==="object"){for(var j in d)this[b](j,f,d[j],e);return this}if(c.isFunction(f)){e=f;f=w}var i=b==="one"?c.proxy(e,function(k){c(this).unbind(k,i);return e.apply(this,arguments)}):e;if(d==="unload"&&b!=="one")this.one(d,f,e);else{j=0;for(var o=this.length;j<o;j++)c.event.add(this[j],d,i,f)}return this}});c.fn.extend({unbind:function(a,b){if(typeof a==="object"&&
rocket-3d/web/js/jquery.min.js:!a.preventDefault)for(var d in a)this.unbind(d,a[d]);else{d=0;for(var f=this.length;d<f;d++)c.event.remove(this[d],a,b)}return this},delegate:function(a,b,d,f){return this.live(b,d,f,a)},undelegate:function(a,b,d){return arguments.length===0?this.unbind("live"):this.die(b,null,d,a)},trigger:function(a,b){return this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0]){a=c.Event(a);a.preventDefault();a.stopPropagation();c.event.trigger(a,b,this[0]);return a.result}},
rocket-3d/web/js/jquery.min.js:toggle:function(a){for(var b=arguments,d=1;d<b.length;)c.proxy(a,b[d++]);return this.click(c.proxy(a,function(f){var e=(c.data(this,"lastToggle"+a.guid)||0)%d;c.data(this,"lastToggle"+a.guid,e+1);f.preventDefault();return b[e].apply(this,arguments)||false}))},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var Ga={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};c.each(["live","die"],function(a,b){c.fn[b]=function(d,f,e,j){var i,o=0,k,n,r=j||this.selector,
rocket-3d/web/js/jquery.min.js:u=j?this:c(this.context);if(c.isFunction(f)){e=f;f=w}for(d=(d||"").split(" ");(i=d[o++])!=null;){j=O.exec(i);k="";if(j){k=j[0];i=i.replace(O,"")}if(i==="hover")d.push("mouseenter"+k,"mouseleave"+k);else{n=i;if(i==="focus"||i==="blur"){d.push(Ga[i]+k);i+=k}else i=(Ga[i]||i)+k;b==="live"?u.each(function(){c.event.add(this,pa(i,r),{data:f,selector:r,handler:e,origType:i,origHandler:e,preType:n})}):u.unbind(pa(i,r),e)}}return this}});c.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),
rocket-3d/web/js/jquery.min.js:function(a,b){c.fn[b]=function(d){return d?this.bind(b,d):this.trigger(b)};if(c.attrFn)c.attrFn[b]=true});A.attachEvent&&!A.addEventListener&&A.attachEvent("onunload",function(){for(var a in c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}catch(b){}});(function(){function a(g){for(var h="",l,m=0;g[m];m++){l=g[m];if(l.nodeType===3||l.nodeType===4)h+=l.nodeValue;else if(l.nodeType!==8)h+=a(l.childNodes)}return h}function b(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];
rocket-3d/web/js/jquery.min.js:if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1&&!p){t.sizcache=l;t.sizset=q}if(t.nodeName.toLowerCase()===h){y=t;break}t=t[g]}m[q]=y}}}function d(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1){if(!p){t.sizcache=l;t.sizset=q}if(typeof h!=="string"){if(t===h){y=true;break}}else if(k.filter(h,[t]).length>0){y=t;break}}t=t[g]}m[q]=y}}}var f=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
rocket-3d/web/js/jquery.min.js:e=0,j=Object.prototype.toString,i=false,o=true;[0,0].sort(function(){o=false;return 0});var k=function(g,h,l,m){l=l||[];var q=h=h||s;if(h.nodeType!==1&&h.nodeType!==9)return[];if(!g||typeof g!=="string")return l;for(var p=[],v,t,y,S,H=true,M=x(h),I=g;(f.exec(""),v=f.exec(I))!==null;){I=v[3];p.push(v[1]);if(v[2]){S=v[3];break}}if(p.length>1&&r.exec(g))if(p.length===2&&n.relative[p[0]])t=ga(p[0]+p[1],h);else for(t=n.relative[p[0]]?[h]:k(p.shift(),h);p.length;){g=p.shift();if(n.relative[g])g+=p.shift();
rocket-3d/web/js/jquery.min.js:t=ga(g,t)}else{if(!m&&p.length>1&&h.nodeType===9&&!M&&n.match.ID.test(p[0])&&!n.match.ID.test(p[p.length-1])){v=k.find(p.shift(),h,M);h=v.expr?k.filter(v.expr,v.set)[0]:v.set[0]}if(h){v=m?{expr:p.pop(),set:z(m)}:k.find(p.pop(),p.length===1&&(p[0]==="~"||p[0]==="+")&&h.parentNode?h.parentNode:h,M);t=v.expr?k.filter(v.expr,v.set):v.set;if(p.length>0)y=z(t);else H=false;for(;p.length;){var D=p.pop();v=D;if(n.relative[D])v=p.pop();else D="";if(v==null)v=h;n.relative[D](y,v,M)}}else y=[]}y||(y=t);y||k.error(D||
rocket-3d/web/js/jquery.min.js:g);if(j.call(y)==="[object Array]")if(H)if(h&&h.nodeType===1)for(g=0;y[g]!=null;g++){if(y[g]&&(y[g]===true||y[g].nodeType===1&&E(h,y[g])))l.push(t[g])}else for(g=0;y[g]!=null;g++)y[g]&&y[g].nodeType===1&&l.push(t[g]);else l.push.apply(l,y);else z(y,l);if(S){k(S,q,l,m);k.uniqueSort(l)}return l};k.uniqueSort=function(g){if(B){i=o;g.sort(B);if(i)for(var h=1;h<g.length;h++)g[h]===g[h-1]&&g.splice(h--,1)}return g};k.matches=function(g,h){return k(g,null,null,h)};k.find=function(g,h,l){var m,q;if(!g)return[];
rocket-3d/web/js/jquery.min.js:for(var p=0,v=n.order.length;p<v;p++){var t=n.order[p];if(q=n.leftMatch[t].exec(g)){var y=q[1];q.splice(1,1);if(y.substr(y.length-1)!=="\\"){q[1]=(q[1]||"").replace(/\\/g,"");m=n.find[t](q,h,l);if(m!=null){g=g.replace(n.match[t],"");break}}}}m||(m=h.getElementsByTagName("*"));return{set:m,expr:g}};k.filter=function(g,h,l,m){for(var q=g,p=[],v=h,t,y,S=h&&h[0]&&x(h[0]);g&&h.length;){for(var H in n.filter)if((t=n.leftMatch[H].exec(g))!=null&&t[2]){var M=n.filter[H],I,D;D=t[1];y=false;t.splice(1,1);if(D.substr(D.length-
rocket-3d/web/js/jquery.min.js:1)!=="\\"){if(v===p)p=[];if(n.preFilter[H])if(t=n.preFilter[H](t,v,l,p,m,S)){if(t===true)continue}else y=I=true;if(t)for(var U=0;(D=v[U])!=null;U++)if(D){I=M(D,t,U,v);var Ha=m^!!I;if(l&&I!=null)if(Ha)y=true;else v[U]=false;else if(Ha){p.push(D);y=true}}if(I!==w){l||(v=p);g=g.replace(n.match[H],"");if(!y)return[];break}}}if(g===q)if(y==null)k.error(g);else break;q=g}return v};k.error=function(g){throw"Syntax error, unrecognized expression: "+g;};var n=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
rocket-3d/web/js/jquery.min.js:CLASS:/\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(g){return g.getAttribute("href")}},
rocket-3d/web/js/jquery.min.js:relative:{"+":function(g,h){var l=typeof h==="string",m=l&&!/\W/.test(h);l=l&&!m;if(m)h=h.toLowerCase();m=0;for(var q=g.length,p;m<q;m++)if(p=g[m]){for(;(p=p.previousSibling)&&p.nodeType!==1;);g[m]=l||p&&p.nodeName.toLowerCase()===h?p||false:p===h}l&&k.filter(h,g,true)},">":function(g,h){var l=typeof h==="string";if(l&&!/\W/.test(h)){h=h.toLowerCase();for(var m=0,q=g.length;m<q;m++){var p=g[m];if(p){l=p.parentNode;g[m]=l.nodeName.toLowerCase()===h?l:false}}}else{m=0;for(q=g.length;m<q;m++)if(p=g[m])g[m]=
rocket-3d/web/js/jquery.min.js:l?p.parentNode:p.parentNode===h;l&&k.filter(h,g,true)}},"":function(g,h,l){var m=e++,q=d;if(typeof h==="string"&&!/\W/.test(h)){var p=h=h.toLowerCase();q=b}q("parentNode",h,m,g,p,l)},"~":function(g,h,l){var m=e++,q=d;if(typeof h==="string"&&!/\W/.test(h)){var p=h=h.toLowerCase();q=b}q("previousSibling",h,m,g,p,l)}},find:{ID:function(g,h,l){if(typeof h.getElementById!=="undefined"&&!l)return(g=h.getElementById(g[1]))?[g]:[]},NAME:function(g,h){if(typeof h.getElementsByName!=="undefined"){var l=[];
rocket-3d/web/js/jquery.min.js:h=h.getElementsByName(g[1]);for(var m=0,q=h.length;m<q;m++)h[m].getAttribute("name")===g[1]&&l.push(h[m]);return l.length===0?null:l}},TAG:function(g,h){return h.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,h,l,m,q,p){g=" "+g[1].replace(/\\/g,"")+" ";if(p)return g;p=0;for(var v;(v=h[p])!=null;p++)if(v)if(q^(v.className&&(" "+v.className+" ").replace(/[\t\n]/g," ").indexOf(g)>=0))l||m.push(v);else if(l)h[p]=false;return false},ID:function(g){return g[1].replace(/\\/g,"")},TAG:function(g){return g[1].toLowerCase()},
rocket-3d/web/js/jquery.min.js:CHILD:function(g){if(g[1]==="nth"){var h=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2]==="even"&&"2n"||g[2]==="odd"&&"2n+1"||!/\D/.test(g[2])&&"0n+"+g[2]||g[2]);g[2]=h[1]+(h[2]||1)-0;g[3]=h[3]-0}g[0]=e++;return g},ATTR:function(g,h,l,m,q,p){h=g[1].replace(/\\/g,"");if(!p&&n.attrMap[h])g[1]=n.attrMap[h];if(g[2]==="~=")g[4]=" "+g[4]+" ";return g},PSEUDO:function(g,h,l,m,q){if(g[1]==="not")if((f.exec(g[3])||"").length>1||/^\w/.test(g[3]))g[3]=k(g[3],null,null,h);else{g=k.filter(g[3],h,l,true^q);l||m.push.apply(m,
rocket-3d/web/js/jquery.min.js:g);return false}else if(n.match.POS.test(g[0])||n.match.CHILD.test(g[0]))return true;return g},POS:function(g){g.unshift(true);return g}},filters:{enabled:function(g){return g.disabled===false&&g.type!=="hidden"},disabled:function(g){return g.disabled===true},checked:function(g){return g.checked===true},selected:function(g){return g.selected===true},parent:function(g){return!!g.firstChild},empty:function(g){return!g.firstChild},has:function(g,h,l){return!!k(l[3],g).length},header:function(g){return/h\d/i.test(g.nodeName)},
rocket-3d/web/js/jquery.min.js:text:function(g){return"text"===g.type},radio:function(g){return"radio"===g.type},checkbox:function(g){return"checkbox"===g.type},file:function(g){return"file"===g.type},password:function(g){return"password"===g.type},submit:function(g){return"submit"===g.type},image:function(g){return"image"===g.type},reset:function(g){return"reset"===g.type},button:function(g){return"button"===g.type||g.nodeName.toLowerCase()==="button"},input:function(g){return/input|select|textarea|button/i.test(g.nodeName)}},
rocket-3d/web/js/jquery.min.js:setFilters:{first:function(g,h){return h===0},last:function(g,h,l,m){return h===m.length-1},even:function(g,h){return h%2===0},odd:function(g,h){return h%2===1},lt:function(g,h,l){return h<l[3]-0},gt:function(g,h,l){return h>l[3]-0},nth:function(g,h,l){return l[3]-0===h},eq:function(g,h,l){return l[3]-0===h}},filter:{PSEUDO:function(g,h,l,m){var q=h[1],p=n.filters[q];if(p)return p(g,l,h,m);else if(q==="contains")return(g.textContent||g.innerText||a([g])||"").indexOf(h[3])>=0;else if(q==="not"){h=
rocket-3d/web/js/jquery.min.js:h[3];l=0;for(m=h.length;l<m;l++)if(h[l]===g)return false;return true}else k.error("Syntax error, unrecognized expression: "+q)},CHILD:function(g,h){var l=h[1],m=g;switch(l){case "only":case "first":for(;m=m.previousSibling;)if(m.nodeType===1)return false;if(l==="first")return true;m=g;case "last":for(;m=m.nextSibling;)if(m.nodeType===1)return false;return true;case "nth":l=h[2];var q=h[3];if(l===1&&q===0)return true;h=h[0];var p=g.parentNode;if(p&&(p.sizcache!==h||!g.nodeIndex)){var v=0;for(m=p.firstChild;m;m=
rocket-3d/web/js/jquery.min.js:m.nextSibling)if(m.nodeType===1)m.nodeIndex=++v;p.sizcache=h}g=g.nodeIndex-q;return l===0?g===0:g%l===0&&g/l>=0}},ID:function(g,h){return g.nodeType===1&&g.getAttribute("id")===h},TAG:function(g,h){return h==="*"&&g.nodeType===1||g.nodeName.toLowerCase()===h},CLASS:function(g,h){return(" "+(g.className||g.getAttribute("class"))+" ").indexOf(h)>-1},ATTR:function(g,h){var l=h[1];g=n.attrHandle[l]?n.attrHandle[l](g):g[l]!=null?g[l]:g.getAttribute(l);l=g+"";var m=h[2];h=h[4];return g==null?m==="!=":m===
rocket-3d/web/js/jquery.min.js:"="?l===h:m==="*="?l.indexOf(h)>=0:m==="~="?(" "+l+" ").indexOf(h)>=0:!h?l&&g!==false:m==="!="?l!==h:m==="^="?l.indexOf(h)===0:m==="$="?l.substr(l.length-h.length)===h:m==="|="?l===h||l.substr(0,h.length+1)===h+"-":false},POS:function(g,h,l,m){var q=n.setFilters[h[2]];if(q)return q(g,l,h,m)}}},r=n.match.POS;for(var u in n.match){n.match[u]=new RegExp(n.match[u].source+/(?![^\[]*\])(?![^\(]*\))/.source);n.leftMatch[u]=new RegExp(/(^(?:.|\r|\n)*?)/.source+n.match[u].source.replace(/\\(\d+)/g,function(g,
rocket-3d/web/js/jquery.min.js:h){return"\\"+(h-0+1)}))}var z=function(g,h){g=Array.prototype.slice.call(g,0);if(h){h.push.apply(h,g);return h}return g};try{Array.prototype.slice.call(s.documentElement.childNodes,0)}catch(C){z=function(g,h){h=h||[];if(j.call(g)==="[object Array]")Array.prototype.push.apply(h,g);else if(typeof g.length==="number")for(var l=0,m=g.length;l<m;l++)h.push(g[l]);else for(l=0;g[l];l++)h.push(g[l]);return h}}var B;if(s.documentElement.compareDocumentPosition)B=function(g,h){if(!g.compareDocumentPosition||
rocket-3d/web/js/jquery.min.js:!h.compareDocumentPosition){if(g==h)i=true;return g.compareDocumentPosition?-1:1}g=g.compareDocumentPosition(h)&4?-1:g===h?0:1;if(g===0)i=true;return g};else if("sourceIndex"in s.documentElement)B=function(g,h){if(!g.sourceIndex||!h.sourceIndex){if(g==h)i=true;return g.sourceIndex?-1:1}g=g.sourceIndex-h.sourceIndex;if(g===0)i=true;return g};else if(s.createRange)B=function(g,h){if(!g.ownerDocument||!h.ownerDocument){if(g==h)i=true;return g.ownerDocument?-1:1}var l=g.ownerDocument.createRange(),m=
rocket-3d/web/js/jquery.min.js:h.ownerDocument.createRange();l.setStart(g,0);l.setEnd(g,0);m.setStart(h,0);m.setEnd(h,0);g=l.compareBoundaryPoints(Range.START_TO_END,m);if(g===0)i=true;return g};(function(){var g=s.createElement("div"),h="script"+(new Date).getTime();g.innerHTML="<a name='"+h+"'/>";var l=s.documentElement;l.insertBefore(g,l.firstChild);if(s.getElementById(h)){n.find.ID=function(m,q,p){if(typeof q.getElementById!=="undefined"&&!p)return(q=q.getElementById(m[1]))?q.id===m[1]||typeof q.getAttributeNode!=="undefined"&&
rocket-3d/web/js/jquery.min.js:q.getAttributeNode("id").nodeValue===m[1]?[q]:w:[]};n.filter.ID=function(m,q){var p=typeof m.getAttributeNode!=="undefined"&&m.getAttributeNode("id");return m.nodeType===1&&p&&p.nodeValue===q}}l.removeChild(g);l=g=null})();(function(){var g=s.createElement("div");g.appendChild(s.createComment(""));if(g.getElementsByTagName("*").length>0)n.find.TAG=function(h,l){l=l.getElementsByTagName(h[1]);if(h[1]==="*"){h=[];for(var m=0;l[m];m++)l[m].nodeType===1&&h.push(l[m]);l=h}return l};g.innerHTML="<a href='#'></a>";
rocket-3d/web/js/jquery.min.js:if(g.firstChild&&typeof g.firstChild.getAttribute!=="undefined"&&g.firstChild.getAttribute("href")!=="#")n.attrHandle.href=function(h){return h.getAttribute("href",2)};g=null})();s.querySelectorAll&&function(){var g=k,h=s.createElement("div");h.innerHTML="<p class='TEST'></p>";if(!(h.querySelectorAll&&h.querySelectorAll(".TEST").length===0)){k=function(m,q,p,v){q=q||s;if(!v&&q.nodeType===9&&!x(q))try{return z(q.querySelectorAll(m),p)}catch(t){}return g(m,q,p,v)};for(var l in g)k[l]=g[l];h=null}}();
rocket-3d/web/js/jquery.min.js:(function(){var g=s.createElement("div");g.innerHTML="<div class='test e'></div><div class='test'></div>";if(!(!g.getElementsByClassName||g.getElementsByClassName("e").length===0)){g.lastChild.className="e";if(g.getElementsByClassName("e").length!==1){n.order.splice(1,0,"CLASS");n.find.CLASS=function(h,l,m){if(typeof l.getElementsByClassName!=="undefined"&&!m)return l.getElementsByClassName(h[1])};g=null}}})();var E=s.compareDocumentPosition?function(g,h){return!!(g.compareDocumentPosition(h)&16)}:
rocket-3d/web/js/jquery.min.js:function(g,h){return g!==h&&(g.contains?g.contains(h):true)},x=function(g){return(g=(g?g.ownerDocument||g:0).documentElement)?g.nodeName!=="HTML":false},ga=function(g,h){var l=[],m="",q;for(h=h.nodeType?[h]:h;q=n.match.PSEUDO.exec(g);){m+=q[0];g=g.replace(n.match.PSEUDO,"")}g=n.relative[g]?g+"*":g;q=0;for(var p=h.length;q<p;q++)k(g,h[q],l);return k.filter(m,l)};c.find=k;c.expr=k.selectors;c.expr[":"]=c.expr.filters;c.unique=k.uniqueSort;c.text=a;c.isXMLDoc=x;c.contains=E})();var eb=/Until$/,fb=/^(?:parents|prevUntil|prevAll)/,
rocket-3d/web/js/jquery.min.js:gb=/,/;R=Array.prototype.slice;var Ia=function(a,b,d){if(c.isFunction(b))return c.grep(a,function(e,j){return!!b.call(e,j,e)===d});else if(b.nodeType)return c.grep(a,function(e){return e===b===d});else if(typeof b==="string"){var f=c.grep(a,function(e){return e.nodeType===1});if(Ua.test(b))return c.filter(b,f,!d);else b=c.filter(b,f)}return c.grep(a,function(e){return c.inArray(e,b)>=0===d})};c.fn.extend({find:function(a){for(var b=this.pushStack("","find",a),d=0,f=0,e=this.length;f<e;f++){d=b.length;
rocket-3d/web/js/jquery.min.js:c.find(a,this[f],b);if(f>0)for(var j=d;j<b.length;j++)for(var i=0;i<d;i++)if(b[i]===b[j]){b.splice(j--,1);break}}return b},has:function(a){var b=c(a);return this.filter(function(){for(var d=0,f=b.length;d<f;d++)if(c.contains(this,b[d]))return true})},not:function(a){return this.pushStack(Ia(this,a,false),"not",a)},filter:function(a){return this.pushStack(Ia(this,a,true),"filter",a)},is:function(a){return!!a&&c.filter(a,this).length>0},closest:function(a,b){if(c.isArray(a)){var d=[],f=this[0],e,j=
rocket-3d/web/js/jquery.min.js:{},i;if(f&&a.length){e=0;for(var o=a.length;e<o;e++){i=a[e];j[i]||(j[i]=c.expr.match.POS.test(i)?c(i,b||this.context):i)}for(;f&&f.ownerDocument&&f!==b;){for(i in j){e=j[i];if(e.jquery?e.index(f)>-1:c(f).is(e)){d.push({selector:i,elem:f});delete j[i]}}f=f.parentNode}}return d}var k=c.expr.match.POS.test(a)?c(a,b||this.context):null;return this.map(function(n,r){for(;r&&r.ownerDocument&&r!==b;){if(k?k.index(r)>-1:c(r).is(a))return r;r=r.parentNode}return null})},index:function(a){if(!a||typeof a===
rocket-3d/web/js/jquery.min.js:"string")return c.inArray(this[0],a?c(a):this.parent().children());return c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){a=typeof a==="string"?c(a,b||this.context):c.makeArray(a);b=c.merge(this.get(),a);return this.pushStack(qa(a[0])||qa(b[0])?b:c.unique(b))},andSelf:function(){return this.add(this.prevObject)}});c.each({parent:function(a){return(a=a.parentNode)&&a.nodeType!==11?a:null},parents:function(a){return c.dir(a,"parentNode")},parentsUntil:function(a,b,d){return c.dir(a,"parentNode",
rocket-3d/web/js/jquery.min.js:d)},next:function(a){return c.nth(a,2,"nextSibling")},prev:function(a){return c.nth(a,2,"previousSibling")},nextAll:function(a){return c.dir(a,"nextSibling")},prevAll:function(a){return c.dir(a,"previousSibling")},nextUntil:function(a,b,d){return c.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return c.dir(a,"previousSibling",d)},siblings:function(a){return c.sibling(a.parentNode.firstChild,a)},children:function(a){return c.sibling(a.firstChild)},contents:function(a){return c.nodeName(a,"iframe")?
rocket-3d/web/js/jquery.min.js:a.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},function(a,b){c.fn[a]=function(d,f){var e=c.map(this,b,d);eb.test(a)||(f=d);if(f&&typeof f==="string")e=c.filter(f,e);e=this.length>1?c.unique(e):e;if((this.length>1||gb.test(f))&&fb.test(a))e=e.reverse();return this.pushStack(e,a,R.call(arguments).join(","))}});c.extend({filter:function(a,b,d){if(d)a=":not("+a+")";return c.find.matches(a,b)},dir:function(a,b,d){var f=[];for(a=a[b];a&&a.nodeType!==9&&(d===w||a.nodeType!==1||!c(a).is(d));){a.nodeType===
rocket-3d/web/js/jquery.min.js:1&&f.push(a);a=a[b]}return f},nth:function(a,b,d){b=b||1;for(var f=0;a;a=a[d])if(a.nodeType===1&&++f===b)break;return a},sibling:function(a,b){for(var d=[];a;a=a.nextSibling)a.nodeType===1&&a!==b&&d.push(a);return d}});var Ja=/ jQuery\d+="(?:\d+|null)"/g,V=/^\s+/,Ka=/(<([\w:]+)[^>]*?)\/>/g,hb=/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,La=/<([\w:]+)/,ib=/<tbody/i,jb=/<|&#?\w+;/,ta=/<script|<object|<embed|<option|<style/i,ua=/checked\s*(?:[^=]|=\s*.checked.)/i,Ma=function(a,b,d){return hb.test(d)?
rocket-3d/web/js/jquery.min.js:a:b+"></"+d+">"},F={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};F.optgroup=F.option;F.tbody=F.tfoot=F.colgroup=F.caption=F.thead;F.th=F.td;if(!c.support.htmlSerialize)F._default=[1,"div<div>","</div>"];c.fn.extend({text:function(a){if(c.isFunction(a))return this.each(function(b){var d=
rocket-3d/web/js/jquery.min.js:c(this);d.text(a.call(this,b,d.text()))});if(typeof a!=="object"&&a!==w)return this.empty().append((this[0]&&this[0].ownerDocument||s).createTextNode(a));return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var b=c(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.insertBefore(this[0]);b.map(function(){for(var d=this;d.firstChild&&d.firstChild.nodeType===1;)d=d.firstChild;return d}).append(this)}return this},
rocket-3d/web/js/jquery.min.js:wrapInner:function(a){if(c.isFunction(a))return this.each(function(b){c(this).wrapInner(a.call(this,b))});return this.each(function(){var b=c(this),d=b.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){c.nodeName(this,"body")||c(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.appendChild(a)})},
rocket-3d/web/js/jquery.min.js:prepend:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,this)});else if(arguments.length){var a=c(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,
rocket-3d/web/js/jquery.min.js:this.nextSibling)});else if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,c(arguments[0]).toArray());return a}},remove:function(a,b){for(var d=0,f;(f=this[d])!=null;d++)if(!a||c.filter(a,[f]).length){if(!b&&f.nodeType===1){c.cleanData(f.getElementsByTagName("*"));c.cleanData([f])}f.parentNode&&f.parentNode.removeChild(f)}return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++)for(b.nodeType===1&&c.cleanData(b.getElementsByTagName("*"));b.firstChild;)b.removeChild(b.firstChild);
rocket-3d/web/js/jquery.min.js:return this},clone:function(a){var b=this.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){var d=this.outerHTML,f=this.ownerDocument;if(!d){d=f.createElement("div");d.appendChild(this.cloneNode(true));d=d.innerHTML}return c.clean([d.replace(Ja,"").replace(/=([^="'>\s]+\/)>/g,'="$1">').replace(V,"")],f)[0]}else return this.cloneNode(true)});if(a===true){ra(this,b);ra(this.find("*"),b.find("*"))}return b},html:function(a){if(a===w)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(Ja,
rocket-3d/web/js/jquery.min.js:""):null;else if(typeof a==="string"&&!ta.test(a)&&(c.support.leadingWhitespace||!V.test(a))&&!F[(La.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Ka,Ma);try{for(var b=0,d=this.length;b<d;b++)if(this[b].nodeType===1){c.cleanData(this[b].getElementsByTagName("*"));this[b].innerHTML=a}}catch(f){this.empty().append(a)}}else c.isFunction(a)?this.each(function(e){var j=c(this),i=j.html();j.empty().append(function(){return a.call(this,e,i)})}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&
rocket-3d/web/js/jquery.min.js:this[0].parentNode){if(c.isFunction(a))return this.each(function(b){var d=c(this),f=d.html();d.replaceWith(a.call(this,b,f))});if(typeof a!=="string")a=c(a).detach();return this.each(function(){var b=this.nextSibling,d=this.parentNode;c(this).remove();b?c(b).before(a):c(d).append(a)})}else return this.pushStack(c(c.isFunction(a)?a():a),"replaceWith",a)},detach:function(a){return this.remove(a,true)},domManip:function(a,b,d){function f(u){return c.nodeName(u,"table")?u.getElementsByTagName("tbody")[0]||
rocket-3d/web/js/jquery.min.js:u.appendChild(u.ownerDocument.createElement("tbody")):u}var e,j,i=a[0],o=[],k;if(!c.support.checkClone&&arguments.length===3&&typeof i==="string"&&ua.test(i))return this.each(function(){c(this).domManip(a,b,d,true)});if(c.isFunction(i))return this.each(function(u){var z=c(this);a[0]=i.call(this,u,b?z.html():w);z.domManip(a,b,d)});if(this[0]){e=i&&i.parentNode;e=c.support.parentNode&&e&&e.nodeType===11&&e.childNodes.length===this.length?{fragment:e}:sa(a,this,o);k=e.fragment;if(j=k.childNodes.length===
rocket-3d/web/js/jquery.min.js:1?(k=k.firstChild):k.firstChild){b=b&&c.nodeName(j,"tr");for(var n=0,r=this.length;n<r;n++)d.call(b?f(this[n],j):this[n],n>0||e.cacheable||this.length>1?k.cloneNode(true):k)}o.length&&c.each(o,Qa)}return this}});c.fragments={};c.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){c.fn[a]=function(d){var f=[];d=c(d);var e=this.length===1&&this[0].parentNode;if(e&&e.nodeType===11&&e.childNodes.length===1&&d.length===1){d[b](this[0]);
rocket-3d/web/js/jquery.min.js:return this}else{e=0;for(var j=d.length;e<j;e++){var i=(e>0?this.clone(true):this).get();c.fn[b].apply(c(d[e]),i);f=f.concat(i)}return this.pushStack(f,a,d.selector)}}});c.extend({clean:function(a,b,d,f){b=b||s;if(typeof b.createElement==="undefined")b=b.ownerDocument||b[0]&&b[0].ownerDocument||s;for(var e=[],j=0,i;(i=a[j])!=null;j++){if(typeof i==="number")i+="";if(i){if(typeof i==="string"&&!jb.test(i))i=b.createTextNode(i);else if(typeof i==="string"){i=i.replace(Ka,Ma);var o=(La.exec(i)||["",
rocket-3d/web/js/jquery.min.js:""])[1].toLowerCase(),k=F[o]||F._default,n=k[0],r=b.createElement("div");for(r.innerHTML=k[1]+i+k[2];n--;)r=r.lastChild;if(!c.support.tbody){n=ib.test(i);o=o==="table"&&!n?r.firstChild&&r.firstChild.childNodes:k[1]==="<table>"&&!n?r.childNodes:[];for(k=o.length-1;k>=0;--k)c.nodeName(o[k],"tbody")&&!o[k].childNodes.length&&o[k].parentNode.removeChild(o[k])}!c.support.leadingWhitespace&&V.test(i)&&r.insertBefore(b.createTextNode(V.exec(i)[0]),r.firstChild);i=r.childNodes}if(i.nodeType)e.push(i);else e=
rocket-3d/web/js/jquery.min.js:c.merge(e,i)}}if(d)for(j=0;e[j];j++)if(f&&c.nodeName(e[j],"script")&&(!e[j].type||e[j].type.toLowerCase()==="text/javascript"))f.push(e[j].parentNode?e[j].parentNode.removeChild(e[j]):e[j]);else{e[j].nodeType===1&&e.splice.apply(e,[j+1,0].concat(c.makeArray(e[j].getElementsByTagName("script"))));d.appendChild(e[j])}return e},cleanData:function(a){for(var b,d,f=c.cache,e=c.event.special,j=c.support.deleteExpando,i=0,o;(o=a[i])!=null;i++)if(d=o[c.expando]){b=f[d];if(b.events)for(var k in b.events)e[k]?
rocket-3d/web/js/jquery.min.js:c.event.remove(o,k):Ca(o,k,b.handle);if(j)delete o[c.expando];else o.removeAttribute&&o.removeAttribute(c.expando);delete f[d]}}});var kb=/z-?index|font-?weight|opacity|zoom|line-?height/i,Na=/alpha\([^)]*\)/,Oa=/opacity=([^)]*)/,ha=/float/i,ia=/-([a-z])/ig,lb=/([A-Z])/g,mb=/^-?\d+(?:px)?$/i,nb=/^-?\d/,ob={position:"absolute",visibility:"hidden",display:"block"},pb=["Left","Right"],qb=["Top","Bottom"],rb=s.defaultView&&s.defaultView.getComputedStyle,Pa=c.support.cssFloat?"cssFloat":"styleFloat",ja=
rocket-3d/web/js/jquery.min.js:function(a,b){return b.toUpperCase()};c.fn.css=function(a,b){return X(this,a,b,true,function(d,f,e){if(e===w)return c.curCSS(d,f);if(typeof e==="number"&&!kb.test(f))e+="px";c.style(d,f,e)})};c.extend({style:function(a,b,d){if(!a||a.nodeType===3||a.nodeType===8)return w;if((b==="width"||b==="height")&&parseFloat(d)<0)d=w;var f=a.style||a,e=d!==w;if(!c.support.opacity&&b==="opacity"){if(e){f.zoom=1;b=parseInt(d,10)+""==="NaN"?"":"alpha(opacity="+d*100+")";a=f.filter||c.curCSS(a,"filter")||"";f.filter=
rocket-3d/web/js/jquery.min.js:Na.test(a)?a.replace(Na,b):b}return f.filter&&f.filter.indexOf("opacity=")>=0?parseFloat(Oa.exec(f.filter)[1])/100+"":""}if(ha.test(b))b=Pa;b=b.replace(ia,ja);if(e)f[b]=d;return f[b]},css:function(a,b,d,f){if(b==="width"||b==="height"){var e,j=b==="width"?pb:qb;function i(){e=b==="width"?a.offsetWidth:a.offsetHeight;f!=="border"&&c.each(j,function(){f||(e-=parseFloat(c.curCSS(a,"padding"+this,true))||0);if(f==="margin")e+=parseFloat(c.curCSS(a,"margin"+this,true))||0;else e-=parseFloat(c.curCSS(a,
rocket-3d/web/js/jquery.min.js:"border"+this+"Width",true))||0})}a.offsetWidth!==0?i():c.swap(a,ob,i);return Math.max(0,Math.round(e))}return c.curCSS(a,b,d)},curCSS:function(a,b,d){var f,e=a.style;if(!c.support.opacity&&b==="opacity"&&a.currentStyle){f=Oa.test(a.currentStyle.filter||"")?parseFloat(RegExp.$1)/100+"":"";return f===""?"1":f}if(ha.test(b))b=Pa;if(!d&&e&&e[b])f=e[b];else if(rb){if(ha.test(b))b="float";b=b.replace(lb,"-$1").toLowerCase();e=a.ownerDocument.defaultView;if(!e)return null;if(a=e.getComputedStyle(a,null))f=
rocket-3d/web/js/jquery.min.js:a.getPropertyValue(b);if(b==="opacity"&&f==="")f="1"}else if(a.currentStyle){d=b.replace(ia,ja);f=a.currentStyle[b]||a.currentStyle[d];if(!mb.test(f)&&nb.test(f)){b=e.left;var j=a.runtimeStyle.left;a.runtimeStyle.left=a.currentStyle.left;e.left=d==="fontSize"?"1em":f||0;f=e.pixelLeft+"px";e.left=b;a.runtimeStyle.left=j}}return f},swap:function(a,b,d){var f={};for(var e in b){f[e]=a.style[e];a.style[e]=b[e]}d.call(a);for(e in b)a.style[e]=f[e]}});if(c.expr&&c.expr.filters){c.expr.filters.hidden=function(a){var b=
rocket-3d/web/js/jquery.min.js:a.offsetWidth,d=a.offsetHeight,f=a.nodeName.toLowerCase()==="tr";return b===0&&d===0&&!f?true:b>0&&d>0&&!f?false:c.curCSS(a,"display")==="none"};c.expr.filters.visible=function(a){return!c.expr.filters.hidden(a)}}var sb=J(),tb=/<script(.|\s)*?\/script>/gi,ub=/select|textarea/i,vb=/color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week/i,N=/=\?(&|$)/,ka=/\?/,wb=/(\?|&)_=.*?(&|$)/,xb=/^(\w+:)?\/\/([^\/?#]+)/,yb=/%20/g,zb=c.fn.load;c.fn.extend({load:function(a,b,d){if(typeof a!==
rocket-3d/web/js/jquery.min.js:"string")return zb.call(this,a);else if(!this.length)return this;var f=a.indexOf(" ");if(f>=0){var e=a.slice(f,a.length);a=a.slice(0,f)}f="GET";if(b)if(c.isFunction(b)){d=b;b=null}else if(typeof b==="object"){b=c.param(b,c.ajaxSettings.traditional);f="POST"}var j=this;c.ajax({url:a,type:f,dataType:"html",data:b,complete:function(i,o){if(o==="success"||o==="notmodified")j.html(e?c("<div />").append(i.responseText.replace(tb,"")).find(e):i.responseText);d&&j.each(d,[i.responseText,o,i])}});return this},
rocket-3d/web/js/jquery.min.js:serialize:function(){return c.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?c.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ub.test(this.nodeName)||vb.test(this.type))}).map(function(a,b){a=c(this).val();return a==null?null:c.isArray(a)?c.map(a,function(d){return{name:b.name,value:d}}):{name:b.name,value:a}}).get()}});c.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),
rocket-3d/web/js/jquery.min.js:function(a,b){c.fn[b]=function(d){return this.bind(b,d)}});c.extend({get:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b=null}return c.ajax({type:"GET",url:a,data:b,success:d,dataType:f})},getScript:function(a,b){return c.get(a,null,b,"script")},getJSON:function(a,b,d){return c.get(a,b,d,"json")},post:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b={}}return c.ajax({type:"POST",url:a,data:b,success:d,dataType:f})},ajaxSetup:function(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,
rocket-3d/web/js/jquery.min.js:global:true,type:"GET",contentType:"application/x-www-form-urlencoded",processData:true,async:true,xhr:A.XMLHttpRequest&&(A.location.protocol!=="file:"||!A.ActiveXObject)?function(){return new A.XMLHttpRequest}:function(){try{return new A.ActiveXObject("Microsoft.XMLHTTP")}catch(a){}},accepts:{xml:"application/xml, text/xml",html:"text/html",script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},etag:{},ajax:function(a){function b(){e.success&&
rocket-3d/web/js/jquery.min.js:e.success.call(k,o,i,x);e.global&&f("ajaxSuccess",[x,e])}function d(){e.complete&&e.complete.call(k,x,i);e.global&&f("ajaxComplete",[x,e]);e.global&&!--c.active&&c.event.trigger("ajaxStop")}function f(q,p){(e.context?c(e.context):c.event).trigger(q,p)}var e=c.extend(true,{},c.ajaxSettings,a),j,i,o,k=a&&a.context||e,n=e.type.toUpperCase();if(e.data&&e.processData&&typeof e.data!=="string")e.data=c.param(e.data,e.traditional);if(e.dataType==="jsonp"){if(n==="GET")N.test(e.url)||(e.url+=(ka.test(e.url)?
rocket-3d/web/js/jquery.min.js:"&":"?")+(e.jsonp||"callback")+"=?");else if(!e.data||!N.test(e.data))e.data=(e.data?e.data+"&":"")+(e.jsonp||"callback")+"=?";e.dataType="json"}if(e.dataType==="json"&&(e.data&&N.test(e.data)||N.test(e.url))){j=e.jsonpCallback||"jsonp"+sb++;if(e.data)e.data=(e.data+"").replace(N,"="+j+"$1");e.url=e.url.replace(N,"="+j+"$1");e.dataType="script";A[j]=A[j]||function(q){o=q;b();d();A[j]=w;try{delete A[j]}catch(p){}z&&z.removeChild(C)}}if(e.dataType==="script"&&e.cache===null)e.cache=false;if(e.cache===
rocket-3d/web/js/jquery.min.js:false&&n==="GET"){var r=J(),u=e.url.replace(wb,"$1_="+r+"$2");e.url=u+(u===e.url?(ka.test(e.url)?"&":"?")+"_="+r:"")}if(e.data&&n==="GET")e.url+=(ka.test(e.url)?"&":"?")+e.data;e.global&&!c.active++&&c.event.trigger("ajaxStart");r=(r=xb.exec(e.url))&&(r[1]&&r[1]!==location.protocol||r[2]!==location.host);if(e.dataType==="script"&&n==="GET"&&r){var z=s.getElementsByTagName("head")[0]||s.documentElement,C=s.createElement("script");C.src=e.url;if(e.scriptCharset)C.charset=e.scriptCharset;if(!j){var B=
rocket-3d/web/js/jquery.min.js:false;C.onload=C.onreadystatechange=function(){if(!B&&(!this.readyState||this.readyState==="loaded"||this.readyState==="complete")){B=true;b();d();C.onload=C.onreadystatechange=null;z&&C.parentNode&&z.removeChild(C)}}}z.insertBefore(C,z.firstChild);return w}var E=false,x=e.xhr();if(x){e.username?x.open(n,e.url,e.async,e.username,e.password):x.open(n,e.url,e.async);try{if(e.data||a&&a.contentType)x.setRequestHeader("Content-Type",e.contentType);if(e.ifModified){c.lastModified[e.url]&&x.setRequestHeader("If-Modified-Since",
rocket-3d/web/js/jquery.min.js:c.lastModified[e.url]);c.etag[e.url]&&x.setRequestHeader("If-None-Match",c.etag[e.url])}r||x.setRequestHeader("X-Requested-With","XMLHttpRequest");x.setRequestHeader("Accept",e.dataType&&e.accepts[e.dataType]?e.accepts[e.dataType]+", */*":e.accepts._default)}catch(ga){}if(e.beforeSend&&e.beforeSend.call(k,x,e)===false){e.global&&!--c.active&&c.event.trigger("ajaxStop");x.abort();return false}e.global&&f("ajaxSend",[x,e]);var g=x.onreadystatechange=function(q){if(!x||x.readyState===0||q==="abort"){E||
rocket-3d/web/js/jquery.min.js:d();E=true;if(x)x.onreadystatechange=c.noop}else if(!E&&x&&(x.readyState===4||q==="timeout")){E=true;x.onreadystatechange=c.noop;i=q==="timeout"?"timeout":!c.httpSuccess(x)?"error":e.ifModified&&c.httpNotModified(x,e.url)?"notmodified":"success";var p;if(i==="success")try{o=c.httpData(x,e.dataType,e)}catch(v){i="parsererror";p=v}if(i==="success"||i==="notmodified")j||b();else c.handleError(e,x,i,p);d();q==="timeout"&&x.abort();if(e.async)x=null}};try{var h=x.abort;x.abort=function(){x&&h.call(x);
rocket-3d/web/js/jquery.min.js:g("abort")}}catch(l){}e.async&&e.timeout>0&&setTimeout(function(){x&&!E&&g("timeout")},e.timeout);try{x.send(n==="POST"||n==="PUT"||n==="DELETE"?e.data:null)}catch(m){c.handleError(e,x,null,m);d()}e.async||g();return x}},handleError:function(a,b,d,f){if(a.error)a.error.call(a.context||a,b,d,f);if(a.global)(a.context?c(a.context):c.event).trigger("ajaxError",[b,a,f])},active:0,httpSuccess:function(a){try{return!a.status&&location.protocol==="file:"||a.status>=200&&a.status<300||a.status===304||a.status===
rocket-3d/web/js/jquery.min.js:1223||a.status===0}catch(b){}return false},httpNotModified:function(a,b){var d=a.getResponseHeader("Last-Modified"),f=a.getResponseHeader("Etag");if(d)c.lastModified[b]=d;if(f)c.etag[b]=f;return a.status===304||a.status===0},httpData:function(a,b,d){var f=a.getResponseHeader("content-type")||"",e=b==="xml"||!b&&f.indexOf("xml")>=0;a=e?a.responseXML:a.responseText;e&&a.documentElement.nodeName==="parsererror"&&c.error("parsererror");if(d&&d.dataFilter)a=d.dataFilter(a,b);if(typeof a==="string")if(b===
rocket-3d/web/js/jquery.min.js:"json"||!b&&f.indexOf("json")>=0)a=c.parseJSON(a);else if(b==="script"||!b&&f.indexOf("javascript")>=0)c.globalEval(a);return a},param:function(a,b){function d(i,o){if(c.isArray(o))c.each(o,function(k,n){b||/\[\]$/.test(i)?f(i,n):d(i+"["+(typeof n==="object"||c.isArray(n)?k:"")+"]",n)});else!b&&o!=null&&typeof o==="object"?c.each(o,function(k,n){d(i+"["+k+"]",n)}):f(i,o)}function f(i,o){o=c.isFunction(o)?o():o;e[e.length]=encodeURIComponent(i)+"="+encodeURIComponent(o)}var e=[];if(b===w)b=c.ajaxSettings.traditional;
rocket-3d/web/js/jquery.min.js:if(c.isArray(a)||a.jquery)c.each(a,function(){f(this.name,this.value)});else for(var j in a)d(j,a[j]);return e.join("&").replace(yb,"+")}});var la={},Ab=/toggle|show|hide/,Bb=/^([+-]=)?([\d+-.]+)(.*)$/,W,va=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]];c.fn.extend({show:function(a,b){if(a||a===0)return this.animate(K("show",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],"olddisplay");
rocket-3d/web/js/jquery.min.js:this[a].style.display=d||"";if(c.css(this[a],"display")==="none"){d=this[a].nodeName;var f;if(la[d])f=la[d];else{var e=c("<"+d+" />").appendTo("body");f=e.css("display");if(f==="none")f="block";e.remove();la[d]=f}c.data(this[a],"olddisplay",f)}}a=0;for(b=this.length;a<b;a++)this[a].style.display=c.data(this[a],"olddisplay")||"";return this}},hide:function(a,b){if(a||a===0)return this.animate(K("hide",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],"olddisplay");!d&&d!=="none"&&c.data(this[a],
rocket-3d/web/js/jquery.min.js:"olddisplay",c.css(this[a],"display"))}a=0;for(b=this.length;a<b;a++)this[a].style.display="none";return this}},_toggle:c.fn.toggle,toggle:function(a,b){var d=typeof a==="boolean";if(c.isFunction(a)&&c.isFunction(b))this._toggle.apply(this,arguments);else a==null||d?this.each(function(){var f=d?a:c(this).is(":hidden");c(this)[f?"show":"hide"]()}):this.animate(K("toggle",3),a,b);return this},fadeTo:function(a,b,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,d)},
rocket-3d/web/js/jquery.min.js:animate:function(a,b,d,f){var e=c.speed(b,d,f);if(c.isEmptyObject(a))return this.each(e.complete);return this[e.queue===false?"each":"queue"](function(){var j=c.extend({},e),i,o=this.nodeType===1&&c(this).is(":hidden"),k=this;for(i in a){var n=i.replace(ia,ja);if(i!==n){a[n]=a[i];delete a[i];i=n}if(a[i]==="hide"&&o||a[i]==="show"&&!o)return j.complete.call(this);if((i==="height"||i==="width")&&this.style){j.display=c.css(this,"display");j.overflow=this.style.overflow}if(c.isArray(a[i])){(j.specialEasing=
rocket-3d/web/js/jquery.min.js:j.specialEasing||{})[i]=a[i][1];a[i]=a[i][0]}}if(j.overflow!=null)this.style.overflow="hidden";j.curAnim=c.extend({},a);c.each(a,function(r,u){var z=new c.fx(k,j,r);if(Ab.test(u))z[u==="toggle"?o?"show":"hide":u](a);else{var C=Bb.exec(u),B=z.cur(true)||0;if(C){u=parseFloat(C[2]);var E=C[3]||"px";if(E!=="px"){k.style[r]=(u||1)+E;B=(u||1)/z.cur(true)*B;k.style[r]=B+E}if(C[1])u=(C[1]==="-="?-1:1)*u+B;z.custom(B,u,E)}else z.custom(B,u,"")}});return true})},stop:function(a,b){var d=c.timers;a&&this.queue([]);
rocket-3d/web/js/jquery.min.js:this.each(function(){for(var f=d.length-1;f>=0;f--)if(d[f].elem===this){b&&d[f](true);d.splice(f,1)}});b||this.dequeue();return this}});c.each({slideDown:K("show",1),slideUp:K("hide",1),slideToggle:K("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"}},function(a,b){c.fn[a]=function(d,f){return this.animate(b,d,f)}});c.extend({speed:function(a,b,d){var f=a&&typeof a==="object"?a:{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,easing:d&&b||b&&!c.isFunction(b)&&b};f.duration=c.fx.off?0:typeof f.duration===
rocket-3d/web/js/jquery.min.js:"number"?f.duration:c.fx.speeds[f.duration]||c.fx.speeds._default;f.old=f.complete;f.complete=function(){f.queue!==false&&c(this).dequeue();c.isFunction(f.old)&&f.old.call(this)};return f},easing:{linear:function(a,b,d,f){return d+f*a},swing:function(a,b,d,f){return(-Math.cos(a*Math.PI)/2+0.5)*f+d}},timers:[],fx:function(a,b,d){this.options=b;this.elem=a;this.prop=d;if(!b.orig)b.orig={}}});c.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this);(c.fx.step[this.prop]||
rocket-3d/web/js/jquery.min.js:c.fx.step._default)(this);if((this.prop==="height"||this.prop==="width")&&this.elem.style)this.elem.style.display="block"},cur:function(a){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];return(a=parseFloat(c.css(this.elem,this.prop,a)))&&a>-10000?a:parseFloat(c.curCSS(this.elem,this.prop))||0},custom:function(a,b,d){function f(j){return e.step(j)}this.startTime=J();this.start=a;this.end=b;this.unit=d||this.unit||"px";this.now=this.start;
rocket-3d/web/js/jquery.min.js:this.pos=this.state=0;var e=this;f.elem=this.elem;if(f()&&c.timers.push(f)&&!W)W=setInterval(c.fx.tick,13)},show:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.show=true;this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur());c(this.elem).show()},hide:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.hide=true;this.custom(this.cur(),0)},step:function(a){var b=J(),d=true;if(a||b>=this.options.duration+this.startTime){this.now=
rocket-3d/web/js/jquery.min.js:this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;for(var f in this.options.curAnim)if(this.options.curAnim[f]!==true)d=false;if(d){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;a=c.data(this.elem,"olddisplay");this.elem.style.display=a?a:this.options.display;if(c.css(this.elem,"display")==="none")this.elem.style.display="block"}this.options.hide&&c(this.elem).hide();if(this.options.hide||this.options.show)for(var e in this.options.curAnim)c.style(this.elem,
rocket-3d/web/js/jquery.min.js:e,this.options.orig[e]);this.options.complete.call(this.elem)}return false}else{e=b-this.startTime;this.state=e/this.options.duration;a=this.options.easing||(c.easing.swing?"swing":"linear");this.pos=c.easing[this.options.specialEasing&&this.options.specialEasing[this.prop]||a](this.state,e,0,1,this.options.duration);this.now=this.start+(this.end-this.start)*this.pos;this.update()}return true}};c.extend(c.fx,{tick:function(){for(var a=c.timers,b=0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||
rocket-3d/web/js/jquery.min.js:c.fx.stop()},stop:function(){clearInterval(W);W=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,"opacity",a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=null)a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit;else a.elem[a.prop]=a.now}}});if(c.expr&&c.expr.filters)c.expr.filters.animated=function(a){return c.grep(c.timers,function(b){return a===b.elem}).length};c.fn.offset="getBoundingClientRect"in s.documentElement?
rocket-3d/web/js/jquery.min.js:function(a){var b=this[0];if(a)return this.each(function(e){c.offset.setOffset(this,a,e)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);var d=b.getBoundingClientRect(),f=b.ownerDocument;b=f.body;f=f.documentElement;return{top:d.top+(self.pageYOffset||c.support.boxModel&&f.scrollTop||b.scrollTop)-(f.clientTop||b.clientTop||0),left:d.left+(self.pageXOffset||c.support.boxModel&&f.scrollLeft||b.scrollLeft)-(f.clientLeft||b.clientLeft||0)}}:function(a){var b=
rocket-3d/web/js/jquery.min.js:this[0];if(a)return this.each(function(r){c.offset.setOffset(this,a,r)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);c.offset.initialize();var d=b.offsetParent,f=b,e=b.ownerDocument,j,i=e.documentElement,o=e.body;f=(e=e.defaultView)?e.getComputedStyle(b,null):b.currentStyle;for(var k=b.offsetTop,n=b.offsetLeft;(b=b.parentNode)&&b!==o&&b!==i;){if(c.offset.supportsFixedPosition&&f.position==="fixed")break;j=e?e.getComputedStyle(b,null):b.currentStyle;
rocket-3d/web/js/jquery.min.js:k-=b.scrollTop;n-=b.scrollLeft;if(b===d){k+=b.offsetTop;n+=b.offsetLeft;if(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(b.nodeName))){k+=parseFloat(j.borderTopWidth)||0;n+=parseFloat(j.borderLeftWidth)||0}f=d;d=b.offsetParent}if(c.offset.subtractsBorderForOverflowNotVisible&&j.overflow!=="visible"){k+=parseFloat(j.borderTopWidth)||0;n+=parseFloat(j.borderLeftWidth)||0}f=j}if(f.position==="relative"||f.position==="static"){k+=o.offsetTop;n+=o.offsetLeft}if(c.offset.supportsFixedPosition&&
rocket-3d/web/js/jquery.min.js:f.position==="fixed"){k+=Math.max(i.scrollTop,o.scrollTop);n+=Math.max(i.scrollLeft,o.scrollLeft)}return{top:k,left:n}};c.offset={initialize:function(){var a=s.body,b=s.createElement("div"),d,f,e,j=parseFloat(c.curCSS(a,"marginTop",true))||0;c.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"});b.innerHTML="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
rocket-3d/web/js/jquery.min.js:a.insertBefore(b,a.firstChild);d=b.firstChild;f=d.firstChild;e=d.nextSibling.firstChild.firstChild;this.doesNotAddBorder=f.offsetTop!==5;this.doesAddBorderForTableAndCells=e.offsetTop===5;f.style.position="fixed";f.style.top="20px";this.supportsFixedPosition=f.offsetTop===20||f.offsetTop===15;f.style.position=f.style.top="";d.style.overflow="hidden";d.style.position="relative";this.subtractsBorderForOverflowNotVisible=f.offsetTop===-5;this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==j;a.removeChild(b);
rocket-3d/web/js/jquery.min.js:c.offset.initialize=c.noop},bodyOffset:function(a){var b=a.offsetTop,d=a.offsetLeft;c.offset.initialize();if(c.offset.doesNotIncludeMarginInBodyOffset){b+=parseFloat(c.curCSS(a,"marginTop",true))||0;d+=parseFloat(c.curCSS(a,"marginLeft",true))||0}return{top:b,left:d}},setOffset:function(a,b,d){if(/static/.test(c.curCSS(a,"position")))a.style.position="relative";var f=c(a),e=f.offset(),j=parseInt(c.curCSS(a,"top",true),10)||0,i=parseInt(c.curCSS(a,"left",true),10)||0;if(c.isFunction(b))b=b.call(a,
rocket-3d/web/js/jquery.min.js:d,e);d={top:b.top-e.top+j,left:b.left-e.left+i};"using"in b?b.using.call(a,d):f.css(d)}};c.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),d=this.offset(),f=/^body|html$/i.test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=parseFloat(c.curCSS(a,"marginTop",true))||0;d.left-=parseFloat(c.curCSS(a,"marginLeft",true))||0;f.top+=parseFloat(c.curCSS(b[0],"borderTopWidth",true))||0;f.left+=parseFloat(c.curCSS(b[0],"borderLeftWidth",true))||0;return{top:d.top-
rocket-3d/web/js/jquery.min.js:f.top,left:d.left-f.left}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||s.body;a&&!/^body|html$/i.test(a.nodeName)&&c.css(a,"position")==="static";)a=a.offsetParent;return a})}});c.each(["Left","Top"],function(a,b){var d="scroll"+b;c.fn[d]=function(f){var e=this[0],j;if(!e)return null;if(f!==w)return this.each(function(){if(j=wa(this))j.scrollTo(!a?f:c(j).scrollLeft(),a?f:c(j).scrollTop());else this[d]=f});else return(j=wa(e))?"pageXOffset"in j?j[a?"pageYOffset":
rocket-3d/web/js/jquery.min.js:"pageXOffset"]:c.support.boxModel&&j.document.documentElement[d]||j.document.body[d]:e[d]}});c.each(["Height","Width"],function(a,b){var d=b.toLowerCase();c.fn["inner"+b]=function(){return this[0]?c.css(this[0],d,false,"padding"):null};c.fn["outer"+b]=function(f){return this[0]?c.css(this[0],d,false,f?"margin":"border"):null};c.fn[d]=function(f){var e=this[0];if(!e)return f==null?null:this;if(c.isFunction(f))return this.each(function(j){var i=c(this);i[d](f.call(this,j,i[d]()))});return"scrollTo"in
rocket-3d/web/js/jquery.min.js:e&&e.document?e.document.compatMode==="CSS1Compat"&&e.document.documentElement["client"+b]||e.document.body["client"+b]:e.nodeType===9?Math.max(e.documentElement["client"+b],e.body["scroll"+b],e.documentElement["scroll"+b],e.body["offset"+b],e.documentElement["offset"+b]):f===w?c.css(e,d):this.css(d,typeof f==="string"?f:f+"px")}});A.jQuery=A.$=c})(window);
rocket-3d/web/obj/make.sh:#!/bin/sh
rocket-3d/web/obj/make.sh:DEST=rocket3d_full.js
rocket-3d/web/obj/make.sh:echo "[" >> $DEST
rocket-3d/web/obj/make.sh:cat rocket3d.js >> $DEST
rocket-3d/web/obj/make.sh:echo "," >> $DEST
rocket-3d/web/obj/make.sh:cat rocket3d_flame.js >> $DEST
rocket-3d/web/obj/make.sh:echo "]" >> $DEST
rocket-3d/web/obj/rocket3d.js:{
rocket-3d/web/obj/rocket3d.js:    "metadata" :
rocket-3d/web/obj/rocket3d.js:    {
rocket-3d/web/obj/rocket3d.js:        "formatVersion" : 3,
rocket-3d/web/obj/rocket3d.js:        "generatedBy"   : "Blender 2.60 Exporter",
rocket-3d/web/obj/rocket3d.js:        "vertices"      : 632,
rocket-3d/web/obj/rocket3d.js:        "faces"         : 800,
rocket-3d/web/obj/rocket3d.js:        "normals"       : 632,
rocket-3d/web/obj/rocket3d.js:        "colors"        : 0,
rocket-3d/web/obj/rocket3d.js:        "uvs"           : 1025,
rocket-3d/web/obj/rocket3d.js:        "materials"     : 1,
rocket-3d/web/obj/rocket3d.js:        "morphTargets"  : 0
rocket-3d/web/obj/rocket3d.js:    },
rocket-3d/web/obj/rocket3d.js:    "scale" : 1.000000,
rocket-3d/web/obj/rocket3d.js:    "materials": [	{
rocket-3d/web/obj/rocket3d.js:	"DbgColor" : 15658734,
rocket-3d/web/obj/rocket3d.js:	"DbgIndex" : 0,
rocket-3d/web/obj/rocket3d.js:	"DbgName" : "default",
rocket-3d/web/obj/rocket3d.js:	"vertexColors" : false
rocket-3d/web/obj/rocket3d.js:	}],
rocket-3d/web/obj/rocket3d.js:    "vertices": [-0.682265,0.334779,0.077804,-0.700877,0.437807,0.081570,-0.711290,0.634167,0.083677,-0.481716,1.187984,0.037229,-0.335161,0.539564,0.007578,-0.466500,0.380855,0.034150,-0.490016,0.340318,0.038908,-0.510787,0.298210,0.043110,-0.528837,0.254312,0.046762,-0.566911,0.109705,0.054466,-0.574327,0.056472,0.055966,-0.579064,0.000463,0.056925,-0.620804,0.116635,0.065370,-0.655403,0.227881,0.072370,-0.710723,0.537444,0.083562,-0.702064,0.728454,0.081810,-0.682530,0.820781,0.077858,-0.652175,0.911628,0.071716,-0.610484,1.001471,0.063281,-0.556944,1.090789,0.052449,-0.379231,0.495211,0.016494,-0.411132,0.458084,0.022948,-0.440214,0.420037,0.028832,-0.544191,0.208407,0.049869,-0.556874,0.160277,0.052435,-0.559234,0.000463,0.154939,-0.554497,0.056472,0.153980,-0.547081,0.109705,0.152480,-0.537044,0.160277,0.150449,-0.524361,0.208407,0.147883,-0.509007,0.254312,0.144776,-0.490957,0.298210,0.141125,-0.470186,0.340318,0.136922,-0.446670,0.380855,0.132164,-0.420383,0.420037,0.126846,-0.391302,0.458084,0.120962,-0.359400,0.495211,0.114508,-0.315331,0.539564,0.105592,-0.461886,1.187984,0.135243,-0.537113,1.090789,0.150463,-0.590654,1.001471,0.161296,-0.632345,0.911628,0.169731,-0.662700,0.820781,0.175872,-0.682234,0.728454,0.179824,-0.691460,0.634167,0.181691,-0.690893,0.537444,0.181576,-0.681046,0.437807,0.179584,-0.662435,0.334779,0.175818,-0.635573,0.227881,0.170384,-0.600974,0.116635,0.163384,0.290177,0.334779,-0.639244,0.296221,0.437807,-0.657245,0.299603,0.634167,-0.667316,0.225041,1.187984,-0.445275,0.177443,0.539564,-0.303530,0.220100,0.380855,-0.430559,0.227737,0.340318,-0.453303,0.234483,0.298210,-0.473392,0.240346,0.254312,-0.490850,0.252711,0.109705,-0.527675,0.255120,0.056472,-0.534847,0.256658,0.000463,-0.539430,0.270215,0.116635,-0.579800,0.281452,0.227881,-0.613263,0.299419,0.537444,-0.666768,0.296607,0.728454,-0.658393,0.290263,0.820781,-0.639500,0.280404,0.911628,-0.610141,0.266863,1.001471,-0.569818,0.249474,1.090789,-0.518035,0.191756,0.495211,-0.346153,0.202117,0.458084,-0.377008,0.211562,0.420037,-0.405135,0.245332,0.208407,-0.505700,0.249452,0.160277,-0.517967,0.161861,0.000463,-0.571263,0.160322,0.056472,-0.566681,0.157914,0.109705,-0.559508,0.154654,0.160277,-0.549801,0.150534,0.208407,-0.537534,0.145548,0.254312,-0.522684,0.139685,0.298210,-0.505226,0.132939,0.340318,-0.485137,0.125302,0.380855,-0.462392,0.116764,0.420037,-0.436969,0.107319,0.458084,-0.408841,0.096958,0.495211,-0.377987,0.082645,0.539564,-0.335363,0.130243,1.187984,-0.477109,0.154676,1.090789,-0.549868,0.172065,1.001471,-0.601652,0.185606,0.911628,-0.641975,0.195465,0.820781,-0.671334,0.201809,0.728454,-0.690227,0.204806,0.634167,-0.699150,0.204621,0.537444,-0.698601,0.201423,0.437807,-0.689078,0.195379,0.334779,-0.671077,0.186654,0.227881,-0.645097,0.175417,0.116635,-0.611633,0.424938,0.334779,0.561440,0.437504,0.437807,0.575675,0.444536,0.634167,0.583640,0.289524,1.187984,0.408046,0.190568,0.539564,0.295952,0.279250,0.380855,0.396408,0.295128,0.340318,0.414395,0.309153,0.298210,0.430282,0.321340,0.254312,0.444088,0.347049,0.109705,0.473209,0.352056,0.056472,0.478881,0.355255,0.000463,0.482505,0.383438,0.116635,0.514430,0.406800,0.227881,0.540894,0.444153,0.537444,0.583206,0.438306,0.728454,0.576583,0.425117,0.820781,0.561642,0.404620,0.911628,0.538425,0.376470,1.001471,0.506537,0.340319,1.090789,0.465585,0.220324,0.495211,0.329659,0.241864,0.458084,0.354059,0.261501,0.420037,0.376303,0.331708,0.208407,0.455831,0.340272,0.160277,0.465532,0.430223,0.000463,0.416324,0.427024,0.056472,0.412701,0.422016,0.109705,0.407029,0.415239,0.160277,0.399352,0.406675,0.208407,0.389651,0.396308,0.254312,0.377907,0.384120,0.298210,0.364101,0.370096,0.340318,0.348215,0.354217,0.380855,0.330228,0.336468,0.420037,0.310122,0.316832,0.458084,0.287879,0.295292,0.495211,0.263478,0.265535,0.539564,0.229771,0.364491,1.187984,0.341866,0.415286,1.090789,0.399405,0.451438,1.001471,0.440356,0.479588,0.911628,0.472244,0.500084,0.820781,0.495462,0.513274,0.728454,0.510402,0.519503,0.634167,0.517459,0.519120,0.537444,0.517025,0.512472,0.437807,0.509494,0.499905,0.334779,0.495259,0.481768,0.227881,0.474713,0.458406,0.116635,0.448250,-0.170079,0.150000,-0.188519,-0.128567,0.150000,-0.218474,-0.082008,0.150000,-0.239753,-0.032192,0.150000,-0.251541,0.018966,0.150000,-0.253383,0.069501,0.150000,-0.245210,0.117470,0.150000,-0.227335,0.161030,0.150000,-0.200445,0.198507,0.150000,-0.165574,0.228461,0.150000,-0.124061,0.249741,0.150000,-0.077502,0.261528,0.150000,-0.027687,0.263371,0.150000,0.023472,0.255198,0.150000,0.074006,0.237323,0.150000,0.121975,0.210433,0.150000,0.165536,0.175561,0.150000,0.203013,0.134049,0.150000,0.232967,0.087490,0.150000,0.254247,0.037674,0.150000,0.266034,-0.013484,0.150000,0.267877,-0.064019,0.150000,0.259703,-0.111988,0.150000,0.241828,-0.155548,0.150000,0.214938,-0.193025,0.150000,0.180067,-0.222979,0.150000,0.138554,-0.244259,0.150000,0.091995,-0.256047,0.150000,0.042179,-0.257889,0.150000,-0.008979,-0.249716,0.150000,-0.059513,-0.231841,0.150000,-0.107482,-0.204951,0.150000,-0.151043,-0.204951,0.304893,-0.151043,-0.231841,0.304893,-0.107483,-0.249716,0.304893,-0.059513,-0.257889,0.304893,-0.008979,-0.256047,0.304893,0.042179,-0.244259,0.304893,0.091995,-0.222979,0.304893,0.138554,-0.193025,0.304893,0.180067,-0.155548,0.304893,0.214938,-0.111988,0.304893,0.241828,-0.064019,0.304893,0.259703,-0.013484,0.304893,0.267877,0.037674,0.304893,0.266034,0.087490,0.304893,0.254246,0.134049,0.304893,0.232967,0.175561,0.304893,0.203013,0.210433,0.304893,0.165536,0.237323,0.304893,0.121975,0.255198,0.304893,0.074006,0.263371,0.304893,0.023472,0.261528,0.304893,-0.027687,0.249741,0.304893,-0.077502,0.228461,0.304893,-0.124061,0.198507,0.304893,-0.165574,0.161030,0.304893,-0.200445,0.117470,0.304893,-0.227335,0.069501,0.304893,-0.245210,0.018966,0.304893,-0.253383,-0.032192,0.304893,-0.251541,-0.082008,0.304893,-0.239753,-0.128567,0.304893,-0.218474,-0.170079,0.304893,-0.188520,-0.196981,0.330709,-0.218993,-0.149006,0.330709,-0.253609,-0.095200,0.330709,-0.278201,-0.037630,0.330709,-0.291824,0.021492,0.330709,-0.293953,0.079893,0.330709,-0.284508,0.135329,0.330709,-0.263850,0.185669,0.330709,-0.232775,0.228980,0.330709,-0.192475,0.263597,0.330709,-0.144501,0.288189,0.330709,-0.090694,0.301812,0.330709,-0.033124,0.303941,0.330709,0.025997,0.294495,0.330709,0.084398,0.273838,0.330709,0.139834,0.242762,0.330709,0.190175,0.202463,0.330709,0.233486,0.154488,0.330709,0.268103,0.100682,0.330709,0.292695,0.043112,0.330709,0.306317,-0.016010,0.330709,0.308447,-0.074411,0.330709,0.299001,-0.129847,0.330709,0.278343,-0.180187,0.330709,0.247268,-0.223498,0.330709,0.206968,-0.258115,0.330709,0.158993,-0.282707,0.330709,0.105187,-0.296330,0.330709,0.047617,-0.298459,0.330709,-0.011504,-0.289013,0.330709,-0.069905,-0.268356,0.330709,-0.125341,-0.237280,0.330709,-0.175682,-0.408735,1.279429,-0.306354,-0.462009,1.279429,-0.220053,-0.497423,1.279429,-0.125018,-0.513616,1.279429,-0.024899,-0.509966,1.279429,0.076455,-0.486613,1.279429,0.175150,-0.444454,1.279429,0.267392,-0.385109,1.279429,0.349636,-0.310860,1.279429,0.418723,-0.224559,1.279429,0.471997,-0.129523,1.279429,0.507411,-0.029404,1.279429,0.523604,0.071950,1.279429,0.519954,0.170644,1.279429,0.496600,0.262886,1.279429,0.454441,0.345131,1.279429,0.395096,0.414218,1.279429,0.320847,0.467492,1.279429,0.234546,0.502906,1.279429,0.139510,0.519098,1.279429,0.039391,0.515448,1.279429,-0.061963,0.492094,1.279429,-0.160657,0.449935,1.279429,-0.252899,0.390591,1.279429,-0.335144,0.316341,1.279429,-0.404230,0.230040,1.279429,-0.457504,0.135005,1.279429,-0.492918,0.034886,1.279429,-0.509111,-0.066468,1.279429,-0.505460,-0.165163,1.279429,-0.482107,-0.257404,1.279429,-0.439948,-0.339649,1.279429,-0.380603,-0.403532,1.950632,-0.452968,-0.305942,1.950632,-0.523385,-0.196490,1.950632,-0.573410,-0.079381,1.950632,-0.601121,0.040883,1.950632,-0.605453,0.159682,1.950632,-0.586239,0.272450,1.950632,-0.544217,0.374853,1.950632,-0.481004,0.462956,1.950632,-0.399027,0.533373,1.950632,-0.301437,0.583398,1.950632,-0.191985,0.611109,1.950632,-0.074876,0.615440,1.950632,0.045389,0.596226,1.950632,0.164188,0.554205,1.950632,0.276955,0.490991,1.950632,0.379358,0.409014,1.950632,0.467461,0.311424,1.950632,0.537878,0.201972,1.950632,0.587903,0.084863,1.950632,0.615614,-0.035402,1.950632,0.619946,-0.154201,1.950632,0.600732,-0.266968,1.950632,0.558710,-0.369371,1.950632,0.495496,-0.457474,1.950632,0.413519,-0.527891,1.950632,0.315929,-0.577916,1.950632,0.206477,-0.605627,1.950632,0.089368,-0.609958,1.950632,-0.030897,-0.590744,1.950632,-0.149695,-0.548723,1.950632,-0.262463,-0.485508,1.950632,-0.364866,-0.509720,2.430177,-0.383318,-0.576068,2.430177,-0.275837,-0.620174,2.430177,-0.157478,-0.640341,2.430177,-0.032788,-0.635794,2.430177,0.093440,-0.606709,2.430177,0.216356,-0.554204,2.430177,0.331236,-0.480295,2.430177,0.433665,-0.387823,2.430177,0.519707,-0.280342,2.430177,0.586056,-0.161983,2.430177,0.630161,-0.037293,2.430177,0.650328,0.088935,2.430177,0.645782,0.211851,2.430177,0.616697,0.326731,2.430177,0.564191,0.429160,2.430177,0.490282,0.515202,2.430177,0.397810,0.581551,2.430177,0.290330,0.625656,2.430177,0.171970,0.645823,2.430177,0.047280,0.641276,2.430177,-0.078948,0.612191,2.430177,-0.201864,0.559685,2.430177,-0.316744,0.485776,2.430177,-0.419173,0.393305,2.430177,-0.505215,0.285824,2.430177,-0.571563,0.167465,2.430177,-0.615668,0.042775,2.430177,-0.635835,-0.083453,2.430177,-0.631289,-0.206369,2.430177,-0.602204,-0.321249,2.430177,-0.549698,-0.423678,2.430177,-0.475789,-0.423678,2.898570,-0.475789,-0.321249,2.898570,-0.549698,-0.206369,2.898570,-0.602204,-0.083453,2.898570,-0.631289,0.042775,2.898570,-0.635835,0.167465,2.898570,-0.615668,0.285824,2.898570,-0.571563,0.393305,2.898570,-0.505215,0.485776,2.898570,-0.419173,0.559685,2.898570,-0.316744,0.612191,2.898570,-0.201864,0.641276,2.898570,-0.078948,0.645823,2.898570,0.047280,0.625656,2.898570,0.171970,0.581551,2.898570,0.290330,0.515202,2.898570,0.397810,0.429160,2.898570,0.490282,0.326731,2.898570,0.564191,0.211851,2.898570,0.616697,0.088935,2.898570,0.645782,-0.037293,2.898570,0.650328,-0.161983,2.898570,0.630161,-0.280342,2.898570,0.586056,-0.387823,2.898570,0.519707,-0.480295,2.898570,0.433665,-0.554204,2.898570,0.331236,-0.606709,2.898570,0.216356,-0.635794,2.898570,0.093440,-0.640340,2.898570,-0.032788,-0.620173,2.898570,-0.157478,-0.576068,2.898570,-0.275837,-0.509719,2.898570,-0.383318,-0.491869,3.255441,-0.369714,-0.555907,3.255441,-0.265977,-0.598475,3.255441,-0.151740,-0.617940,3.255441,-0.031394,-0.613552,3.255441,0.090438,-0.585480,3.255441,0.209072,-0.534804,3.255441,0.319950,-0.463469,3.255441,0.418812,-0.374219,3.255441,0.501857,-0.270482,3.255441,0.565894,-0.156245,3.255441,0.608463,-0.035899,3.255441,0.627927,0.085933,3.255441,0.623539,0.204567,3.255441,0.595468,0.315445,3.255441,0.544791,0.414307,3.255441,0.473456,0.497352,3.255441,0.384206,0.561389,3.255441,0.280469,0.603958,3.255441,0.166232,0.623422,3.255441,0.045886,0.619034,3.255441,-0.075946,0.590962,3.255441,-0.194580,0.540285,3.255441,-0.305458,0.468951,3.255441,-0.404319,0.379700,3.255441,-0.487364,0.275963,3.255441,-0.551401,0.161727,3.255441,-0.593970,0.041380,3.255441,-0.613435,-0.080451,3.255441,-0.609047,-0.199085,3.255441,-0.580975,-0.309963,3.255441,-0.530298,-0.408825,3.255441,-0.458963,-0.379072,3.523094,-0.425260,-0.287357,3.523094,-0.491437,-0.184495,3.523094,-0.538451,-0.074437,3.523094,-0.564493,0.038587,3.523094,-0.568564,0.150233,3.523094,-0.550507,0.256211,3.523094,-0.511015,0.352449,3.523094,-0.451608,0.435247,3.523094,-0.374566,0.501425,3.523094,-0.282852,0.548438,3.523094,-0.179990,0.574481,3.523094,-0.069932,0.578551,3.523094,0.043092,0.560494,3.523094,0.154739,0.521003,3.523094,0.260717,0.461595,3.523094,0.356954,0.384553,3.523094,0.439753,0.292839,3.523094,0.505930,0.189977,3.523094,0.552944,0.079919,3.523094,0.578986,-0.033105,3.523094,0.583057,-0.144752,3.523094,0.564999,-0.250730,3.523094,0.525508,-0.346967,3.523094,0.466100,-0.429766,3.523094,0.389059,-0.495943,3.523094,0.297344,-0.542956,3.523094,0.194482,-0.568999,3.523094,0.084424,-0.573069,3.523094,-0.028600,-0.555012,3.523094,-0.140247,-0.515520,3.523094,-0.246225,-0.456112,3.523094,-0.342462,-0.382499,3.824263,-0.286358,-0.432376,3.824263,-0.205560,-0.465532,3.824263,-0.116584,-0.480692,3.824263,-0.022849,-0.477274,3.824263,0.072042,-0.455410,3.824263,0.164443,-0.415939,3.824263,0.250804,-0.360379,3.824263,0.327804,-0.290864,3.824263,0.392486,-0.210066,3.824263,0.442363,-0.121089,3.824263,0.475519,-0.027354,3.824263,0.490680,0.067537,3.824263,0.487262,0.159938,3.824263,0.465397,0.246299,3.824263,0.425926,0.323299,3.824263,0.370366,0.387981,3.824263,0.300851,0.437858,3.824263,0.220053,0.471014,3.824263,0.131076,0.486174,3.824263,0.037341,0.482756,3.824263,-0.057550,0.460892,3.824263,-0.149951,0.421421,3.824263,-0.236312,0.365860,3.824263,-0.313312,0.296345,3.824263,-0.377994,0.215547,3.824263,-0.427871,0.126571,3.824263,-0.461027,0.032836,3.824263,-0.476187,-0.062055,3.824263,-0.472769,-0.154457,3.824263,-0.450905,-0.240817,3.824263,-0.411434,-0.317817,3.824263,-0.355873,-0.222852,4.146944,-0.248299,-0.168663,4.146944,-0.287399,-0.107887,4.146944,-0.315177,-0.042859,4.146944,-0.330564,0.023920,4.146944,-0.332970,0.089886,4.146944,-0.322300,0.152503,4.146944,-0.298967,0.209365,4.146944,-0.263866,0.258286,4.146944,-0.218347,0.297387,4.146944,-0.164157,0.325164,4.146944,-0.103381,0.340551,4.146944,-0.038354,0.342957,4.146944,0.028426,0.332288,4.146944,0.094392,0.308954,4.146944,0.157008,0.273853,4.146944,0.213870,0.228334,4.146944,0.262791,0.174145,4.146944,0.301892,0.113368,4.146944,0.329670,0.048341,4.146944,0.345057,-0.018439,4.146944,0.347462,-0.084405,4.146944,0.336793,-0.147022,4.146944,0.313459,-0.203883,4.146944,0.278359,-0.252804,4.146944,0.232839,-0.291905,4.146944,0.178650,-0.319683,4.146944,0.117874,-0.335070,4.146944,0.052846,-0.337475,4.146944,-0.013934,-0.326806,4.146944,-0.079899,-0.303472,4.146944,-0.142516,-0.268371,4.146944,-0.199378,-0.177012,4.345931,-0.129750,-0.200285,4.345931,-0.092050,-0.215756,4.345931,-0.050533,-0.222830,4.345931,-0.006796,-0.221235,4.345931,0.037480,-0.211033,4.345931,0.080595,-0.192616,4.345931,0.120890,-0.166691,4.345931,0.156819,-0.134255,4.345931,0.187000,-0.096555,4.345931,0.210272,-0.055038,4.345931,0.225743,-0.011302,4.345931,0.232817,0.032975,4.345931,0.231222,0.076089,4.345931,0.221020,0.116385,4.345931,0.202603,0.152314,4.345931,0.176678,0.182494,4.345931,0.144242,0.205767,4.345931,0.106542,0.221238,4.345931,0.065025,0.228311,4.345931,0.021289,0.226717,4.345931,-0.022988,0.216515,4.345931,-0.066102,0.198097,4.345931,-0.106398,0.172173,4.345931,-0.142327,0.139737,4.345931,-0.172507,0.102036,4.345931,-0.195780,0.060520,4.345931,-0.211250,0.016783,4.345931,-0.218324,-0.027493,4.345931,-0.216730,-0.070608,4.345931,-0.206528,-0.110903,4.345931,-0.188110,-0.146832,4.345931,-0.162186,-0.081000,4.480381,-0.087613,-0.060885,4.480381,-0.102127,-0.038324,4.480381,-0.112438,-0.014186,4.480381,-0.118150,0.010603,4.480381,-0.119043,0.035090,4.480381,-0.115082,0.058333,4.480381,-0.106421,0.079440,4.480381,-0.093392,0.097600,4.480381,-0.076494,0.112114,4.480381,-0.056379,0.122425,4.480381,-0.033819,0.128137,4.480381,-0.009681,0.129030,4.480381,0.015108,0.125070,4.480381,0.039595,0.116408,4.480381,0.062838,0.103379,4.480381,0.083946,0.086482,4.480381,0.102105,0.066366,4.480381,0.116620,0.043806,4.480381,0.126931,0.019668,4.480381,0.132642,-0.005121,4.480381,0.133535,-0.029608,4.480381,0.129575,-0.052851,4.480381,0.120913,-0.073959,4.480381,0.107884,-0.092118,4.480381,0.090987,-0.106632,4.480381,0.070872,-0.116944,4.480381,0.048311,-0.122655,4.480381,0.024173,-0.123548,4.480381,-0.000616,-0.119588,4.480381,-0.025103,-0.110926,4.480381,-0.048346,-0.097897,4.480381,-0.069453,0.002741,4.555463,0.007246,-0.168090,0.173844,-0.122949,-0.190207,0.173844,-0.087120,-0.204910,0.173844,-0.047665,-0.211632,0.173844,-0.006099,-0.210117,0.173844,0.035980,-0.200421,0.173844,0.076954,-0.182918,0.173844,0.115250,-0.158281,0.173844,0.149395,-0.127455,0.173844,0.178077,-0.091626,0.173844,0.200195,-0.052170,0.173844,0.214897,-0.010605,0.173844,0.221620,0.031474,0.173844,0.220105,0.072449,0.173844,0.210409,0.110744,0.173844,0.192906,0.144889,0.173844,0.168268,0.173572,0.173844,0.137442,0.195689,0.173844,0.101613,0.210392,0.173844,0.062158,0.217114,0.173844,0.020592,0.215599,0.173844,-0.021487,0.205903,0.173844,-0.062461,0.188400,0.173844,-0.100757,0.163763,0.173844,-0.134902,0.132937,0.173844,-0.163584,0.097108,0.173844,-0.185702,0.057652,0.173844,-0.200404,0.016086,0.173844,-0.207127,-0.025992,0.173844,-0.205611,-0.066967,0.173844,-0.195916,-0.105262,0.173844,-0.178413,-0.139407,0.173844,-0.153775,-0.139407,0.353359,-0.153775,-0.105262,0.353359,-0.178413,-0.066967,0.353359,-0.195916,-0.025992,0.353359,-0.205611,0.016086,0.353359,-0.207127,0.057652,0.353359,-0.200404,0.097108,0.353359,-0.185702,0.132937,0.353359,-0.163584,0.163763,0.353359,-0.134902,0.188400,0.353359,-0.100757,0.205903,0.353359,-0.062461,0.215599,0.353359,-0.021487,0.217114,0.353359,0.020592,0.210392,0.353359,0.062158,0.195689,0.353359,0.101613,0.173572,0.353359,0.137442,0.144889,0.353359,0.168268,0.110744,0.353359,0.192906,0.072449,0.353359,0.210409,0.031474,0.353359,0.220105,-0.010605,0.353359,0.221620,-0.052170,0.353359,0.214897,-0.091626,0.353359,0.200195,-0.127455,0.353359,0.178077,-0.158281,0.353359,0.149395,-0.182918,0.353359,0.115250,-0.200421,0.353359,0.076954,-0.210117,0.353359,0.035980,-0.211632,0.353359,-0.006099,-0.204910,0.353359,-0.047665,-0.190207,0.353359,-0.087120,-0.168090,0.353359,-0.122949,0.002741,0.471696,0.007246],
rocket-3d/web/obj/rocket3d.js:    "morphTargets": [],
rocket-3d/web/obj/rocket3d.js:    "normals": [0.622944,-0.220649,-0.750481,0.070284,0.814936,-0.575243,0.288400,0.814936,0.502670,0.865688,-0.220649,0.449293,0.001984,-0.834193,-0.551408,0.540971,-0.079440,-0.837245,0.823908,-0.079440,0.561113,0.216163,-0.834193,0.507279,0.534959,-0.118809,-0.836451,0.818049,-0.118809,0.562700,0.526078,-0.160375,-0.835139,0.809351,-0.160375,0.564959,0.514115,-0.203864,-0.833125,0.797540,-0.203864,0.567736,0.498917,-0.248299,-0.830287,0.782434,-0.248299,0.571032,0.480605,-0.292550,-0.826655,0.764153,-0.292550,0.574816,0.459609,-0.335429,-0.822321,0.743126,-0.335429,0.578967,0.436537,-0.375896,-0.817377,0.719932,-0.375896,0.583392,0.412214,-0.413099,-0.812037,0.695456,-0.413099,0.587909,0.387555,-0.446455,-0.806482,0.670583,-0.446455,0.592395,0.356456,-0.479354,-0.801935,0.640156,-0.479354,0.600299,-0.716605,0.411695,-0.562975,-0.441389,0.411695,0.797266,-0.757591,0.341746,-0.556078,-0.481826,0.341746,0.806848,-0.791162,0.270425,-0.548540,-0.515702,0.270425,0.812952,-0.817408,0.192358,-0.542955,-0.542039,0.192358,0.818018,-0.834254,0.111789,-0.539872,-0.558794,0.111789,0.821711,-0.841456,0.033570,-0.539262,-0.565630,0.033570,0.823939,-0.840327,-0.038148,-0.540696,-0.564043,-0.038148,0.824854,-0.833247,-0.100894,-0.543565,-0.556413,-0.100894,0.824732,-0.822810,-0.153600,-0.547136,-0.545396,-0.153600,0.823969,-0.811060,-0.196509,-0.550920,-0.533128,-0.196509,0.822871,-0.799585,-0.230232,-0.554613,-0.521104,-0.230232,0.821833,0.338450,-0.220649,0.914731,0.463027,0.814936,0.348521,-0.579516,0.814936,-0.001556,-0.821955,-0.220649,0.525040,0.476547,-0.834193,0.277413,0.454573,-0.079440,0.887143,-0.897885,-0.079440,0.432966,-0.547410,-0.834193,-0.066408,0.456893,-0.118809,0.881527,-0.896329,-0.118809,0.427107,0.460219,-0.160375,0.873196,-0.893948,-0.160375,0.418439,0.464431,-0.203864,0.861782,-0.890439,-0.203864,0.406812,0.469588,-0.248299,0.847224,-0.885769,-0.248299,0.392071,0.475600,-0.292550,0.829554,-0.879910,-0.292550,0.374371,0.482345,-0.335429,0.809198,-0.872982,-0.335429,0.354045,0.489578,-0.375896,0.786737,-0.865200,-0.375896,0.331767,0.497116,-0.413099,0.762993,-0.856868,-0.413099,0.308329,0.504654,-0.446455,0.738884,-0.848323,-0.446455,0.284555,0.516282,-0.479354,0.709677,-0.839961,-0.479354,0.254219,0.845851,0.411695,-0.339122,-0.469741,0.411695,-0.780908,0.860378,0.341746,-0.378033,-0.457839,0.341746,-0.820704,0.870632,0.270425,-0.410901,-0.446181,0.270425,-0.853084,0.878933,0.192358,-0.436384,-0.437391,0.192358,-0.878445,0.884671,0.111789,-0.452559,-0.432234,0.111789,-0.894772,0.887753,0.033570,-0.459059,-0.430738,0.033570,-0.901822,0.888424,-0.038148,-0.457381,-0.432325,-0.038148,-0.900906,0.887387,-0.100894,-0.449843,-0.436018,-0.100894,-0.894253,0.885250,-0.153600,-0.438978,-0.440870,-0.153600,-0.884304,0.882656,-0.196509,-0.426954,-0.446059,-0.196509,-0.873135,0.880123,-0.230232,-0.415143,-0.451155,-0.230232,-0.862209,-0.961394,-0.220649,-0.164220,-0.533341,0.814936,0.226722,0.291116,0.814936,-0.501083,-0.043703,-0.220649,-0.974364,-0.478530,-0.834193,0.273965,-0.995575,-0.079440,-0.049867,0.073977,-0.079440,-0.994079,0.331217,-0.834193,-0.440870,-0.991882,-0.118809,-0.045076,0.078280,-0.118809,-0.989807,-0.986297,-0.160375,-0.038026,0.084567,-0.160375,-0.983398,-0.978576,-0.203864,-0.028657,0.092898,-0.203864,-0.974548,-0.968505,-0.248299,-0.016907,0.103305,-0.248299,-0.963134,-0.956236,-0.292550,-0.002869,0.115726,-0.292550,-0.949187,-0.941954,-0.335429,0.013123,0.129856,-0.335429,-0.933042,-0.926145,-0.375896,0.030641,0.145268,-0.375896,-0.915189,-0.909330,-0.413099,0.049013,0.161412,-0.413099,-0.896237,-0.892209,-0.446455,0.067598,0.177709,-0.446455,-0.876949,-0.872738,-0.479354,0.092257,0.199805,-0.479354,-0.854549,-0.129215,0.411695,0.902097,0.911161,0.411695,-0.016358,-0.102786,0.341746,0.934141,0.939665,0.341746,0.013825,-0.079440,0.270425,0.959441,0.961882,0.270425,0.040132,-0.061525,0.192358,0.979369,0.979461,0.192358,0.060396,-0.050386,0.111789,0.992431,0.991028,0.111789,0.073061,-0.046297,0.033570,0.998352,0.996368,0.033570,0.077853,-0.048097,-0.038148,0.998108,0.996368,-0.038148,0.076022,-0.054109,-0.100894,0.993408,0.992462,-0.100894,0.069491,-0.062410,-0.153600,0.986145,0.986267,-0.153600,0.060335,-0.071566,-0.196509,0.977874,0.979186,-0.196509,0.050233,-0.080508,-0.230232,0.969787,0.972289,-0.230232,0.040376,-0.618336,-0.565355,0.545854,-0.499954,-0.565355,0.656026,-0.596057,-0.181646,0.782098,-0.737175,-0.181646,0.650777,-0.500900,-0.830103,-0.244972,-0.780663,-0.494736,-0.381787,-0.691153,-0.494736,-0.526749,-0.443464,-0.830103,-0.337992,-0.539048,-0.830103,-0.142552,-0.840144,-0.494736,-0.222144,-0.556505,-0.830103,-0.034639,-0.867336,-0.494736,-0.053987,-0.552568,-0.830103,0.074587,-0.861202,-0.494736,0.116245,-0.527421,-0.830103,0.180944,-0.821986,-0.494736,0.282022,-0.481979,-0.830103,0.280374,-0.751152,-0.494736,0.436964,-0.418012,-0.830103,0.368999,-0.651479,-0.494736,0.575121,-0.337992,-0.830103,0.443464,-0.526749,-0.494736,0.691153,-0.244972,-0.830103,0.500900,-0.381787,-0.494736,0.780663,-0.142552,-0.830103,0.539048,-0.222144,-0.494736,0.840144,-0.034639,-0.830103,0.556505,-0.053987,-0.494736,0.867336,0.074587,-0.830103,0.552568,0.116245,-0.494736,0.861202,0.180944,-0.830103,0.527421,0.282022,-0.494736,0.821986,0.280374,-0.830103,0.481979,0.436964,-0.494736,0.751152,0.368999,-0.830103,0.418012,0.575121,-0.494736,0.651479,0.443464,-0.830103,0.337992,0.691153,-0.494736,0.526749,0.500900,-0.830103,0.244972,0.780663,-0.494736,0.381787,0.539048,-0.830103,0.142552,0.840144,-0.494736,0.222144,0.556505,-0.830103,0.034639,0.867336,-0.494736,0.053987,0.552568,-0.830103,-0.074587,0.861202,-0.494736,-0.116245,0.527421,-0.830103,-0.180944,0.821986,-0.494736,-0.282022,0.481979,-0.830103,-0.280374,0.751152,-0.494736,-0.436964,0.418012,-0.830103,-0.368999,0.651479,-0.494736,-0.575121,0.337992,-0.830103,-0.443464,0.526749,-0.494736,-0.691153,0.244972,-0.830103,-0.500900,0.381787,-0.494736,-0.780663,0.142552,-0.830103,-0.539048,0.222144,-0.494736,-0.840144,0.034639,-0.830103,-0.556505,0.053987,-0.494736,-0.867336,-0.074587,-0.830103,-0.552568,-0.116245,-0.494736,-0.861202,-0.180944,-0.830103,-0.527421,-0.282022,-0.494736,-0.821986,-0.280374,-0.830103,-0.481979,-0.436964,-0.494736,-0.751152,-0.368999,-0.830103,-0.418012,-0.575121,-0.494736,-0.651479,-0.545854,-0.565355,-0.618336,-0.414747,-0.565355,-0.712973,-0.267678,-0.565355,-0.780175,-0.110324,-0.565355,-0.817408,0.051241,-0.565355,-0.823237,0.210852,-0.565355,-0.797418,0.362377,-0.565355,-0.740959,0.499954,-0.565355,-0.656026,0.618336,-0.565355,-0.545854,0.712973,-0.565355,-0.414747,0.780175,-0.565355,-0.267678,0.817408,-0.565355,-0.110324,0.823237,-0.565355,0.051241,0.797418,-0.565355,0.210852,0.740959,-0.565355,0.362377,0.656026,-0.565355,0.499954,0.545854,-0.565355,0.618336,0.414747,-0.565355,0.712973,0.267678,-0.565355,0.780175,0.110324,-0.565355,0.817408,-0.051241,-0.565355,0.823237,-0.210852,-0.565355,0.797418,-0.362377,-0.565355,0.740959,-0.712973,-0.565355,0.414747,-0.780175,-0.565355,0.267678,-0.817408,-0.565355,0.110324,-0.823237,-0.565355,-0.051241,-0.797418,-0.565355,-0.210852,-0.740959,-0.565355,-0.362377,-0.656026,-0.565355,-0.499954,-0.782098,-0.181646,-0.596057,-0.650777,-0.181646,-0.737175,-0.883358,-0.181646,-0.432020,-0.950682,-0.181646,-0.251381,-0.981445,-0.181646,-0.061098,-0.974517,-0.181646,0.131535,-0.930113,-0.181646,0.319132,-0.849971,-0.181646,0.494461,-0.432020,-0.181646,0.883358,-0.251381,-0.181646,0.950682,-0.061098,-0.181646,0.981445,0.131535,-0.181646,0.974517,0.319132,-0.181646,0.930113,0.494461,-0.181646,0.849971,0.650777,-0.181646,0.737175,0.782098,-0.181646,0.596057,0.883358,-0.181646,0.432020,0.950682,-0.181646,0.251381,0.981445,-0.181646,0.061098,0.974517,-0.181646,-0.131535,0.930113,-0.181646,-0.319132,0.849971,-0.181646,-0.494461,0.737175,-0.181646,-0.650777,0.596057,-0.181646,-0.782098,0.432020,-0.181646,-0.883358,0.251381,-0.181646,-0.950682,0.061098,-0.181646,-0.981445,-0.131535,-0.181646,-0.974517,-0.319132,-0.181646,-0.930113,-0.494461,-0.181646,-0.849971,-0.658284,-0.102664,-0.745689,-0.500168,-0.102664,-0.859798,-0.322825,-0.102664,-0.940855,-0.133061,-0.102664,-0.985748,0.061800,-0.102664,-0.992767,0.254280,-0.102664,-0.961638,0.436995,-0.102664,-0.893551,0.602954,-0.102664,-0.791131,0.745689,-0.102664,-0.658284,0.859798,-0.102664,-0.500168,0.940855,-0.102664,-0.322825,0.985748,-0.102664,-0.133061,0.992767,-0.102664,0.061800,0.961638,-0.102664,0.254280,0.893551,-0.102664,0.437025,0.791131,-0.102664,0.602954,0.658284,-0.102664,0.745689,0.500168,-0.102664,0.859798,0.322825,-0.102664,0.940855,0.133061,-0.102664,0.985748,-0.061800,-0.102664,0.992767,-0.254280,-0.102664,0.961638,-0.437025,-0.102664,0.893551,-0.602954,-0.102664,0.791131,-0.745689,-0.102664,0.658284,-0.859798,-0.102664,0.500168,-0.940855,-0.102664,0.322794,-0.985748,-0.102664,0.133061,-0.992767,-0.102664,-0.061800,-0.961638,-0.102664,-0.254280,-0.893551,-0.102664,-0.437025,-0.791131,-0.102664,-0.602954,-0.794916,-0.031617,-0.605853,-0.661458,-0.031617,-0.749290,-0.897855,-0.031617,-0.439100,-0.966277,-0.031617,-0.255501,-0.997559,-0.031617,-0.062075,-0.990509,-0.031617,0.133702,-0.945372,-0.031617,0.324351,-0.863948,-0.031617,0.502579,-0.749290,-0.031617,0.661458,-0.605853,-0.031617,0.794916,-0.439100,-0.031617,0.897855,-0.255501,-0.031617,0.966277,-0.062075,-0.031617,0.997559,0.133702,-0.031617,0.990509,0.324351,-0.031617,0.945372,0.502579,-0.031617,0.863948,0.661458,-0.031617,0.749290,0.794916,-0.031617,0.605853,0.897855,-0.031617,0.439100,0.966277,-0.031617,0.255501,0.997559,-0.031617,0.062075,0.990509,-0.031617,-0.133702,0.945372,-0.031617,-0.324351,0.863948,-0.031617,-0.502579,0.749290,-0.031617,-0.661458,0.605853,-0.031617,-0.794946,0.439100,-0.031617,-0.897855,0.255501,-0.031617,-0.966277,0.062075,-0.031617,-0.997559,-0.133702,-0.031617,-0.990509,-0.324351,-0.031617,-0.945372,-0.502579,-0.031617,-0.863948,-0.661458,0.031312,-0.749290,-0.502579,0.031312,-0.863948,-0.324381,0.031312,-0.945402,-0.133702,0.031312,-0.990509,0.062075,0.031312,-0.997559,0.255501,0.031312,-0.966277,0.439131,0.031312,-0.897855,0.605853,0.031312,-0.794946,0.749290,0.031312,-0.661458,0.863948,0.031312,-0.502579,0.945402,0.031312,-0.324381,0.990509,0.031312,-0.133702,0.997559,0.031312,0.062075,0.966277,0.031312,0.255501,0.897855,0.031312,0.439131,0.794946,0.031312,0.605853,0.661458,0.031312,0.749290,0.502579,0.031312,0.863948,0.324351,0.031312,0.945402,0.133702,0.031312,0.990509,-0.062075,0.031312,0.997559,-0.255501,0.031312,0.966277,-0.439131,0.031312,0.897855,-0.605853,0.031312,0.794946,-0.749290,0.031312,0.661458,-0.863948,0.031312,0.502579,-0.945402,0.031312,0.324351,-0.990509,0.031312,0.133702,-0.997559,0.031312,-0.062075,-0.966277,0.031312,-0.255501,-0.897855,0.031312,-0.439131,-0.794946,0.031312,-0.605853,-0.790155,0.113987,-0.602191,-0.657491,0.113987,-0.744774,-0.892453,0.113987,-0.436476,-0.960448,0.113987,-0.253975,-0.991546,0.113987,-0.061708,-0.984527,0.113987,0.132878,-0.939695,0.113987,0.322398,-0.858730,0.113987,0.499527,-0.744774,0.113987,0.657491,-0.602191,0.113987,0.790155,-0.436476,0.113987,0.892453,-0.253975,0.113987,0.960448,-0.061708,0.113987,0.991546,0.132878,0.113987,0.984527,0.322398,0.113987,0.939695,0.499557,0.113987,0.858730,0.657491,0.113987,0.744774,0.790155,0.113987,0.602191,0.892453,0.113987,0.436476,0.960448,0.113987,0.253975,0.991546,0.113987,0.061708,0.984527,0.113987,-0.132878,0.939695,0.113987,-0.322398,0.858730,0.113987,-0.499557,0.744774,0.113987,-0.657491,0.602191,0.113987,-0.790155,0.436476,0.113987,-0.892453,0.253975,0.113987,-0.960448,0.061708,0.113987,-0.991546,-0.132878,0.113987,-0.984527,-0.322398,0.113987,-0.939695,-0.499557,0.113987,-0.858730,-0.644154,0.229286,-0.729698,-0.489425,0.229286,-0.841334,-0.315867,0.229286,-0.920652,-0.130192,0.229286,-0.964599,0.060457,0.229286,-0.971465,0.248817,0.229286,-0.941008,0.427625,0.229286,-0.874355,0.589984,0.229286,-0.774132,0.729698,0.229286,-0.644154,0.841334,0.229286,-0.489425,0.920652,0.229286,-0.315867,0.964599,0.229286,-0.130192,0.971465,0.229286,0.060457,0.941008,0.229286,0.248817,0.874355,0.229286,0.427625,0.774132,0.229286,0.589984,0.644154,0.229286,0.729698,0.489425,0.229286,0.841334,0.315867,0.229286,0.920652,0.130192,0.229286,0.964599,-0.060457,0.229286,0.971465,-0.248817,0.229286,0.941008,-0.427625,0.229286,0.874355,-0.589984,0.229286,0.774132,-0.729698,0.229286,0.644154,-0.841334,0.229286,0.489425,-0.920652,0.229286,0.315867,-0.964599,0.229286,0.130192,-0.971465,0.229286,-0.060457,-0.941008,0.229286,-0.248817,-0.874355,0.229286,-0.427625,-0.774132,0.229286,-0.589984,-0.745170,0.349437,-0.567919,-0.620075,0.349437,-0.702384,-0.841670,0.349437,-0.411634,-0.905789,0.349437,-0.239509,-0.935118,0.349437,-0.058199,-0.928526,0.349437,0.125309,-0.886227,0.349437,0.304056,-0.809870,0.349437,0.471114,-0.702384,0.349437,0.620075,-0.567919,0.349437,0.745170,-0.411634,0.349437,0.841670,-0.239509,0.349437,0.905789,-0.058199,0.349437,0.935118,0.125340,0.349437,0.928526,0.304056,0.349437,0.886227,0.471114,0.349437,0.809870,0.620075,0.349437,0.702384,0.745170,0.349437,0.567919,0.841670,0.349437,0.411634,0.905789,0.349437,0.239509,0.935118,0.349437,0.058199,0.928526,0.349437,-0.125340,0.886227,0.349437,-0.304056,0.809870,0.349437,-0.471114,0.702384,0.349437,-0.620075,0.567919,0.349437,-0.745170,0.411634,0.349437,-0.841670,0.239509,0.349437,-0.905789,0.058199,0.349437,-0.935118,-0.125340,0.349437,-0.928526,-0.304056,0.349437,-0.886227,-0.471114,0.349437,-0.809870,-0.590167,0.452437,-0.668538,-0.448408,0.452437,-0.770837,-0.289407,0.452437,-0.843501,-0.119297,0.452437,-0.883755,0.055391,0.452437,-0.890042,0.227973,0.452437,-0.862148,0.391797,0.452437,-0.801111,0.540544,0.452437,-0.709281,0.668538,0.452437,-0.590167,0.770837,0.452437,-0.448408,0.843501,0.452437,-0.289407,0.883755,0.452437,-0.119297,0.890042,0.452437,0.055391,0.862148,0.452437,0.227973,0.801111,0.452437,0.391797,0.709281,0.452437,0.540544,0.590167,0.452437,0.668538,0.448408,0.452437,0.770837,0.289407,0.452437,0.843501,0.119297,0.452437,0.883755,-0.055391,0.452437,0.890042,-0.227973,0.452437,0.862148,-0.391797,0.452437,0.801111,-0.540544,0.452437,0.709281,-0.668538,0.452437,0.590167,-0.770837,0.452437,0.448408,-0.843501,0.452437,0.289407,-0.883755,0.452437,0.119297,-0.890042,0.452437,-0.055391,-0.862148,0.452437,-0.227973,-0.801111,0.452437,-0.391797,-0.709281,0.452437,-0.540544,-0.666005,0.546617,-0.507584,-0.554155,0.546617,-0.627735,-0.752220,0.546617,-0.367901,-0.809534,0.546617,-0.214057,-0.835749,0.546617,-0.052004,-0.829829,0.546617,0.112003,-0.792047,0.546617,0.271737,-0.723808,0.546617,0.421064,-0.627735,0.546617,0.554155,-0.507584,0.546617,0.666005,-0.367901,0.546617,0.752220,-0.214057,0.546617,0.809534,-0.052004,0.546617,0.835749,0.112003,0.546617,0.829829,0.271737,0.546617,0.792047,0.421064,0.546617,0.723808,0.554155,0.546617,0.627735,0.666005,0.546617,0.507584,0.752220,0.546617,0.367901,0.809534,0.546617,0.214057,0.835749,0.546617,0.052004,0.829829,0.546617,-0.112003,0.792047,0.546617,-0.271737,0.723808,0.546617,-0.421064,0.627735,0.546617,-0.554155,0.507584,0.546617,-0.666005,0.367901,0.546617,-0.752220,0.214057,0.546617,-0.809534,0.052004,0.546617,-0.835749,-0.112003,0.546617,-0.829829,-0.271737,0.546617,-0.792047,-0.421064,0.546617,-0.723808,-0.448042,0.735923,-0.507553,-0.340434,0.735923,-0.585192,-0.219703,0.735923,-0.640370,-0.090548,0.735923,-0.670949,0.042055,0.735923,-0.675710,0.173070,0.735923,-0.654530,0.297433,0.735923,-0.608173,0.410382,0.735923,-0.538469,0.507553,0.735923,-0.448042,0.585192,0.735923,-0.340434,0.640370,0.735923,-0.219703,0.670949,0.735923,-0.090548,0.675710,0.735923,0.042055,0.654530,0.735923,0.173070,0.608173,0.735923,0.297433,0.538469,0.735923,0.410382,0.448042,0.735923,0.507553,0.340434,0.735923,0.585192,0.219703,0.735923,0.640370,0.090548,0.735923,0.670949,-0.042055,0.735923,0.675710,-0.173070,0.735923,0.654530,-0.297433,0.735923,0.608173,-0.410382,0.735923,0.538469,-0.507553,0.735923,0.448042,-0.585223,0.735923,0.340434,-0.640370,0.735923,0.219703,-0.670949,0.735923,0.090548,-0.675710,0.735923,-0.042055,-0.654530,0.735923,-0.173070,-0.608173,0.735923,-0.297433,-0.538469,0.735923,-0.410382,0.000000,1.000000,0.000000,0.558763,-0.535783,0.632954,0.671529,-0.535783,0.511795,0.758476,-0.535783,0.370952,0.816279,-0.535783,0.215857,0.842708,-0.535783,0.052461,0.836726,-0.535783,-0.112949,0.798608,-0.535783,-0.273995,0.729820,-0.535783,-0.424543,0.632954,-0.535783,-0.558763,0.511795,-0.535783,-0.671529,0.370952,-0.535783,-0.758476,0.215857,-0.535783,-0.816279,0.052461,-0.535783,-0.842708,-0.112949,-0.535783,-0.836726,-0.273995,-0.535783,-0.798608,-0.424543,-0.535783,-0.729820,-0.558763,-0.535783,-0.632954,-0.671529,-0.535783,-0.511795,-0.758476,-0.535783,-0.370952,-0.816279,-0.535783,-0.215827,-0.842708,-0.535783,-0.052461,-0.836726,-0.535783,0.112949,-0.798608,-0.535783,0.273995,-0.729820,-0.535783,0.424543,-0.632954,-0.535783,0.558763,-0.511795,-0.535783,0.671529,-0.370952,-0.535783,0.758476,-0.215827,-0.535783,0.816279,-0.052431,-0.535783,0.842708,0.112949,-0.535783,0.836726,0.273995,-0.535783,0.798608,0.424543,-0.535783,0.729820,0.436842,-0.495193,0.750938,0.574938,-0.495193,0.651265,0.281930,-0.495193,0.821741,0.116214,-0.495193,0.860958,-0.053957,-0.495193,0.867061,-0.222083,-0.495193,0.839869,-0.381664,-0.495193,0.780419,-0.526597,-0.495193,0.690970,-0.651265,-0.495193,0.574938,-0.750938,-0.495193,0.436842,-0.821741,-0.495193,0.281930,-0.860958,-0.495193,0.116214,-0.867061,-0.495193,-0.053957,-0.839869,-0.495193,-0.222083,-0.780419,-0.495193,-0.381664,-0.690939,-0.495193,-0.526597,-0.574938,-0.495193,-0.651265,-0.436842,-0.495193,-0.750938,-0.281930,-0.495193,-0.821741,-0.116214,-0.495193,-0.860958,0.053957,-0.495193,-0.867061,0.222083,-0.495193,-0.839869,0.381664,-0.495193,-0.780419,0.526597,-0.495193,-0.690939,0.651265,-0.495193,-0.574938,0.750938,-0.495193,-0.436842,0.821741,-0.495193,-0.281930,0.860958,-0.495193,-0.116214,0.867061,-0.495193,0.053957,0.839869,-0.495193,0.222083,0.780419,-0.495193,0.381664,0.690939,-0.495193,0.526597,0.000000,-1.000000,0.000000],
rocket-3d/web/obj/rocket3d.js:    "colors": [],
rocket-3d/web/obj/rocket3d.js:    "uvs": [[0.991579,0.385329,0.970372,0.250971,0.951881,0.250914,0.973088,0.385272,0.970383,0.504025,0.970398,0.492087,0.951907,0.492030,0.951892,0.503968,0.970722,0.480685,0.952231,0.480628,0.971347,0.469796,0.952856,0.469739,0.972274,0.459373,0.953783,0.459315,0.973504,0.449369,0.955013,0.449312,0.975038,0.439739,0.956546,0.439681,0.976876,0.430435,0.958385,0.430377,0.979019,0.421411,0.960528,0.421353,0.981468,0.412620,0.962977,0.412563,0.984224,0.404017,0.965733,0.403959,0.987287,0.395553,0.968796,0.395496,0.970206,0.738392,0.973590,0.761056,0.991734,0.764346,0.988350,0.741682,0.975096,0.781359,0.993240,0.784649,0.975359,0.801374,0.993503,0.804663,0.974411,0.821216,0.992554,0.824505,0.972283,0.841001,0.990426,0.844291,0.969007,0.860847,0.987150,0.864136,0.964614,0.880869,0.982757,0.884158,0.959136,0.901183,0.977279,0.904472,0.952604,0.921905,0.970747,0.925195,0.945049,0.943153,0.963192,0.946442,0.936504,0.965041,0.954647,0.968331,0.921968,0.656919,0.970743,0.540184,0.959439,0.521761,0.978416,0.557408,0.928822,0.665141,0.984016,0.574963,0.987625,0.592937,0.933691,0.672118,0.989323,0.611418,0.989190,0.630494,0.938052,0.679337,0.987308,0.650253,0.983756,0.670782,0.941905,0.686840,0.945251,0.694671,0.978616,0.692169,0.948090,0.702876,0.971968,0.714502,0.950423,0.711497,0.954384,0.740302,0.963894,0.737868,0.953569,0.730166,0.954693,0.751030,0.954485,0.762376,0.952249,0.720580,0.931503,0.750097,0.929668,0.760818,0.941549,0.751652,0.932847,0.738806,0.933691,0.726922,0.948074,0.775325,0.927339,0.771017,0.953154,0.798063,0.917337,0.798939,0.956694,0.819967,0.924510,0.780739,0.921178,0.790031,0.912984,0.807508,0.908114,0.815786,0.958599,0.841136,0.958772,0.861673,0.957119,0.881677,0.953545,0.901248,0.902722,0.823819,0.947952,0.920489,0.940247,0.939499,0.896804,0.831651,0.930334,0.958378,0.888624,0.840999,0.916385,0.978897,0.945146,0.991001,0.927003,0.987711,0.974226,0.122509,0.975060,0.259551,0.996294,0.259486,0.995460,0.122444,0.974478,0.007008,0.974505,0.018919,0.995739,0.018854,0.995712,0.006943,0.974524,0.030253,0.995758,0.030188,0.974533,0.041033,0.995767,0.040968,0.974534,0.051306,0.995768,0.051241,0.974527,0.061118,0.995761,0.061053,0.974511,0.070516,0.995745,0.070450,0.974487,0.079544,0.995721,0.079479,0.974454,0.088252,0.995688,0.088186,0.974414,0.096683,0.995648,0.096618,0.974365,0.104885,0.995599,0.104820,0.974309,0.112904,0.995543,0.112839,0.873961,0.030133,0.875867,0.054294,0.896923,0.053777,0.895017,0.029616,0.877182,0.075619,0.898238,0.075102,0.878163,0.096384,0.899219,0.095867,0.878825,0.116716,0.899880,0.116200,0.879179,0.136743,0.900235,0.136226,0.879240,0.156590,0.900296,0.156073,0.879022,0.176385,0.900078,0.175869,0.878537,0.196255,0.899593,0.195738,0.877799,0.216327,0.898855,0.215810,0.876822,0.236727,0.897877,0.236210,0.875618,0.257582,0.896674,0.257065,0.836289,0.693238,0.862382,0.569734,0.842626,0.552463,0.877216,0.586220,0.847380,0.700736,0.889546,0.603283,0.899500,0.621001,0.855601,0.707209,0.907204,0.639454,0.912789,0.658720,0.863257,0.713984,0.916380,0.678880,0.918106,0.700013,0.870361,0.721106,0.876926,0.728619,0.918095,0.722197,0.882967,0.736567,0.916475,0.745511,0.888497,0.744995,0.902158,0.773602,0.913374,0.770036,0.898079,0.763469,0.905781,0.784393,0.908940,0.795867,0.893530,0.753948,0.847272,0.968722,0.848756,0.957884,0.835525,0.968000,0.846390,0.980086,0.846125,0.992000,0.826536,0.944943,0.850846,0.947527,0.819279,0.922699,0.860772,0.918872,0.813859,0.901160,0.853544,0.937603,0.856852,0.928067,0.865307,0.909972,0.870459,0.901320,0.810379,0.880217,0.808946,0.859762,0.809663,0.839688,0.812635,0.819886,0.876232,0.892869,0.817967,0.800248,0.825763,0.780666,0.882626,0.884574,0.836129,0.761031,0.891553,0.874583,0.851077,0.739430,0.895260,0.278528,0.874204,0.279045,0.589426,0.126917,0.567433,0.265164,0.585741,0.266588,0.607734,0.128341,0.567706,0.014271,0.567710,0.026103,0.586017,0.027526,0.586014,0.015694,0.568031,0.037331,0.586339,0.038754,0.568664,0.047978,0.586972,0.049402,0.569608,0.058092,0.587916,0.059516,0.570866,0.067718,0.589173,0.069142,0.572436,0.076902,0.590744,0.078326,0.574321,0.085690,0.592629,0.087114,0.576520,0.094128,0.594828,0.095551,0.579035,0.102261,0.597343,0.103685,0.581866,0.110137,0.600174,0.111561,0.585014,0.117800,0.603321,0.119224,0.934076,0.091679,0.926624,0.111482,0.944881,0.109888,0.952332,0.090086,0.921497,0.129836,0.939753,0.128243,0.917681,0.148421,0.935937,0.146827,0.915124,0.167332,0.933381,0.165739,0.913774,0.186665,0.932030,0.185072,0.913577,0.206517,0.931834,0.204923,0.914483,0.226982,0.932739,0.225388,0.916437,0.248157,0.934693,0.246563,0.919387,0.270138,0.937644,0.268544,0.923281,0.293020,0.941538,0.291426,0.928067,0.316899,0.946324,0.315306,0.953444,0.423941,0.911213,0.541319,0.925366,0.561838,0.901151,0.522438,0.945145,0.414593,0.893329,0.503428,0.887649,0.484187,0.939140,0.406760,0.884014,0.464615,0.882327,0.444611,0.933669,0.398727,0.882493,0.424075,0.884413,0.402905,0.928726,0.390449,0.924308,0.381879,0.887991,0.381002,0.920409,0.372971,0.893130,0.358264,0.917025,0.363679,0.909919,0.333036,0.899733,0.334592,0.911785,0.343758,0.908550,0.321746,0.907689,0.309862,0.914152,0.353957,0.829391,0.548387,0.831722,0.538305,0.818683,0.545464,0.827566,0.559087,0.826256,0.570431,0.812503,0.521705,0.834565,0.528797,0.807838,0.499053,0.846231,0.503279,0.804794,0.477424,0.837927,0.519819,0.841813,0.511328,0.851186,0.495629,0.856685,0.488334,0.803477,0.456734,0.803992,0.436900,0.806445,0.417838,0.810942,0.399465,0.862734,0.481349,0.817589,0.381697,0.826491,0.364452,0.869341,0.474631,0.837753,0.347644,0.878421,0.466773,0.853394,0.329826,0.951940,0.340299,0.933683,0.341893,0.327024,0.252094,0.315520,0.252232,0.330383,0.454469,0.350105,0.454233,0.166779,0.153156,0.133948,0.152638,0.133633,0.163212,0.166465,0.163730,0.166974,0.142294,0.134142,0.141776,0.167041,0.131562,0.134210,0.131044,0.166979,0.121372,0.134148,0.120854,0.166790,0.112116,0.133958,0.111597,0.166480,0.104149,0.133649,0.103631,0.055317,0.112690,0.022431,0.112798,0.022583,0.121710,0.055469,0.121601,0.055198,0.102735,0.022312,0.102844,0.055116,0.092120,0.022230,0.092228,0.055076,0.081251,0.022190,0.081360,0.055078,0.070548,0.022192,0.070656,0.055122,0.060420,0.022237,0.060529,0.055207,0.051258,0.022322,0.051367,0.055330,0.043413,0.022444,0.043521,0.173045,0.067353,0.140253,0.067294,0.140738,0.076081,0.173529,0.076140,0.172706,0.057486,0.139914,0.057427,0.172526,0.046918,0.139734,0.046859,0.172511,0.036056,0.139719,0.035997,0.172662,0.025317,0.139870,0.025259,0.172973,0.015114,0.140181,0.015055,0.173432,0.005839,0.140640,0.005780,0.174979,0.182585,0.173175,0.190997,0.204928,0.191030,0.206732,0.182617,0.171832,0.200591,0.203585,0.200624,0.171003,0.210998,0.202756,0.211031,0.170718,0.221818,0.202471,0.221850,0.170990,0.232635,0.202743,0.232667,0.171807,0.243034,0.203560,0.243066,0.173138,0.252614,0.204891,0.252646,0.174933,0.261008,0.206686,0.261040,0.050650,0.008233,0.043247,0.007762,0.043233,0.040598,0.050635,0.041069,0.034434,0.007384,0.034419,0.040220,0.730813,0.249773,0.735044,0.254901,0.745217,0.255556,0.739616,0.250340,0.747006,0.250970,0.753758,0.256284,0.752701,0.251639,0.760339,0.257057,0.513479,0.993918,0.518290,0.990501,0.507218,0.992040,0.503899,0.995249,0.493500,0.996066,0.495201,0.992984,0.482700,0.993298,0.482683,0.996338,0.471863,0.996053,0.470196,0.992969,0.145452,0.997070,0.153614,0.991398,0.148341,0.990497,0.140889,0.996291,0.140945,0.989691,0.134489,0.995593,0.126498,0.995003,0.131710,0.989009,0.120991,0.988478,0.117223,0.994544,0.107020,0.994233,0.109199,0.988118,0.096789,0.987944,0.096281,0.994082,0.085419,0.994097,0.084236,0.987961,0.072024,0.988170,0.074851,0.994277,0.064984,0.994616,0.060621,0.988561,0.050466,0.989121,0.056197,0.995100,0.048827,0.995712,0.041949,0.989828,0.261348,0.246588,0.256030,0.252220,0.266619,0.252319,0.270510,0.246673,0.280638,0.246718,0.278323,0.252370,0.290692,0.252372,0.291341,0.246720,0.302210,0.246679,0.303252,0.252326,0.312825,0.246598,0.322780,0.246479,0.337323,0.251919,0.331691,0.246327,0.339216,0.246148,0.346019,0.251711,0.649219,0.251700,0.643987,0.256767,0.654679,0.256384,0.658471,0.251369,0.668659,0.251150,0.666453,0.256131,0.678855,0.256019,0.679391,0.251053,0.690255,0.251081,0.691410,0.256051,0.703634,0.256227,0.700832,0.251233,0.720935,0.249290,0.723629,0.254343,0.734143,0.453194,0.753712,0.454150,0.697460,0.454505,0.718416,0.454807,0.675937,0.454450,0.654675,0.454642,0.634491,0.455075,0.616161,0.455732,0.634787,0.257266,0.600388,0.456587,0.367759,0.453932,0.024548,0.007114,0.024534,0.039950,0.309351,0.454630,0.287819,0.454710,0.266613,0.454705,0.246549,0.454618,0.228396,0.454449,0.246964,0.252079,0.212854,0.454207,0.037787,0.784586,0.020377,0.785546,0.057335,0.783915,0.078271,0.783557,0.099791,0.783528,0.121066,0.783827,0.141281,0.784443,0.159657,0.785354,0.175489,0.786523,0.458169,0.992011,0.440904,0.808548,0.421897,0.805887,0.447082,0.990459,0.461522,0.810191,0.482959,0.810755,0.504389,0.810217,0.524990,0.808598,0.543971,0.805960,0.527990,0.988427,0.560601,0.802405,0.771153,0.455274,0.785796,0.456522,0.760927,0.595588,0.781622,0.596922,0.798996,0.598403,0.575254,0.668599,0.555522,0.672818,0.533000,0.675948,0.508555,0.677868,0.483126,0.678507,0.457690,0.677838,0.433225,0.675888,0.410671,0.672731,0.191050,0.643386,0.172264,0.641999,0.150459,0.640919,0.126473,0.640188,0.101228,0.639833,0.075693,0.639868,0.050851,0.640292,0.027655,0.641089,0.006998,0.642228,0.197753,0.597026,0.216195,0.597314,0.237735,0.597514,0.261543,0.597618,0.286705,0.597623,0.312255,0.597528,0.337211,0.597337,0.360612,0.597058,0.381561,0.596700,0.584963,0.598070,0.603678,0.597055,0.625428,0.596276,0.649378,0.595762,0.674607,0.595534,0.700146,0.595600,0.725012,0.595957,0.737707,0.594454,0.737586,0.695775,0.761957,0.696965,0.700967,0.696882,0.727067,0.697257,0.674162,0.696813,0.647682,0.697052,0.622545,0.697591,0.599716,0.698409,0.580073,0.699474,0.364114,0.698972,0.386101,0.698597,0.339552,0.699266,0.313359,0.699466,0.286542,0.699566,0.260132,0.699561,0.235143,0.699451,0.212536,0.699241,0.193179,0.698939,0.024562,0.539125,0.002880,0.540320,0.048908,0.538289,0.074982,0.537843,0.101783,0.537806,0.128280,0.538179,0.153455,0.538947,0.176342,0.540080,0.196059,0.541536,0.430859,0.579138,0.407187,0.575825,0.456537,0.581185,0.483234,0.581887,0.509924,0.581217,0.535581,0.579200,0.559220,0.575915,0.579931,0.571488,0.783679,0.698365,0.801914,0.699919,0.759781,0.796235,0.781502,0.797635,0.799738,0.799189,0.580029,0.475467,0.559317,0.479895,0.535679,0.483180,0.510022,0.485196,0.483332,0.485866,0.456635,0.485164,0.430956,0.483117,0.407284,0.479804,0.386430,0.571372,0.386527,0.475352,0.176519,0.440919,0.153633,0.439785,0.128458,0.439017,0.101960,0.438644,0.075159,0.438682,0.049085,0.439127,0.024739,0.439963,0.003057,0.441158,0.193508,0.798386,0.212864,0.798687,0.235472,0.798897,0.260460,0.799007,0.286871,0.799012,0.313688,0.798912,0.339880,0.798712,0.364442,0.798418,0.386430,0.798043,0.580029,0.798768,0.599672,0.797703,0.622501,0.796885,0.647638,0.796346,0.674118,0.796107,0.700923,0.796176,0.727023,0.796551,0.735410,0.795045,0.732198,0.870910,0.755720,0.872059,0.700251,0.872106,0.725441,0.872468,0.674379,0.872039,0.648822,0.872270,0.624560,0.872791,0.602526,0.873580,0.583567,0.874608,0.362359,0.874113,0.383580,0.873750,0.338652,0.874396,0.313372,0.874589,0.287490,0.874686,0.261999,0.874681,0.237881,0.874575,0.216061,0.874373,0.197379,0.874081,0.027289,0.364737,0.006363,0.365890,0.050787,0.363929,0.075953,0.363500,0.101820,0.363464,0.127395,0.363824,0.151693,0.364565,0.173782,0.365659,0.410001,0.405613,0.389967,0.401316,0.432849,0.408811,0.457632,0.410787,0.483399,0.411464,0.509160,0.410817,0.533923,0.408871,0.556738,0.405701,0.576728,0.401427,0.776685,0.873410,0.794286,0.874910,0.749664,0.929165,0.769113,0.930418,0.785441,0.931810,0.570024,0.344793,0.551480,0.348758,0.530314,0.351699,0.507340,0.353504,0.483442,0.354104,0.459538,0.353476,0.436546,0.351643,0.415350,0.348676,0.396764,0.344690,0.168130,0.309580,0.147638,0.308565,0.125096,0.307877,0.101371,0.307544,0.077373,0.307577,0.054027,0.307976,0.032228,0.308724,0.012814,0.309795,0.204819,0.930761,0.222151,0.931031,0.242393,0.931219,0.264768,0.931317,0.288415,0.931322,0.312427,0.931233,0.335880,0.931053,0.357872,0.930790,0.377560,0.930454,0.590697,0.931722,0.608285,0.930768,0.628726,0.930036,0.651234,0.929554,0.674944,0.929339,0.698945,0.929401,0.722315,0.929737,0.727842,0.928099,0.720036,0.992881,0.738357,0.993775,0.696281,0.994389,0.715901,0.994671,0.676130,0.994337,0.656224,0.994517,0.637327,0.994922,0.620166,0.995537,0.605399,0.996338,0.348460,0.994427,0.364989,0.994145,0.329996,0.994648,0.310305,0.994798,0.290146,0.994873,0.270292,0.994869,0.251507,0.994787,0.234512,0.994629,0.219961,0.994402,0.042300,0.246307,0.026001,0.247205,0.060602,0.245678,0.080203,0.245343,0.100350,0.245315,0.120269,0.245596,0.139195,0.246173,0.156399,0.247025,0.426310,0.282679,0.410706,0.279332,0.444106,0.285170,0.463409,0.286709,0.483479,0.287236,0.503543,0.286733,0.522830,0.285217,0.540601,0.282747,0.556170,0.279419,0.754686,0.994827,0.768395,0.995996,0.408603,0.153320,0.402748,0.224693,0.414215,0.223641,0.424897,0.151825,0.417676,0.073120,0.405130,0.077829,0.434012,0.147019,0.442841,0.143705,0.433054,0.068996,0.453664,0.140803,0.466064,0.138426,0.450674,0.065618,0.469858,0.063114,0.479565,0.136663,0.493648,0.135585,0.489870,0.061580,0.509940,0.061077,0.507772,0.135230,0.521395,0.135614,0.529297,0.061623,0.533992,0.136722,0.547197,0.063196,0.562952,0.065738,0.545080,0.138510,0.843404,0.216395,0.825162,0.149949,0.813055,0.149349,0.826199,0.215543,0.807274,0.214966,0.799736,0.148943,0.785718,0.148746,0.787354,0.214686,0.767207,0.214714,0.771539,0.148766,0.757745,0.149001,0.747606,0.215048,0.729304,0.215677,0.744865,0.149444,0.733394,0.150076,0.713005,0.216576,0.627391,0.018072,0.612841,0.017756,0.635798,0.085941,0.646037,0.086163,0.657996,0.086347,0.644385,0.018334,0.663169,0.018532,0.671216,0.086486,0.685188,0.086575,0.683022,0.018657,0.703182,0.018706,0.699375,0.086609,0.713232,0.086588,0.722873,0.018676,0.741338,0.018569,0.726227,0.086513,0.737860,0.086386,0.757868,0.018388,0.314135,0.014474,0.299371,0.015320,0.322391,0.084850,0.332781,0.084255,0.344857,0.083785,0.331294,0.013807,0.350190,0.013343,0.358155,0.083459,0.372164,0.083290,0.370096,0.013102,0.390246,0.013092,0.386345,0.083283,0.400153,0.083439,0.409867,0.013314,0.390364,0.155279,0.389913,0.226072,0.387873,0.270279,0.396383,0.269365,0.383188,0.126895,0.392344,0.126999,0.373786,0.126900,0.364498,0.127013,0.355681,0.127228,0.347675,0.127540,0.340786,0.127934,0.714167,0.128308,0.721880,0.128223,0.705551,0.128358,0.696363,0.128372,0.686956,0.128349,0.677693,0.128290,0.668928,0.128198,0.660999,0.128076,0.654210,0.127928,0.757299,0.108982,0.749693,0.109401,0.765838,0.108689,0.774984,0.108532,0.784385,0.108519,0.793679,0.108650,0.802510,0.108919,0.810538,0.109317,0.522809,0.183434,0.530161,0.184620,0.514457,0.182699,0.505425,0.182445,0.496060,0.182680,0.486723,0.183395,0.477771,0.184563,0.469550,0.186140,0.462374,0.188064,0.456521,0.190261,0.403986,0.268667,0.389799,0.300094,0.394055,0.299704,0.475622,0.219955,0.478899,0.218724,0.482916,0.217647,0.487519,0.216764,0.492531,0.216110,0.497759,0.215710,0.503002,0.215578,0.508058,0.215721,0.512735,0.216132,0.516850,0.216796,0.657091,0.227714,0.652361,0.193216,0.648978,0.194160,0.651048,0.229400,0.793364,0.081925,0.788420,0.081774,0.783217,0.081701,0.777954,0.081708,0.772833,0.081796,0.768052,0.081960,0.763794,0.082195,0.670177,0.156249,0.673978,0.156331,0.678418,0.156400,0.683325,0.156451,0.688511,0.156484,0.693777,0.156497,0.698921,0.156489,0.703745,0.156461,0.708063,0.156414,0.356694,0.157217,0.360551,0.156996,0.365034,0.156822,0.369970,0.156701,0.375170,0.156638,0.380434,0.156635,0.385560,0.156693,0.385034,0.300606,0.378708,0.319026,0.376877,0.174126,0.690546,0.171903,0.781694,0.067899,0.298582,0.151197,0.301027,0.149898,0.298582,0.120497,0.657104,0.165798,0.498929,0.238082,0.200463,0.090982,0.190962,0.088296,0.193959,0.095261,0.201773,0.097470,0.129938,0.067764,0.124199,0.064465,0.116820,0.069061,0.120967,0.073351,0.111658,0.078948,0.109164,0.073664,0.101523,0.078099,0.102369,0.084340,0.093458,0.089318,0.094194,0.082194,0.087455,0.085792,0.085266,0.093693,0.078108,0.097295,0.081568,0.088755,0.076758,0.090968,0.072260,0.099986,0.067946,0.101664,0.073210,0.092348,0.005861,0.167098,0.008267,0.165240,0.008664,0.156346,0.006345,0.156285,0.006273,0.145465,0.008605,0.147446,0.008090,0.138882,0.005647,0.135053,0.004492,0.125450,0.007140,0.130983,0.283023,0.012363,0.278327,0.021262,0.277935,0.025961,0.282546,0.018077,0.282166,0.025484,0.277622,0.032054,0.277400,0.039307,0.281896,0.034302,0.281747,0.044190,0.277278,0.047440,0.277260,0.056141,0.281725,0.054769,0.281830,0.065632,0.277346,0.065076,0.277534,0.073902,0.282059,0.076362,0.282403,0.086546,0.277817,0.082279,0.278183,0.089885,0.282847,0.095793,0.060705,0.172360,0.060839,0.179886,0.066043,0.172165,0.065933,0.165974,0.065853,0.158644,0.060608,0.163448,0.065805,0.150456,0.060550,0.153493,0.060534,0.142877,0.065792,0.141724,0.065814,0.132785,0.060560,0.132008,0.060628,0.121305,0.065870,0.123981,0.065957,0.115651,0.060734,0.111178,0.060876,0.102016,0.066073,0.108116,0.182446,0.086078,0.175241,0.084412,0.181027,0.092067,0.186954,0.093436,0.175300,0.129610,0.182305,0.131435,0.066214,0.101664,0.104187,0.108224,0.104327,0.101772,0.104071,0.115759,0.103983,0.124089,0.103927,0.132893,0.103906,0.141832,0.103919,0.150564,0.103966,0.158752,0.104047,0.166082,0.278618,0.096428,0.240130,0.090335,0.240566,0.096878,0.239765,0.082729,0.239482,0.074352,0.239294,0.065526,0.239207,0.056591,0.239226,0.047890,0.239348,0.039757,0.239570,0.032504,0.239883,0.026411,0.043934,0.131698,0.042585,0.124768,0.005792,0.124053,0.044884,0.139597,0.045398,0.148161,0.045458,0.157061,0.045060,0.165954,0.007427,0.173786,0.044220,0.174500,0.006177,0.181655,0.042971,0.182370,0.004566,0.188546,0.041360,0.189261,0.074714,0.049561,0.067976,0.053159,0.082044,0.045466,0.089684,0.041032,0.097340,0.036428,0.104720,0.031832,0.190119,0.133644,0.195682,0.165293,0.077274,0.015119,0.229193,0.251275,0.233694,0.246460,0.229275,0.207550,0.012963,0.052777,0.009561,0.009185,0.009524,0.056803,0.215031,0.152627,0.217527,0.149753,0.215082,0.102197,0.057812,0.157374,0.257111,0.181490,0.257213,0.228934,0.259099,0.185766,0.216852,0.062972,0.233694,0.168404,0.229979,0.163451,0.230042,0.207550,0.129938,0.136495,0.012963,0.061348,0.008920,0.056803,0.008955,0.102245]],
rocket-3d/web/obj/rocket3d.js:    "faces": [42,4,3,38,0,0,1,2,0,1,2,42,4,38,37,0,0,2,3,0,2,3,42,11,10,26,0,4,5,6,4,5,6,42,11,26,25,0,4,6,7,4,6,7,42,10,9,27,0,5,8,9,5,8,9,42,10,27,26,0,5,9,6,5,9,6,42,9,24,28,0,8,10,11,8,10,11,42,9,28,27,0,8,11,9,8,11,9,42,24,23,29,0,10,12,13,10,12,13,42,24,29,28,0,10,13,11,10,13,11,42,23,8,30,0,12,14,15,12,14,15,42,23,30,29,0,12,15,13,12,15,13,42,8,7,31,0,14,16,17,14,16,17,42,8,31,30,0,14,17,15,14,17,15,42,7,6,32,0,16,18,19,16,18,19,42,7,32,31,0,16,19,17,16,19,17,42,6,5,33,0,18,20,21,18,20,21,42,6,33,32,0,18,21,19,18,21,19,42,5,22,34,0,20,22,23,20,22,23,42,5,34,33,0,20,23,21,20,23,21,42,22,21,35,0,22,24,25,22,24,25,42,22,35,34,0,22,25,23,22,25,23,42,21,20,36,0,24,26,27,24,26,27,42,21,36,35,0,24,27,25,24,27,25,42,20,4,37,0,26,0,3,26,0,3,42,20,37,36,0,26,3,27,26,3,27,42,3,19,39,0,28,29,30,1,28,29,42,3,39,38,0,28,30,31,1,29,2,42,19,18,40,0,29,32,33,28,30,31,42,19,40,39,0,29,33,30,28,31,29,42,18,17,41,0,32,34,35,30,32,33,42,18,41,40,0,32,35,33,30,33,31,42,17,16,42,0,34,36,37,32,34,35,42,17,42,41,0,34,37,35,32,35,33,42,16,15,43,0,36,38,39,34,36,37,42,16,43,42,0,36,39,37,34,37,35,42,15,2,44,0,38,40,41,36,38,39,42,15,44,43,0,38,41,39,36,39,37,42,2,14,45,0,40,42,43,38,40,41,42,2,45,44,0,40,43,41,38,41,39,42,14,1,46,0,42,44,45,40,42,43,42,14,46,45,0,42,45,43,40,43,41,42,1,0,47,0,44,46,47,42,44,45,42,1,47,46,0,44,47,45,42,45,43,42,0,13,48,0,46,48,49,44,46,47,42,0,48,47,0,46,49,47,44,47,45,42,13,12,49,0,48,50,51,46,48,49,42,13,49,48,0,48,51,49,46,49,47,42,4,19,3,0,52,53,54,0,28,1,42,18,19,4,0,55,53,52,30,28,0,42,18,4,20,0,55,52,56,30,0,26,42,17,18,20,0,57,55,56,32,30,26,42,16,17,20,0,58,57,56,34,32,26,42,16,20,21,0,58,56,59,34,26,24,42,15,16,21,0,60,58,59,36,34,24,42,2,15,21,0,61,60,59,38,36,24,42,2,21,22,0,61,59,62,38,24,22,42,14,2,22,0,63,61,62,40,38,22,42,1,14,22,0,64,63,62,42,40,22,42,5,1,22,0,65,64,62,20,42,22,42,6,1,5,0,66,64,65,18,42,20,42,0,1,6,0,67,64,66,44,42,18,42,0,6,7,0,67,66,68,44,18,16,42,13,0,8,0,69,67,70,46,44,14,42,8,0,7,0,70,67,68,14,44,16,42,9,12,24,0,71,72,73,8,48,10,42,10,12,9,0,74,72,71,5,48,8,42,11,12,10,0,75,72,74,4,48,5,42,13,8,23,0,69,70,76,46,14,12,42,24,12,13,0,73,72,69,10,48,46,42,24,13,23,0,73,69,76,10,46,12,42,27,28,49,0,77,78,79,9,11,49,42,26,27,49,0,80,77,79,6,9,49,42,25,26,49,0,81,80,79,7,6,49,42,48,28,29,0,82,78,83,47,11,13,42,48,49,28,0,82,79,78,47,49,11,42,47,32,46,0,84,85,86,45,19,43,42,29,30,48,0,83,87,82,13,15,47,42,47,31,32,0,84,88,85,45,17,19,42,30,47,48,0,87,84,82,15,45,47,42,30,31,47,0,87,88,84,15,17,45,42,33,34,46,0,89,90,86,21,23,43,42,32,33,46,0,85,89,86,19,21,43,42,45,46,34,0,91,86,90,41,43,23,42,44,34,43,0,92,90,93,39,23,37,42,44,45,34,0,92,91,90,39,41,23,42,42,35,41,0,94,95,96,35,25,33,42,43,35,42,0,93,95,94,37,25,35,42,43,34,35,0,93,90,95,37,23,25,42,40,36,39,0,97,98,99,31,27,29,42,41,36,40,0,96,98,97,33,27,31,42,41,35,36,0,96,95,98,33,25,27,42,39,37,38,0,99,100,101,29,3,2,42,39,36,37,0,99,98,100,29,27,3,42,25,49,12,0,102,51,50,7,49,48,42,11,25,12,0,103,102,50,4,7,48,42,54,53,88,0,104,105,106,50,51,52,42,54,88,87,0,104,106,107,50,52,53,42,61,60,76,0,108,109,110,54,55,56,42,61,76,75,0,108,110,111,54,56,57,42,60,59,77,0,109,112,113,55,58,59,42,60,77,76,0,109,113,110,55,59,56,42,59,74,78,0,112,114,115,58,60,61,42,59,78,77,0,112,115,113,58,61,59,42,74,73,79,0,114,116,117,60,62,63,42,74,79,78,0,114,117,115,60,63,61,42,73,58,80,0,116,118,119,62,64,65,42,73,80,79,0,116,119,117,62,65,63,42,58,57,81,0,118,120,121,64,66,67,42,58,81,80,0,118,121,119,64,67,65,42,57,56,82,0,120,122,123,66,68,69,42,57,82,81,0,120,123,121,66,69,67,42,56,55,83,0,122,124,125,68,70,71,42,56,83,82,0,122,125,123,68,71,69,42,55,72,84,0,124,126,127,70,72,73,42,55,84,83,0,124,127,125,70,73,71,42,72,71,85,0,126,128,129,72,74,75,42,72,85,84,0,126,129,127,72,75,73,42,71,70,86,0,128,130,131,74,76,77,42,71,86,85,0,128,131,129,74,77,75,42,70,54,87,0,130,104,107,76,50,53,42,70,87,86,0,130,107,131,76,53,77,42,53,69,89,0,132,133,134,51,78,79,42,53,89,88,0,132,134,135,51,79,52,42,69,68,90,0,133,136,137,78,80,81,42,69,90,89,0,133,137,134,78,81,79,42,68,67,91,0,136,138,139,80,82,83,42,68,91,90,0,136,139,137,80,83,81,42,67,66,92,0,138,140,141,82,84,85,42,67,92,91,0,138,141,139,82,85,83,42,66,65,93,0,140,142,143,84,86,87,42,66,93,92,0,140,143,141,84,87,85,42,65,52,94,0,142,144,145,86,88,89,42,65,94,93,0,142,145,143,86,89,87,42,52,64,95,0,144,146,147,88,90,91,42,52,95,94,0,144,147,145,88,91,89,42,64,51,96,0,146,148,149,90,92,93,42,64,96,95,0,146,149,147,90,93,91,42,51,50,97,0,148,150,151,92,94,95,42,51,97,96,0,148,151,149,92,95,93,42,50,63,98,0,150,152,153,94,96,97,42,50,98,97,0,150,153,151,94,97,95,42,63,62,99,0,152,154,155,96,98,99,42,63,99,98,0,152,155,153,96,99,97,42,54,69,53,0,156,157,158,50,78,51,42,68,69,54,0,159,157,156,80,78,50,42,68,54,70,0,159,156,160,80,50,76,42,67,68,70,0,161,159,160,82,80,76,42,66,67,70,0,162,161,160,84,82,76,42,66,70,71,0,162,160,163,84,76,74,42,65,66,71,0,164,162,163,86,84,74,42,52,65,71,0,165,164,163,88,86,74,42,52,71,72,0,165,163,166,88,74,72,42,64,52,72,0,167,165,166,90,88,72,42,51,64,72,0,168,167,166,92,90,72,42,55,51,72,0,169,168,166,70,92,72,42,56,51,55,0,170,168,169,68,92,70,42,50,51,56,0,171,168,170,94,92,68,42,50,56,57,0,171,170,172,94,68,66,42,63,50,58,0,173,171,174,96,94,64,42,58,50,57,0,174,171,172,64,94,66,42,59,62,74,0,175,176,177,58,98,60,42,60,62,59,0,178,176,175,55,98,58,42,61,62,60,0,179,176,178,54,98,55,42,63,58,73,0,173,174,180,96,64,62,42,74,62,63,0,177,176,173,60,98,96,42,74,63,73,0,177,173,180,60,96,62,42,77,78,99,0,181,182,183,59,61,99,42,76,77,99,0,184,181,183,56,59,99,42,75,76,99,0,185,184,183,57,56,99,42,98,78,79,0,186,182,187,97,61,63,42,98,99,78,0,186,183,182,97,99,61,42,97,82,96,0,188,189,190,95,69,93,42,79,80,98,0,187,191,186,63,65,97,42,97,81,82,0,188,192,189,95,67,69,42,80,97,98,0,191,188,186,65,95,97,42,80,81,97,0,191,192,188,65,67,95,42,83,84,96,0,193,194,190,71,73,93,42,82,83,96,0,189,193,190,69,71,93,42,95,96,84,0,195,190,194,91,93,73,42,94,84,93,0,196,194,197,89,73,87,42,94,95,84,0,196,195,194,89,91,73,42,92,85,91,0,198,199,200,85,75,83,42,93,85,92,0,197,199,198,87,75,85,42,93,84,85,0,197,194,199,87,73,75,42,90,86,89,0,201,202,203,81,77,79,42,91,86,90,0,200,202,201,83,77,81,42,91,85,86,0,200,199,202,83,75,77,42,89,87,88,0,203,204,205,79,53,52,42,89,86,87,0,203,202,204,79,77,53,42,75,99,62,0,206,155,154,57,99,98,42,61,75,62,0,207,206,154,54,57,98,42,104,103,138,0,208,209,210,100,101,102,42,104,138,137,0,208,210,211,100,102,103,42,111,110,126,0,212,213,214,104,105,106,42,111,126,125,0,212,214,215,104,106,107,42,110,109,127,0,213,216,217,105,108,109,42,110,127,126,0,213,217,214,105,109,106,42,109,124,128,0,216,218,219,108,110,111,42,109,128,127,0,216,219,217,108,111,109,42,124,123,129,0,218,220,221,110,112,113,42,124,129,128,0,218,221,219,110,113,111,42,123,108,130,0,220,222,223,112,114,115,42,123,130,129,0,220,223,221,112,115,113,42,108,107,131,0,222,224,225,114,116,117,42,108,131,130,0,222,225,223,114,117,115,42,107,106,132,0,224,226,227,116,118,119,42,107,132,131,0,224,227,225,116,119,117,42,106,105,133,0,226,228,229,118,120,121,42,106,133,132,0,226,229,227,118,121,119,42,105,122,134,0,228,230,231,120,122,123,42,105,134,133,0,228,231,229,120,123,121,42,122,121,135,0,230,232,233,122,124,125,42,122,135,134,0,230,233,231,122,125,123,42,121,120,136,0,232,234,235,124,126,127,42,121,136,135,0,232,235,233,124,127,125,42,120,104,137,0,234,208,211,126,100,103,42,120,137,136,0,234,211,235,126,103,127,42,103,119,139,0,236,237,238,101,128,129,42,103,139,138,0,236,238,239,101,129,102,42,119,118,140,0,237,240,241,128,130,131,42,119,140,139,0,237,241,238,128,131,129,42,118,117,141,0,240,242,243,130,132,133,42,118,141,140,0,240,243,241,130,133,131,42,117,116,142,0,242,244,245,132,134,135,42,117,142,141,0,242,245,243,132,135,133,42,116,115,143,0,244,246,247,134,136,137,42,116,143,142,0,244,247,245,134,137,135,42,115,102,144,0,246,248,249,136,138,139,42,115,144,143,0,246,249,247,136,139,137,42,102,114,145,0,248,250,251,138,140,141,42,102,145,144,0,248,251,249,138,141,139,42,114,101,146,0,250,252,253,140,142,143,42,114,146,145,0,250,253,251,140,143,141,42,101,100,147,0,252,254,255,142,144,145,42,101,147,146,0,252,255,253,142,145,143,42,100,113,148,0,254,256,257,144,146,147,42,100,148,147,0,254,257,255,144,147,145,42,113,112,149,0,256,258,259,146,148,149,42,113,149,148,0,256,259,257,146,149,147,42,104,119,103,0,260,261,262,100,128,101,42,118,119,104,0,263,261,260,130,128,100,42,118,104,120,0,263,260,264,130,100,126,42,117,118,120,0,265,263,264,132,130,126,42,116,117,120,0,266,265,264,134,132,126,42,116,120,121,0,266,264,267,134,126,124,42,115,116,121,0,268,266,267,136,134,124,42,102,115,121,0,269,268,267,138,136,124,42,102,121,122,0,269,267,270,138,124,122,42,114,102,122,0,271,269,270,140,138,122,42,101,114,122,0,272,271,270,142,140,122,42,105,101,122,0,273,272,270,120,142,122,42,106,101,105,0,274,272,273,118,142,120,42,100,101,106,0,275,272,274,144,142,118,42,100,106,107,0,275,274,276,144,118,116,42,113,100,108,0,277,275,278,146,144,114,42,108,100,107,0,278,275,276,114,144,116,42,109,112,124,0,279,280,281,108,148,110,42,110,112,109,0,282,280,279,105,148,108,42,111,112,110,0,283,280,282,104,148,105,42,113,108,123,0,277,278,284,146,114,112,42,124,112,113,0,281,280,277,110,148,146,42,124,113,123,0,281,277,284,110,146,112,42,127,128,149,0,285,286,287,109,111,149,42,126,127,149,0,288,285,287,106,109,149,42,125,126,149,0,289,288,287,107,106,149,42,148,128,129,0,290,286,291,147,111,113,42,148,149,128,0,290,287,286,147,149,111,42,147,132,146,0,292,293,294,145,119,143,42,129,130,148,0,291,295,290,113,115,147,42,147,131,132,0,292,296,293,145,117,119,42,130,147,148,0,295,292,290,115,145,147,42,130,131,147,0,295,296,292,115,117,145,42,133,134,146,0,297,298,294,121,123,143,42,132,133,146,0,293,297,294,119,121,143,42,145,146,134,0,299,294,298,141,143,123,42,144,134,143,0,300,298,301,139,123,137,42,144,145,134,0,300,299,298,139,141,123,42,142,135,141,0,302,303,304,135,125,133,42,143,135,142,0,301,303,302,137,125,135,42,143,134,135,0,301,298,303,137,123,125,42,140,136,139,0,305,306,307,131,127,129,42,141,136,140,0,304,306,305,133,127,131,42,141,135,136,0,304,303,306,133,125,127,42,139,137,138,0,307,308,309,129,103,102,42,139,136,137,0,307,306,308,129,127,103,42,125,149,112,0,310,259,258,107,149,148,42,111,125,112,0,311,310,258,104,107,148,43,238,237,254,253,0,312,313,314,315,150,151,152,153,43,180,183,182,181,0,316,317,318,319,154,155,156,157,43,180,179,184,183,0,316,320,321,317,154,158,159,155,43,178,185,184,179,0,322,323,321,320,160,161,159,158,43,178,177,186,185,0,322,324,325,323,160,162,163,161,43,176,187,186,177,0,326,327,325,324,164,165,163,162,43,176,175,188,187,0,326,328,329,327,164,166,167,165,43,174,189,188,175,0,330,331,332,333,168,169,167,166,43,174,173,190,189,0,330,334,335,331,168,170,171,169,43,172,191,190,173,0,336,337,335,334,172,173,171,170,43,172,171,192,191,0,336,338,339,337,172,174,175,173,43,170,193,192,171,0,340,341,339,338,176,177,175,174,43,170,169,194,193,0,340,342,343,341,176,178,179,177,43,168,195,194,169,0,344,345,343,342,180,181,179,178,43,168,167,196,195,0,344,346,347,345,180,182,183,181,43,166,197,196,167,0,348,349,350,351,184,185,183,182,43,166,165,198,197,0,348,352,353,349,184,186,187,185,43,164,199,198,165,0,354,355,353,352,188,189,187,186,43,164,163,200,199,0,354,356,357,355,188,190,191,189,43,162,201,200,163,0,358,359,357,356,192,193,191,190,43,162,161,202,201,0,358,360,361,359,192,194,195,193,43,160,203,202,161,0,362,363,361,360,196,197,195,194,43,160,159,204,203,0,364,365,366,367,196,198,199,197,43,158,205,204,159,0,368,369,366,365,200,201,199,198,43,157,206,205,158,0,370,371,369,368,202,203,201,200,43,157,156,207,206,0,370,372,373,371,202,204,205,203,43,155,208,207,156,0,374,375,373,372,206,207,205,204,43,155,154,209,208,0,374,376,377,375,206,208,209,207,43,153,210,209,154,0,378,379,377,376,210,211,209,208,43,153,152,211,210,0,378,380,381,379,210,212,213,211,43,152,151,212,211,0,382,383,384,385,212,214,215,213,43,150,213,212,151,0,386,387,384,383,216,217,215,214,43,213,214,215,212,0,388,389,390,391,217,218,219,215,43,211,212,215,216,0,392,391,390,393,213,215,219,220,43,210,211,216,217,0,394,392,393,395,211,213,220,221,43,210,217,218,209,0,396,397,398,399,211,221,222,209,43,208,209,218,219,0,400,399,398,401,207,209,222,223,43,208,219,220,207,0,400,401,402,403,207,223,224,205,43,206,207,220,221,0,404,403,402,405,203,205,224,225,43,206,221,222,205,0,406,407,408,409,203,225,226,201,43,205,222,223,204,0,409,408,410,411,201,226,227,199,43,203,204,223,224,0,412,411,410,413,197,199,227,228,43,203,224,225,202,0,412,413,414,415,197,228,229,195,43,201,202,225,226,0,416,415,414,417,193,195,229,230,43,201,226,227,200,0,416,417,418,419,193,230,231,191,43,199,200,227,228,0,420,419,418,421,189,191,231,232,43,199,228,229,198,0,420,421,422,423,189,232,233,187,43,197,198,229,230,0,424,423,422,425,185,187,233,234,43,197,230,231,196,0,424,425,426,427,185,234,235,183,43,195,196,231,232,0,428,427,426,429,181,183,235,236,43,195,232,233,194,0,430,431,432,433,181,236,237,179,43,193,194,233,234,0,434,433,432,435,177,179,237,238,43,193,234,235,192,0,434,435,436,437,177,238,239,175,43,191,192,235,236,0,438,437,436,439,173,175,239,240,43,191,236,237,190,0,438,439,313,440,173,240,151,171,43,189,190,237,238,0,441,440,313,312,169,171,151,150,43,189,238,239,188,0,441,312,442,443,169,150,241,167,43,187,188,239,240,0,444,443,442,445,165,167,241,242,43,187,240,241,186,0,446,447,448,449,165,242,243,163,43,185,186,241,242,0,450,449,448,451,161,163,243,244,43,185,242,243,184,0,450,451,452,453,161,244,245,159,43,183,184,243,244,0,454,453,452,455,155,159,245,246,43,183,244,245,182,0,454,455,456,457,155,246,247,156,43,213,182,245,214,0,388,458,459,389,217,156,247,218,43,214,245,246,277,0,389,459,460,461,218,247,248,249,43,244,247,246,245,0,455,462,463,456,246,250,248,247,43,244,243,248,247,0,455,452,464,462,246,245,251,250,43,242,249,248,243,0,451,465,464,452,244,252,251,245,43,242,241,250,249,0,451,448,466,465,244,243,253,252,43,240,251,250,241,0,447,467,466,448,242,254,253,243,43,240,239,252,251,0,447,468,469,467,242,241,255,254,43,238,253,252,239,0,312,315,470,442,150,153,255,241,43,150,181,182,213,0,386,471,472,387,216,157,156,217,43,236,255,254,237,0,439,473,314,313,240,256,152,151,43,236,235,256,255,0,439,436,474,473,240,239,257,256,43,234,257,256,235,0,435,475,474,436,238,258,257,239,43,234,233,258,257,0,435,432,476,475,238,237,259,258,43,232,259,258,233,0,431,477,476,432,236,260,259,237,43,232,231,260,259,0,431,478,479,477,236,235,261,260,43,230,261,260,231,0,425,480,481,426,234,262,261,235,43,230,229,262,261,0,425,422,482,480,234,233,263,262,43,228,263,262,229,0,421,483,482,422,232,264,263,233,43,228,227,264,263,0,421,418,484,483,232,231,265,264,43,226,265,264,227,0,417,485,484,418,230,266,265,231,43,226,225,266,265,0,417,414,486,485,230,229,267,266,43,224,267,266,225,0,413,487,486,414,228,268,267,229,43,224,223,268,267,0,413,410,488,487,228,227,269,268,43,222,269,268,223,0,489,490,491,492,226,270,269,227,43,221,270,269,222,0,405,493,490,489,225,271,270,226,43,221,220,271,270,0,405,402,494,493,225,224,272,271,43,219,272,271,220,0,401,495,494,402,223,273,272,224,43,219,218,273,272,0,401,398,496,495,223,222,274,273,43,217,274,273,218,0,397,497,496,398,221,275,274,222,43,217,216,275,274,0,397,498,499,497,221,220,276,275,43,216,215,276,275,0,393,390,500,501,220,219,277,276,43,214,277,276,215,0,389,461,500,390,218,249,277,219,43,277,278,279,276,0,461,502,503,500,249,278,279,277,43,275,276,279,280,0,501,500,503,504,276,277,279,280,43,274,275,280,281,0,497,499,505,506,275,276,280,281,43,274,281,282,273,0,497,506,507,496,275,281,282,274,43,272,273,282,283,0,495,496,507,508,273,274,282,283,43,272,283,284,271,0,495,508,509,494,273,283,284,272,43,270,271,284,285,0,493,494,509,510,271,272,284,285,43,270,285,286,269,0,493,510,511,490,271,285,286,270,43,269,286,287,268,0,490,511,512,491,270,286,287,269,43,267,268,287,288,0,487,488,513,514,268,269,287,288,43,267,288,289,266,0,487,514,515,486,268,288,289,267,43,265,266,289,290,0,485,486,515,516,266,267,289,290,43,265,290,291,264,0,485,516,517,484,266,290,291,265,43,263,264,291,292,0,483,484,517,518,264,265,291,292,43,263,292,293,262,0,483,518,519,482,264,292,293,263,43,261,262,293,294,0,480,482,519,520,262,263,293,294,43,261,294,295,260,0,480,520,521,481,262,294,295,261,43,259,260,295,296,0,477,479,522,523,260,261,295,296,43,259,296,297,258,0,477,523,524,476,260,296,297,259,43,257,258,297,298,0,475,476,524,525,258,259,297,298,43,257,298,299,256,0,475,525,526,474,258,298,299,257,43,255,256,299,300,0,473,474,526,527,256,257,299,300,43,255,300,301,254,0,473,527,528,314,256,300,301,152,43,253,254,301,302,0,315,314,528,529,153,152,301,302,43,253,302,303,252,0,315,529,530,470,153,302,303,255,43,251,252,303,304,0,467,469,531,532,254,255,303,304,43,251,304,305,250,0,467,532,533,466,254,304,305,253,43,249,250,305,306,0,465,466,533,534,252,253,305,306,43,249,306,307,248,0,465,534,535,464,252,306,307,251,43,247,248,307,308,0,462,464,535,536,250,251,307,308,43,247,308,309,246,0,462,536,537,463,250,308,309,248,43,277,246,309,278,0,461,460,538,502,249,248,309,278,43,278,309,310,341,0,502,538,539,540,278,309,310,311,43,308,311,310,309,0,536,541,542,537,308,312,310,309,43,308,307,312,311,0,536,535,543,541,308,307,313,312,43,306,313,312,307,0,534,544,543,535,306,314,313,307,43,306,305,314,313,0,534,533,545,544,306,305,315,314,43,304,315,314,305,0,532,546,545,533,304,316,315,305,43,304,303,316,315,0,532,531,547,546,304,303,317,316,43,302,317,316,303,0,529,548,549,530,302,318,317,303,43,302,301,318,317,0,529,528,550,548,302,301,319,318,43,300,319,318,301,0,527,551,550,528,300,320,319,301,43,300,299,320,319,0,527,526,552,551,300,299,321,320,43,298,321,320,299,0,525,553,552,526,298,322,321,299,43,298,297,322,321,0,525,524,554,553,298,297,323,322,43,296,323,322,297,0,523,555,554,524,296,324,323,297,43,296,295,324,323,0,523,522,556,555,296,295,325,324,43,294,325,324,295,0,520,557,558,521,294,326,325,295,43,294,293,326,325,0,520,519,559,557,294,293,327,326,43,292,327,326,293,0,518,560,559,519,292,328,327,293,43,292,291,328,327,0,518,517,561,560,292,291,329,328,43,290,329,328,291,0,516,562,561,517,290,330,329,291,43,290,289,330,329,0,516,515,563,562,290,289,331,330,43,288,331,330,289,0,514,564,563,515,288,332,331,289,43,288,287,332,331,0,514,513,565,564,288,287,333,332,43,286,333,332,287,0,511,566,567,512,286,334,333,287,43,285,334,333,286,0,510,568,566,511,285,335,334,286,43,285,284,335,334,0,510,509,569,568,285,284,336,335,43,283,336,335,284,0,508,570,569,509,283,337,336,284,43,283,282,337,336,0,508,507,571,570,283,282,338,337,43,281,338,337,282,0,506,572,571,507,281,339,338,282,43,281,280,339,338,0,506,505,573,572,281,280,340,339,43,280,279,340,339,0,504,503,574,575,280,279,341,340,43,278,341,340,279,0,502,540,574,503,278,311,341,279,43,341,342,343,340,0,540,576,577,574,311,342,343,341,43,339,340,343,344,0,575,574,577,578,340,341,343,344,43,338,339,344,345,0,572,573,579,580,339,340,344,345,43,338,345,346,337,0,572,580,581,571,339,345,346,338,43,336,337,346,347,0,570,571,581,582,337,338,346,347,43,336,347,348,335,0,570,582,583,569,337,347,348,336,43,334,335,348,349,0,568,569,583,584,335,336,348,349,43,334,349,350,333,0,568,584,585,566,335,349,350,334,43,333,350,351,332,0,566,585,586,567,334,350,351,333,43,331,332,351,352,0,587,567,586,588,332,333,351,352,43,331,352,353,330,0,564,589,590,563,332,352,353,331,43,329,330,353,354,0,562,563,590,591,330,331,353,354,43,329,354,355,328,0,562,591,592,561,330,354,355,329,43,327,328,355,356,0,560,561,592,593,328,329,355,356,43,327,356,357,326,0,560,593,594,559,328,356,357,327,43,325,326,357,358,0,557,559,594,595,326,327,357,358,43,325,358,359,324,0,557,595,596,558,326,358,359,325,43,323,324,359,360,0,555,556,597,598,324,325,359,360,43,323,360,361,322,0,555,598,599,554,324,360,361,323,43,321,322,361,362,0,553,554,599,600,322,323,361,362,43,321,362,363,320,0,553,600,601,552,322,362,363,321,43,319,320,363,364,0,551,552,601,602,320,321,363,364,43,319,364,365,318,0,551,602,603,550,320,364,365,319,43,317,318,365,366,0,548,550,603,604,318,319,365,366,43,317,366,367,316,0,548,604,605,549,318,366,367,317,43,315,316,367,368,0,546,547,606,607,316,317,367,368,43,315,368,369,314,0,546,607,608,545,316,368,369,315,43,313,314,369,370,0,544,545,608,609,314,315,369,370,43,313,370,371,312,0,544,609,610,543,314,370,371,313,43,311,312,371,372,0,541,543,610,611,312,313,371,372,43,311,372,373,310,0,541,611,612,542,312,372,373,310,43,341,310,373,342,0,540,539,613,576,311,310,373,342,43,342,373,374,405,0,576,613,614,615,342,373,374,375,43,372,375,374,373,0,611,616,617,612,372,376,374,373,43,372,371,376,375,0,611,610,618,616,372,371,377,376,43,370,377,376,371,0,609,619,618,610,370,378,377,371,43,370,369,378,377,0,609,608,620,619,370,369,379,378,43,368,379,378,369,0,607,621,620,608,368,380,379,369,43,368,367,380,379,0,607,606,622,621,368,367,381,380,43,366,381,380,367,0,604,623,624,605,366,382,381,367,43,366,365,382,381,0,604,603,625,623,366,365,383,382,43,364,383,382,365,0,602,626,625,603,364,384,383,365,43,364,363,384,383,0,602,601,627,626,364,363,385,384,43,362,385,384,363,0,600,628,627,601,362,386,385,363,43,362,361,386,385,0,600,599,629,628,362,361,387,386,43,360,387,386,361,0,598,630,629,599,360,388,387,361,43,360,359,388,387,0,598,597,631,630,360,359,389,388,43,358,389,388,359,0,595,632,633,596,358,390,389,359,43,358,357,390,389,0,595,594,634,632,358,357,391,390,43,356,391,390,357,0,593,635,634,594,356,392,391,357,43,356,355,392,391,0,593,592,636,635,356,355,393,392,43,354,393,392,355,0,591,637,636,592,354,394,393,355,43,354,353,394,393,0,591,590,638,637,354,353,395,394,43,352,395,394,353,0,589,639,638,590,352,396,395,353,43,352,351,396,395,0,588,586,640,641,352,351,397,396,43,350,397,396,351,0,585,642,640,586,350,398,397,351,43,349,398,397,350,0,584,643,642,585,349,399,398,350,43,349,348,399,398,0,584,583,644,643,349,348,400,399,43,347,400,399,348,0,582,645,644,583,347,401,400,348,43,347,346,401,400,0,582,581,646,645,347,346,402,401,43,345,402,401,346,0,580,647,646,581,345,403,402,346,43,345,344,403,402,0,580,579,648,647,345,344,404,403,43,344,343,404,403,0,578,577,649,650,344,343,405,404,43,342,405,404,343,0,576,615,649,577,342,375,405,343,43,405,406,407,404,0,615,651,652,649,375,406,407,405,43,403,404,407,408,0,650,649,652,653,404,405,407,408,43,402,403,408,409,0,647,648,654,655,403,404,408,409,43,402,409,410,401,0,647,655,656,646,403,409,410,402,43,400,401,410,411,0,645,646,656,657,401,402,410,411,43,400,411,412,399,0,645,657,658,644,401,411,412,400,43,398,399,412,413,0,643,644,658,659,399,400,412,413,43,398,413,414,397,0,643,659,660,642,399,413,414,398,43,397,414,415,396,0,642,660,661,640,398,414,415,397,43,395,396,415,416,0,641,640,661,662,396,397,415,416,43,395,416,417,394,0,639,663,664,638,396,416,417,395,43,393,394,417,418,0,637,638,664,665,394,395,417,418,43,393,418,419,392,0,637,665,666,636,394,418,419,393,43,391,392,419,420,0,635,636,666,667,392,393,419,420,43,391,420,421,390,0,635,667,668,634,392,420,421,391,43,389,390,421,422,0,632,634,668,669,390,391,421,422,43,389,422,423,388,0,632,669,670,633,390,422,423,389,43,387,388,423,424,0,630,631,671,672,388,389,423,424,43,387,424,425,386,0,630,672,673,629,388,424,425,387,43,385,386,425,426,0,628,629,673,674,386,387,425,426,43,385,426,427,384,0,628,674,675,627,386,426,427,385,43,383,384,427,428,0,626,627,675,676,384,385,427,428,43,383,428,429,382,0,626,676,677,625,384,428,429,383,43,381,382,429,430,0,623,625,677,678,382,383,429,430,43,381,430,431,380,0,623,678,679,624,382,430,431,381,43,379,380,431,432,0,621,622,680,681,380,381,431,432,43,379,432,433,378,0,621,681,682,620,380,432,433,379,43,377,378,433,434,0,619,620,682,683,378,379,433,434,43,377,434,435,376,0,619,683,684,618,378,434,435,377,43,375,376,435,436,0,616,618,684,685,376,377,435,436,43,375,436,437,374,0,616,685,686,617,376,436,437,374,43,405,374,437,406,0,615,614,687,651,375,374,437,406,43,406,437,438,469,0,651,687,688,689,406,437,438,439,43,436,439,438,437,0,685,690,691,686,436,440,438,437,43,436,435,440,439,0,685,684,692,690,436,435,441,440,43,434,441,440,435,0,683,693,692,684,434,442,441,435,43,434,433,442,441,0,683,682,694,693,434,433,443,442,43,432,443,442,433,0,681,695,694,682,432,444,443,433,43,432,431,444,443,0,681,680,696,695,432,431,445,444,43,430,445,444,431,0,678,697,698,679,430,446,445,431,43,430,429,446,445,0,678,677,699,697,430,429,447,446,43,428,447,446,429,0,676,700,699,677,428,448,447,429,43,428,427,448,447,0,676,675,701,700,428,427,449,448,43,426,449,448,427,0,674,702,701,675,426,450,449,427,43,426,425,450,449,0,674,673,703,702,426,425,451,450,43,424,451,450,425,0,672,704,703,673,424,452,451,425,43,424,423,452,451,0,672,671,705,704,424,423,453,452,43,422,453,452,423,0,669,706,707,670,422,454,453,423,43,422,421,454,453,0,669,668,708,706,422,421,455,454,43,420,455,454,421,0,667,709,708,668,420,456,455,421,43,420,419,456,455,0,667,666,710,709,420,419,457,456,43,418,457,456,419,0,665,711,710,666,418,458,457,419,43,418,417,458,457,0,665,664,712,711,418,417,459,458,43,416,459,458,417,0,663,713,712,664,416,460,459,417,43,416,415,460,459,0,662,661,714,715,416,415,461,460,43,414,461,460,415,0,660,716,714,661,414,462,461,415,43,413,462,461,414,0,659,717,716,660,413,463,462,414,43,413,412,463,462,0,659,658,718,717,413,412,464,463,43,411,464,463,412,0,657,719,718,658,411,465,464,412,43,411,410,465,464,0,657,656,720,719,411,410,466,465,43,409,466,465,410,0,655,721,720,656,409,467,466,410,43,409,408,467,466,0,655,654,722,721,409,408,468,467,43,408,407,468,467,0,653,652,723,724,408,407,469,468,43,406,469,468,407,0,651,689,723,652,406,439,469,407,43,469,470,471,468,0,725,726,727,728,439,470,471,469,43,467,468,471,472,0,729,730,731,732,468,469,471,472,43,466,467,472,473,0,733,729,732,734,467,468,472,473,43,466,473,474,465,0,733,734,735,736,467,473,474,466,43,464,465,474,475,0,737,736,735,738,465,466,474,475,43,464,475,476,463,0,737,738,739,740,465,475,476,464,43,462,463,476,477,0,741,740,739,742,463,464,476,477,43,462,477,478,461,0,741,742,743,744,463,477,478,462,43,461,478,479,460,0,744,743,745,746,462,478,479,461,43,459,460,479,480,0,747,746,745,748,460,461,479,480,43,459,480,481,458,0,749,750,751,752,460,480,481,459,43,457,458,481,482,0,753,752,751,754,458,459,481,482,43,457,482,483,456,0,753,754,755,756,458,482,483,457,43,455,456,483,484,0,757,756,755,758,456,457,483,484,43,455,484,485,454,0,757,758,759,760,456,484,485,455,43,453,454,485,486,0,761,760,759,762,454,455,485,486,43,453,486,487,452,0,761,762,763,764,454,486,487,453,43,451,452,487,488,0,765,766,767,768,452,453,487,488,43,451,488,489,450,0,765,768,769,770,452,488,489,451,43,449,450,489,490,0,771,770,769,772,450,451,489,490,43,449,490,491,448,0,771,772,773,774,450,490,491,449,43,447,448,491,492,0,775,774,773,776,448,449,491,492,43,447,492,493,446,0,775,776,777,778,448,492,493,447,43,445,446,493,494,0,779,778,777,780,446,447,493,494,43,445,494,495,444,0,779,780,781,782,446,494,495,445,43,443,444,495,496,0,783,784,785,786,444,445,495,496,43,443,496,497,442,0,783,786,787,788,444,496,497,443,43,441,442,497,498,0,789,788,787,790,442,443,497,498,43,441,498,499,440,0,789,790,791,792,442,498,499,441,43,439,440,499,500,0,793,792,791,794,440,441,499,500,43,439,500,501,438,0,793,794,795,796,440,500,501,438,43,469,438,501,470,0,725,797,798,726,439,438,501,470,43,470,501,502,533,0,726,798,799,800,470,501,502,503,43,500,503,502,501,0,794,801,802,795,500,504,502,501,43,500,499,504,503,0,794,791,803,801,500,499,505,504,43,498,505,504,499,0,790,804,803,791,498,506,505,499,43,498,497,506,505,0,790,787,805,804,498,497,507,506,43,496,507,506,497,0,786,806,805,787,496,508,507,497,43,496,495,508,507,0,786,785,807,806,496,495,509,508,43,494,509,508,495,0,780,808,809,781,494,510,509,495,43,494,493,510,509,0,780,777,810,808,494,493,511,510,43,492,511,510,493,0,776,811,810,777,492,512,511,493,43,492,491,512,511,0,776,773,812,811,492,491,513,512,43,490,513,512,491,0,772,813,812,773,490,514,513,491,43,490,489,514,513,0,772,769,814,813,490,489,515,514,43,488,515,514,489,0,768,815,814,769,488,516,515,489,43,488,487,516,515,0,768,767,816,815,488,487,517,516,43,486,517,516,487,0,762,817,818,763,486,518,517,487,43,486,485,518,517,0,762,759,819,817,486,485,519,518,43,484,519,518,485,0,758,820,819,759,484,520,519,485,43,484,483,520,519,0,758,755,821,820,484,483,521,520,43,482,521,520,483,0,754,822,821,755,482,522,521,483,43,482,481,522,521,0,754,751,823,822,482,481,523,522,43,480,523,522,481,0,750,824,823,751,480,524,523,481,43,480,479,524,523,0,748,745,825,826,480,479,525,524,43,478,525,524,479,0,743,827,825,745,478,526,525,479,43,477,526,525,478,0,742,828,827,743,477,527,526,478,43,477,476,527,526,0,742,739,829,828,477,476,528,527,43,475,528,527,476,0,738,830,829,739,475,529,528,476,43,475,474,529,528,0,738,735,831,830,475,474,530,529,43,473,530,529,474,0,734,832,831,735,473,531,530,474,43,473,472,531,530,0,734,732,833,832,473,472,532,531,43,472,471,532,531,0,732,731,834,833,472,471,533,532,43,470,533,532,471,0,726,800,835,727,470,503,533,471,43,533,534,535,532,0,800,836,837,835,503,534,535,533,43,531,532,535,536,0,833,834,838,839,532,533,535,536,43,530,531,536,537,0,832,833,839,840,531,532,536,537,43,530,537,538,529,0,832,840,841,831,531,537,538,530,43,528,529,538,539,0,830,831,841,842,529,530,538,539,43,528,539,540,527,0,830,842,843,829,529,539,540,528,43,526,527,540,541,0,828,829,843,844,527,528,540,541,43,526,541,542,525,0,828,844,845,827,527,541,542,526,43,525,542,543,524,0,827,845,846,825,526,542,543,525,43,523,524,543,544,0,826,825,846,847,524,525,543,544,43,523,544,545,522,0,848,849,850,851,524,544,545,523,43,521,522,545,546,0,822,823,852,853,522,523,545,546,43,521,546,547,520,0,822,853,854,821,522,546,547,521,43,519,520,547,548,0,820,821,854,855,520,521,547,548,43,519,548,549,518,0,820,855,856,819,520,548,549,519,43,517,518,549,550,0,817,819,856,857,518,519,549,550,43,517,550,551,516,0,817,857,858,818,518,550,551,517,43,515,516,551,552,0,815,816,859,860,516,517,551,552,43,515,552,553,514,0,815,860,861,814,516,552,553,515,43,513,514,553,554,0,813,814,861,862,514,515,553,554,43,513,554,555,512,0,813,862,863,812,514,554,555,513,43,511,512,555,556,0,811,812,863,864,512,513,555,556,43,511,556,557,510,0,811,864,865,810,512,556,557,511,43,509,510,557,558,0,808,810,865,866,510,511,557,558,43,509,558,559,508,0,808,866,867,809,510,558,559,509,43,507,508,559,560,0,806,807,868,869,508,509,559,560,43,507,560,561,506,0,806,869,870,805,508,560,561,507,43,505,506,561,562,0,804,805,870,871,506,507,561,562,43,505,562,563,504,0,804,871,872,803,506,562,563,505,43,503,504,563,564,0,801,803,872,873,504,505,563,564,43,503,564,565,502,0,801,873,874,802,504,564,565,502,43,533,502,565,534,0,800,799,875,836,503,502,565,534,42,534,565,566,0,836,875,876,534,565,566,42,564,566,565,0,873,877,874,564,566,565,42,564,563,566,0,873,872,877,564,563,566,42,562,566,563,0,871,877,872,562,566,563,42,562,561,566,0,871,870,877,562,561,566,42,560,566,561,0,869,877,870,560,566,561,42,560,559,566,0,869,868,877,560,559,566,42,558,566,559,0,866,878,867,558,566,559,42,558,557,566,0,866,865,878,558,557,566,42,556,566,557,0,864,878,865,556,566,557,42,556,555,566,0,864,863,878,556,555,566,42,554,566,555,0,862,878,863,554,566,555,42,554,553,566,0,862,861,878,554,553,566,42,552,566,553,0,860,878,861,552,566,553,42,552,551,566,0,860,859,878,552,551,566,42,550,566,551,0,857,879,858,550,566,551,42,550,549,566,0,857,856,879,550,549,566,42,548,566,549,0,855,879,856,548,566,549,42,548,547,566,0,855,854,879,548,547,566,42,546,566,547,0,853,879,854,546,566,547,42,546,545,566,0,880,881,882,546,545,566,42,544,566,545,0,849,883,850,544,566,545,42,544,543,566,0,847,846,884,544,543,566,42,542,566,543,0,845,884,846,542,566,543,42,541,566,542,0,844,884,845,541,566,542,42,541,540,566,0,844,843,884,541,540,566,42,539,566,540,0,842,884,843,539,566,540,42,539,538,566,0,842,841,884,539,538,566,42,537,566,538,0,840,884,841,537,566,538,42,537,536,566,0,840,839,884,537,536,566,42,536,535,566,0,839,838,884,536,535,566,42,534,566,535,0,836,876,837,534,566,535,43,181,150,598,567,0,885,886,887,888,157,216,567,568,43,181,567,568,180,0,889,890,891,892,157,568,569,154,43,179,180,568,569,0,893,892,891,894,158,154,569,570,43,179,569,570,178,0,893,894,895,896,158,570,571,160,43,177,178,570,571,0,897,896,895,898,162,160,571,572,43,177,571,572,176,0,897,898,899,900,162,572,573,164,43,175,176,572,573,0,901,900,899,902,166,164,573,574,43,175,573,574,174,0,901,902,903,904,166,574,575,168,43,173,174,574,575,0,905,904,903,906,170,168,575,576,43,173,575,576,172,0,907,908,909,910,170,576,577,172,43,171,172,576,577,0,911,910,909,912,174,172,577,578,43,171,577,578,170,0,911,912,913,914,174,578,579,176,43,169,170,578,579,0,915,914,913,916,178,176,579,580,43,169,579,580,168,0,917,918,919,920,178,580,581,180,43,167,168,580,581,0,921,920,919,922,182,180,581,582,43,167,581,582,166,0,921,922,923,924,182,582,583,184,43,165,166,582,583,0,925,924,923,926,186,184,583,584,43,165,583,584,164,0,925,926,927,928,186,584,585,188,43,163,164,584,585,0,929,928,927,930,190,188,585,586,43,163,585,586,162,0,929,930,931,932,190,586,587,192,43,161,162,586,587,0,933,932,931,934,194,192,587,588,43,161,587,588,160,0,933,934,935,936,194,588,589,196,43,159,160,588,589,0,937,938,939,940,198,196,589,590,43,159,589,590,158,0,937,940,941,942,198,590,591,200,43,158,590,591,157,0,942,941,943,944,200,591,592,202,43,156,157,591,592,0,945,944,943,946,204,202,592,593,43,156,592,593,155,0,945,946,947,948,204,593,594,206,43,154,155,593,594,0,949,948,947,950,208,206,594,595,43,154,594,595,153,0,949,950,951,952,208,595,596,210,43,152,153,595,596,0,953,952,951,954,212,210,596,597,43,151,152,596,597,0,955,956,957,958,214,212,597,598,43,598,150,151,597,0,887,886,955,958,567,216,214,598,43,597,600,599,598,0,958,959,960,887,598,599,600,567,43,597,596,601,600,0,961,954,962,963,598,597,601,599,43,596,595,602,601,0,954,951,964,962,597,596,602,601,43,594,603,602,595,0,950,965,964,951,595,603,602,596,43,594,593,604,603,0,950,947,966,965,595,594,604,603,43,592,605,604,593,0,946,967,966,947,593,605,604,594,43,592,591,606,605,0,946,943,968,967,593,592,606,605,43,590,607,606,591,0,941,969,968,943,591,607,606,592,43,589,608,607,590,0,940,970,969,941,590,608,607,591,43,589,588,609,608,0,971,935,972,973,590,589,609,608,43,587,610,609,588,0,934,974,972,935,588,610,609,589,43,587,586,611,610,0,934,931,975,974,588,587,611,610,43,585,612,611,586,0,930,976,975,931,586,612,611,587,43,585,584,613,612,0,930,927,977,976,586,585,613,612,43,583,614,613,584,0,926,978,977,927,584,614,613,585,43,583,582,615,614,0,926,923,979,978,584,583,615,614,43,581,616,615,582,0,922,980,979,923,582,616,615,583,43,581,580,617,616,0,922,919,981,980,582,581,617,616,43,579,618,617,580,0,916,982,983,984,580,618,617,581,43,579,578,619,618,0,916,913,985,982,580,579,619,618,43,577,620,619,578,0,912,986,985,913,578,620,619,579,43,577,576,621,620,0,912,909,987,986,578,577,621,620,43,575,622,621,576,0,908,988,987,909,576,622,621,577,43,575,574,623,622,0,908,989,990,988,576,575,623,622,43,573,624,623,574,0,991,992,990,989,574,624,623,575,43,573,572,625,624,0,991,993,994,992,574,573,625,624,43,571,626,625,572,0,898,995,996,899,572,626,625,573,43,571,570,627,626,0,898,895,997,995,572,571,627,626,43,569,628,627,570,0,894,998,997,895,570,628,627,571,43,569,568,629,628,0,894,891,999,998,570,569,629,628,43,567,630,629,568,0,890,1000,999,891,568,630,629,569,43,567,598,599,630,0,888,887,960,1001,568,567,600,630,42,630,599,631,0,1001,960,1002,630,600,631,42,630,631,629,0,1000,1003,999,630,631,629,42,628,629,631,0,998,999,1003,628,629,631,42,628,631,627,0,998,1003,997,628,631,627,42,626,627,631,0,995,997,1003,626,627,631,42,626,631,625,0,995,1003,996,626,631,625,42,624,625,631,0,1004,1005,1006,624,625,631,42,624,631,623,0,1007,1008,1009,624,631,623,42,622,623,631,0,1010,1011,1012,622,623,631,42,622,631,621,0,988,1013,987,622,631,621,42,620,621,631,0,986,987,1013,620,621,631,42,620,631,619,0,986,1013,985,620,631,619,42,618,619,631,0,982,985,1013,618,619,631,42,618,631,617,0,1014,1015,1016,618,631,617,42,616,617,631,0,980,981,1017,616,617,631,42,616,631,615,0,980,1017,979,616,631,615,42,614,615,631,0,978,979,1017,614,615,631,42,614,631,613,0,978,1017,977,614,631,613,42,612,613,631,0,976,977,1017,612,613,631,42,612,631,611,0,976,1017,975,612,631,611,42,610,611,631,0,974,975,1017,610,611,631,42,610,631,609,0,974,1017,972,610,631,609,42,608,609,631,0,1018,1019,1020,608,609,631,42,608,631,607,0,970,1021,969,608,631,607,42,607,631,606,0,969,1021,968,607,631,606,42,605,606,631,0,967,968,1021,605,606,631,42,605,631,604,0,967,1021,966,605,631,604,42,603,604,631,0,965,966,1021,603,604,631,42,603,631,602,0,965,1021,964,603,631,602,42,601,602,631,0,962,964,1021,601,602,631,42,600,601,631,0,1022,1023,1024,599,601,631,42,600,631,599,0,959,1002,960,599,631,600]
rocket-3d/web/obj/rocket3d.js:}
rocket-3d/web/obj/rocket3d_flame.js:{
rocket-3d/web/obj/rocket3d_flame.js:    "metadata" :
rocket-3d/web/obj/rocket3d_flame.js:    {
rocket-3d/web/obj/rocket3d_flame.js:        "formatVersion" : 3,
rocket-3d/web/obj/rocket3d_flame.js:        "generatedBy"   : "Blender 2.60 Exporter",
rocket-3d/web/obj/rocket3d_flame.js:        "vertices"      : 323,
rocket-3d/web/obj/rocket3d_flame.js:        "faces"         : 352,
rocket-3d/web/obj/rocket3d_flame.js:        "normals"       : 322,
rocket-3d/web/obj/rocket3d_flame.js:        "colors"        : 0,
rocket-3d/web/obj/rocket3d_flame.js:        "uvs"           : 4,
rocket-3d/web/obj/rocket3d_flame.js:        "materials"     : 1,
rocket-3d/web/obj/rocket3d_flame.js:        "morphTargets"  : 0
rocket-3d/web/obj/rocket3d_flame.js:    },
rocket-3d/web/obj/rocket3d_flame.js:    "scale" : 1.000000,
rocket-3d/web/obj/rocket3d_flame.js:    "materials": [	{
rocket-3d/web/obj/rocket3d_flame.js:	"DbgColor" : 15658734,
rocket-3d/web/obj/rocket3d_flame.js:	"DbgIndex" : 0,
rocket-3d/web/obj/rocket3d_flame.js:	"DbgName" : "default",
rocket-3d/web/obj/rocket3d_flame.js:	"vertexColors" : false
rocket-3d/web/obj/rocket3d_flame.js:	}],
rocket-3d/web/obj/rocket3d_flame.js:    "vertices": [0.000000,-0.037527,-0.167650,0.032707,-0.037527,-0.164429,0.064157,-0.037527,-0.154888,0.093141,-0.037527,-0.139396,0.118546,-0.037527,-0.118546,0.139396,-0.037527,-0.093141,0.154888,-0.037527,-0.064157,0.164428,-0.037527,-0.032707,0.167650,-0.037527,-0.000000,0.164428,-0.037527,0.032707,0.154888,-0.037527,0.064157,0.139396,-0.037527,0.093141,0.118546,-0.037527,0.118546,0.093141,-0.037527,0.139395,0.064157,-0.037527,0.154888,0.032707,-0.037527,0.164428,0.000000,-0.037527,0.167649,-0.032707,-0.037527,0.164428,-0.064157,-0.037527,0.154888,-0.093141,-0.037527,0.139395,-0.118546,-0.037527,0.118546,-0.139396,-0.037527,0.093141,-0.154888,-0.037527,0.064156,-0.164428,-0.037527,0.032706,-0.167650,-0.037527,-0.000000,-0.164428,-0.037527,-0.032707,-0.154888,-0.037527,-0.064157,-0.139395,-0.037527,-0.093142,-0.118546,-0.037527,-0.118547,-0.093141,-0.037527,-0.139396,-0.064156,-0.037527,-0.154888,-0.032706,-0.037527,-0.164429,-0.057938,-0.137937,-0.291275,-0.113649,-0.137937,-0.274375,-0.164994,-0.137937,-0.246931,-0.209997,-0.137937,-0.209998,-0.246931,-0.137937,-0.164994,-0.274375,-0.137937,-0.113650,-0.291275,-0.137937,-0.057939,-0.296981,-0.137937,-0.000000,-0.291275,-0.137937,0.057938,-0.274375,-0.137937,0.113649,-0.246931,-0.137937,0.164994,-0.209997,-0.137937,0.209997,-0.164994,-0.137937,0.246931,-0.113650,-0.137937,0.274375,-0.057938,-0.137937,0.291275,-0.000000,-0.137937,0.296981,0.057938,-0.137937,0.291275,0.113650,-0.137937,0.274375,0.164994,-0.137937,0.246931,0.209998,-0.137937,0.209997,0.246931,-0.137937,0.164994,0.274375,-0.137937,0.113650,0.291275,-0.137937,0.057938,0.296981,-0.137937,-0.000000,0.291275,-0.137937,-0.057938,0.274375,-0.137937,-0.113650,0.246931,-0.137937,-0.164994,0.209998,-0.137937,-0.209998,0.164994,-0.137937,-0.246931,0.113650,-0.137937,-0.274375,0.057938,-0.137937,-0.291275,0.000000,-0.137937,-0.296981,0.000000,-0.266953,-0.360426,0.070316,-0.266953,-0.353500,0.137929,-0.266953,-0.332990,0.200242,-0.266953,-0.299683,0.254859,-0.266953,-0.254860,0.299683,-0.266953,-0.200242,0.332990,-0.266953,-0.137929,0.353500,-0.266953,-0.070316,0.360426,-0.266953,-0.000000,0.353500,-0.266953,0.070315,0.332990,-0.266953,0.137929,0.299683,-0.266953,0.200242,0.254859,-0.266953,0.254859,0.200242,-0.266953,0.299683,0.137929,-0.266953,0.332990,0.070316,-0.266953,0.353500,-0.000000,-0.266953,0.360425,-0.070316,-0.266953,0.353500,-0.137929,-0.266953,0.332990,-0.200242,-0.266953,0.299683,-0.254859,-0.266953,0.254859,-0.299683,-0.266953,0.200241,-0.332990,-0.266953,0.137928,-0.353500,-0.266953,0.070315,-0.360425,-0.266953,-0.000001,-0.353500,-0.266953,-0.070316,-0.332990,-0.266953,-0.137929,-0.299683,-0.266953,-0.200242,-0.254859,-0.266953,-0.254860,-0.200241,-0.266953,-0.299683,-0.137928,-0.266953,-0.332990,-0.070315,-0.266953,-0.353500,-0.070336,-0.419720,-0.353607,-0.137970,-0.419720,-0.333090,-0.200301,-0.419720,-0.299773,-0.254936,-0.419720,-0.254936,-0.299773,-0.419720,-0.200302,-0.333090,-0.419720,-0.137971,-0.353606,-0.419720,-0.070337,-0.360534,-0.419720,-0.000001,-0.353606,-0.419720,0.070336,-0.333090,-0.419720,0.137970,-0.299773,-0.419720,0.200302,-0.254936,-0.419720,0.254936,-0.200302,-0.419720,0.299773,-0.137970,-0.419720,0.333090,-0.070337,-0.419720,0.353606,-0.000000,-0.419720,0.360534,0.070337,-0.419720,0.353606,0.137970,-0.419720,0.333090,0.200302,-0.419720,0.299773,0.254936,-0.419720,0.254936,0.299773,-0.419720,0.200302,0.333090,-0.419720,0.137970,0.353607,-0.419720,0.070336,0.360534,-0.419720,-0.000000,0.353607,-0.419720,-0.070337,0.333090,-0.419720,-0.137970,0.299773,-0.419720,-0.200302,0.254936,-0.419720,-0.254936,0.200302,-0.419720,-0.299773,0.137970,-0.419720,-0.333090,0.070337,-0.419720,-0.353606,0.000000,-0.419720,-0.360534,0.000000,-0.535248,-0.333287,0.065021,-0.535248,-0.326883,0.127543,-0.535248,-0.307917,0.185164,-0.535248,-0.277118,0.235669,-0.535248,-0.235669,0.277118,-0.535248,-0.185164,0.307917,-0.535248,-0.127543,0.326883,-0.535248,-0.065021,0.333287,-0.535248,-0.000000,0.326883,-0.535248,0.065021,0.307917,-0.535248,0.127543,0.277118,-0.535248,0.185164,0.235669,-0.535248,0.235669,0.185164,-0.535248,0.277117,0.127543,-0.535248,0.307916,0.065021,-0.535248,0.326882,-0.000000,-0.535248,0.333286,-0.065021,-0.535248,0.326882,-0.127543,-0.535248,0.307916,-0.185164,-0.535248,0.277117,-0.235669,-0.535248,0.235669,-0.277118,-0.535248,0.185164,-0.307917,-0.535248,0.127543,-0.326882,-0.535248,0.065021,-0.333286,-0.535248,-0.000000,-0.326882,-0.535248,-0.065021,-0.307916,-0.535248,-0.127544,-0.277117,-0.535248,-0.185165,-0.235669,-0.535248,-0.235670,-0.185164,-0.535248,-0.277118,-0.127543,-0.535248,-0.307917,-0.065020,-0.535248,-0.326883,-0.044536,-0.737134,-0.223902,-0.087362,-0.737134,-0.210912,-0.126830,-0.737134,-0.189815,-0.161424,-0.737134,-0.161425,-0.189815,-0.737134,-0.126831,-0.210911,-0.737134,-0.087363,-0.223902,-0.737134,-0.044537,-0.228289,-0.737134,-0.000000,-0.223902,-0.737134,0.044537,-0.210911,-0.737134,0.087362,-0.189815,-0.737134,0.126830,-0.161424,-0.737134,0.161424,-0.126830,-0.737134,0.189815,-0.087362,-0.737134,0.210911,-0.044537,-0.737134,0.223902,0.000000,-0.737134,0.228288,0.044537,-0.737134,0.223902,0.087362,-0.737134,0.210911,0.126830,-0.737134,0.189815,0.161425,-0.737134,0.161424,0.189815,-0.737134,0.126830,0.210911,-0.737134,0.087362,0.223902,-0.737134,0.044537,0.228289,-0.737134,-0.000000,0.223902,-0.737134,-0.044537,0.210911,-0.737134,-0.087362,0.189815,-0.737134,-0.126831,0.161425,-0.737134,-0.161425,0.126831,-0.737134,-0.189815,0.087362,-0.737134,-0.210911,0.044537,-0.737134,-0.223902,0.000000,-0.737134,-0.228289,0.000000,-0.882886,-0.162624,0.031726,-0.882886,-0.159499,0.062234,-0.882886,-0.150245,0.090349,-0.882886,-0.135217,0.114993,-0.882886,-0.114993,0.135217,-0.882886,-0.090349,0.150245,-0.882886,-0.062234,0.159499,-0.882886,-0.031727,0.162624,-0.882886,-0.000000,0.159499,-0.882886,0.031726,0.150245,-0.882886,0.062233,0.135217,-0.882886,0.090349,0.114993,-0.882886,0.114992,0.090349,-0.882886,0.135217,0.062234,-0.882886,0.150245,0.031726,-0.882886,0.159499,0.000000,-0.882886,0.162624,-0.031726,-0.882886,0.159499,-0.062233,-0.882886,0.150245,-0.090349,-0.882886,0.135217,-0.114992,-0.882886,0.114992,-0.135217,-0.882886,0.090349,-0.150245,-0.882886,0.062233,-0.159499,-0.882886,0.031726,-0.162624,-0.882886,-0.000000,-0.159499,-0.882886,-0.031727,-0.150245,-0.882886,-0.062234,-0.135217,-0.882886,-0.090349,-0.114992,-0.882886,-0.114993,-0.090349,-0.882886,-0.135217,-0.062233,-0.882886,-0.150245,-0.031726,-0.882886,-0.159499,-0.019162,-1.061026,-0.096336,-0.037588,-1.061026,-0.090747,-0.054570,-1.061026,-0.081670,-0.069454,-1.061026,-0.069455,-0.081670,-1.061026,-0.054570,-0.090747,-1.061026,-0.037589,-0.096336,-1.061026,-0.019163,-0.098223,-1.061026,-0.000000,-0.096336,-1.061026,0.019162,-0.090747,-1.061026,0.037588,-0.081670,-1.061026,0.054570,-0.069454,-1.061026,0.069454,-0.054570,-1.061026,0.081670,-0.037588,-1.061026,0.090747,-0.019162,-1.061026,0.096336,0.000000,-1.061026,0.098223,0.019163,-1.061026,0.096336,0.037589,-1.061026,0.090747,0.054570,-1.061026,0.081670,0.069455,-1.061026,0.069454,0.081670,-1.061026,0.054570,0.090747,-1.061026,0.037588,0.096336,-1.061026,0.019162,0.098224,-1.061026,-0.000000,0.096336,-1.061026,-0.019163,0.090747,-1.061026,-0.037589,0.081670,-1.061026,-0.054570,0.069455,-1.061026,-0.069455,0.054570,-1.061026,-0.081670,0.037589,-1.061026,-0.090747,0.019163,-1.061026,-0.096336,0.000000,-1.061026,-0.098224,0.000000,-1.333085,-0.027313,0.005329,-1.333085,-0.026789,0.010452,-1.333085,-0.025234,0.015175,-1.333085,-0.022710,0.019313,-1.333085,-0.019314,0.022710,-1.333085,-0.015175,0.025234,-1.333085,-0.010453,0.026789,-1.333085,-0.005329,0.027313,-1.333085,-0.000000,0.026789,-1.333085,0.005328,0.025234,-1.333085,0.010452,0.022710,-1.333085,0.015174,0.019313,-1.333085,0.019313,0.015175,-1.333085,0.022710,0.010452,-1.333085,0.025234,0.005329,-1.333085,0.026788,0.000000,-1.333085,0.027313,-0.005328,-1.333085,0.026788,-0.010452,-1.333085,0.025234,-0.015174,-1.333085,0.022710,-0.019313,-1.333085,0.019313,-0.022710,-1.333085,0.015174,-0.025234,-1.333085,0.010452,-0.026788,-1.333085,0.005328,-0.027313,-1.333085,-0.000000,-0.026788,-1.333085,-0.005329,-0.025234,-1.333085,-0.010453,-0.022710,-1.333085,-0.015175,-0.019313,-1.333085,-0.019314,-0.015174,-1.333085,-0.022710,-0.010452,-1.333085,-0.025234,-0.005328,-1.333085,-0.026789,0.000000,-1.485314,-0.000000,0.000000,-0.553369,-0.000000,-0.011340,-0.009057,-0.057014,-0.022245,-0.009057,-0.053706,-0.032295,-0.009057,-0.048334,-0.041104,-0.009057,-0.041105,-0.048333,-0.009057,-0.032296,-0.053705,-0.009057,-0.022246,-0.057013,-0.009057,-0.011341,-0.058130,-0.009057,-0.000000,-0.057013,-0.009057,0.011340,-0.053705,-0.009057,0.022245,-0.048334,-0.009057,0.032295,-0.041104,-0.009057,0.041104,-0.032295,-0.009057,0.048333,-0.022245,-0.009057,0.053705,-0.011341,-0.009057,0.057013,0.000000,-0.009057,0.058130,0.011341,-0.009057,0.057013,0.022246,-0.009057,0.053705,0.032296,-0.009057,0.048333,0.041104,-0.009057,0.041104,0.048334,-0.009057,0.032295,0.053706,-0.009057,0.022245,0.057014,-0.009057,0.011340,0.058130,-0.009057,-0.000000,0.057014,-0.009057,-0.011341,0.053706,-0.009057,-0.022246,0.048334,-0.009057,-0.032296,0.041104,-0.009057,-0.041105,0.032296,-0.009057,-0.048334,0.022246,-0.009057,-0.053706,0.011341,-0.009057,-0.057014,0.000000,-0.009057,-0.058131,0.000000,-0.000832,-0.000000],
rocket-3d/web/obj/rocket3d_flame.js:    "morphTargets": [],
rocket-3d/web/obj/rocket3d_flame.js:    "normals": [0.000000,0.892239,-0.451491,0.000000,0.624958,-0.780633,-0.152287,0.624958,-0.765618,-0.088076,0.892239,-0.442824,-0.298715,0.624958,-0.721213,-0.172765,0.892239,-0.417127,-0.250832,0.892239,-0.375408,-0.433699,0.624958,-0.649068,-0.319254,0.892239,-0.319254,-0.551988,0.624958,-0.551988,-0.375408,0.892239,-0.250832,-0.649068,0.624958,-0.433699,-0.417127,0.892239,-0.172765,-0.721213,0.624958,-0.298715,-0.442824,0.892239,-0.088076,-0.765618,0.624958,-0.152287,-0.451491,0.892239,0.000000,-0.780633,0.624958,0.000000,-0.442824,0.892239,0.088076,-0.765618,0.624958,0.152287,-0.417127,0.892239,0.172765,-0.721213,0.624958,0.298715,-0.375408,0.892239,0.250832,-0.649068,0.624958,0.433699,-0.319254,0.892239,0.319254,-0.551988,0.624958,0.551988,-0.250832,0.892239,0.375408,-0.433699,0.624958,0.649068,-0.172765,0.892239,0.417127,-0.298715,0.624958,0.721213,-0.088076,0.892239,0.442824,-0.152287,0.624958,0.765618,0.000000,0.892239,0.451491,0.000000,0.624958,0.780633,0.088076,0.892239,0.442824,0.152287,0.624958,0.765618,0.172765,0.892239,0.417127,0.298715,0.624958,0.721213,0.250832,0.892239,0.375408,0.433699,0.624958,0.649068,0.319254,0.892239,0.319254,0.551988,0.624958,0.551988,0.375408,0.892239,0.250832,0.649068,0.624958,0.433699,0.417127,0.892239,0.172765,0.721213,0.624958,0.298715,0.442824,0.892239,0.088076,0.765618,0.624958,0.152287,0.780633,0.624958,0.000000,0.451491,0.892239,0.000000,0.765618,0.624958,-0.152287,0.442824,0.892239,-0.088076,0.417127,0.892239,-0.172765,0.721213,0.624958,-0.298715,0.375408,0.892239,-0.250832,0.649068,0.624958,-0.433699,0.319254,0.892239,-0.319254,0.551988,0.624958,-0.551988,0.433699,0.624958,-0.649068,0.250832,0.892239,-0.375408,0.172765,0.892239,-0.417127,0.298715,0.624958,-0.721213,0.088076,0.892239,-0.442824,0.152287,0.624958,-0.765618,0.190130,0.223792,-0.955901,0.000000,0.223792,-0.974609,0.372967,0.223792,-0.900418,0.541459,0.223792,-0.810358,0.689138,0.223792,-0.689138,0.810358,0.223792,-0.541459,0.900418,0.223792,-0.372967,0.955901,0.223792,-0.190130,0.974609,0.223792,0.000000,0.955901,0.223792,0.190130,0.900418,0.223792,0.372967,0.810358,0.223792,0.541459,0.689138,0.223792,0.689138,0.541459,0.223792,0.810358,0.372967,0.223792,0.900418,0.190130,0.223792,0.955901,0.000000,0.223792,0.974609,-0.190130,0.223792,0.955901,-0.372967,0.223792,0.900418,-0.541459,0.223792,0.810358,-0.689138,0.223792,0.689138,-0.810358,0.223792,0.541459,-0.900418,0.223792,0.372967,-0.955901,0.223792,0.190130,-0.974609,0.223792,0.000000,-0.955901,0.223792,-0.190130,-0.900418,0.223792,-0.372967,-0.810358,0.223792,-0.541459,-0.689138,0.223792,-0.689138,-0.541459,0.223792,-0.810358,-0.372967,0.223792,-0.900418,-0.190130,0.223792,-0.955901,0.000000,-0.114353,-0.993408,-0.193793,-0.114353,-0.974334,-0.380169,-0.114353,-0.917814,-0.551897,-0.114353,-0.825983,-0.702445,-0.114353,-0.702445,-0.825983,-0.114353,-0.551897,-0.917814,-0.114353,-0.380169,-0.974334,-0.114353,-0.193793,-0.993408,-0.114353,0.000000,-0.974334,-0.114353,0.193793,-0.917814,-0.114353,0.380169,-0.825983,-0.114353,0.551897,-0.702445,-0.114353,0.702445,-0.551897,-0.114353,0.825983,-0.380169,-0.114353,0.917814,-0.193793,-0.114353,0.974334,0.000000,-0.114353,0.993408,0.193793,-0.114353,0.974334,0.380169,-0.114353,0.917814,0.551897,-0.114353,0.825983,0.702445,-0.114353,0.702445,0.825983,-0.114353,0.551897,0.917814,-0.114353,0.380169,0.974334,-0.114353,0.193793,0.993408,-0.114353,0.000000,0.974334,-0.114353,-0.193793,0.917814,-0.114353,-0.380169,0.825983,-0.114353,-0.551897,0.702445,-0.114353,-0.702445,0.551897,-0.114353,-0.825983,0.380169,-0.114353,-0.917814,0.193793,-0.114353,-0.974334,0.183050,-0.345653,-0.920316,0.000000,-0.345653,-0.938353,0.359081,-0.345653,-0.866909,0.521317,-0.345653,-0.780206,0.663503,-0.345653,-0.663503,0.780206,-0.345653,-0.521317,0.866909,-0.345653,-0.359081,0.920316,-0.345653,-0.183050,0.938353,-0.345653,0.000000,0.920316,-0.345653,0.183050,0.866909,-0.345653,0.359081,0.780206,-0.345653,0.521317,0.663503,-0.345653,0.663503,0.521317,-0.345653,0.780206,0.359081,-0.345653,0.866909,0.183050,-0.345653,0.920316,0.000000,-0.345653,0.938353,-0.183050,-0.345653,0.920316,-0.359081,-0.345653,0.866909,-0.521317,-0.345653,0.780206,-0.663503,-0.345653,0.663503,-0.780206,-0.345653,0.521317,-0.866909,-0.345653,0.359081,-0.920316,-0.345653,0.183050,-0.938353,-0.345653,0.000000,-0.920316,-0.345653,-0.183050,-0.866909,-0.345653,-0.359081,-0.780206,-0.345653,-0.521317,-0.663503,-0.345653,-0.663503,-0.521317,-0.345653,-0.780206,-0.359081,-0.345653,-0.866909,-0.183050,-0.345653,-0.920316,0.000000,-0.436933,-0.899472,-0.175451,-0.436933,-0.882199,-0.344188,-0.436933,-0.830988,-0.499710,-0.436933,-0.747887,-0.636006,-0.436933,-0.636006,-0.747887,-0.436933,-0.499710,-0.830988,-0.436933,-0.344218,-0.882199,-0.436933,-0.175481,-0.899472,-0.436933,0.000000,-0.882199,-0.436933,0.175451,-0.830988,-0.436933,0.344188,-0.747887,-0.436933,0.499710,-0.636006,-0.436933,0.636006,-0.499710,-0.436933,0.747887,-0.344218,-0.436933,0.830988,-0.175451,-0.436933,0.882199,0.000000,-0.436933,0.899472,0.175451,-0.436933,0.882199,0.344188,-0.436933,0.830988,0.499710,-0.436933,0.747887,0.636006,-0.436933,0.636006,0.747887,-0.436933,0.499710,0.830988,-0.436933,0.344218,0.882199,-0.436933,0.175451,0.899472,-0.436933,0.000000,0.882199,-0.436933,-0.175451,0.830988,-0.436933,-0.344218,0.747887,-0.436933,-0.499710,0.636006,-0.436933,-0.636006,0.499710,-0.436933,-0.747887,0.344188,-0.436933,-0.830988,0.175451,-0.436933,-0.882199,0.180731,-0.376476,-0.908597,0.000000,-0.376476,-0.926420,0.354503,-0.376476,-0.855892,0.514695,-0.376476,-0.770287,0.655080,-0.376476,-0.655080,0.770287,-0.376476,-0.514695,0.855892,-0.376476,-0.354503,0.908597,-0.376476,-0.180731,0.926420,-0.376476,0.000000,0.908597,-0.376476,0.180731,0.855892,-0.376476,0.354503,0.770287,-0.376476,0.514695,0.655080,-0.376476,0.655080,0.514695,-0.376476,0.770287,0.354503,-0.376476,0.855892,0.180731,-0.376476,0.908597,0.000000,-0.376476,0.926420,-0.180731,-0.376476,0.908597,-0.354503,-0.376476,0.855892,-0.514695,-0.376476,0.770287,-0.655080,-0.376476,0.655080,-0.770287,-0.376476,0.514664,-0.855892,-0.376476,0.354503,-0.908597,-0.376476,0.180731,-0.926420,-0.376476,0.000000,-0.908597,-0.376476,-0.180731,-0.855892,-0.376476,-0.354503,-0.770287,-0.376476,-0.514695,-0.655080,-0.376476,-0.655080,-0.514664,-0.376476,-0.770287,-0.354503,-0.376476,-0.855892,-0.180731,-0.376476,-0.908597,0.000000,-0.297220,-0.954802,-0.186254,-0.297220,-0.936460,-0.365368,-0.297220,-0.882107,-0.530442,-0.297220,-0.793878,-0.675130,-0.297220,-0.675130,-0.793878,-0.297220,-0.530442,-0.882107,-0.297220,-0.365368,-0.936460,-0.297220,-0.186254,-0.954802,-0.297220,0.000000,-0.936460,-0.297220,0.186254,-0.882107,-0.297220,0.365368,-0.793878,-0.297220,0.530442,-0.675130,-0.297220,0.675130,-0.530442,-0.297220,0.793878,-0.365368,-0.297220,0.882107,-0.186254,-0.297220,0.936460,0.000000,-0.297220,0.954802,0.186254,-0.297220,0.936460,0.365368,-0.297220,0.882107,0.530442,-0.297220,0.793878,0.675130,-0.297220,0.675130,0.793878,-0.297220,0.530442,0.882107,-0.297220,0.365368,0.936460,-0.297220,0.186254,0.954802,-0.297220,0.000000,0.936460,-0.297220,-0.186254,0.882107,-0.297220,-0.365368,0.793878,-0.297220,-0.530442,0.675130,-0.297220,-0.675130,0.530442,-0.297220,-0.793878,0.365368,-0.297220,-0.882107,0.186254,-0.297220,-0.936460,0.190497,-0.215064,-0.957823,0.000000,-0.215064,-0.976592,0.373699,-0.215064,-0.902249,0.542558,-0.215064,-0.812006,0.690542,-0.215064,-0.690542,0.812006,-0.215064,-0.542558,0.902249,-0.215064,-0.373699,0.957823,-0.215064,-0.190497,0.976592,-0.215064,0.000000,0.957823,-0.215064,0.190497,0.902249,-0.215064,0.373699,0.812006,-0.215064,0.542558,0.690542,-0.215064,0.690542,0.542558,-0.215064,0.812006,0.373699,-0.215064,0.902249,0.190497,-0.215064,0.957823,0.000000,-0.215064,0.976592,-0.190497,-0.215064,0.957823,-0.373699,-0.215064,0.902249,-0.542558,-0.215064,0.812006,-0.690542,-0.215064,0.690542,-0.812006,-0.215064,0.542558,-0.902249,-0.215064,0.373699,-0.957823,-0.215064,0.190497,-0.976592,-0.215064,0.000000,-0.957823,-0.215064,-0.190497,-0.902249,-0.215064,-0.373699,-0.812006,-0.215064,-0.542558,-0.690542,-0.215064,-0.690542,-0.542558,-0.215064,-0.812006,-0.373699,-0.215064,-0.902249,-0.190497,-0.215064,-0.957823,0.000000,-1.000000,0.000000,0.000000,0.979858,-0.199561,-0.038911,0.979858,-0.195715,-0.076357,0.979858,-0.184362,-0.110874,0.979858,-0.165929,-0.141118,0.979858,-0.141118,-0.165929,0.979858,-0.110874,-0.184362,0.979858,-0.076357,-0.195715,0.979858,-0.038911,-0.199561,0.979858,0.000000,-0.195715,0.979858,0.038911,-0.184362,0.979858,0.076357,-0.165929,0.979858,0.110874,-0.141118,0.979858,0.141118,-0.110874,0.979858,0.165929,-0.076357,0.979858,0.184362,-0.038911,0.979858,0.195715,0.000000,0.979858,0.199561,0.038911,0.979858,0.195715,0.076357,0.979858,0.184362,0.110874,0.979858,0.165929,0.141118,0.979858,0.141118,0.165929,0.979858,0.110874,0.184362,0.979858,0.076357,0.195715,0.979858,0.038911,0.199561,0.979858,0.000000,0.195715,0.979858,-0.038911,0.184362,0.979858,-0.076357,0.165929,0.979858,-0.110874,0.141118,0.979858,-0.141118,0.110874,0.979858,-0.165929,0.076357,0.979858,-0.184362,0.038911,0.979858,-0.195715,0.000000,0.999969,0.000000],
rocket-3d/web/obj/rocket3d_flame.js:    "colors": [],
rocket-3d/web/obj/rocket3d_flame.js:    "uvs": [[0.000000,1.000000,1.000000,1.000000,1.000000,0.000000,0.000000,0.000000]],
rocket-3d/web/obj/rocket3d_flame.js:    "faces": [43,0,63,32,31,0,0,1,2,3,0,1,2,3,43,31,32,33,30,0,0,1,2,3,3,2,4,5,43,29,30,33,34,0,0,1,2,3,6,5,4,7,43,28,29,34,35,0,0,1,2,3,8,6,7,9,43,27,28,35,36,0,0,1,2,3,10,8,9,11,43,26,27,36,37,0,0,1,2,3,12,10,11,13,43,25,26,37,38,0,0,1,2,3,14,12,13,15,43,24,25,38,39,0,0,1,2,3,16,14,15,17,43,23,24,39,40,0,0,1,2,3,18,16,17,19,43,22,23,40,41,0,0,1,2,3,20,18,19,21,43,21,22,41,42,0,0,1,2,3,22,20,21,23,43,20,21,42,43,0,0,1,2,3,24,22,23,25,43,19,20,43,44,0,0,1,2,3,26,24,25,27,43,18,19,44,45,0,0,1,2,3,28,26,27,29,43,17,18,45,46,0,0,1,2,3,30,28,29,31,43,16,17,46,47,0,0,1,2,3,32,30,31,33,43,15,16,47,48,0,0,1,2,3,34,32,33,35,43,14,15,48,49,0,0,1,2,3,36,34,35,37,43,13,14,49,50,0,0,1,2,3,38,36,37,39,43,12,13,50,51,0,0,1,2,3,40,38,39,41,43,11,12,51,52,0,0,1,2,3,42,40,41,43,43,10,11,52,53,0,0,1,2,3,44,42,43,45,43,9,10,53,54,0,0,1,2,3,46,44,45,47,43,9,54,55,8,0,0,1,2,3,46,47,48,49,43,8,55,56,7,0,0,1,2,3,49,48,50,51,43,6,7,56,57,0,0,1,2,3,52,51,50,53,43,5,6,57,58,0,0,1,2,3,54,52,53,55,43,4,5,58,59,0,0,1,2,3,56,54,55,57,43,4,59,60,3,0,0,1,2,3,56,57,58,59,43,2,3,60,61,0,0,1,2,3,60,59,58,61,43,1,2,61,62,0,0,1,2,3,62,60,61,63,43,0,1,62,63,0,0,1,2,3,0,62,63,1,43,63,62,65,64,0,0,1,2,3,1,63,64,65,43,62,61,66,65,0,0,1,2,3,63,61,66,64,43,61,60,67,66,0,0,1,2,3,61,58,67,66,43,59,68,67,60,0,0,1,2,3,57,68,67,58,43,59,58,69,68,0,0,1,2,3,57,55,69,68,43,58,57,70,69,0,0,1,2,3,55,53,70,69,43,57,56,71,70,0,0,1,2,3,53,50,71,70,43,55,72,71,56,0,0,1,2,3,48,72,71,50,43,54,73,72,55,0,0,1,2,3,47,73,72,48,43,54,53,74,73,0,0,1,2,3,47,45,74,73,43,53,52,75,74,0,0,1,2,3,45,43,75,74,43,52,51,76,75,0,0,1,2,3,43,41,76,75,43,51,50,77,76,0,0,1,2,3,41,39,77,76,43,50,49,78,77,0,0,1,2,3,39,37,78,77,43,49,48,79,78,0,0,1,2,3,37,35,79,78,43,48,47,80,79,0,0,1,2,3,35,33,80,79,43,47,46,81,80,0,0,1,2,3,33,31,81,80,43,46,45,82,81,0,0,1,2,3,31,29,82,81,43,45,44,83,82,0,0,1,2,3,29,27,83,82,43,44,43,84,83,0,0,1,2,3,27,25,84,83,43,43,42,85,84,0,0,1,2,3,25,23,85,84,43,42,41,86,85,0,0,1,2,3,23,21,86,85,43,41,40,87,86,0,0,1,2,3,21,19,87,86,43,40,39,88,87,0,0,1,2,3,19,17,88,87,43,39,38,89,88,0,0,1,2,3,17,15,89,88,43,38,37,90,89,0,0,1,2,3,15,13,90,89,43,37,36,91,90,0,0,1,2,3,13,11,91,90,43,36,35,92,91,0,0,1,2,3,11,9,92,91,43,35,34,93,92,0,0,1,2,3,9,7,93,92,43,34,33,94,93,0,0,1,2,3,7,4,94,93,43,32,95,94,33,0,0,1,2,3,2,95,94,4,43,63,64,95,32,0,0,1,2,3,1,65,95,2,43,64,127,96,95,0,0,1,2,3,65,96,97,95,43,95,96,97,94,0,0,1,2,3,95,97,98,94,43,93,94,97,98,0,0,1,2,3,93,94,98,99,43,92,93,98,99,0,0,1,2,3,92,93,99,100,43,91,92,99,100,0,0,1,2,3,91,92,100,101,43,90,91,100,101,0,0,1,2,3,90,91,101,102,43,89,90,101,102,0,0,1,2,3,89,90,102,103,43,88,89,102,103,0,0,1,2,3,88,89,103,104,43,87,88,103,104,0,0,1,2,3,87,88,104,105,43,86,87,104,105,0,0,1,2,3,86,87,105,106,43,85,86,105,106,0,0,1,2,3,85,86,106,107,43,84,85,106,107,0,0,1,2,3,84,85,107,108,43,83,84,107,108,0,0,1,2,3,83,84,108,109,43,82,83,108,109,0,0,1,2,3,82,83,109,110,43,81,82,109,110,0,0,1,2,3,81,82,110,111,43,80,81,110,111,0,0,1,2,3,80,81,111,112,43,79,80,111,112,0,0,1,2,3,79,80,112,113,43,78,79,112,113,0,0,1,2,3,78,79,113,114,43,77,78,113,114,0,0,1,2,3,77,78,114,115,43,76,77,114,115,0,0,1,2,3,76,77,115,116,43,75,76,115,116,0,0,1,2,3,75,76,116,117,43,74,75,116,117,0,0,1,2,3,74,75,117,118,43,73,74,117,118,0,0,1,2,3,73,74,118,119,43,73,118,119,72,0,0,1,2,3,73,119,120,72,43,72,119,120,71,0,0,1,2,3,72,120,121,71,43,70,71,120,121,0,0,1,2,3,70,71,121,122,43,69,70,121,122,0,0,1,2,3,69,70,122,123,43,68,69,122,123,0,0,1,2,3,68,69,123,124,43,68,123,124,67,0,0,1,2,3,68,124,125,67,43,66,67,124,125,0,0,1,2,3,66,67,125,126,43,65,66,125,126,0,0,1,2,3,64,66,126,127,43,64,65,126,127,0,0,1,2,3,65,64,127,96,43,127,126,129,128,0,0,1,2,3,96,127,128,129,43,126,125,130,129,0,0,1,2,3,127,126,130,128,43,125,124,131,130,0,0,1,2,3,126,125,131,130,43,123,132,131,124,0,0,1,2,3,124,132,131,125,43,123,122,133,132,0,0,1,2,3,124,123,133,132,43,122,121,134,133,0,0,1,2,3,123,122,134,133,43,121,120,135,134,0,0,1,2,3,122,121,135,134,43,119,136,135,120,0,0,1,2,3,120,136,135,121,43,118,137,136,119,0,0,1,2,3,119,137,136,120,43,118,117,138,137,0,0,1,2,3,119,118,138,137,43,117,116,139,138,0,0,1,2,3,118,117,139,138,43,116,115,140,139,0,0,1,2,3,117,116,140,139,43,115,114,141,140,0,0,1,2,3,116,115,141,140,43,114,113,142,141,0,0,1,2,3,115,114,142,141,43,113,112,143,142,0,0,1,2,3,114,113,143,142,43,112,111,144,143,0,0,1,2,3,113,112,144,143,43,111,110,145,144,0,0,1,2,3,112,111,145,144,43,110,109,146,145,0,0,1,2,3,111,110,146,145,43,109,108,147,146,0,0,1,2,3,110,109,147,146,43,108,107,148,147,0,0,1,2,3,109,108,148,147,43,107,106,149,148,0,0,1,2,3,108,107,149,148,43,106,105,150,149,0,0,1,2,3,107,106,150,149,43,105,104,151,150,0,0,1,2,3,106,105,151,150,43,104,103,152,151,0,0,1,2,3,105,104,152,151,43,103,102,153,152,0,0,1,2,3,104,103,153,152,43,102,101,154,153,0,0,1,2,3,103,102,154,153,43,101,100,155,154,0,0,1,2,3,102,101,155,154,43,100,99,156,155,0,0,1,2,3,101,100,156,155,43,99,98,157,156,0,0,1,2,3,100,99,157,156,43,98,97,158,157,0,0,1,2,3,99,98,158,157,43,96,159,158,97,0,0,1,2,3,97,159,158,98,43,127,128,159,96,0,0,1,2,3,96,129,159,97,43,128,191,160,159,0,0,1,2,3,129,160,161,159,43,159,160,161,158,0,0,1,2,3,159,161,162,158,43,157,158,161,162,0,0,1,2,3,157,158,162,163,43,156,157,162,163,0,0,1,2,3,156,157,163,164,43,155,156,163,164,0,0,1,2,3,155,156,164,165,43,154,155,164,165,0,0,1,2,3,154,155,165,166,43,153,154,165,166,0,0,1,2,3,153,154,166,167,43,152,153,166,167,0,0,1,2,3,152,153,167,168,43,151,152,167,168,0,0,1,2,3,151,152,168,169,43,150,151,168,169,0,0,1,2,3,150,151,169,170,43,149,150,169,170,0,0,1,2,3,149,150,170,171,43,148,149,170,171,0,0,1,2,3,148,149,171,172,43,147,148,171,172,0,0,1,2,3,147,148,172,173,43,146,147,172,173,0,0,1,2,3,146,147,173,174,43,145,146,173,174,0,0,1,2,3,145,146,174,175,43,144,145,174,175,0,0,1,2,3,144,145,175,176,43,143,144,175,176,0,0,1,2,3,143,144,176,177,43,142,143,176,177,0,0,1,2,3,142,143,177,178,43,141,142,177,178,0,0,1,2,3,141,142,178,179,43,140,141,178,179,0,0,1,2,3,140,141,179,180,43,139,140,179,180,0,0,1,2,3,139,140,180,181,43,138,139,180,181,0,0,1,2,3,138,139,181,182,43,137,138,181,182,0,0,1,2,3,137,138,182,183,43,137,182,183,136,0,0,1,2,3,137,183,184,136,43,136,183,184,135,0,0,1,2,3,136,184,185,135,43,134,135,184,185,0,0,1,2,3,134,135,185,186,43,133,134,185,186,0,0,1,2,3,133,134,186,187,43,132,133,186,187,0,0,1,2,3,132,133,187,188,43,132,187,188,131,0,0,1,2,3,132,188,189,131,43,130,131,188,189,0,0,1,2,3,130,131,189,190,43,129,130,189,190,0,0,1,2,3,128,130,190,191,43,128,129,190,191,0,0,1,2,3,129,128,191,160,43,191,190,193,192,0,0,1,2,3,160,191,192,193,43,190,189,194,193,0,0,1,2,3,191,190,194,192,43,189,188,195,194,0,0,1,2,3,190,189,195,194,43,187,196,195,188,0,0,1,2,3,188,196,195,189,43,187,186,197,196,0,0,1,2,3,188,187,197,196,43,186,185,198,197,0,0,1,2,3,187,186,198,197,43,185,184,199,198,0,0,1,2,3,186,185,199,198,43,183,200,199,184,0,0,1,2,3,184,200,199,185,43,182,201,200,183,0,0,1,2,3,183,201,200,184,43,182,181,202,201,0,0,1,2,3,183,182,202,201,43,181,180,203,202,0,0,1,2,3,182,181,203,202,43,180,179,204,203,0,0,1,2,3,181,180,204,203,43,179,178,205,204,0,0,1,2,3,180,179,205,204,43,178,177,206,205,0,0,1,2,3,179,178,206,205,43,177,176,207,206,0,0,1,2,3,178,177,207,206,43,176,175,208,207,0,0,1,2,3,177,176,208,207,43,175,174,209,208,0,0,1,2,3,176,175,209,208,43,174,173,210,209,0,0,1,2,3,175,174,210,209,43,173,172,211,210,0,0,1,2,3,174,173,211,210,43,172,171,212,211,0,0,1,2,3,173,172,212,211,43,171,170,213,212,0,0,1,2,3,172,171,213,212,43,170,169,214,213,0,0,1,2,3,171,170,214,213,43,169,168,215,214,0,0,1,2,3,170,169,215,214,43,168,167,216,215,0,0,1,2,3,169,168,216,215,43,167,166,217,216,0,0,1,2,3,168,167,217,216,43,166,165,218,217,0,0,1,2,3,167,166,218,217,43,165,164,219,218,0,0,1,2,3,166,165,219,218,43,164,163,220,219,0,0,1,2,3,165,164,220,219,43,163,162,221,220,0,0,1,2,3,164,163,221,220,43,162,161,222,221,0,0,1,2,3,163,162,222,221,43,160,223,222,161,0,0,1,2,3,161,223,222,162,43,191,192,223,160,0,0,1,2,3,160,193,223,161,43,192,255,224,223,0,0,1,2,3,193,224,225,223,43,223,224,225,222,0,0,1,2,3,223,225,226,222,43,221,222,225,226,0,0,1,2,3,221,222,226,227,43,220,221,226,227,0,0,1,2,3,220,221,227,228,43,219,220,227,228,0,0,1,2,3,219,220,228,229,43,218,219,228,229,0,0,1,2,3,218,219,229,230,43,217,218,229,230,0,0,1,2,3,217,218,230,231,43,216,217,230,231,0,0,1,2,3,216,217,231,232,43,215,216,231,232,0,0,1,2,3,215,216,232,233,43,214,215,232,233,0,0,1,2,3,214,215,233,234,43,213,214,233,234,0,0,1,2,3,213,214,234,235,43,212,213,234,235,0,0,1,2,3,212,213,235,236,43,211,212,235,236,0,0,1,2,3,211,212,236,237,43,210,211,236,237,0,0,1,2,3,210,211,237,238,43,209,210,237,238,0,0,1,2,3,209,210,238,239,43,208,209,238,239,0,0,1,2,3,208,209,239,240,43,207,208,239,240,0,0,1,2,3,207,208,240,241,43,206,207,240,241,0,0,1,2,3,206,207,241,242,43,205,206,241,242,0,0,1,2,3,205,206,242,243,43,204,205,242,243,0,0,1,2,3,204,205,243,244,43,203,204,243,244,0,0,1,2,3,203,204,244,245,43,202,203,244,245,0,0,1,2,3,202,203,245,246,43,201,202,245,246,0,0,1,2,3,201,202,246,247,43,201,246,247,200,0,0,1,2,3,201,247,248,200,43,200,247,248,199,0,0,1,2,3,200,248,249,199,43,198,199,248,249,0,0,1,2,3,198,199,249,250,43,197,198,249,250,0,0,1,2,3,197,198,250,251,43,196,197,250,251,0,0,1,2,3,196,197,251,252,43,196,251,252,195,0,0,1,2,3,196,252,253,195,43,194,195,252,253,0,0,1,2,3,194,195,253,254,43,193,194,253,254,0,0,1,2,3,192,194,254,255,43,192,193,254,255,0,0,1,2,3,193,192,255,224,43,255,254,257,256,0,0,1,2,3,224,255,256,257,43,254,253,258,257,0,0,1,2,3,255,254,258,256,43,253,252,259,258,0,0,1,2,3,254,253,259,258,43,251,260,259,252,0,0,1,2,3,252,260,259,253,43,251,250,261,260,0,0,1,2,3,252,251,261,260,43,250,249,262,261,0,0,1,2,3,251,250,262,261,43,249,248,263,262,0,0,1,2,3,250,249,263,262,43,247,264,263,248,0,0,1,2,3,248,264,263,249,43,246,265,264,247,0,0,1,2,3,247,265,264,248,43,246,245,266,265,0,0,1,2,3,247,246,266,265,43,245,244,267,266,0,0,1,2,3,246,245,267,266,43,244,243,268,267,0,0,1,2,3,245,244,268,267,43,243,242,269,268,0,0,1,2,3,244,243,269,268,43,242,241,270,269,0,0,1,2,3,243,242,270,269,43,241,240,271,270,0,0,1,2,3,242,241,271,270,43,240,239,272,271,0,0,1,2,3,241,240,272,271,43,239,238,273,272,0,0,1,2,3,240,239,273,272,43,238,237,274,273,0,0,1,2,3,239,238,274,273,43,237,236,275,274,0,0,1,2,3,238,237,275,274,43,236,235,276,275,0,0,1,2,3,237,236,276,275,43,235,234,277,276,0,0,1,2,3,236,235,277,276,43,234,233,278,277,0,0,1,2,3,235,234,278,277,43,233,232,279,278,0,0,1,2,3,234,233,279,278,43,232,231,280,279,0,0,1,2,3,233,232,280,279,43,231,230,281,280,0,0,1,2,3,232,231,281,280,43,230,229,282,281,0,0,1,2,3,231,230,282,281,43,229,228,283,282,0,0,1,2,3,230,229,283,282,43,228,227,284,283,0,0,1,2,3,229,228,284,283,43,227,226,285,284,0,0,1,2,3,228,227,285,284,43,226,225,286,285,0,0,1,2,3,227,226,286,285,43,224,287,286,225,0,0,1,2,3,225,287,286,226,43,255,256,287,224,0,0,1,2,3,224,257,287,225,42,256,288,287,0,0,1,2,257,288,287,42,287,288,286,0,0,1,2,287,288,286,42,285,286,288,0,0,1,2,285,286,288,42,284,285,288,0,0,1,2,284,285,288,42,283,284,288,0,0,1,2,283,284,288,42,282,283,288,0,0,1,2,282,283,288,42,281,282,288,0,0,1,2,281,282,288,42,280,281,288,0,0,1,2,280,281,288,42,279,280,288,0,0,1,2,279,280,288,42,278,279,288,0,0,1,2,278,279,288,42,277,278,288,0,0,1,2,277,278,288,42,276,277,288,0,0,1,2,276,277,288,42,275,276,288,0,0,1,2,275,276,288,42,274,275,288,0,0,1,2,274,275,288,42,273,274,288,0,0,1,2,273,274,288,42,272,273,288,0,0,1,2,272,273,288,42,271,272,288,0,0,1,2,271,272,288,42,270,271,288,0,0,1,2,270,271,288,42,269,270,288,0,0,1,2,269,270,288,42,268,269,288,0,0,1,2,268,269,288,42,267,268,288,0,0,1,2,267,268,288,42,266,267,288,0,0,1,2,266,267,288,42,265,266,288,0,0,1,2,265,266,288,42,265,288,264,0,0,1,2,265,288,264,42,264,288,263,0,0,1,2,264,288,263,42,262,263,288,0,0,1,2,262,263,288,42,261,262,288,0,0,1,2,261,262,288,42,260,261,288,0,0,1,2,260,261,288,42,260,288,259,0,0,1,2,260,288,259,42,258,259,288,0,0,1,2,258,259,288,42,257,258,288,0,0,1,2,256,258,288,42,256,257,288,0,0,1,2,257,256,288,43,321,0,31,290,0,0,1,2,3,289,0,3,290,43,30,291,290,31,0,0,1,2,3,5,291,290,3,43,30,29,292,291,0,0,1,2,3,5,6,292,291,43,29,28,293,292,0,0,1,2,3,6,8,293,292,43,28,27,294,293,0,0,1,2,3,8,10,294,293,43,27,26,295,294,0,0,1,2,3,10,12,295,294,43,26,25,296,295,0,0,1,2,3,12,14,296,295,43,25,24,297,296,0,0,1,2,3,14,16,297,296,43,24,23,298,297,0,0,1,2,3,16,18,298,297,43,23,22,299,298,0,0,1,2,3,18,20,299,298,43,22,21,300,299,0,0,1,2,3,20,22,300,299,43,21,20,301,300,0,0,1,2,3,22,24,301,300,43,20,19,302,301,0,0,1,2,3,24,26,302,301,43,19,18,303,302,0,0,1,2,3,26,28,303,302,43,18,17,304,303,0,0,1,2,3,28,30,304,303,43,17,16,305,304,0,0,1,2,3,30,32,305,304,43,16,15,306,305,0,0,1,2,3,32,34,306,305,43,15,14,307,306,0,0,1,2,3,34,36,307,306,43,14,13,308,307,0,0,1,2,3,36,38,308,307,43,13,12,309,308,0,0,1,2,3,38,40,309,308,43,12,11,310,309,0,0,1,2,3,40,42,310,309,43,11,10,311,310,0,0,1,2,3,42,44,311,310,43,10,9,312,311,0,0,1,2,3,44,46,312,311,43,8,313,312,9,0,0,1,2,3,49,313,312,46,43,7,314,313,8,0,0,1,2,3,51,314,313,49,43,7,6,315,314,0,0,1,2,3,51,52,315,314,43,6,5,316,315,0,0,1,2,3,52,54,316,315,43,5,4,317,316,0,0,1,2,3,54,56,317,316,43,3,318,317,4,0,0,1,2,3,59,318,317,56,43,3,2,319,318,0,0,1,2,3,59,60,319,318,43,2,1,320,319,0,0,1,2,3,60,62,320,319,43,1,0,321,320,0,0,1,2,3,62,0,289,320,42,320,321,322,0,0,1,2,320,289,321,42,319,320,322,0,0,1,2,319,320,321,42,318,319,322,0,0,1,2,318,319,321,42,318,322,317,0,0,1,2,318,321,317,42,316,317,322,0,0,1,2,316,317,321,42,315,316,322,0,0,1,2,315,316,321,42,314,315,322,0,0,1,2,314,315,321,42,314,322,313,0,0,1,2,314,321,313,42,313,322,312,0,0,1,2,313,321,312,42,311,312,322,0,0,1,2,311,312,321,42,310,311,322,0,0,1,2,310,311,321,42,309,310,322,0,0,1,2,309,310,321,42,308,309,322,0,0,1,2,308,309,321,42,307,308,322,0,0,1,2,307,308,321,42,306,307,322,0,0,1,2,306,307,321,42,305,306,322,0,0,1,2,305,306,321,42,304,305,322,0,0,1,2,304,305,321,42,303,304,322,0,0,1,2,303,304,321,42,302,303,322,0,0,1,2,302,303,321,42,301,302,322,0,0,1,2,301,302,321,42,300,301,322,0,0,1,2,300,301,321,42,299,300,322,0,0,1,2,299,300,321,42,298,299,322,0,0,1,2,298,299,321,42,297,298,322,0,0,1,2,297,298,321,42,296,297,322,0,0,1,2,296,297,321,42,295,296,322,0,0,1,2,295,296,321,42,294,295,322,0,0,1,2,294,295,321,42,293,294,322,0,0,1,2,293,294,321,42,292,293,322,0,0,1,2,292,293,321,42,291,292,322,0,0,1,2,291,292,321,42,291,322,290,0,0,1,2,291,321,290,42,290,322,321,0,0,1,2,290,321,289]
rocket-3d/web/obj/rocket3d_flame.js:}
rocket-3d/web/obj/rocket3d_full.js:[
rocket-3d/web/obj/rocket3d_full.js:{
rocket-3d/web/obj/rocket3d_full.js:    "metadata" :
rocket-3d/web/obj/rocket3d_full.js:    {
rocket-3d/web/obj/rocket3d_full.js:        "formatVersion" : 3,
rocket-3d/web/obj/rocket3d_full.js:        "generatedBy"   : "Blender 2.60 Exporter",
rocket-3d/web/obj/rocket3d_full.js:        "vertices"      : 632,
rocket-3d/web/obj/rocket3d_full.js:        "faces"         : 800,
rocket-3d/web/obj/rocket3d_full.js:        "normals"       : 632,
rocket-3d/web/obj/rocket3d_full.js:        "colors"        : 0,
rocket-3d/web/obj/rocket3d_full.js:        "uvs"           : 1025,
rocket-3d/web/obj/rocket3d_full.js:        "materials"     : 1,
rocket-3d/web/obj/rocket3d_full.js:        "morphTargets"  : 0
rocket-3d/web/obj/rocket3d_full.js:    },
rocket-3d/web/obj/rocket3d_full.js:    "scale" : 1.000000,
rocket-3d/web/obj/rocket3d_full.js:    "materials": [	{
rocket-3d/web/obj/rocket3d_full.js:	"DbgColor" : 15658734,
rocket-3d/web/obj/rocket3d_full.js:	"DbgIndex" : 0,
rocket-3d/web/obj/rocket3d_full.js:	"DbgName" : "default",
rocket-3d/web/obj/rocket3d_full.js:	"vertexColors" : false
rocket-3d/web/obj/rocket3d_full.js:	}],
rocket-3d/web/obj/rocket3d_full.js:    "vertices": [-0.682265,0.334779,0.077804,-0.700877,0.437807,0.081570,-0.711290,0.634167,0.083677,-0.481716,1.187984,0.037229,-0.335161,0.539564,0.007578,-0.466500,0.380855,0.034150,-0.490016,0.340318,0.038908,-0.510787,0.298210,0.043110,-0.528837,0.254312,0.046762,-0.566911,0.109705,0.054466,-0.574327,0.056472,0.055966,-0.579064,0.000463,0.056925,-0.620804,0.116635,0.065370,-0.655403,0.227881,0.072370,-0.710723,0.537444,0.083562,-0.702064,0.728454,0.081810,-0.682530,0.820781,0.077858,-0.652175,0.911628,0.071716,-0.610484,1.001471,0.063281,-0.556944,1.090789,0.052449,-0.379231,0.495211,0.016494,-0.411132,0.458084,0.022948,-0.440214,0.420037,0.028832,-0.544191,0.208407,0.049869,-0.556874,0.160277,0.052435,-0.559234,0.000463,0.154939,-0.554497,0.056472,0.153980,-0.547081,0.109705,0.152480,-0.537044,0.160277,0.150449,-0.524361,0.208407,0.147883,-0.509007,0.254312,0.144776,-0.490957,0.298210,0.141125,-0.470186,0.340318,0.136922,-0.446670,0.380855,0.132164,-0.420383,0.420037,0.126846,-0.391302,0.458084,0.120962,-0.359400,0.495211,0.114508,-0.315331,0.539564,0.105592,-0.461886,1.187984,0.135243,-0.537113,1.090789,0.150463,-0.590654,1.001471,0.161296,-0.632345,0.911628,0.169731,-0.662700,0.820781,0.175872,-0.682234,0.728454,0.179824,-0.691460,0.634167,0.181691,-0.690893,0.537444,0.181576,-0.681046,0.437807,0.179584,-0.662435,0.334779,0.175818,-0.635573,0.227881,0.170384,-0.600974,0.116635,0.163384,0.290177,0.334779,-0.639244,0.296221,0.437807,-0.657245,0.299603,0.634167,-0.667316,0.225041,1.187984,-0.445275,0.177443,0.539564,-0.303530,0.220100,0.380855,-0.430559,0.227737,0.340318,-0.453303,0.234483,0.298210,-0.473392,0.240346,0.254312,-0.490850,0.252711,0.109705,-0.527675,0.255120,0.056472,-0.534847,0.256658,0.000463,-0.539430,0.270215,0.116635,-0.579800,0.281452,0.227881,-0.613263,0.299419,0.537444,-0.666768,0.296607,0.728454,-0.658393,0.290263,0.820781,-0.639500,0.280404,0.911628,-0.610141,0.266863,1.001471,-0.569818,0.249474,1.090789,-0.518035,0.191756,0.495211,-0.346153,0.202117,0.458084,-0.377008,0.211562,0.420037,-0.405135,0.245332,0.208407,-0.505700,0.249452,0.160277,-0.517967,0.161861,0.000463,-0.571263,0.160322,0.056472,-0.566681,0.157914,0.109705,-0.559508,0.154654,0.160277,-0.549801,0.150534,0.208407,-0.537534,0.145548,0.254312,-0.522684,0.139685,0.298210,-0.505226,0.132939,0.340318,-0.485137,0.125302,0.380855,-0.462392,0.116764,0.420037,-0.436969,0.107319,0.458084,-0.408841,0.096958,0.495211,-0.377987,0.082645,0.539564,-0.335363,0.130243,1.187984,-0.477109,0.154676,1.090789,-0.549868,0.172065,1.001471,-0.601652,0.185606,0.911628,-0.641975,0.195465,0.820781,-0.671334,0.201809,0.728454,-0.690227,0.204806,0.634167,-0.699150,0.204621,0.537444,-0.698601,0.201423,0.437807,-0.689078,0.195379,0.334779,-0.671077,0.186654,0.227881,-0.645097,0.175417,0.116635,-0.611633,0.424938,0.334779,0.561440,0.437504,0.437807,0.575675,0.444536,0.634167,0.583640,0.289524,1.187984,0.408046,0.190568,0.539564,0.295952,0.279250,0.380855,0.396408,0.295128,0.340318,0.414395,0.309153,0.298210,0.430282,0.321340,0.254312,0.444088,0.347049,0.109705,0.473209,0.352056,0.056472,0.478881,0.355255,0.000463,0.482505,0.383438,0.116635,0.514430,0.406800,0.227881,0.540894,0.444153,0.537444,0.583206,0.438306,0.728454,0.576583,0.425117,0.820781,0.561642,0.404620,0.911628,0.538425,0.376470,1.001471,0.506537,0.340319,1.090789,0.465585,0.220324,0.495211,0.329659,0.241864,0.458084,0.354059,0.261501,0.420037,0.376303,0.331708,0.208407,0.455831,0.340272,0.160277,0.465532,0.430223,0.000463,0.416324,0.427024,0.056472,0.412701,0.422016,0.109705,0.407029,0.415239,0.160277,0.399352,0.406675,0.208407,0.389651,0.396308,0.254312,0.377907,0.384120,0.298210,0.364101,0.370096,0.340318,0.348215,0.354217,0.380855,0.330228,0.336468,0.420037,0.310122,0.316832,0.458084,0.287879,0.295292,0.495211,0.263478,0.265535,0.539564,0.229771,0.364491,1.187984,0.341866,0.415286,1.090789,0.399405,0.451438,1.001471,0.440356,0.479588,0.911628,0.472244,0.500084,0.820781,0.495462,0.513274,0.728454,0.510402,0.519503,0.634167,0.517459,0.519120,0.537444,0.517025,0.512472,0.437807,0.509494,0.499905,0.334779,0.495259,0.481768,0.227881,0.474713,0.458406,0.116635,0.448250,-0.170079,0.150000,-0.188519,-0.128567,0.150000,-0.218474,-0.082008,0.150000,-0.239753,-0.032192,0.150000,-0.251541,0.018966,0.150000,-0.253383,0.069501,0.150000,-0.245210,0.117470,0.150000,-0.227335,0.161030,0.150000,-0.200445,0.198507,0.150000,-0.165574,0.228461,0.150000,-0.124061,0.249741,0.150000,-0.077502,0.261528,0.150000,-0.027687,0.263371,0.150000,0.023472,0.255198,0.150000,0.074006,0.237323,0.150000,0.121975,0.210433,0.150000,0.165536,0.175561,0.150000,0.203013,0.134049,0.150000,0.232967,0.087490,0.150000,0.254247,0.037674,0.150000,0.266034,-0.013484,0.150000,0.267877,-0.064019,0.150000,0.259703,-0.111988,0.150000,0.241828,-0.155548,0.150000,0.214938,-0.193025,0.150000,0.180067,-0.222979,0.150000,0.138554,-0.244259,0.150000,0.091995,-0.256047,0.150000,0.042179,-0.257889,0.150000,-0.008979,-0.249716,0.150000,-0.059513,-0.231841,0.150000,-0.107482,-0.204951,0.150000,-0.151043,-0.204951,0.304893,-0.151043,-0.231841,0.304893,-0.107483,-0.249716,0.304893,-0.059513,-0.257889,0.304893,-0.008979,-0.256047,0.304893,0.042179,-0.244259,0.304893,0.091995,-0.222979,0.304893,0.138554,-0.193025,0.304893,0.180067,-0.155548,0.304893,0.214938,-0.111988,0.304893,0.241828,-0.064019,0.304893,0.259703,-0.013484,0.304893,0.267877,0.037674,0.304893,0.266034,0.087490,0.304893,0.254246,0.134049,0.304893,0.232967,0.175561,0.304893,0.203013,0.210433,0.304893,0.165536,0.237323,0.304893,0.121975,0.255198,0.304893,0.074006,0.263371,0.304893,0.023472,0.261528,0.304893,-0.027687,0.249741,0.304893,-0.077502,0.228461,0.304893,-0.124061,0.198507,0.304893,-0.165574,0.161030,0.304893,-0.200445,0.117470,0.304893,-0.227335,0.069501,0.304893,-0.245210,0.018966,0.304893,-0.253383,-0.032192,0.304893,-0.251541,-0.082008,0.304893,-0.239753,-0.128567,0.304893,-0.218474,-0.170079,0.304893,-0.188520,-0.196981,0.330709,-0.218993,-0.149006,0.330709,-0.253609,-0.095200,0.330709,-0.278201,-0.037630,0.330709,-0.291824,0.021492,0.330709,-0.293953,0.079893,0.330709,-0.284508,0.135329,0.330709,-0.263850,0.185669,0.330709,-0.232775,0.228980,0.330709,-0.192475,0.263597,0.330709,-0.144501,0.288189,0.330709,-0.090694,0.301812,0.330709,-0.033124,0.303941,0.330709,0.025997,0.294495,0.330709,0.084398,0.273838,0.330709,0.139834,0.242762,0.330709,0.190175,0.202463,0.330709,0.233486,0.154488,0.330709,0.268103,0.100682,0.330709,0.292695,0.043112,0.330709,0.306317,-0.016010,0.330709,0.308447,-0.074411,0.330709,0.299001,-0.129847,0.330709,0.278343,-0.180187,0.330709,0.247268,-0.223498,0.330709,0.206968,-0.258115,0.330709,0.158993,-0.282707,0.330709,0.105187,-0.296330,0.330709,0.047617,-0.298459,0.330709,-0.011504,-0.289013,0.330709,-0.069905,-0.268356,0.330709,-0.125341,-0.237280,0.330709,-0.175682,-0.408735,1.279429,-0.306354,-0.462009,1.279429,-0.220053,-0.497423,1.279429,-0.125018,-0.513616,1.279429,-0.024899,-0.509966,1.279429,0.076455,-0.486613,1.279429,0.175150,-0.444454,1.279429,0.267392,-0.385109,1.279429,0.349636,-0.310860,1.279429,0.418723,-0.224559,1.279429,0.471997,-0.129523,1.279429,0.507411,-0.029404,1.279429,0.523604,0.071950,1.279429,0.519954,0.170644,1.279429,0.496600,0.262886,1.279429,0.454441,0.345131,1.279429,0.395096,0.414218,1.279429,0.320847,0.467492,1.279429,0.234546,0.502906,1.279429,0.139510,0.519098,1.279429,0.039391,0.515448,1.279429,-0.061963,0.492094,1.279429,-0.160657,0.449935,1.279429,-0.252899,0.390591,1.279429,-0.335144,0.316341,1.279429,-0.404230,0.230040,1.279429,-0.457504,0.135005,1.279429,-0.492918,0.034886,1.279429,-0.509111,-0.066468,1.279429,-0.505460,-0.165163,1.279429,-0.482107,-0.257404,1.279429,-0.439948,-0.339649,1.279429,-0.380603,-0.403532,1.950632,-0.452968,-0.305942,1.950632,-0.523385,-0.196490,1.950632,-0.573410,-0.079381,1.950632,-0.601121,0.040883,1.950632,-0.605453,0.159682,1.950632,-0.586239,0.272450,1.950632,-0.544217,0.374853,1.950632,-0.481004,0.462956,1.950632,-0.399027,0.533373,1.950632,-0.301437,0.583398,1.950632,-0.191985,0.611109,1.950632,-0.074876,0.615440,1.950632,0.045389,0.596226,1.950632,0.164188,0.554205,1.950632,0.276955,0.490991,1.950632,0.379358,0.409014,1.950632,0.467461,0.311424,1.950632,0.537878,0.201972,1.950632,0.587903,0.084863,1.950632,0.615614,-0.035402,1.950632,0.619946,-0.154201,1.950632,0.600732,-0.266968,1.950632,0.558710,-0.369371,1.950632,0.495496,-0.457474,1.950632,0.413519,-0.527891,1.950632,0.315929,-0.577916,1.950632,0.206477,-0.605627,1.950632,0.089368,-0.609958,1.950632,-0.030897,-0.590744,1.950632,-0.149695,-0.548723,1.950632,-0.262463,-0.485508,1.950632,-0.364866,-0.509720,2.430177,-0.383318,-0.576068,2.430177,-0.275837,-0.620174,2.430177,-0.157478,-0.640341,2.430177,-0.032788,-0.635794,2.430177,0.093440,-0.606709,2.430177,0.216356,-0.554204,2.430177,0.331236,-0.480295,2.430177,0.433665,-0.387823,2.430177,0.519707,-0.280342,2.430177,0.586056,-0.161983,2.430177,0.630161,-0.037293,2.430177,0.650328,0.088935,2.430177,0.645782,0.211851,2.430177,0.616697,0.326731,2.430177,0.564191,0.429160,2.430177,0.490282,0.515202,2.430177,0.397810,0.581551,2.430177,0.290330,0.625656,2.430177,0.171970,0.645823,2.430177,0.047280,0.641276,2.430177,-0.078948,0.612191,2.430177,-0.201864,0.559685,2.430177,-0.316744,0.485776,2.430177,-0.419173,0.393305,2.430177,-0.505215,0.285824,2.430177,-0.571563,0.167465,2.430177,-0.615668,0.042775,2.430177,-0.635835,-0.083453,2.430177,-0.631289,-0.206369,2.430177,-0.602204,-0.321249,2.430177,-0.549698,-0.423678,2.430177,-0.475789,-0.423678,2.898570,-0.475789,-0.321249,2.898570,-0.549698,-0.206369,2.898570,-0.602204,-0.083453,2.898570,-0.631289,0.042775,2.898570,-0.635835,0.167465,2.898570,-0.615668,0.285824,2.898570,-0.571563,0.393305,2.898570,-0.505215,0.485776,2.898570,-0.419173,0.559685,2.898570,-0.316744,0.612191,2.898570,-0.201864,0.641276,2.898570,-0.078948,0.645823,2.898570,0.047280,0.625656,2.898570,0.171970,0.581551,2.898570,0.290330,0.515202,2.898570,0.397810,0.429160,2.898570,0.490282,0.326731,2.898570,0.564191,0.211851,2.898570,0.616697,0.088935,2.898570,0.645782,-0.037293,2.898570,0.650328,-0.161983,2.898570,0.630161,-0.280342,2.898570,0.586056,-0.387823,2.898570,0.519707,-0.480295,2.898570,0.433665,-0.554204,2.898570,0.331236,-0.606709,2.898570,0.216356,-0.635794,2.898570,0.093440,-0.640340,2.898570,-0.032788,-0.620173,2.898570,-0.157478,-0.576068,2.898570,-0.275837,-0.509719,2.898570,-0.383318,-0.491869,3.255441,-0.369714,-0.555907,3.255441,-0.265977,-0.598475,3.255441,-0.151740,-0.617940,3.255441,-0.031394,-0.613552,3.255441,0.090438,-0.585480,3.255441,0.209072,-0.534804,3.255441,0.319950,-0.463469,3.255441,0.418812,-0.374219,3.255441,0.501857,-0.270482,3.255441,0.565894,-0.156245,3.255441,0.608463,-0.035899,3.255441,0.627927,0.085933,3.255441,0.623539,0.204567,3.255441,0.595468,0.315445,3.255441,0.544791,0.414307,3.255441,0.473456,0.497352,3.255441,0.384206,0.561389,3.255441,0.280469,0.603958,3.255441,0.166232,0.623422,3.255441,0.045886,0.619034,3.255441,-0.075946,0.590962,3.255441,-0.194580,0.540285,3.255441,-0.305458,0.468951,3.255441,-0.404319,0.379700,3.255441,-0.487364,0.275963,3.255441,-0.551401,0.161727,3.255441,-0.593970,0.041380,3.255441,-0.613435,-0.080451,3.255441,-0.609047,-0.199085,3.255441,-0.580975,-0.309963,3.255441,-0.530298,-0.408825,3.255441,-0.458963,-0.379072,3.523094,-0.425260,-0.287357,3.523094,-0.491437,-0.184495,3.523094,-0.538451,-0.074437,3.523094,-0.564493,0.038587,3.523094,-0.568564,0.150233,3.523094,-0.550507,0.256211,3.523094,-0.511015,0.352449,3.523094,-0.451608,0.435247,3.523094,-0.374566,0.501425,3.523094,-0.282852,0.548438,3.523094,-0.179990,0.574481,3.523094,-0.069932,0.578551,3.523094,0.043092,0.560494,3.523094,0.154739,0.521003,3.523094,0.260717,0.461595,3.523094,0.356954,0.384553,3.523094,0.439753,0.292839,3.523094,0.505930,0.189977,3.523094,0.552944,0.079919,3.523094,0.578986,-0.033105,3.523094,0.583057,-0.144752,3.523094,0.564999,-0.250730,3.523094,0.525508,-0.346967,3.523094,0.466100,-0.429766,3.523094,0.389059,-0.495943,3.523094,0.297344,-0.542956,3.523094,0.194482,-0.568999,3.523094,0.084424,-0.573069,3.523094,-0.028600,-0.555012,3.523094,-0.140247,-0.515520,3.523094,-0.246225,-0.456112,3.523094,-0.342462,-0.382499,3.824263,-0.286358,-0.432376,3.824263,-0.205560,-0.465532,3.824263,-0.116584,-0.480692,3.824263,-0.022849,-0.477274,3.824263,0.072042,-0.455410,3.824263,0.164443,-0.415939,3.824263,0.250804,-0.360379,3.824263,0.327804,-0.290864,3.824263,0.392486,-0.210066,3.824263,0.442363,-0.121089,3.824263,0.475519,-0.027354,3.824263,0.490680,0.067537,3.824263,0.487262,0.159938,3.824263,0.465397,0.246299,3.824263,0.425926,0.323299,3.824263,0.370366,0.387981,3.824263,0.300851,0.437858,3.824263,0.220053,0.471014,3.824263,0.131076,0.486174,3.824263,0.037341,0.482756,3.824263,-0.057550,0.460892,3.824263,-0.149951,0.421421,3.824263,-0.236312,0.365860,3.824263,-0.313312,0.296345,3.824263,-0.377994,0.215547,3.824263,-0.427871,0.126571,3.824263,-0.461027,0.032836,3.824263,-0.476187,-0.062055,3.824263,-0.472769,-0.154457,3.824263,-0.450905,-0.240817,3.824263,-0.411434,-0.317817,3.824263,-0.355873,-0.222852,4.146944,-0.248299,-0.168663,4.146944,-0.287399,-0.107887,4.146944,-0.315177,-0.042859,4.146944,-0.330564,0.023920,4.146944,-0.332970,0.089886,4.146944,-0.322300,0.152503,4.146944,-0.298967,0.209365,4.146944,-0.263866,0.258286,4.146944,-0.218347,0.297387,4.146944,-0.164157,0.325164,4.146944,-0.103381,0.340551,4.146944,-0.038354,0.342957,4.146944,0.028426,0.332288,4.146944,0.094392,0.308954,4.146944,0.157008,0.273853,4.146944,0.213870,0.228334,4.146944,0.262791,0.174145,4.146944,0.301892,0.113368,4.146944,0.329670,0.048341,4.146944,0.345057,-0.018439,4.146944,0.347462,-0.084405,4.146944,0.336793,-0.147022,4.146944,0.313459,-0.203883,4.146944,0.278359,-0.252804,4.146944,0.232839,-0.291905,4.146944,0.178650,-0.319683,4.146944,0.117874,-0.335070,4.146944,0.052846,-0.337475,4.146944,-0.013934,-0.326806,4.146944,-0.079899,-0.303472,4.146944,-0.142516,-0.268371,4.146944,-0.199378,-0.177012,4.345931,-0.129750,-0.200285,4.345931,-0.092050,-0.215756,4.345931,-0.050533,-0.222830,4.345931,-0.006796,-0.221235,4.345931,0.037480,-0.211033,4.345931,0.080595,-0.192616,4.345931,0.120890,-0.166691,4.345931,0.156819,-0.134255,4.345931,0.187000,-0.096555,4.345931,0.210272,-0.055038,4.345931,0.225743,-0.011302,4.345931,0.232817,0.032975,4.345931,0.231222,0.076089,4.345931,0.221020,0.116385,4.345931,0.202603,0.152314,4.345931,0.176678,0.182494,4.345931,0.144242,0.205767,4.345931,0.106542,0.221238,4.345931,0.065025,0.228311,4.345931,0.021289,0.226717,4.345931,-0.022988,0.216515,4.345931,-0.066102,0.198097,4.345931,-0.106398,0.172173,4.345931,-0.142327,0.139737,4.345931,-0.172507,0.102036,4.345931,-0.195780,0.060520,4.345931,-0.211250,0.016783,4.345931,-0.218324,-0.027493,4.345931,-0.216730,-0.070608,4.345931,-0.206528,-0.110903,4.345931,-0.188110,-0.146832,4.345931,-0.162186,-0.081000,4.480381,-0.087613,-0.060885,4.480381,-0.102127,-0.038324,4.480381,-0.112438,-0.014186,4.480381,-0.118150,0.010603,4.480381,-0.119043,0.035090,4.480381,-0.115082,0.058333,4.480381,-0.106421,0.079440,4.480381,-0.093392,0.097600,4.480381,-0.076494,0.112114,4.480381,-0.056379,0.122425,4.480381,-0.033819,0.128137,4.480381,-0.009681,0.129030,4.480381,0.015108,0.125070,4.480381,0.039595,0.116408,4.480381,0.062838,0.103379,4.480381,0.083946,0.086482,4.480381,0.102105,0.066366,4.480381,0.116620,0.043806,4.480381,0.126931,0.019668,4.480381,0.132642,-0.005121,4.480381,0.133535,-0.029608,4.480381,0.129575,-0.052851,4.480381,0.120913,-0.073959,4.480381,0.107884,-0.092118,4.480381,0.090987,-0.106632,4.480381,0.070872,-0.116944,4.480381,0.048311,-0.122655,4.480381,0.024173,-0.123548,4.480381,-0.000616,-0.119588,4.480381,-0.025103,-0.110926,4.480381,-0.048346,-0.097897,4.480381,-0.069453,0.002741,4.555463,0.007246,-0.168090,0.173844,-0.122949,-0.190207,0.173844,-0.087120,-0.204910,0.173844,-0.047665,-0.211632,0.173844,-0.006099,-0.210117,0.173844,0.035980,-0.200421,0.173844,0.076954,-0.182918,0.173844,0.115250,-0.158281,0.173844,0.149395,-0.127455,0.173844,0.178077,-0.091626,0.173844,0.200195,-0.052170,0.173844,0.214897,-0.010605,0.173844,0.221620,0.031474,0.173844,0.220105,0.072449,0.173844,0.210409,0.110744,0.173844,0.192906,0.144889,0.173844,0.168268,0.173572,0.173844,0.137442,0.195689,0.173844,0.101613,0.210392,0.173844,0.062158,0.217114,0.173844,0.020592,0.215599,0.173844,-0.021487,0.205903,0.173844,-0.062461,0.188400,0.173844,-0.100757,0.163763,0.173844,-0.134902,0.132937,0.173844,-0.163584,0.097108,0.173844,-0.185702,0.057652,0.173844,-0.200404,0.016086,0.173844,-0.207127,-0.025992,0.173844,-0.205611,-0.066967,0.173844,-0.195916,-0.105262,0.173844,-0.178413,-0.139407,0.173844,-0.153775,-0.139407,0.353359,-0.153775,-0.105262,0.353359,-0.178413,-0.066967,0.353359,-0.195916,-0.025992,0.353359,-0.205611,0.016086,0.353359,-0.207127,0.057652,0.353359,-0.200404,0.097108,0.353359,-0.185702,0.132937,0.353359,-0.163584,0.163763,0.353359,-0.134902,0.188400,0.353359,-0.100757,0.205903,0.353359,-0.062461,0.215599,0.353359,-0.021487,0.217114,0.353359,0.020592,0.210392,0.353359,0.062158,0.195689,0.353359,0.101613,0.173572,0.353359,0.137442,0.144889,0.353359,0.168268,0.110744,0.353359,0.192906,0.072449,0.353359,0.210409,0.031474,0.353359,0.220105,-0.010605,0.353359,0.221620,-0.052170,0.353359,0.214897,-0.091626,0.353359,0.200195,-0.127455,0.353359,0.178077,-0.158281,0.353359,0.149395,-0.182918,0.353359,0.115250,-0.200421,0.353359,0.076954,-0.210117,0.353359,0.035980,-0.211632,0.353359,-0.006099,-0.204910,0.353359,-0.047665,-0.190207,0.353359,-0.087120,-0.168090,0.353359,-0.122949,0.002741,0.471696,0.007246],
rocket-3d/web/obj/rocket3d_full.js:    "morphTargets": [],
rocket-3d/web/obj/rocket3d_full.js:    "normals": [0.622944,-0.220649,-0.750481,0.070284,0.814936,-0.575243,0.288400,0.814936,0.502670,0.865688,-0.220649,0.449293,0.001984,-0.834193,-0.551408,0.540971,-0.079440,-0.837245,0.823908,-0.079440,0.561113,0.216163,-0.834193,0.507279,0.534959,-0.118809,-0.836451,0.818049,-0.118809,0.562700,0.526078,-0.160375,-0.835139,0.809351,-0.160375,0.564959,0.514115,-0.203864,-0.833125,0.797540,-0.203864,0.567736,0.498917,-0.248299,-0.830287,0.782434,-0.248299,0.571032,0.480605,-0.292550,-0.826655,0.764153,-0.292550,0.574816,0.459609,-0.335429,-0.822321,0.743126,-0.335429,0.578967,0.436537,-0.375896,-0.817377,0.719932,-0.375896,0.583392,0.412214,-0.413099,-0.812037,0.695456,-0.413099,0.587909,0.387555,-0.446455,-0.806482,0.670583,-0.446455,0.592395,0.356456,-0.479354,-0.801935,0.640156,-0.479354,0.600299,-0.716605,0.411695,-0.562975,-0.441389,0.411695,0.797266,-0.757591,0.341746,-0.556078,-0.481826,0.341746,0.806848,-0.791162,0.270425,-0.548540,-0.515702,0.270425,0.812952,-0.817408,0.192358,-0.542955,-0.542039,0.192358,0.818018,-0.834254,0.111789,-0.539872,-0.558794,0.111789,0.821711,-0.841456,0.033570,-0.539262,-0.565630,0.033570,0.823939,-0.840327,-0.038148,-0.540696,-0.564043,-0.038148,0.824854,-0.833247,-0.100894,-0.543565,-0.556413,-0.100894,0.824732,-0.822810,-0.153600,-0.547136,-0.545396,-0.153600,0.823969,-0.811060,-0.196509,-0.550920,-0.533128,-0.196509,0.822871,-0.799585,-0.230232,-0.554613,-0.521104,-0.230232,0.821833,0.338450,-0.220649,0.914731,0.463027,0.814936,0.348521,-0.579516,0.814936,-0.001556,-0.821955,-0.220649,0.525040,0.476547,-0.834193,0.277413,0.454573,-0.079440,0.887143,-0.897885,-0.079440,0.432966,-0.547410,-0.834193,-0.066408,0.456893,-0.118809,0.881527,-0.896329,-0.118809,0.427107,0.460219,-0.160375,0.873196,-0.893948,-0.160375,0.418439,0.464431,-0.203864,0.861782,-0.890439,-0.203864,0.406812,0.469588,-0.248299,0.847224,-0.885769,-0.248299,0.392071,0.475600,-0.292550,0.829554,-0.879910,-0.292550,0.374371,0.482345,-0.335429,0.809198,-0.872982,-0.335429,0.354045,0.489578,-0.375896,0.786737,-0.865200,-0.375896,0.331767,0.497116,-0.413099,0.762993,-0.856868,-0.413099,0.308329,0.504654,-0.446455,0.738884,-0.848323,-0.446455,0.284555,0.516282,-0.479354,0.709677,-0.839961,-0.479354,0.254219,0.845851,0.411695,-0.339122,-0.469741,0.411695,-0.780908,0.860378,0.341746,-0.378033,-0.457839,0.341746,-0.820704,0.870632,0.270425,-0.410901,-0.446181,0.270425,-0.853084,0.878933,0.192358,-0.436384,-0.437391,0.192358,-0.878445,0.884671,0.111789,-0.452559,-0.432234,0.111789,-0.894772,0.887753,0.033570,-0.459059,-0.430738,0.033570,-0.901822,0.888424,-0.038148,-0.457381,-0.432325,-0.038148,-0.900906,0.887387,-0.100894,-0.449843,-0.436018,-0.100894,-0.894253,0.885250,-0.153600,-0.438978,-0.440870,-0.153600,-0.884304,0.882656,-0.196509,-0.426954,-0.446059,-0.196509,-0.873135,0.880123,-0.230232,-0.415143,-0.451155,-0.230232,-0.862209,-0.961394,-0.220649,-0.164220,-0.533341,0.814936,0.226722,0.291116,0.814936,-0.501083,-0.043703,-0.220649,-0.974364,-0.478530,-0.834193,0.273965,-0.995575,-0.079440,-0.049867,0.073977,-0.079440,-0.994079,0.331217,-0.834193,-0.440870,-0.991882,-0.118809,-0.045076,0.078280,-0.118809,-0.989807,-0.986297,-0.160375,-0.038026,0.084567,-0.160375,-0.983398,-0.978576,-0.203864,-0.028657,0.092898,-0.203864,-0.974548,-0.968505,-0.248299,-0.016907,0.103305,-0.248299,-0.963134,-0.956236,-0.292550,-0.002869,0.115726,-0.292550,-0.949187,-0.941954,-0.335429,0.013123,0.129856,-0.335429,-0.933042,-0.926145,-0.375896,0.030641,0.145268,-0.375896,-0.915189,-0.909330,-0.413099,0.049013,0.161412,-0.413099,-0.896237,-0.892209,-0.446455,0.067598,0.177709,-0.446455,-0.876949,-0.872738,-0.479354,0.092257,0.199805,-0.479354,-0.854549,-0.129215,0.411695,0.902097,0.911161,0.411695,-0.016358,-0.102786,0.341746,0.934141,0.939665,0.341746,0.013825,-0.079440,0.270425,0.959441,0.961882,0.270425,0.040132,-0.061525,0.192358,0.979369,0.979461,0.192358,0.060396,-0.050386,0.111789,0.992431,0.991028,0.111789,0.073061,-0.046297,0.033570,0.998352,0.996368,0.033570,0.077853,-0.048097,-0.038148,0.998108,0.996368,-0.038148,0.076022,-0.054109,-0.100894,0.993408,0.992462,-0.100894,0.069491,-0.062410,-0.153600,0.986145,0.986267,-0.153600,0.060335,-0.071566,-0.196509,0.977874,0.979186,-0.196509,0.050233,-0.080508,-0.230232,0.969787,0.972289,-0.230232,0.040376,-0.618336,-0.565355,0.545854,-0.499954,-0.565355,0.656026,-0.596057,-0.181646,0.782098,-0.737175,-0.181646,0.650777,-0.500900,-0.830103,-0.244972,-0.780663,-0.494736,-0.381787,-0.691153,-0.494736,-0.526749,-0.443464,-0.830103,-0.337992,-0.539048,-0.830103,-0.142552,-0.840144,-0.494736,-0.222144,-0.556505,-0.830103,-0.034639,-0.867336,-0.494736,-0.053987,-0.552568,-0.830103,0.074587,-0.861202,-0.494736,0.116245,-0.527421,-0.830103,0.180944,-0.821986,-0.494736,0.282022,-0.481979,-0.830103,0.280374,-0.751152,-0.494736,0.436964,-0.418012,-0.830103,0.368999,-0.651479,-0.494736,0.575121,-0.337992,-0.830103,0.443464,-0.526749,-0.494736,0.691153,-0.244972,-0.830103,0.500900,-0.381787,-0.494736,0.780663,-0.142552,-0.830103,0.539048,-0.222144,-0.494736,0.840144,-0.034639,-0.830103,0.556505,-0.053987,-0.494736,0.867336,0.074587,-0.830103,0.552568,0.116245,-0.494736,0.861202,0.180944,-0.830103,0.527421,0.282022,-0.494736,0.821986,0.280374,-0.830103,0.481979,0.436964,-0.494736,0.751152,0.368999,-0.830103,0.418012,0.575121,-0.494736,0.651479,0.443464,-0.830103,0.337992,0.691153,-0.494736,0.526749,0.500900,-0.830103,0.244972,0.780663,-0.494736,0.381787,0.539048,-0.830103,0.142552,0.840144,-0.494736,0.222144,0.556505,-0.830103,0.034639,0.867336,-0.494736,0.053987,0.552568,-0.830103,-0.074587,0.861202,-0.494736,-0.116245,0.527421,-0.830103,-0.180944,0.821986,-0.494736,-0.282022,0.481979,-0.830103,-0.280374,0.751152,-0.494736,-0.436964,0.418012,-0.830103,-0.368999,0.651479,-0.494736,-0.575121,0.337992,-0.830103,-0.443464,0.526749,-0.494736,-0.691153,0.244972,-0.830103,-0.500900,0.381787,-0.494736,-0.780663,0.142552,-0.830103,-0.539048,0.222144,-0.494736,-0.840144,0.034639,-0.830103,-0.556505,0.053987,-0.494736,-0.867336,-0.074587,-0.830103,-0.552568,-0.116245,-0.494736,-0.861202,-0.180944,-0.830103,-0.527421,-0.282022,-0.494736,-0.821986,-0.280374,-0.830103,-0.481979,-0.436964,-0.494736,-0.751152,-0.368999,-0.830103,-0.418012,-0.575121,-0.494736,-0.651479,-0.545854,-0.565355,-0.618336,-0.414747,-0.565355,-0.712973,-0.267678,-0.565355,-0.780175,-0.110324,-0.565355,-0.817408,0.051241,-0.565355,-0.823237,0.210852,-0.565355,-0.797418,0.362377,-0.565355,-0.740959,0.499954,-0.565355,-0.656026,0.618336,-0.565355,-0.545854,0.712973,-0.565355,-0.414747,0.780175,-0.565355,-0.267678,0.817408,-0.565355,-0.110324,0.823237,-0.565355,0.051241,0.797418,-0.565355,0.210852,0.740959,-0.565355,0.362377,0.656026,-0.565355,0.499954,0.545854,-0.565355,0.618336,0.414747,-0.565355,0.712973,0.267678,-0.565355,0.780175,0.110324,-0.565355,0.817408,-0.051241,-0.565355,0.823237,-0.210852,-0.565355,0.797418,-0.362377,-0.565355,0.740959,-0.712973,-0.565355,0.414747,-0.780175,-0.565355,0.267678,-0.817408,-0.565355,0.110324,-0.823237,-0.565355,-0.051241,-0.797418,-0.565355,-0.210852,-0.740959,-0.565355,-0.362377,-0.656026,-0.565355,-0.499954,-0.782098,-0.181646,-0.596057,-0.650777,-0.181646,-0.737175,-0.883358,-0.181646,-0.432020,-0.950682,-0.181646,-0.251381,-0.981445,-0.181646,-0.061098,-0.974517,-0.181646,0.131535,-0.930113,-0.181646,0.319132,-0.849971,-0.181646,0.494461,-0.432020,-0.181646,0.883358,-0.251381,-0.181646,0.950682,-0.061098,-0.181646,0.981445,0.131535,-0.181646,0.974517,0.319132,-0.181646,0.930113,0.494461,-0.181646,0.849971,0.650777,-0.181646,0.737175,0.782098,-0.181646,0.596057,0.883358,-0.181646,0.432020,0.950682,-0.181646,0.251381,0.981445,-0.181646,0.061098,0.974517,-0.181646,-0.131535,0.930113,-0.181646,-0.319132,0.849971,-0.181646,-0.494461,0.737175,-0.181646,-0.650777,0.596057,-0.181646,-0.782098,0.432020,-0.181646,-0.883358,0.251381,-0.181646,-0.950682,0.061098,-0.181646,-0.981445,-0.131535,-0.181646,-0.974517,-0.319132,-0.181646,-0.930113,-0.494461,-0.181646,-0.849971,-0.658284,-0.102664,-0.745689,-0.500168,-0.102664,-0.859798,-0.322825,-0.102664,-0.940855,-0.133061,-0.102664,-0.985748,0.061800,-0.102664,-0.992767,0.254280,-0.102664,-0.961638,0.436995,-0.102664,-0.893551,0.602954,-0.102664,-0.791131,0.745689,-0.102664,-0.658284,0.859798,-0.102664,-0.500168,0.940855,-0.102664,-0.322825,0.985748,-0.102664,-0.133061,0.992767,-0.102664,0.061800,0.961638,-0.102664,0.254280,0.893551,-0.102664,0.437025,0.791131,-0.102664,0.602954,0.658284,-0.102664,0.745689,0.500168,-0.102664,0.859798,0.322825,-0.102664,0.940855,0.133061,-0.102664,0.985748,-0.061800,-0.102664,0.992767,-0.254280,-0.102664,0.961638,-0.437025,-0.102664,0.893551,-0.602954,-0.102664,0.791131,-0.745689,-0.102664,0.658284,-0.859798,-0.102664,0.500168,-0.940855,-0.102664,0.322794,-0.985748,-0.102664,0.133061,-0.992767,-0.102664,-0.061800,-0.961638,-0.102664,-0.254280,-0.893551,-0.102664,-0.437025,-0.791131,-0.102664,-0.602954,-0.794916,-0.031617,-0.605853,-0.661458,-0.031617,-0.749290,-0.897855,-0.031617,-0.439100,-0.966277,-0.031617,-0.255501,-0.997559,-0.031617,-0.062075,-0.990509,-0.031617,0.133702,-0.945372,-0.031617,0.324351,-0.863948,-0.031617,0.502579,-0.749290,-0.031617,0.661458,-0.605853,-0.031617,0.794916,-0.439100,-0.031617,0.897855,-0.255501,-0.031617,0.966277,-0.062075,-0.031617,0.997559,0.133702,-0.031617,0.990509,0.324351,-0.031617,0.945372,0.502579,-0.031617,0.863948,0.661458,-0.031617,0.749290,0.794916,-0.031617,0.605853,0.897855,-0.031617,0.439100,0.966277,-0.031617,0.255501,0.997559,-0.031617,0.062075,0.990509,-0.031617,-0.133702,0.945372,-0.031617,-0.324351,0.863948,-0.031617,-0.502579,0.749290,-0.031617,-0.661458,0.605853,-0.031617,-0.794946,0.439100,-0.031617,-0.897855,0.255501,-0.031617,-0.966277,0.062075,-0.031617,-0.997559,-0.133702,-0.031617,-0.990509,-0.324351,-0.031617,-0.945372,-0.502579,-0.031617,-0.863948,-0.661458,0.031312,-0.749290,-0.502579,0.031312,-0.863948,-0.324381,0.031312,-0.945402,-0.133702,0.031312,-0.990509,0.062075,0.031312,-0.997559,0.255501,0.031312,-0.966277,0.439131,0.031312,-0.897855,0.605853,0.031312,-0.794946,0.749290,0.031312,-0.661458,0.863948,0.031312,-0.502579,0.945402,0.031312,-0.324381,0.990509,0.031312,-0.133702,0.997559,0.031312,0.062075,0.966277,0.031312,0.255501,0.897855,0.031312,0.439131,0.794946,0.031312,0.605853,0.661458,0.031312,0.749290,0.502579,0.031312,0.863948,0.324351,0.031312,0.945402,0.133702,0.031312,0.990509,-0.062075,0.031312,0.997559,-0.255501,0.031312,0.966277,-0.439131,0.031312,0.897855,-0.605853,0.031312,0.794946,-0.749290,0.031312,0.661458,-0.863948,0.031312,0.502579,-0.945402,0.031312,0.324351,-0.990509,0.031312,0.133702,-0.997559,0.031312,-0.062075,-0.966277,0.031312,-0.255501,-0.897855,0.031312,-0.439131,-0.794946,0.031312,-0.605853,-0.790155,0.113987,-0.602191,-0.657491,0.113987,-0.744774,-0.892453,0.113987,-0.436476,-0.960448,0.113987,-0.253975,-0.991546,0.113987,-0.061708,-0.984527,0.113987,0.132878,-0.939695,0.113987,0.322398,-0.858730,0.113987,0.499527,-0.744774,0.113987,0.657491,-0.602191,0.113987,0.790155,-0.436476,0.113987,0.892453,-0.253975,0.113987,0.960448,-0.061708,0.113987,0.991546,0.132878,0.113987,0.984527,0.322398,0.113987,0.939695,0.499557,0.113987,0.858730,0.657491,0.113987,0.744774,0.790155,0.113987,0.602191,0.892453,0.113987,0.436476,0.960448,0.113987,0.253975,0.991546,0.113987,0.061708,0.984527,0.113987,-0.132878,0.939695,0.113987,-0.322398,0.858730,0.113987,-0.499557,0.744774,0.113987,-0.657491,0.602191,0.113987,-0.790155,0.436476,0.113987,-0.892453,0.253975,0.113987,-0.960448,0.061708,0.113987,-0.991546,-0.132878,0.113987,-0.984527,-0.322398,0.113987,-0.939695,-0.499557,0.113987,-0.858730,-0.644154,0.229286,-0.729698,-0.489425,0.229286,-0.841334,-0.315867,0.229286,-0.920652,-0.130192,0.229286,-0.964599,0.060457,0.229286,-0.971465,0.248817,0.229286,-0.941008,0.427625,0.229286,-0.874355,0.589984,0.229286,-0.774132,0.729698,0.229286,-0.644154,0.841334,0.229286,-0.489425,0.920652,0.229286,-0.315867,0.964599,0.229286,-0.130192,0.971465,0.229286,0.060457,0.941008,0.229286,0.248817,0.874355,0.229286,0.427625,0.774132,0.229286,0.589984,0.644154,0.229286,0.729698,0.489425,0.229286,0.841334,0.315867,0.229286,0.920652,0.130192,0.229286,0.964599,-0.060457,0.229286,0.971465,-0.248817,0.229286,0.941008,-0.427625,0.229286,0.874355,-0.589984,0.229286,0.774132,-0.729698,0.229286,0.644154,-0.841334,0.229286,0.489425,-0.920652,0.229286,0.315867,-0.964599,0.229286,0.130192,-0.971465,0.229286,-0.060457,-0.941008,0.229286,-0.248817,-0.874355,0.229286,-0.427625,-0.774132,0.229286,-0.589984,-0.745170,0.349437,-0.567919,-0.620075,0.349437,-0.702384,-0.841670,0.349437,-0.411634,-0.905789,0.349437,-0.239509,-0.935118,0.349437,-0.058199,-0.928526,0.349437,0.125309,-0.886227,0.349437,0.304056,-0.809870,0.349437,0.471114,-0.702384,0.349437,0.620075,-0.567919,0.349437,0.745170,-0.411634,0.349437,0.841670,-0.239509,0.349437,0.905789,-0.058199,0.349437,0.935118,0.125340,0.349437,0.928526,0.304056,0.349437,0.886227,0.471114,0.349437,0.809870,0.620075,0.349437,0.702384,0.745170,0.349437,0.567919,0.841670,0.349437,0.411634,0.905789,0.349437,0.239509,0.935118,0.349437,0.058199,0.928526,0.349437,-0.125340,0.886227,0.349437,-0.304056,0.809870,0.349437,-0.471114,0.702384,0.349437,-0.620075,0.567919,0.349437,-0.745170,0.411634,0.349437,-0.841670,0.239509,0.349437,-0.905789,0.058199,0.349437,-0.935118,-0.125340,0.349437,-0.928526,-0.304056,0.349437,-0.886227,-0.471114,0.349437,-0.809870,-0.590167,0.452437,-0.668538,-0.448408,0.452437,-0.770837,-0.289407,0.452437,-0.843501,-0.119297,0.452437,-0.883755,0.055391,0.452437,-0.890042,0.227973,0.452437,-0.862148,0.391797,0.452437,-0.801111,0.540544,0.452437,-0.709281,0.668538,0.452437,-0.590167,0.770837,0.452437,-0.448408,0.843501,0.452437,-0.289407,0.883755,0.452437,-0.119297,0.890042,0.452437,0.055391,0.862148,0.452437,0.227973,0.801111,0.452437,0.391797,0.709281,0.452437,0.540544,0.590167,0.452437,0.668538,0.448408,0.452437,0.770837,0.289407,0.452437,0.843501,0.119297,0.452437,0.883755,-0.055391,0.452437,0.890042,-0.227973,0.452437,0.862148,-0.391797,0.452437,0.801111,-0.540544,0.452437,0.709281,-0.668538,0.452437,0.590167,-0.770837,0.452437,0.448408,-0.843501,0.452437,0.289407,-0.883755,0.452437,0.119297,-0.890042,0.452437,-0.055391,-0.862148,0.452437,-0.227973,-0.801111,0.452437,-0.391797,-0.709281,0.452437,-0.540544,-0.666005,0.546617,-0.507584,-0.554155,0.546617,-0.627735,-0.752220,0.546617,-0.367901,-0.809534,0.546617,-0.214057,-0.835749,0.546617,-0.052004,-0.829829,0.546617,0.112003,-0.792047,0.546617,0.271737,-0.723808,0.546617,0.421064,-0.627735,0.546617,0.554155,-0.507584,0.546617,0.666005,-0.367901,0.546617,0.752220,-0.214057,0.546617,0.809534,-0.052004,0.546617,0.835749,0.112003,0.546617,0.829829,0.271737,0.546617,0.792047,0.421064,0.546617,0.723808,0.554155,0.546617,0.627735,0.666005,0.546617,0.507584,0.752220,0.546617,0.367901,0.809534,0.546617,0.214057,0.835749,0.546617,0.052004,0.829829,0.546617,-0.112003,0.792047,0.546617,-0.271737,0.723808,0.546617,-0.421064,0.627735,0.546617,-0.554155,0.507584,0.546617,-0.666005,0.367901,0.546617,-0.752220,0.214057,0.546617,-0.809534,0.052004,0.546617,-0.835749,-0.112003,0.546617,-0.829829,-0.271737,0.546617,-0.792047,-0.421064,0.546617,-0.723808,-0.448042,0.735923,-0.507553,-0.340434,0.735923,-0.585192,-0.219703,0.735923,-0.640370,-0.090548,0.735923,-0.670949,0.042055,0.735923,-0.675710,0.173070,0.735923,-0.654530,0.297433,0.735923,-0.608173,0.410382,0.735923,-0.538469,0.507553,0.735923,-0.448042,0.585192,0.735923,-0.340434,0.640370,0.735923,-0.219703,0.670949,0.735923,-0.090548,0.675710,0.735923,0.042055,0.654530,0.735923,0.173070,0.608173,0.735923,0.297433,0.538469,0.735923,0.410382,0.448042,0.735923,0.507553,0.340434,0.735923,0.585192,0.219703,0.735923,0.640370,0.090548,0.735923,0.670949,-0.042055,0.735923,0.675710,-0.173070,0.735923,0.654530,-0.297433,0.735923,0.608173,-0.410382,0.735923,0.538469,-0.507553,0.735923,0.448042,-0.585223,0.735923,0.340434,-0.640370,0.735923,0.219703,-0.670949,0.735923,0.090548,-0.675710,0.735923,-0.042055,-0.654530,0.735923,-0.173070,-0.608173,0.735923,-0.297433,-0.538469,0.735923,-0.410382,0.000000,1.000000,0.000000,0.558763,-0.535783,0.632954,0.671529,-0.535783,0.511795,0.758476,-0.535783,0.370952,0.816279,-0.535783,0.215857,0.842708,-0.535783,0.052461,0.836726,-0.535783,-0.112949,0.798608,-0.535783,-0.273995,0.729820,-0.535783,-0.424543,0.632954,-0.535783,-0.558763,0.511795,-0.535783,-0.671529,0.370952,-0.535783,-0.758476,0.215857,-0.535783,-0.816279,0.052461,-0.535783,-0.842708,-0.112949,-0.535783,-0.836726,-0.273995,-0.535783,-0.798608,-0.424543,-0.535783,-0.729820,-0.558763,-0.535783,-0.632954,-0.671529,-0.535783,-0.511795,-0.758476,-0.535783,-0.370952,-0.816279,-0.535783,-0.215827,-0.842708,-0.535783,-0.052461,-0.836726,-0.535783,0.112949,-0.798608,-0.535783,0.273995,-0.729820,-0.535783,0.424543,-0.632954,-0.535783,0.558763,-0.511795,-0.535783,0.671529,-0.370952,-0.535783,0.758476,-0.215827,-0.535783,0.816279,-0.052431,-0.535783,0.842708,0.112949,-0.535783,0.836726,0.273995,-0.535783,0.798608,0.424543,-0.535783,0.729820,0.436842,-0.495193,0.750938,0.574938,-0.495193,0.651265,0.281930,-0.495193,0.821741,0.116214,-0.495193,0.860958,-0.053957,-0.495193,0.867061,-0.222083,-0.495193,0.839869,-0.381664,-0.495193,0.780419,-0.526597,-0.495193,0.690970,-0.651265,-0.495193,0.574938,-0.750938,-0.495193,0.436842,-0.821741,-0.495193,0.281930,-0.860958,-0.495193,0.116214,-0.867061,-0.495193,-0.053957,-0.839869,-0.495193,-0.222083,-0.780419,-0.495193,-0.381664,-0.690939,-0.495193,-0.526597,-0.574938,-0.495193,-0.651265,-0.436842,-0.495193,-0.750938,-0.281930,-0.495193,-0.821741,-0.116214,-0.495193,-0.860958,0.053957,-0.495193,-0.867061,0.222083,-0.495193,-0.839869,0.381664,-0.495193,-0.780419,0.526597,-0.495193,-0.690939,0.651265,-0.495193,-0.574938,0.750938,-0.495193,-0.436842,0.821741,-0.495193,-0.281930,0.860958,-0.495193,-0.116214,0.867061,-0.495193,0.053957,0.839869,-0.495193,0.222083,0.780419,-0.495193,0.381664,0.690939,-0.495193,0.526597,0.000000,-1.000000,0.000000],
rocket-3d/web/obj/rocket3d_full.js:    "colors": [],
rocket-3d/web/obj/rocket3d_full.js:    "uvs": [[0.991579,0.385329,0.970372,0.250971,0.951881,0.250914,0.973088,0.385272,0.970383,0.504025,0.970398,0.492087,0.951907,0.492030,0.951892,0.503968,0.970722,0.480685,0.952231,0.480628,0.971347,0.469796,0.952856,0.469739,0.972274,0.459373,0.953783,0.459315,0.973504,0.449369,0.955013,0.449312,0.975038,0.439739,0.956546,0.439681,0.976876,0.430435,0.958385,0.430377,0.979019,0.421411,0.960528,0.421353,0.981468,0.412620,0.962977,0.412563,0.984224,0.404017,0.965733,0.403959,0.987287,0.395553,0.968796,0.395496,0.970206,0.738392,0.973590,0.761056,0.991734,0.764346,0.988350,0.741682,0.975096,0.781359,0.993240,0.784649,0.975359,0.801374,0.993503,0.804663,0.974411,0.821216,0.992554,0.824505,0.972283,0.841001,0.990426,0.844291,0.969007,0.860847,0.987150,0.864136,0.964614,0.880869,0.982757,0.884158,0.959136,0.901183,0.977279,0.904472,0.952604,0.921905,0.970747,0.925195,0.945049,0.943153,0.963192,0.946442,0.936504,0.965041,0.954647,0.968331,0.921968,0.656919,0.970743,0.540184,0.959439,0.521761,0.978416,0.557408,0.928822,0.665141,0.984016,0.574963,0.987625,0.592937,0.933691,0.672118,0.989323,0.611418,0.989190,0.630494,0.938052,0.679337,0.987308,0.650253,0.983756,0.670782,0.941905,0.686840,0.945251,0.694671,0.978616,0.692169,0.948090,0.702876,0.971968,0.714502,0.950423,0.711497,0.954384,0.740302,0.963894,0.737868,0.953569,0.730166,0.954693,0.751030,0.954485,0.762376,0.952249,0.720580,0.931503,0.750097,0.929668,0.760818,0.941549,0.751652,0.932847,0.738806,0.933691,0.726922,0.948074,0.775325,0.927339,0.771017,0.953154,0.798063,0.917337,0.798939,0.956694,0.819967,0.924510,0.780739,0.921178,0.790031,0.912984,0.807508,0.908114,0.815786,0.958599,0.841136,0.958772,0.861673,0.957119,0.881677,0.953545,0.901248,0.902722,0.823819,0.947952,0.920489,0.940247,0.939499,0.896804,0.831651,0.930334,0.958378,0.888624,0.840999,0.916385,0.978897,0.945146,0.991001,0.927003,0.987711,0.974226,0.122509,0.975060,0.259551,0.996294,0.259486,0.995460,0.122444,0.974478,0.007008,0.974505,0.018919,0.995739,0.018854,0.995712,0.006943,0.974524,0.030253,0.995758,0.030188,0.974533,0.041033,0.995767,0.040968,0.974534,0.051306,0.995768,0.051241,0.974527,0.061118,0.995761,0.061053,0.974511,0.070516,0.995745,0.070450,0.974487,0.079544,0.995721,0.079479,0.974454,0.088252,0.995688,0.088186,0.974414,0.096683,0.995648,0.096618,0.974365,0.104885,0.995599,0.104820,0.974309,0.112904,0.995543,0.112839,0.873961,0.030133,0.875867,0.054294,0.896923,0.053777,0.895017,0.029616,0.877182,0.075619,0.898238,0.075102,0.878163,0.096384,0.899219,0.095867,0.878825,0.116716,0.899880,0.116200,0.879179,0.136743,0.900235,0.136226,0.879240,0.156590,0.900296,0.156073,0.879022,0.176385,0.900078,0.175869,0.878537,0.196255,0.899593,0.195738,0.877799,0.216327,0.898855,0.215810,0.876822,0.236727,0.897877,0.236210,0.875618,0.257582,0.896674,0.257065,0.836289,0.693238,0.862382,0.569734,0.842626,0.552463,0.877216,0.586220,0.847380,0.700736,0.889546,0.603283,0.899500,0.621001,0.855601,0.707209,0.907204,0.639454,0.912789,0.658720,0.863257,0.713984,0.916380,0.678880,0.918106,0.700013,0.870361,0.721106,0.876926,0.728619,0.918095,0.722197,0.882967,0.736567,0.916475,0.745511,0.888497,0.744995,0.902158,0.773602,0.913374,0.770036,0.898079,0.763469,0.905781,0.784393,0.908940,0.795867,0.893530,0.753948,0.847272,0.968722,0.848756,0.957884,0.835525,0.968000,0.846390,0.980086,0.846125,0.992000,0.826536,0.944943,0.850846,0.947527,0.819279,0.922699,0.860772,0.918872,0.813859,0.901160,0.853544,0.937603,0.856852,0.928067,0.865307,0.909972,0.870459,0.901320,0.810379,0.880217,0.808946,0.859762,0.809663,0.839688,0.812635,0.819886,0.876232,0.892869,0.817967,0.800248,0.825763,0.780666,0.882626,0.884574,0.836129,0.761031,0.891553,0.874583,0.851077,0.739430,0.895260,0.278528,0.874204,0.279045,0.589426,0.126917,0.567433,0.265164,0.585741,0.266588,0.607734,0.128341,0.567706,0.014271,0.567710,0.026103,0.586017,0.027526,0.586014,0.015694,0.568031,0.037331,0.586339,0.038754,0.568664,0.047978,0.586972,0.049402,0.569608,0.058092,0.587916,0.059516,0.570866,0.067718,0.589173,0.069142,0.572436,0.076902,0.590744,0.078326,0.574321,0.085690,0.592629,0.087114,0.576520,0.094128,0.594828,0.095551,0.579035,0.102261,0.597343,0.103685,0.581866,0.110137,0.600174,0.111561,0.585014,0.117800,0.603321,0.119224,0.934076,0.091679,0.926624,0.111482,0.944881,0.109888,0.952332,0.090086,0.921497,0.129836,0.939753,0.128243,0.917681,0.148421,0.935937,0.146827,0.915124,0.167332,0.933381,0.165739,0.913774,0.186665,0.932030,0.185072,0.913577,0.206517,0.931834,0.204923,0.914483,0.226982,0.932739,0.225388,0.916437,0.248157,0.934693,0.246563,0.919387,0.270138,0.937644,0.268544,0.923281,0.293020,0.941538,0.291426,0.928067,0.316899,0.946324,0.315306,0.953444,0.423941,0.911213,0.541319,0.925366,0.561838,0.901151,0.522438,0.945145,0.414593,0.893329,0.503428,0.887649,0.484187,0.939140,0.406760,0.884014,0.464615,0.882327,0.444611,0.933669,0.398727,0.882493,0.424075,0.884413,0.402905,0.928726,0.390449,0.924308,0.381879,0.887991,0.381002,0.920409,0.372971,0.893130,0.358264,0.917025,0.363679,0.909919,0.333036,0.899733,0.334592,0.911785,0.343758,0.908550,0.321746,0.907689,0.309862,0.914152,0.353957,0.829391,0.548387,0.831722,0.538305,0.818683,0.545464,0.827566,0.559087,0.826256,0.570431,0.812503,0.521705,0.834565,0.528797,0.807838,0.499053,0.846231,0.503279,0.804794,0.477424,0.837927,0.519819,0.841813,0.511328,0.851186,0.495629,0.856685,0.488334,0.803477,0.456734,0.803992,0.436900,0.806445,0.417838,0.810942,0.399465,0.862734,0.481349,0.817589,0.381697,0.826491,0.364452,0.869341,0.474631,0.837753,0.347644,0.878421,0.466773,0.853394,0.329826,0.951940,0.340299,0.933683,0.341893,0.327024,0.252094,0.315520,0.252232,0.330383,0.454469,0.350105,0.454233,0.166779,0.153156,0.133948,0.152638,0.133633,0.163212,0.166465,0.163730,0.166974,0.142294,0.134142,0.141776,0.167041,0.131562,0.134210,0.131044,0.166979,0.121372,0.134148,0.120854,0.166790,0.112116,0.133958,0.111597,0.166480,0.104149,0.133649,0.103631,0.055317,0.112690,0.022431,0.112798,0.022583,0.121710,0.055469,0.121601,0.055198,0.102735,0.022312,0.102844,0.055116,0.092120,0.022230,0.092228,0.055076,0.081251,0.022190,0.081360,0.055078,0.070548,0.022192,0.070656,0.055122,0.060420,0.022237,0.060529,0.055207,0.051258,0.022322,0.051367,0.055330,0.043413,0.022444,0.043521,0.173045,0.067353,0.140253,0.067294,0.140738,0.076081,0.173529,0.076140,0.172706,0.057486,0.139914,0.057427,0.172526,0.046918,0.139734,0.046859,0.172511,0.036056,0.139719,0.035997,0.172662,0.025317,0.139870,0.025259,0.172973,0.015114,0.140181,0.015055,0.173432,0.005839,0.140640,0.005780,0.174979,0.182585,0.173175,0.190997,0.204928,0.191030,0.206732,0.182617,0.171832,0.200591,0.203585,0.200624,0.171003,0.210998,0.202756,0.211031,0.170718,0.221818,0.202471,0.221850,0.170990,0.232635,0.202743,0.232667,0.171807,0.243034,0.203560,0.243066,0.173138,0.252614,0.204891,0.252646,0.174933,0.261008,0.206686,0.261040,0.050650,0.008233,0.043247,0.007762,0.043233,0.040598,0.050635,0.041069,0.034434,0.007384,0.034419,0.040220,0.730813,0.249773,0.735044,0.254901,0.745217,0.255556,0.739616,0.250340,0.747006,0.250970,0.753758,0.256284,0.752701,0.251639,0.760339,0.257057,0.513479,0.993918,0.518290,0.990501,0.507218,0.992040,0.503899,0.995249,0.493500,0.996066,0.495201,0.992984,0.482700,0.993298,0.482683,0.996338,0.471863,0.996053,0.470196,0.992969,0.145452,0.997070,0.153614,0.991398,0.148341,0.990497,0.140889,0.996291,0.140945,0.989691,0.134489,0.995593,0.126498,0.995003,0.131710,0.989009,0.120991,0.988478,0.117223,0.994544,0.107020,0.994233,0.109199,0.988118,0.096789,0.987944,0.096281,0.994082,0.085419,0.994097,0.084236,0.987961,0.072024,0.988170,0.074851,0.994277,0.064984,0.994616,0.060621,0.988561,0.050466,0.989121,0.056197,0.995100,0.048827,0.995712,0.041949,0.989828,0.261348,0.246588,0.256030,0.252220,0.266619,0.252319,0.270510,0.246673,0.280638,0.246718,0.278323,0.252370,0.290692,0.252372,0.291341,0.246720,0.302210,0.246679,0.303252,0.252326,0.312825,0.246598,0.322780,0.246479,0.337323,0.251919,0.331691,0.246327,0.339216,0.246148,0.346019,0.251711,0.649219,0.251700,0.643987,0.256767,0.654679,0.256384,0.658471,0.251369,0.668659,0.251150,0.666453,0.256131,0.678855,0.256019,0.679391,0.251053,0.690255,0.251081,0.691410,0.256051,0.703634,0.256227,0.700832,0.251233,0.720935,0.249290,0.723629,0.254343,0.734143,0.453194,0.753712,0.454150,0.697460,0.454505,0.718416,0.454807,0.675937,0.454450,0.654675,0.454642,0.634491,0.455075,0.616161,0.455732,0.634787,0.257266,0.600388,0.456587,0.367759,0.453932,0.024548,0.007114,0.024534,0.039950,0.309351,0.454630,0.287819,0.454710,0.266613,0.454705,0.246549,0.454618,0.228396,0.454449,0.246964,0.252079,0.212854,0.454207,0.037787,0.784586,0.020377,0.785546,0.057335,0.783915,0.078271,0.783557,0.099791,0.783528,0.121066,0.783827,0.141281,0.784443,0.159657,0.785354,0.175489,0.786523,0.458169,0.992011,0.440904,0.808548,0.421897,0.805887,0.447082,0.990459,0.461522,0.810191,0.482959,0.810755,0.504389,0.810217,0.524990,0.808598,0.543971,0.805960,0.527990,0.988427,0.560601,0.802405,0.771153,0.455274,0.785796,0.456522,0.760927,0.595588,0.781622,0.596922,0.798996,0.598403,0.575254,0.668599,0.555522,0.672818,0.533000,0.675948,0.508555,0.677868,0.483126,0.678507,0.457690,0.677838,0.433225,0.675888,0.410671,0.672731,0.191050,0.643386,0.172264,0.641999,0.150459,0.640919,0.126473,0.640188,0.101228,0.639833,0.075693,0.639868,0.050851,0.640292,0.027655,0.641089,0.006998,0.642228,0.197753,0.597026,0.216195,0.597314,0.237735,0.597514,0.261543,0.597618,0.286705,0.597623,0.312255,0.597528,0.337211,0.597337,0.360612,0.597058,0.381561,0.596700,0.584963,0.598070,0.603678,0.597055,0.625428,0.596276,0.649378,0.595762,0.674607,0.595534,0.700146,0.595600,0.725012,0.595957,0.737707,0.594454,0.737586,0.695775,0.761957,0.696965,0.700967,0.696882,0.727067,0.697257,0.674162,0.696813,0.647682,0.697052,0.622545,0.697591,0.599716,0.698409,0.580073,0.699474,0.364114,0.698972,0.386101,0.698597,0.339552,0.699266,0.313359,0.699466,0.286542,0.699566,0.260132,0.699561,0.235143,0.699451,0.212536,0.699241,0.193179,0.698939,0.024562,0.539125,0.002880,0.540320,0.048908,0.538289,0.074982,0.537843,0.101783,0.537806,0.128280,0.538179,0.153455,0.538947,0.176342,0.540080,0.196059,0.541536,0.430859,0.579138,0.407187,0.575825,0.456537,0.581185,0.483234,0.581887,0.509924,0.581217,0.535581,0.579200,0.559220,0.575915,0.579931,0.571488,0.783679,0.698365,0.801914,0.699919,0.759781,0.796235,0.781502,0.797635,0.799738,0.799189,0.580029,0.475467,0.559317,0.479895,0.535679,0.483180,0.510022,0.485196,0.483332,0.485866,0.456635,0.485164,0.430956,0.483117,0.407284,0.479804,0.386430,0.571372,0.386527,0.475352,0.176519,0.440919,0.153633,0.439785,0.128458,0.439017,0.101960,0.438644,0.075159,0.438682,0.049085,0.439127,0.024739,0.439963,0.003057,0.441158,0.193508,0.798386,0.212864,0.798687,0.235472,0.798897,0.260460,0.799007,0.286871,0.799012,0.313688,0.798912,0.339880,0.798712,0.364442,0.798418,0.386430,0.798043,0.580029,0.798768,0.599672,0.797703,0.622501,0.796885,0.647638,0.796346,0.674118,0.796107,0.700923,0.796176,0.727023,0.796551,0.735410,0.795045,0.732198,0.870910,0.755720,0.872059,0.700251,0.872106,0.725441,0.872468,0.674379,0.872039,0.648822,0.872270,0.624560,0.872791,0.602526,0.873580,0.583567,0.874608,0.362359,0.874113,0.383580,0.873750,0.338652,0.874396,0.313372,0.874589,0.287490,0.874686,0.261999,0.874681,0.237881,0.874575,0.216061,0.874373,0.197379,0.874081,0.027289,0.364737,0.006363,0.365890,0.050787,0.363929,0.075953,0.363500,0.101820,0.363464,0.127395,0.363824,0.151693,0.364565,0.173782,0.365659,0.410001,0.405613,0.389967,0.401316,0.432849,0.408811,0.457632,0.410787,0.483399,0.411464,0.509160,0.410817,0.533923,0.408871,0.556738,0.405701,0.576728,0.401427,0.776685,0.873410,0.794286,0.874910,0.749664,0.929165,0.769113,0.930418,0.785441,0.931810,0.570024,0.344793,0.551480,0.348758,0.530314,0.351699,0.507340,0.353504,0.483442,0.354104,0.459538,0.353476,0.436546,0.351643,0.415350,0.348676,0.396764,0.344690,0.168130,0.309580,0.147638,0.308565,0.125096,0.307877,0.101371,0.307544,0.077373,0.307577,0.054027,0.307976,0.032228,0.308724,0.012814,0.309795,0.204819,0.930761,0.222151,0.931031,0.242393,0.931219,0.264768,0.931317,0.288415,0.931322,0.312427,0.931233,0.335880,0.931053,0.357872,0.930790,0.377560,0.930454,0.590697,0.931722,0.608285,0.930768,0.628726,0.930036,0.651234,0.929554,0.674944,0.929339,0.698945,0.929401,0.722315,0.929737,0.727842,0.928099,0.720036,0.992881,0.738357,0.993775,0.696281,0.994389,0.715901,0.994671,0.676130,0.994337,0.656224,0.994517,0.637327,0.994922,0.620166,0.995537,0.605399,0.996338,0.348460,0.994427,0.364989,0.994145,0.329996,0.994648,0.310305,0.994798,0.290146,0.994873,0.270292,0.994869,0.251507,0.994787,0.234512,0.994629,0.219961,0.994402,0.042300,0.246307,0.026001,0.247205,0.060602,0.245678,0.080203,0.245343,0.100350,0.245315,0.120269,0.245596,0.139195,0.246173,0.156399,0.247025,0.426310,0.282679,0.410706,0.279332,0.444106,0.285170,0.463409,0.286709,0.483479,0.287236,0.503543,0.286733,0.522830,0.285217,0.540601,0.282747,0.556170,0.279419,0.754686,0.994827,0.768395,0.995996,0.408603,0.153320,0.402748,0.224693,0.414215,0.223641,0.424897,0.151825,0.417676,0.073120,0.405130,0.077829,0.434012,0.147019,0.442841,0.143705,0.433054,0.068996,0.453664,0.140803,0.466064,0.138426,0.450674,0.065618,0.469858,0.063114,0.479565,0.136663,0.493648,0.135585,0.489870,0.061580,0.509940,0.061077,0.507772,0.135230,0.521395,0.135614,0.529297,0.061623,0.533992,0.136722,0.547197,0.063196,0.562952,0.065738,0.545080,0.138510,0.843404,0.216395,0.825162,0.149949,0.813055,0.149349,0.826199,0.215543,0.807274,0.214966,0.799736,0.148943,0.785718,0.148746,0.787354,0.214686,0.767207,0.214714,0.771539,0.148766,0.757745,0.149001,0.747606,0.215048,0.729304,0.215677,0.744865,0.149444,0.733394,0.150076,0.713005,0.216576,0.627391,0.018072,0.612841,0.017756,0.635798,0.085941,0.646037,0.086163,0.657996,0.086347,0.644385,0.018334,0.663169,0.018532,0.671216,0.086486,0.685188,0.086575,0.683022,0.018657,0.703182,0.018706,0.699375,0.086609,0.713232,0.086588,0.722873,0.018676,0.741338,0.018569,0.726227,0.086513,0.737860,0.086386,0.757868,0.018388,0.314135,0.014474,0.299371,0.015320,0.322391,0.084850,0.332781,0.084255,0.344857,0.083785,0.331294,0.013807,0.350190,0.013343,0.358155,0.083459,0.372164,0.083290,0.370096,0.013102,0.390246,0.013092,0.386345,0.083283,0.400153,0.083439,0.409867,0.013314,0.390364,0.155279,0.389913,0.226072,0.387873,0.270279,0.396383,0.269365,0.383188,0.126895,0.392344,0.126999,0.373786,0.126900,0.364498,0.127013,0.355681,0.127228,0.347675,0.127540,0.340786,0.127934,0.714167,0.128308,0.721880,0.128223,0.705551,0.128358,0.696363,0.128372,0.686956,0.128349,0.677693,0.128290,0.668928,0.128198,0.660999,0.128076,0.654210,0.127928,0.757299,0.108982,0.749693,0.109401,0.765838,0.108689,0.774984,0.108532,0.784385,0.108519,0.793679,0.108650,0.802510,0.108919,0.810538,0.109317,0.522809,0.183434,0.530161,0.184620,0.514457,0.182699,0.505425,0.182445,0.496060,0.182680,0.486723,0.183395,0.477771,0.184563,0.469550,0.186140,0.462374,0.188064,0.456521,0.190261,0.403986,0.268667,0.389799,0.300094,0.394055,0.299704,0.475622,0.219955,0.478899,0.218724,0.482916,0.217647,0.487519,0.216764,0.492531,0.216110,0.497759,0.215710,0.503002,0.215578,0.508058,0.215721,0.512735,0.216132,0.516850,0.216796,0.657091,0.227714,0.652361,0.193216,0.648978,0.194160,0.651048,0.229400,0.793364,0.081925,0.788420,0.081774,0.783217,0.081701,0.777954,0.081708,0.772833,0.081796,0.768052,0.081960,0.763794,0.082195,0.670177,0.156249,0.673978,0.156331,0.678418,0.156400,0.683325,0.156451,0.688511,0.156484,0.693777,0.156497,0.698921,0.156489,0.703745,0.156461,0.708063,0.156414,0.356694,0.157217,0.360551,0.156996,0.365034,0.156822,0.369970,0.156701,0.375170,0.156638,0.380434,0.156635,0.385560,0.156693,0.385034,0.300606,0.378708,0.319026,0.376877,0.174126,0.690546,0.171903,0.781694,0.067899,0.298582,0.151197,0.301027,0.149898,0.298582,0.120497,0.657104,0.165798,0.498929,0.238082,0.200463,0.090982,0.190962,0.088296,0.193959,0.095261,0.201773,0.097470,0.129938,0.067764,0.124199,0.064465,0.116820,0.069061,0.120967,0.073351,0.111658,0.078948,0.109164,0.073664,0.101523,0.078099,0.102369,0.084340,0.093458,0.089318,0.094194,0.082194,0.087455,0.085792,0.085266,0.093693,0.078108,0.097295,0.081568,0.088755,0.076758,0.090968,0.072260,0.099986,0.067946,0.101664,0.073210,0.092348,0.005861,0.167098,0.008267,0.165240,0.008664,0.156346,0.006345,0.156285,0.006273,0.145465,0.008605,0.147446,0.008090,0.138882,0.005647,0.135053,0.004492,0.125450,0.007140,0.130983,0.283023,0.012363,0.278327,0.021262,0.277935,0.025961,0.282546,0.018077,0.282166,0.025484,0.277622,0.032054,0.277400,0.039307,0.281896,0.034302,0.281747,0.044190,0.277278,0.047440,0.277260,0.056141,0.281725,0.054769,0.281830,0.065632,0.277346,0.065076,0.277534,0.073902,0.282059,0.076362,0.282403,0.086546,0.277817,0.082279,0.278183,0.089885,0.282847,0.095793,0.060705,0.172360,0.060839,0.179886,0.066043,0.172165,0.065933,0.165974,0.065853,0.158644,0.060608,0.163448,0.065805,0.150456,0.060550,0.153493,0.060534,0.142877,0.065792,0.141724,0.065814,0.132785,0.060560,0.132008,0.060628,0.121305,0.065870,0.123981,0.065957,0.115651,0.060734,0.111178,0.060876,0.102016,0.066073,0.108116,0.182446,0.086078,0.175241,0.084412,0.181027,0.092067,0.186954,0.093436,0.175300,0.129610,0.182305,0.131435,0.066214,0.101664,0.104187,0.108224,0.104327,0.101772,0.104071,0.115759,0.103983,0.124089,0.103927,0.132893,0.103906,0.141832,0.103919,0.150564,0.103966,0.158752,0.104047,0.166082,0.278618,0.096428,0.240130,0.090335,0.240566,0.096878,0.239765,0.082729,0.239482,0.074352,0.239294,0.065526,0.239207,0.056591,0.239226,0.047890,0.239348,0.039757,0.239570,0.032504,0.239883,0.026411,0.043934,0.131698,0.042585,0.124768,0.005792,0.124053,0.044884,0.139597,0.045398,0.148161,0.045458,0.157061,0.045060,0.165954,0.007427,0.173786,0.044220,0.174500,0.006177,0.181655,0.042971,0.182370,0.004566,0.188546,0.041360,0.189261,0.074714,0.049561,0.067976,0.053159,0.082044,0.045466,0.089684,0.041032,0.097340,0.036428,0.104720,0.031832,0.190119,0.133644,0.195682,0.165293,0.077274,0.015119,0.229193,0.251275,0.233694,0.246460,0.229275,0.207550,0.012963,0.052777,0.009561,0.009185,0.009524,0.056803,0.215031,0.152627,0.217527,0.149753,0.215082,0.102197,0.057812,0.157374,0.257111,0.181490,0.257213,0.228934,0.259099,0.185766,0.216852,0.062972,0.233694,0.168404,0.229979,0.163451,0.230042,0.207550,0.129938,0.136495,0.012963,0.061348,0.008920,0.056803,0.008955,0.102245]],
rocket-3d/web/obj/rocket3d_full.js:    "faces": [42,4,3,38,0,0,1,2,0,1,2,42,4,38,37,0,0,2,3,0,2,3,42,11,10,26,0,4,5,6,4,5,6,42,11,26,25,0,4,6,7,4,6,7,42,10,9,27,0,5,8,9,5,8,9,42,10,27,26,0,5,9,6,5,9,6,42,9,24,28,0,8,10,11,8,10,11,42,9,28,27,0,8,11,9,8,11,9,42,24,23,29,0,10,12,13,10,12,13,42,24,29,28,0,10,13,11,10,13,11,42,23,8,30,0,12,14,15,12,14,15,42,23,30,29,0,12,15,13,12,15,13,42,8,7,31,0,14,16,17,14,16,17,42,8,31,30,0,14,17,15,14,17,15,42,7,6,32,0,16,18,19,16,18,19,42,7,32,31,0,16,19,17,16,19,17,42,6,5,33,0,18,20,21,18,20,21,42,6,33,32,0,18,21,19,18,21,19,42,5,22,34,0,20,22,23,20,22,23,42,5,34,33,0,20,23,21,20,23,21,42,22,21,35,0,22,24,25,22,24,25,42,22,35,34,0,22,25,23,22,25,23,42,21,20,36,0,24,26,27,24,26,27,42,21,36,35,0,24,27,25,24,27,25,42,20,4,37,0,26,0,3,26,0,3,42,20,37,36,0,26,3,27,26,3,27,42,3,19,39,0,28,29,30,1,28,29,42,3,39,38,0,28,30,31,1,29,2,42,19,18,40,0,29,32,33,28,30,31,42,19,40,39,0,29,33,30,28,31,29,42,18,17,41,0,32,34,35,30,32,33,42,18,41,40,0,32,35,33,30,33,31,42,17,16,42,0,34,36,37,32,34,35,42,17,42,41,0,34,37,35,32,35,33,42,16,15,43,0,36,38,39,34,36,37,42,16,43,42,0,36,39,37,34,37,35,42,15,2,44,0,38,40,41,36,38,39,42,15,44,43,0,38,41,39,36,39,37,42,2,14,45,0,40,42,43,38,40,41,42,2,45,44,0,40,43,41,38,41,39,42,14,1,46,0,42,44,45,40,42,43,42,14,46,45,0,42,45,43,40,43,41,42,1,0,47,0,44,46,47,42,44,45,42,1,47,46,0,44,47,45,42,45,43,42,0,13,48,0,46,48,49,44,46,47,42,0,48,47,0,46,49,47,44,47,45,42,13,12,49,0,48,50,51,46,48,49,42,13,49,48,0,48,51,49,46,49,47,42,4,19,3,0,52,53,54,0,28,1,42,18,19,4,0,55,53,52,30,28,0,42,18,4,20,0,55,52,56,30,0,26,42,17,18,20,0,57,55,56,32,30,26,42,16,17,20,0,58,57,56,34,32,26,42,16,20,21,0,58,56,59,34,26,24,42,15,16,21,0,60,58,59,36,34,24,42,2,15,21,0,61,60,59,38,36,24,42,2,21,22,0,61,59,62,38,24,22,42,14,2,22,0,63,61,62,40,38,22,42,1,14,22,0,64,63,62,42,40,22,42,5,1,22,0,65,64,62,20,42,22,42,6,1,5,0,66,64,65,18,42,20,42,0,1,6,0,67,64,66,44,42,18,42,0,6,7,0,67,66,68,44,18,16,42,13,0,8,0,69,67,70,46,44,14,42,8,0,7,0,70,67,68,14,44,16,42,9,12,24,0,71,72,73,8,48,10,42,10,12,9,0,74,72,71,5,48,8,42,11,12,10,0,75,72,74,4,48,5,42,13,8,23,0,69,70,76,46,14,12,42,24,12,13,0,73,72,69,10,48,46,42,24,13,23,0,73,69,76,10,46,12,42,27,28,49,0,77,78,79,9,11,49,42,26,27,49,0,80,77,79,6,9,49,42,25,26,49,0,81,80,79,7,6,49,42,48,28,29,0,82,78,83,47,11,13,42,48,49,28,0,82,79,78,47,49,11,42,47,32,46,0,84,85,86,45,19,43,42,29,30,48,0,83,87,82,13,15,47,42,47,31,32,0,84,88,85,45,17,19,42,30,47,48,0,87,84,82,15,45,47,42,30,31,47,0,87,88,84,15,17,45,42,33,34,46,0,89,90,86,21,23,43,42,32,33,46,0,85,89,86,19,21,43,42,45,46,34,0,91,86,90,41,43,23,42,44,34,43,0,92,90,93,39,23,37,42,44,45,34,0,92,91,90,39,41,23,42,42,35,41,0,94,95,96,35,25,33,42,43,35,42,0,93,95,94,37,25,35,42,43,34,35,0,93,90,95,37,23,25,42,40,36,39,0,97,98,99,31,27,29,42,41,36,40,0,96,98,97,33,27,31,42,41,35,36,0,96,95,98,33,25,27,42,39,37,38,0,99,100,101,29,3,2,42,39,36,37,0,99,98,100,29,27,3,42,25,49,12,0,102,51,50,7,49,48,42,11,25,12,0,103,102,50,4,7,48,42,54,53,88,0,104,105,106,50,51,52,42,54,88,87,0,104,106,107,50,52,53,42,61,60,76,0,108,109,110,54,55,56,42,61,76,75,0,108,110,111,54,56,57,42,60,59,77,0,109,112,113,55,58,59,42,60,77,76,0,109,113,110,55,59,56,42,59,74,78,0,112,114,115,58,60,61,42,59,78,77,0,112,115,113,58,61,59,42,74,73,79,0,114,116,117,60,62,63,42,74,79,78,0,114,117,115,60,63,61,42,73,58,80,0,116,118,119,62,64,65,42,73,80,79,0,116,119,117,62,65,63,42,58,57,81,0,118,120,121,64,66,67,42,58,81,80,0,118,121,119,64,67,65,42,57,56,82,0,120,122,123,66,68,69,42,57,82,81,0,120,123,121,66,69,67,42,56,55,83,0,122,124,125,68,70,71,42,56,83,82,0,122,125,123,68,71,69,42,55,72,84,0,124,126,127,70,72,73,42,55,84,83,0,124,127,125,70,73,71,42,72,71,85,0,126,128,129,72,74,75,42,72,85,84,0,126,129,127,72,75,73,42,71,70,86,0,128,130,131,74,76,77,42,71,86,85,0,128,131,129,74,77,75,42,70,54,87,0,130,104,107,76,50,53,42,70,87,86,0,130,107,131,76,53,77,42,53,69,89,0,132,133,134,51,78,79,42,53,89,88,0,132,134,135,51,79,52,42,69,68,90,0,133,136,137,78,80,81,42,69,90,89,0,133,137,134,78,81,79,42,68,67,91,0,136,138,139,80,82,83,42,68,91,90,0,136,139,137,80,83,81,42,67,66,92,0,138,140,141,82,84,85,42,67,92,91,0,138,141,139,82,85,83,42,66,65,93,0,140,142,143,84,86,87,42,66,93,92,0,140,143,141,84,87,85,42,65,52,94,0,142,144,145,86,88,89,42,65,94,93,0,142,145,143,86,89,87,42,52,64,95,0,144,146,147,88,90,91,42,52,95,94,0,144,147,145,88,91,89,42,64,51,96,0,146,148,149,90,92,93,42,64,96,95,0,146,149,147,90,93,91,42,51,50,97,0,148,150,151,92,94,95,42,51,97,96,0,148,151,149,92,95,93,42,50,63,98,0,150,152,153,94,96,97,42,50,98,97,0,150,153,151,94,97,95,42,63,62,99,0,152,154,155,96,98,99,42,63,99,98,0,152,155,153,96,99,97,42,54,69,53,0,156,157,158,50,78,51,42,68,69,54,0,159,157,156,80,78,50,42,68,54,70,0,159,156,160,80,50,76,42,67,68,70,0,161,159,160,82,80,76,42,66,67,70,0,162,161,160,84,82,76,42,66,70,71,0,162,160,163,84,76,74,42,65,66,71,0,164,162,163,86,84,74,42,52,65,71,0,165,164,163,88,86,74,42,52,71,72,0,165,163,166,88,74,72,42,64,52,72,0,167,165,166,90,88,72,42,51,64,72,0,168,167,166,92,90,72,42,55,51,72,0,169,168,166,70,92,72,42,56,51,55,0,170,168,169,68,92,70,42,50,51,56,0,171,168,170,94,92,68,42,50,56,57,0,171,170,172,94,68,66,42,63,50,58,0,173,171,174,96,94,64,42,58,50,57,0,174,171,172,64,94,66,42,59,62,74,0,175,176,177,58,98,60,42,60,62,59,0,178,176,175,55,98,58,42,61,62,60,0,179,176,178,54,98,55,42,63,58,73,0,173,174,180,96,64,62,42,74,62,63,0,177,176,173,60,98,96,42,74,63,73,0,177,173,180,60,96,62,42,77,78,99,0,181,182,183,59,61,99,42,76,77,99,0,184,181,183,56,59,99,42,75,76,99,0,185,184,183,57,56,99,42,98,78,79,0,186,182,187,97,61,63,42,98,99,78,0,186,183,182,97,99,61,42,97,82,96,0,188,189,190,95,69,93,42,79,80,98,0,187,191,186,63,65,97,42,97,81,82,0,188,192,189,95,67,69,42,80,97,98,0,191,188,186,65,95,97,42,80,81,97,0,191,192,188,65,67,95,42,83,84,96,0,193,194,190,71,73,93,42,82,83,96,0,189,193,190,69,71,93,42,95,96,84,0,195,190,194,91,93,73,42,94,84,93,0,196,194,197,89,73,87,42,94,95,84,0,196,195,194,89,91,73,42,92,85,91,0,198,199,200,85,75,83,42,93,85,92,0,197,199,198,87,75,85,42,93,84,85,0,197,194,199,87,73,75,42,90,86,89,0,201,202,203,81,77,79,42,91,86,90,0,200,202,201,83,77,81,42,91,85,86,0,200,199,202,83,75,77,42,89,87,88,0,203,204,205,79,53,52,42,89,86,87,0,203,202,204,79,77,53,42,75,99,62,0,206,155,154,57,99,98,42,61,75,62,0,207,206,154,54,57,98,42,104,103,138,0,208,209,210,100,101,102,42,104,138,137,0,208,210,211,100,102,103,42,111,110,126,0,212,213,214,104,105,106,42,111,126,125,0,212,214,215,104,106,107,42,110,109,127,0,213,216,217,105,108,109,42,110,127,126,0,213,217,214,105,109,106,42,109,124,128,0,216,218,219,108,110,111,42,109,128,127,0,216,219,217,108,111,109,42,124,123,129,0,218,220,221,110,112,113,42,124,129,128,0,218,221,219,110,113,111,42,123,108,130,0,220,222,223,112,114,115,42,123,130,129,0,220,223,221,112,115,113,42,108,107,131,0,222,224,225,114,116,117,42,108,131,130,0,222,225,223,114,117,115,42,107,106,132,0,224,226,227,116,118,119,42,107,132,131,0,224,227,225,116,119,117,42,106,105,133,0,226,228,229,118,120,121,42,106,133,132,0,226,229,227,118,121,119,42,105,122,134,0,228,230,231,120,122,123,42,105,134,133,0,228,231,229,120,123,121,42,122,121,135,0,230,232,233,122,124,125,42,122,135,134,0,230,233,231,122,125,123,42,121,120,136,0,232,234,235,124,126,127,42,121,136,135,0,232,235,233,124,127,125,42,120,104,137,0,234,208,211,126,100,103,42,120,137,136,0,234,211,235,126,103,127,42,103,119,139,0,236,237,238,101,128,129,42,103,139,138,0,236,238,239,101,129,102,42,119,118,140,0,237,240,241,128,130,131,42,119,140,139,0,237,241,238,128,131,129,42,118,117,141,0,240,242,243,130,132,133,42,118,141,140,0,240,243,241,130,133,131,42,117,116,142,0,242,244,245,132,134,135,42,117,142,141,0,242,245,243,132,135,133,42,116,115,143,0,244,246,247,134,136,137,42,116,143,142,0,244,247,245,134,137,135,42,115,102,144,0,246,248,249,136,138,139,42,115,144,143,0,246,249,247,136,139,137,42,102,114,145,0,248,250,251,138,140,141,42,102,145,144,0,248,251,249,138,141,139,42,114,101,146,0,250,252,253,140,142,143,42,114,146,145,0,250,253,251,140,143,141,42,101,100,147,0,252,254,255,142,144,145,42,101,147,146,0,252,255,253,142,145,143,42,100,113,148,0,254,256,257,144,146,147,42,100,148,147,0,254,257,255,144,147,145,42,113,112,149,0,256,258,259,146,148,149,42,113,149,148,0,256,259,257,146,149,147,42,104,119,103,0,260,261,262,100,128,101,42,118,119,104,0,263,261,260,130,128,100,42,118,104,120,0,263,260,264,130,100,126,42,117,118,120,0,265,263,264,132,130,126,42,116,117,120,0,266,265,264,134,132,126,42,116,120,121,0,266,264,267,134,126,124,42,115,116,121,0,268,266,267,136,134,124,42,102,115,121,0,269,268,267,138,136,124,42,102,121,122,0,269,267,270,138,124,122,42,114,102,122,0,271,269,270,140,138,122,42,101,114,122,0,272,271,270,142,140,122,42,105,101,122,0,273,272,270,120,142,122,42,106,101,105,0,274,272,273,118,142,120,42,100,101,106,0,275,272,274,144,142,118,42,100,106,107,0,275,274,276,144,118,116,42,113,100,108,0,277,275,278,146,144,114,42,108,100,107,0,278,275,276,114,144,116,42,109,112,124,0,279,280,281,108,148,110,42,110,112,109,0,282,280,279,105,148,108,42,111,112,110,0,283,280,282,104,148,105,42,113,108,123,0,277,278,284,146,114,112,42,124,112,113,0,281,280,277,110,148,146,42,124,113,123,0,281,277,284,110,146,112,42,127,128,149,0,285,286,287,109,111,149,42,126,127,149,0,288,285,287,106,109,149,42,125,126,149,0,289,288,287,107,106,149,42,148,128,129,0,290,286,291,147,111,113,42,148,149,128,0,290,287,286,147,149,111,42,147,132,146,0,292,293,294,145,119,143,42,129,130,148,0,291,295,290,113,115,147,42,147,131,132,0,292,296,293,145,117,119,42,130,147,148,0,295,292,290,115,145,147,42,130,131,147,0,295,296,292,115,117,145,42,133,134,146,0,297,298,294,121,123,143,42,132,133,146,0,293,297,294,119,121,143,42,145,146,134,0,299,294,298,141,143,123,42,144,134,143,0,300,298,301,139,123,137,42,144,145,134,0,300,299,298,139,141,123,42,142,135,141,0,302,303,304,135,125,133,42,143,135,142,0,301,303,302,137,125,135,42,143,134,135,0,301,298,303,137,123,125,42,140,136,139,0,305,306,307,131,127,129,42,141,136,140,0,304,306,305,133,127,131,42,141,135,136,0,304,303,306,133,125,127,42,139,137,138,0,307,308,309,129,103,102,42,139,136,137,0,307,306,308,129,127,103,42,125,149,112,0,310,259,258,107,149,148,42,111,125,112,0,311,310,258,104,107,148,43,238,237,254,253,0,312,313,314,315,150,151,152,153,43,180,183,182,181,0,316,317,318,319,154,155,156,157,43,180,179,184,183,0,316,320,321,317,154,158,159,155,43,178,185,184,179,0,322,323,321,320,160,161,159,158,43,178,177,186,185,0,322,324,325,323,160,162,163,161,43,176,187,186,177,0,326,327,325,324,164,165,163,162,43,176,175,188,187,0,326,328,329,327,164,166,167,165,43,174,189,188,175,0,330,331,332,333,168,169,167,166,43,174,173,190,189,0,330,334,335,331,168,170,171,169,43,172,191,190,173,0,336,337,335,334,172,173,171,170,43,172,171,192,191,0,336,338,339,337,172,174,175,173,43,170,193,192,171,0,340,341,339,338,176,177,175,174,43,170,169,194,193,0,340,342,343,341,176,178,179,177,43,168,195,194,169,0,344,345,343,342,180,181,179,178,43,168,167,196,195,0,344,346,347,345,180,182,183,181,43,166,197,196,167,0,348,349,350,351,184,185,183,182,43,166,165,198,197,0,348,352,353,349,184,186,187,185,43,164,199,198,165,0,354,355,353,352,188,189,187,186,43,164,163,200,199,0,354,356,357,355,188,190,191,189,43,162,201,200,163,0,358,359,357,356,192,193,191,190,43,162,161,202,201,0,358,360,361,359,192,194,195,193,43,160,203,202,161,0,362,363,361,360,196,197,195,194,43,160,159,204,203,0,364,365,366,367,196,198,199,197,43,158,205,204,159,0,368,369,366,365,200,201,199,198,43,157,206,205,158,0,370,371,369,368,202,203,201,200,43,157,156,207,206,0,370,372,373,371,202,204,205,203,43,155,208,207,156,0,374,375,373,372,206,207,205,204,43,155,154,209,208,0,374,376,377,375,206,208,209,207,43,153,210,209,154,0,378,379,377,376,210,211,209,208,43,153,152,211,210,0,378,380,381,379,210,212,213,211,43,152,151,212,211,0,382,383,384,385,212,214,215,213,43,150,213,212,151,0,386,387,384,383,216,217,215,214,43,213,214,215,212,0,388,389,390,391,217,218,219,215,43,211,212,215,216,0,392,391,390,393,213,215,219,220,43,210,211,216,217,0,394,392,393,395,211,213,220,221,43,210,217,218,209,0,396,397,398,399,211,221,222,209,43,208,209,218,219,0,400,399,398,401,207,209,222,223,43,208,219,220,207,0,400,401,402,403,207,223,224,205,43,206,207,220,221,0,404,403,402,405,203,205,224,225,43,206,221,222,205,0,406,407,408,409,203,225,226,201,43,205,222,223,204,0,409,408,410,411,201,226,227,199,43,203,204,223,224,0,412,411,410,413,197,199,227,228,43,203,224,225,202,0,412,413,414,415,197,228,229,195,43,201,202,225,226,0,416,415,414,417,193,195,229,230,43,201,226,227,200,0,416,417,418,419,193,230,231,191,43,199,200,227,228,0,420,419,418,421,189,191,231,232,43,199,228,229,198,0,420,421,422,423,189,232,233,187,43,197,198,229,230,0,424,423,422,425,185,187,233,234,43,197,230,231,196,0,424,425,426,427,185,234,235,183,43,195,196,231,232,0,428,427,426,429,181,183,235,236,43,195,232,233,194,0,430,431,432,433,181,236,237,179,43,193,194,233,234,0,434,433,432,435,177,179,237,238,43,193,234,235,192,0,434,435,436,437,177,238,239,175,43,191,192,235,236,0,438,437,436,439,173,175,239,240,43,191,236,237,190,0,438,439,313,440,173,240,151,171,43,189,190,237,238,0,441,440,313,312,169,171,151,150,43,189,238,239,188,0,441,312,442,443,169,150,241,167,43,187,188,239,240,0,444,443,442,445,165,167,241,242,43,187,240,241,186,0,446,447,448,449,165,242,243,163,43,185,186,241,242,0,450,449,448,451,161,163,243,244,43,185,242,243,184,0,450,451,452,453,161,244,245,159,43,183,184,243,244,0,454,453,452,455,155,159,245,246,43,183,244,245,182,0,454,455,456,457,155,246,247,156,43,213,182,245,214,0,388,458,459,389,217,156,247,218,43,214,245,246,277,0,389,459,460,461,218,247,248,249,43,244,247,246,245,0,455,462,463,456,246,250,248,247,43,244,243,248,247,0,455,452,464,462,246,245,251,250,43,242,249,248,243,0,451,465,464,452,244,252,251,245,43,242,241,250,249,0,451,448,466,465,244,243,253,252,43,240,251,250,241,0,447,467,466,448,242,254,253,243,43,240,239,252,251,0,447,468,469,467,242,241,255,254,43,238,253,252,239,0,312,315,470,442,150,153,255,241,43,150,181,182,213,0,386,471,472,387,216,157,156,217,43,236,255,254,237,0,439,473,314,313,240,256,152,151,43,236,235,256,255,0,439,436,474,473,240,239,257,256,43,234,257,256,235,0,435,475,474,436,238,258,257,239,43,234,233,258,257,0,435,432,476,475,238,237,259,258,43,232,259,258,233,0,431,477,476,432,236,260,259,237,43,232,231,260,259,0,431,478,479,477,236,235,261,260,43,230,261,260,231,0,425,480,481,426,234,262,261,235,43,230,229,262,261,0,425,422,482,480,234,233,263,262,43,228,263,262,229,0,421,483,482,422,232,264,263,233,43,228,227,264,263,0,421,418,484,483,232,231,265,264,43,226,265,264,227,0,417,485,484,418,230,266,265,231,43,226,225,266,265,0,417,414,486,485,230,229,267,266,43,224,267,266,225,0,413,487,486,414,228,268,267,229,43,224,223,268,267,0,413,410,488,487,228,227,269,268,43,222,269,268,223,0,489,490,491,492,226,270,269,227,43,221,270,269,222,0,405,493,490,489,225,271,270,226,43,221,220,271,270,0,405,402,494,493,225,224,272,271,43,219,272,271,220,0,401,495,494,402,223,273,272,224,43,219,218,273,272,0,401,398,496,495,223,222,274,273,43,217,274,273,218,0,397,497,496,398,221,275,274,222,43,217,216,275,274,0,397,498,499,497,221,220,276,275,43,216,215,276,275,0,393,390,500,501,220,219,277,276,43,214,277,276,215,0,389,461,500,390,218,249,277,219,43,277,278,279,276,0,461,502,503,500,249,278,279,277,43,275,276,279,280,0,501,500,503,504,276,277,279,280,43,274,275,280,281,0,497,499,505,506,275,276,280,281,43,274,281,282,273,0,497,506,507,496,275,281,282,274,43,272,273,282,283,0,495,496,507,508,273,274,282,283,43,272,283,284,271,0,495,508,509,494,273,283,284,272,43,270,271,284,285,0,493,494,509,510,271,272,284,285,43,270,285,286,269,0,493,510,511,490,271,285,286,270,43,269,286,287,268,0,490,511,512,491,270,286,287,269,43,267,268,287,288,0,487,488,513,514,268,269,287,288,43,267,288,289,266,0,487,514,515,486,268,288,289,267,43,265,266,289,290,0,485,486,515,516,266,267,289,290,43,265,290,291,264,0,485,516,517,484,266,290,291,265,43,263,264,291,292,0,483,484,517,518,264,265,291,292,43,263,292,293,262,0,483,518,519,482,264,292,293,263,43,261,262,293,294,0,480,482,519,520,262,263,293,294,43,261,294,295,260,0,480,520,521,481,262,294,295,261,43,259,260,295,296,0,477,479,522,523,260,261,295,296,43,259,296,297,258,0,477,523,524,476,260,296,297,259,43,257,258,297,298,0,475,476,524,525,258,259,297,298,43,257,298,299,256,0,475,525,526,474,258,298,299,257,43,255,256,299,300,0,473,474,526,527,256,257,299,300,43,255,300,301,254,0,473,527,528,314,256,300,301,152,43,253,254,301,302,0,315,314,528,529,153,152,301,302,43,253,302,303,252,0,315,529,530,470,153,302,303,255,43,251,252,303,304,0,467,469,531,532,254,255,303,304,43,251,304,305,250,0,467,532,533,466,254,304,305,253,43,249,250,305,306,0,465,466,533,534,252,253,305,306,43,249,306,307,248,0,465,534,535,464,252,306,307,251,43,247,248,307,308,0,462,464,535,536,250,251,307,308,43,247,308,309,246,0,462,536,537,463,250,308,309,248,43,277,246,309,278,0,461,460,538,502,249,248,309,278,43,278,309,310,341,0,502,538,539,540,278,309,310,311,43,308,311,310,309,0,536,541,542,537,308,312,310,309,43,308,307,312,311,0,536,535,543,541,308,307,313,312,43,306,313,312,307,0,534,544,543,535,306,314,313,307,43,306,305,314,313,0,534,533,545,544,306,305,315,314,43,304,315,314,305,0,532,546,545,533,304,316,315,305,43,304,303,316,315,0,532,531,547,546,304,303,317,316,43,302,317,316,303,0,529,548,549,530,302,318,317,303,43,302,301,318,317,0,529,528,550,548,302,301,319,318,43,300,319,318,301,0,527,551,550,528,300,320,319,301,43,300,299,320,319,0,527,526,552,551,300,299,321,320,43,298,321,320,299,0,525,553,552,526,298,322,321,299,43,298,297,322,321,0,525,524,554,553,298,297,323,322,43,296,323,322,297,0,523,555,554,524,296,324,323,297,43,296,295,324,323,0,523,522,556,555,296,295,325,324,43,294,325,324,295,0,520,557,558,521,294,326,325,295,43,294,293,326,325,0,520,519,559,557,294,293,327,326,43,292,327,326,293,0,518,560,559,519,292,328,327,293,43,292,291,328,327,0,518,517,561,560,292,291,329,328,43,290,329,328,291,0,516,562,561,517,290,330,329,291,43,290,289,330,329,0,516,515,563,562,290,289,331,330,43,288,331,330,289,0,514,564,563,515,288,332,331,289,43,288,287,332,331,0,514,513,565,564,288,287,333,332,43,286,333,332,287,0,511,566,567,512,286,334,333,287,43,285,334,333,286,0,510,568,566,511,285,335,334,286,43,285,284,335,334,0,510,509,569,568,285,284,336,335,43,283,336,335,284,0,508,570,569,509,283,337,336,284,43,283,282,337,336,0,508,507,571,570,283,282,338,337,43,281,338,337,282,0,506,572,571,507,281,339,338,282,43,281,280,339,338,0,506,505,573,572,281,280,340,339,43,280,279,340,339,0,504,503,574,575,280,279,341,340,43,278,341,340,279,0,502,540,574,503,278,311,341,279,43,341,342,343,340,0,540,576,577,574,311,342,343,341,43,339,340,343,344,0,575,574,577,578,340,341,343,344,43,338,339,344,345,0,572,573,579,580,339,340,344,345,43,338,345,346,337,0,572,580,581,571,339,345,346,338,43,336,337,346,347,0,570,571,581,582,337,338,346,347,43,336,347,348,335,0,570,582,583,569,337,347,348,336,43,334,335,348,349,0,568,569,583,584,335,336,348,349,43,334,349,350,333,0,568,584,585,566,335,349,350,334,43,333,350,351,332,0,566,585,586,567,334,350,351,333,43,331,332,351,352,0,587,567,586,588,332,333,351,352,43,331,352,353,330,0,564,589,590,563,332,352,353,331,43,329,330,353,354,0,562,563,590,591,330,331,353,354,43,329,354,355,328,0,562,591,592,561,330,354,355,329,43,327,328,355,356,0,560,561,592,593,328,329,355,356,43,327,356,357,326,0,560,593,594,559,328,356,357,327,43,325,326,357,358,0,557,559,594,595,326,327,357,358,43,325,358,359,324,0,557,595,596,558,326,358,359,325,43,323,324,359,360,0,555,556,597,598,324,325,359,360,43,323,360,361,322,0,555,598,599,554,324,360,361,323,43,321,322,361,362,0,553,554,599,600,322,323,361,362,43,321,362,363,320,0,553,600,601,552,322,362,363,321,43,319,320,363,364,0,551,552,601,602,320,321,363,364,43,319,364,365,318,0,551,602,603,550,320,364,365,319,43,317,318,365,366,0,548,550,603,604,318,319,365,366,43,317,366,367,316,0,548,604,605,549,318,366,367,317,43,315,316,367,368,0,546,547,606,607,316,317,367,368,43,315,368,369,314,0,546,607,608,545,316,368,369,315,43,313,314,369,370,0,544,545,608,609,314,315,369,370,43,313,370,371,312,0,544,609,610,543,314,370,371,313,43,311,312,371,372,0,541,543,610,611,312,313,371,372,43,311,372,373,310,0,541,611,612,542,312,372,373,310,43,341,310,373,342,0,540,539,613,576,311,310,373,342,43,342,373,374,405,0,576,613,614,615,342,373,374,375,43,372,375,374,373,0,611,616,617,612,372,376,374,373,43,372,371,376,375,0,611,610,618,616,372,371,377,376,43,370,377,376,371,0,609,619,618,610,370,378,377,371,43,370,369,378,377,0,609,608,620,619,370,369,379,378,43,368,379,378,369,0,607,621,620,608,368,380,379,369,43,368,367,380,379,0,607,606,622,621,368,367,381,380,43,366,381,380,367,0,604,623,624,605,366,382,381,367,43,366,365,382,381,0,604,603,625,623,366,365,383,382,43,364,383,382,365,0,602,626,625,603,364,384,383,365,43,364,363,384,383,0,602,601,627,626,364,363,385,384,43,362,385,384,363,0,600,628,627,601,362,386,385,363,43,362,361,386,385,0,600,599,629,628,362,361,387,386,43,360,387,386,361,0,598,630,629,599,360,388,387,361,43,360,359,388,387,0,598,597,631,630,360,359,389,388,43,358,389,388,359,0,595,632,633,596,358,390,389,359,43,358,357,390,389,0,595,594,634,632,358,357,391,390,43,356,391,390,357,0,593,635,634,594,356,392,391,357,43,356,355,392,391,0,593,592,636,635,356,355,393,392,43,354,393,392,355,0,591,637,636,592,354,394,393,355,43,354,353,394,393,0,591,590,638,637,354,353,395,394,43,352,395,394,353,0,589,639,638,590,352,396,395,353,43,352,351,396,395,0,588,586,640,641,352,351,397,396,43,350,397,396,351,0,585,642,640,586,350,398,397,351,43,349,398,397,350,0,584,643,642,585,349,399,398,350,43,349,348,399,398,0,584,583,644,643,349,348,400,399,43,347,400,399,348,0,582,645,644,583,347,401,400,348,43,347,346,401,400,0,582,581,646,645,347,346,402,401,43,345,402,401,346,0,580,647,646,581,345,403,402,346,43,345,344,403,402,0,580,579,648,647,345,344,404,403,43,344,343,404,403,0,578,577,649,650,344,343,405,404,43,342,405,404,343,0,576,615,649,577,342,375,405,343,43,405,406,407,404,0,615,651,652,649,375,406,407,405,43,403,404,407,408,0,650,649,652,653,404,405,407,408,43,402,403,408,409,0,647,648,654,655,403,404,408,409,43,402,409,410,401,0,647,655,656,646,403,409,410,402,43,400,401,410,411,0,645,646,656,657,401,402,410,411,43,400,411,412,399,0,645,657,658,644,401,411,412,400,43,398,399,412,413,0,643,644,658,659,399,400,412,413,43,398,413,414,397,0,643,659,660,642,399,413,414,398,43,397,414,415,396,0,642,660,661,640,398,414,415,397,43,395,396,415,416,0,641,640,661,662,396,397,415,416,43,395,416,417,394,0,639,663,664,638,396,416,417,395,43,393,394,417,418,0,637,638,664,665,394,395,417,418,43,393,418,419,392,0,637,665,666,636,394,418,419,393,43,391,392,419,420,0,635,636,666,667,392,393,419,420,43,391,420,421,390,0,635,667,668,634,392,420,421,391,43,389,390,421,422,0,632,634,668,669,390,391,421,422,43,389,422,423,388,0,632,669,670,633,390,422,423,389,43,387,388,423,424,0,630,631,671,672,388,389,423,424,43,387,424,425,386,0,630,672,673,629,388,424,425,387,43,385,386,425,426,0,628,629,673,674,386,387,425,426,43,385,426,427,384,0,628,674,675,627,386,426,427,385,43,383,384,427,428,0,626,627,675,676,384,385,427,428,43,383,428,429,382,0,626,676,677,625,384,428,429,383,43,381,382,429,430,0,623,625,677,678,382,383,429,430,43,381,430,431,380,0,623,678,679,624,382,430,431,381,43,379,380,431,432,0,621,622,680,681,380,381,431,432,43,379,432,433,378,0,621,681,682,620,380,432,433,379,43,377,378,433,434,0,619,620,682,683,378,379,433,434,43,377,434,435,376,0,619,683,684,618,378,434,435,377,43,375,376,435,436,0,616,618,684,685,376,377,435,436,43,375,436,437,374,0,616,685,686,617,376,436,437,374,43,405,374,437,406,0,615,614,687,651,375,374,437,406,43,406,437,438,469,0,651,687,688,689,406,437,438,439,43,436,439,438,437,0,685,690,691,686,436,440,438,437,43,436,435,440,439,0,685,684,692,690,436,435,441,440,43,434,441,440,435,0,683,693,692,684,434,442,441,435,43,434,433,442,441,0,683,682,694,693,434,433,443,442,43,432,443,442,433,0,681,695,694,682,432,444,443,433,43,432,431,444,443,0,681,680,696,695,432,431,445,444,43,430,445,444,431,0,678,697,698,679,430,446,445,431,43,430,429,446,445,0,678,677,699,697,430,429,447,446,43,428,447,446,429,0,676,700,699,677,428,448,447,429,43,428,427,448,447,0,676,675,701,700,428,427,449,448,43,426,449,448,427,0,674,702,701,675,426,450,449,427,43,426,425,450,449,0,674,673,703,702,426,425,451,450,43,424,451,450,425,0,672,704,703,673,424,452,451,425,43,424,423,452,451,0,672,671,705,704,424,423,453,452,43,422,453,452,423,0,669,706,707,670,422,454,453,423,43,422,421,454,453,0,669,668,708,706,422,421,455,454,43,420,455,454,421,0,667,709,708,668,420,456,455,421,43,420,419,456,455,0,667,666,710,709,420,419,457,456,43,418,457,456,419,0,665,711,710,666,418,458,457,419,43,418,417,458,457,0,665,664,712,711,418,417,459,458,43,416,459,458,417,0,663,713,712,664,416,460,459,417,43,416,415,460,459,0,662,661,714,715,416,415,461,460,43,414,461,460,415,0,660,716,714,661,414,462,461,415,43,413,462,461,414,0,659,717,716,660,413,463,462,414,43,413,412,463,462,0,659,658,718,717,413,412,464,463,43,411,464,463,412,0,657,719,718,658,411,465,464,412,43,411,410,465,464,0,657,656,720,719,411,410,466,465,43,409,466,465,410,0,655,721,720,656,409,467,466,410,43,409,408,467,466,0,655,654,722,721,409,408,468,467,43,408,407,468,467,0,653,652,723,724,408,407,469,468,43,406,469,468,407,0,651,689,723,652,406,439,469,407,43,469,470,471,468,0,725,726,727,728,439,470,471,469,43,467,468,471,472,0,729,730,731,732,468,469,471,472,43,466,467,472,473,0,733,729,732,734,467,468,472,473,43,466,473,474,465,0,733,734,735,736,467,473,474,466,43,464,465,474,475,0,737,736,735,738,465,466,474,475,43,464,475,476,463,0,737,738,739,740,465,475,476,464,43,462,463,476,477,0,741,740,739,742,463,464,476,477,43,462,477,478,461,0,741,742,743,744,463,477,478,462,43,461,478,479,460,0,744,743,745,746,462,478,479,461,43,459,460,479,480,0,747,746,745,748,460,461,479,480,43,459,480,481,458,0,749,750,751,752,460,480,481,459,43,457,458,481,482,0,753,752,751,754,458,459,481,482,43,457,482,483,456,0,753,754,755,756,458,482,483,457,43,455,456,483,484,0,757,756,755,758,456,457,483,484,43,455,484,485,454,0,757,758,759,760,456,484,485,455,43,453,454,485,486,0,761,760,759,762,454,455,485,486,43,453,486,487,452,0,761,762,763,764,454,486,487,453,43,451,452,487,488,0,765,766,767,768,452,453,487,488,43,451,488,489,450,0,765,768,769,770,452,488,489,451,43,449,450,489,490,0,771,770,769,772,450,451,489,490,43,449,490,491,448,0,771,772,773,774,450,490,491,449,43,447,448,491,492,0,775,774,773,776,448,449,491,492,43,447,492,493,446,0,775,776,777,778,448,492,493,447,43,445,446,493,494,0,779,778,777,780,446,447,493,494,43,445,494,495,444,0,779,780,781,782,446,494,495,445,43,443,444,495,496,0,783,784,785,786,444,445,495,496,43,443,496,497,442,0,783,786,787,788,444,496,497,443,43,441,442,497,498,0,789,788,787,790,442,443,497,498,43,441,498,499,440,0,789,790,791,792,442,498,499,441,43,439,440,499,500,0,793,792,791,794,440,441,499,500,43,439,500,501,438,0,793,794,795,796,440,500,501,438,43,469,438,501,470,0,725,797,798,726,439,438,501,470,43,470,501,502,533,0,726,798,799,800,470,501,502,503,43,500,503,502,501,0,794,801,802,795,500,504,502,501,43,500,499,504,503,0,794,791,803,801,500,499,505,504,43,498,505,504,499,0,790,804,803,791,498,506,505,499,43,498,497,506,505,0,790,787,805,804,498,497,507,506,43,496,507,506,497,0,786,806,805,787,496,508,507,497,43,496,495,508,507,0,786,785,807,806,496,495,509,508,43,494,509,508,495,0,780,808,809,781,494,510,509,495,43,494,493,510,509,0,780,777,810,808,494,493,511,510,43,492,511,510,493,0,776,811,810,777,492,512,511,493,43,492,491,512,511,0,776,773,812,811,492,491,513,512,43,490,513,512,491,0,772,813,812,773,490,514,513,491,43,490,489,514,513,0,772,769,814,813,490,489,515,514,43,488,515,514,489,0,768,815,814,769,488,516,515,489,43,488,487,516,515,0,768,767,816,815,488,487,517,516,43,486,517,516,487,0,762,817,818,763,486,518,517,487,43,486,485,518,517,0,762,759,819,817,486,485,519,518,43,484,519,518,485,0,758,820,819,759,484,520,519,485,43,484,483,520,519,0,758,755,821,820,484,483,521,520,43,482,521,520,483,0,754,822,821,755,482,522,521,483,43,482,481,522,521,0,754,751,823,822,482,481,523,522,43,480,523,522,481,0,750,824,823,751,480,524,523,481,43,480,479,524,523,0,748,745,825,826,480,479,525,524,43,478,525,524,479,0,743,827,825,745,478,526,525,479,43,477,526,525,478,0,742,828,827,743,477,527,526,478,43,477,476,527,526,0,742,739,829,828,477,476,528,527,43,475,528,527,476,0,738,830,829,739,475,529,528,476,43,475,474,529,528,0,738,735,831,830,475,474,530,529,43,473,530,529,474,0,734,832,831,735,473,531,530,474,43,473,472,531,530,0,734,732,833,832,473,472,532,531,43,472,471,532,531,0,732,731,834,833,472,471,533,532,43,470,533,532,471,0,726,800,835,727,470,503,533,471,43,533,534,535,532,0,800,836,837,835,503,534,535,533,43,531,532,535,536,0,833,834,838,839,532,533,535,536,43,530,531,536,537,0,832,833,839,840,531,532,536,537,43,530,537,538,529,0,832,840,841,831,531,537,538,530,43,528,529,538,539,0,830,831,841,842,529,530,538,539,43,528,539,540,527,0,830,842,843,829,529,539,540,528,43,526,527,540,541,0,828,829,843,844,527,528,540,541,43,526,541,542,525,0,828,844,845,827,527,541,542,526,43,525,542,543,524,0,827,845,846,825,526,542,543,525,43,523,524,543,544,0,826,825,846,847,524,525,543,544,43,523,544,545,522,0,848,849,850,851,524,544,545,523,43,521,522,545,546,0,822,823,852,853,522,523,545,546,43,521,546,547,520,0,822,853,854,821,522,546,547,521,43,519,520,547,548,0,820,821,854,855,520,521,547,548,43,519,548,549,518,0,820,855,856,819,520,548,549,519,43,517,518,549,550,0,817,819,856,857,518,519,549,550,43,517,550,551,516,0,817,857,858,818,518,550,551,517,43,515,516,551,552,0,815,816,859,860,516,517,551,552,43,515,552,553,514,0,815,860,861,814,516,552,553,515,43,513,514,553,554,0,813,814,861,862,514,515,553,554,43,513,554,555,512,0,813,862,863,812,514,554,555,513,43,511,512,555,556,0,811,812,863,864,512,513,555,556,43,511,556,557,510,0,811,864,865,810,512,556,557,511,43,509,510,557,558,0,808,810,865,866,510,511,557,558,43,509,558,559,508,0,808,866,867,809,510,558,559,509,43,507,508,559,560,0,806,807,868,869,508,509,559,560,43,507,560,561,506,0,806,869,870,805,508,560,561,507,43,505,506,561,562,0,804,805,870,871,506,507,561,562,43,505,562,563,504,0,804,871,872,803,506,562,563,505,43,503,504,563,564,0,801,803,872,873,504,505,563,564,43,503,564,565,502,0,801,873,874,802,504,564,565,502,43,533,502,565,534,0,800,799,875,836,503,502,565,534,42,534,565,566,0,836,875,876,534,565,566,42,564,566,565,0,873,877,874,564,566,565,42,564,563,566,0,873,872,877,564,563,566,42,562,566,563,0,871,877,872,562,566,563,42,562,561,566,0,871,870,877,562,561,566,42,560,566,561,0,869,877,870,560,566,561,42,560,559,566,0,869,868,877,560,559,566,42,558,566,559,0,866,878,867,558,566,559,42,558,557,566,0,866,865,878,558,557,566,42,556,566,557,0,864,878,865,556,566,557,42,556,555,566,0,864,863,878,556,555,566,42,554,566,555,0,862,878,863,554,566,555,42,554,553,566,0,862,861,878,554,553,566,42,552,566,553,0,860,878,861,552,566,553,42,552,551,566,0,860,859,878,552,551,566,42,550,566,551,0,857,879,858,550,566,551,42,550,549,566,0,857,856,879,550,549,566,42,548,566,549,0,855,879,856,548,566,549,42,548,547,566,0,855,854,879,548,547,566,42,546,566,547,0,853,879,854,546,566,547,42,546,545,566,0,880,881,882,546,545,566,42,544,566,545,0,849,883,850,544,566,545,42,544,543,566,0,847,846,884,544,543,566,42,542,566,543,0,845,884,846,542,566,543,42,541,566,542,0,844,884,845,541,566,542,42,541,540,566,0,844,843,884,541,540,566,42,539,566,540,0,842,884,843,539,566,540,42,539,538,566,0,842,841,884,539,538,566,42,537,566,538,0,840,884,841,537,566,538,42,537,536,566,0,840,839,884,537,536,566,42,536,535,566,0,839,838,884,536,535,566,42,534,566,535,0,836,876,837,534,566,535,43,181,150,598,567,0,885,886,887,888,157,216,567,568,43,181,567,568,180,0,889,890,891,892,157,568,569,154,43,179,180,568,569,0,893,892,891,894,158,154,569,570,43,179,569,570,178,0,893,894,895,896,158,570,571,160,43,177,178,570,571,0,897,896,895,898,162,160,571,572,43,177,571,572,176,0,897,898,899,900,162,572,573,164,43,175,176,572,573,0,901,900,899,902,166,164,573,574,43,175,573,574,174,0,901,902,903,904,166,574,575,168,43,173,174,574,575,0,905,904,903,906,170,168,575,576,43,173,575,576,172,0,907,908,909,910,170,576,577,172,43,171,172,576,577,0,911,910,909,912,174,172,577,578,43,171,577,578,170,0,911,912,913,914,174,578,579,176,43,169,170,578,579,0,915,914,913,916,178,176,579,580,43,169,579,580,168,0,917,918,919,920,178,580,581,180,43,167,168,580,581,0,921,920,919,922,182,180,581,582,43,167,581,582,166,0,921,922,923,924,182,582,583,184,43,165,166,582,583,0,925,924,923,926,186,184,583,584,43,165,583,584,164,0,925,926,927,928,186,584,585,188,43,163,164,584,585,0,929,928,927,930,190,188,585,586,43,163,585,586,162,0,929,930,931,932,190,586,587,192,43,161,162,586,587,0,933,932,931,934,194,192,587,588,43,161,587,588,160,0,933,934,935,936,194,588,589,196,43,159,160,588,589,0,937,938,939,940,198,196,589,590,43,159,589,590,158,0,937,940,941,942,198,590,591,200,43,158,590,591,157,0,942,941,943,944,200,591,592,202,43,156,157,591,592,0,945,944,943,946,204,202,592,593,43,156,592,593,155,0,945,946,947,948,204,593,594,206,43,154,155,593,594,0,949,948,947,950,208,206,594,595,43,154,594,595,153,0,949,950,951,952,208,595,596,210,43,152,153,595,596,0,953,952,951,954,212,210,596,597,43,151,152,596,597,0,955,956,957,958,214,212,597,598,43,598,150,151,597,0,887,886,955,958,567,216,214,598,43,597,600,599,598,0,958,959,960,887,598,599,600,567,43,597,596,601,600,0,961,954,962,963,598,597,601,599,43,596,595,602,601,0,954,951,964,962,597,596,602,601,43,594,603,602,595,0,950,965,964,951,595,603,602,596,43,594,593,604,603,0,950,947,966,965,595,594,604,603,43,592,605,604,593,0,946,967,966,947,593,605,604,594,43,592,591,606,605,0,946,943,968,967,593,592,606,605,43,590,607,606,591,0,941,969,968,943,591,607,606,592,43,589,608,607,590,0,940,970,969,941,590,608,607,591,43,589,588,609,608,0,971,935,972,973,590,589,609,608,43,587,610,609,588,0,934,974,972,935,588,610,609,589,43,587,586,611,610,0,934,931,975,974,588,587,611,610,43,585,612,611,586,0,930,976,975,931,586,612,611,587,43,585,584,613,612,0,930,927,977,976,586,585,613,612,43,583,614,613,584,0,926,978,977,927,584,614,613,585,43,583,582,615,614,0,926,923,979,978,584,583,615,614,43,581,616,615,582,0,922,980,979,923,582,616,615,583,43,581,580,617,616,0,922,919,981,980,582,581,617,616,43,579,618,617,580,0,916,982,983,984,580,618,617,581,43,579,578,619,618,0,916,913,985,982,580,579,619,618,43,577,620,619,578,0,912,986,985,913,578,620,619,579,43,577,576,621,620,0,912,909,987,986,578,577,621,620,43,575,622,621,576,0,908,988,987,909,576,622,621,577,43,575,574,623,622,0,908,989,990,988,576,575,623,622,43,573,624,623,574,0,991,992,990,989,574,624,623,575,43,573,572,625,624,0,991,993,994,992,574,573,625,624,43,571,626,625,572,0,898,995,996,899,572,626,625,573,43,571,570,627,626,0,898,895,997,995,572,571,627,626,43,569,628,627,570,0,894,998,997,895,570,628,627,571,43,569,568,629,628,0,894,891,999,998,570,569,629,628,43,567,630,629,568,0,890,1000,999,891,568,630,629,569,43,567,598,599,630,0,888,887,960,1001,568,567,600,630,42,630,599,631,0,1001,960,1002,630,600,631,42,630,631,629,0,1000,1003,999,630,631,629,42,628,629,631,0,998,999,1003,628,629,631,42,628,631,627,0,998,1003,997,628,631,627,42,626,627,631,0,995,997,1003,626,627,631,42,626,631,625,0,995,1003,996,626,631,625,42,624,625,631,0,1004,1005,1006,624,625,631,42,624,631,623,0,1007,1008,1009,624,631,623,42,622,623,631,0,1010,1011,1012,622,623,631,42,622,631,621,0,988,1013,987,622,631,621,42,620,621,631,0,986,987,1013,620,621,631,42,620,631,619,0,986,1013,985,620,631,619,42,618,619,631,0,982,985,1013,618,619,631,42,618,631,617,0,1014,1015,1016,618,631,617,42,616,617,631,0,980,981,1017,616,617,631,42,616,631,615,0,980,1017,979,616,631,615,42,614,615,631,0,978,979,1017,614,615,631,42,614,631,613,0,978,1017,977,614,631,613,42,612,613,631,0,976,977,1017,612,613,631,42,612,631,611,0,976,1017,975,612,631,611,42,610,611,631,0,974,975,1017,610,611,631,42,610,631,609,0,974,1017,972,610,631,609,42,608,609,631,0,1018,1019,1020,608,609,631,42,608,631,607,0,970,1021,969,608,631,607,42,607,631,606,0,969,1021,968,607,631,606,42,605,606,631,0,967,968,1021,605,606,631,42,605,631,604,0,967,1021,966,605,631,604,42,603,604,631,0,965,966,1021,603,604,631,42,603,631,602,0,965,1021,964,603,631,602,42,601,602,631,0,962,964,1021,601,602,631,42,600,601,631,0,1022,1023,1024,599,601,631,42,600,631,599,0,959,1002,960,599,631,600]
rocket-3d/web/obj/rocket3d_full.js:}
rocket-3d/web/obj/rocket3d_full.js:,
rocket-3d/web/obj/rocket3d_full.js:{
rocket-3d/web/obj/rocket3d_full.js:    "metadata" :
rocket-3d/web/obj/rocket3d_full.js:    {
rocket-3d/web/obj/rocket3d_full.js:        "formatVersion" : 3,
rocket-3d/web/obj/rocket3d_full.js:        "generatedBy"   : "Blender 2.60 Exporter",
rocket-3d/web/obj/rocket3d_full.js:        "vertices"      : 323,
rocket-3d/web/obj/rocket3d_full.js:        "faces"         : 352,
rocket-3d/web/obj/rocket3d_full.js:        "normals"       : 322,
rocket-3d/web/obj/rocket3d_full.js:        "colors"        : 0,
rocket-3d/web/obj/rocket3d_full.js:        "uvs"           : 4,
rocket-3d/web/obj/rocket3d_full.js:        "materials"     : 1,
rocket-3d/web/obj/rocket3d_full.js:        "morphTargets"  : 0
rocket-3d/web/obj/rocket3d_full.js:    },
rocket-3d/web/obj/rocket3d_full.js:    "scale" : 1.000000,
rocket-3d/web/obj/rocket3d_full.js:    "materials": [	{
rocket-3d/web/obj/rocket3d_full.js:	"DbgColor" : 15658734,
rocket-3d/web/obj/rocket3d_full.js:	"DbgIndex" : 0,
rocket-3d/web/obj/rocket3d_full.js:	"DbgName" : "default",
rocket-3d/web/obj/rocket3d_full.js:	"vertexColors" : false
rocket-3d/web/obj/rocket3d_full.js:	}],
rocket-3d/web/obj/rocket3d_full.js:    "vertices": [0.000000,-0.037527,-0.167650,0.032707,-0.037527,-0.164429,0.064157,-0.037527,-0.154888,0.093141,-0.037527,-0.139396,0.118546,-0.037527,-0.118546,0.139396,-0.037527,-0.093141,0.154888,-0.037527,-0.064157,0.164428,-0.037527,-0.032707,0.167650,-0.037527,-0.000000,0.164428,-0.037527,0.032707,0.154888,-0.037527,0.064157,0.139396,-0.037527,0.093141,0.118546,-0.037527,0.118546,0.093141,-0.037527,0.139395,0.064157,-0.037527,0.154888,0.032707,-0.037527,0.164428,0.000000,-0.037527,0.167649,-0.032707,-0.037527,0.164428,-0.064157,-0.037527,0.154888,-0.093141,-0.037527,0.139395,-0.118546,-0.037527,0.118546,-0.139396,-0.037527,0.093141,-0.154888,-0.037527,0.064156,-0.164428,-0.037527,0.032706,-0.167650,-0.037527,-0.000000,-0.164428,-0.037527,-0.032707,-0.154888,-0.037527,-0.064157,-0.139395,-0.037527,-0.093142,-0.118546,-0.037527,-0.118547,-0.093141,-0.037527,-0.139396,-0.064156,-0.037527,-0.154888,-0.032706,-0.037527,-0.164429,-0.057938,-0.137937,-0.291275,-0.113649,-0.137937,-0.274375,-0.164994,-0.137937,-0.246931,-0.209997,-0.137937,-0.209998,-0.246931,-0.137937,-0.164994,-0.274375,-0.137937,-0.113650,-0.291275,-0.137937,-0.057939,-0.296981,-0.137937,-0.000000,-0.291275,-0.137937,0.057938,-0.274375,-0.137937,0.113649,-0.246931,-0.137937,0.164994,-0.209997,-0.137937,0.209997,-0.164994,-0.137937,0.246931,-0.113650,-0.137937,0.274375,-0.057938,-0.137937,0.291275,-0.000000,-0.137937,0.296981,0.057938,-0.137937,0.291275,0.113650,-0.137937,0.274375,0.164994,-0.137937,0.246931,0.209998,-0.137937,0.209997,0.246931,-0.137937,0.164994,0.274375,-0.137937,0.113650,0.291275,-0.137937,0.057938,0.296981,-0.137937,-0.000000,0.291275,-0.137937,-0.057938,0.274375,-0.137937,-0.113650,0.246931,-0.137937,-0.164994,0.209998,-0.137937,-0.209998,0.164994,-0.137937,-0.246931,0.113650,-0.137937,-0.274375,0.057938,-0.137937,-0.291275,0.000000,-0.137937,-0.296981,0.000000,-0.266953,-0.360426,0.070316,-0.266953,-0.353500,0.137929,-0.266953,-0.332990,0.200242,-0.266953,-0.299683,0.254859,-0.266953,-0.254860,0.299683,-0.266953,-0.200242,0.332990,-0.266953,-0.137929,0.353500,-0.266953,-0.070316,0.360426,-0.266953,-0.000000,0.353500,-0.266953,0.070315,0.332990,-0.266953,0.137929,0.299683,-0.266953,0.200242,0.254859,-0.266953,0.254859,0.200242,-0.266953,0.299683,0.137929,-0.266953,0.332990,0.070316,-0.266953,0.353500,-0.000000,-0.266953,0.360425,-0.070316,-0.266953,0.353500,-0.137929,-0.266953,0.332990,-0.200242,-0.266953,0.299683,-0.254859,-0.266953,0.254859,-0.299683,-0.266953,0.200241,-0.332990,-0.266953,0.137928,-0.353500,-0.266953,0.070315,-0.360425,-0.266953,-0.000001,-0.353500,-0.266953,-0.070316,-0.332990,-0.266953,-0.137929,-0.299683,-0.266953,-0.200242,-0.254859,-0.266953,-0.254860,-0.200241,-0.266953,-0.299683,-0.137928,-0.266953,-0.332990,-0.070315,-0.266953,-0.353500,-0.070336,-0.419720,-0.353607,-0.137970,-0.419720,-0.333090,-0.200301,-0.419720,-0.299773,-0.254936,-0.419720,-0.254936,-0.299773,-0.419720,-0.200302,-0.333090,-0.419720,-0.137971,-0.353606,-0.419720,-0.070337,-0.360534,-0.419720,-0.000001,-0.353606,-0.419720,0.070336,-0.333090,-0.419720,0.137970,-0.299773,-0.419720,0.200302,-0.254936,-0.419720,0.254936,-0.200302,-0.419720,0.299773,-0.137970,-0.419720,0.333090,-0.070337,-0.419720,0.353606,-0.000000,-0.419720,0.360534,0.070337,-0.419720,0.353606,0.137970,-0.419720,0.333090,0.200302,-0.419720,0.299773,0.254936,-0.419720,0.254936,0.299773,-0.419720,0.200302,0.333090,-0.419720,0.137970,0.353607,-0.419720,0.070336,0.360534,-0.419720,-0.000000,0.353607,-0.419720,-0.070337,0.333090,-0.419720,-0.137970,0.299773,-0.419720,-0.200302,0.254936,-0.419720,-0.254936,0.200302,-0.419720,-0.299773,0.137970,-0.419720,-0.333090,0.070337,-0.419720,-0.353606,0.000000,-0.419720,-0.360534,0.000000,-0.535248,-0.333287,0.065021,-0.535248,-0.326883,0.127543,-0.535248,-0.307917,0.185164,-0.535248,-0.277118,0.235669,-0.535248,-0.235669,0.277118,-0.535248,-0.185164,0.307917,-0.535248,-0.127543,0.326883,-0.535248,-0.065021,0.333287,-0.535248,-0.000000,0.326883,-0.535248,0.065021,0.307917,-0.535248,0.127543,0.277118,-0.535248,0.185164,0.235669,-0.535248,0.235669,0.185164,-0.535248,0.277117,0.127543,-0.535248,0.307916,0.065021,-0.535248,0.326882,-0.000000,-0.535248,0.333286,-0.065021,-0.535248,0.326882,-0.127543,-0.535248,0.307916,-0.185164,-0.535248,0.277117,-0.235669,-0.535248,0.235669,-0.277118,-0.535248,0.185164,-0.307917,-0.535248,0.127543,-0.326882,-0.535248,0.065021,-0.333286,-0.535248,-0.000000,-0.326882,-0.535248,-0.065021,-0.307916,-0.535248,-0.127544,-0.277117,-0.535248,-0.185165,-0.235669,-0.535248,-0.235670,-0.185164,-0.535248,-0.277118,-0.127543,-0.535248,-0.307917,-0.065020,-0.535248,-0.326883,-0.044536,-0.737134,-0.223902,-0.087362,-0.737134,-0.210912,-0.126830,-0.737134,-0.189815,-0.161424,-0.737134,-0.161425,-0.189815,-0.737134,-0.126831,-0.210911,-0.737134,-0.087363,-0.223902,-0.737134,-0.044537,-0.228289,-0.737134,-0.000000,-0.223902,-0.737134,0.044537,-0.210911,-0.737134,0.087362,-0.189815,-0.737134,0.126830,-0.161424,-0.737134,0.161424,-0.126830,-0.737134,0.189815,-0.087362,-0.737134,0.210911,-0.044537,-0.737134,0.223902,0.000000,-0.737134,0.228288,0.044537,-0.737134,0.223902,0.087362,-0.737134,0.210911,0.126830,-0.737134,0.189815,0.161425,-0.737134,0.161424,0.189815,-0.737134,0.126830,0.210911,-0.737134,0.087362,0.223902,-0.737134,0.044537,0.228289,-0.737134,-0.000000,0.223902,-0.737134,-0.044537,0.210911,-0.737134,-0.087362,0.189815,-0.737134,-0.126831,0.161425,-0.737134,-0.161425,0.126831,-0.737134,-0.189815,0.087362,-0.737134,-0.210911,0.044537,-0.737134,-0.223902,0.000000,-0.737134,-0.228289,0.000000,-0.882886,-0.162624,0.031726,-0.882886,-0.159499,0.062234,-0.882886,-0.150245,0.090349,-0.882886,-0.135217,0.114993,-0.882886,-0.114993,0.135217,-0.882886,-0.090349,0.150245,-0.882886,-0.062234,0.159499,-0.882886,-0.031727,0.162624,-0.882886,-0.000000,0.159499,-0.882886,0.031726,0.150245,-0.882886,0.062233,0.135217,-0.882886,0.090349,0.114993,-0.882886,0.114992,0.090349,-0.882886,0.135217,0.062234,-0.882886,0.150245,0.031726,-0.882886,0.159499,0.000000,-0.882886,0.162624,-0.031726,-0.882886,0.159499,-0.062233,-0.882886,0.150245,-0.090349,-0.882886,0.135217,-0.114992,-0.882886,0.114992,-0.135217,-0.882886,0.090349,-0.150245,-0.882886,0.062233,-0.159499,-0.882886,0.031726,-0.162624,-0.882886,-0.000000,-0.159499,-0.882886,-0.031727,-0.150245,-0.882886,-0.062234,-0.135217,-0.882886,-0.090349,-0.114992,-0.882886,-0.114993,-0.090349,-0.882886,-0.135217,-0.062233,-0.882886,-0.150245,-0.031726,-0.882886,-0.159499,-0.019162,-1.061026,-0.096336,-0.037588,-1.061026,-0.090747,-0.054570,-1.061026,-0.081670,-0.069454,-1.061026,-0.069455,-0.081670,-1.061026,-0.054570,-0.090747,-1.061026,-0.037589,-0.096336,-1.061026,-0.019163,-0.098223,-1.061026,-0.000000,-0.096336,-1.061026,0.019162,-0.090747,-1.061026,0.037588,-0.081670,-1.061026,0.054570,-0.069454,-1.061026,0.069454,-0.054570,-1.061026,0.081670,-0.037588,-1.061026,0.090747,-0.019162,-1.061026,0.096336,0.000000,-1.061026,0.098223,0.019163,-1.061026,0.096336,0.037589,-1.061026,0.090747,0.054570,-1.061026,0.081670,0.069455,-1.061026,0.069454,0.081670,-1.061026,0.054570,0.090747,-1.061026,0.037588,0.096336,-1.061026,0.019162,0.098224,-1.061026,-0.000000,0.096336,-1.061026,-0.019163,0.090747,-1.061026,-0.037589,0.081670,-1.061026,-0.054570,0.069455,-1.061026,-0.069455,0.054570,-1.061026,-0.081670,0.037589,-1.061026,-0.090747,0.019163,-1.061026,-0.096336,0.000000,-1.061026,-0.098224,0.000000,-1.333085,-0.027313,0.005329,-1.333085,-0.026789,0.010452,-1.333085,-0.025234,0.015175,-1.333085,-0.022710,0.019313,-1.333085,-0.019314,0.022710,-1.333085,-0.015175,0.025234,-1.333085,-0.010453,0.026789,-1.333085,-0.005329,0.027313,-1.333085,-0.000000,0.026789,-1.333085,0.005328,0.025234,-1.333085,0.010452,0.022710,-1.333085,0.015174,0.019313,-1.333085,0.019313,0.015175,-1.333085,0.022710,0.010452,-1.333085,0.025234,0.005329,-1.333085,0.026788,0.000000,-1.333085,0.027313,-0.005328,-1.333085,0.026788,-0.010452,-1.333085,0.025234,-0.015174,-1.333085,0.022710,-0.019313,-1.333085,0.019313,-0.022710,-1.333085,0.015174,-0.025234,-1.333085,0.010452,-0.026788,-1.333085,0.005328,-0.027313,-1.333085,-0.000000,-0.026788,-1.333085,-0.005329,-0.025234,-1.333085,-0.010453,-0.022710,-1.333085,-0.015175,-0.019313,-1.333085,-0.019314,-0.015174,-1.333085,-0.022710,-0.010452,-1.333085,-0.025234,-0.005328,-1.333085,-0.026789,0.000000,-1.485314,-0.000000,0.000000,-0.553369,-0.000000,-0.011340,-0.009057,-0.057014,-0.022245,-0.009057,-0.053706,-0.032295,-0.009057,-0.048334,-0.041104,-0.009057,-0.041105,-0.048333,-0.009057,-0.032296,-0.053705,-0.009057,-0.022246,-0.057013,-0.009057,-0.011341,-0.058130,-0.009057,-0.000000,-0.057013,-0.009057,0.011340,-0.053705,-0.009057,0.022245,-0.048334,-0.009057,0.032295,-0.041104,-0.009057,0.041104,-0.032295,-0.009057,0.048333,-0.022245,-0.009057,0.053705,-0.011341,-0.009057,0.057013,0.000000,-0.009057,0.058130,0.011341,-0.009057,0.057013,0.022246,-0.009057,0.053705,0.032296,-0.009057,0.048333,0.041104,-0.009057,0.041104,0.048334,-0.009057,0.032295,0.053706,-0.009057,0.022245,0.057014,-0.009057,0.011340,0.058130,-0.009057,-0.000000,0.057014,-0.009057,-0.011341,0.053706,-0.009057,-0.022246,0.048334,-0.009057,-0.032296,0.041104,-0.009057,-0.041105,0.032296,-0.009057,-0.048334,0.022246,-0.009057,-0.053706,0.011341,-0.009057,-0.057014,0.000000,-0.009057,-0.058131,0.000000,-0.000832,-0.000000],
rocket-3d/web/obj/rocket3d_full.js:    "morphTargets": [],
rocket-3d/web/obj/rocket3d_full.js:    "normals": [0.000000,0.892239,-0.451491,0.000000,0.624958,-0.780633,-0.152287,0.624958,-0.765618,-0.088076,0.892239,-0.442824,-0.298715,0.624958,-0.721213,-0.172765,0.892239,-0.417127,-0.250832,0.892239,-0.375408,-0.433699,0.624958,-0.649068,-0.319254,0.892239,-0.319254,-0.551988,0.624958,-0.551988,-0.375408,0.892239,-0.250832,-0.649068,0.624958,-0.433699,-0.417127,0.892239,-0.172765,-0.721213,0.624958,-0.298715,-0.442824,0.892239,-0.088076,-0.765618,0.624958,-0.152287,-0.451491,0.892239,0.000000,-0.780633,0.624958,0.000000,-0.442824,0.892239,0.088076,-0.765618,0.624958,0.152287,-0.417127,0.892239,0.172765,-0.721213,0.624958,0.298715,-0.375408,0.892239,0.250832,-0.649068,0.624958,0.433699,-0.319254,0.892239,0.319254,-0.551988,0.624958,0.551988,-0.250832,0.892239,0.375408,-0.433699,0.624958,0.649068,-0.172765,0.892239,0.417127,-0.298715,0.624958,0.721213,-0.088076,0.892239,0.442824,-0.152287,0.624958,0.765618,0.000000,0.892239,0.451491,0.000000,0.624958,0.780633,0.088076,0.892239,0.442824,0.152287,0.624958,0.765618,0.172765,0.892239,0.417127,0.298715,0.624958,0.721213,0.250832,0.892239,0.375408,0.433699,0.624958,0.649068,0.319254,0.892239,0.319254,0.551988,0.624958,0.551988,0.375408,0.892239,0.250832,0.649068,0.624958,0.433699,0.417127,0.892239,0.172765,0.721213,0.624958,0.298715,0.442824,0.892239,0.088076,0.765618,0.624958,0.152287,0.780633,0.624958,0.000000,0.451491,0.892239,0.000000,0.765618,0.624958,-0.152287,0.442824,0.892239,-0.088076,0.417127,0.892239,-0.172765,0.721213,0.624958,-0.298715,0.375408,0.892239,-0.250832,0.649068,0.624958,-0.433699,0.319254,0.892239,-0.319254,0.551988,0.624958,-0.551988,0.433699,0.624958,-0.649068,0.250832,0.892239,-0.375408,0.172765,0.892239,-0.417127,0.298715,0.624958,-0.721213,0.088076,0.892239,-0.442824,0.152287,0.624958,-0.765618,0.190130,0.223792,-0.955901,0.000000,0.223792,-0.974609,0.372967,0.223792,-0.900418,0.541459,0.223792,-0.810358,0.689138,0.223792,-0.689138,0.810358,0.223792,-0.541459,0.900418,0.223792,-0.372967,0.955901,0.223792,-0.190130,0.974609,0.223792,0.000000,0.955901,0.223792,0.190130,0.900418,0.223792,0.372967,0.810358,0.223792,0.541459,0.689138,0.223792,0.689138,0.541459,0.223792,0.810358,0.372967,0.223792,0.900418,0.190130,0.223792,0.955901,0.000000,0.223792,0.974609,-0.190130,0.223792,0.955901,-0.372967,0.223792,0.900418,-0.541459,0.223792,0.810358,-0.689138,0.223792,0.689138,-0.810358,0.223792,0.541459,-0.900418,0.223792,0.372967,-0.955901,0.223792,0.190130,-0.974609,0.223792,0.000000,-0.955901,0.223792,-0.190130,-0.900418,0.223792,-0.372967,-0.810358,0.223792,-0.541459,-0.689138,0.223792,-0.689138,-0.541459,0.223792,-0.810358,-0.372967,0.223792,-0.900418,-0.190130,0.223792,-0.955901,0.000000,-0.114353,-0.993408,-0.193793,-0.114353,-0.974334,-0.380169,-0.114353,-0.917814,-0.551897,-0.114353,-0.825983,-0.702445,-0.114353,-0.702445,-0.825983,-0.114353,-0.551897,-0.917814,-0.114353,-0.380169,-0.974334,-0.114353,-0.193793,-0.993408,-0.114353,0.000000,-0.974334,-0.114353,0.193793,-0.917814,-0.114353,0.380169,-0.825983,-0.114353,0.551897,-0.702445,-0.114353,0.702445,-0.551897,-0.114353,0.825983,-0.380169,-0.114353,0.917814,-0.193793,-0.114353,0.974334,0.000000,-0.114353,0.993408,0.193793,-0.114353,0.974334,0.380169,-0.114353,0.917814,0.551897,-0.114353,0.825983,0.702445,-0.114353,0.702445,0.825983,-0.114353,0.551897,0.917814,-0.114353,0.380169,0.974334,-0.114353,0.193793,0.993408,-0.114353,0.000000,0.974334,-0.114353,-0.193793,0.917814,-0.114353,-0.380169,0.825983,-0.114353,-0.551897,0.702445,-0.114353,-0.702445,0.551897,-0.114353,-0.825983,0.380169,-0.114353,-0.917814,0.193793,-0.114353,-0.974334,0.183050,-0.345653,-0.920316,0.000000,-0.345653,-0.938353,0.359081,-0.345653,-0.866909,0.521317,-0.345653,-0.780206,0.663503,-0.345653,-0.663503,0.780206,-0.345653,-0.521317,0.866909,-0.345653,-0.359081,0.920316,-0.345653,-0.183050,0.938353,-0.345653,0.000000,0.920316,-0.345653,0.183050,0.866909,-0.345653,0.359081,0.780206,-0.345653,0.521317,0.663503,-0.345653,0.663503,0.521317,-0.345653,0.780206,0.359081,-0.345653,0.866909,0.183050,-0.345653,0.920316,0.000000,-0.345653,0.938353,-0.183050,-0.345653,0.920316,-0.359081,-0.345653,0.866909,-0.521317,-0.345653,0.780206,-0.663503,-0.345653,0.663503,-0.780206,-0.345653,0.521317,-0.866909,-0.345653,0.359081,-0.920316,-0.345653,0.183050,-0.938353,-0.345653,0.000000,-0.920316,-0.345653,-0.183050,-0.866909,-0.345653,-0.359081,-0.780206,-0.345653,-0.521317,-0.663503,-0.345653,-0.663503,-0.521317,-0.345653,-0.780206,-0.359081,-0.345653,-0.866909,-0.183050,-0.345653,-0.920316,0.000000,-0.436933,-0.899472,-0.175451,-0.436933,-0.882199,-0.344188,-0.436933,-0.830988,-0.499710,-0.436933,-0.747887,-0.636006,-0.436933,-0.636006,-0.747887,-0.436933,-0.499710,-0.830988,-0.436933,-0.344218,-0.882199,-0.436933,-0.175481,-0.899472,-0.436933,0.000000,-0.882199,-0.436933,0.175451,-0.830988,-0.436933,0.344188,-0.747887,-0.436933,0.499710,-0.636006,-0.436933,0.636006,-0.499710,-0.436933,0.747887,-0.344218,-0.436933,0.830988,-0.175451,-0.436933,0.882199,0.000000,-0.436933,0.899472,0.175451,-0.436933,0.882199,0.344188,-0.436933,0.830988,0.499710,-0.436933,0.747887,0.636006,-0.436933,0.636006,0.747887,-0.436933,0.499710,0.830988,-0.436933,0.344218,0.882199,-0.436933,0.175451,0.899472,-0.436933,0.000000,0.882199,-0.436933,-0.175451,0.830988,-0.436933,-0.344218,0.747887,-0.436933,-0.499710,0.636006,-0.436933,-0.636006,0.499710,-0.436933,-0.747887,0.344188,-0.436933,-0.830988,0.175451,-0.436933,-0.882199,0.180731,-0.376476,-0.908597,0.000000,-0.376476,-0.926420,0.354503,-0.376476,-0.855892,0.514695,-0.376476,-0.770287,0.655080,-0.376476,-0.655080,0.770287,-0.376476,-0.514695,0.855892,-0.376476,-0.354503,0.908597,-0.376476,-0.180731,0.926420,-0.376476,0.000000,0.908597,-0.376476,0.180731,0.855892,-0.376476,0.354503,0.770287,-0.376476,0.514695,0.655080,-0.376476,0.655080,0.514695,-0.376476,0.770287,0.354503,-0.376476,0.855892,0.180731,-0.376476,0.908597,0.000000,-0.376476,0.926420,-0.180731,-0.376476,0.908597,-0.354503,-0.376476,0.855892,-0.514695,-0.376476,0.770287,-0.655080,-0.376476,0.655080,-0.770287,-0.376476,0.514664,-0.855892,-0.376476,0.354503,-0.908597,-0.376476,0.180731,-0.926420,-0.376476,0.000000,-0.908597,-0.376476,-0.180731,-0.855892,-0.376476,-0.354503,-0.770287,-0.376476,-0.514695,-0.655080,-0.376476,-0.655080,-0.514664,-0.376476,-0.770287,-0.354503,-0.376476,-0.855892,-0.180731,-0.376476,-0.908597,0.000000,-0.297220,-0.954802,-0.186254,-0.297220,-0.936460,-0.365368,-0.297220,-0.882107,-0.530442,-0.297220,-0.793878,-0.675130,-0.297220,-0.675130,-0.793878,-0.297220,-0.530442,-0.882107,-0.297220,-0.365368,-0.936460,-0.297220,-0.186254,-0.954802,-0.297220,0.000000,-0.936460,-0.297220,0.186254,-0.882107,-0.297220,0.365368,-0.793878,-0.297220,0.530442,-0.675130,-0.297220,0.675130,-0.530442,-0.297220,0.793878,-0.365368,-0.297220,0.882107,-0.186254,-0.297220,0.936460,0.000000,-0.297220,0.954802,0.186254,-0.297220,0.936460,0.365368,-0.297220,0.882107,0.530442,-0.297220,0.793878,0.675130,-0.297220,0.675130,0.793878,-0.297220,0.530442,0.882107,-0.297220,0.365368,0.936460,-0.297220,0.186254,0.954802,-0.297220,0.000000,0.936460,-0.297220,-0.186254,0.882107,-0.297220,-0.365368,0.793878,-0.297220,-0.530442,0.675130,-0.297220,-0.675130,0.530442,-0.297220,-0.793878,0.365368,-0.297220,-0.882107,0.186254,-0.297220,-0.936460,0.190497,-0.215064,-0.957823,0.000000,-0.215064,-0.976592,0.373699,-0.215064,-0.902249,0.542558,-0.215064,-0.812006,0.690542,-0.215064,-0.690542,0.812006,-0.215064,-0.542558,0.902249,-0.215064,-0.373699,0.957823,-0.215064,-0.190497,0.976592,-0.215064,0.000000,0.957823,-0.215064,0.190497,0.902249,-0.215064,0.373699,0.812006,-0.215064,0.542558,0.690542,-0.215064,0.690542,0.542558,-0.215064,0.812006,0.373699,-0.215064,0.902249,0.190497,-0.215064,0.957823,0.000000,-0.215064,0.976592,-0.190497,-0.215064,0.957823,-0.373699,-0.215064,0.902249,-0.542558,-0.215064,0.812006,-0.690542,-0.215064,0.690542,-0.812006,-0.215064,0.542558,-0.902249,-0.215064,0.373699,-0.957823,-0.215064,0.190497,-0.976592,-0.215064,0.000000,-0.957823,-0.215064,-0.190497,-0.902249,-0.215064,-0.373699,-0.812006,-0.215064,-0.542558,-0.690542,-0.215064,-0.690542,-0.542558,-0.215064,-0.812006,-0.373699,-0.215064,-0.902249,-0.190497,-0.215064,-0.957823,0.000000,-1.000000,0.000000,0.000000,0.979858,-0.199561,-0.038911,0.979858,-0.195715,-0.076357,0.979858,-0.184362,-0.110874,0.979858,-0.165929,-0.141118,0.979858,-0.141118,-0.165929,0.979858,-0.110874,-0.184362,0.979858,-0.076357,-0.195715,0.979858,-0.038911,-0.199561,0.979858,0.000000,-0.195715,0.979858,0.038911,-0.184362,0.979858,0.076357,-0.165929,0.979858,0.110874,-0.141118,0.979858,0.141118,-0.110874,0.979858,0.165929,-0.076357,0.979858,0.184362,-0.038911,0.979858,0.195715,0.000000,0.979858,0.199561,0.038911,0.979858,0.195715,0.076357,0.979858,0.184362,0.110874,0.979858,0.165929,0.141118,0.979858,0.141118,0.165929,0.979858,0.110874,0.184362,0.979858,0.076357,0.195715,0.979858,0.038911,0.199561,0.979858,0.000000,0.195715,0.979858,-0.038911,0.184362,0.979858,-0.076357,0.165929,0.979858,-0.110874,0.141118,0.979858,-0.141118,0.110874,0.979858,-0.165929,0.076357,0.979858,-0.184362,0.038911,0.979858,-0.195715,0.000000,0.999969,0.000000],
rocket-3d/web/obj/rocket3d_full.js:    "colors": [],
rocket-3d/web/obj/rocket3d_full.js:    "uvs": [[0.000000,1.000000,1.000000,1.000000,1.000000,0.000000,0.000000,0.000000]],
rocket-3d/web/obj/rocket3d_full.js:    "faces": [43,0,63,32,31,0,0,1,2,3,0,1,2,3,43,31,32,33,30,0,0,1,2,3,3,2,4,5,43,29,30,33,34,0,0,1,2,3,6,5,4,7,43,28,29,34,35,0,0,1,2,3,8,6,7,9,43,27,28,35,36,0,0,1,2,3,10,8,9,11,43,26,27,36,37,0,0,1,2,3,12,10,11,13,43,25,26,37,38,0,0,1,2,3,14,12,13,15,43,24,25,38,39,0,0,1,2,3,16,14,15,17,43,23,24,39,40,0,0,1,2,3,18,16,17,19,43,22,23,40,41,0,0,1,2,3,20,18,19,21,43,21,22,41,42,0,0,1,2,3,22,20,21,23,43,20,21,42,43,0,0,1,2,3,24,22,23,25,43,19,20,43,44,0,0,1,2,3,26,24,25,27,43,18,19,44,45,0,0,1,2,3,28,26,27,29,43,17,18,45,46,0,0,1,2,3,30,28,29,31,43,16,17,46,47,0,0,1,2,3,32,30,31,33,43,15,16,47,48,0,0,1,2,3,34,32,33,35,43,14,15,48,49,0,0,1,2,3,36,34,35,37,43,13,14,49,50,0,0,1,2,3,38,36,37,39,43,12,13,50,51,0,0,1,2,3,40,38,39,41,43,11,12,51,52,0,0,1,2,3,42,40,41,43,43,10,11,52,53,0,0,1,2,3,44,42,43,45,43,9,10,53,54,0,0,1,2,3,46,44,45,47,43,9,54,55,8,0,0,1,2,3,46,47,48,49,43,8,55,56,7,0,0,1,2,3,49,48,50,51,43,6,7,56,57,0,0,1,2,3,52,51,50,53,43,5,6,57,58,0,0,1,2,3,54,52,53,55,43,4,5,58,59,0,0,1,2,3,56,54,55,57,43,4,59,60,3,0,0,1,2,3,56,57,58,59,43,2,3,60,61,0,0,1,2,3,60,59,58,61,43,1,2,61,62,0,0,1,2,3,62,60,61,63,43,0,1,62,63,0,0,1,2,3,0,62,63,1,43,63,62,65,64,0,0,1,2,3,1,63,64,65,43,62,61,66,65,0,0,1,2,3,63,61,66,64,43,61,60,67,66,0,0,1,2,3,61,58,67,66,43,59,68,67,60,0,0,1,2,3,57,68,67,58,43,59,58,69,68,0,0,1,2,3,57,55,69,68,43,58,57,70,69,0,0,1,2,3,55,53,70,69,43,57,56,71,70,0,0,1,2,3,53,50,71,70,43,55,72,71,56,0,0,1,2,3,48,72,71,50,43,54,73,72,55,0,0,1,2,3,47,73,72,48,43,54,53,74,73,0,0,1,2,3,47,45,74,73,43,53,52,75,74,0,0,1,2,3,45,43,75,74,43,52,51,76,75,0,0,1,2,3,43,41,76,75,43,51,50,77,76,0,0,1,2,3,41,39,77,76,43,50,49,78,77,0,0,1,2,3,39,37,78,77,43,49,48,79,78,0,0,1,2,3,37,35,79,78,43,48,47,80,79,0,0,1,2,3,35,33,80,79,43,47,46,81,80,0,0,1,2,3,33,31,81,80,43,46,45,82,81,0,0,1,2,3,31,29,82,81,43,45,44,83,82,0,0,1,2,3,29,27,83,82,43,44,43,84,83,0,0,1,2,3,27,25,84,83,43,43,42,85,84,0,0,1,2,3,25,23,85,84,43,42,41,86,85,0,0,1,2,3,23,21,86,85,43,41,40,87,86,0,0,1,2,3,21,19,87,86,43,40,39,88,87,0,0,1,2,3,19,17,88,87,43,39,38,89,88,0,0,1,2,3,17,15,89,88,43,38,37,90,89,0,0,1,2,3,15,13,90,89,43,37,36,91,90,0,0,1,2,3,13,11,91,90,43,36,35,92,91,0,0,1,2,3,11,9,92,91,43,35,34,93,92,0,0,1,2,3,9,7,93,92,43,34,33,94,93,0,0,1,2,3,7,4,94,93,43,32,95,94,33,0,0,1,2,3,2,95,94,4,43,63,64,95,32,0,0,1,2,3,1,65,95,2,43,64,127,96,95,0,0,1,2,3,65,96,97,95,43,95,96,97,94,0,0,1,2,3,95,97,98,94,43,93,94,97,98,0,0,1,2,3,93,94,98,99,43,92,93,98,99,0,0,1,2,3,92,93,99,100,43,91,92,99,100,0,0,1,2,3,91,92,100,101,43,90,91,100,101,0,0,1,2,3,90,91,101,102,43,89,90,101,102,0,0,1,2,3,89,90,102,103,43,88,89,102,103,0,0,1,2,3,88,89,103,104,43,87,88,103,104,0,0,1,2,3,87,88,104,105,43,86,87,104,105,0,0,1,2,3,86,87,105,106,43,85,86,105,106,0,0,1,2,3,85,86,106,107,43,84,85,106,107,0,0,1,2,3,84,85,107,108,43,83,84,107,108,0,0,1,2,3,83,84,108,109,43,82,83,108,109,0,0,1,2,3,82,83,109,110,43,81,82,109,110,0,0,1,2,3,81,82,110,111,43,80,81,110,111,0,0,1,2,3,80,81,111,112,43,79,80,111,112,0,0,1,2,3,79,80,112,113,43,78,79,112,113,0,0,1,2,3,78,79,113,114,43,77,78,113,114,0,0,1,2,3,77,78,114,115,43,76,77,114,115,0,0,1,2,3,76,77,115,116,43,75,76,115,116,0,0,1,2,3,75,76,116,117,43,74,75,116,117,0,0,1,2,3,74,75,117,118,43,73,74,117,118,0,0,1,2,3,73,74,118,119,43,73,118,119,72,0,0,1,2,3,73,119,120,72,43,72,119,120,71,0,0,1,2,3,72,120,121,71,43,70,71,120,121,0,0,1,2,3,70,71,121,122,43,69,70,121,122,0,0,1,2,3,69,70,122,123,43,68,69,122,123,0,0,1,2,3,68,69,123,124,43,68,123,124,67,0,0,1,2,3,68,124,125,67,43,66,67,124,125,0,0,1,2,3,66,67,125,126,43,65,66,125,126,0,0,1,2,3,64,66,126,127,43,64,65,126,127,0,0,1,2,3,65,64,127,96,43,127,126,129,128,0,0,1,2,3,96,127,128,129,43,126,125,130,129,0,0,1,2,3,127,126,130,128,43,125,124,131,130,0,0,1,2,3,126,125,131,130,43,123,132,131,124,0,0,1,2,3,124,132,131,125,43,123,122,133,132,0,0,1,2,3,124,123,133,132,43,122,121,134,133,0,0,1,2,3,123,122,134,133,43,121,120,135,134,0,0,1,2,3,122,121,135,134,43,119,136,135,120,0,0,1,2,3,120,136,135,121,43,118,137,136,119,0,0,1,2,3,119,137,136,120,43,118,117,138,137,0,0,1,2,3,119,118,138,137,43,117,116,139,138,0,0,1,2,3,118,117,139,138,43,116,115,140,139,0,0,1,2,3,117,116,140,139,43,115,114,141,140,0,0,1,2,3,116,115,141,140,43,114,113,142,141,0,0,1,2,3,115,114,142,141,43,113,112,143,142,0,0,1,2,3,114,113,143,142,43,112,111,144,143,0,0,1,2,3,113,112,144,143,43,111,110,145,144,0,0,1,2,3,112,111,145,144,43,110,109,146,145,0,0,1,2,3,111,110,146,145,43,109,108,147,146,0,0,1,2,3,110,109,147,146,43,108,107,148,147,0,0,1,2,3,109,108,148,147,43,107,106,149,148,0,0,1,2,3,108,107,149,148,43,106,105,150,149,0,0,1,2,3,107,106,150,149,43,105,104,151,150,0,0,1,2,3,106,105,151,150,43,104,103,152,151,0,0,1,2,3,105,104,152,151,43,103,102,153,152,0,0,1,2,3,104,103,153,152,43,102,101,154,153,0,0,1,2,3,103,102,154,153,43,101,100,155,154,0,0,1,2,3,102,101,155,154,43,100,99,156,155,0,0,1,2,3,101,100,156,155,43,99,98,157,156,0,0,1,2,3,100,99,157,156,43,98,97,158,157,0,0,1,2,3,99,98,158,157,43,96,159,158,97,0,0,1,2,3,97,159,158,98,43,127,128,159,96,0,0,1,2,3,96,129,159,97,43,128,191,160,159,0,0,1,2,3,129,160,161,159,43,159,160,161,158,0,0,1,2,3,159,161,162,158,43,157,158,161,162,0,0,1,2,3,157,158,162,163,43,156,157,162,163,0,0,1,2,3,156,157,163,164,43,155,156,163,164,0,0,1,2,3,155,156,164,165,43,154,155,164,165,0,0,1,2,3,154,155,165,166,43,153,154,165,166,0,0,1,2,3,153,154,166,167,43,152,153,166,167,0,0,1,2,3,152,153,167,168,43,151,152,167,168,0,0,1,2,3,151,152,168,169,43,150,151,168,169,0,0,1,2,3,150,151,169,170,43,149,150,169,170,0,0,1,2,3,149,150,170,171,43,148,149,170,171,0,0,1,2,3,148,149,171,172,43,147,148,171,172,0,0,1,2,3,147,148,172,173,43,146,147,172,173,0,0,1,2,3,146,147,173,174,43,145,146,173,174,0,0,1,2,3,145,146,174,175,43,144,145,174,175,0,0,1,2,3,144,145,175,176,43,143,144,175,176,0,0,1,2,3,143,144,176,177,43,142,143,176,177,0,0,1,2,3,142,143,177,178,43,141,142,177,178,0,0,1,2,3,141,142,178,179,43,140,141,178,179,0,0,1,2,3,140,141,179,180,43,139,140,179,180,0,0,1,2,3,139,140,180,181,43,138,139,180,181,0,0,1,2,3,138,139,181,182,43,137,138,181,182,0,0,1,2,3,137,138,182,183,43,137,182,183,136,0,0,1,2,3,137,183,184,136,43,136,183,184,135,0,0,1,2,3,136,184,185,135,43,134,135,184,185,0,0,1,2,3,134,135,185,186,43,133,134,185,186,0,0,1,2,3,133,134,186,187,43,132,133,186,187,0,0,1,2,3,132,133,187,188,43,132,187,188,131,0,0,1,2,3,132,188,189,131,43,130,131,188,189,0,0,1,2,3,130,131,189,190,43,129,130,189,190,0,0,1,2,3,128,130,190,191,43,128,129,190,191,0,0,1,2,3,129,128,191,160,43,191,190,193,192,0,0,1,2,3,160,191,192,193,43,190,189,194,193,0,0,1,2,3,191,190,194,192,43,189,188,195,194,0,0,1,2,3,190,189,195,194,43,187,196,195,188,0,0,1,2,3,188,196,195,189,43,187,186,197,196,0,0,1,2,3,188,187,197,196,43,186,185,198,197,0,0,1,2,3,187,186,198,197,43,185,184,199,198,0,0,1,2,3,186,185,199,198,43,183,200,199,184,0,0,1,2,3,184,200,199,185,43,182,201,200,183,0,0,1,2,3,183,201,200,184,43,182,181,202,201,0,0,1,2,3,183,182,202,201,43,181,180,203,202,0,0,1,2,3,182,181,203,202,43,180,179,204,203,0,0,1,2,3,181,180,204,203,43,179,178,205,204,0,0,1,2,3,180,179,205,204,43,178,177,206,205,0,0,1,2,3,179,178,206,205,43,177,176,207,206,0,0,1,2,3,178,177,207,206,43,176,175,208,207,0,0,1,2,3,177,176,208,207,43,175,174,209,208,0,0,1,2,3,176,175,209,208,43,174,173,210,209,0,0,1,2,3,175,174,210,209,43,173,172,211,210,0,0,1,2,3,174,173,211,210,43,172,171,212,211,0,0,1,2,3,173,172,212,211,43,171,170,213,212,0,0,1,2,3,172,171,213,212,43,170,169,214,213,0,0,1,2,3,171,170,214,213,43,169,168,215,214,0,0,1,2,3,170,169,215,214,43,168,167,216,215,0,0,1,2,3,169,168,216,215,43,167,166,217,216,0,0,1,2,3,168,167,217,216,43,166,165,218,217,0,0,1,2,3,167,166,218,217,43,165,164,219,218,0,0,1,2,3,166,165,219,218,43,164,163,220,219,0,0,1,2,3,165,164,220,219,43,163,162,221,220,0,0,1,2,3,164,163,221,220,43,162,161,222,221,0,0,1,2,3,163,162,222,221,43,160,223,222,161,0,0,1,2,3,161,223,222,162,43,191,192,223,160,0,0,1,2,3,160,193,223,161,43,192,255,224,223,0,0,1,2,3,193,224,225,223,43,223,224,225,222,0,0,1,2,3,223,225,226,222,43,221,222,225,226,0,0,1,2,3,221,222,226,227,43,220,221,226,227,0,0,1,2,3,220,221,227,228,43,219,220,227,228,0,0,1,2,3,219,220,228,229,43,218,219,228,229,0,0,1,2,3,218,219,229,230,43,217,218,229,230,0,0,1,2,3,217,218,230,231,43,216,217,230,231,0,0,1,2,3,216,217,231,232,43,215,216,231,232,0,0,1,2,3,215,216,232,233,43,214,215,232,233,0,0,1,2,3,214,215,233,234,43,213,214,233,234,0,0,1,2,3,213,214,234,235,43,212,213,234,235,0,0,1,2,3,212,213,235,236,43,211,212,235,236,0,0,1,2,3,211,212,236,237,43,210,211,236,237,0,0,1,2,3,210,211,237,238,43,209,210,237,238,0,0,1,2,3,209,210,238,239,43,208,209,238,239,0,0,1,2,3,208,209,239,240,43,207,208,239,240,0,0,1,2,3,207,208,240,241,43,206,207,240,241,0,0,1,2,3,206,207,241,242,43,205,206,241,242,0,0,1,2,3,205,206,242,243,43,204,205,242,243,0,0,1,2,3,204,205,243,244,43,203,204,243,244,0,0,1,2,3,203,204,244,245,43,202,203,244,245,0,0,1,2,3,202,203,245,246,43,201,202,245,246,0,0,1,2,3,201,202,246,247,43,201,246,247,200,0,0,1,2,3,201,247,248,200,43,200,247,248,199,0,0,1,2,3,200,248,249,199,43,198,199,248,249,0,0,1,2,3,198,199,249,250,43,197,198,249,250,0,0,1,2,3,197,198,250,251,43,196,197,250,251,0,0,1,2,3,196,197,251,252,43,196,251,252,195,0,0,1,2,3,196,252,253,195,43,194,195,252,253,0,0,1,2,3,194,195,253,254,43,193,194,253,254,0,0,1,2,3,192,194,254,255,43,192,193,254,255,0,0,1,2,3,193,192,255,224,43,255,254,257,256,0,0,1,2,3,224,255,256,257,43,254,253,258,257,0,0,1,2,3,255,254,258,256,43,253,252,259,258,0,0,1,2,3,254,253,259,258,43,251,260,259,252,0,0,1,2,3,252,260,259,253,43,251,250,261,260,0,0,1,2,3,252,251,261,260,43,250,249,262,261,0,0,1,2,3,251,250,262,261,43,249,248,263,262,0,0,1,2,3,250,249,263,262,43,247,264,263,248,0,0,1,2,3,248,264,263,249,43,246,265,264,247,0,0,1,2,3,247,265,264,248,43,246,245,266,265,0,0,1,2,3,247,246,266,265,43,245,244,267,266,0,0,1,2,3,246,245,267,266,43,244,243,268,267,0,0,1,2,3,245,244,268,267,43,243,242,269,268,0,0,1,2,3,244,243,269,268,43,242,241,270,269,0,0,1,2,3,243,242,270,269,43,241,240,271,270,0,0,1,2,3,242,241,271,270,43,240,239,272,271,0,0,1,2,3,241,240,272,271,43,239,238,273,272,0,0,1,2,3,240,239,273,272,43,238,237,274,273,0,0,1,2,3,239,238,274,273,43,237,236,275,274,0,0,1,2,3,238,237,275,274,43,236,235,276,275,0,0,1,2,3,237,236,276,275,43,235,234,277,276,0,0,1,2,3,236,235,277,276,43,234,233,278,277,0,0,1,2,3,235,234,278,277,43,233,232,279,278,0,0,1,2,3,234,233,279,278,43,232,231,280,279,0,0,1,2,3,233,232,280,279,43,231,230,281,280,0,0,1,2,3,232,231,281,280,43,230,229,282,281,0,0,1,2,3,231,230,282,281,43,229,228,283,282,0,0,1,2,3,230,229,283,282,43,228,227,284,283,0,0,1,2,3,229,228,284,283,43,227,226,285,284,0,0,1,2,3,228,227,285,284,43,226,225,286,285,0,0,1,2,3,227,226,286,285,43,224,287,286,225,0,0,1,2,3,225,287,286,226,43,255,256,287,224,0,0,1,2,3,224,257,287,225,42,256,288,287,0,0,1,2,257,288,287,42,287,288,286,0,0,1,2,287,288,286,42,285,286,288,0,0,1,2,285,286,288,42,284,285,288,0,0,1,2,284,285,288,42,283,284,288,0,0,1,2,283,284,288,42,282,283,288,0,0,1,2,282,283,288,42,281,282,288,0,0,1,2,281,282,288,42,280,281,288,0,0,1,2,280,281,288,42,279,280,288,0,0,1,2,279,280,288,42,278,279,288,0,0,1,2,278,279,288,42,277,278,288,0,0,1,2,277,278,288,42,276,277,288,0,0,1,2,276,277,288,42,275,276,288,0,0,1,2,275,276,288,42,274,275,288,0,0,1,2,274,275,288,42,273,274,288,0,0,1,2,273,274,288,42,272,273,288,0,0,1,2,272,273,288,42,271,272,288,0,0,1,2,271,272,288,42,270,271,288,0,0,1,2,270,271,288,42,269,270,288,0,0,1,2,269,270,288,42,268,269,288,0,0,1,2,268,269,288,42,267,268,288,0,0,1,2,267,268,288,42,266,267,288,0,0,1,2,266,267,288,42,265,266,288,0,0,1,2,265,266,288,42,265,288,264,0,0,1,2,265,288,264,42,264,288,263,0,0,1,2,264,288,263,42,262,263,288,0,0,1,2,262,263,288,42,261,262,288,0,0,1,2,261,262,288,42,260,261,288,0,0,1,2,260,261,288,42,260,288,259,0,0,1,2,260,288,259,42,258,259,288,0,0,1,2,258,259,288,42,257,258,288,0,0,1,2,256,258,288,42,256,257,288,0,0,1,2,257,256,288,43,321,0,31,290,0,0,1,2,3,289,0,3,290,43,30,291,290,31,0,0,1,2,3,5,291,290,3,43,30,29,292,291,0,0,1,2,3,5,6,292,291,43,29,28,293,292,0,0,1,2,3,6,8,293,292,43,28,27,294,293,0,0,1,2,3,8,10,294,293,43,27,26,295,294,0,0,1,2,3,10,12,295,294,43,26,25,296,295,0,0,1,2,3,12,14,296,295,43,25,24,297,296,0,0,1,2,3,14,16,297,296,43,24,23,298,297,0,0,1,2,3,16,18,298,297,43,23,22,299,298,0,0,1,2,3,18,20,299,298,43,22,21,300,299,0,0,1,2,3,20,22,300,299,43,21,20,301,300,0,0,1,2,3,22,24,301,300,43,20,19,302,301,0,0,1,2,3,24,26,302,301,43,19,18,303,302,0,0,1,2,3,26,28,303,302,43,18,17,304,303,0,0,1,2,3,28,30,304,303,43,17,16,305,304,0,0,1,2,3,30,32,305,304,43,16,15,306,305,0,0,1,2,3,32,34,306,305,43,15,14,307,306,0,0,1,2,3,34,36,307,306,43,14,13,308,307,0,0,1,2,3,36,38,308,307,43,13,12,309,308,0,0,1,2,3,38,40,309,308,43,12,11,310,309,0,0,1,2,3,40,42,310,309,43,11,10,311,310,0,0,1,2,3,42,44,311,310,43,10,9,312,311,0,0,1,2,3,44,46,312,311,43,8,313,312,9,0,0,1,2,3,49,313,312,46,43,7,314,313,8,0,0,1,2,3,51,314,313,49,43,7,6,315,314,0,0,1,2,3,51,52,315,314,43,6,5,316,315,0,0,1,2,3,52,54,316,315,43,5,4,317,316,0,0,1,2,3,54,56,317,316,43,3,318,317,4,0,0,1,2,3,59,318,317,56,43,3,2,319,318,0,0,1,2,3,59,60,319,318,43,2,1,320,319,0,0,1,2,3,60,62,320,319,43,1,0,321,320,0,0,1,2,3,62,0,289,320,42,320,321,322,0,0,1,2,320,289,321,42,319,320,322,0,0,1,2,319,320,321,42,318,319,322,0,0,1,2,318,319,321,42,318,322,317,0,0,1,2,318,321,317,42,316,317,322,0,0,1,2,316,317,321,42,315,316,322,0,0,1,2,315,316,321,42,314,315,322,0,0,1,2,314,315,321,42,314,322,313,0,0,1,2,314,321,313,42,313,322,312,0,0,1,2,313,321,312,42,311,312,322,0,0,1,2,311,312,321,42,310,311,322,0,0,1,2,310,311,321,42,309,310,322,0,0,1,2,309,310,321,42,308,309,322,0,0,1,2,308,309,321,42,307,308,322,0,0,1,2,307,308,321,42,306,307,322,0,0,1,2,306,307,321,42,305,306,322,0,0,1,2,305,306,321,42,304,305,322,0,0,1,2,304,305,321,42,303,304,322,0,0,1,2,303,304,321,42,302,303,322,0,0,1,2,302,303,321,42,301,302,322,0,0,1,2,301,302,321,42,300,301,322,0,0,1,2,300,301,321,42,299,300,322,0,0,1,2,299,300,321,42,298,299,322,0,0,1,2,298,299,321,42,297,298,322,0,0,1,2,297,298,321,42,296,297,322,0,0,1,2,296,297,321,42,295,296,322,0,0,1,2,295,296,321,42,294,295,322,0,0,1,2,294,295,321,42,293,294,322,0,0,1,2,293,294,321,42,292,293,322,0,0,1,2,292,293,321,42,291,292,322,0,0,1,2,291,292,321,42,291,322,290,0,0,1,2,291,321,290,42,290,322,321,0,0,1,2,290,321,289]
rocket-3d/web/obj/rocket3d_full.js:}
rocket-3d/web/obj/rocket3d_full.js:]
rocket-3d/web/obj/rocket_flames_only.js:{
rocket-3d/web/obj/rocket_flames_only.js:    "metadata" :
rocket-3d/web/obj/rocket_flames_only.js:    {
rocket-3d/web/obj/rocket_flames_only.js:        "formatVersion" : 3,
rocket-3d/web/obj/rocket_flames_only.js:        "generatedBy"   : "Blender 2.60 Exporter",
rocket-3d/web/obj/rocket_flames_only.js:        "vertices"      : 1968,
rocket-3d/web/obj/rocket_flames_only.js:        "faces"         : 1368,
rocket-3d/web/obj/rocket_flames_only.js:        "normals"       : 395,
rocket-3d/web/obj/rocket_flames_only.js:        "colors"        : 0,
rocket-3d/web/obj/rocket_flames_only.js:        "uvs"           : 0,
rocket-3d/web/obj/rocket_flames_only.js:        "materials"     : 1,
rocket-3d/web/obj/rocket_flames_only.js:        "morphTargets"  : 0
rocket-3d/web/obj/rocket_flames_only.js:    },
rocket-3d/web/obj/rocket_flames_only.js:    "scale" : 1.000000,
rocket-3d/web/obj/rocket_flames_only.js:    "materials": [	{
rocket-3d/web/obj/rocket_flames_only.js:	"DbgColor" : 15658734,
rocket-3d/web/obj/rocket_flames_only.js:	"DbgIndex" : 0,
rocket-3d/web/obj/rocket_flames_only.js:	"DbgName" : "Material",
rocket-3d/web/obj/rocket_flames_only.js:	"colorAmbient" : [0.0, 0.0, 0.0],
rocket-3d/web/obj/rocket_flames_only.js:	"colorDiffuse" : [0.6400000190734865, 0.07327995409488608, 0.0],
rocket-3d/web/obj/rocket_flames_only.js:	"colorSpecular" : [0.5, 0.5, 0.5],
rocket-3d/web/obj/rocket_flames_only.js:	"shading" : "Lambert",
rocket-3d/web/obj/rocket_flames_only.js:	"specularCoef" : 50,
rocket-3d/web/obj/rocket_flames_only.js:	"transparency" : 1.0,
rocket-3d/web/obj/rocket_flames_only.js:	"vertexColors" : false
rocket-3d/web/obj/rocket_flames_only.js:	}],
rocket-3d/web/obj/rocket_flames_only.js:    "vertices": [1.532989,0.072000,4.294682,1.511309,0.072000,4.294682,1.511309,0.072000,4.020023,1.532989,0.072000,4.020023,-2.627900,0.072000,4.294682,-2.649580,0.072000,4.294682,-2.649580,0.072000,4.020023,-2.627900,0.072000,4.020023,-2.378438,0.072000,4.684681,-2.402607,0.072000,4.684681,-2.537373,0.072000,4.410023,-2.513203,0.072000,4.410023,-2.402461,0.072000,3.630023,-2.378291,0.072000,3.630023,-2.513057,0.072000,3.904681,-2.537226,0.072000,3.904681,-2.221553,0.072000,3.240023,-2.197383,0.072000,3.240023,-2.332148,0.072000,3.514681,-2.356318,0.072000,3.514681,-2.040644,0.072000,2.850023,-2.016474,0.072000,2.850023,-2.151240,0.072000,3.124681,-2.175410,0.072000,3.124681,-1.824726,0.072000,3.103002,-2.005488,0.072000,3.103002,-2.005488,0.072000,3.081322,-1.824726,0.072000,3.081322,-1.835713,0.072000,5.464681,-1.859883,0.072000,5.464681,-1.994648,0.072000,5.190023,-1.970478,0.072000,5.190023,-1.859736,0.072000,4.800023,-1.835566,0.072000,4.800023,-1.970332,0.072000,5.074681,-1.994502,0.072000,5.074681,-1.643818,0.072000,5.443001,-1.824580,0.072000,5.443001,-1.824580,0.072000,5.421322,-1.643818,0.072000,5.421322,-1.462910,0.072000,5.443001,-1.643672,0.072000,5.443001,-1.643672,0.072000,5.421322,-1.462910,0.072000,5.421322,-1.542451,0.072000,4.684681,-1.564131,0.072000,4.684681,-1.564131,0.072000,4.410023,-1.542451,0.072000,4.410023,-1.292988,0.072000,5.854681,-1.317158,0.072000,5.854681,-1.451924,0.072000,5.580023,-1.427754,0.072000,5.580023,-1.292988,0.072000,5.074681,-1.317158,0.072000,5.074681,-1.451924,0.072000,4.800023,-1.427754,0.072000,4.800023,-1.101094,0.072000,5.833001,-1.281855,0.072000,5.833001,-1.281855,0.072000,5.811321,-1.101094,0.072000,5.811321,-1.101094,0.072000,5.053001,-1.281855,0.072000,5.053001,-1.281855,0.072000,5.031322,-1.101094,0.072000,5.031322,-0.920185,0.072000,5.833001,-1.100947,0.072000,5.833001,-1.100947,0.072000,5.811321,-0.920185,0.072000,5.811321,-0.920185,0.072000,5.053001,-1.100947,0.072000,5.053001,-1.100947,0.072000,5.031322,-0.920185,0.072000,5.031322,-0.774287,0.072000,5.580023,-0.750117,0.072000,5.580023,-0.884883,0.072000,5.854681,-0.909053,0.072000,5.854681,-0.774287,0.072000,4.800023,-0.750117,0.072000,4.800023,-0.884883,0.072000,5.074681,-0.909053,0.072000,5.074681,-0.558369,0.072000,5.443001,-0.739131,0.072000,5.443001,-0.739131,0.072000,5.421322,-0.558369,0.072000,5.421322,-0.377461,0.072000,5.443001,-0.558223,0.072000,5.443001,-0.558223,0.072000,5.421322,-0.377461,0.072000,5.421322,-0.231562,0.072000,5.190023,-0.207392,0.072000,5.190023,-0.342158,0.072000,5.464681,-0.366328,0.072000,5.464681,0.739263,0.072000,5.009130,0.735742,0.072000,5.004546,0.732527,0.072000,4.999708,0.729618,0.072000,4.994614,0.727015,0.072000,4.989265,0.724719,0.072000,4.983660,0.722728,0.072000,4.977800,0.721044,0.072000,4.971685,0.719667,0.072000,4.965315,0.718595,0.072000,4.958689,0.717829,0.072000,4.951807,0.717370,0.072000,4.944671,0.717217,0.072000,4.937279,0.717370,0.072000,4.929911,0.717829,0.072000,4.922795,0.718595,0.072000,4.915934,0.719666,0.072000,4.909325,0.721044,0.072000,4.902969,0.722728,0.072000,4.896868,0.724719,0.072000,4.891019,0.727015,0.072000,4.885424,0.729618,0.072000,4.880081,0.732527,0.072000,4.874993,0.735742,0.072000,4.870157,0.739263,0.072000,4.865575,0.743043,0.072000,4.861305,0.747033,0.072000,4.857407,0.751234,0.072000,4.853879,0.755645,0.072000,4.850723,0.760267,0.072000,4.847939,0.765099,0.072000,4.845525,0.770142,0.072000,4.843482,0.775396,0.072000,4.841812,0.780860,0.072000,4.840512,0.786535,0.072000,4.839584,0.792420,0.072000,4.839027,0.798516,0.072000,4.838841,0.804612,0.072000,4.839027,0.810497,0.072000,4.839583,0.816172,0.072000,4.840512,0.821636,0.072000,4.841811,0.826890,0.072000,4.843482,0.831933,0.072000,4.845524,0.836765,0.072000,4.847938,0.841387,0.072000,4.850723,0.845798,0.072000,4.853879,0.849999,0.072000,4.857406,0.853989,0.072000,4.861304,0.857769,0.072000,4.865575,0.861290,0.072000,4.870157,0.864505,0.072000,4.874993,0.867414,0.072000,4.880081,0.870016,0.072000,4.885424,0.872313,0.072000,4.891019,0.874303,0.072000,4.896868,0.875987,0.072000,4.902969,0.877365,0.072000,4.909325,0.878437,0.072000,4.915934,0.879202,0.072000,4.922795,0.879662,0.072000,4.929911,0.879815,0.072000,4.937279,0.879662,0.072000,4.944671,0.879202,0.072000,4.951807,0.878437,0.072000,4.958689,0.877365,0.072000,4.965315,0.875987,0.072000,4.971685,0.874303,0.072000,4.977800,0.872313,0.072000,4.983660,0.870017,0.072000,4.989265,0.867414,0.072000,4.994614,0.864505,0.072000,4.999708,0.861290,0.072000,5.004546,0.857769,0.072000,5.009130,0.853989,0.072000,5.013399,0.849999,0.072000,5.017298,0.845798,0.072000,5.020825,0.841387,0.072000,5.023981,0.836765,0.072000,5.026766,0.831932,0.072000,5.029180,0.826889,0.072000,5.031222,0.821636,0.072000,5.032893,0.816172,0.072000,5.034192,0.810497,0.072000,5.035120,0.804611,0.072000,5.035677,0.798516,0.072000,5.035863,0.792420,0.072000,5.035677,0.786535,0.072000,5.035121,0.780860,0.072000,5.034193,0.775396,0.072000,5.032893,0.770142,0.072000,5.031222,0.765099,0.072000,5.029180,0.760266,0.072000,5.026767,0.755645,0.072000,5.023982,0.751233,0.072000,5.020825,0.747032,0.072000,5.017298,0.743042,0.072000,5.013400,0.761089,0.072000,4.880516,0.758995,0.072000,4.883965,0.757083,0.072000,4.887648,0.755353,0.072000,4.891562,0.753806,0.072000,4.895710,0.752440,0.072000,4.900091,0.751256,0.072000,4.904705,0.750255,0.072000,4.909552,0.749435,0.072000,4.914631,0.748798,0.072000,4.919943,0.748343,0.072000,4.925489,0.748070,0.072000,4.931268,0.747979,0.072000,4.937279,0.748070,0.072000,4.943314,0.748343,0.072000,4.949114,0.748798,0.072000,4.954679,0.749435,0.072000,4.960009,0.750255,0.072000,4.965104,0.751256,0.072000,4.969963,0.752440,0.072000,4.974588,0.753806,0.072000,4.978978,0.755353,0.072000,4.983133,0.757083,0.072000,4.987053,0.758995,0.072000,4.990738,0.761089,0.072000,4.994188,0.763352,0.072000,4.997382,0.765770,0.072000,5.000298,0.768345,0.072000,5.002936,0.771074,0.072000,5.005296,0.773960,0.072000,5.007379,0.777001,0.072000,5.009184,0.780198,0.072000,5.010712,0.783550,0.072000,5.011961,0.787058,0.072000,5.012934,0.790721,0.072000,5.013628,0.794541,0.072000,5.014044,0.798516,0.072000,5.014183,0.802491,0.072000,5.014044,0.806312,0.072000,5.013628,0.809978,0.072000,5.012934,0.813490,0.072000,5.011961,0.816847,0.072000,5.010712,0.820049,0.072000,5.009184,0.823097,0.072000,5.007379,0.825990,0.072000,5.005296,0.828728,0.072000,5.002936,0.831312,0.072000,5.000298,0.833741,0.072000,4.997382,0.836016,0.072000,4.994188,0.838122,0.072000,4.990738,0.840044,0.072000,4.987053,0.841784,0.072000,4.983133,0.843340,0.072000,4.978978,0.844713,0.072000,4.974588,0.845904,0.072000,4.969963,0.846911,0.072000,4.965104,0.847735,0.072000,4.960009,0.848375,0.072000,4.954679,0.848833,0.072000,4.949114,0.849108,0.072000,4.943314,0.849199,0.072000,4.937279,0.849108,0.072000,4.931267,0.848833,0.072000,4.925488,0.848375,0.072000,4.919943,0.847735,0.072000,4.914630,0.846911,0.072000,4.909551,0.845904,0.072000,4.904705,0.844713,0.072000,4.900091,0.843340,0.072000,4.895710,0.841784,0.072000,4.891562,0.840044,0.072000,4.887647,0.838122,0.072000,4.883965,0.836016,0.072000,4.880516,0.833741,0.072000,4.877323,0.831312,0.072000,4.874407,0.828728,0.072000,4.871768,0.825990,0.072000,4.869408,0.823097,0.072000,4.867325,0.820049,0.072000,4.865520,0.816847,0.072000,4.863993,0.813490,0.072000,4.862743,0.809978,0.072000,4.861771,0.806312,0.072000,4.861077,0.802491,0.072000,4.860660,0.798516,0.072000,4.860521,0.794541,0.072000,4.860660,0.790722,0.072000,4.861077,0.787058,0.072000,4.861771,0.783550,0.072000,4.862743,0.780198,0.072000,4.863993,0.777001,0.072000,4.865520,0.773960,0.072000,4.867325,0.771075,0.072000,4.869408,0.768345,0.072000,4.871768,0.765771,0.072000,4.874407,0.763352,0.072000,4.877323,0.877910,0.072000,4.684681,0.853740,0.072000,4.684681,0.718975,0.072000,4.410023,0.743145,0.072000,4.410023,1.069805,0.072000,4.663002,0.889043,0.072000,4.663002,0.889043,0.072000,4.641322,1.069805,0.072000,4.641322,1.250713,0.072000,4.663002,1.069951,0.072000,4.663002,1.069951,0.072000,4.641322,1.250713,0.072000,4.641322,1.396612,0.072000,4.410023,1.420781,0.072000,4.410023,1.286016,0.072000,4.684681,1.261846,0.072000,4.684681,1.577154,0.072000,5.402792,1.573717,0.072000,5.406336,1.570071,0.072000,5.409573,1.566218,0.072000,5.412500,1.562155,0.072000,5.415121,1.557884,0.072000,5.417432,1.553405,0.072000,5.419436,1.548717,0.072000,5.421131,1.543820,0.072000,5.422518,1.538715,0.072000,5.423597,1.533401,0.072000,5.424367,1.527879,0.072000,5.424830,1.522149,0.072000,5.424984,1.516418,0.072000,5.424830,1.510896,0.072000,5.424367,1.505582,0.072000,5.423597,1.500477,0.072000,5.422518,1.495581,0.072000,5.421131,1.490893,0.072000,5.419436,1.486413,0.072000,5.417432,1.482142,0.072000,5.415121,1.478080,0.072000,5.412500,1.474226,0.072000,5.409573,1.470581,0.072000,5.406336,1.467144,0.072000,5.402792,1.463950,0.072000,5.398977,1.461034,0.072000,5.394932,1.458396,0.072000,5.390656,1.456035,0.072000,5.386149,1.453953,0.072000,5.381412,1.452147,0.072000,5.376442,1.450620,0.072000,5.371243,1.449370,0.072000,5.365812,1.448398,0.072000,5.360151,1.447704,0.072000,5.354258,1.447288,0.072000,5.348135,1.447149,0.072000,5.341781,1.447288,0.072000,5.335450,1.447706,0.072000,5.329348,1.448403,0.072000,5.323475,1.449378,0.072000,5.317831,1.450633,0.072000,5.312415,1.452166,0.072000,5.307229,1.453977,0.072000,5.302271,1.456068,0.072000,5.297543,1.458437,0.072000,5.293043,1.461085,0.072000,5.288772,1.464012,0.072000,5.284729,1.467217,0.072000,5.280916,1.470664,0.072000,5.277371,1.474317,0.072000,5.274135,1.478176,0.072000,5.271207,1.482240,0.072000,5.268587,1.486509,0.072000,5.266275,1.490984,0.072000,5.264272,1.495664,0.072000,5.262577,1.500550,0.072000,5.261189,1.505642,0.072000,5.260111,1.510939,0.072000,5.259340,1.516441,0.072000,5.258878,1.522149,0.072000,5.258724,1.527879,0.072000,5.258878,1.533401,0.072000,5.259340,1.538715,0.072000,5.260111,1.543820,0.072000,5.261189,1.548717,0.072000,5.262577,1.553405,0.072000,5.264272,1.557884,0.072000,5.266275,1.562155,0.072000,5.268587,1.566218,0.072000,5.271207,1.570071,0.072000,5.274135,1.573717,0.072000,5.277371,1.577154,0.072000,5.280916,1.580347,0.072000,5.284729,1.583263,0.072000,5.288772,1.585901,0.072000,5.293043,1.588262,0.072000,5.297543,1.590345,0.072000,5.302271,1.592150,0.072000,5.307229,1.593677,0.072000,5.312415,1.594927,0.072000,5.317831,1.595899,0.072000,5.323475,1.596593,0.072000,5.329348,1.597010,0.072000,5.335450,1.597149,0.072000,5.341781,1.597010,0.072000,5.348135,1.596593,0.072000,5.354258,1.595899,0.072000,5.360151,1.594927,0.072000,5.365812,1.593677,0.072000,5.371243,1.592150,0.072000,5.376442,1.590345,0.072000,5.381412,1.588262,0.072000,5.386149,1.585901,0.072000,5.390656,1.583263,0.072000,5.394932,1.580347,0.072000,5.398977,1.489629,0.072000,5.387044,1.491645,0.072000,5.389642,1.493788,0.072000,5.392013,1.496056,0.072000,5.394158,1.498451,0.072000,5.396078,1.500972,0.072000,5.397771,1.503618,0.072000,5.399239,1.506391,0.072000,5.400481,1.509291,0.072000,5.401498,1.512316,0.072000,5.402288,1.515467,0.072000,5.402853,1.518745,0.072000,5.403192,1.522149,0.072000,5.403304,1.525552,0.072000,5.403192,1.528830,0.072000,5.402853,1.531981,0.072000,5.402288,1.535007,0.072000,5.401498,1.537906,0.072000,5.400481,1.540679,0.072000,5.399239,1.543326,0.072000,5.397771,1.545847,0.072000,5.396078,1.548241,0.072000,5.394158,1.550510,0.072000,5.392013,1.552652,0.072000,5.389642,1.554668,0.072000,5.387044,1.556540,0.072000,5.384246,1.558249,0.072000,5.381270,1.559795,0.072000,5.378118,1.561179,0.072000,5.374788,1.562399,0.072000,5.371282,1.563457,0.072000,5.367599,1.564353,0.072000,5.363738,1.565085,0.072000,5.359700,1.565655,0.072000,5.355486,1.566061,0.072000,5.351094,1.566306,0.072000,5.346526,1.566387,0.072000,5.341781,1.566306,0.072000,5.337059,1.566061,0.072000,5.332511,1.565655,0.072000,5.328139,1.565085,0.072000,5.323942,1.564353,0.072000,5.319920,1.563457,0.072000,5.316072,1.562399,0.072000,5.312400,1.561179,0.072000,5.308903,1.559795,0.072000,5.305581,1.558249,0.072000,5.302433,1.556540,0.072000,5.299461,1.554668,0.072000,5.296663,1.552652,0.072000,5.294066,1.550510,0.072000,5.291695,1.548241,0.072000,5.289550,1.545847,0.072000,5.287630,1.543326,0.072000,5.285936,1.540679,0.072000,5.284469,1.537906,0.072000,5.283226,1.535007,0.072000,5.282210,1.531981,0.072000,5.281420,1.528830,0.072000,5.280855,1.525552,0.072000,5.280517,1.522149,0.072000,5.280404,1.518745,0.072000,5.280517,1.515467,0.072000,5.280855,1.512316,0.072000,5.281420,1.509291,0.072000,5.282210,1.506391,0.072000,5.283226,1.503618,0.072000,5.284469,1.500972,0.072000,5.285936,1.498451,0.072000,5.287630,1.496056,0.072000,5.289550,1.493788,0.072000,5.291695,1.491645,0.072000,5.294066,1.489629,0.072000,5.296663,1.487757,0.072000,5.299461,1.486048,0.072000,5.302433,1.484502,0.072000,5.305581,1.483119,0.072000,5.308903,1.481898,0.072000,5.312400,1.480840,0.072000,5.316072,1.479945,0.072000,5.319920,1.479212,0.072000,5.323942,1.478643,0.072000,5.328139,1.478236,0.072000,5.332511,1.477992,0.072000,5.337059,1.477910,0.072000,5.341781,1.477992,0.072000,5.346526,1.478236,0.072000,5.351094,1.478643,0.072000,5.355486,1.479212,0.072000,5.359700,1.479945,0.072000,5.363738,1.480840,0.072000,5.367599,1.481898,0.072000,5.371282,1.483119,0.072000,5.374788,1.484502,0.072000,5.378118,1.486048,0.072000,5.381270,1.487757,0.072000,5.384246,1.532989,-0.072000,4.294682,1.511309,-0.072000,4.294682,1.511309,-0.072000,4.020023,1.532989,-0.072000,4.020023,-2.627900,-0.072000,4.294682,-2.649580,-0.072000,4.294682,-2.649580,-0.072000,4.020023,-2.627900,-0.072000,4.020023,-2.378438,-0.072000,4.684681,-2.402607,-0.072000,4.684681,-2.537373,-0.072000,4.410023,-2.513203,-0.072000,4.410023,-2.402461,-0.072000,3.630023,-2.378291,-0.072000,3.630023,-2.513057,-0.072000,3.904681,-2.537226,-0.072000,3.904681,-2.221553,-0.072000,3.240023,-2.197383,-0.072000,3.240023,-2.332148,-0.072000,3.514681,-2.356318,-0.072000,3.514681,-2.040644,-0.072000,2.850023,-2.016474,-0.072000,2.850023,-2.151240,-0.072000,3.124681,-2.175410,-0.072000,3.124681,-1.824726,-0.072000,3.103002,-2.005488,-0.072000,3.103002,-2.005488,-0.072000,3.081322,-1.824726,-0.072000,3.081322,-1.835713,-0.072000,5.464681,-1.859883,-0.072000,5.464681,-1.994648,-0.072000,5.190023,-1.970478,-0.072000,5.190023,-1.859736,-0.072000,4.800023,-1.835566,-0.072000,4.800023,-1.970332,-0.072000,5.074681,-1.994502,-0.072000,5.074681,-1.643818,-0.072000,5.443001,-1.824580,-0.072000,5.443001,-1.824580,-0.072000,5.421322,-1.643818,-0.072000,5.421322,-1.462910,-0.072000,5.443001,-1.643672,-0.072000,5.443001,-1.643672,-0.072000,5.421322,-1.462910,-0.072000,5.421322,-1.542451,-0.072000,4.684681,-1.564131,-0.072000,4.684681,-1.564131,-0.072000,4.410023,-1.542451,-0.072000,4.410023,-1.292988,-0.072000,5.854681,-1.317158,-0.072000,5.854681,-1.451924,-0.072000,5.580023,-1.427754,-0.072000,5.580023,-1.292988,-0.072000,5.074681,-1.317158,-0.072000,5.074681,-1.451924,-0.072000,4.800023,-1.427754,-0.072000,4.800023,-1.101094,-0.072000,5.833001,-1.281855,-0.072000,5.833001,-1.281855,-0.072000,5.811321,-1.101094,-0.072000,5.811321,-1.101094,-0.072000,5.053001,-1.281855,-0.072000,5.053001,-1.281855,-0.072000,5.031322,-1.101094,-0.072000,5.031322,-0.920185,-0.072000,5.833001,-1.100947,-0.072000,5.833001,-1.100947,-0.072000,5.811321,-0.920185,-0.072000,5.811321,-0.920185,-0.072000,5.053001,-1.100947,-0.072000,5.053001,-1.100947,-0.072000,5.031322,-0.920185,-0.072000,5.031322,-0.774287,-0.072000,5.580023,-0.750117,-0.072000,5.580023,-0.884883,-0.072000,5.854681,-0.909053,-0.072000,5.854681,-0.774287,-0.072000,4.800023,-0.750117,-0.072000,4.800023,-0.884883,-0.072000,5.074681,-0.909053,-0.072000,5.074681,-0.558369,-0.072000,5.443001,-0.739131,-0.072000,5.443001,-0.739131,-0.072000,5.421322,-0.558369,-0.072000,5.421322,-0.377461,-0.072000,5.443001,-0.558223,-0.072000,5.443001,-0.558223,-0.072000,5.421322,-0.377461,-0.072000,5.421322,-0.231562,-0.072000,5.190023,-0.207392,-0.072000,5.190023,-0.342158,-0.072000,5.464681,-0.366328,-0.072000,5.464681,0.739263,-0.072000,5.009130,0.735742,-0.072000,5.004546,0.732527,-0.072000,4.999708,0.729618,-0.072000,4.994614,0.727015,-0.072000,4.989265,0.724719,-0.072000,4.983660,0.722728,-0.072000,4.977800,0.721044,-0.072000,4.971685,0.719667,-0.072000,4.965315,0.718595,-0.072000,4.958689,0.717829,-0.072000,4.951807,0.717370,-0.072000,4.944671,0.717217,-0.072000,4.937279,0.717370,-0.072000,4.929911,0.717829,-0.072000,4.922795,0.718595,-0.072000,4.915934,0.719666,-0.072000,4.909325,0.721044,-0.072000,4.902969,0.722728,-0.072000,4.896868,0.724719,-0.072000,4.891019,0.727015,-0.072000,4.885424,0.729618,-0.072000,4.880081,0.732527,-0.072000,4.874993,0.735742,-0.072000,4.870157,0.739263,-0.072000,4.865575,0.743043,-0.072000,4.861305,0.747033,-0.072000,4.857407,0.751234,-0.072000,4.853879,0.755645,-0.072000,4.850723,0.760267,-0.072000,4.847939,0.765099,-0.072000,4.845525,0.770142,-0.072000,4.843482,0.775396,-0.072000,4.841812,0.780860,-0.072000,4.840512,0.786535,-0.072000,4.839584,0.792420,-0.072000,4.839027,0.798516,-0.072000,4.838841,0.804612,-0.072000,4.839027,0.810497,-0.072000,4.839583,0.816172,-0.072000,4.840512,0.821636,-0.072000,4.841811,0.826890,-0.072000,4.843482,0.831933,-0.072000,4.845524,0.836765,-0.072000,4.847938,0.841387,-0.072000,4.850723,0.845798,-0.072000,4.853879,0.849999,-0.072000,4.857406,0.853989,-0.072000,4.861304,0.857769,-0.072000,4.865575,0.861290,-0.072000,4.870157,0.864505,-0.072000,4.874993,0.867414,-0.072000,4.880081,0.870016,-0.072000,4.885424,0.872313,-0.072000,4.891019,0.874303,-0.072000,4.896868,0.875987,-0.072000,4.902969,0.877365,-0.072000,4.909325,0.878437,-0.072000,4.915934,0.879202,-0.072000,4.922795,0.879662,-0.072000,4.929911,0.879815,-0.072000,4.937279,0.879662,-0.072000,4.944671,0.879202,-0.072000,4.951807,0.878437,-0.072000,4.958689,0.877365,-0.072000,4.965315,0.875987,-0.072000,4.971685,0.874303,-0.072000,4.977800,0.872313,-0.072000,4.983660,0.870017,-0.072000,4.989265,0.867414,-0.072000,4.994614,0.864505,-0.072000,4.999708,0.861290,-0.072000,5.004546,0.857769,-0.072000,5.009130,0.853989,-0.072000,5.013399,0.849999,-0.072000,5.017298,0.845798,-0.072000,5.020825,0.841387,-0.072000,5.023981,0.836765,-0.072000,5.026766,0.831932,-0.072000,5.029180,0.826889,-0.072000,5.031222,0.821636,-0.072000,5.032893,0.816172,-0.072000,5.034192,0.810497,-0.072000,5.035120,0.804611,-0.072000,5.035677,0.798516,-0.072000,5.035863,0.792420,-0.072000,5.035677,0.786535,-0.072000,5.035121,0.780860,-0.072000,5.034193,0.775396,-0.072000,5.032893,0.770142,-0.072000,5.031222,0.765099,-0.072000,5.029180,0.760266,-0.072000,5.026767,0.755645,-0.072000,5.023982,0.751233,-0.072000,5.020825,0.747032,-0.072000,5.017298,0.743042,-0.072000,5.013400,0.761089,-0.072000,4.880516,0.758995,-0.072000,4.883965,0.757083,-0.072000,4.887648,0.755353,-0.072000,4.891562,0.753806,-0.072000,4.895710,0.752440,-0.072000,4.900091,0.751256,-0.072000,4.904705,0.750255,-0.072000,4.909552,0.749435,-0.072000,4.914631,0.748798,-0.072000,4.919943,0.748343,-0.072000,4.925489,0.748070,-0.072000,4.931268,0.747979,-0.072000,4.937279,0.748070,-0.072000,4.943314,0.748343,-0.072000,4.949114,0.748798,-0.072000,4.954679,0.749435,-0.072000,4.960009,0.750255,-0.072000,4.965104,0.751256,-0.072000,4.969963,0.752440,-0.072000,4.974588,0.753806,-0.072000,4.978978,0.755353,-0.072000,4.983133,0.757083,-0.072000,4.987053,0.758995,-0.072000,4.990738,0.761089,-0.072000,4.994188,0.763352,-0.072000,4.997382,0.765770,-0.072000,5.000298,0.768345,-0.072000,5.002936,0.771074,-0.072000,5.005296,0.773960,-0.072000,5.007379,0.777001,-0.072000,5.009184,0.780198,-0.072000,5.010712,0.783550,-0.072000,5.011961,0.787058,-0.072000,5.012934,0.790721,-0.072000,5.013628,0.794541,-0.072000,5.014044,0.798516,-0.072000,5.014183,0.802491,-0.072000,5.014044,0.806312,-0.072000,5.013628,0.809978,-0.072000,5.012934,0.813490,-0.072000,5.011961,0.816847,-0.072000,5.010712,0.820049,-0.072000,5.009184,0.823097,-0.072000,5.007379,0.825990,-0.072000,5.005296,0.828728,-0.072000,5.002936,0.831312,-0.072000,5.000298,0.833741,-0.072000,4.997382,0.836016,-0.072000,4.994188,0.838122,-0.072000,4.990738,0.840044,-0.072000,4.987053,0.841784,-0.072000,4.983133,0.843340,-0.072000,4.978978,0.844713,-0.072000,4.974588,0.845904,-0.072000,4.969963,0.846911,-0.072000,4.965104,0.847735,-0.072000,4.960009,0.848375,-0.072000,4.954679,0.848833,-0.072000,4.949114,0.849108,-0.072000,4.943314,0.849199,-0.072000,4.937279,0.849108,-0.072000,4.931267,0.848833,-0.072000,4.925488,0.848375,-0.072000,4.919943,0.847735,-0.072000,4.914630,0.846911,-0.072000,4.909551,0.845904,-0.072000,4.904705,0.844713,-0.072000,4.900091,0.843340,-0.072000,4.895710,0.841784,-0.072000,4.891562,0.840044,-0.072000,4.887647,0.838122,-0.072000,4.883965,0.836016,-0.072000,4.880516,0.833741,-0.072000,4.877323,0.831312,-0.072000,4.874407,0.828728,-0.072000,4.871768,0.825990,-0.072000,4.869408,0.823097,-0.072000,4.867325,0.820049,-0.072000,4.865520,0.816847,-0.072000,4.863993,0.813490,-0.072000,4.862743,0.809978,-0.072000,4.861771,0.806312,-0.072000,4.861077,0.802491,-0.072000,4.860660,0.798516,-0.072000,4.860521,0.794541,-0.072000,4.860660,0.790722,-0.072000,4.861077,0.787058,-0.072000,4.861771,0.783550,-0.072000,4.862743,0.780198,-0.072000,4.863993,0.777001,-0.072000,4.865520,0.773960,-0.072000,4.867325,0.771075,-0.072000,4.869408,0.768345,-0.072000,4.871768,0.765771,-0.072000,4.874407,0.763352,-0.072000,4.877323,0.877910,-0.072000,4.684681,0.853740,-0.072000,4.684681,0.718975,-0.072000,4.410023,0.743145,-0.072000,4.410023,1.069805,-0.072000,4.663002,0.889043,-0.072000,4.663002,0.889043,-0.072000,4.641322,1.069805,-0.072000,4.641322,1.250713,-0.072000,4.663002,1.069951,-0.072000,4.663002,1.069951,-0.072000,4.641322,1.250713,-0.072000,4.641322,1.396612,-0.072000,4.410023,1.420781,-0.072000,4.410023,1.286016,-0.072000,4.684681,1.261846,-0.072000,4.684681,1.577154,-0.072000,5.402792,1.573717,-0.072000,5.406336,1.570071,-0.072000,5.409573,1.566218,-0.072000,5.412500,1.562155,-0.072000,5.415121,1.557884,-0.072000,5.417432,1.553405,-0.072000,5.419436,1.548717,-0.072000,5.421131,1.543820,-0.072000,5.422518,1.538715,-0.072000,5.423597,1.533401,-0.072000,5.424367,1.527879,-0.072000,5.424830,1.522149,-0.072000,5.424984,1.516418,-0.072000,5.424830,1.510896,-0.072000,5.424367,1.505582,-0.072000,5.423597,1.500477,-0.072000,5.422518,1.495581,-0.072000,5.421131,1.490893,-0.072000,5.419436,1.486413,-0.072000,5.417432,1.482142,-0.072000,5.415121,1.478080,-0.072000,5.412500,1.474226,-0.072000,5.409573,1.470581,-0.072000,5.406336,1.467144,-0.072000,5.402792,1.463950,-0.072000,5.398977,1.461034,-0.072000,5.394932,1.458396,-0.072000,5.390656,1.456035,-0.072000,5.386149,1.453953,-0.072000,5.381412,1.452147,-0.072000,5.376442,1.450620,-0.072000,5.371243,1.449370,-0.072000,5.365812,1.448398,-0.072000,5.360151,1.447704,-0.072000,5.354258,1.447288,-0.072000,5.348135,1.447149,-0.072000,5.341781,1.447288,-0.072000,5.335450,1.447706,-0.072000,5.329348,1.448403,-0.072000,5.323475,1.449378,-0.072000,5.317831,1.450633,-0.072000,5.312415,1.452166,-0.072000,5.307229,1.453977,-0.072000,5.302271,1.456068,-0.072000,5.297543,1.458437,-0.072000,5.293043,1.461085,-0.072000,5.288772,1.464012,-0.072000,5.284729,1.467217,-0.072000,5.280916,1.470664,-0.072000,5.277371,1.474317,-0.072000,5.274135,1.478176,-0.072000,5.271207,1.482240,-0.072000,5.268587,1.486509,-0.072000,5.266275,1.490984,-0.072000,5.264272,1.495664,-0.072000,5.262577,1.500550,-0.072000,5.261189,1.505642,-0.072000,5.260111,1.510939,-0.072000,5.259340,1.516441,-0.072000,5.258878,1.522149,-0.072000,5.258724,1.527879,-0.072000,5.258878,1.533401,-0.072000,5.259340,1.538715,-0.072000,5.260111,1.543820,-0.072000,5.261189,1.548717,-0.072000,5.262577,1.553405,-0.072000,5.264272,1.557884,-0.072000,5.266275,1.562155,-0.072000,5.268587,1.566218,-0.072000,5.271207,1.570071,-0.072000,5.274135,1.573717,-0.072000,5.277371,1.577154,-0.072000,5.280916,1.580347,-0.072000,5.284729,1.583263,-0.072000,5.288772,1.585901,-0.072000,5.293043,1.588262,-0.072000,5.297543,1.590345,-0.072000,5.302271,1.592150,-0.072000,5.307229,1.593677,-0.072000,5.312415,1.594927,-0.072000,5.317831,1.595899,-0.072000,5.323475,1.596593,-0.072000,5.329348,1.597010,-0.072000,5.335450,1.597149,-0.072000,5.341781,1.597010,-0.072000,5.348135,1.596593,-0.072000,5.354258,1.595899,-0.072000,5.360151,1.594927,-0.072000,5.365812,1.593677,-0.072000,5.371243,1.592150,-0.072000,5.376442,1.590345,-0.072000,5.381412,1.588262,-0.072000,5.386149,1.585901,-0.072000,5.390656,1.583263,-0.072000,5.394932,1.580347,-0.072000,5.398977,1.489629,-0.072000,5.387044,1.491645,-0.072000,5.389642,1.493788,-0.072000,5.392013,1.496056,-0.072000,5.394158,1.498451,-0.072000,5.396078,1.500972,-0.072000,5.397771,1.503618,-0.072000,5.399239,1.506391,-0.072000,5.400481,1.509291,-0.072000,5.401498,1.512316,-0.072000,5.402288,1.515467,-0.072000,5.402853,1.518745,-0.072000,5.403192,1.522149,-0.072000,5.403304,1.525552,-0.072000,5.403192,1.528830,-0.072000,5.402853,1.531981,-0.072000,5.402288,1.535007,-0.072000,5.401498,1.537906,-0.072000,5.400481,1.540679,-0.072000,5.399239,1.543326,-0.072000,5.397771,1.545847,-0.072000,5.396078,1.548241,-0.072000,5.394158,1.550510,-0.072000,5.392013,1.552652,-0.072000,5.389642,1.554668,-0.072000,5.387044,1.556540,-0.072000,5.384246,1.558249,-0.072000,5.381270,1.559795,-0.072000,5.378118,1.561179,-0.072000,5.374788,1.562399,-0.072000,5.371282,1.563457,-0.072000,5.367599,1.564353,-0.072000,5.363738,1.565085,-0.072000,5.359700,1.565655,-0.072000,5.355486,1.566061,-0.072000,5.351094,1.566306,-0.072000,5.346526,1.566387,-0.072000,5.341781,1.566306,-0.072000,5.337059,1.566061,-0.072000,5.332511,1.565655,-0.072000,5.328139,1.565085,-0.072000,5.323942,1.564353,-0.072000,5.319920,1.563457,-0.072000,5.316072,1.562399,-0.072000,5.312400,1.561179,-0.072000,5.308903,1.559795,-0.072000,5.305581,1.558249,-0.072000,5.302433,1.556540,-0.072000,5.299461,1.554668,-0.072000,5.296663,1.552652,-0.072000,5.294066,1.550510,-0.072000,5.291695,1.548241,-0.072000,5.289550,1.545847,-0.072000,5.287630,1.543326,-0.072000,5.285936,1.540679,-0.072000,5.284469,1.537906,-0.072000,5.283226,1.535007,-0.072000,5.282210,1.531981,-0.072000,5.281420,1.528830,-0.072000,5.280855,1.525552,-0.072000,5.280517,1.522149,-0.072000,5.280404,1.518745,-0.072000,5.280517,1.515467,-0.072000,5.280855,1.512316,-0.072000,5.281420,1.509291,-0.072000,5.282210,1.506391,-0.072000,5.283226,1.503618,-0.072000,5.284469,1.500972,-0.072000,5.285936,1.498451,-0.072000,5.287630,1.496056,-0.072000,5.289550,1.493788,-0.072000,5.291695,1.491645,-0.072000,5.294066,1.489629,-0.072000,5.296663,1.487757,-0.072000,5.299461,1.486048,-0.072000,5.302433,1.484502,-0.072000,5.305581,1.483119,-0.072000,5.308903,1.481898,-0.072000,5.312400,1.480840,-0.072000,5.316072,1.479945,-0.072000,5.319920,1.479212,-0.072000,5.323942,1.478643,-0.072000,5.328139,1.478236,-0.072000,5.332511,1.477992,-0.072000,5.337059,1.477910,-0.072000,5.341781,1.477992,-0.072000,5.346526,1.478236,-0.072000,5.351094,1.478643,-0.072000,5.355486,1.479212,-0.072000,5.359700,1.479945,-0.072000,5.363738,1.480840,-0.072000,5.367599,1.481898,-0.072000,5.371282,1.483119,-0.072000,5.374788,1.484502,-0.072000,5.378118,1.486048,-0.072000,5.381270,1.487757,-0.072000,5.384246,-2.040644,-0.072000,2.850023,-2.040644,0.072000,2.850023,-2.016474,-0.072000,2.850023,-2.016474,0.072000,2.850023,-2.151240,-0.072000,3.124681,-2.151240,0.072000,3.124681,-2.175410,-0.072000,3.124681,-2.175410,0.072000,3.124681,-1.824726,-0.072000,3.103002,-1.824726,0.072000,3.103002,-2.005488,-0.072000,3.103002,-2.005488,0.072000,3.103002,-2.005488,-0.072000,3.081322,-2.005488,0.072000,3.081322,-1.824726,-0.072000,3.081322,-1.824726,0.072000,3.081322,-2.221553,-0.072000,3.240023,-2.221553,0.072000,3.240023,-2.197383,-0.072000,3.240023,-2.197383,0.072000,3.240023,-2.332148,-0.072000,3.514681,-2.332148,0.072000,3.514681,-2.356318,-0.072000,3.514681,-2.356318,0.072000,3.514681,-2.402461,-0.072000,3.630023,-2.402461,0.072000,3.630023,-2.378291,-0.072000,3.630023,-2.378291,0.072000,3.630023,-2.513057,-0.072000,3.904681,-2.513057,0.072000,3.904681,-2.537226,-0.072000,3.904681,-2.537226,0.072000,3.904681,-2.627900,-0.072000,4.294682,-2.627900,0.072000,4.294682,-2.649580,-0.072000,4.294682,-2.649580,0.072000,4.294682,-2.649580,-0.072000,4.020023,-2.649580,0.072000,4.020023,-2.627900,-0.072000,4.020023,-2.627900,0.072000,4.020023,1.532989,-0.072000,4.294682,1.532989,0.072000,4.294682,1.511309,-0.072000,4.294682,1.511309,0.072000,4.294682,1.511309,-0.072000,4.020023,1.511309,0.072000,4.020023,1.532989,-0.072000,4.020023,1.532989,0.072000,4.020023,-2.378438,-0.072000,4.684681,-2.378438,0.072000,4.684681,-2.402607,-0.072000,4.684681,-2.402607,0.072000,4.684681,-2.537373,-0.072000,4.410023,-2.537373,0.072000,4.410023,-2.513203,-0.072000,4.410023,-2.513203,0.072000,4.410023,-1.542451,-0.072000,4.684681,-1.542451,0.072000,4.684681,-1.564131,-0.072000,4.684681,-1.564131,0.072000,4.684681,-1.564131,-0.072000,4.410023,-1.564131,0.072000,4.410023,-1.542451,-0.072000,4.410023,-1.542451,0.072000,4.410023,0.877910,-0.072000,4.684681,0.877910,0.072000,4.684681,0.853740,-0.072000,4.684681,0.853740,0.072000,4.684681,0.718975,-0.072000,4.410023,0.718975,0.072000,4.410023,0.743145,-0.072000,4.410023,0.743145,0.072000,4.410023,1.069805,-0.072000,4.663002,1.069805,0.072000,4.663002,0.889043,-0.072000,4.663002,0.889043,0.072000,4.663002,0.889043,-0.072000,4.641322,0.889043,0.072000,4.641322,1.069805,-0.072000,4.641322,1.069805,0.072000,4.641322,1.250713,-0.072000,4.663002,1.250713,0.072000,4.663002,1.069951,-0.072000,4.663002,1.069951,0.072000,4.663002,1.069951,-0.072000,4.641322,1.069951,0.072000,4.641322,1.250713,-0.072000,4.641322,1.250713,0.072000,4.641322,1.396612,-0.072000,4.410023,1.396612,0.072000,4.410023,1.420781,-0.072000,4.410023,1.420781,0.072000,4.410023,1.286016,-0.072000,4.684681,1.286016,0.072000,4.684681,1.261846,-0.072000,4.684681,1.261846,0.072000,4.684681,-1.859736,-0.072000,4.800023,-1.859736,0.072000,4.800023,-1.835566,-0.072000,4.800023,-1.835566,0.072000,4.800023,-1.970332,-0.072000,5.074681,-1.970332,0.072000,5.074681,-1.994502,-0.072000,5.074681,-1.994502,0.072000,5.074681,-1.292988,-0.072000,5.074681,-1.292988,0.072000,5.074681,-1.317158,-0.072000,5.074681,-1.317158,0.072000,5.074681,-1.451924,-0.072000,4.800023,-1.451924,0.072000,4.800023,-1.427754,-0.072000,4.800023,-1.427754,0.072000,4.800023,-1.101094,-0.072000,5.053001,-1.101094,0.072000,5.053001,-1.281855,-0.072000,5.053001,-1.281855,0.072000,5.053001,-1.281855,-0.072000,5.031322,-1.281855,0.072000,5.031322,-1.101094,-0.072000,5.031322,-1.101094,0.072000,5.031322,-0.920185,-0.072000,5.053001,-0.920185,0.072000,5.053001,-1.100947,-0.072000,5.053001,-1.100947,0.072000,5.053001,-1.100947,-0.072000,5.031322,-1.100947,0.072000,5.031322,-0.920185,-0.072000,5.031322,-0.920185,0.072000,5.031322,-0.774287,-0.072000,4.800023,-0.774287,0.072000,4.800023,-0.750117,-0.072000,4.800023,-0.750117,0.072000,4.800023,-0.884883,-0.072000,5.074681,-0.884883,0.072000,5.074681,-0.909053,-0.072000,5.074681,-0.909053,0.072000,5.074681,0.739263,-0.072000,5.009130,0.739263,0.072000,5.009130,0.735742,-0.072000,5.004546,0.735742,0.072000,5.004546,0.732527,-0.072000,4.999708,0.732527,0.072000,4.999708,0.729618,-0.072000,4.994614,0.729618,0.072000,4.994614,0.727015,-0.072000,4.989265,0.727015,0.072000,4.989265,0.724719,-0.072000,4.983660,0.724719,0.072000,4.983660,0.722728,-0.072000,4.977800,0.722728,0.072000,4.977800,0.721044,-0.072000,4.971685,0.721044,0.072000,4.971685,0.719667,-0.072000,4.965315,0.719667,0.072000,4.965315,0.718595,-0.072000,4.958689,0.718595,0.072000,4.958689,0.717829,-0.072000,4.951807,0.717829,0.072000,4.951807,0.717370,-0.072000,4.944671,0.717370,0.072000,4.944671,0.717217,-0.072000,4.937279,0.717217,0.072000,4.937279,0.717370,-0.072000,4.929911,0.717370,0.072000,4.929911,0.717829,-0.072000,4.922795,0.717829,0.072000,4.922795,0.718595,-0.072000,4.915934,0.718595,0.072000,4.915934,0.719666,-0.072000,4.909325,0.719666,0.072000,4.909325,0.721044,-0.072000,4.902969,0.721044,0.072000,4.902969,0.722728,-0.072000,4.896868,0.722728,0.072000,4.896868,0.724719,-0.072000,4.891019,0.724719,0.072000,4.891019,0.727015,-0.072000,4.885424,0.727015,0.072000,4.885424,0.729618,-0.072000,4.880081,0.729618,0.072000,4.880081,0.732527,-0.072000,4.874993,0.732527,0.072000,4.874993,0.735742,-0.072000,4.870157,0.735742,0.072000,4.870157,0.739263,-0.072000,4.865575,0.739263,0.072000,4.865575,0.743043,-0.072000,4.861305,0.743043,0.072000,4.861305,0.747033,-0.072000,4.857407,0.747033,0.072000,4.857407,0.751234,-0.072000,4.853879,0.751234,0.072000,4.853879,0.755645,-0.072000,4.850723,0.755645,0.072000,4.850723,0.760267,-0.072000,4.847939,0.760267,0.072000,4.847939,0.765099,-0.072000,4.845525,0.765099,0.072000,4.845525,0.770142,-0.072000,4.843482,0.770142,0.072000,4.843482,0.775396,-0.072000,4.841812,0.775396,0.072000,4.841812,0.780860,-0.072000,4.840512,0.780860,0.072000,4.840512,0.786535,-0.072000,4.839584,0.786535,0.072000,4.839584,0.792420,-0.072000,4.839027,0.792420,0.072000,4.839027,0.798516,-0.072000,4.838841,0.798516,0.072000,4.838841,0.804612,-0.072000,4.839027,0.804612,0.072000,4.839027,0.810497,-0.072000,4.839583,0.810497,0.072000,4.839583,0.816172,-0.072000,4.840512,0.816172,0.072000,4.840512,0.821636,-0.072000,4.841811,0.821636,0.072000,4.841811,0.826890,-0.072000,4.843482,0.826890,0.072000,4.843482,0.831933,-0.072000,4.845524,0.831933,0.072000,4.845524,0.836765,-0.072000,4.847938,0.836765,0.072000,4.847938,0.841387,-0.072000,4.850723,0.841387,0.072000,4.850723,0.845798,-0.072000,4.853879,0.845798,0.072000,4.853879,0.849999,-0.072000,4.857406,0.849999,0.072000,4.857406,0.853989,-0.072000,4.861304,0.853989,0.072000,4.861304,0.857769,-0.072000,4.865575,0.857769,0.072000,4.865575,0.861290,-0.072000,4.870157,0.861290,0.072000,4.870157,0.864505,-0.072000,4.874993,0.864505,0.072000,4.874993,0.867414,-0.072000,4.880081,0.867414,0.072000,4.880081,0.870016,-0.072000,4.885424,0.870016,0.072000,4.885424,0.872313,-0.072000,4.891019,0.872313,0.072000,4.891019,0.874303,-0.072000,4.896868,0.874303,0.072000,4.896868,0.875987,-0.072000,4.902969,0.875987,0.072000,4.902969,0.877365,-0.072000,4.909325,0.877365,0.072000,4.909325,0.878437,-0.072000,4.915934,0.878437,0.072000,4.915934,0.879202,-0.072000,4.922795,0.879202,0.072000,4.922795,0.879662,-0.072000,4.929911,0.879662,0.072000,4.929911,0.879815,-0.072000,4.937279,0.879815,0.072000,4.937279,0.879662,-0.072000,4.944671,0.879662,0.072000,4.944671,0.879202,-0.072000,4.951807,0.879202,0.072000,4.951807,0.878437,-0.072000,4.958689,0.878437,0.072000,4.958689,0.877365,-0.072000,4.965315,0.877365,0.072000,4.965315,0.875987,-0.072000,4.971685,0.875987,0.072000,4.971685,0.874303,-0.072000,4.977800,0.874303,0.072000,4.977800,0.872313,-0.072000,4.983660,0.872313,0.072000,4.983660,0.870017,-0.072000,4.989265,0.870017,0.072000,4.989265,0.867414,-0.072000,4.994614,0.867414,0.072000,4.994614,0.864505,-0.072000,4.999708,0.864505,0.072000,4.999708,0.861290,-0.072000,5.004546,0.861290,0.072000,5.004546,0.857769,-0.072000,5.009130,0.857769,0.072000,5.009130,0.853989,-0.072000,5.013399,0.853989,0.072000,5.013399,0.849999,-0.072000,5.017298,0.849999,0.072000,5.017298,0.845798,-0.072000,5.020825,0.845798,0.072000,5.020825,0.841387,-0.072000,5.023981,0.841387,0.072000,5.023981,0.836765,-0.072000,5.026766,0.836765,0.072000,5.026766,0.831932,-0.072000,5.029180,0.831932,0.072000,5.029180,0.826889,-0.072000,5.031222,0.826889,0.072000,5.031222,0.821636,-0.072000,5.032893,0.821636,0.072000,5.032893,0.816172,-0.072000,5.034192,0.816172,0.072000,5.034192,0.810497,-0.072000,5.035120,0.810497,0.072000,5.035120,0.804611,-0.072000,5.035677,0.804611,0.072000,5.035677,0.798516,-0.072000,5.035863,0.798516,0.072000,5.035863,0.792420,-0.072000,5.035677,0.792420,0.072000,5.035677,0.786535,-0.072000,5.035121,0.786535,0.072000,5.035121,0.780860,-0.072000,5.034193,0.780860,0.072000,5.034193,0.775396,-0.072000,5.032893,0.775396,0.072000,5.032893,0.770142,-0.072000,5.031222,0.770142,0.072000,5.031222,0.765099,-0.072000,5.029180,0.765099,0.072000,5.029180,0.760266,-0.072000,5.026767,0.760266,0.072000,5.026767,0.755645,-0.072000,5.023982,0.755645,0.072000,5.023982,0.751233,-0.072000,5.020825,0.751233,0.072000,5.020825,0.747032,-0.072000,5.017298,0.747032,0.072000,5.017298,0.743042,-0.072000,5.013400,0.743042,0.072000,5.013400,0.761089,-0.072000,4.880516,0.761089,0.072000,4.880516,0.758995,-0.072000,4.883965,0.758995,0.072000,4.883965,0.757083,-0.072000,4.887648,0.757083,0.072000,4.887648,0.755353,-0.072000,4.891562,0.755353,0.072000,4.891562,0.753806,-0.072000,4.895710,0.753806,0.072000,4.895710,0.752440,-0.072000,4.900091,0.752440,0.072000,4.900091,0.751256,-0.072000,4.904705,0.751256,0.072000,4.904705,0.750255,-0.072000,4.909552,0.750255,0.072000,4.909552,0.749435,-0.072000,4.914631,0.749435,0.072000,4.914631,0.748798,-0.072000,4.919943,0.748798,0.072000,4.919943,0.748343,-0.072000,4.925489,0.748343,0.072000,4.925489,0.748070,-0.072000,4.931268,0.748070,0.072000,4.931268,0.747979,-0.072000,4.937279,0.747979,0.072000,4.937279,0.748070,-0.072000,4.943314,0.748070,0.072000,4.943314,0.748343,-0.072000,4.949114,0.748343,0.072000,4.949114,0.748798,-0.072000,4.954679,0.748798,0.072000,4.954679,0.749435,-0.072000,4.960009,0.749435,0.072000,4.960009,0.750255,-0.072000,4.965104,0.750255,0.072000,4.965104,0.751256,-0.072000,4.969963,0.751256,0.072000,4.969963,0.752440,-0.072000,4.974588,0.752440,0.072000,4.974588,0.753806,-0.072000,4.978978,0.753806,0.072000,4.978978,0.755353,-0.072000,4.983133,0.755353,0.072000,4.983133,0.757083,-0.072000,4.987053,0.757083,0.072000,4.987053,0.758995,-0.072000,4.990738,0.758995,0.072000,4.990738,0.761089,-0.072000,4.994188,0.761089,0.072000,4.994188,0.763352,-0.072000,4.997382,0.763352,0.072000,4.997382,0.765770,-0.072000,5.000298,0.765770,0.072000,5.000298,0.768345,-0.072000,5.002936,0.768345,0.072000,5.002936,0.771074,-0.072000,5.005296,0.771074,0.072000,5.005296,0.773960,-0.072000,5.007379,0.773960,0.072000,5.007379,0.777001,-0.072000,5.009184,0.777001,0.072000,5.009184,0.780198,-0.072000,5.010712,0.780198,0.072000,5.010712,0.783550,-0.072000,5.011961,0.783550,0.072000,5.011961,0.787058,-0.072000,5.012934,0.787058,0.072000,5.012934,0.790721,-0.072000,5.013628,0.790721,0.072000,5.013628,0.794541,-0.072000,5.014044,0.794541,0.072000,5.014044,0.798516,-0.072000,5.014183,0.798516,0.072000,5.014183,0.802491,-0.072000,5.014044,0.802491,0.072000,5.014044,0.806312,-0.072000,5.013628,0.806312,0.072000,5.013628,0.809978,-0.072000,5.012934,0.809978,0.072000,5.012934,0.813490,-0.072000,5.011961,0.813490,0.072000,5.011961,0.816847,-0.072000,5.010712,0.816847,0.072000,5.010712,0.820049,-0.072000,5.009184,0.820049,0.072000,5.009184,0.823097,-0.072000,5.007379,0.823097,0.072000,5.007379,0.825990,-0.072000,5.005296,0.825990,0.072000,5.005296,0.828728,-0.072000,5.002936,0.828728,0.072000,5.002936,0.831312,-0.072000,5.000298,0.831312,0.072000,5.000298,0.833741,-0.072000,4.997382,0.833741,0.072000,4.997382,0.836016,-0.072000,4.994188,0.836016,0.072000,4.994188,0.838122,-0.072000,4.990738,0.838122,0.072000,4.990738,0.840044,-0.072000,4.987053,0.840044,0.072000,4.987053,0.841784,-0.072000,4.983133,0.841784,0.072000,4.983133,0.843340,-0.072000,4.978978,0.843340,0.072000,4.978978,0.844713,-0.072000,4.974588,0.844713,0.072000,4.974588,0.845904,-0.072000,4.969963,0.845904,0.072000,4.969963,0.846911,-0.072000,4.965104,0.846911,0.072000,4.965104,0.847735,-0.072000,4.960009,0.847735,0.072000,4.960009,0.848375,-0.072000,4.954679,0.848375,0.072000,4.954679,0.848833,-0.072000,4.949114,0.848833,0.072000,4.949114,0.849108,-0.072000,4.943314,0.849108,0.072000,4.943314,0.849199,-0.072000,4.937279,0.849199,0.072000,4.937279,0.849108,-0.072000,4.931267,0.849108,0.072000,4.931267,0.848833,-0.072000,4.925488,0.848833,0.072000,4.925488,0.848375,-0.072000,4.919943,0.848375,0.072000,4.919943,0.847735,-0.072000,4.914630,0.847735,0.072000,4.914630,0.846911,-0.072000,4.909551,0.846911,0.072000,4.909551,0.845904,-0.072000,4.904705,0.845904,0.072000,4.904705,0.844713,-0.072000,4.900091,0.844713,0.072000,4.900091,0.843340,-0.072000,4.895710,0.843340,0.072000,4.895710,0.841784,-0.072000,4.891562,0.841784,0.072000,4.891562,0.840044,-0.072000,4.887647,0.840044,0.072000,4.887647,0.838122,-0.072000,4.883965,0.838122,0.072000,4.883965,0.836016,-0.072000,4.880516,0.836016,0.072000,4.880516,0.833741,-0.072000,4.877323,0.833741,0.072000,4.877323,0.831312,-0.072000,4.874407,0.831312,0.072000,4.874407,0.828728,-0.072000,4.871768,0.828728,0.072000,4.871768,0.825990,-0.072000,4.869408,0.825990,0.072000,4.869408,0.823097,-0.072000,4.867325,0.823097,0.072000,4.867325,0.820049,-0.072000,4.865520,0.820049,0.072000,4.865520,0.816847,-0.072000,4.863993,0.816847,0.072000,4.863993,0.813490,-0.072000,4.862743,0.813490,0.072000,4.862743,0.809978,-0.072000,4.861771,0.809978,0.072000,4.861771,0.806312,-0.072000,4.861077,0.806312,0.072000,4.861077,0.802491,-0.072000,4.860660,0.802491,0.072000,4.860660,0.798516,-0.072000,4.860521,0.798516,0.072000,4.860521,0.794541,-0.072000,4.860660,0.794541,0.072000,4.860660,0.790722,-0.072000,4.861077,0.790722,0.072000,4.861077,0.787058,-0.072000,4.861771,0.787058,0.072000,4.861771,0.783550,-0.072000,4.862743,0.783550,0.072000,4.862743,0.780198,-0.072000,4.863993,0.780198,0.072000,4.863993,0.777001,-0.072000,4.865520,0.777001,0.072000,4.865520,0.773960,-0.072000,4.867325,0.773960,0.072000,4.867325,0.771075,-0.072000,4.869408,0.771075,0.072000,4.869408,0.768345,-0.072000,4.871768,0.768345,0.072000,4.871768,0.765771,-0.072000,4.874407,0.765771,0.072000,4.874407,0.763352,-0.072000,4.877323,0.763352,0.072000,4.877323,-1.835713,-0.072000,5.464681,-1.835713,0.072000,5.464681,-1.859883,-0.072000,5.464681,-1.859883,0.072000,5.464681,-1.994648,-0.072000,5.190023,-1.994648,0.072000,5.190023,-1.970478,-0.072000,5.190023,-1.970478,0.072000,5.190023,-1.643818,-0.072000,5.443001,-1.643818,0.072000,5.443001,-1.824580,-0.072000,5.443001,-1.824580,0.072000,5.443001,-1.824580,-0.072000,5.421322,-1.824580,0.072000,5.421322,-1.643818,-0.072000,5.421322,-1.643818,0.072000,5.421322,-1.462910,-0.072000,5.443001,-1.462910,0.072000,5.443001,-1.643672,-0.072000,5.443001,-1.643672,0.072000,5.443001,-1.643672,-0.072000,5.421322,-1.643672,0.072000,5.421322,-1.462910,-0.072000,5.421322,-1.462910,0.072000,5.421322,-0.558369,-0.072000,5.443001,-0.558369,0.072000,5.443001,-0.739131,-0.072000,5.443001,-0.739131,0.072000,5.443001,-0.739131,-0.072000,5.421322,-0.739131,0.072000,5.421322,-0.558369,-0.072000,5.421322,-0.558369,0.072000,5.421322,-0.377461,-0.072000,5.443001,-0.377461,0.072000,5.443001,-0.558223,-0.072000,5.443001,-0.558223,0.072000,5.443001,-0.558223,-0.072000,5.421322,-0.558223,0.072000,5.421322,-0.377461,-0.072000,5.421322,-0.377461,0.072000,5.421322,-0.231562,-0.072000,5.190023,-0.231562,0.072000,5.190023,-0.207392,-0.072000,5.190023,-0.207392,0.072000,5.190023,-0.342158,-0.072000,5.464681,-0.342158,0.072000,5.464681,-0.366328,-0.072000,5.464681,-0.366328,0.072000,5.464681,1.577154,-0.072000,5.402792,1.577154,0.072000,5.402792,1.573717,-0.072000,5.406336,1.573717,0.072000,5.406336,1.570071,-0.072000,5.409573,1.570071,0.072000,5.409573,1.566218,-0.072000,5.412500,1.566218,0.072000,5.412500,1.562155,-0.072000,5.415121,1.562155,0.072000,5.415121,1.557884,-0.072000,5.417432,1.557884,0.072000,5.417432,1.553405,-0.072000,5.419436,1.553405,0.072000,5.419436,1.548717,-0.072000,5.421131,1.548717,0.072000,5.421131,1.543820,-0.072000,5.422518,1.543820,0.072000,5.422518,1.538715,-0.072000,5.423597,1.538715,0.072000,5.423597,1.533401,-0.072000,5.424367,1.533401,0.072000,5.424367,1.527879,-0.072000,5.424830,1.527879,0.072000,5.424830,1.522149,-0.072000,5.424984,1.522149,0.072000,5.424984,1.516418,-0.072000,5.424830,1.516418,0.072000,5.424830,1.510896,-0.072000,5.424367,1.510896,0.072000,5.424367,1.505582,-0.072000,5.423597,1.505582,0.072000,5.423597,1.500477,-0.072000,5.422518,1.500477,0.072000,5.422518,1.495581,-0.072000,5.421131,1.495581,0.072000,5.421131,1.490893,-0.072000,5.419436,1.490893,0.072000,5.419436,1.486413,-0.072000,5.417432,1.486413,0.072000,5.417432,1.482142,-0.072000,5.415121,1.482142,0.072000,5.415121,1.478080,-0.072000,5.412500,1.478080,0.072000,5.412500,1.474226,-0.072000,5.409573,1.474226,0.072000,5.409573,1.470581,-0.072000,5.406336,1.470581,0.072000,5.406336,1.467144,-0.072000,5.402792,1.467144,0.072000,5.402792,1.463950,-0.072000,5.398977,1.463950,0.072000,5.398977,1.461034,-0.072000,5.394932,1.461034,0.072000,5.394932,1.458396,-0.072000,5.390656,1.458396,0.072000,5.390656,1.456035,-0.072000,5.386149,1.456035,0.072000,5.386149,1.453953,-0.072000,5.381412,1.453953,0.072000,5.381412,1.452147,-0.072000,5.376442,1.452147,0.072000,5.376442,1.450620,-0.072000,5.371243,1.450620,0.072000,5.371243,1.449370,-0.072000,5.365812,1.449370,0.072000,5.365812,1.448398,-0.072000,5.360151,1.448398,0.072000,5.360151,1.447704,-0.072000,5.354258,1.447704,0.072000,5.354258,1.447288,-0.072000,5.348135,1.447288,0.072000,5.348135,1.447149,-0.072000,5.341781,1.447149,0.072000,5.341781,1.447288,-0.072000,5.335450,1.447288,0.072000,5.335450,1.447706,-0.072000,5.329348,1.447706,0.072000,5.329348,1.448403,-0.072000,5.323475,1.448403,0.072000,5.323475,1.449378,-0.072000,5.317831,1.449378,0.072000,5.317831,1.450633,-0.072000,5.312415,1.450633,0.072000,5.312415,1.452166,-0.072000,5.307229,1.452166,0.072000,5.307229,1.453977,-0.072000,5.302271,1.453977,0.072000,5.302271,1.456068,-0.072000,5.297543,1.456068,0.072000,5.297543,1.458437,-0.072000,5.293043,1.458437,0.072000,5.293043,1.461085,-0.072000,5.288772,1.461085,0.072000,5.288772,1.464012,-0.072000,5.284729,1.464012,0.072000,5.284729,1.467217,-0.072000,5.280916,1.467217,0.072000,5.280916,1.470664,-0.072000,5.277371,1.470664,0.072000,5.277371,1.474317,-0.072000,5.274135,1.474317,0.072000,5.274135,1.478176,-0.072000,5.271207,1.478176,0.072000,5.271207,1.482240,-0.072000,5.268587,1.482240,0.072000,5.268587,1.486509,-0.072000,5.266275,1.486509,0.072000,5.266275,1.490984,-0.072000,5.264272,1.490984,0.072000,5.264272,1.495664,-0.072000,5.262577,1.495664,0.072000,5.262577,1.500550,-0.072000,5.261189,1.500550,0.072000,5.261189,1.505642,-0.072000,5.260111,1.505642,0.072000,5.260111,1.510939,-0.072000,5.259340,1.510939,0.072000,5.259340,1.516441,-0.072000,5.258878,1.516441,0.072000,5.258878,1.522149,-0.072000,5.258724,1.522149,0.072000,5.258724,1.527879,-0.072000,5.258878,1.527879,0.072000,5.258878,1.533401,-0.072000,5.259340,1.533401,0.072000,5.259340,1.538715,-0.072000,5.260111,1.538715,0.072000,5.260111,1.543820,-0.072000,5.261189,1.543820,0.072000,5.261189,1.548717,-0.072000,5.262577,1.548717,0.072000,5.262577,1.553405,-0.072000,5.264272,1.553405,0.072000,5.264272,1.557884,-0.072000,5.266275,1.557884,0.072000,5.266275,1.562155,-0.072000,5.268587,1.562155,0.072000,5.268587,1.566218,-0.072000,5.271207,1.566218,0.072000,5.271207,1.570071,-0.072000,5.274135,1.570071,0.072000,5.274135,1.573717,-0.072000,5.277371,1.573717,0.072000,5.277371,1.577154,-0.072000,5.280916,1.577154,0.072000,5.280916,1.580347,-0.072000,5.284729,1.580347,0.072000,5.284729,1.583263,-0.072000,5.288772,1.583263,0.072000,5.288772,1.585901,-0.072000,5.293043,1.585901,0.072000,5.293043,1.588262,-0.072000,5.297543,1.588262,0.072000,5.297543,1.590345,-0.072000,5.302271,1.590345,0.072000,5.302271,1.592150,-0.072000,5.307229,1.592150,0.072000,5.307229,1.593677,-0.072000,5.312415,1.593677,0.072000,5.312415,1.594927,-0.072000,5.317831,1.594927,0.072000,5.317831,1.595899,-0.072000,5.323475,1.595899,0.072000,5.323475,1.596593,-0.072000,5.329348,1.596593,0.072000,5.329348,1.597010,-0.072000,5.335450,1.597010,0.072000,5.335450,1.597149,-0.072000,5.341781,1.597149,0.072000,5.341781,1.597010,-0.072000,5.348135,1.597010,0.072000,5.348135,1.596593,-0.072000,5.354258,1.596593,0.072000,5.354258,1.595899,-0.072000,5.360151,1.595899,0.072000,5.360151,1.594927,-0.072000,5.365812,1.594927,0.072000,5.365812,1.593677,-0.072000,5.371243,1.593677,0.072000,5.371243,1.592150,-0.072000,5.376442,1.592150,0.072000,5.376442,1.590345,-0.072000,5.381412,1.590345,0.072000,5.381412,1.588262,-0.072000,5.386149,1.588262,0.072000,5.386149,1.585901,-0.072000,5.390656,1.585901,0.072000,5.390656,1.583263,-0.072000,5.394932,1.583263,0.072000,5.394932,1.580347,-0.072000,5.398977,1.580347,0.072000,5.398977,1.489629,-0.072000,5.387044,1.489629,0.072000,5.387044,1.491645,-0.072000,5.389642,1.491645,0.072000,5.389642,1.493788,-0.072000,5.392013,1.493788,0.072000,5.392013,1.496056,-0.072000,5.394158,1.496056,0.072000,5.394158,1.498451,-0.072000,5.396078,1.498451,0.072000,5.396078,1.500972,-0.072000,5.397771,1.500972,0.072000,5.397771,1.503618,-0.072000,5.399239,1.503618,0.072000,5.399239,1.506391,-0.072000,5.400481,1.506391,0.072000,5.400481,1.509291,-0.072000,5.401498,1.509291,0.072000,5.401498,1.512316,-0.072000,5.402288,1.512316,0.072000,5.402288,1.515467,-0.072000,5.402853,1.515467,0.072000,5.402853,1.518745,-0.072000,5.403192,1.518745,0.072000,5.403192,1.522149,-0.072000,5.403304,1.522149,0.072000,5.403304,1.525552,-0.072000,5.403192,1.525552,0.072000,5.403192,1.528830,-0.072000,5.402853,1.528830,0.072000,5.402853,1.531981,-0.072000,5.402288,1.531981,0.072000,5.402288,1.535007,-0.072000,5.401498,1.535007,0.072000,5.401498,1.537906,-0.072000,5.400481,1.537906,0.072000,5.400481,1.540679,-0.072000,5.399239,1.540679,0.072000,5.399239,1.543326,-0.072000,5.397771,1.543326,0.072000,5.397771,1.545847,-0.072000,5.396078,1.545847,0.072000,5.396078,1.548241,-0.072000,5.394158,1.548241,0.072000,5.394158,1.550510,-0.072000,5.392013,1.550510,0.072000,5.392013,1.552652,-0.072000,5.389642,1.552652,0.072000,5.389642,1.554668,-0.072000,5.387044,1.554668,0.072000,5.387044,1.556540,-0.072000,5.384246,1.556540,0.072000,5.384246,1.558249,-0.072000,5.381270,1.558249,0.072000,5.381270,1.559795,-0.072000,5.378118,1.559795,0.072000,5.378118,1.561179,-0.072000,5.374788,1.561179,0.072000,5.374788,1.562399,-0.072000,5.371282,1.562399,0.072000,5.371282,1.563457,-0.072000,5.367599,1.563457,0.072000,5.367599,1.564353,-0.072000,5.363738,1.564353,0.072000,5.363738,1.565085,-0.072000,5.359700,1.565085,0.072000,5.359700,1.565655,-0.072000,5.355486,1.565655,0.072000,5.355486,1.566061,-0.072000,5.351094,1.566061,0.072000,5.351094,1.566306,-0.072000,5.346526,1.566306,0.072000,5.346526,1.566387,-0.072000,5.341781,1.566387,0.072000,5.341781,1.566306,-0.072000,5.337059,1.566306,0.072000,5.337059,1.566061,-0.072000,5.332511,1.566061,0.072000,5.332511,1.565655,-0.072000,5.328139,1.565655,0.072000,5.328139,1.565085,-0.072000,5.323942,1.565085,0.072000,5.323942,1.564353,-0.072000,5.319920,1.564353,0.072000,5.319920,1.563457,-0.072000,5.316072,1.563457,0.072000,5.316072,1.562399,-0.072000,5.312400,1.562399,0.072000,5.312400,1.561179,-0.072000,5.308903,1.561179,0.072000,5.308903,1.559795,-0.072000,5.305581,1.559795,0.072000,5.305581,1.558249,-0.072000,5.302433,1.558249,0.072000,5.302433,1.556540,-0.072000,5.299461,1.556540,0.072000,5.299461,1.554668,-0.072000,5.296663,1.554668,0.072000,5.296663,1.552652,-0.072000,5.294066,1.552652,0.072000,5.294066,1.550510,-0.072000,5.291695,1.550510,0.072000,5.291695,1.548241,-0.072000,5.289550,1.548241,0.072000,5.289550,1.545847,-0.072000,5.287630,1.545847,0.072000,5.287630,1.543326,-0.072000,5.285936,1.543326,0.072000,5.285936,1.540679,-0.072000,5.284469,1.540679,0.072000,5.284469,1.537906,-0.072000,5.283226,1.537906,0.072000,5.283226,1.535007,-0.072000,5.282210,1.535007,0.072000,5.282210,1.531981,-0.072000,5.281420,1.531981,0.072000,5.281420,1.528830,-0.072000,5.280855,1.528830,0.072000,5.280855,1.525552,-0.072000,5.280517,1.525552,0.072000,5.280517,1.522149,-0.072000,5.280404,1.522149,0.072000,5.280404,1.518745,-0.072000,5.280517,1.518745,0.072000,5.280517,1.515467,-0.072000,5.280855,1.515467,0.072000,5.280855,1.512316,-0.072000,5.281420,1.512316,0.072000,5.281420,1.509291,-0.072000,5.282210,1.509291,0.072000,5.282210,1.506391,-0.072000,5.283226,1.506391,0.072000,5.283226,1.503618,-0.072000,5.284469,1.503618,0.072000,5.284469,1.500972,-0.072000,5.285936,1.500972,0.072000,5.285936,1.498451,-0.072000,5.287630,1.498451,0.072000,5.287630,1.496056,-0.072000,5.289550,1.496056,0.072000,5.289550,1.493788,-0.072000,5.291695,1.493788,0.072000,5.291695,1.491645,-0.072000,5.294066,1.491645,0.072000,5.294066,1.489629,-0.072000,5.296663,1.489629,0.072000,5.296663,1.487757,-0.072000,5.299461,1.487757,0.072000,5.299461,1.486048,-0.072000,5.302433,1.486048,0.072000,5.302433,1.484502,-0.072000,5.305581,1.484502,0.072000,5.305581,1.483119,-0.072000,5.308903,1.483119,0.072000,5.308903,1.481898,-0.072000,5.312400,1.481898,0.072000,5.312400,1.480840,-0.072000,5.316072,1.480840,0.072000,5.316072,1.479945,-0.072000,5.319920,1.479945,0.072000,5.319920,1.479212,-0.072000,5.323942,1.479212,0.072000,5.323942,1.478643,-0.072000,5.328139,1.478643,0.072000,5.328139,1.478236,-0.072000,5.332511,1.478236,0.072000,5.332511,1.477992,-0.072000,5.337059,1.477992,0.072000,5.337059,1.477910,-0.072000,5.341781,1.477910,0.072000,5.341781,1.477992,-0.072000,5.346526,1.477992,0.072000,5.346526,1.478236,-0.072000,5.351094,1.478236,0.072000,5.351094,1.478643,-0.072000,5.355486,1.478643,0.072000,5.355486,1.479212,-0.072000,5.359700,1.479212,0.072000,5.359700,1.479945,-0.072000,5.363738,1.479945,0.072000,5.363738,1.480840,-0.072000,5.367599,1.480840,0.072000,5.367599,1.481898,-0.072000,5.371282,1.481898,0.072000,5.371282,1.483119,-0.072000,5.374788,1.483119,0.072000,5.374788,1.484502,-0.072000,5.378118,1.484502,0.072000,5.378118,1.486048,-0.072000,5.381270,1.486048,0.072000,5.381270,1.487757,-0.072000,5.384246,1.487757,0.072000,5.384246,-1.292988,-0.072000,5.854681,-1.292988,0.072000,5.854681,-1.317158,-0.072000,5.854681,-1.317158,0.072000,5.854681,-1.451924,-0.072000,5.580023,-1.451924,0.072000,5.580023,-1.427754,-0.072000,5.580023,-1.427754,0.072000,5.580023,-1.101094,-0.072000,5.833001,-1.101094,0.072000,5.833001,-1.281855,-0.072000,5.833001,-1.281855,0.072000,5.833001,-1.281855,-0.072000,5.811321,-1.281855,0.072000,5.811321,-1.101094,-0.072000,5.811321,-1.101094,0.072000,5.811321,-0.920185,-0.072000,5.833001,-0.920185,0.072000,5.833001,-1.100947,-0.072000,5.833001,-1.100947,0.072000,5.833001,-1.100947,-0.072000,5.811321,-1.100947,0.072000,5.811321,-0.920185,-0.072000,5.811321,-0.920185,0.072000,5.811321,-0.774287,-0.072000,5.580023,-0.774287,0.072000,5.580023,-0.750117,-0.072000,5.580023,-0.750117,0.072000,5.580023,-0.884883,-0.072000,5.854681,-0.884883,0.072000,5.854681,-0.909053,-0.072000,5.854681,-0.909053,0.072000,5.854681],
rocket-3d/web/obj/rocket_flames_only.js:    "morphTargets": [],
rocket-3d/web/obj/rocket_flames_only.js:    "normals": [0.000000,1.000000,0.000000,0.000000,0.999969,0.000000,0.000000,-1.000000,0.000000,0.000000,-0.999969,0.000000,-0.528886,0.000000,-0.848659,0.848659,0.000000,-0.528886,0.528886,0.000000,0.848659,-0.848659,0.000000,0.528886,0.707083,0.000000,0.707083,-0.707083,0.000000,0.707083,-0.707083,0.000000,-0.707083,0.707083,0.000000,-0.707083,0.848659,0.000000,0.528886,-0.528886,0.000000,0.848659,-0.848659,0.000000,-0.528886,0.528886,0.000000,-0.848659,-0.771386,0.000000,0.636341,-0.813410,0.000000,0.581652,-0.851131,0.000000,0.524949,-0.884274,0.000000,0.466933,-0.912717,0.000000,0.408551,-0.936521,0.000000,0.350536,-0.955901,0.000000,0.293649,-0.971129,0.000000,0.238533,-0.982604,0.000000,0.185583,-0.990814,0.000000,0.135136,-0.996155,0.000000,0.087405,-0.999084,0.000000,0.042451,-1.000000,0.000000,0.000000,-0.999084,0.000000,-0.042604,-0.996124,0.000000,-0.087649,-0.990753,0.000000,-0.135502,-0.982513,0.000000,-0.186010,-0.970977,0.000000,-0.239051,-0.955718,0.000000,-0.294229,-0.936338,0.000000,-0.351085,-0.912503,0.000000,-0.409009,-0.884030,0.000000,-0.467360,-0.850917,0.000000,-0.525254,-0.813288,0.000000,-0.581805,-0.771294,0.000000,-0.636433,-0.724265,0.000000,-0.689474,-0.671407,0.000000,-0.741050,-0.612903,0.000000,-0.790124,-0.549394,0.000000,-0.835536,-0.481826,0.000000,-0.876247,-0.411389,0.000000,-0.911435,-0.339457,0.000000,-0.940611,-0.267373,0.000000,-0.963561,-0.196478,0.000000,-0.980499,-0.127842,0.000000,-0.991791,-0.062380,0.000000,-0.998047,-0.000031,0.000000,-1.000000,0.062288,0.000000,-0.998047,0.127842,0.000000,-0.991791,0.196509,0.000000,-0.980468,0.267373,0.000000,-0.963561,0.339457,0.000000,-0.940611,0.411359,0.000000,-0.911435,0.481826,0.000000,-0.876247,0.549425,0.000000,-0.835536,0.612903,0.000000,-0.790124,0.671377,0.000000,-0.741081,0.724296,0.000000,-0.689444,0.771355,0.000000,-0.636372,0.813288,0.000000,-0.581805,0.850917,0.000000,-0.525254,0.884030,0.000000,-0.467360,0.912503,0.000000,-0.409009,0.936338,0.000000,-0.351054,0.955718,0.000000,-0.294198,0.970977,0.000000,-0.239051,0.982513,0.000000,-0.186010,0.990753,0.000000,-0.135502,0.996124,0.000000,-0.087649,0.999084,0.000000,-0.042604,1.000000,0.000000,-0.000031,0.999084,0.000000,0.042451,0.996155,0.000000,0.087405,0.990814,0.000000,0.135136,0.982604,0.000000,0.185583,0.971129,0.000000,0.238533,0.955901,0.000000,0.293649,0.936521,0.000000,0.350536,0.912717,0.000000,0.408551,0.884274,0.000000,0.466933,0.851131,0.000000,0.524949,0.813410,0.000000,0.581652,0.771325,0.000000,0.636402,0.724265,0.000000,0.689474,0.671407,0.000000,0.741050,0.612903,0.000000,0.790124,0.549394,0.000000,0.835536,0.481826,0.000000,0.876247,0.411389,0.000000,0.911435,0.339457,0.000000,0.940611,0.267373,0.000000,0.963561,0.196478,0.000000,0.980499,0.127842,0.000000,0.991791,0.062380,0.000000,0.998047,0.000031,0.000000,1.000000,-0.062288,0.000000,0.998047,-0.127842,0.000000,0.991791,-0.196509,0.000000,0.980468,-0.267373,0.000000,0.963561,-0.339457,0.000000,0.940611,-0.411359,0.000000,0.911435,-0.481826,0.000000,0.876247,-0.549425,0.000000,0.835536,-0.612903,0.000000,0.790124,-0.671377,0.000000,0.741081,-0.724296,0.000000,0.689444,0.835871,0.000000,0.548906,0.871609,0.000000,0.490127,0.901517,0.000000,0.432691,0.926176,0.000000,0.377026,0.946135,0.000000,0.323710,0.961943,0.000000,0.273141,0.974242,0.000000,0.225471,0.983490,0.000000,0.180853,0.990234,0.000000,0.139195,0.994934,0.000000,0.100467,0.997894,0.000000,0.064516,0.999512,0.000000,0.031159,1.000000,0.000000,0.000000,0.999512,0.000000,-0.031068,0.997925,0.000000,-0.064272,0.994964,0.000000,-0.100131,0.990295,0.000000,-0.138768,0.983581,0.000000,-0.180334,0.974364,0.000000,-0.224921,0.962127,0.000000,-0.272561,0.946318,0.000000,-0.323160,0.926389,0.000000,-0.376537,0.901700,0.000000,-0.432325,0.871731,0.000000,-0.489975,0.835902,0.000000,-0.548845,0.793359,0.000000,-0.608722,0.743309,0.000000,-0.668905,0.685507,0.000000,-0.728019,0.620258,0.000000,-0.784356,0.548418,0.000000,-0.836177,0.471236,0.000000,-0.881985,0.390576,0.000000,-0.920560,0.308481,0.000000,-0.951201,0.226753,0.000000,-0.973937,0.147374,0.000000,-0.989074,0.071718,0.000000,-0.997406,0.000000,0.000000,-1.000000,-0.071688,0.000000,-0.997406,-0.147282,0.000000,-0.989074,-0.226569,0.000000,-0.973968,-0.308145,0.000000,-0.951323,-0.390057,0.000000,-0.920774,-0.470534,0.000000,-0.882351,-0.547502,0.000000,-0.836787,-0.619160,0.000000,-0.785241,-0.684255,0.000000,-0.729209,-0.741966,0.000000,-0.670400,-0.791955,0.000000,-0.610553,-0.834559,0.000000,-0.550890,-0.870540,0.000000,-0.492050,-0.900754,0.000000,-0.434278,-0.925657,0.000000,-0.378338,-0.945769,0.000000,-0.324778,-0.961730,0.000000,-0.273965,-0.974090,0.000000,-0.226112,-0.983398,0.000000,-0.181310,-0.990204,0.000000,-0.139531,-0.994903,0.000000,-0.100681,-0.997894,0.000000,-0.064638,-0.999512,0.000000,-0.031220,-0.999481,0.000000,0.031343,-0.997864,0.000000,0.064852,-0.994873,0.000000,0.101016,-0.990143,0.000000,0.139958,-0.983306,0.000000,0.181829,-0.973968,0.000000,0.226661,-0.961547,0.000000,0.274545,-0.945585,0.000000,0.325327,-0.925443,0.000000,0.378826,-0.900571,0.000000,0.434645,-0.870449,0.000000,0.492233,-0.834498,0.000000,0.550951,-0.791955,0.000000,0.610553,-0.741966,0.000000,0.670400,-0.684255,0.000000,0.729209,-0.619160,0.000000,0.785241,-0.547502,0.000000,0.836787,-0.470534,0.000000,0.882351,-0.390057,0.000000,0.920774,-0.308145,0.000000,0.951323,-0.226569,0.000000,0.973968,-0.147282,0.000000,0.989074,-0.071688,0.000000,0.997406,0.000000,0.000000,1.000000,0.071718,0.000000,0.997406,0.147374,0.000000,0.989074,0.226753,0.000000,0.973937,0.308481,0.000000,0.951201,0.390576,0.000000,0.920560,0.471236,0.000000,0.881985,0.548418,0.000000,0.836177,0.620258,0.000000,0.784387,0.685507,0.000000,0.728019,0.743309,0.000000,0.668905,0.793359,0.000000,0.608722,0.742821,0.000000,0.669454,0.691397,0.000000,0.722434,0.634877,0.000000,0.772607,0.573901,0.000000,0.818903,0.509384,0.000000,0.860500,0.442427,0.000000,0.896786,0.374401,0.000000,0.927244,0.306528,0.000000,0.951842,0.239753,0.000000,0.970824,0.175176,0.000000,0.984527,0.113529,0.000000,0.993530,0.055177,0.000000,0.998474,-0.055177,0.000000,0.998474,-0.113529,0.000000,0.993530,-0.175207,0.000000,0.984527,-0.239753,0.000000,0.970824,-0.306528,0.000000,0.951842,-0.374401,0.000000,0.927244,-0.442427,0.000000,0.896786,-0.509384,0.000000,0.860500,-0.573901,0.000000,0.818903,-0.634877,0.000000,0.772607,-0.691397,0.000000,0.722434,-0.742821,0.000000,0.669454,-0.789453,0.000000,0.613758,-0.831660,0.000000,0.555254,-0.868984,0.000000,0.494827,-0.901151,0.000000,0.433454,-0.928159,0.000000,0.372112,-0.950133,0.000000,0.311777,-0.967406,0.000000,0.253151,-0.980438,0.000000,0.196783,-0.989685,0.000000,0.143162,-0.995697,0.000000,0.092441,-0.998962,0.000000,0.044862,-0.999969,0.000000,-0.000061,-0.998962,0.000000,-0.045167,-0.995636,0.000000,-0.093112,-0.989532,0.000000,-0.144108,-0.980163,0.000000,-0.198035,-0.967009,0.000000,-0.254646,-0.949583,0.000000,-0.313486,-0.927427,0.000000,-0.373974,-0.900235,0.000000,-0.435347,-0.867916,0.000000,-0.496689,-0.830470,0.000000,-0.557024,-0.788232,0.000000,-0.615345,-0.741661,0.000000,-0.670736,-0.690481,0.000000,-0.723319,-0.634236,0.000000,-0.773095,-0.573595,0.000000,-0.819117,-0.509354,0.000000,-0.860530,-0.442671,0.000000,-0.896664,-0.374828,0.000000,-0.927061,-0.307047,0.000000,-0.951689,-0.240303,0.000000,-0.970672,-0.175695,0.000000,-0.984436,-0.113895,0.000000,-0.993469,-0.055330,0.000000,-0.998444,-0.000031,0.000000,-0.999969,0.055147,0.000000,-0.998474,0.113529,0.000000,-0.993530,0.175176,0.000000,-0.984527,0.239753,0.000000,-0.970824,0.306528,0.000000,-0.951842,0.374401,0.000000,-0.927244,0.442427,0.000000,-0.896786,0.509384,0.000000,-0.860500,0.573901,0.000000,-0.818903,0.634877,0.000000,-0.772607,0.691397,0.000000,-0.722434,0.742790,0.000000,-0.669515,0.789331,0.000000,-0.613941,0.831416,0.000000,-0.555620,0.868679,0.000000,-0.495315,0.900845,0.000000,-0.434065,0.927885,0.000000,-0.372814,0.949919,0.000000,-0.312449,0.967254,0.000000,-0.253761,0.980316,0.000000,-0.197333,0.989624,0.000000,-0.143590,0.995666,0.000000,-0.092776,0.998962,0.000000,-0.045015,0.998962,0.000000,0.044862,0.995697,0.000000,0.092441,0.989685,0.000000,0.143162,0.980438,0.000000,0.196783,0.967406,0.000000,0.253151,0.950133,0.000000,0.311777,0.928159,0.000000,0.372112,0.901151,0.000000,0.433454,0.868984,0.000000,0.494827,0.831660,0.000000,0.555254,0.789453,0.000000,0.613758,0.811060,0.000000,-0.584918,0.766472,0.000000,-0.642262,0.715079,0.000000,-0.699026,0.656819,0.000000,-0.754021,0.592120,0.000000,-0.805841,0.521775,0.000000,-0.853053,0.447279,0.000000,-0.894375,0.370159,0.000000,-0.928953,0.292032,0.000000,-0.956389,0.214667,0.000000,-0.976653,0.139683,0.000000,-0.990173,0.067995,0.000000,-0.997681,-0.067995,0.000000,-0.997681,-0.139683,0.000000,-0.990173,-0.214667,0.000000,-0.976653,-0.292032,0.000000,-0.956389,-0.370159,0.000000,-0.928953,-0.447279,0.000000,-0.894375,-0.521775,0.000000,-0.853053,-0.592120,0.000000,-0.805841,-0.656819,0.000000,-0.754021,-0.715079,0.000000,-0.699026,-0.766472,0.000000,-0.642262,-0.811060,0.000000,-0.584918,-0.849666,0.000000,-0.527299,-0.882931,0.000000,-0.469466,-0.911069,0.000000,-0.412214,-0.934324,0.000000,-0.356365,-0.953124,0.000000,-0.302530,-0.967956,0.000000,-0.251076,-0.979308,0.000000,-0.202246,-0.987701,0.000000,-0.156224,-0.993561,0.000000,-0.113102,-0.997345,0.000000,-0.072817,-0.999359,0.000000,-0.035249,-1.000000,0.000000,0.000031,-0.999359,0.000000,0.035401,-0.997314,0.000000,0.073122,-0.993500,0.000000,0.113590,-0.987610,0.000000,0.156835,-0.979186,0.000000,0.202948,-0.967772,0.000000,0.251808,-0.952879,0.000000,0.303293,-0.934049,0.000000,0.357097,-0.910764,0.000000,0.412885,-0.882687,0.000000,0.469924,-0.849513,0.000000,0.527512,-0.810999,0.000000,0.585009,-0.766472,0.000000,0.642232,-0.715110,0.000000,0.698996,-0.656819,0.000000,0.754021,-0.592120,0.000000,0.805841,-0.521775,0.000000,0.853053,-0.447279,0.000000,0.894375,-0.370098,0.000000,0.928983,-0.292032,0.000000,0.956389,-0.214759,0.000000,0.976653,-0.139622,0.000000,0.990173,-0.067995,0.000000,0.997681,0.067995,0.000000,0.997681,0.139622,0.000000,0.990173,0.214759,0.000000,0.976653,0.292032,0.000000,0.956389,0.370098,0.000000,0.928983,0.447279,0.000000,0.894375,0.521775,0.000000,0.853053,0.592120,0.000000,0.805841,0.656819,0.000000,0.754021,0.715110,0.000000,0.698996,0.766472,0.000000,0.642232,0.810999,0.000000,0.585009,0.849513,0.000000,0.527512,0.882687,0.000000,0.469924,0.910764,0.000000,0.412885,0.934049,0.000000,0.357097,0.952879,0.000000,0.303293,0.967772,0.000000,0.251808,0.979186,0.000000,0.202948,0.987610,0.000000,0.156835,0.993500,0.000000,0.113590,0.997314,0.000000,0.073122,0.999359,0.000000,0.035401,1.000000,0.000000,0.000031,0.999359,0.000000,-0.035249,0.997345,0.000000,-0.072817,0.993561,0.000000,-0.113102,0.987701,0.000000,-0.156224,0.979308,0.000000,-0.202246,0.967956,0.000000,-0.251076,0.953124,0.000000,-0.302530,0.934324,0.000000,-0.356365,0.911069,0.000000,-0.412214,0.882931,0.000000,-0.469466,0.849666,0.000000,-0.527299],
rocket-3d/web/obj/rocket_flames_only.js:    "colors": [],
rocket-3d/web/obj/rocket_flames_only.js:    "uvs": [[]],
rocket-3d/web/obj/rocket_flames_only.js:    "faces": [34,5,7,6,0,0,0,0,34,5,4,7,0,0,0,0,34,9,11,10,0,0,0,0,34,9,8,11,0,0,0,0,34,15,13,12,0,0,0,0,34,15,14,13,0,0,0,0,34,19,17,16,0,0,0,0,34,19,18,17,0,0,0,0,34,23,21,20,0,0,0,0,34,23,22,21,0,0,0,0,34,25,27,26,0,0,0,0,34,25,24,27,0,0,0,0,34,29,31,30,0,0,0,0,34,29,28,31,0,0,0,0,34,35,33,32,0,0,0,0,34,35,34,33,0,0,0,0,34,37,39,38,0,0,0,0,34,37,36,39,0,0,0,0,34,41,43,42,0,0,0,0,34,41,40,43,0,0,0,0,34,45,47,46,0,0,0,0,34,45,44,47,0,0,0,0,34,49,51,50,0,0,0,0,34,49,48,51,0,0,0,0,34,53,55,54,0,0,0,0,34,53,52,55,0,0,0,0,34,57,59,58,0,0,0,0,34,57,56,59,0,0,0,0,34,61,63,62,0,0,0,0,34,61,60,63,0,0,0,0,34,65,67,66,0,0,0,0,34,65,64,67,0,0,0,0,34,69,71,70,0,1,1,0,34,69,68,71,0,1,0,1,34,75,73,72,0,0,0,0,34,75,74,73,0,0,0,0,34,79,77,76,0,0,0,0,34,79,78,77,0,0,0,0,34,81,83,82,0,1,1,0,34,81,80,83,0,1,0,1,34,85,87,86,0,1,1,0,34,85,84,87,0,1,0,1,34,91,89,88,0,0,0,0,34,91,90,89,0,0,0,0,34,127,129,128,0,0,0,0,34,127,130,129,0,0,1,0,34,126,130,127,0,1,1,0,34,126,131,130,0,1,0,1,34,125,131,126,0,0,0,1,34,125,132,131,0,0,0,0,34,124,132,125,0,1,0,0,34,124,133,132,0,1,0,0,34,123,133,124,0,0,0,1,34,123,134,133,0,0,0,0,34,122,134,123,0,0,0,0,34,122,135,134,0,0,1,0,34,121,135,122,0,0,1,0,34,121,136,135,0,0,0,1,34,120,136,121,0,0,0,0,34,120,137,136,0,0,0,0,34,119,137,120,0,1,0,0,34,119,138,137,0,1,0,0,34,118,138,119,0,0,0,1,34,118,139,138,0,0,0,0,34,117,272,118,0,0,0,0,34,272,139,118,0,0,0,0,34,117,273,272,0,0,0,0,34,271,139,272,0,0,0,0,34,117,274,273,0,0,1,0,34,270,139,271,0,0,0,0,34,117,275,274,0,0,1,1,34,269,139,270,0,0,0,0,34,269,140,139,0,0,0,0,34,116,275,117,0,0,1,0,34,116,276,275,0,0,1,1,34,268,140,269,0,0,0,0,34,116,277,276,0,0,0,1,34,267,140,268,0,0,0,0,34,116,278,277,0,0,0,0,34,266,140,267,0,0,0,0,34,116,279,278,0,0,0,0,34,265,140,266,0,0,0,0,34,115,279,116,0,0,0,0,34,265,141,140,0,0,0,0,34,115,280,279,0,0,0,0,34,264,141,265,0,0,0,0,34,115,281,280,0,0,0,0,34,263,141,264,0,0,0,0,34,114,281,115,0,0,0,0,34,263,142,141,0,0,0,0,34,114,282,281,0,0,0,0,34,262,142,263,0,0,0,0,34,114,283,282,0,0,0,0,34,261,142,262,0,1,0,0,34,113,283,114,0,1,0,0,34,261,143,142,0,1,0,0,34,113,188,283,0,1,0,0,34,260,143,261,0,0,0,1,34,112,188,113,0,0,0,1,34,260,144,143,0,0,0,0,34,112,189,188,0,0,0,0,34,259,144,260,0,0,0,0,34,258,144,259,0,0,0,0,34,112,190,189,0,0,1,0,34,111,190,112,0,0,1,0,34,258,145,144,0,0,0,0,34,257,145,258,0,0,0,0,34,111,191,190,0,0,1,1,34,110,191,111,0,0,1,0,34,257,146,145,0,0,0,0,34,256,146,257,0,0,0,0,34,110,192,191,0,0,0,1,34,255,146,256,0,0,0,0,34,110,193,192,0,0,0,0,34,109,193,110,0,0,0,0,34,255,147,146,0,0,0,0,34,254,147,255,0,0,0,0,34,109,194,193,0,0,0,0,34,108,194,109,0,0,0,0,34,254,148,147,0,0,0,0,34,253,148,254,0,1,0,0,34,108,195,194,0,0,0,0,34,107,195,108,0,0,0,0,34,253,149,148,0,1,0,0,34,252,149,253,0,0,0,1,34,107,196,195,0,0,0,0,34,251,149,252,0,0,0,0,34,107,197,196,0,0,0,0,34,106,197,107,0,0,0,0,34,251,150,149,0,0,0,0,34,250,150,251,0,0,0,0,34,106,198,197,0,0,0,0,34,105,198,106,0,0,0,0,34,250,151,150,0,0,0,0,34,249,151,250,0,0,0,0,34,105,199,198,0,0,0,0,34,104,199,105,0,0,0,0,34,249,152,151,0,0,0,0,34,248,152,249,0,0,0,0,34,104,200,199,0,0,0,0,34,103,200,104,0,0,0,0,34,103,201,200,0,0,0,0,34,247,152,248,0,0,0,0,34,247,153,152,0,0,0,0,34,103,202,201,0,0,0,0,34,246,153,247,0,0,0,0,34,102,202,103,0,0,0,0,34,246,154,153,0,0,0,0,34,102,203,202,0,0,1,0,34,245,154,246,0,1,0,0,34,101,203,102,0,0,1,0,34,245,155,154,0,1,0,0,34,101,204,203,0,0,0,1,34,244,155,245,0,0,0,1,34,100,204,101,0,0,0,0,34,244,156,155,0,0,0,0,34,100,205,204,0,0,0,0,34,243,156,244,0,0,0,0,34,100,206,205,0,0,0,0,34,242,156,243,0,0,0,0,34,99,206,100,0,0,0,0,34,242,157,156,0,0,0,0,34,99,207,206,0,0,0,0,34,241,157,242,0,1,0,0,34,98,207,99,0,0,0,0,34,241,158,157,0,1,1,0,34,98,208,207,0,0,0,0,34,240,158,241,0,0,1,1,34,97,208,98,0,0,0,0,34,240,159,158,0,0,0,1,34,97,209,208,0,0,0,0,34,239,159,240,0,0,0,0,34,97,210,209,0,0,0,0,34,238,159,239,0,1,0,0,34,96,210,97,0,0,0,0,34,238,160,159,0,1,0,0,34,96,211,210,0,0,0,0,34,237,160,238,0,0,0,1,34,95,211,96,0,0,0,0,34,237,161,160,0,0,1,0,34,95,212,211,0,0,0,0,34,236,161,237,0,0,1,0,34,95,213,212,0,0,0,0,34,235,161,236,0,0,1,0,34,94,213,95,0,0,0,0,34,235,162,161,0,0,1,1,34,94,214,213,0,0,0,0,34,234,162,235,0,1,1,0,34,93,214,94,0,0,0,0,34,234,163,162,0,1,0,1,34,93,215,214,0,0,0,0,34,233,163,234,0,0,0,1,34,93,216,215,0,0,0,0,34,232,163,233,0,0,0,0,34,92,216,93,0,1,0,0,34,232,164,163,0,0,0,0,34,92,217,216,0,1,1,0,34,231,164,232,0,0,0,0,34,92,218,217,0,1,1,1,34,230,164,231,0,1,0,0,34,187,218,92,0,0,1,1,34,230,165,164,0,1,0,0,34,187,219,218,0,0,1,1,34,229,165,230,0,0,0,1,34,187,220,219,0,0,0,1,34,228,165,229,0,0,0,0,34,187,221,220,0,0,1,0,34,227,165,228,0,0,0,0,34,187,222,221,0,0,0,1,34,226,165,227,0,0,0,0,34,226,166,165,0,0,0,0,34,186,222,187,0,0,0,0,34,186,223,222,0,0,1,0,34,225,166,226,0,0,0,0,34,186,224,223,0,0,0,1,34,224,166,225,0,0,0,0,34,186,166,224,0,0,0,0,34,186,167,166,0,0,0,0,34,185,167,186,0,0,0,0,34,185,168,167,0,0,1,0,34,184,168,185,0,1,1,0,34,184,169,168,0,1,0,1,34,183,169,184,0,0,0,1,34,183,170,169,0,0,0,0,34,182,170,183,0,1,0,0,34,182,171,170,0,1,0,0,34,181,171,182,0,0,0,1,34,181,172,171,0,0,1,0,34,180,172,181,0,0,1,0,34,180,173,172,0,0,0,1,34,179,173,180,0,1,0,0,34,179,174,173,0,1,0,0,34,178,174,179,0,0,0,1,34,178,175,174,0,0,0,0,34,177,175,178,0,0,0,0,34,177,176,175,0,0,0,0,34,285,287,286,0,0,0,0,34,285,284,287,0,0,0,0,34,289,291,290,0,0,0,0,34,289,288,291,0,0,0,0,34,293,295,294,0,0,0,0,34,293,292,295,0,0,0,0,34,299,297,296,0,0,0,0,34,299,298,297,0,0,0,0,34,359,361,360,0,0,0,1,34,358,361,359,0,0,0,0,34,358,362,361,0,0,1,0,34,357,362,358,0,0,1,0,34,357,363,362,0,0,0,1,34,356,363,357,0,0,0,0,34,356,364,363,0,0,0,0,34,355,364,356,0,1,0,0,34,355,365,364,0,1,0,0,34,354,365,355,0,0,0,1,34,354,366,365,0,0,0,0,34,353,366,354,0,0,0,0,34,353,367,366,0,0,0,0,34,352,367,353,0,0,0,0,34,352,368,367,0,0,0,0,34,351,368,352,0,0,0,0,34,351,369,368,0,0,1,0,34,350,369,351,0,1,1,0,34,350,370,369,0,1,0,1,34,349,370,350,0,0,0,1,34,349,371,370,0,0,0,0,34,348,371,349,0,1,0,0,34,348,456,371,0,1,0,0,34,456,372,371,0,0,0,0,34,348,457,456,0,1,0,0,34,455,372,456,0,1,0,0,34,348,458,457,0,1,1,0,34,454,372,455,0,0,0,1,34,348,459,458,0,1,0,1,34,453,372,454,0,0,0,0,34,347,459,348,0,0,0,1,34,453,373,372,0,0,0,0,34,347,460,459,0,0,0,0,34,452,373,453,0,1,0,0,34,347,461,460,0,0,0,0,34,451,373,452,0,0,0,1,34,347,462,461,0,0,0,0,34,450,373,451,0,1,0,0,34,347,463,462,0,0,0,0,34,449,373,450,0,0,0,1,34,346,463,347,0,0,0,0,34,449,374,373,0,0,1,0,34,346,464,463,0,0,0,0,34,448,374,449,0,0,1,0,34,346,465,464,0,0,1,0,34,447,374,448,0,0,1,0,34,345,465,346,0,0,1,0,34,447,375,374,0,0,0,1,34,345,466,465,0,0,0,1,34,446,375,447,0,0,0,0,34,345,467,466,0,0,0,0,34,445,375,446,0,0,0,0,34,344,467,345,0,0,0,0,34,445,376,375,0,0,0,0,34,344,468,467,0,0,0,0,34,444,376,445,0,0,0,0,34,344,469,468,0,0,0,0,34,443,376,444,0,1,0,0,34,343,469,344,0,0,0,0,34,443,377,376,0,1,0,0,34,343,470,469,0,0,0,0,34,442,377,443,0,0,0,1,34,342,470,343,0,1,0,0,34,442,378,377,0,0,0,0,34,342,471,470,0,1,0,0,34,441,378,442,0,0,0,0,34,342,472,471,0,1,0,0,34,440,378,441,0,0,0,0,34,341,472,342,0,0,0,1,34,440,379,378,0,0,0,0,34,341,473,472,0,0,0,0,34,439,379,440,0,1,0,0,34,341,474,473,0,0,1,0,34,438,379,439,0,0,0,1,34,340,474,341,0,1,1,0,34,438,380,379,0,0,1,0,34,340,475,474,0,1,0,1,34,437,380,438,0,0,1,0,34,339,475,340,0,0,0,1,34,437,381,380,0,0,1,1,34,339,476,475,0,0,1,0,34,436,381,437,0,0,1,0,34,338,476,339,0,0,1,0,34,436,382,381,0,0,0,1,34,338,477,476,0,0,0,1,34,435,382,436,0,0,0,0,34,338,478,477,0,0,0,0,34,434,382,435,0,0,0,0,34,337,478,338,0,0,0,0,34,434,383,382,0,0,0,0,34,337,479,478,0,0,0,0,34,433,383,434,0,0,0,0,34,336,479,337,0,0,0,0,34,433,384,383,0,0,0,0,34,336,480,479,0,0,0,0,34,432,384,433,0,0,0,0,34,335,480,336,0,0,0,0,34,335,481,480,0,0,0,0,34,431,384,432,0,0,0,0,34,431,385,384,0,0,0,0,34,335,482,481,0,0,0,0,34,430,385,431,0,0,0,0,34,334,482,335,0,0,0,0,34,430,386,385,0,0,0,0,34,334,483,482,0,0,0,0,34,429,386,430,0,0,0,0,34,333,483,334,0,0,0,0,34,429,387,386,0,0,0,0,34,333,484,483,0,0,1,0,34,428,387,429,0,1,0,0,34,333,485,484,0,0,1,1,34,427,387,428,0,1,0,1,34,332,485,333,0,0,1,0,34,427,388,387,0,1,0,0,34,332,486,485,0,0,0,1,34,426,388,427,0,0,0,1,34,331,486,332,0,0,0,0,34,426,389,388,0,0,0,0,34,331,487,486,0,0,1,0,34,425,389,426,0,0,0,0,34,330,487,331,0,0,1,0,34,425,390,389,0,0,1,0,34,330,488,487,0,0,1,1,34,424,390,425,0,1,1,0,34,330,489,488,0,0,1,1,34,423,390,424,0,1,1,1,34,329,489,330,0,1,1,0,34,423,391,390,0,1,1,1,34,329,490,489,0,1,0,1,34,422,391,423,0,0,1,1,34,329,491,490,0,1,0,0,34,421,391,422,0,0,1,0,34,328,491,329,0,0,0,1,34,421,392,391,0,0,0,1,34,328,396,491,0,0,1,0,34,420,392,421,0,1,0,0,34,327,396,328,0,1,1,0,34,420,393,392,0,1,1,0,34,327,397,396,0,1,0,1,34,419,393,420,0,0,1,1,34,327,398,397,0,1,0,0,34,418,393,419,0,0,1,0,34,326,398,327,0,0,0,1,34,418,394,393,0,0,0,1,34,326,399,398,0,0,0,0,34,417,394,418,0,0,0,0,34,326,400,399,0,0,0,0,34,416,394,417,0,0,0,0,34,325,400,326,0,0,0,0,34,416,395,394,0,0,0,0,34,325,401,400,0,0,0,0,34,415,395,416,0,0,0,0,34,325,402,401,0,0,0,0,34,414,395,415,0,0,0,0,34,324,402,325,0,0,0,0,34,414,300,395,0,0,0,0,34,324,403,402,0,0,0,0,34,413,300,414,0,0,0,0,34,324,404,403,0,0,0,0,34,412,300,413,0,0,0,0,34,324,405,404,0,0,0,0,34,411,300,412,0,0,0,0,34,324,406,405,0,0,0,0,34,410,300,411,0,0,0,0,34,323,406,324,0,0,0,0,34,410,301,300,0,0,0,0,34,323,407,406,0,0,1,0,34,409,301,410,0,0,0,0,34,323,408,407,0,0,0,1,34,408,301,409,0,0,0,0,34,323,301,408,0,0,0,0,34,322,301,323,0,0,0,0,34,322,302,301,0,0,0,0,34,321,302,322,0,1,0,0,34,321,303,302,0,1,0,0,34,320,303,321,0,0,0,1,34,320,304,303,0,0,0,0,34,319,304,320,0,0,0,0,34,319,305,304,0,0,1,0,34,318,305,319,0,0,1,0,34,318,306,305,0,0,0,1,34,317,306,318,0,0,0,0,34,317,307,306,0,0,0,0,34,316,307,317,0,0,0,0,34,316,308,307,0,0,0,0,34,315,308,316,0,0,0,0,34,315,309,308,0,0,1,0,34,314,309,315,0,0,1,0,34,314,310,309,0,0,1,1,34,313,310,314,0,0,1,0,34,313,311,310,0,0,1,1,34,312,311,313,0,0,1,0,34,1,3,2,0,0,0,0,34,1,0,3,0,0,0,0,34,499,497,498,0,2,2,2,34,496,497,499,0,2,2,2,34,503,501,502,0,2,2,2,34,500,501,503,0,2,2,2,34,505,507,504,0,2,2,2,34,506,507,505,0,2,2,2,34,509,511,508,0,2,2,2,34,510,511,509,0,2,2,2,34,513,515,512,0,2,2,2,34,514,515,513,0,2,2,2,34,519,517,518,0,2,2,2,34,516,517,519,0,2,2,2,34,523,521,522,0,2,2,2,34,520,521,523,0,2,2,2,34,525,527,524,0,2,2,2,34,526,527,525,0,2,2,2,34,531,529,530,0,2,2,2,34,528,529,531,0,2,2,2,34,535,533,534,0,2,2,2,34,532,533,535,0,2,2,2,34,539,537,538,0,2,2,2,34,536,537,539,0,2,2,2,34,543,541,542,0,2,2,2,34,540,541,543,0,2,2,2,34,547,545,546,0,2,2,2,34,544,545,547,0,2,2,2,34,551,549,550,0,2,2,2,34,548,549,551,0,2,2,2,34,555,553,554,0,2,2,2,34,552,553,555,0,2,2,2,34,559,557,558,0,2,2,2,34,556,557,559,0,2,2,2,34,563,561,562,0,3,3,2,34,560,561,563,0,2,3,3,34,565,567,564,0,2,2,2,34,566,567,565,0,2,2,2,34,569,571,568,0,2,2,2,34,570,571,569,0,2,2,2,34,575,573,574,0,3,3,2,34,572,573,575,0,2,3,3,34,579,577,578,0,3,3,2,34,576,577,579,0,2,3,3,34,581,583,580,0,2,2,2,34,582,583,581,0,2,2,2,34,621,619,620,0,2,2,2,34,622,619,621,0,3,2,2,34,622,618,619,0,3,3,2,34,623,618,622,0,2,3,3,34,623,617,618,0,2,2,3,34,624,617,623,0,2,2,2,34,624,616,617,0,2,3,2,34,625,616,624,0,2,3,2,34,625,615,616,0,2,2,3,34,626,615,625,0,2,2,2,34,626,614,615,0,2,2,2,34,627,614,626,0,3,2,2,34,627,613,614,0,3,2,2,34,628,613,627,0,2,2,3,34,628,612,613,0,2,2,2,34,629,612,628,0,2,2,2,34,629,611,612,0,2,3,2,34,630,611,629,0,2,3,2,34,630,610,611,0,2,2,3,34,631,610,630,0,2,2,2,34,764,609,610,0,2,2,2,34,631,764,610,0,2,2,2,34,765,609,764,0,2,2,2,34,631,763,764,0,2,2,2,34,766,609,765,0,3,2,2,34,631,762,763,0,2,2,2,34,767,609,766,0,3,2,3,34,631,761,762,0,2,2,2,34,632,761,631,0,2,2,2,34,767,608,609,0,3,2,2,34,768,608,767,0,2,2,3,34,632,760,761,0,2,2,2,34,769,608,768,0,2,2,2,34,632,759,760,0,2,2,2,34,770,608,769,0,2,2,2,34,632,758,759,0,2,2,2,34,771,608,770,0,2,2,2,34,632,757,758,0,2,2,2,34,771,607,608,0,2,2,2,34,633,757,632,0,2,2,2,34,772,607,771,0,2,2,2,34,633,756,757,0,2,2,2,34,773,607,772,0,2,2,2,34,633,755,756,0,2,2,2,34,773,606,607,0,2,2,2,34,634,755,633,0,2,2,2,34,774,606,773,0,2,2,2,34,634,754,755,0,2,2,2,34,775,606,774,0,2,2,2,34,634,753,754,0,2,3,2,34,775,605,606,0,2,3,2,34,635,753,634,0,2,3,2,34,680,605,775,0,3,3,2,34,635,752,753,0,2,2,3,34,680,604,605,0,3,2,3,34,636,752,635,0,2,2,2,34,681,604,680,0,2,2,3,34,636,751,752,0,2,2,2,34,636,750,751,0,2,2,2,34,682,604,681,0,3,2,2,34,682,603,604,0,3,2,2,34,637,750,636,0,2,2,2,34,637,749,750,0,2,2,2,34,683,603,682,0,3,2,3,34,683,602,603,0,3,2,2,34,638,749,637,0,2,2,2,34,638,748,749,0,2,2,2,34,684,602,683,0,2,2,3,34,638,747,748,0,2,2,2,34,685,602,684,0,2,2,2,34,685,601,602,0,2,2,2,34,639,747,638,0,2,2,2,34,639,746,747,0,2,3,2,34,686,601,685,0,2,2,2,34,686,600,601,0,2,2,2,34,640,746,639,0,2,3,2,34,640,745,746,0,2,3,3,34,687,600,686,0,2,2,2,34,687,599,600,0,2,2,2,34,641,745,640,0,2,3,2,34,641,744,745,0,2,2,3,34,688,599,687,0,2,2,2,34,641,743,744,0,2,2,2,34,689,599,688,0,2,2,2,34,689,598,599,0,2,2,2,34,642,743,641,0,2,2,2,34,642,742,743,0,2,2,2,34,690,598,689,0,2,2,2,34,690,597,598,0,2,2,2,34,643,742,642,0,2,2,2,34,643,741,742,0,2,2,2,34,691,597,690,0,2,2,2,34,691,596,597,0,2,2,2,34,644,741,643,0,2,2,2,34,644,740,741,0,2,2,2,34,692,596,691,0,2,2,2,34,692,595,596,0,2,2,2,34,693,595,692,0,2,2,2,34,644,739,740,0,2,2,2,34,645,739,644,0,2,2,2,34,694,595,693,0,2,2,2,34,645,738,739,0,2,2,2,34,694,594,595,0,2,3,2,34,646,738,645,0,2,2,2,34,695,594,694,0,3,3,2,34,646,737,738,0,2,3,2,34,695,593,594,0,3,2,3,34,647,737,646,0,2,3,2,34,696,593,695,0,2,2,3,34,647,736,737,0,2,2,3,34,696,592,593,0,2,2,2,34,648,736,647,0,2,2,2,34,697,592,696,0,2,2,2,34,648,735,736,0,2,2,2,34,698,592,697,0,2,2,2,34,648,734,735,0,2,2,2,34,698,591,592,0,2,2,2,34,649,734,648,0,2,2,2,34,699,591,698,0,2,2,2,34,649,733,734,0,2,3,2,34,699,590,591,0,2,2,2,34,650,733,649,0,3,3,2,34,700,590,699,0,2,2,2,34,650,732,733,0,3,2,3,34,700,589,590,0,2,2,2,34,651,732,650,0,2,2,3,34,701,589,700,0,2,2,2,34,651,731,732,0,2,2,2,34,702,589,701,0,2,2,2,34,651,730,731,0,2,3,2,34,702,588,589,0,2,2,2,34,652,730,651,0,2,3,2,34,703,588,702,0,2,2,2,34,652,729,730,0,2,2,3,34,703,587,588,0,2,2,2,34,653,729,652,0,3,2,2,34,704,587,703,0,2,2,2,34,653,728,729,0,3,2,2,34,705,587,704,0,2,2,2,34,653,727,728,0,3,2,2,34,705,586,587,0,2,2,2,34,654,727,653,0,3,2,3,34,706,586,705,0,2,2,2,34,654,726,727,0,3,3,2,34,706,585,586,0,2,2,2,34,655,726,654,0,2,3,3,34,707,585,706,0,2,2,2,34,655,725,726,0,2,2,3,34,708,585,707,0,2,2,2,34,655,724,725,0,2,2,2,34,708,584,585,0,2,3,2,34,656,724,655,0,2,2,2,34,709,584,708,0,3,3,2,34,656,723,724,0,2,2,2,34,710,584,709,0,3,3,3,34,656,722,723,0,2,3,2,34,710,679,584,0,3,2,3,34,657,722,656,0,2,3,2,34,711,679,710,0,3,2,3,34,657,721,722,0,2,2,3,34,712,679,711,0,2,2,3,34,657,720,721,0,2,2,2,34,713,679,712,0,3,2,2,34,657,719,720,0,2,2,2,34,714,679,713,0,2,2,3,34,657,718,719,0,2,2,2,34,658,718,657,0,2,2,2,34,714,678,679,0,2,2,2,34,715,678,714,0,3,2,2,34,658,717,718,0,2,2,2,34,716,678,715,0,2,2,3,34,658,716,717,0,2,2,2,34,658,678,716,0,2,2,2,34,659,678,658,0,2,2,2,34,659,677,678,0,2,2,2,34,660,677,659,0,3,2,2,34,660,676,677,0,3,3,2,34,661,676,660,0,2,3,3,34,661,675,676,0,2,2,3,34,662,675,661,0,2,2,2,34,662,674,675,0,2,3,2,34,663,674,662,0,2,3,2,34,663,673,674,0,2,2,3,34,664,673,663,0,3,2,2,34,664,672,673,0,3,2,2,34,665,672,664,0,2,2,3,34,665,671,672,0,2,3,2,34,666,671,665,0,2,3,2,34,666,670,671,0,2,2,3,34,667,670,666,0,2,2,2,34,667,669,670,0,2,2,2,34,668,669,667,0,2,2,2,34,779,777,778,0,2,2,2,34,776,777,779,0,2,2,2,34,783,781,782,0,2,2,2,34,780,781,783,0,2,2,2,34,787,785,786,0,2,2,2,34,784,785,787,0,2,2,2,34,789,791,788,0,2,2,2,34,790,791,789,0,2,2,2,34,853,851,852,0,2,2,3,34,853,850,851,0,2,2,2,34,854,850,853,0,3,2,2,34,854,849,850,0,3,2,2,34,855,849,854,0,2,2,3,34,855,848,849,0,2,2,2,34,856,848,855,0,2,2,2,34,856,847,848,0,2,3,2,34,857,847,856,0,2,3,2,34,857,846,847,0,2,2,3,34,858,846,857,0,2,2,2,34,858,845,846,0,2,2,2,34,859,845,858,0,2,2,2,34,859,844,845,0,2,2,2,34,860,844,859,0,2,2,2,34,860,843,844,0,2,2,2,34,861,843,860,0,3,2,2,34,861,842,843,0,3,3,2,34,862,842,861,0,2,3,3,34,862,841,842,0,2,2,3,34,863,841,862,0,2,2,2,34,863,840,841,0,2,3,2,34,948,840,863,0,2,3,2,34,864,948,863,0,2,2,2,34,949,840,948,0,2,3,2,34,864,947,948,0,2,3,2,34,950,840,949,0,3,3,2,34,864,946,947,0,2,2,3,34,951,840,950,0,2,3,3,34,864,945,946,0,2,2,2,34,951,839,840,0,2,2,3,34,865,945,864,0,2,2,2,34,952,839,951,0,2,2,2,34,865,944,945,0,2,3,2,34,953,839,952,0,2,2,2,34,865,943,944,0,2,2,3,34,954,839,953,0,3,2,2,34,865,942,943,0,2,3,2,34,955,839,954,0,2,2,3,34,865,941,942,0,2,2,3,34,955,838,839,0,2,2,2,34,866,941,865,0,3,2,2,34,956,838,955,0,2,2,2,34,866,940,941,0,3,2,2,34,957,838,956,0,3,2,2,34,866,939,940,0,3,2,2,34,957,837,838,0,3,2,2,34,867,939,866,0,2,2,3,34,958,837,957,0,2,2,3,34,867,938,939,0,2,2,2,34,959,837,958,0,2,2,2,34,867,937,938,0,2,2,2,34,959,836,837,0,2,2,2,34,868,937,867,0,2,2,2,34,960,836,959,0,2,2,2,34,868,936,937,0,2,2,2,34,961,836,960,0,2,2,2,34,868,935,936,0,2,3,2,34,961,835,836,0,2,2,2,34,869,935,868,0,2,3,2,34,962,835,961,0,2,2,2,34,869,934,935,0,2,2,3,34,962,834,835,0,2,3,2,34,870,934,869,0,2,2,2,34,963,834,962,0,2,3,2,34,870,933,934,0,2,2,2,34,964,834,963,0,2,3,2,34,870,932,933,0,2,2,2,34,964,833,834,0,2,2,3,34,871,932,870,0,2,2,2,34,965,833,964,0,2,2,2,34,871,931,932,0,2,2,2,34,966,833,965,0,3,2,2,34,871,930,931,0,2,2,2,34,966,832,833,0,3,3,2,34,872,930,871,0,3,2,2,34,967,832,966,0,2,3,3,34,872,929,930,0,3,2,2,34,967,831,832,0,2,2,3,34,873,929,872,0,3,2,3,34,968,831,967,0,3,2,2,34,873,928,929,0,3,2,2,34,968,830,831,0,3,2,2,34,874,928,873,0,2,2,3,34,969,830,968,0,2,2,3,34,874,927,928,0,2,2,2,34,970,830,969,0,2,2,2,34,874,926,927,0,2,2,2,34,970,829,830,0,2,2,2,34,875,926,874,0,2,2,2,34,971,829,970,0,2,2,2,34,875,925,926,0,2,2,2,34,971,828,829,0,2,2,2,34,876,925,875,0,2,2,2,34,972,828,971,0,2,2,2,34,876,924,925,0,2,2,2,34,972,827,828,0,2,2,2,34,973,827,972,0,2,2,2,34,876,923,924,0,2,2,2,34,877,923,876,0,2,2,2,34,974,827,973,0,2,2,2,34,877,922,923,0,2,2,2,34,974,826,827,0,2,2,2,34,878,922,877,0,2,2,2,34,975,826,974,0,2,2,2,34,878,921,922,0,2,2,2,34,975,825,826,0,2,2,2,34,879,921,878,0,2,2,2,34,976,825,975,0,3,2,2,34,879,920,921,0,2,3,2,34,977,825,976,0,3,2,3,34,879,919,920,0,2,3,3,34,977,824,825,0,3,2,2,34,880,919,879,0,2,3,2,34,978,824,977,0,2,2,3,34,880,918,919,0,2,2,3,34,978,823,824,0,2,2,2,34,881,918,880,0,2,2,2,34,979,823,978,0,2,2,2,34,881,917,918,0,2,3,2,34,979,822,823,0,2,3,2,34,882,917,881,0,2,3,2,34,980,822,979,0,3,3,2,34,882,916,917,0,2,3,3,34,981,822,980,0,3,3,3,34,882,915,916,0,2,3,3,34,981,821,822,0,3,3,3,34,883,915,882,0,3,3,2,34,982,821,981,0,2,3,3,34,883,914,915,0,3,2,3,34,983,821,982,0,2,3,2,34,883,913,914,0,3,2,2,34,983,820,821,0,2,2,3,34,884,913,883,0,2,2,3,34,888,820,983,0,3,2,2,34,884,912,913,0,2,3,2,34,888,819,820,0,3,3,2,34,885,912,884,0,3,3,2,34,889,819,888,0,2,3,3,34,885,911,912,0,3,2,3,34,890,819,889,0,2,3,2,34,885,910,911,0,3,2,2,34,890,818,819,0,2,2,3,34,886,910,885,0,2,2,3,34,891,818,890,0,2,2,2,34,886,909,910,0,2,2,2,34,892,818,891,0,2,2,2,34,886,908,909,0,2,2,2,34,892,817,818,0,2,2,2,34,887,908,886,0,2,2,2,34,893,817,892,0,2,2,2,34,887,907,908,0,2,2,2,34,894,817,893,0,2,2,2,34,887,906,907,0,2,2,2,34,894,816,817,0,2,2,2,34,792,906,887,0,2,2,2,34,895,816,894,0,2,2,2,34,792,905,906,0,2,2,2,34,896,816,895,0,2,2,2,34,792,904,905,0,2,2,2,34,897,816,896,0,2,2,2,34,792,903,904,0,2,2,2,34,898,816,897,0,2,2,2,34,792,902,903,0,2,2,2,34,898,815,816,0,2,2,2,34,793,902,792,0,2,2,2,34,899,815,898,0,3,2,2,34,793,901,902,0,2,2,2,34,900,815,899,0,2,2,3,34,793,900,901,0,2,2,2,34,793,815,900,0,2,2,2,34,793,814,815,0,2,2,2,34,794,814,793,0,2,2,2,34,794,813,814,0,2,3,2,34,795,813,794,0,2,3,2,34,795,812,813,0,2,2,3,34,796,812,795,0,2,2,2,34,796,811,812,0,2,2,2,34,797,811,796,0,3,2,2,34,797,810,811,0,3,2,2,34,798,810,797,0,2,2,3,34,798,809,810,0,2,2,2,34,799,809,798,0,2,2,2,34,799,808,809,0,2,2,2,34,800,808,799,0,2,2,2,34,800,807,808,0,2,2,2,34,801,807,800,0,3,2,2,34,801,806,807,0,3,3,2,34,802,806,801,0,3,3,3,34,802,805,806,0,3,2,3,34,803,805,802,0,3,2,3,34,803,804,805,0,3,2,2,34,495,493,494,0,2,2,2,34,492,493,495,0,2,2,2,35,985,987,986,984,0,4,5,5,4,35,987,989,988,986,0,5,6,6,5,35,989,991,990,988,0,6,7,7,6,35,991,985,984,990,0,7,4,4,7,35,993,995,994,992,0,8,9,9,8,35,995,997,996,994,0,9,10,10,9,35,997,999,998,996,0,10,11,11,10,35,999,993,992,998,0,11,8,8,11,35,1001,1003,1002,1000,0,4,5,5,4,35,1003,1005,1004,1002,0,5,6,6,5,35,1005,1007,1006,1004,0,6,7,7,6,35,1007,1001,1000,1006,0,7,4,4,7,35,1009,1011,1010,1008,0,4,5,5,4,35,1011,1013,1012,1010,0,5,6,6,5,35,1013,1015,1014,1012,0,6,7,7,6,35,1015,1009,1008,1014,0,7,4,4,7,35,1017,1019,1018,1016,0,8,9,9,8,35,1019,1021,1020,1018,0,9,10,10,9,35,1021,1023,1022,1020,0,10,11,11,10,35,1023,1017,1016,1022,0,11,8,8,11,35,1025,1027,1026,1024,0,8,9,9,8,35,1027,1029,1028,1026,0,9,10,10,9,35,1029,1031,1030,1028,0,10,11,11,10,35,1031,1025,1024,1030,0,11,8,8,11,35,1033,1035,1034,1032,0,12,13,13,12,35,1035,1037,1036,1034,0,13,14,14,13,35,1037,1039,1038,1036,0,14,15,15,14,35,1039,1033,1032,1038,0,15,12,12,15,35,1041,1043,1042,1040,0,8,9,9,8,35,1043,1045,1044,1042,0,9,10,10,9,35,1045,1047,1046,1044,0,10,11,11,10,35,1047,1041,1040,1046,0,11,8,8,11,35,1049,1051,1050,1048,0,12,13,13,12,35,1051,1053,1052,1050,0,13,14,14,13,35,1053,1055,1054,1052,0,14,15,15,14,35,1055,1049,1048,1054,0,15,12,12,15,35,1057,1059,1058,1056,0,8,9,9,8,35,1059,1061,1060,1058,0,9,10,10,9,35,1061,1063,1062,1060,0,10,11,11,10,35,1063,1057,1056,1062,0,11,8,8,11,35,1065,1067,1066,1064,0,8,9,9,8,35,1067,1069,1068,1066,0,9,10,10,9,35,1069,1071,1070,1068,0,10,11,11,10,35,1071,1065,1064,1070,0,11,8,8,11,35,1073,1075,1074,1072,0,4,5,5,4,35,1075,1077,1076,1074,0,5,6,6,5,35,1077,1079,1078,1076,0,6,7,7,6,35,1079,1073,1072,1078,0,7,4,4,7,35,1081,1083,1082,1080,0,4,5,5,4,35,1083,1085,1084,1082,0,5,6,6,5,35,1085,1087,1086,1084,0,6,7,7,6,35,1087,1081,1080,1086,0,7,4,4,7,35,1089,1091,1090,1088,0,12,13,13,12,35,1091,1093,1092,1090,0,13,14,14,13,35,1093,1095,1094,1092,0,14,15,15,14,35,1095,1089,1088,1094,0,15,12,12,15,35,1097,1099,1098,1096,0,8,9,9,8,35,1099,1101,1100,1098,0,9,10,10,9,35,1101,1103,1102,1100,0,10,11,11,10,35,1103,1097,1096,1102,0,11,8,8,11,35,1105,1107,1106,1104,0,8,9,9,8,35,1107,1109,1108,1106,0,9,10,10,9,35,1109,1111,1110,1108,0,10,11,11,10,35,1111,1105,1104,1110,0,11,8,8,11,35,1113,1115,1114,1112,0,4,5,5,4,35,1115,1117,1116,1114,0,5,6,6,5,35,1117,1119,1118,1116,0,6,7,7,6,35,1119,1113,1112,1118,0,7,4,4,7,35,1121,1123,1122,1120,0,16,17,17,16,35,1123,1125,1124,1122,0,17,18,18,17,35,1125,1127,1126,1124,0,18,19,19,18,35,1127,1129,1128,1126,0,19,20,20,19,35,1129,1131,1130,1128,0,20,21,21,20,35,1131,1133,1132,1130,0,21,22,22,21,35,1133,1135,1134,1132,0,22,23,23,22,35,1135,1137,1136,1134,0,23,24,24,23,35,1137,1139,1138,1136,0,24,25,25,24,35,1139,1141,1140,1138,0,25,26,26,25,35,1141,1143,1142,1140,0,26,27,27,26,35,1143,1145,1144,1142,0,27,28,28,27,35,1145,1147,1146,1144,0,28,29,29,28,35,1147,1149,1148,1146,0,29,30,30,29,35,1149,1151,1150,1148,0,30,31,31,30,35,1151,1153,1152,1150,0,31,32,32,31,35,1153,1155,1154,1152,0,32,33,33,32,35,1155,1157,1156,1154,0,33,34,34,33,35,1157,1159,1158,1156,0,34,35,35,34,35,1159,1161,1160,1158,0,35,36,36,35,35,1161,1163,1162,1160,0,36,37,37,36,35,1163,1165,1164,1162,0,37,38,38,37,35,1165,1167,1166,1164,0,38,39,39,38,35,1167,1169,1168,1166,0,39,40,40,39,35,1169,1171,1170,1168,0,40,41,41,40,35,1171,1173,1172,1170,0,41,42,42,41,35,1173,1175,1174,1172,0,42,43,43,42,35,1175,1177,1176,1174,0,43,44,44,43,35,1177,1179,1178,1176,0,44,45,45,44,35,1179,1181,1180,1178,0,45,46,46,45,35,1181,1183,1182,1180,0,46,47,47,46,35,1183,1185,1184,1182,0,47,48,48,47,35,1185,1187,1186,1184,0,48,49,49,48,35,1187,1189,1188,1186,0,49,50,50,49,35,1189,1191,1190,1188,0,50,51,51,50,35,1191,1193,1192,1190,0,51,52,52,51,35,1193,1195,1194,1192,0,52,53,53,52,35,1195,1197,1196,1194,0,53,54,54,53,35,1197,1199,1198,1196,0,54,55,55,54,35,1199,1201,1200,1198,0,55,56,56,55,35,1201,1203,1202,1200,0,56,57,57,56,35,1203,1205,1204,1202,0,57,58,58,57,35,1205,1207,1206,1204,0,58,59,59,58,35,1207,1209,1208,1206,0,59,60,60,59,35,1209,1211,1210,1208,0,60,61,61,60,35,1211,1213,1212,1210,0,61,62,62,61,35,1213,1215,1214,1212,0,62,63,63,62,35,1215,1217,1216,1214,0,63,64,64,63,35,1217,1219,1218,1216,0,64,65,65,64,35,1219,1221,1220,1218,0,65,66,66,65,35,1221,1223,1222,1220,0,66,67,67,66,35,1223,1225,1224,1222,0,67,68,68,67,35,1225,1227,1226,1224,0,68,69,69,68,35,1227,1229,1228,1226,0,69,70,70,69,35,1229,1231,1230,1228,0,70,71,71,70,35,1231,1233,1232,1230,0,71,72,72,71,35,1233,1235,1234,1232,0,72,73,73,72,35,1235,1237,1236,1234,0,73,74,74,73,35,1237,1239,1238,1236,0,74,75,75,74,35,1239,1241,1240,1238,0,75,76,76,75,35,1241,1243,1242,1240,0,76,77,77,76,35,1243,1245,1244,1242,0,77,78,78,77,35,1245,1247,1246,1244,0,78,79,79,78,35,1247,1249,1248,1246,0,79,80,80,79,35,1249,1251,1250,1248,0,80,81,81,80,35,1251,1253,1252,1250,0,81,82,82,81,35,1253,1255,1254,1252,0,82,83,83,82,35,1255,1257,1256,1254,0,83,84,84,83,35,1257,1259,1258,1256,0,84,85,85,84,35,1259,1261,1260,1258,0,85,86,86,85,35,1261,1263,1262,1260,0,86,87,87,86,35,1263,1265,1264,1262,0,87,88,88,87,35,1265,1267,1266,1264,0,88,89,89,88,35,1267,1269,1268,1266,0,89,90,90,89,35,1269,1271,1270,1268,0,90,91,91,90,35,1271,1273,1272,1270,0,91,92,92,91,35,1273,1275,1274,1272,0,92,93,93,92,35,1275,1277,1276,1274,0,93,94,94,93,35,1277,1279,1278,1276,0,94,95,95,94,35,1279,1281,1280,1278,0,95,96,96,95,35,1281,1283,1282,1280,0,96,97,97,96,35,1283,1285,1284,1282,0,97,98,98,97,35,1285,1287,1286,1284,0,98,99,99,98,35,1287,1289,1288,1286,0,99,100,100,99,35,1289,1291,1290,1288,0,100,101,101,100,35,1291,1293,1292,1290,0,101,102,102,101,35,1293,1295,1294,1292,0,102,103,103,102,35,1295,1297,1296,1294,0,103,104,104,103,35,1297,1299,1298,1296,0,104,105,105,104,35,1299,1301,1300,1298,0,105,106,106,105,35,1301,1303,1302,1300,0,106,107,107,106,35,1303,1305,1304,1302,0,107,108,108,107,35,1305,1307,1306,1304,0,108,109,109,108,35,1307,1309,1308,1306,0,109,110,110,109,35,1309,1311,1310,1308,0,110,111,111,110,35,1311,1121,1120,1310,0,111,16,16,111,35,1313,1315,1314,1312,0,112,113,113,112,35,1315,1317,1316,1314,0,113,114,114,113,35,1317,1319,1318,1316,0,114,115,115,114,35,1319,1321,1320,1318,0,115,116,116,115,35,1321,1323,1322,1320,0,116,117,117,116,35,1323,1325,1324,1322,0,117,118,118,117,35,1325,1327,1326,1324,0,118,119,119,118,35,1327,1329,1328,1326,0,119,120,120,119,35,1329,1331,1330,1328,0,120,121,121,120,35,1331,1333,1332,1330,0,121,122,122,121,35,1333,1335,1334,1332,0,122,123,123,122,35,1335,1337,1336,1334,0,123,124,124,123,35,1337,1339,1338,1336,0,124,125,125,124,35,1339,1341,1340,1338,0,125,126,126,125,35,1341,1343,1342,1340,0,126,127,127,126,35,1343,1345,1344,1342,0,127,128,128,127,35,1345,1347,1346,1344,0,128,129,129,128,35,1347,1349,1348,1346,0,129,130,130,129,35,1349,1351,1350,1348,0,130,131,131,130,35,1351,1353,1352,1350,0,131,132,132,131,35,1353,1355,1354,1352,0,132,133,133,132,35,1355,1357,1356,1354,0,133,134,134,133,35,1357,1359,1358,1356,0,134,135,135,134,35,1359,1361,1360,1358,0,135,136,136,135,35,1361,1363,1362,1360,0,136,137,137,136,35,1363,1365,1364,1362,0,137,138,138,137,35,1365,1367,1366,1364,0,138,139,139,138,35,1367,1369,1368,1366,0,139,140,140,139,35,1369,1371,1370,1368,0,140,141,141,140,35,1371,1373,1372,1370,0,141,142,142,141,35,1373,1375,1374,1372,0,142,143,143,142,35,1375,1377,1376,1374,0,143,144,144,143,35,1377,1379,1378,1376,0,144,145,145,144,35,1379,1381,1380,1378,0,145,146,146,145,35,1381,1383,1382,1380,0,146,147,147,146,35,1383,1385,1384,1382,0,147,148,148,147,35,1385,1387,1386,1384,0,148,149,149,148,35,1387,1389,1388,1386,0,149,150,150,149,35,1389,1391,1390,1388,0,150,151,151,150,35,1391,1393,1392,1390,0,151,152,152,151,35,1393,1395,1394,1392,0,152,153,153,152,35,1395,1397,1396,1394,0,153,154,154,153,35,1397,1399,1398,1396,0,154,155,155,154,35,1399,1401,1400,1398,0,155,156,156,155,35,1401,1403,1402,1400,0,156,157,157,156,35,1403,1405,1404,1402,0,157,158,158,157,35,1405,1407,1406,1404,0,158,159,159,158,35,1407,1409,1408,1406,0,159,160,160,159,35,1409,1411,1410,1408,0,160,161,161,160,35,1411,1413,1412,1410,0,161,162,162,161,35,1413,1415,1414,1412,0,162,163,163,162,35,1415,1417,1416,1414,0,163,164,164,163,35,1417,1419,1418,1416,0,164,165,165,164,35,1419,1421,1420,1418,0,165,166,166,165,35,1421,1423,1422,1420,0,166,167,167,166,35,1423,1425,1424,1422,0,167,168,168,167,35,1425,1427,1426,1424,0,168,169,169,168,35,1427,1429,1428,1426,0,169,170,170,169,35,1429,1431,1430,1428,0,170,171,171,170,35,1431,1433,1432,1430,0,171,28,28,171,35,1433,1435,1434,1432,0,28,172,172,28,35,1435,1437,1436,1434,0,172,173,173,172,35,1437,1439,1438,1436,0,173,174,174,173,35,1439,1441,1440,1438,0,174,175,175,174,35,1441,1443,1442,1440,0,175,176,176,175,35,1443,1445,1444,1442,0,176,177,177,176,35,1445,1447,1446,1444,0,177,178,178,177,35,1447,1449,1448,1446,0,178,179,179,178,35,1449,1451,1450,1448,0,179,180,180,179,35,1451,1453,1452,1450,0,180,181,181,180,35,1453,1455,1454,1452,0,181,182,182,181,35,1455,1457,1456,1454,0,182,183,183,182,35,1457,1459,1458,1456,0,183,184,184,183,35,1459,1461,1460,1458,0,184,185,185,184,35,1461,1463,1462,1460,0,185,186,186,185,35,1463,1465,1464,1462,0,186,187,187,186,35,1465,1467,1466,1464,0,187,188,188,187,35,1467,1469,1468,1466,0,188,189,189,188,35,1469,1471,1470,1468,0,189,190,190,189,35,1471,1473,1472,1470,0,190,191,191,190,35,1473,1475,1474,1472,0,191,192,192,191,35,1475,1477,1476,1474,0,192,193,193,192,35,1477,1479,1478,1476,0,193,194,194,193,35,1479,1481,1480,1478,0,194,195,195,194,35,1481,1483,1482,1480,0,195,196,196,195,35,1483,1485,1484,1482,0,196,197,197,196,35,1485,1487,1486,1484,0,197,198,198,197,35,1487,1489,1488,1486,0,198,199,199,198,35,1489,1491,1490,1488,0,199,200,200,199,35,1491,1493,1492,1490,0,200,201,201,200,35,1493,1495,1494,1492,0,201,202,202,201,35,1495,1497,1496,1494,0,202,203,203,202,35,1497,1499,1498,1496,0,203,204,204,203,35,1499,1501,1500,1498,0,204,205,205,204,35,1501,1503,1502,1500,0,205,206,206,205,35,1503,1313,1312,1502,0,206,112,112,206,35,1505,1507,1506,1504,0,12,13,13,12,35,1507,1509,1508,1506,0,13,14,14,13,35,1509,1511,1510,1508,0,14,15,15,14,35,1511,1505,1504,1510,0,15,12,12,15,35,1513,1515,1514,1512,0,8,9,9,8,35,1515,1517,1516,1514,0,9,10,10,9,35,1517,1519,1518,1516,0,10,11,11,10,35,1519,1513,1512,1518,0,11,8,8,11,35,1521,1523,1522,1520,0,8,9,9,8,35,1523,1525,1524,1522,0,9,10,10,9,35,1525,1527,1526,1524,0,10,11,11,10,35,1527,1521,1520,1526,0,11,8,8,11,35,1529,1531,1530,1528,0,8,9,9,8,35,1531,1533,1532,1530,0,9,10,10,9,35,1533,1535,1534,1532,0,10,11,11,10,35,1535,1529,1528,1534,0,11,8,8,11,35,1537,1539,1538,1536,0,8,9,9,8,35,1539,1541,1540,1538,0,9,10,10,9,35,1541,1543,1542,1540,0,10,11,11,10,35,1543,1537,1536,1542,0,11,8,8,11,35,1545,1547,1546,1544,0,4,5,5,4,35,1547,1549,1548,1546,0,5,6,6,5,35,1549,1551,1550,1548,0,6,7,7,6,35,1551,1545,1544,1550,0,7,4,4,7,35,1553,1555,1554,1552,0,207,208,208,207,35,1555,1557,1556,1554,0,208,209,209,208,35,1557,1559,1558,1556,0,209,210,210,209,35,1559,1561,1560,1558,0,210,211,211,210,35,1561,1563,1562,1560,0,211,212,212,211,35,1563,1565,1564,1562,0,212,213,213,212,35,1565,1567,1566,1564,0,213,214,214,213,35,1567,1569,1568,1566,0,214,215,215,214,35,1569,1571,1570,1568,0,215,216,216,215,35,1571,1573,1572,1570,0,216,217,217,216,35,1573,1575,1574,1572,0,217,218,218,217,35,1575,1577,1576,1574,0,218,195,195,218,35,1577,1579,1578,1576,0,195,219,219,195,35,1579,1581,1580,1578,0,219,220,220,219,35,1581,1583,1582,1580,0,220,221,221,220,35,1583,1585,1584,1582,0,221,222,222,221,35,1585,1587,1586,1584,0,222,223,223,222,35,1587,1589,1588,1586,0,223,224,224,223,35,1589,1591,1590,1588,0,224,225,225,224,35,1591,1593,1592,1590,0,225,226,226,225,35,1593,1595,1594,1592,0,226,227,227,226,35,1595,1597,1596,1594,0,227,228,228,227,35,1597,1599,1598,1596,0,228,229,229,228,35,1599,1601,1600,1598,0,229,230,230,229,35,1601,1603,1602,1600,0,230,231,231,230,35,1603,1605,1604,1602,0,231,232,232,231,35,1605,1607,1606,1604,0,232,233,233,232,35,1607,1609,1608,1606,0,233,234,234,233,35,1609,1611,1610,1608,0,234,235,235,234,35,1611,1613,1612,1610,0,235,236,236,235,35,1613,1615,1614,1612,0,236,237,237,236,35,1615,1617,1616,1614,0,237,238,238,237,35,1617,1619,1618,1616,0,238,239,239,238,35,1619,1621,1620,1618,0,239,240,240,239,35,1621,1623,1622,1620,0,240,241,241,240,35,1623,1625,1624,1622,0,241,242,242,241,35,1625,1627,1626,1624,0,242,243,243,242,35,1627,1629,1628,1626,0,243,244,244,243,35,1629,1631,1630,1628,0,244,245,245,244,35,1631,1633,1632,1630,0,245,246,246,245,35,1633,1635,1634,1632,0,246,247,247,246,35,1635,1637,1636,1634,0,247,248,248,247,35,1637,1639,1638,1636,0,248,249,249,248,35,1639,1641,1640,1638,0,249,250,250,249,35,1641,1643,1642,1640,0,250,251,251,250,35,1643,1645,1644,1642,0,251,252,252,251,35,1645,1647,1646,1644,0,252,253,253,252,35,1647,1649,1648,1646,0,253,254,254,253,35,1649,1651,1650,1648,0,254,255,255,254,35,1651,1653,1652,1650,0,255,256,256,255,35,1653,1655,1654,1652,0,256,257,257,256,35,1655,1657,1656,1654,0,257,258,258,257,35,1657,1659,1658,1656,0,258,259,259,258,35,1659,1661,1660,1658,0,259,260,260,259,35,1661,1663,1662,1660,0,260,261,261,260,35,1663,1665,1664,1662,0,261,262,262,261,35,1665,1667,1666,1664,0,262,263,263,262,35,1667,1669,1668,1666,0,263,264,264,263,35,1669,1671,1670,1668,0,264,265,265,264,35,1671,1673,1672,1670,0,265,266,266,265,35,1673,1675,1674,1672,0,266,267,267,266,35,1675,1677,1676,1674,0,267,268,268,267,35,1677,1679,1678,1676,0,268,269,269,268,35,1679,1681,1680,1678,0,269,270,270,269,35,1681,1683,1682,1680,0,270,271,271,270,35,1683,1685,1684,1682,0,271,272,272,271,35,1685,1687,1686,1684,0,272,273,273,272,35,1687,1689,1688,1686,0,273,274,274,273,35,1689,1691,1690,1688,0,274,275,275,274,35,1691,1693,1692,1690,0,275,276,276,275,35,1693,1695,1694,1692,0,276,277,277,276,35,1695,1697,1696,1694,0,277,278,278,277,35,1697,1699,1698,1696,0,278,279,279,278,35,1699,1701,1700,1698,0,279,280,280,279,35,1701,1703,1702,1700,0,280,281,281,280,35,1703,1705,1704,1702,0,281,282,282,281,35,1705,1707,1706,1704,0,282,283,283,282,35,1707,1709,1708,1706,0,283,284,284,283,35,1709,1711,1710,1708,0,284,285,285,284,35,1711,1713,1712,1710,0,285,286,286,285,35,1713,1715,1714,1712,0,286,287,287,286,35,1715,1717,1716,1714,0,287,288,288,287,35,1717,1719,1718,1716,0,288,289,289,288,35,1719,1721,1720,1718,0,289,76,76,289,35,1721,1723,1722,1720,0,76,290,290,76,35,1723,1725,1724,1722,0,290,291,291,290,35,1725,1727,1726,1724,0,291,292,292,291,35,1727,1729,1728,1726,0,292,293,293,292,35,1729,1731,1730,1728,0,293,294,294,293,35,1731,1733,1732,1730,0,294,295,295,294,35,1733,1735,1734,1732,0,295,296,296,295,35,1735,1737,1736,1734,0,296,297,297,296,35,1737,1739,1738,1736,0,297,298,298,297,35,1739,1741,1740,1738,0,298,299,299,298,35,1741,1743,1742,1740,0,299,300,300,299,35,1743,1553,1552,1742,0,300,207,207,300,35,1745,1747,1746,1744,0,301,302,302,301,35,1747,1749,1748,1746,0,302,303,303,302,35,1749,1751,1750,1748,0,303,304,304,303,35,1751,1753,1752,1750,0,304,305,305,304,35,1753,1755,1754,1752,0,305,306,306,305,35,1755,1757,1756,1754,0,306,307,307,306,35,1757,1759,1758,1756,0,307,308,308,307,35,1759,1761,1760,1758,0,308,309,309,308,35,1761,1763,1762,1760,0,309,310,310,309,35,1763,1765,1764,1762,0,310,311,311,310,35,1765,1767,1766,1764,0,311,312,312,311,35,1767,1769,1768,1766,0,312,148,148,312,35,1769,1771,1770,1768,0,148,313,313,148,35,1771,1773,1772,1770,0,313,314,314,313,35,1773,1775,1774,1772,0,314,315,315,314,35,1775,1777,1776,1774,0,315,316,316,315,35,1777,1779,1778,1776,0,316,317,317,316,35,1779,1781,1780,1778,0,317,318,318,317,35,1781,1783,1782,1780,0,318,319,319,318,35,1783,1785,1784,1782,0,319,320,320,319,35,1785,1787,1786,1784,0,320,321,321,320,35,1787,1789,1788,1786,0,321,322,322,321,35,1789,1791,1790,1788,0,322,323,323,322,35,1791,1793,1792,1790,0,323,324,324,323,35,1793,1795,1794,1792,0,324,325,325,324,35,1795,1797,1796,1794,0,325,326,326,325,35,1797,1799,1798,1796,0,326,327,327,326,35,1799,1801,1800,1798,0,327,328,328,327,35,1801,1803,1802,1800,0,328,329,329,328,35,1803,1805,1804,1802,0,329,330,330,329,35,1805,1807,1806,1804,0,330,331,331,330,35,1807,1809,1808,1806,0,331,332,332,331,35,1809,1811,1810,1808,0,332,333,333,332,35,1811,1813,1812,1810,0,333,334,334,333,35,1813,1815,1814,1812,0,334,335,335,334,35,1815,1817,1816,1814,0,335,336,336,335,35,1817,1819,1818,1816,0,336,337,337,336,35,1819,1821,1820,1818,0,337,338,338,337,35,1821,1823,1822,1820,0,338,339,339,338,35,1823,1825,1824,1822,0,339,340,340,339,35,1825,1827,1826,1824,0,340,341,341,340,35,1827,1829,1828,1826,0,341,342,342,341,35,1829,1831,1830,1828,0,342,343,343,342,35,1831,1833,1832,1830,0,343,344,344,343,35,1833,1835,1834,1832,0,344,345,345,344,35,1835,1837,1836,1834,0,345,346,346,345,35,1837,1839,1838,1836,0,346,347,347,346,35,1839,1841,1840,1838,0,347,348,348,347,35,1841,1843,1842,1840,0,348,349,349,348,35,1843,1845,1844,1842,0,349,350,350,349,35,1845,1847,1846,1844,0,350,351,351,350,35,1847,1849,1848,1846,0,351,352,352,351,35,1849,1851,1850,1848,0,352,353,353,352,35,1851,1853,1852,1850,0,353,354,354,353,35,1853,1855,1854,1852,0,354,355,355,354,35,1855,1857,1856,1854,0,355,356,356,355,35,1857,1859,1858,1856,0,356,357,357,356,35,1859,1861,1860,1858,0,357,358,358,357,35,1861,1863,1862,1860,0,358,359,359,358,35,1863,1865,1864,1862,0,359,195,195,359,35,1865,1867,1866,1864,0,195,360,360,195,35,1867,1869,1868,1866,0,360,361,361,360,35,1869,1871,1870,1868,0,361,362,362,361,35,1871,1873,1872,1870,0,362,363,363,362,35,1873,1875,1874,1872,0,363,364,364,363,35,1875,1877,1876,1874,0,364,365,365,364,35,1877,1879,1878,1876,0,365,366,366,365,35,1879,1881,1880,1878,0,366,367,367,366,35,1881,1883,1882,1880,0,367,368,368,367,35,1883,1885,1884,1882,0,368,369,369,368,35,1885,1887,1886,1884,0,369,370,370,369,35,1887,1889,1888,1886,0,370,371,371,370,35,1889,1891,1890,1888,0,371,372,372,371,35,1891,1893,1892,1890,0,372,373,373,372,35,1893,1895,1894,1892,0,373,374,374,373,35,1895,1897,1896,1894,0,374,375,375,374,35,1897,1899,1898,1896,0,375,376,376,375,35,1899,1901,1900,1898,0,376,377,377,376,35,1901,1903,1902,1900,0,377,378,378,377,35,1903,1905,1904,1902,0,378,379,379,378,35,1905,1907,1906,1904,0,379,380,380,379,35,1907,1909,1908,1906,0,380,381,381,380,35,1909,1911,1910,1908,0,381,382,382,381,35,1911,1913,1912,1910,0,382,383,383,382,35,1913,1915,1914,1912,0,383,384,384,383,35,1915,1917,1916,1914,0,384,385,385,384,35,1917,1919,1918,1916,0,385,386,386,385,35,1919,1921,1920,1918,0,386,387,387,386,35,1921,1923,1922,1920,0,387,388,388,387,35,1923,1925,1924,1922,0,388,389,389,388,35,1925,1927,1926,1924,0,389,390,390,389,35,1927,1929,1928,1926,0,390,391,391,390,35,1929,1931,1930,1928,0,391,392,392,391,35,1931,1933,1932,1930,0,392,393,393,392,35,1933,1935,1934,1932,0,393,394,394,393,35,1935,1745,1744,1934,0,394,301,301,394,35,1937,1939,1938,1936,0,12,13,13,12,35,1939,1941,1940,1938,0,13,14,14,13,35,1941,1943,1942,1940,0,14,15,15,14,35,1943,1937,1936,1942,0,15,12,12,15,35,1945,1947,1946,1944,0,8,9,9,8,35,1947,1949,1948,1946,0,9,10,10,9,35,1949,1951,1950,1948,0,10,11,11,10,35,1951,1945,1944,1950,0,11,8,8,11,35,1953,1955,1954,1952,0,8,9,9,8,35,1955,1957,1956,1954,0,9,10,10,9,35,1957,1959,1958,1956,0,10,11,11,10,35,1959,1953,1952,1958,0,11,8,8,11,35,1961,1963,1962,1960,0,4,5,5,4,35,1963,1965,1964,1962,0,5,6,6,5,35,1965,1967,1966,1964,0,6,7,7,6,35,1967,1961,1960,1966,0,7,4,4,7]
rocket-3d/web/obj/rocket_flames_only.js:}
rocket-3d/web/obj/rocket_model.js:{
rocket-3d/web/obj/rocket_model.js:    "metadata" :
rocket-3d/web/obj/rocket_model.js:    {
rocket-3d/web/obj/rocket_model.js:        "formatVersion" : 3,
rocket-3d/web/obj/rocket_model.js:        "generatedBy"   : "Blender 2.60 Exporter",
rocket-3d/web/obj/rocket_model.js:        "vertices"      : 7056,
rocket-3d/web/obj/rocket_model.js:        "faces"         : 3532,
rocket-3d/web/obj/rocket_model.js:        "normals"       : 26,
rocket-3d/web/obj/rocket_model.js:        "colors"        : 0,
rocket-3d/web/obj/rocket_model.js:        "uvs"           : 0,
rocket-3d/web/obj/rocket_model.js:        "materials"     : 1,
rocket-3d/web/obj/rocket_model.js:        "morphTargets"  : 0
rocket-3d/web/obj/rocket_model.js:    },
rocket-3d/web/obj/rocket_model.js:    "scale" : 1.000000,
rocket-3d/web/obj/rocket_model.js:    "materials": [	{
rocket-3d/web/obj/rocket_model.js:	"DbgColor" : 15658734,
rocket-3d/web/obj/rocket_model.js:	"DbgIndex" : 0,
rocket-3d/web/obj/rocket_model.js:	"DbgName" : "default",
rocket-3d/web/obj/rocket_model.js:	"vertexColors" : false
rocket-3d/web/obj/rocket_model.js:	}],
rocket-3d/web/obj/rocket_model.js:    "vertices": [3.358652,0.075000,6.050342,3.336966,0.075000,6.050342,3.326123,0.075000,5.959935,3.369495,0.075000,5.959935,-3.336958,0.075000,6.050342,-3.358644,0.075000,6.050342,-3.369488,0.075000,5.959935,-3.326115,0.075000,5.959935,-3.076431,0.075000,5.822873,-3.257247,0.075000,5.822873,-3.257247,0.075000,5.801186,-3.076431,0.075000,5.801186,-3.089179,0.075000,6.149688,-3.244645,0.075000,6.149688,-3.244645,0.075000,6.128003,-3.089179,0.075000,6.128003,-3.089179,0.075000,6.095473,-3.244645,0.075000,6.095473,-3.244645,0.075000,6.073787,-3.089179,0.075000,6.073787,-2.895468,0.075000,5.822873,-3.076284,0.075000,5.822873,-3.076284,0.075000,5.801186,-2.895468,0.075000,5.801186,-2.908216,0.075000,6.149688,-3.063683,0.075000,6.149688,-3.063683,0.075000,6.128003,-2.908216,0.075000,6.128003,-2.908216,0.075000,6.095473,-3.063683,0.075000,6.095473,-3.063683,0.075000,6.073787,-2.908216,0.075000,6.073787,-2.749526,0.075000,5.569818,-2.725349,0.075000,5.569818,-2.860155,0.075000,5.844558,-2.884332,0.075000,5.844558,-2.749526,0.075000,2.448884,-2.725349,0.075000,2.448884,-2.860155,0.075000,2.723625,-2.884332,0.075000,2.723625,-2.727254,0.075000,6.149688,-2.882720,0.075000,6.149688,-2.882720,0.075000,6.128003,-2.727254,0.075000,6.128003,-2.727254,0.075000,6.095473,-2.882720,0.075000,6.095473,-2.882720,0.075000,6.073787,-2.727254,0.075000,6.073787,-2.533544,0.075000,2.701939,-2.714360,0.075000,2.701939,-2.714360,0.075000,2.680253,-2.533544,0.075000,2.680253,-2.568564,0.075000,5.569818,-2.544387,0.075000,5.569818,-2.679193,0.075000,5.844558,-2.703370,0.075000,5.844558,-2.568564,0.075000,5.179701,-2.544387,0.075000,5.179701,-2.679193,0.075000,5.454442,-2.703370,0.075000,5.454442,-2.568564,0.075000,2.058768,-2.544387,0.075000,2.058768,-2.679193,0.075000,2.333508,-2.703370,0.075000,2.333508,-2.546292,0.075000,6.149688,-2.701758,0.075000,6.149688,-2.701758,0.075000,6.128003,-2.546292,0.075000,6.128003,-2.546292,0.075000,6.095473,-2.701758,0.075000,6.095473,-2.701758,0.075000,6.073787,-2.546292,0.075000,6.073787,-2.352581,0.075000,5.822873,-2.533397,0.075000,5.822873,-2.533397,0.075000,5.801186,-2.352581,0.075000,5.801186,-2.352581,0.075000,2.701939,-2.533397,0.075000,2.701939,-2.533397,0.075000,2.680253,-2.352581,0.075000,2.680253,-2.387601,0.075000,5.179701,-2.363424,0.075000,5.179701,-2.498230,0.075000,5.454442,-2.522407,0.075000,5.454442,-2.387601,0.075000,4.789584,-2.363424,0.075000,4.789584,-2.498230,0.075000,5.064325,-2.522407,0.075000,5.064325,-2.387601,0.075000,1.668651,-2.363424,0.075000,1.668651,-2.498230,0.075000,1.943392,-2.522407,0.075000,1.943392,-2.365329,0.075000,6.149688,-2.520796,0.075000,6.149688,-2.520796,0.075000,6.128003,-2.365329,0.075000,6.128003,-2.365329,0.075000,6.095473,-2.520796,0.075000,6.095473,-2.520796,0.075000,6.073787,-2.365329,0.075000,6.073787,-2.171619,0.075000,2.701939,-2.352435,0.075000,2.701939,-2.352435,0.075000,2.680253,-2.171619,0.075000,2.680253,-2.206639,0.075000,4.399468,-2.182462,0.075000,4.399468,-2.317268,0.075000,4.674209,-2.341445,0.075000,4.674209,-2.206639,0.075000,1.278535,-2.182462,0.075000,1.278535,-2.317268,0.075000,1.553275,-2.341445,0.075000,1.553275,-2.251184,0.075000,6.050342,-2.272870,0.075000,6.050342,-2.283713,0.075000,5.959935,-2.240340,0.075000,5.959935,-2.240340,0.075000,5.020953,-2.283713,0.075000,5.020953,-2.283713,0.075000,4.977580,-2.240340,0.075000,4.977580,-1.990656,0.075000,2.701939,-2.171472,0.075000,2.701939,-2.171472,0.075000,2.680253,-1.990656,0.075000,2.680253,-2.025676,0.075000,4.009351,-2.001499,0.075000,4.009351,-2.136305,0.075000,4.284092,-2.160483,0.075000,4.284092,-2.025676,0.075000,0.888418,-2.001499,0.075000,0.888418,-2.136305,0.075000,1.163159,-2.160483,0.075000,1.163159,-2.070221,0.075000,4.879992,-2.091907,0.075000,4.879992,-2.102750,0.075000,4.789584,-2.059378,0.075000,4.789584,-1.844714,0.075000,4.399468,-1.820537,0.075000,4.399468,-1.955343,0.075000,4.674209,-1.979520,0.075000,4.674209,-1.844714,0.075000,3.619235,-1.820537,0.075000,3.619235,-1.955343,0.075000,3.893975,-1.979520,0.075000,3.893975,-1.844714,0.075000,2.448884,-1.820537,0.075000,2.448884,-1.955343,0.075000,2.723625,-1.979520,0.075000,2.723625,-1.844714,0.075000,0.498301,-1.820537,0.075000,0.498301,-1.955343,0.075000,0.773042,-1.979520,0.075000,0.773042,-1.639721,0.075000,2.723625,-1.663898,0.075000,2.723625,-1.798704,0.075000,2.448884,-1.774527,0.075000,2.448884,-1.663752,0.075000,4.009351,-1.639575,0.075000,4.009351,-1.774380,0.075000,4.284092,-1.798558,0.075000,4.284092,-1.663752,0.075000,3.229118,-1.639575,0.075000,3.229118,-1.774380,0.075000,3.503859,-1.798558,0.075000,3.503859,-1.663752,0.075000,-4.573216,-1.639575,0.075000,-4.573216,-1.774380,0.075000,-4.298475,-1.798558,0.075000,-4.298475,-1.708296,0.075000,0.978826,-1.729982,0.075000,0.978826,-1.740826,0.075000,0.888418,-1.697453,0.075000,0.888418,-1.708296,0.075000,0.773042,-1.729982,0.075000,0.773042,-1.729982,0.075000,0.498301,-1.708296,0.075000,0.498301,-1.708296,0.075000,0.382925,-1.729982,0.075000,0.382925,-1.729982,0.075000,0.108184,-1.708296,0.075000,0.108184,-1.708296,0.075000,-0.007191,-1.729982,0.075000,-0.007191,-1.729982,0.075000,-0.281932,-1.708296,0.075000,-0.281932,-1.708296,0.075000,-0.397309,-1.729982,0.075000,-0.397309,-1.729982,0.075000,-0.672049,-1.708296,0.075000,-0.672049,-1.708296,0.075000,-0.787425,-1.729982,0.075000,-0.787425,-1.729982,0.075000,-1.062166,-1.708296,0.075000,-1.062166,-1.708296,0.075000,-1.177542,-1.729982,0.075000,-1.177542,-1.729982,0.075000,-1.452282,-1.708296,0.075000,-1.452282,-1.708296,0.075000,-1.567658,-1.729982,0.075000,-1.567658,-1.729982,0.075000,-1.842399,-1.708296,0.075000,-1.842399,-1.708296,0.075000,-1.957775,-1.729982,0.075000,-1.957775,-1.729982,0.075000,-2.232515,-1.708296,0.075000,-2.232515,-1.708296,0.075000,-2.347892,-1.729982,0.075000,-2.347892,-1.729982,0.075000,-2.622632,-1.708296,0.075000,-2.622632,-1.708296,0.075000,-2.738008,-1.729982,0.075000,-2.738008,-1.729982,0.075000,-3.012749,-1.708296,0.075000,-3.012749,-1.708296,0.075000,-3.128125,-1.729982,0.075000,-3.128125,-1.729982,0.075000,-3.402865,-1.708296,0.075000,-3.402865,-1.708296,0.075000,-3.518242,-1.729982,0.075000,-3.518242,-1.729982,0.075000,-3.792982,-1.708296,0.075000,-3.792982,-1.708296,0.075000,-3.908358,-1.729982,0.075000,-3.908358,-1.729982,0.075000,-4.183099,-1.708296,0.075000,-4.183099,-1.482789,0.075000,3.619235,-1.458612,0.075000,3.619235,-1.593418,0.075000,3.893975,-1.617595,0.075000,3.893975,-1.482789,0.075000,-4.963333,-1.458612,0.075000,-4.963333,-1.593418,0.075000,-4.688592,-1.617595,0.075000,-4.688592,-1.516491,0.075000,1.119786,-1.559863,0.075000,1.119786,-1.559863,0.075000,1.076414,-1.516491,0.075000,1.076414,-1.527334,0.075000,3.113741,-1.549020,0.075000,3.113741,-1.549020,0.075000,2.839001,-1.527334,0.075000,2.839001,-1.527334,0.075000,2.723625,-1.549020,0.075000,2.723625,-1.549020,0.075000,2.448884,-1.527334,0.075000,2.448884,-1.527334,0.075000,2.333508,-1.549020,0.075000,2.333508,-1.549020,0.075000,2.058768,-1.527334,0.075000,2.058768,-1.527334,0.075000,1.943392,-1.549020,0.075000,1.943392,-1.549020,0.075000,1.668651,-1.527334,0.075000,1.668651,-1.527334,0.075000,1.553275,-1.549020,0.075000,1.553275,-1.549020,0.075000,1.278535,-1.527334,0.075000,1.278535,-1.266807,0.075000,3.092056,-1.447622,0.075000,3.092056,-1.447622,0.075000,3.070369,-1.266807,0.075000,3.070369,-1.301827,0.075000,-4.963333,-1.277650,0.075000,-4.963333,-1.412456,0.075000,-4.688592,-1.436633,0.075000,-4.688592,-1.301827,0.075000,-5.353450,-1.277650,0.075000,-5.353450,-1.412456,0.075000,-5.078709,-1.436633,0.075000,-5.078709,-1.335528,0.075000,3.460486,-1.378901,0.075000,3.460486,-1.378901,0.075000,3.417114,-1.335528,0.075000,3.417114,-1.346371,0.075000,2.723625,-1.368058,0.075000,2.723625,-1.368058,0.075000,2.448884,-1.346371,0.075000,2.448884,-1.346371,0.075000,2.333508,-1.368058,0.075000,2.333508,-1.368058,0.075000,2.058768,-1.346371,0.075000,2.058768,-1.346371,0.075000,1.943392,-1.368058,0.075000,1.943392,-1.368058,0.075000,1.668651,-1.346371,0.075000,1.668651,-1.346371,0.075000,1.553275,-1.368058,0.075000,1.553275,-1.368058,0.075000,1.278535,-1.346371,0.075000,1.278535,-1.346371,0.075000,1.163159,-1.368058,0.075000,1.163159,-1.368058,0.075000,0.888418,-1.346371,0.075000,0.888418,-1.346371,0.075000,0.773042,-1.368058,0.075000,0.773042,-1.368058,0.075000,0.498301,-1.346371,0.075000,0.498301,-1.346371,0.075000,0.382925,-1.368058,0.075000,0.382925,-1.368058,0.075000,0.108184,-1.346371,0.075000,0.108184,-1.346371,0.075000,-0.007191,-1.368058,0.075000,-0.007191,-1.368058,0.075000,-0.281932,-1.346371,0.075000,-0.281932,-1.346371,0.075000,-0.397309,-1.368058,0.075000,-0.397309,-1.368058,0.075000,-0.672049,-1.346371,0.075000,-0.672049,-1.346371,0.075000,-0.787425,-1.368058,0.075000,-0.787425,-1.368058,0.075000,-1.062166,-1.346371,0.075000,-1.062166,-1.346371,0.075000,-1.177542,-1.368058,0.075000,-1.177542,-1.368058,0.075000,-1.452282,-1.346371,0.075000,-1.452282,-1.346371,0.075000,-1.567658,-1.368058,0.075000,-1.567658,-1.368058,0.075000,-1.842399,-1.346371,0.075000,-1.842399,-1.346371,0.075000,-1.957775,-1.368058,0.075000,-1.957775,-1.368058,0.075000,-2.232515,-1.346371,0.075000,-2.232515,-1.346371,0.075000,-2.347892,-1.368058,0.075000,-2.347892,-1.368058,0.075000,-2.622632,-1.346371,0.075000,-2.622632,-1.346371,0.075000,-2.738008,-1.368058,0.075000,-2.738008,-1.368058,0.075000,-3.012749,-1.346371,0.075000,-3.012749,-1.346371,0.075000,-3.128125,-1.368058,0.075000,-3.128125,-1.368058,0.075000,-3.402865,-1.346371,0.075000,-3.402865,-1.346371,0.075000,-3.518242,-1.368058,0.075000,-3.518242,-1.368058,0.075000,-3.792982,-1.346371,0.075000,-3.792982,-1.346371,0.075000,-3.908358,-1.368058,0.075000,-3.908358,-1.368058,0.075000,-4.183099,-1.346371,0.075000,-4.183099,-1.346371,0.075000,-4.298475,-1.368058,0.075000,-4.298475,-1.368058,0.075000,-4.573216,-1.346371,0.075000,-4.573216,-1.085844,0.075000,2.701939,-1.266660,0.075000,2.701939,-1.266660,0.075000,2.680253,-1.085844,0.075000,2.680253,-1.096834,0.075000,-0.007191,-1.121011,0.075000,-0.007191,-1.255817,0.075000,-0.281932,-1.231640,0.075000,-0.281932,-1.120864,0.075000,-0.672049,-1.096687,0.075000,-0.672049,-1.231493,0.075000,-0.397309,-1.255670,0.075000,-0.397309,-1.120864,0.075000,-5.353450,-1.096687,0.075000,-5.353450,-1.231493,0.075000,-5.078709,-1.255670,0.075000,-5.078709,-1.120864,0.075000,-5.743567,-1.096687,0.075000,-5.743567,-1.231493,0.075000,-5.468826,-1.255670,0.075000,-5.468826,-1.165409,0.075000,3.319525,-1.187095,0.075000,3.319525,-1.197938,0.075000,3.229118,-1.154566,0.075000,3.229118,-1.154566,0.075000,3.070369,-1.197938,0.075000,3.070369,-1.197938,0.075000,3.026997,-1.154566,0.075000,3.026997,-1.165409,0.075000,-6.823509,-1.187095,0.075000,-6.823509,-1.197938,0.075000,-6.913918,-1.154566,0.075000,-6.913918,-1.165409,0.075000,1.943392,-1.187095,0.075000,1.943392,-1.187095,0.075000,1.668651,-1.165409,0.075000,1.668651,-1.165409,0.075000,1.553275,-1.187095,0.075000,1.553275,-1.187095,0.075000,1.278535,-1.165409,0.075000,1.278535,-1.165409,0.075000,-1.957775,-1.187095,0.075000,-1.957775,-1.187095,0.075000,-2.232515,-1.165409,0.075000,-2.232515,-1.165409,0.075000,-2.347892,-1.187095,0.075000,-2.347892,-1.187095,0.075000,-2.622632,-1.165409,0.075000,-2.622632,-0.904882,0.075000,2.701939,-1.085698,0.075000,2.701939,-1.085698,0.075000,2.680253,-0.904882,0.075000,2.680253,-0.904882,0.075000,-0.028878,-1.085698,0.075000,-0.028878,-1.085698,0.075000,-0.050564,-0.904882,0.075000,-0.050564,-0.904882,0.075000,-0.809111,-1.085698,0.075000,-0.809111,-1.085698,0.075000,-0.830797,-0.904882,0.075000,-0.830797,-0.915871,0.075000,2.333508,-0.940048,0.075000,2.333508,-1.074855,0.075000,2.058768,-1.050677,0.075000,2.058768,-0.915871,0.075000,-1.567658,-0.940048,0.075000,-1.567658,-1.074855,0.075000,-1.842399,-1.050677,0.075000,-1.842399,-0.939902,0.075000,3.229118,-0.915725,0.075000,3.229118,-1.050531,0.075000,3.503859,-1.074708,0.075000,3.503859,-0.939902,0.075000,0.888418,-0.915725,0.075000,0.888418,-1.050531,0.075000,1.163159,-1.074708,0.075000,1.163159,-0.939902,0.075000,-3.012749,-0.915725,0.075000,-3.012749,-1.050531,0.075000,-2.738008,-1.074708,0.075000,-2.738008,-0.939902,0.075000,-6.133683,-0.915725,0.075000,-6.133683,-1.050531,0.075000,-5.858943,-1.074708,0.075000,-5.858943,-0.939902,0.075000,-7.304034,-0.915725,0.075000,-7.304034,-1.050531,0.075000,-7.029294,-1.074708,0.075000,-7.029294,-0.935653,0.075000,2.990804,-1.054927,0.075000,2.990804,-1.054927,0.075000,2.969119,-0.935653,0.075000,2.969119,-0.935653,0.075000,-6.762114,-1.054927,0.075000,-6.762114,-1.054927,0.075000,-6.783801,-0.935653,0.075000,-6.783801,-0.984447,0.075000,-5.078709,-1.006133,0.075000,-5.078709,-1.006133,0.075000,-5.353450,-0.984447,0.075000,-5.353450,-0.984447,0.075000,-5.468826,-1.006133,0.075000,-5.468826,-1.006133,0.075000,-5.743567,-0.984447,0.075000,-5.743567,-0.984447,0.075000,-6.249060,-1.006133,0.075000,-6.249060,-1.006133,0.075000,-6.523801,-0.984447,0.075000,-6.523801,-0.723919,0.075000,3.482172,-0.904735,0.075000,3.482172,-0.904735,0.075000,3.460486,-0.723919,0.075000,3.460486,-0.723919,0.075000,-5.100395,-0.904735,0.075000,-5.100395,-0.904735,0.075000,-5.122082,-0.723919,0.075000,-5.122082,-0.723919,0.075000,-6.270746,-0.904735,0.075000,-6.270746,-0.904735,0.075000,-6.292432,-0.723919,0.075000,-6.292432,-0.734909,0.075000,-0.397309,-0.759086,0.075000,-0.397309,-0.893892,0.075000,-0.672049,-0.869715,0.075000,-0.672049,-0.758940,0.075000,3.619235,-0.734762,0.075000,3.619235,-0.869568,0.075000,3.893975,-0.893746,0.075000,3.893975,-0.758940,0.075000,-0.281932,-0.734762,0.075000,-0.281932,-0.869568,0.075000,-0.007191,-0.893746,0.075000,-0.007191,-0.758940,0.075000,-7.694151,-0.734762,0.075000,-7.694151,-0.869568,0.075000,-7.419411,-0.893746,0.075000,-7.419411,-0.754690,0.075000,2.990804,-0.873964,0.075000,2.990804,-0.873964,0.075000,2.969119,-0.754690,0.075000,2.969119,-0.754690,0.075000,-5.981880,-0.873964,0.075000,-5.981880,-0.873964,0.075000,-6.003566,-0.754690,0.075000,-6.003566,-0.754690,0.075000,-6.762114,-0.873964,0.075000,-6.762114,-0.873964,0.075000,-6.783801,-0.754690,0.075000,-6.783801,-0.803484,0.075000,2.539292,-0.825170,0.075000,2.539292,-0.836014,0.075000,2.448884,-0.792641,0.075000,2.448884,-0.792641,0.075000,0.729669,-0.836014,0.075000,0.729669,-0.836014,0.075000,0.686297,-0.792641,0.075000,0.686297,-0.803484,0.075000,-1.361874,-0.825170,0.075000,-1.361874,-0.836014,0.075000,-1.452282,-0.792641,0.075000,-1.452282,-0.792641,0.075000,-3.171497,-0.836014,0.075000,-3.171497,-0.836014,0.075000,-3.214870,-0.792641,0.075000,-3.214870,-0.803484,0.075000,-4.298475,-0.825170,0.075000,-4.298475,-0.825170,0.075000,-4.573216,-0.803484,0.075000,-4.573216,-0.803484,0.075000,-4.688592,-0.825170,0.075000,-4.688592,-0.825170,0.075000,-4.963333,-0.803484,0.075000,-4.963333,-0.542957,0.075000,3.872289,-0.723773,0.075000,3.872289,-0.723773,0.075000,3.850602,-0.542957,0.075000,3.850602,-0.542957,0.075000,-0.418995,-0.723773,0.075000,-0.418995,-0.723773,0.075000,-0.440681,-0.542957,0.075000,-0.440681,-0.542957,0.075000,-4.320161,-0.723773,0.075000,-4.320161,-0.723773,0.075000,-4.341848,-0.542957,0.075000,-4.341848,-0.542957,0.075000,-5.100395,-0.723773,0.075000,-5.100395,-0.723773,0.075000,-5.122082,-0.542957,0.075000,-5.122082,-0.542957,0.075000,-6.270746,-0.723773,0.075000,-6.270746,-0.723773,0.075000,-6.292432,-0.542957,0.075000,-6.292432,-0.577977,0.075000,4.009351,-0.553800,0.075000,4.009351,-0.688606,0.075000,4.284092,-0.712783,0.075000,4.284092,-0.577977,0.075000,-8.084269,-0.553800,0.075000,-8.084269,-0.688606,0.075000,-7.809527,-0.712783,0.075000,-7.809527,-0.686848,0.075000,3.026997,-0.711171,0.075000,3.026997,-0.633511,0.075000,2.853507,-0.555705,0.075000,3.026997,-0.580028,0.075000,3.026997,-0.633511,0.075000,2.907576,-0.573728,0.075000,-5.981880,-0.693002,0.075000,-5.981880,-0.693002,0.075000,-6.003566,-0.573728,0.075000,-6.003566,-0.573728,0.075000,-6.762114,-0.693002,0.075000,-6.762114,-0.693002,0.075000,-6.783801,-0.573728,0.075000,-6.783801,-0.622522,0.075000,6.050342,-0.644208,0.075000,6.050342,-0.655051,0.075000,5.959935,-0.611679,0.075000,5.959935,-0.622522,0.075000,3.319525,-0.644208,0.075000,3.319525,-0.655051,0.075000,3.229118,-0.611679,0.075000,3.229118,-0.611679,0.075000,2.680253,-0.655051,0.075000,2.680253,-0.655051,0.075000,2.636881,-0.611679,0.075000,2.636881,-0.622522,0.075000,0.588709,-0.644208,0.075000,0.588709,-0.655051,0.075000,0.498301,-0.611679,0.075000,0.498301,-0.611679,0.075000,-1.220914,-0.655051,0.075000,-1.220914,-0.655051,0.075000,-1.264286,-0.611679,0.075000,-1.264286,-0.622522,0.075000,-3.312458,-0.644208,0.075000,-3.312458,-0.655051,0.075000,-3.402865,-0.611679,0.075000,-3.402865,-0.622522,0.075000,-4.092690,-0.644208,0.075000,-4.092690,-0.655051,0.075000,-4.183099,-0.611679,0.075000,-4.183099,-0.361994,0.075000,5.822873,-0.542810,0.075000,5.822873,-0.542810,0.075000,5.801186,-0.361994,0.075000,5.801186,-0.361994,0.075000,4.262405,-0.542810,0.075000,4.262405,-0.542810,0.075000,4.240719,-0.361994,0.075000,4.240719,-0.361994,0.075000,3.872289,-0.542810,0.075000,3.872289,-0.542810,0.075000,3.850602,-0.361994,0.075000,3.850602,-0.361994,0.075000,-4.320161,-0.542810,0.075000,-4.320161,-0.542810,0.075000,-4.341848,-0.361994,0.075000,-4.341848,-0.361994,0.075000,-5.100395,-0.542810,0.075000,-5.100395,-0.542810,0.075000,-5.122082,-0.361994,0.075000,-5.122082,-0.361994,0.075000,-6.270746,-0.542810,0.075000,-6.270746,-0.542810,0.075000,-6.292432,-0.361994,0.075000,-6.292432,-0.397015,0.075000,-8.474385,-0.372837,0.075000,-8.474385,-0.507644,0.075000,-8.199645,-0.531821,0.075000,-8.199645,-0.374742,0.075000,6.149688,-0.530209,0.075000,6.149688,-0.530209,0.075000,6.128003,-0.374742,0.075000,6.128003,-0.374742,0.075000,6.095473,-0.530209,0.075000,6.095473,-0.530209,0.075000,6.073787,-0.374742,0.075000,6.073787,-0.392765,0.075000,2.990804,-0.512039,0.075000,2.990804,-0.512039,0.075000,2.969119,-0.392765,0.075000,2.969119,-0.392765,0.075000,-5.981880,-0.512039,0.075000,-5.981880,-0.512039,0.075000,-6.003566,-0.392765,0.075000,-6.003566,-0.392765,0.075000,-6.762114,-0.512039,0.075000,-6.762114,-0.512039,0.075000,-6.783801,-0.392765,0.075000,-6.783801,-0.441559,0.075000,3.319525,-0.463245,0.075000,3.319525,-0.474089,0.075000,3.229118,-0.430716,0.075000,3.229118,-0.441559,0.075000,-0.191524,-0.463245,0.075000,-0.191524,-0.474089,0.075000,-0.281932,-0.430716,0.075000,-0.281932,-0.430716,0.075000,-0.440681,-0.474089,0.075000,-0.440681,-0.474089,0.075000,-0.484053,-0.430716,0.075000,-0.484053,-0.430716,0.075000,-3.951731,-0.474089,0.075000,-3.951731,-0.474089,0.075000,-3.995103,-0.430716,0.075000,-3.995103,-0.441559,0.075000,-3.518242,-0.463245,0.075000,-3.518242,-0.463245,0.075000,-3.792982,-0.441559,0.075000,-3.792982,-0.181032,0.075000,5.822873,-0.361848,0.075000,5.822873,-0.361848,0.075000,5.801186,-0.181032,0.075000,5.801186,-0.181032,0.075000,4.262405,-0.361848,0.075000,4.262405,-0.361848,0.075000,4.240719,-0.181032,0.075000,4.240719,-0.181032,0.075000,3.872289,-0.361848,0.075000,3.872289,-0.361848,0.075000,3.850602,-0.181032,0.075000,3.850602,-0.181032,0.075000,2.701939,-0.361848,0.075000,2.701939,-0.361848,0.075000,2.680253,-0.181032,0.075000,2.680253,-0.181032,0.075000,0.361239,-0.361848,0.075000,0.361239,-0.361848,0.075000,0.339553,-0.181032,0.075000,0.339553,-0.181032,0.075000,-1.199228,-0.361848,0.075000,-1.199228,-0.361848,0.075000,-1.220914,-0.181032,0.075000,-1.220914,-0.181032,0.075000,-3.539928,-0.361848,0.075000,-3.539928,-0.361848,0.075000,-3.561614,-0.181032,0.075000,-3.561614,-0.181032,0.075000,-3.930044,-0.361848,0.075000,-3.930044,-0.361848,0.075000,-3.951731,-0.181032,0.075000,-3.951731,-0.181032,0.075000,-4.320161,-0.361848,0.075000,-4.320161,-0.361848,0.075000,-4.341848,-0.181032,0.075000,-4.341848,-0.181032,0.075000,-5.100395,-0.361848,0.075000,-5.100395,-0.361848,0.075000,-5.122082,-0.181032,0.075000,-5.122082,-0.181032,0.075000,-6.270746,-0.361848,0.075000,-6.270746,-0.361848,0.075000,-6.292432,-0.181032,0.075000,-6.292432,-0.216052,0.075000,-8.864502,-0.191875,0.075000,-8.864502,-0.326681,0.075000,-8.589762,-0.350858,0.075000,-8.589762,-0.193780,0.075000,6.149688,-0.349247,0.075000,6.149688,-0.349247,0.075000,6.128003,-0.193780,0.075000,6.128003,-0.193780,0.075000,6.095473,-0.349247,0.075000,6.095473,-0.349247,0.075000,6.073787,-0.193780,0.075000,6.073787,-0.211803,0.075000,2.990804,-0.331077,0.075000,2.990804,-0.331077,0.075000,2.969119,-0.211803,0.075000,2.969119,-0.211803,0.075000,-5.981880,-0.331077,0.075000,-5.981880,-0.331077,0.075000,-6.003566,-0.211803,0.075000,-6.003566,-0.211803,0.075000,-6.762114,-0.331077,0.075000,-6.762114,-0.331077,0.075000,-6.783801,-0.211803,0.075000,-6.783801,-0.260597,0.075000,3.319525,-0.282283,0.075000,3.319525,-0.293126,0.075000,3.229118,-0.249754,0.075000,3.229118,-0.249754,0.075000,-0.050564,-0.293126,0.075000,-0.050564,-0.293126,0.075000,-0.093937,-0.249754,0.075000,-0.093937,-0.260597,0.075000,-0.581641,-0.282283,0.075000,-0.581641,-0.293126,0.075000,-0.672049,-0.249754,0.075000,-0.672049,-0.000070,0.075000,-6.270746,-0.180885,0.075000,-6.270746,-0.180885,0.075000,-6.292432,-0.000070,0.075000,-6.292432,-0.035090,0.075000,-6.133683,-0.010913,0.075000,-6.133683,-0.145719,0.075000,-5.858943,-0.169896,0.075000,-5.858943,-0.035090,0.075000,-9.254619,-0.010913,0.075000,-9.254619,-0.145719,0.075000,-8.979878,-0.169896,0.075000,-8.979878,-0.012817,0.075000,6.149688,-0.168284,0.075000,6.149688,-0.168284,0.075000,6.128003,-0.012817,0.075000,6.128003,-0.012817,0.075000,6.095473,-0.168284,0.075000,6.095473,-0.168284,0.075000,6.073787,-0.012817,0.075000,6.073787,-0.030840,0.075000,-6.762114,-0.150114,0.075000,-6.762114,-0.150114,0.075000,-6.783801,-0.030840,0.075000,-6.783801,-0.079634,0.075000,-8.774094,-0.101321,0.075000,-8.774094,-0.112164,0.075000,-8.864502,-0.068791,0.075000,-8.864502,-0.079634,0.075000,5.844558,-0.101321,0.075000,5.844558,-0.101321,0.075000,5.569818,-0.079634,0.075000,5.569818,-0.079634,0.075000,5.454442,-0.101321,0.075000,5.454442,-0.101321,0.075000,5.179701,-0.079634,0.075000,5.179701,-0.079634,0.075000,5.064325,-0.101321,0.075000,5.064325,-0.101321,0.075000,4.789584,-0.079634,0.075000,4.789584,-0.079634,0.075000,4.674209,-0.101321,0.075000,4.674209,-0.101321,0.075000,4.399468,-0.079634,0.075000,4.399468,-0.079634,0.075000,4.284092,-0.101321,0.075000,4.284092,-0.101321,0.075000,4.009351,-0.079634,0.075000,4.009351,-0.079634,0.075000,3.893975,-0.101321,0.075000,3.893975,-0.101321,0.075000,3.619235,-0.079634,0.075000,3.619235,-0.079634,0.075000,3.503859,-0.101321,0.075000,3.503859,-0.101321,0.075000,3.229118,-0.079634,0.075000,3.229118,-0.079634,0.075000,3.113741,-0.101321,0.075000,3.113741,-0.101321,0.075000,2.839001,-0.079634,0.075000,2.839001,-0.079634,0.075000,2.723625,-0.101321,0.075000,2.723625,-0.101321,0.075000,2.448884,-0.079634,0.075000,2.448884,-0.079634,0.075000,2.333508,-0.101321,0.075000,2.333508,-0.101321,0.075000,2.058768,-0.079634,0.075000,2.058768,-0.079634,0.075000,1.943392,-0.101321,0.075000,1.943392,-0.101321,0.075000,1.668651,-0.079634,0.075000,1.668651,-0.079634,0.075000,1.553275,-0.101321,0.075000,1.553275,-0.101321,0.075000,1.278535,-0.079634,0.075000,1.278535,-0.079634,0.075000,1.163159,-0.101321,0.075000,1.163159,-0.101321,0.075000,0.888418,-0.079634,0.075000,0.888418,-0.079634,0.075000,0.773042,-0.101321,0.075000,0.773042,-0.101321,0.075000,0.498301,-0.079634,0.075000,0.498301,-0.079634,0.075000,0.382925,-0.101321,0.075000,0.382925,-0.101321,0.075000,0.108184,-0.079634,0.075000,0.108184,-0.079634,0.075000,-0.007191,-0.101321,0.075000,-0.007191,-0.101321,0.075000,-0.281932,-0.079634,0.075000,-0.281932,-0.079634,0.075000,-0.397309,-0.101321,0.075000,-0.397309,-0.101321,0.075000,-0.672049,-0.079634,0.075000,-0.672049,-0.079634,0.075000,-0.787425,-0.101321,0.075000,-0.787425,-0.101321,0.075000,-1.062166,-0.079634,0.075000,-1.062166,-0.079634,0.075000,-1.177542,-0.101321,0.075000,-1.177542,-0.101321,0.075000,-1.452282,-0.079634,0.075000,-1.452282,-0.079634,0.075000,-1.567658,-0.101321,0.075000,-1.567658,-0.101321,0.075000,-1.842399,-0.079634,0.075000,-1.842399,-0.079634,0.075000,-1.957775,-0.101321,0.075000,-1.957775,-0.101321,0.075000,-2.232515,-0.079634,0.075000,-2.232515,-0.079634,0.075000,-2.347892,-0.101321,0.075000,-2.347892,-0.101321,0.075000,-2.622632,-0.079634,0.075000,-2.622632,-0.079634,0.075000,-2.738008,-0.101321,0.075000,-2.738008,-0.101321,0.075000,-3.012749,-0.079634,0.075000,-3.012749,-0.079634,0.075000,-3.128125,-0.101321,0.075000,-3.128125,-0.101321,0.075000,-3.402865,-0.079634,0.075000,-3.402865,-0.079634,0.075000,-3.518242,-0.101321,0.075000,-3.518242,-0.101321,0.075000,-3.792982,-0.079634,0.075000,-3.792982,-0.079634,0.075000,-3.908358,-0.101321,0.075000,-3.908358,-0.101321,0.075000,-4.183099,-0.079634,0.075000,-4.183099,-0.079634,0.075000,-4.298475,-0.101321,0.075000,-4.298475,-0.101321,0.075000,-4.573216,-0.079634,0.075000,-4.573216,-0.079634,0.075000,-4.688592,-0.101321,0.075000,-4.688592,-0.101321,0.075000,-4.963333,-0.079634,0.075000,-4.963333,-0.079634,0.075000,-5.078709,-0.101321,0.075000,-5.078709,-0.101321,0.075000,-5.353450,-0.079634,0.075000,-5.353450,-0.079634,0.075000,-5.468826,-0.101321,0.075000,-5.468826,-0.101321,0.075000,-5.743567,-0.079634,0.075000,-5.743567,0.180893,0.075000,-6.270746,0.000077,0.075000,-6.270746,0.000077,0.075000,-6.292432,0.180893,0.075000,-6.292432,0.169903,0.075000,-5.858943,0.145726,0.075000,-5.858943,0.010920,0.075000,-6.133683,0.035097,0.075000,-6.133683,0.169903,0.075000,-8.979878,0.145726,0.075000,-8.979878,0.010920,0.075000,-9.254619,0.035097,0.075000,-9.254619,0.168145,0.075000,6.149688,0.012678,0.075000,6.149688,0.012678,0.075000,6.128003,0.168145,0.075000,6.128003,0.168145,0.075000,6.095473,0.012678,0.075000,6.095473,0.012678,0.075000,6.073787,0.168145,0.075000,6.073787,0.150122,0.075000,-6.762114,0.030848,0.075000,-6.762114,0.030848,0.075000,-6.783801,0.150122,0.075000,-6.783801,0.101328,0.075000,-8.774094,0.079642,0.075000,-8.774094,0.068799,0.075000,-8.864502,0.112171,0.075000,-8.864502,0.101328,0.075000,5.844558,0.079642,0.075000,5.844558,0.079642,0.075000,5.569818,0.101328,0.075000,5.569818,0.101328,0.075000,5.454442,0.079642,0.075000,5.454442,0.079642,0.075000,5.179701,0.101328,0.075000,5.179701,0.101328,0.075000,5.064325,0.079642,0.075000,5.064325,0.079642,0.075000,4.789584,0.101328,0.075000,4.789584,0.101328,0.075000,4.674209,0.079642,0.075000,4.674209,0.079642,0.075000,4.399468,0.101328,0.075000,4.399468,0.101328,0.075000,4.284092,0.079642,0.075000,4.284092,0.079642,0.075000,4.009351,0.101328,0.075000,4.009351,0.101328,0.075000,3.893975,0.079642,0.075000,3.893975,0.079642,0.075000,3.619235,0.101328,0.075000,3.619235,0.101328,0.075000,3.503859,0.079642,0.075000,3.503859,0.079642,0.075000,3.229118,0.101328,0.075000,3.229118,0.101328,0.075000,3.113741,0.079642,0.075000,3.113741,0.079642,0.075000,2.839001,0.101328,0.075000,2.839001,0.101328,0.075000,2.723625,0.079642,0.075000,2.723625,0.079642,0.075000,2.448884,0.101328,0.075000,2.448884,0.101328,0.075000,2.333508,0.079642,0.075000,2.333508,0.079642,0.075000,2.058768,0.101328,0.075000,2.058768,0.101328,0.075000,1.943392,0.079642,0.075000,1.943392,0.079642,0.075000,1.668651,0.101328,0.075000,1.668651,0.101328,0.075000,1.553275,0.079642,0.075000,1.553275,0.079642,0.075000,1.278535,0.101328,0.075000,1.278535,0.101328,0.075000,1.163159,0.079642,0.075000,1.163159,0.079642,0.075000,0.888418,0.101328,0.075000,0.888418,0.101328,0.075000,0.773042,0.079642,0.075000,0.773042,0.079642,0.075000,0.498301,0.101328,0.075000,0.498301,0.101328,0.075000,0.382925,0.079642,0.075000,0.382925,0.079642,0.075000,0.108184,0.101328,0.075000,0.108184,0.101328,0.075000,-0.007191,0.079642,0.075000,-0.007191,0.079642,0.075000,-0.281932,0.101328,0.075000,-0.281932,0.101328,0.075000,-0.397309,0.079642,0.075000,-0.397309,0.079642,0.075000,-0.672049,0.101328,0.075000,-0.672049,0.101328,0.075000,-0.787425,0.079642,0.075000,-0.787425,0.079642,0.075000,-1.062166,0.101328,0.075000,-1.062166,0.101328,0.075000,-1.177542,0.079642,0.075000,-1.177542,0.079642,0.075000,-1.452282,0.101328,0.075000,-1.452282,0.101328,0.075000,-1.567658,0.079642,0.075000,-1.567658,0.079642,0.075000,-1.842399,0.101328,0.075000,-1.842399,0.101328,0.075000,-1.957775,0.079642,0.075000,-1.957775,0.079642,0.075000,-2.232515,0.101328,0.075000,-2.232515,0.101328,0.075000,-2.347892,0.079642,0.075000,-2.347892,0.079642,0.075000,-2.622632,0.101328,0.075000,-2.622632,0.101328,0.075000,-2.738008,0.079642,0.075000,-2.738008,0.079642,0.075000,-3.012749,0.101328,0.075000,-3.012749,0.101328,0.075000,-3.128125,0.079642,0.075000,-3.128125,0.079642,0.075000,-3.402865,0.101328,0.075000,-3.402865,0.101328,0.075000,-3.518242,0.079642,0.075000,-3.518242,0.079642,0.075000,-3.792982,0.101328,0.075000,-3.792982,0.101328,0.075000,-3.908358,0.079642,0.075000,-3.908358,0.079642,0.075000,-4.183099,0.101328,0.075000,-4.183099,0.101328,0.075000,-4.298475,0.079642,0.075000,-4.298475,0.079642,0.075000,-4.573216,0.101328,0.075000,-4.573216,0.101328,0.075000,-4.688592,0.079642,0.075000,-4.688592,0.079642,0.075000,-4.963333,0.101328,0.075000,-4.963333,0.101328,0.075000,-5.078709,0.079642,0.075000,-5.078709,0.079642,0.075000,-5.353450,0.101328,0.075000,-5.353450,0.101328,0.075000,-5.468826,0.079642,0.075000,-5.468826,0.079642,0.075000,-5.743567,0.101328,0.075000,-5.743567,0.361855,0.075000,5.822873,0.181040,0.075000,5.822873,0.181040,0.075000,5.801186,0.361855,0.075000,5.801186,0.361855,0.075000,4.262405,0.181040,0.075000,4.262405,0.181040,0.075000,4.240719,0.361855,0.075000,4.240719,0.361855,0.075000,3.872289,0.181040,0.075000,3.872289,0.181040,0.075000,3.850602,0.361855,0.075000,3.850602,0.361855,0.075000,2.701939,0.181040,0.075000,2.701939,0.181040,0.075000,2.680253,0.361855,0.075000,2.680253,0.361855,0.075000,0.361239,0.181040,0.075000,0.361239,0.181040,0.075000,0.339553,0.361855,0.075000,0.339553,0.361855,0.075000,-1.199228,0.181040,0.075000,-1.199228,0.181040,0.075000,-1.220914,0.361855,0.075000,-1.220914,0.361855,0.075000,-3.539928,0.181040,0.075000,-3.539928,0.181040,0.075000,-3.561614,0.361855,0.075000,-3.561614,0.361855,0.075000,-3.930044,0.181040,0.075000,-3.930044,0.181040,0.075000,-3.951731,0.361855,0.075000,-3.951731,0.361855,0.075000,-4.320161,0.181040,0.075000,-4.320161,0.181040,0.075000,-4.341848,0.361855,0.075000,-4.341848,0.361855,0.075000,-5.100395,0.181040,0.075000,-5.100395,0.181040,0.075000,-5.122082,0.361855,0.075000,-5.122082,0.361855,0.075000,-6.270746,0.181040,0.075000,-6.270746,0.181040,0.075000,-6.292432,0.361855,0.075000,-6.292432,0.350866,0.075000,-8.589762,0.326688,0.075000,-8.589762,0.191883,0.075000,-8.864502,0.216060,0.075000,-8.864502,0.349107,0.075000,6.149688,0.193641,0.075000,6.149688,0.193641,0.075000,6.128003,0.349107,0.075000,6.128003,0.349107,0.075000,6.095473,0.193641,0.075000,6.095473,0.193641,0.075000,6.073787,0.349107,0.075000,6.073787,0.331084,0.075000,2.990804,0.211810,0.075000,2.990804,0.211810,0.075000,2.969119,0.331084,0.075000,2.969119,0.331084,0.075000,-5.981880,0.211810,0.075000,-5.981880,0.211810,0.075000,-6.003566,0.331084,0.075000,-6.003566,0.331084,0.075000,-6.762114,0.211810,0.075000,-6.762114,0.211810,0.075000,-6.783801,0.331084,0.075000,-6.783801,0.282291,0.075000,3.319525,0.260604,0.075000,3.319525,0.249761,0.075000,3.229118,0.293134,0.075000,3.229118,0.293134,0.075000,-0.050564,0.249761,0.075000,-0.050564,0.249761,0.075000,-0.093937,0.293134,0.075000,-0.093937,0.282291,0.075000,-0.581641,0.260604,0.075000,-0.581641,0.249761,0.075000,-0.672049,0.293134,0.075000,-0.672049,0.542818,0.075000,5.822873,0.362002,0.075000,5.822873,0.362002,0.075000,5.801186,0.542818,0.075000,5.801186,0.542818,0.075000,4.262405,0.362002,0.075000,4.262405,0.362002,0.075000,4.240719,0.542818,0.075000,4.240719,0.542818,0.075000,3.872289,0.362002,0.075000,3.872289,0.362002,0.075000,3.850602,0.542818,0.075000,3.850602,0.542818,0.075000,-4.320161,0.362002,0.075000,-4.320161,0.362002,0.075000,-4.341848,0.542818,0.075000,-4.341848,0.542818,0.075000,-5.100395,0.362002,0.075000,-5.100395,0.362002,0.075000,-5.122082,0.542818,0.075000,-5.122082,0.542818,0.075000,-6.270746,0.362002,0.075000,-6.270746,0.362002,0.075000,-6.292432,0.542818,0.075000,-6.292432,0.531828,0.075000,-8.199645,0.507651,0.075000,-8.199645,0.372845,0.075000,-8.474385,0.397022,0.075000,-8.474385,0.530070,0.075000,6.149688,0.374603,0.075000,6.149688,0.374603,0.075000,6.128003,0.530070,0.075000,6.128003,0.530070,0.075000,6.095473,0.374603,0.075000,6.095473,0.374603,0.075000,6.073787,0.530070,0.075000,6.073787,0.512047,0.075000,2.990804,0.392773,0.075000,2.990804,0.392773,0.075000,2.969119,0.512047,0.075000,2.969119,0.512047,0.075000,-5.981880,0.392773,0.075000,-5.981880,0.392773,0.075000,-6.003566,0.512047,0.075000,-6.003566,0.512047,0.075000,-6.762114,0.392773,0.075000,-6.762114,0.392773,0.075000,-6.783801,0.512047,0.075000,-6.783801,0.463253,0.075000,3.319525,0.441567,0.075000,3.319525,0.430724,0.075000,3.229118,0.474096,0.075000,3.229118,0.463253,0.075000,-0.191524,0.441567,0.075000,-0.191524,0.430724,0.075000,-0.281932,0.474096,0.075000,-0.281932,0.474096,0.075000,-0.440681,0.430724,0.075000,-0.440681,0.430724,0.075000,-0.484053,0.474096,0.075000,-0.484053,0.474096,0.075000,-3.951731,0.430724,0.075000,-3.951731,0.430724,0.075000,-3.995103,0.474096,0.075000,-3.995103,0.463253,0.075000,-3.518242,0.441567,0.075000,-3.518242,0.441567,0.075000,-3.792982,0.463253,0.075000,-3.792982,0.723780,0.075000,3.872289,0.542964,0.075000,3.872289,0.542964,0.075000,3.850602,0.723780,0.075000,3.850602,0.723780,0.075000,-0.418995,0.542964,0.075000,-0.418995,0.542964,0.075000,-0.440681,0.723780,0.075000,-0.440681,0.723780,0.075000,-4.320161,0.542964,0.075000,-4.320161,0.542964,0.075000,-4.341848,0.723780,0.075000,-4.341848,0.723780,0.075000,-5.100395,0.542964,0.075000,-5.100395,0.542964,0.075000,-5.122082,0.723780,0.075000,-5.122082,0.723780,0.075000,-6.270746,0.542964,0.075000,-6.270746,0.542964,0.075000,-6.292432,0.723780,0.075000,-6.292432,0.712790,0.075000,4.284092,0.688613,0.075000,4.284092,0.553807,0.075000,4.009351,0.577984,0.075000,4.009351,0.712790,0.075000,-7.809527,0.688613,0.075000,-7.809527,0.553807,0.075000,-8.084269,0.577984,0.075000,-8.084269,0.579889,0.075000,3.026997,0.555566,0.075000,3.026997,0.633226,0.075000,2.853507,0.711032,0.075000,3.026997,0.686708,0.075000,3.026997,0.633226,0.075000,2.907576,0.693009,0.075000,-5.981880,0.573735,0.075000,-5.981880,0.573735,0.075000,-6.003566,0.693009,0.075000,-6.003566,0.693009,0.075000,-6.762114,0.573735,0.075000,-6.762114,0.573735,0.075000,-6.783801,0.693009,0.075000,-6.783801,0.644215,0.075000,6.050342,0.622529,0.075000,6.050342,0.611686,0.075000,5.959935,0.655058,0.075000,5.959935,0.644215,0.075000,3.319525,0.622529,0.075000,3.319525,0.611686,0.075000,3.229118,0.655058,0.075000,3.229118,0.655058,0.075000,2.680253,0.611686,0.075000,2.680253,0.611686,0.075000,2.636881,0.655058,0.075000,2.636881,0.644215,0.075000,0.588709,0.622529,0.075000,0.588709,0.611686,0.075000,0.498301,0.655058,0.075000,0.498301,0.655058,0.075000,-1.220914,0.611686,0.075000,-1.220914,0.611686,0.075000,-1.264286,0.655058,0.075000,-1.264286,0.644215,0.075000,-3.312458,0.622529,0.075000,-3.312458,0.611686,0.075000,-3.402865,0.655058,0.075000,-3.402865,0.644215,0.075000,-4.092690,0.622529,0.075000,-4.092690,0.611686,0.075000,-4.183099,0.655058,0.075000,-4.183099,0.904742,0.075000,3.482172,0.723927,0.075000,3.482172,0.723927,0.075000,3.460486,0.904742,0.075000,3.460486,0.904742,0.075000,-5.100395,0.723927,0.075000,-5.100395,0.723927,0.075000,-5.122082,0.904742,0.075000,-5.122082,0.904742,0.075000,-6.270746,0.723927,0.075000,-6.270746,0.723927,0.075000,-6.292432,0.904742,0.075000,-6.292432,0.893753,0.075000,3.893975,0.869576,0.075000,3.893975,0.734770,0.075000,3.619235,0.758947,0.075000,3.619235,0.893753,0.075000,-0.007191,0.869576,0.075000,-0.007191,0.734770,0.075000,-0.281932,0.758947,0.075000,-0.281932,0.893753,0.075000,-7.419411,0.869576,0.075000,-7.419411,0.734770,0.075000,-7.694151,0.758947,0.075000,-7.694151,0.869722,0.075000,-0.672049,0.893900,0.075000,-0.672049,0.759094,0.075000,-0.397309,0.734916,0.075000,-0.397309,0.873972,0.075000,2.990804,0.754698,0.075000,2.990804,0.754698,0.075000,2.969119,0.873972,0.075000,2.969119,0.873972,0.075000,-5.981880,0.754698,0.075000,-5.981880,0.754698,0.075000,-6.003566,0.873972,0.075000,-6.003566,0.873972,0.075000,-6.762114,0.754698,0.075000,-6.762114,0.754698,0.075000,-6.783801,0.873972,0.075000,-6.783801,0.825178,0.075000,2.539292,0.803491,0.075000,2.539292,0.792648,0.075000,2.448884,0.836021,0.075000,2.448884,0.836021,0.075000,0.729669,0.792648,0.075000,0.729669,0.792648,0.075000,0.686297,0.836021,0.075000,0.686297,0.825178,0.075000,-1.361874,0.803491,0.075000,-1.361874,0.792648,0.075000,-1.452282,0.836021,0.075000,-1.452282,0.836021,0.075000,-3.171497,0.792648,0.075000,-3.171497,0.792648,0.075000,-3.214870,0.836021,0.075000,-3.214870,0.825178,0.075000,-4.298475,0.803491,0.075000,-4.298475,0.803491,0.075000,-4.573216,0.825178,0.075000,-4.573216,0.825178,0.075000,-4.688592,0.803491,0.075000,-4.688592,0.803491,0.075000,-4.963333,0.825178,0.075000,-4.963333,1.085705,0.075000,2.701939,0.904889,0.075000,2.701939,0.904889,0.075000,2.680253,1.085705,0.075000,2.680253,1.085705,0.075000,-0.028878,0.904889,0.075000,-0.028878,0.904889,0.075000,-0.050564,1.085705,0.075000,-0.050564,1.085705,0.075000,-0.809111,0.904889,0.075000,-0.809111,0.904889,0.075000,-0.830797,1.085705,0.075000,-0.830797,1.074715,0.075000,3.503859,1.050539,0.075000,3.503859,0.915732,0.075000,3.229118,0.939910,0.075000,3.229118,1.074715,0.075000,1.163159,1.050539,0.075000,1.163159,0.915732,0.075000,0.888418,0.939910,0.075000,0.888418,1.074715,0.075000,-2.738008,1.050539,0.075000,-2.738008,0.915732,0.075000,-3.012749,0.939910,0.075000,-3.012749,1.074715,0.075000,-5.858943,1.050539,0.075000,-5.858943,0.915732,0.075000,-6.133683,0.939910,0.075000,-6.133683,1.074715,0.075000,-7.029294,1.050539,0.075000,-7.029294,0.915732,0.075000,-7.304034,0.939910,0.075000,-7.304034,1.050685,0.075000,2.058768,1.074862,0.075000,2.058768,0.940056,0.075000,2.333508,0.915879,0.075000,2.333508,1.050685,0.075000,-1.842399,1.074862,0.075000,-1.842399,0.940056,0.075000,-1.567658,0.915879,0.075000,-1.567658,1.054934,0.075000,2.990804,0.935660,0.075000,2.990804,0.935660,0.075000,2.969119,1.054934,0.075000,2.969119,1.054934,0.075000,-6.762114,0.935660,0.075000,-6.762114,0.935660,0.075000,-6.783801,1.054934,0.075000,-6.783801,1.006140,0.075000,-5.078709,0.984454,0.075000,-5.078709,0.984454,0.075000,-5.353450,1.006140,0.075000,-5.353450,1.006140,0.075000,-5.468826,0.984454,0.075000,-5.468826,0.984454,0.075000,-5.743567,1.006140,0.075000,-5.743567,1.006140,0.075000,-6.249060,0.984454,0.075000,-6.249060,0.984454,0.075000,-6.523801,1.006140,0.075000,-6.523801,1.266668,0.075000,2.701939,1.085852,0.075000,2.701939,1.085852,0.075000,2.680253,1.266668,0.075000,2.680253,1.255678,0.075000,-0.397309,1.231501,0.075000,-0.397309,1.096695,0.075000,-0.672049,1.120872,0.075000,-0.672049,1.255678,0.075000,-5.078709,1.231501,0.075000,-5.078709,1.096695,0.075000,-5.353450,1.120872,0.075000,-5.353450,1.255678,0.075000,-5.468826,1.231501,0.075000,-5.468826,1.096695,0.075000,-5.743567,1.120872,0.075000,-5.743567,1.231647,0.075000,-0.281932,1.255824,0.075000,-0.281932,1.121018,0.075000,-0.007191,1.096841,0.075000,-0.007191,1.187103,0.075000,3.319525,1.165417,0.075000,3.319525,1.154573,0.075000,3.229118,1.197946,0.075000,3.229118,1.197946,0.075000,3.070369,1.154573,0.075000,3.070369,1.154573,0.075000,3.026997,1.197946,0.075000,3.026997,1.187103,0.075000,-6.823509,1.165417,0.075000,-6.823509,1.154573,0.075000,-6.913918,1.197946,0.075000,-6.913918,1.187103,0.075000,1.943392,1.165417,0.075000,1.943392,1.165417,0.075000,1.668651,1.187103,0.075000,1.668651,1.187103,0.075000,1.553275,1.165417,0.075000,1.553275,1.165417,0.075000,1.278535,1.187103,0.075000,1.278535,1.187103,0.075000,-1.957775,1.165417,0.075000,-1.957775,1.165417,0.075000,-2.232515,1.187103,0.075000,-2.232515,1.187103,0.075000,-2.347892,1.165417,0.075000,-2.347892,1.165417,0.075000,-2.622632,1.187103,0.075000,-2.622632,1.447630,0.075000,3.092056,1.266814,0.075000,3.092056,1.266814,0.075000,3.070369,1.447630,0.075000,3.070369,1.436640,0.075000,-4.688592,1.412463,0.075000,-4.688592,1.277657,0.075000,-4.963333,1.301834,0.075000,-4.963333,1.436640,0.075000,-5.078709,1.412463,0.075000,-5.078709,1.277657,0.075000,-5.353450,1.301834,0.075000,-5.353450,1.378908,0.075000,3.460486,1.335536,0.075000,3.460486,1.335536,0.075000,3.417114,1.378908,0.075000,3.417114,1.368065,0.075000,2.723625,1.346379,0.075000,2.723625,1.346379,0.075000,2.448884,1.368065,0.075000,2.448884,1.368065,0.075000,2.333508,1.346379,0.075000,2.333508,1.346379,0.075000,2.058768,1.368065,0.075000,2.058768,1.368065,0.075000,1.943392,1.346379,0.075000,1.943392,1.346379,0.075000,1.668651,1.368065,0.075000,1.668651,1.368065,0.075000,1.553275,1.346379,0.075000,1.553275,1.346379,0.075000,1.278535,1.368065,0.075000,1.278535,1.368065,0.075000,1.163159,1.346379,0.075000,1.163159,1.346379,0.075000,0.888418,1.368065,0.075000,0.888418,1.368065,0.075000,0.773042,1.346379,0.075000,0.773042,1.346379,0.075000,0.498301,1.368065,0.075000,0.498301,1.368065,0.075000,0.382925,1.346379,0.075000,0.382925,1.346379,0.075000,0.108184,1.368065,0.075000,0.108184,1.368065,0.075000,-0.007191,1.346379,0.075000,-0.007191,1.346379,0.075000,-0.281932,1.368065,0.075000,-0.281932,1.368065,0.075000,-0.397309,1.346379,0.075000,-0.397309,1.346379,0.075000,-0.672049,1.368065,0.075000,-0.672049,1.368065,0.075000,-0.787425,1.346379,0.075000,-0.787425,1.346379,0.075000,-1.062166,1.368065,0.075000,-1.062166,1.368065,0.075000,-1.177542,1.346379,0.075000,-1.177542,1.346379,0.075000,-1.452282,1.368065,0.075000,-1.452282,1.368065,0.075000,-1.567658,1.346379,0.075000,-1.567658,1.346379,0.075000,-1.842399,1.368065,0.075000,-1.842399,1.368065,0.075000,-1.957775,1.346379,0.075000,-1.957775,1.346379,0.075000,-2.232515,1.368065,0.075000,-2.232515,1.368065,0.075000,-2.347892,1.346379,0.075000,-2.347892,1.346379,0.075000,-2.622632,1.368065,0.075000,-2.622632,1.368065,0.075000,-2.738008,1.346379,0.075000,-2.738008,1.346379,0.075000,-3.012749,1.368065,0.075000,-3.012749,1.368065,0.075000,-3.128125,1.346379,0.075000,-3.128125,1.346379,0.075000,-3.402865,1.368065,0.075000,-3.402865,1.368065,0.075000,-3.518242,1.346379,0.075000,-3.518242,1.346379,0.075000,-3.792982,1.368065,0.075000,-3.792982,1.368065,0.075000,-3.908358,1.346379,0.075000,-3.908358,1.346379,0.075000,-4.183099,1.368065,0.075000,-4.183099,1.368065,0.075000,-4.298475,1.346379,0.075000,-4.298475,1.346379,0.075000,-4.573216,1.368065,0.075000,-4.573216,1.617602,0.075000,3.893975,1.593426,0.075000,3.893975,1.458619,0.075000,3.619235,1.482797,0.075000,3.619235,1.617602,0.075000,-4.688592,1.593426,0.075000,-4.688592,1.458619,0.075000,-4.963333,1.482797,0.075000,-4.963333,1.559870,0.075000,1.119786,1.516498,0.075000,1.119786,1.516498,0.075000,1.076414,1.559870,0.075000,1.076414,1.549028,0.075000,3.113741,1.527341,0.075000,3.113741,1.527341,0.075000,2.839001,1.549028,0.075000,2.839001,1.549028,0.075000,2.723625,1.527341,0.075000,2.723625,1.527341,0.075000,2.448884,1.549028,0.075000,2.448884,1.549028,0.075000,2.333508,1.527341,0.075000,2.333508,1.527341,0.075000,2.058768,1.549028,0.075000,2.058768,1.549028,0.075000,1.943392,1.527341,0.075000,1.943392,1.527341,0.075000,1.668651,1.549028,0.075000,1.668651,1.549028,0.075000,1.553275,1.527341,0.075000,1.553275,1.527341,0.075000,1.278535,1.549028,0.075000,1.278535,1.798565,0.075000,4.284092,1.774388,0.075000,4.284092,1.639582,0.075000,4.009351,1.663759,0.075000,4.009351,1.798565,0.075000,3.503859,1.774388,0.075000,3.503859,1.639582,0.075000,3.229118,1.663759,0.075000,3.229118,1.798565,0.075000,-4.298475,1.774388,0.075000,-4.298475,1.639582,0.075000,-4.573216,1.663759,0.075000,-4.573216,1.774535,0.075000,2.448884,1.798711,0.075000,2.448884,1.663906,0.075000,2.723625,1.639728,0.075000,2.723625,1.729990,0.075000,0.978826,1.708304,0.075000,0.978826,1.697460,0.075000,0.888418,1.740833,0.075000,0.888418,1.729990,0.075000,0.773042,1.708304,0.075000,0.773042,1.708304,0.075000,0.498301,1.729990,0.075000,0.498301,1.729990,0.075000,0.382925,1.708304,0.075000,0.382925,1.708304,0.075000,0.108184,1.729990,0.075000,0.108184,1.729990,0.075000,-0.007191,1.708304,0.075000,-0.007191,1.708304,0.075000,-0.281932,1.729990,0.075000,-0.281932,1.729990,0.075000,-0.397309,1.708304,0.075000,-0.397309,1.708304,0.075000,-0.672049,1.729990,0.075000,-0.672049,1.729990,0.075000,-0.787425,1.708304,0.075000,-0.787425,1.708304,0.075000,-1.062166,1.729990,0.075000,-1.062166,1.729990,0.075000,-1.177542,1.708304,0.075000,-1.177542,1.708304,0.075000,-1.452282,1.729990,0.075000,-1.452282,1.729990,0.075000,-1.567658,1.708304,0.075000,-1.567658,1.708304,0.075000,-1.842399,1.729990,0.075000,-1.842399,1.729990,0.075000,-1.957775,1.708304,0.075000,-1.957775,1.708304,0.075000,-2.232515,1.729990,0.075000,-2.232515,1.729990,0.075000,-2.347892,1.708304,0.075000,-2.347892,1.708304,0.075000,-2.622632,1.729990,0.075000,-2.622632,1.729990,0.075000,-2.738008,1.708304,0.075000,-2.738008,1.708304,0.075000,-3.012749,1.729990,0.075000,-3.012749,1.729990,0.075000,-3.128125,1.708304,0.075000,-3.128125,1.708304,0.075000,-3.402865,1.729990,0.075000,-3.402865,1.729990,0.075000,-3.518242,1.708304,0.075000,-3.518242,1.708304,0.075000,-3.792982,1.729990,0.075000,-3.792982,1.729990,0.075000,-3.908358,1.708304,0.075000,-3.908358,1.708304,0.075000,-4.183099,1.729990,0.075000,-4.183099,1.979528,0.075000,4.674209,1.955350,0.075000,4.674209,1.820544,0.075000,4.399468,1.844721,0.075000,4.399468,1.979528,0.075000,3.893975,1.955350,0.075000,3.893975,1.820544,0.075000,3.619235,1.844721,0.075000,3.619235,1.979528,0.075000,2.723625,1.955350,0.075000,2.723625,1.820544,0.075000,2.448884,1.844721,0.075000,2.448884,1.979528,0.075000,0.773042,1.955350,0.075000,0.773042,1.820544,0.075000,0.498301,1.844721,0.075000,0.498301,2.171479,0.075000,2.701939,1.990664,0.075000,2.701939,1.990664,0.075000,2.680253,2.171479,0.075000,2.680253,2.160490,0.075000,4.284092,2.136313,0.075000,4.284092,2.001507,0.075000,4.009351,2.025684,0.075000,4.009351,2.160490,0.075000,1.163159,2.136313,0.075000,1.163159,2.001507,0.075000,0.888418,2.025684,0.075000,0.888418,2.091915,0.075000,4.879992,2.070228,0.075000,4.879992,2.059386,0.075000,4.789584,2.102757,0.075000,4.789584,2.352442,0.075000,2.701939,2.171626,0.075000,2.701939,2.171626,0.075000,2.680253,2.352442,0.075000,2.680253,2.341452,0.075000,4.674209,2.317275,0.075000,4.674209,2.182469,0.075000,4.399468,2.206646,0.075000,4.399468,2.341452,0.075000,1.553275,2.317275,0.075000,1.553275,2.182469,0.075000,1.278535,2.206646,0.075000,1.278535,2.272877,0.075000,6.050342,2.251191,0.075000,6.050342,2.240348,0.075000,5.959935,2.283720,0.075000,5.959935,2.283720,0.075000,5.020953,2.240348,0.075000,5.020953,2.240348,0.075000,4.977580,2.283720,0.075000,4.977580,2.533404,0.075000,5.822873,2.352588,0.075000,5.822873,2.352588,0.075000,5.801186,2.533404,0.075000,5.801186,2.533404,0.075000,2.701939,2.352588,0.075000,2.701939,2.352588,0.075000,2.680253,2.533404,0.075000,2.680253,2.522415,0.075000,5.454442,2.498238,0.075000,5.454442,2.363432,0.075000,5.179701,2.387609,0.075000,5.179701,2.522415,0.075000,5.064325,2.498238,0.075000,5.064325,2.363432,0.075000,4.789584,2.387609,0.075000,4.789584,2.522415,0.075000,1.943392,2.498238,0.075000,1.943392,2.363432,0.075000,1.668651,2.387609,0.075000,1.668651,2.520656,0.075000,6.149688,2.365190,0.075000,6.149688,2.365190,0.075000,6.128003,2.520656,0.075000,6.128003,2.520656,0.075000,6.095473,2.365190,0.075000,6.095473,2.365190,0.075000,6.073787,2.520656,0.075000,6.073787,2.714367,0.075000,2.701939,2.533551,0.075000,2.701939,2.533551,0.075000,2.680253,2.714367,0.075000,2.680253,2.703377,0.075000,5.844558,2.679200,0.075000,5.844558,2.544394,0.075000,5.569818,2.568571,0.075000,5.569818,2.703377,0.075000,5.454442,2.679200,0.075000,5.454442,2.544394,0.075000,5.179701,2.568571,0.075000,5.179701,2.703377,0.075000,2.333508,2.679200,0.075000,2.333508,2.544394,0.075000,2.058768,2.568571,0.075000,2.058768,2.701619,0.075000,6.149688,2.546153,0.075000,6.149688,2.546153,0.075000,6.128003,2.701619,0.075000,6.128003,2.701619,0.075000,6.095473,2.546153,0.075000,6.095473,2.546153,0.075000,6.073787,2.701619,0.075000,6.073787,2.884340,0.075000,5.844558,2.860162,0.075000,5.844558,2.725356,0.075000,5.569818,2.749534,0.075000,5.569818,2.884340,0.075000,2.723625,2.860162,0.075000,2.723625,2.725356,0.075000,2.448884,2.749534,0.075000,2.448884,2.882581,0.075000,6.149688,2.727115,0.075000,6.149688,2.727115,0.075000,6.128003,2.882581,0.075000,6.128003,2.882581,0.075000,6.095473,2.727115,0.075000,6.095473,2.727115,0.075000,6.073787,2.882581,0.075000,6.073787,3.076292,0.075000,5.822873,2.895476,0.075000,5.822873,2.895476,0.075000,5.801186,3.076292,0.075000,5.801186,3.063544,0.075000,6.149688,2.908077,0.075000,6.149688,2.908077,0.075000,6.128003,3.063544,0.075000,6.128003,3.063544,0.075000,6.095473,2.908077,0.075000,6.095473,2.908077,0.075000,6.073787,3.063544,0.075000,6.073787,3.257254,0.075000,5.822873,3.076438,0.075000,5.822873,3.076438,0.075000,5.801186,3.257254,0.075000,5.801186,3.244506,0.075000,6.149688,3.089040,0.075000,6.149688,3.089040,0.075000,6.128003,3.244506,0.075000,6.128003,3.244506,0.075000,6.095473,3.089040,0.075000,6.095473,3.089040,0.075000,6.073787,3.244506,0.075000,6.073787,3.358652,-0.075000,6.050342,3.336966,-0.075000,6.050342,3.326123,-0.075000,5.959935,3.369495,-0.075000,5.959935,-3.336958,-0.075000,6.050342,-3.358644,-0.075000,6.050342,-3.369488,-0.075000,5.959935,-3.326115,-0.075000,5.959935,-3.076431,-0.075000,5.822873,-3.257247,-0.075000,5.822873,-3.257247,-0.075000,5.801186,-3.076431,-0.075000,5.801186,-3.089179,-0.075000,6.149688,-3.244645,-0.075000,6.149688,-3.244645,-0.075000,6.128003,-3.089179,-0.075000,6.128003,-3.089179,-0.075000,6.095473,-3.244645,-0.075000,6.095473,-3.244645,-0.075000,6.073787,-3.089179,-0.075000,6.073787,-2.895468,-0.075000,5.822873,-3.076284,-0.075000,5.822873,-3.076284,-0.075000,5.801186,-2.895468,-0.075000,5.801186,-2.908216,-0.075000,6.149688,-3.063683,-0.075000,6.149688,-3.063683,-0.075000,6.128003,-2.908216,-0.075000,6.128003,-2.908216,-0.075000,6.095473,-3.063683,-0.075000,6.095473,-3.063683,-0.075000,6.073787,-2.908216,-0.075000,6.073787,-2.749526,-0.075000,5.569818,-2.725349,-0.075000,5.569818,-2.860155,-0.075000,5.844558,-2.884332,-0.075000,5.844558,-2.749526,-0.075000,2.448884,-2.725349,-0.075000,2.448884,-2.860155,-0.075000,2.723625,-2.884332,-0.075000,2.723625,-2.727254,-0.075000,6.149688,-2.882720,-0.075000,6.149688,-2.882720,-0.075000,6.128003,-2.727254,-0.075000,6.128003,-2.727254,-0.075000,6.095473,-2.882720,-0.075000,6.095473,-2.882720,-0.075000,6.073787,-2.727254,-0.075000,6.073787,-2.533544,-0.075000,2.701939,-2.714360,-0.075000,2.701939,-2.714360,-0.075000,2.680253,-2.533544,-0.075000,2.680253,-2.568564,-0.075000,5.569818,-2.544387,-0.075000,5.569818,-2.679193,-0.075000,5.844558,-2.703370,-0.075000,5.844558,-2.568564,-0.075000,5.179701,-2.544387,-0.075000,5.179701,-2.679193,-0.075000,5.454442,-2.703370,-0.075000,5.454442,-2.568564,-0.075000,2.058768,-2.544387,-0.075000,2.058768,-2.679193,-0.075000,2.333508,-2.703370,-0.075000,2.333508,-2.546292,-0.075000,6.149688,-2.701758,-0.075000,6.149688,-2.701758,-0.075000,6.128003,-2.546292,-0.075000,6.128003,-2.546292,-0.075000,6.095473,-2.701758,-0.075000,6.095473,-2.701758,-0.075000,6.073787,-2.546292,-0.075000,6.073787,-2.352581,-0.075000,5.822873,-2.533397,-0.075000,5.822873,-2.533397,-0.075000,5.801186,-2.352581,-0.075000,5.801186,-2.352581,-0.075000,2.701939,-2.533397,-0.075000,2.701939,-2.533397,-0.075000,2.680253,-2.352581,-0.075000,2.680253,-2.387601,-0.075000,5.179701,-2.363424,-0.075000,5.179701,-2.498230,-0.075000,5.454442,-2.522407,-0.075000,5.454442,-2.387601,-0.075000,4.789584,-2.363424,-0.075000,4.789584,-2.498230,-0.075000,5.064325,-2.522407,-0.075000,5.064325,-2.387601,-0.075000,1.668651,-2.363424,-0.075000,1.668651,-2.498230,-0.075000,1.943392,-2.522407,-0.075000,1.943392,-2.365329,-0.075000,6.149688,-2.520796,-0.075000,6.149688,-2.520796,-0.075000,6.128003,-2.365329,-0.075000,6.128003,-2.365329,-0.075000,6.095473,-2.520796,-0.075000,6.095473,-2.520796,-0.075000,6.073787,-2.365329,-0.075000,6.073787,-2.171619,-0.075000,2.701939,-2.352435,-0.075000,2.701939,-2.352435,-0.075000,2.680253,-2.171619,-0.075000,2.680253,-2.206639,-0.075000,4.399468,-2.182462,-0.075000,4.399468,-2.317268,-0.075000,4.674209,-2.341445,-0.075000,4.674209,-2.206639,-0.075000,1.278535,-2.182462,-0.075000,1.278535,-2.317268,-0.075000,1.553275,-2.341445,-0.075000,1.553275,-2.251184,-0.075000,6.050342,-2.272870,-0.075000,6.050342,-2.283713,-0.075000,5.959935,-2.240340,-0.075000,5.959935,-2.240340,-0.075000,5.020953,-2.283713,-0.075000,5.020953,-2.283713,-0.075000,4.977580,-2.240340,-0.075000,4.977580,-1.990656,-0.075000,2.701939,-2.171472,-0.075000,2.701939,-2.171472,-0.075000,2.680253,-1.990656,-0.075000,2.680253,-2.025676,-0.075000,4.009351,-2.001499,-0.075000,4.009351,-2.136305,-0.075000,4.284092,-2.160483,-0.075000,4.284092,-2.025676,-0.075000,0.888418,-2.001499,-0.075000,0.888418,-2.136305,-0.075000,1.163159,-2.160483,-0.075000,1.163159,-2.070221,-0.075000,4.879992,-2.091907,-0.075000,4.879992,-2.102750,-0.075000,4.789584,-2.059378,-0.075000,4.789584,-1.844714,-0.075000,4.399468,-1.820537,-0.075000,4.399468,-1.955343,-0.075000,4.674209,-1.979520,-0.075000,4.674209,-1.844714,-0.075000,3.619235,-1.820537,-0.075000,3.619235,-1.955343,-0.075000,3.893975,-1.979520,-0.075000,3.893975,-1.844714,-0.075000,2.448884,-1.820537,-0.075000,2.448884,-1.955343,-0.075000,2.723625,-1.979520,-0.075000,2.723625,-1.844714,-0.075000,0.498301,-1.820537,-0.075000,0.498301,-1.955343,-0.075000,0.773042,-1.979520,-0.075000,0.773042,-1.639721,-0.075000,2.723625,-1.663898,-0.075000,2.723625,-1.798704,-0.075000,2.448884,-1.774527,-0.075000,2.448884,-1.663752,-0.075000,4.009351,-1.639575,-0.075000,4.009351,-1.774380,-0.075000,4.284092,-1.798558,-0.075000,4.284092,-1.663752,-0.075000,3.229118,-1.639575,-0.075000,3.229118,-1.774380,-0.075000,3.503859,-1.798558,-0.075000,3.503859,-1.663752,-0.075000,-4.573216,-1.639575,-0.075000,-4.573216,-1.774380,-0.075000,-4.298475,-1.798558,-0.075000,-4.298475,-1.708296,-0.075000,0.978826,-1.729982,-0.075000,0.978826,-1.740826,-0.075000,0.888418,-1.697453,-0.075000,0.888418,-1.708296,-0.075000,0.773042,-1.729982,-0.075000,0.773042,-1.729982,-0.075000,0.498301,-1.708296,-0.075000,0.498301,-1.708296,-0.075000,0.382925,-1.729982,-0.075000,0.382925,-1.729982,-0.075000,0.108184,-1.708296,-0.075000,0.108184,-1.708296,-0.075000,-0.007191,-1.729982,-0.075000,-0.007191,-1.729982,-0.075000,-0.281932,-1.708296,-0.075000,-0.281932,-1.708296,-0.075000,-0.397309,-1.729982,-0.075000,-0.397309,-1.729982,-0.075000,-0.672049,-1.708296,-0.075000,-0.672049,-1.708296,-0.075000,-0.787425,-1.729982,-0.075000,-0.787425,-1.729982,-0.075000,-1.062166,-1.708296,-0.075000,-1.062166,-1.708296,-0.075000,-1.177542,-1.729982,-0.075000,-1.177542,-1.729982,-0.075000,-1.452282,-1.708296,-0.075000,-1.452282,-1.708296,-0.075000,-1.567658,-1.729982,-0.075000,-1.567658,-1.729982,-0.075000,-1.842399,-1.708296,-0.075000,-1.842399,-1.708296,-0.075000,-1.957775,-1.729982,-0.075000,-1.957775,-1.729982,-0.075000,-2.232515,-1.708296,-0.075000,-2.232515,-1.708296,-0.075000,-2.347892,-1.729982,-0.075000,-2.347892,-1.729982,-0.075000,-2.622632,-1.708296,-0.075000,-2.622632,-1.708296,-0.075000,-2.738008,-1.729982,-0.075000,-2.738008,-1.729982,-0.075000,-3.012749,-1.708296,-0.075000,-3.012749,-1.708296,-0.075000,-3.128125,-1.729982,-0.075000,-3.128125,-1.729982,-0.075000,-3.402865,-1.708296,-0.075000,-3.402865,-1.708296,-0.075000,-3.518242,-1.729982,-0.075000,-3.518242,-1.729982,-0.075000,-3.792982,-1.708296,-0.075000,-3.792982,-1.708296,-0.075000,-3.908358,-1.729982,-0.075000,-3.908358,-1.729982,-0.075000,-4.183099,-1.708296,-0.075000,-4.183099,-1.482789,-0.075000,3.619235,-1.458612,-0.075000,3.619235,-1.593418,-0.075000,3.893975,-1.617595,-0.075000,3.893975,-1.482789,-0.075000,-4.963333,-1.458612,-0.075000,-4.963333,-1.593418,-0.075000,-4.688592,-1.617595,-0.075000,-4.688592,-1.516491,-0.075000,1.119786,-1.559863,-0.075000,1.119786,-1.559863,-0.075000,1.076414,-1.516491,-0.075000,1.076414,-1.527334,-0.075000,3.113741,-1.549020,-0.075000,3.113741,-1.549020,-0.075000,2.839001,-1.527334,-0.075000,2.839001,-1.527334,-0.075000,2.723625,-1.549020,-0.075000,2.723625,-1.549020,-0.075000,2.448884,-1.527334,-0.075000,2.448884,-1.527334,-0.075000,2.333508,-1.549020,-0.075000,2.333508,-1.549020,-0.075000,2.058768,-1.527334,-0.075000,2.058768,-1.527334,-0.075000,1.943392,-1.549020,-0.075000,1.943392,-1.549020,-0.075000,1.668651,-1.527334,-0.075000,1.668651,-1.527334,-0.075000,1.553275,-1.549020,-0.075000,1.553275,-1.549020,-0.075000,1.278535,-1.527334,-0.075000,1.278535,-1.266807,-0.075000,3.092056,-1.447622,-0.075000,3.092056,-1.447622,-0.075000,3.070369,-1.266807,-0.075000,3.070369,-1.301827,-0.075000,-4.963333,-1.277650,-0.075000,-4.963333,-1.412456,-0.075000,-4.688592,-1.436633,-0.075000,-4.688592,-1.301827,-0.075000,-5.353450,-1.277650,-0.075000,-5.353450,-1.412456,-0.075000,-5.078709,-1.436633,-0.075000,-5.078709,-1.335528,-0.075000,3.460486,-1.378901,-0.075000,3.460486,-1.378901,-0.075000,3.417114,-1.335528,-0.075000,3.417114,-1.346371,-0.075000,2.723625,-1.368058,-0.075000,2.723625,-1.368058,-0.075000,2.448884,-1.346371,-0.075000,2.448884,-1.346371,-0.075000,2.333508,-1.368058,-0.075000,2.333508,-1.368058,-0.075000,2.058768,-1.346371,-0.075000,2.058768,-1.346371,-0.075000,1.943392,-1.368058,-0.075000,1.943392,-1.368058,-0.075000,1.668651,-1.346371,-0.075000,1.668651,-1.346371,-0.075000,1.553275,-1.368058,-0.075000,1.553275,-1.368058,-0.075000,1.278535,-1.346371,-0.075000,1.278535,-1.346371,-0.075000,1.163159,-1.368058,-0.075000,1.163159,-1.368058,-0.075000,0.888418,-1.346371,-0.075000,0.888418,-1.346371,-0.075000,0.773042,-1.368058,-0.075000,0.773042,-1.368058,-0.075000,0.498301,-1.346371,-0.075000,0.498301,-1.346371,-0.075000,0.382925,-1.368058,-0.075000,0.382925,-1.368058,-0.075000,0.108184,-1.346371,-0.075000,0.108184,-1.346371,-0.075000,-0.007191,-1.368058,-0.075000,-0.007191,-1.368058,-0.075000,-0.281932,-1.346371,-0.075000,-0.281932,-1.346371,-0.075000,-0.397309,-1.368058,-0.075000,-0.397309,-1.368058,-0.075000,-0.672049,-1.346371,-0.075000,-0.672049,-1.346371,-0.075000,-0.787425,-1.368058,-0.075000,-0.787425,-1.368058,-0.075000,-1.062166,-1.346371,-0.075000,-1.062166,-1.346371,-0.075000,-1.177542,-1.368058,-0.075000,-1.177542,-1.368058,-0.075000,-1.452282,-1.346371,-0.075000,-1.452282,-1.346371,-0.075000,-1.567658,-1.368058,-0.075000,-1.567658,-1.368058,-0.075000,-1.842399,-1.346371,-0.075000,-1.842399,-1.346371,-0.075000,-1.957775,-1.368058,-0.075000,-1.957775,-1.368058,-0.075000,-2.232515,-1.346371,-0.075000,-2.232515,-1.346371,-0.075000,-2.347892,-1.368058,-0.075000,-2.347892,-1.368058,-0.075000,-2.622632,-1.346371,-0.075000,-2.622632,-1.346371,-0.075000,-2.738008,-1.368058,-0.075000,-2.738008,-1.368058,-0.075000,-3.012749,-1.346371,-0.075000,-3.012749,-1.346371,-0.075000,-3.128125,-1.368058,-0.075000,-3.128125,-1.368058,-0.075000,-3.402865,-1.346371,-0.075000,-3.402865,-1.346371,-0.075000,-3.518242,-1.368058,-0.075000,-3.518242,-1.368058,-0.075000,-3.792982,-1.346371,-0.075000,-3.792982,-1.346371,-0.075000,-3.908358,-1.368058,-0.075000,-3.908358,-1.368058,-0.075000,-4.183099,-1.346371,-0.075000,-4.183099,-1.346371,-0.075000,-4.298475,-1.368058,-0.075000,-4.298475,-1.368058,-0.075000,-4.573216,-1.346371,-0.075000,-4.573216,-1.085844,-0.075000,2.701939,-1.266660,-0.075000,2.701939,-1.266660,-0.075000,2.680253,-1.085844,-0.075000,2.680253,-1.096834,-0.075000,-0.007191,-1.121011,-0.075000,-0.007191,-1.255817,-0.075000,-0.281932,-1.231640,-0.075000,-0.281932,-1.120864,-0.075000,-0.672049,-1.096687,-0.075000,-0.672049,-1.231493,-0.075000,-0.397309,-1.255670,-0.075000,-0.397309,-1.120864,-0.075000,-5.353450,-1.096687,-0.075000,-5.353450,-1.231493,-0.075000,-5.078709,-1.255670,-0.075000,-5.078709,-1.120864,-0.075000,-5.743567,-1.096687,-0.075000,-5.743567,-1.231493,-0.075000,-5.468826,-1.255670,-0.075000,-5.468826,-1.165409,-0.075000,3.319525,-1.187095,-0.075000,3.319525,-1.197938,-0.075000,3.229118,-1.154566,-0.075000,3.229118,-1.154566,-0.075000,3.070369,-1.197938,-0.075000,3.070369,-1.197938,-0.075000,3.026997,-1.154566,-0.075000,3.026997,-1.165409,-0.075000,-6.823509,-1.187095,-0.075000,-6.823509,-1.197938,-0.075000,-6.913918,-1.154566,-0.075000,-6.913918,-1.165409,-0.075000,1.943392,-1.187095,-0.075000,1.943392,-1.187095,-0.075000,1.668651,-1.165409,-0.075000,1.668651,-1.165409,-0.075000,1.553275,-1.187095,-0.075000,1.553275,-1.187095,-0.075000,1.278535,-1.165409,-0.075000,1.278535,-1.165409,-0.075000,-1.957775,-1.187095,-0.075000,-1.957775,-1.187095,-0.075000,-2.232515,-1.165409,-0.075000,-2.232515,-1.165409,-0.075000,-2.347892,-1.187095,-0.075000,-2.347892,-1.187095,-0.075000,-2.622632,-1.165409,-0.075000,-2.622632,-0.904882,-0.075000,2.701939,-1.085698,-0.075000,2.701939,-1.085698,-0.075000,2.680253,-0.904882,-0.075000,2.680253,-0.904882,-0.075000,-0.028878,-1.085698,-0.075000,-0.028878,-1.085698,-0.075000,-0.050564,-0.904882,-0.075000,-0.050564,-0.904882,-0.075000,-0.809111,-1.085698,-0.075000,-0.809111,-1.085698,-0.075000,-0.830797,-0.904882,-0.075000,-0.830797,-0.915871,-0.075000,2.333508,-0.940048,-0.075000,2.333508,-1.074855,-0.075000,2.058768,-1.050677,-0.075000,2.058768,-0.915871,-0.075000,-1.567658,-0.940048,-0.075000,-1.567658,-1.074855,-0.075000,-1.842399,-1.050677,-0.075000,-1.842399,-0.939902,-0.075000,3.229118,-0.915725,-0.075000,3.229118,-1.050531,-0.075000,3.503859,-1.074708,-0.075000,3.503859,-0.939902,-0.075000,0.888418,-0.915725,-0.075000,0.888418,-1.050531,-0.075000,1.163159,-1.074708,-0.075000,1.163159,-0.939902,-0.075000,-3.012749,-0.915725,-0.075000,-3.012749,-1.050531,-0.075000,-2.738008,-1.074708,-0.075000,-2.738008,-0.939902,-0.075000,-6.133683,-0.915725,-0.075000,-6.133683,-1.050531,-0.075000,-5.858943,-1.074708,-0.075000,-5.858943,-0.939902,-0.075000,-7.304034,-0.915725,-0.075000,-7.304034,-1.050531,-0.075000,-7.029294,-1.074708,-0.075000,-7.029294,-0.935653,-0.075000,2.990804,-1.054927,-0.075000,2.990804,-1.054927,-0.075000,2.969119,-0.935653,-0.075000,2.969119,-0.935653,-0.075000,-6.762114,-1.054927,-0.075000,-6.762114,-1.054927,-0.075000,-6.783801,-0.935653,-0.075000,-6.783801,-0.984447,-0.075000,-5.078709,-1.006133,-0.075000,-5.078709,-1.006133,-0.075000,-5.353450,-0.984447,-0.075000,-5.353450,-0.984447,-0.075000,-5.468826,-1.006133,-0.075000,-5.468826,-1.006133,-0.075000,-5.743567,-0.984447,-0.075000,-5.743567,-0.984447,-0.075000,-6.249060,-1.006133,-0.075000,-6.249060,-1.006133,-0.075000,-6.523801,-0.984447,-0.075000,-6.523801,-0.723919,-0.075000,3.482172,-0.904735,-0.075000,3.482172,-0.904735,-0.075000,3.460486,-0.723919,-0.075000,3.460486,-0.723919,-0.075000,-5.100395,-0.904735,-0.075000,-5.100395,-0.904735,-0.075000,-5.122082,-0.723919,-0.075000,-5.122082,-0.723919,-0.075000,-6.270746,-0.904735,-0.075000,-6.270746,-0.904735,-0.075000,-6.292432,-0.723919,-0.075000,-6.292432,-0.734909,-0.075000,-0.397309,-0.759086,-0.075000,-0.397309,-0.893892,-0.075000,-0.672049,-0.869715,-0.075000,-0.672049,-0.758940,-0.075000,3.619235,-0.734762,-0.075000,3.619235,-0.869568,-0.075000,3.893975,-0.893746,-0.075000,3.893975,-0.758940,-0.075000,-0.281932,-0.734762,-0.075000,-0.281932,-0.869568,-0.075000,-0.007191,-0.893746,-0.075000,-0.007191,-0.758940,-0.075000,-7.694151,-0.734762,-0.075000,-7.694151,-0.869568,-0.075000,-7.419411,-0.893746,-0.075000,-7.419411,-0.754690,-0.075000,2.990804,-0.873964,-0.075000,2.990804,-0.873964,-0.075000,2.969119,-0.754690,-0.075000,2.969119,-0.754690,-0.075000,-5.981880,-0.873964,-0.075000,-5.981880,-0.873964,-0.075000,-6.003566,-0.754690,-0.075000,-6.003566,-0.754690,-0.075000,-6.762114,-0.873964,-0.075000,-6.762114,-0.873964,-0.075000,-6.783801,-0.754690,-0.075000,-6.783801,-0.803484,-0.075000,2.539292,-0.825170,-0.075000,2.539292,-0.836014,-0.075000,2.448884,-0.792641,-0.075000,2.448884,-0.792641,-0.075000,0.729669,-0.836014,-0.075000,0.729669,-0.836014,-0.075000,0.686297,-0.792641,-0.075000,0.686297,-0.803484,-0.075000,-1.361874,-0.825170,-0.075000,-1.361874,-0.836014,-0.075000,-1.452282,-0.792641,-0.075000,-1.452282,-0.792641,-0.075000,-3.171497,-0.836014,-0.075000,-3.171497,-0.836014,-0.075000,-3.214870,-0.792641,-0.075000,-3.214870,-0.803484,-0.075000,-4.298475,-0.825170,-0.075000,-4.298475,-0.825170,-0.075000,-4.573216,-0.803484,-0.075000,-4.573216,-0.803484,-0.075000,-4.688592,-0.825170,-0.075000,-4.688592,-0.825170,-0.075000,-4.963333,-0.803484,-0.075000,-4.963333,-0.542957,-0.075000,3.872289,-0.723773,-0.075000,3.872289,-0.723773,-0.075000,3.850602,-0.542957,-0.075000,3.850602,-0.542957,-0.075000,-0.418995,-0.723773,-0.075000,-0.418995,-0.723773,-0.075000,-0.440681,-0.542957,-0.075000,-0.440681,-0.542957,-0.075000,-4.320161,-0.723773,-0.075000,-4.320161,-0.723773,-0.075000,-4.341848,-0.542957,-0.075000,-4.341848,-0.542957,-0.075000,-5.100395,-0.723773,-0.075000,-5.100395,-0.723773,-0.075000,-5.122082,-0.542957,-0.075000,-5.122082,-0.542957,-0.075000,-6.270746,-0.723773,-0.075000,-6.270746,-0.723773,-0.075000,-6.292432,-0.542957,-0.075000,-6.292432,-0.577977,-0.075000,4.009351,-0.553800,-0.075000,4.009351,-0.688606,-0.075000,4.284092,-0.712783,-0.075000,4.284092,-0.577977,-0.075000,-8.084269,-0.553800,-0.075000,-8.084269,-0.688606,-0.075000,-7.809527,-0.712783,-0.075000,-7.809527,-0.686848,-0.075000,3.026997,-0.711171,-0.075000,3.026997,-0.633511,-0.075000,2.853507,-0.555705,-0.075000,3.026997,-0.580028,-0.075000,3.026997,-0.633511,-0.075000,2.907576,-0.573728,-0.075000,-5.981880,-0.693002,-0.075000,-5.981880,-0.693002,-0.075000,-6.003566,-0.573728,-0.075000,-6.003566,-0.573728,-0.075000,-6.762114,-0.693002,-0.075000,-6.762114,-0.693002,-0.075000,-6.783801,-0.573728,-0.075000,-6.783801,-0.622522,-0.075000,6.050342,-0.644208,-0.075000,6.050342,-0.655051,-0.075000,5.959935,-0.611679,-0.075000,5.959935,-0.622522,-0.075000,3.319525,-0.644208,-0.075000,3.319525,-0.655051,-0.075000,3.229118,-0.611679,-0.075000,3.229118,-0.611679,-0.075000,2.680253,-0.655051,-0.075000,2.680253,-0.655051,-0.075000,2.636881,-0.611679,-0.075000,2.636881,-0.622522,-0.075000,0.588709,-0.644208,-0.075000,0.588709,-0.655051,-0.075000,0.498301,-0.611679,-0.075000,0.498301,-0.611679,-0.075000,-1.220914,-0.655051,-0.075000,-1.220914,-0.655051,-0.075000,-1.264286,-0.611679,-0.075000,-1.264286,-0.622522,-0.075000,-3.312458,-0.644208,-0.075000,-3.312458,-0.655051,-0.075000,-3.402865,-0.611679,-0.075000,-3.402865,-0.622522,-0.075000,-4.092690,-0.644208,-0.075000,-4.092690,-0.655051,-0.075000,-4.183099,-0.611679,-0.075000,-4.183099,-0.361994,-0.075000,5.822873,-0.542810,-0.075000,5.822873,-0.542810,-0.075000,5.801186,-0.361994,-0.075000,5.801186,-0.361994,-0.075000,4.262405,-0.542810,-0.075000,4.262405,-0.542810,-0.075000,4.240719,-0.361994,-0.075000,4.240719,-0.361994,-0.075000,3.872289,-0.542810,-0.075000,3.872289,-0.542810,-0.075000,3.850602,-0.361994,-0.075000,3.850602,-0.361994,-0.075000,-4.320161,-0.542810,-0.075000,-4.320161,-0.542810,-0.075000,-4.341848,-0.361994,-0.075000,-4.341848,-0.361994,-0.075000,-5.100395,-0.542810,-0.075000,-5.100395,-0.542810,-0.075000,-5.122082,-0.361994,-0.075000,-5.122082,-0.361994,-0.075000,-6.270746,-0.542810,-0.075000,-6.270746,-0.542810,-0.075000,-6.292432,-0.361994,-0.075000,-6.292432,-0.397015,-0.075000,-8.474385,-0.372837,-0.075000,-8.474385,-0.507644,-0.075000,-8.199645,-0.531821,-0.075000,-8.199645,-0.374742,-0.075000,6.149688,-0.530209,-0.075000,6.149688,-0.530209,-0.075000,6.128003,-0.374742,-0.075000,6.128003,-0.374742,-0.075000,6.095473,-0.530209,-0.075000,6.095473,-0.530209,-0.075000,6.073787,-0.374742,-0.075000,6.073787,-0.392765,-0.075000,2.990804,-0.512039,-0.075000,2.990804,-0.512039,-0.075000,2.969119,-0.392765,-0.075000,2.969119,-0.392765,-0.075000,-5.981880,-0.512039,-0.075000,-5.981880,-0.512039,-0.075000,-6.003566,-0.392765,-0.075000,-6.003566,-0.392765,-0.075000,-6.762114,-0.512039,-0.075000,-6.762114,-0.512039,-0.075000,-6.783801,-0.392765,-0.075000,-6.783801,-0.441559,-0.075000,3.319525,-0.463245,-0.075000,3.319525,-0.474089,-0.075000,3.229118,-0.430716,-0.075000,3.229118,-0.441559,-0.075000,-0.191524,-0.463245,-0.075000,-0.191524,-0.474089,-0.075000,-0.281932,-0.430716,-0.075000,-0.281932,-0.430716,-0.075000,-0.440681,-0.474089,-0.075000,-0.440681,-0.474089,-0.075000,-0.484053,-0.430716,-0.075000,-0.484053,-0.430716,-0.075000,-3.951731,-0.474089,-0.075000,-3.951731,-0.474089,-0.075000,-3.995103,-0.430716,-0.075000,-3.995103,-0.441559,-0.075000,-3.518242,-0.463245,-0.075000,-3.518242,-0.463245,-0.075000,-3.792982,-0.441559,-0.075000,-3.792982,-0.181032,-0.075000,5.822873,-0.361848,-0.075000,5.822873,-0.361848,-0.075000,5.801186,-0.181032,-0.075000,5.801186,-0.181032,-0.075000,4.262405,-0.361848,-0.075000,4.262405,-0.361848,-0.075000,4.240719,-0.181032,-0.075000,4.240719,-0.181032,-0.075000,3.872289,-0.361848,-0.075000,3.872289,-0.361848,-0.075000,3.850602,-0.181032,-0.075000,3.850602,-0.181032,-0.075000,2.701939,-0.361848,-0.075000,2.701939,-0.361848,-0.075000,2.680253,-0.181032,-0.075000,2.680253,-0.181032,-0.075000,0.361239,-0.361848,-0.075000,0.361239,-0.361848,-0.075000,0.339553,-0.181032,-0.075000,0.339553,-0.181032,-0.075000,-1.199228,-0.361848,-0.075000,-1.199228,-0.361848,-0.075000,-1.220914,-0.181032,-0.075000,-1.220914,-0.181032,-0.075000,-3.539928,-0.361848,-0.075000,-3.539928,-0.361848,-0.075000,-3.561614,-0.181032,-0.075000,-3.561614,-0.181032,-0.075000,-3.930044,-0.361848,-0.075000,-3.930044,-0.361848,-0.075000,-3.951731,-0.181032,-0.075000,-3.951731,-0.181032,-0.075000,-4.320161,-0.361848,-0.075000,-4.320161,-0.361848,-0.075000,-4.341848,-0.181032,-0.075000,-4.341848,-0.181032,-0.075000,-5.100395,-0.361848,-0.075000,-5.100395,-0.361848,-0.075000,-5.122082,-0.181032,-0.075000,-5.122082,-0.181032,-0.075000,-6.270746,-0.361848,-0.075000,-6.270746,-0.361848,-0.075000,-6.292432,-0.181032,-0.075000,-6.292432,-0.216052,-0.075000,-8.864502,-0.191875,-0.075000,-8.864502,-0.326681,-0.075000,-8.589762,-0.350858,-0.075000,-8.589762,-0.193780,-0.075000,6.149688,-0.349247,-0.075000,6.149688,-0.349247,-0.075000,6.128003,-0.193780,-0.075000,6.128003,-0.193780,-0.075000,6.095473,-0.349247,-0.075000,6.095473,-0.349247,-0.075000,6.073787,-0.193780,-0.075000,6.073787,-0.211803,-0.075000,2.990804,-0.331077,-0.075000,2.990804,-0.331077,-0.075000,2.969119,-0.211803,-0.075000,2.969119,-0.211803,-0.075000,-5.981880,-0.331077,-0.075000,-5.981880,-0.331077,-0.075000,-6.003566,-0.211803,-0.075000,-6.003566,-0.211803,-0.075000,-6.762114,-0.331077,-0.075000,-6.762114,-0.331077,-0.075000,-6.783801,-0.211803,-0.075000,-6.783801,-0.260597,-0.075000,3.319525,-0.282283,-0.075000,3.319525,-0.293126,-0.075000,3.229118,-0.249754,-0.075000,3.229118,-0.249754,-0.075000,-0.050564,-0.293126,-0.075000,-0.050564,-0.293126,-0.075000,-0.093937,-0.249754,-0.075000,-0.093937,-0.260597,-0.075000,-0.581641,-0.282283,-0.075000,-0.581641,-0.293126,-0.075000,-0.672049,-0.249754,-0.075000,-0.672049,-0.000070,-0.075000,-6.270746,-0.180885,-0.075000,-6.270746,-0.180885,-0.075000,-6.292432,-0.000070,-0.075000,-6.292432,-0.035090,-0.075000,-6.133683,-0.010913,-0.075000,-6.133683,-0.145719,-0.075000,-5.858943,-0.169896,-0.075000,-5.858943,-0.035090,-0.075000,-9.254619,-0.010913,-0.075000,-9.254619,-0.145719,-0.075000,-8.979878,-0.169896,-0.075000,-8.979878,-0.012817,-0.075000,6.149688,-0.168284,-0.075000,6.149688,-0.168284,-0.075000,6.128003,-0.012817,-0.075000,6.128003,-0.012817,-0.075000,6.095473,-0.168284,-0.075000,6.095473,-0.168284,-0.075000,6.073787,-0.012817,-0.075000,6.073787,-0.030840,-0.075000,-6.762114,-0.150114,-0.075000,-6.762114,-0.150114,-0.075000,-6.783801,-0.030840,-0.075000,-6.783801,-0.079634,-0.075000,-8.774094,-0.101321,-0.075000,-8.774094,-0.112164,-0.075000,-8.864502,-0.068791,-0.075000,-8.864502,-0.079634,-0.075000,5.844558,-0.101321,-0.075000,5.844558,-0.101321,-0.075000,5.569818,-0.079634,-0.075000,5.569818,-0.079634,-0.075000,5.454442,-0.101321,-0.075000,5.454442,-0.101321,-0.075000,5.179701,-0.079634,-0.075000,5.179701,-0.079634,-0.075000,5.064325,-0.101321,-0.075000,5.064325,-0.101321,-0.075000,4.789584,-0.079634,-0.075000,4.789584,-0.079634,-0.075000,4.674209,-0.101321,-0.075000,4.674209,-0.101321,-0.075000,4.399468,-0.079634,-0.075000,4.399468,-0.079634,-0.075000,4.284092,-0.101321,-0.075000,4.284092,-0.101321,-0.075000,4.009351,-0.079634,-0.075000,4.009351,-0.079634,-0.075000,3.893975,-0.101321,-0.075000,3.893975,-0.101321,-0.075000,3.619235,-0.079634,-0.075000,3.619235,-0.079634,-0.075000,3.503859,-0.101321,-0.075000,3.503859,-0.101321,-0.075000,3.229118,-0.079634,-0.075000,3.229118,-0.079634,-0.075000,3.113741,-0.101321,-0.075000,3.113741,-0.101321,-0.075000,2.839001,-0.079634,-0.075000,2.839001,-0.079634,-0.075000,2.723625,-0.101321,-0.075000,2.723625,-0.101321,-0.075000,2.448884,-0.079634,-0.075000,2.448884,-0.079634,-0.075000,2.333508,-0.101321,-0.075000,2.333508,-0.101321,-0.075000,2.058768,-0.079634,-0.075000,2.058768,-0.079634,-0.075000,1.943392,-0.101321,-0.075000,1.943392,-0.101321,-0.075000,1.668651,-0.079634,-0.075000,1.668651,-0.079634,-0.075000,1.553275,-0.101321,-0.075000,1.553275,-0.101321,-0.075000,1.278535,-0.079634,-0.075000,1.278535,-0.079634,-0.075000,1.163159,-0.101321,-0.075000,1.163159,-0.101321,-0.075000,0.888418,-0.079634,-0.075000,0.888418,-0.079634,-0.075000,0.773042,-0.101321,-0.075000,0.773042,-0.101321,-0.075000,0.498301,-0.079634,-0.075000,0.498301,-0.079634,-0.075000,0.382925,-0.101321,-0.075000,0.382925,-0.101321,-0.075000,0.108184,-0.079634,-0.075000,0.108184,-0.079634,-0.075000,-0.007191,-0.101321,-0.075000,-0.007191,-0.101321,-0.075000,-0.281932,-0.079634,-0.075000,-0.281932,-0.079634,-0.075000,-0.397309,-0.101321,-0.075000,-0.397309,-0.101321,-0.075000,-0.672049,-0.079634,-0.075000,-0.672049,-0.079634,-0.075000,-0.787425,-0.101321,-0.075000,-0.787425,-0.101321,-0.075000,-1.062166,-0.079634,-0.075000,-1.062166,-0.079634,-0.075000,-1.177542,-0.101321,-0.075000,-1.177542,-0.101321,-0.075000,-1.452282,-0.079634,-0.075000,-1.452282,-0.079634,-0.075000,-1.567658,-0.101321,-0.075000,-1.567658,-0.101321,-0.075000,-1.842399,-0.079634,-0.075000,-1.842399,-0.079634,-0.075000,-1.957775,-0.101321,-0.075000,-1.957775,-0.101321,-0.075000,-2.232515,-0.079634,-0.075000,-2.232515,-0.079634,-0.075000,-2.347892,-0.101321,-0.075000,-2.347892,-0.101321,-0.075000,-2.622632,-0.079634,-0.075000,-2.622632,-0.079634,-0.075000,-2.738008,-0.101321,-0.075000,-2.738008,-0.101321,-0.075000,-3.012749,-0.079634,-0.075000,-3.012749,-0.079634,-0.075000,-3.128125,-0.101321,-0.075000,-3.128125,-0.101321,-0.075000,-3.402865,-0.079634,-0.075000,-3.402865,-0.079634,-0.075000,-3.518242,-0.101321,-0.075000,-3.518242,-0.101321,-0.075000,-3.792982,-0.079634,-0.075000,-3.792982,-0.079634,-0.075000,-3.908358,-0.101321,-0.075000,-3.908358,-0.101321,-0.075000,-4.183099,-0.079634,-0.075000,-4.183099,-0.079634,-0.075000,-4.298475,-0.101321,-0.075000,-4.298475,-0.101321,-0.075000,-4.573216,-0.079634,-0.075000,-4.573216,-0.079634,-0.075000,-4.688592,-0.101321,-0.075000,-4.688592,-0.101321,-0.075000,-4.963333,-0.079634,-0.075000,-4.963333,-0.079634,-0.075000,-5.078709,-0.101321,-0.075000,-5.078709,-0.101321,-0.075000,-5.353450,-0.079634,-0.075000,-5.353450,-0.079634,-0.075000,-5.468826,-0.101321,-0.075000,-5.468826,-0.101321,-0.075000,-5.743567,-0.079634,-0.075000,-5.743567,0.180893,-0.075000,-6.270746,0.000077,-0.075000,-6.270746,0.000077,-0.075000,-6.292432,0.180893,-0.075000,-6.292432,0.169903,-0.075000,-5.858943,0.145726,-0.075000,-5.858943,0.010920,-0.075000,-6.133683,0.035097,-0.075000,-6.133683,0.169903,-0.075000,-8.979878,0.145726,-0.075000,-8.979878,0.010920,-0.075000,-9.254619,0.035097,-0.075000,-9.254619,0.168145,-0.075000,6.149688,0.012678,-0.075000,6.149688,0.012678,-0.075000,6.128003,0.168145,-0.075000,6.128003,0.168145,-0.075000,6.095473,0.012678,-0.075000,6.095473,0.012678,-0.075000,6.073787,0.168145,-0.075000,6.073787,0.150122,-0.075000,-6.762114,0.030848,-0.075000,-6.762114,0.030848,-0.075000,-6.783801,0.150122,-0.075000,-6.783801,0.101328,-0.075000,-8.774094,0.079642,-0.075000,-8.774094,0.068799,-0.075000,-8.864502,0.112171,-0.075000,-8.864502,0.101328,-0.075000,5.844558,0.079642,-0.075000,5.844558,0.079642,-0.075000,5.569818,0.101328,-0.075000,5.569818,0.101328,-0.075000,5.454442,0.079642,-0.075000,5.454442,0.079642,-0.075000,5.179701,0.101328,-0.075000,5.179701,0.101328,-0.075000,5.064325,0.079642,-0.075000,5.064325,0.079642,-0.075000,4.789584,0.101328,-0.075000,4.789584,0.101328,-0.075000,4.674209,0.079642,-0.075000,4.674209,0.079642,-0.075000,4.399468,0.101328,-0.075000,4.399468,0.101328,-0.075000,4.284092,0.079642,-0.075000,4.284092,0.079642,-0.075000,4.009351,0.101328,-0.075000,4.009351,0.101328,-0.075000,3.893975,0.079642,-0.075000,3.893975,0.079642,-0.075000,3.619235,0.101328,-0.075000,3.619235,0.101328,-0.075000,3.503859,0.079642,-0.075000,3.503859,0.079642,-0.075000,3.229118,0.101328,-0.075000,3.229118,0.101328,-0.075000,3.113741,0.079642,-0.075000,3.113741,0.079642,-0.075000,2.839001,0.101328,-0.075000,2.839001,0.101328,-0.075000,2.723625,0.079642,-0.075000,2.723625,0.079642,-0.075000,2.448884,0.101328,-0.075000,2.448884,0.101328,-0.075000,2.333508,0.079642,-0.075000,2.333508,0.079642,-0.075000,2.058768,0.101328,-0.075000,2.058768,0.101328,-0.075000,1.943392,0.079642,-0.075000,1.943392,0.079642,-0.075000,1.668651,0.101328,-0.075000,1.668651,0.101328,-0.075000,1.553275,0.079642,-0.075000,1.553275,0.079642,-0.075000,1.278535,0.101328,-0.075000,1.278535,0.101328,-0.075000,1.163159,0.079642,-0.075000,1.163159,0.079642,-0.075000,0.888418,0.101328,-0.075000,0.888418,0.101328,-0.075000,0.773042,0.079642,-0.075000,0.773042,0.079642,-0.075000,0.498301,0.101328,-0.075000,0.498301,0.101328,-0.075000,0.382925,0.079642,-0.075000,0.382925,0.079642,-0.075000,0.108184,0.101328,-0.075000,0.108184,0.101328,-0.075000,-0.007191,0.079642,-0.075000,-0.007191,0.079642,-0.075000,-0.281932,0.101328,-0.075000,-0.281932,0.101328,-0.075000,-0.397309,0.079642,-0.075000,-0.397309,0.079642,-0.075000,-0.672049,0.101328,-0.075000,-0.672049,0.101328,-0.075000,-0.787425,0.079642,-0.075000,-0.787425,0.079642,-0.075000,-1.062166,0.101328,-0.075000,-1.062166,0.101328,-0.075000,-1.177542,0.079642,-0.075000,-1.177542,0.079642,-0.075000,-1.452282,0.101328,-0.075000,-1.452282,0.101328,-0.075000,-1.567658,0.079642,-0.075000,-1.567658,0.079642,-0.075000,-1.842399,0.101328,-0.075000,-1.842399,0.101328,-0.075000,-1.957775,0.079642,-0.075000,-1.957775,0.079642,-0.075000,-2.232515,0.101328,-0.075000,-2.232515,0.101328,-0.075000,-2.347892,0.079642,-0.075000,-2.347892,0.079642,-0.075000,-2.622632,0.101328,-0.075000,-2.622632,0.101328,-0.075000,-2.738008,0.079642,-0.075000,-2.738008,0.079642,-0.075000,-3.012749,0.101328,-0.075000,-3.012749,0.101328,-0.075000,-3.128125,0.079642,-0.075000,-3.128125,0.079642,-0.075000,-3.402865,0.101328,-0.075000,-3.402865,0.101328,-0.075000,-3.518242,0.079642,-0.075000,-3.518242,0.079642,-0.075000,-3.792982,0.101328,-0.075000,-3.792982,0.101328,-0.075000,-3.908358,0.079642,-0.075000,-3.908358,0.079642,-0.075000,-4.183099,0.101328,-0.075000,-4.183099,0.101328,-0.075000,-4.298475,0.079642,-0.075000,-4.298475,0.079642,-0.075000,-4.573216,0.101328,-0.075000,-4.573216,0.101328,-0.075000,-4.688592,0.079642,-0.075000,-4.688592,0.079642,-0.075000,-4.963333,0.101328,-0.075000,-4.963333,0.101328,-0.075000,-5.078709,0.079642,-0.075000,-5.078709,0.079642,-0.075000,-5.353450,0.101328,-0.075000,-5.353450,0.101328,-0.075000,-5.468826,0.079642,-0.075000,-5.468826,0.079642,-0.075000,-5.743567,0.101328,-0.075000,-5.743567,0.361855,-0.075000,5.822873,0.181040,-0.075000,5.822873,0.181040,-0.075000,5.801186,0.361855,-0.075000,5.801186,0.361855,-0.075000,4.262405,0.181040,-0.075000,4.262405,0.181040,-0.075000,4.240719,0.361855,-0.075000,4.240719,0.361855,-0.075000,3.872289,0.181040,-0.075000,3.872289,0.181040,-0.075000,3.850602,0.361855,-0.075000,3.850602,0.361855,-0.075000,2.701939,0.181040,-0.075000,2.701939,0.181040,-0.075000,2.680253,0.361855,-0.075000,2.680253,0.361855,-0.075000,0.361239,0.181040,-0.075000,0.361239,0.181040,-0.075000,0.339553,0.361855,-0.075000,0.339553,0.361855,-0.075000,-1.199228,0.181040,-0.075000,-1.199228,0.181040,-0.075000,-1.220914,0.361855,-0.075000,-1.220914,0.361855,-0.075000,-3.539928,0.181040,-0.075000,-3.539928,0.181040,-0.075000,-3.561614,0.361855,-0.075000,-3.561614,0.361855,-0.075000,-3.930044,0.181040,-0.075000,-3.930044,0.181040,-0.075000,-3.951731,0.361855,-0.075000,-3.951731,0.361855,-0.075000,-4.320161,0.181040,-0.075000,-4.320161,0.181040,-0.075000,-4.341848,0.361855,-0.075000,-4.341848,0.361855,-0.075000,-5.100395,0.181040,-0.075000,-5.100395,0.181040,-0.075000,-5.122082,0.361855,-0.075000,-5.122082,0.361855,-0.075000,-6.270746,0.181040,-0.075000,-6.270746,0.181040,-0.075000,-6.292432,0.361855,-0.075000,-6.292432,0.350866,-0.075000,-8.589762,0.326688,-0.075000,-8.589762,0.191883,-0.075000,-8.864502,0.216060,-0.075000,-8.864502,0.349107,-0.075000,6.149688,0.193641,-0.075000,6.149688,0.193641,-0.075000,6.128003,0.349107,-0.075000,6.128003,0.349107,-0.075000,6.095473,0.193641,-0.075000,6.095473,0.193641,-0.075000,6.073787,0.349107,-0.075000,6.073787,0.331084,-0.075000,2.990804,0.211810,-0.075000,2.990804,0.211810,-0.075000,2.969119,0.331084,-0.075000,2.969119,0.331084,-0.075000,-5.981880,0.211810,-0.075000,-5.981880,0.211810,-0.075000,-6.003566,0.331084,-0.075000,-6.003566,0.331084,-0.075000,-6.762114,0.211810,-0.075000,-6.762114,0.211810,-0.075000,-6.783801,0.331084,-0.075000,-6.783801,0.282291,-0.075000,3.319525,0.260604,-0.075000,3.319525,0.249761,-0.075000,3.229118,0.293134,-0.075000,3.229118,0.293134,-0.075000,-0.050564,0.249761,-0.075000,-0.050564,0.249761,-0.075000,-0.093937,0.293134,-0.075000,-0.093937,0.282291,-0.075000,-0.581641,0.260604,-0.075000,-0.581641,0.249761,-0.075000,-0.672049,0.293134,-0.075000,-0.672049,0.542818,-0.075000,5.822873,0.362002,-0.075000,5.822873,0.362002,-0.075000,5.801186,0.542818,-0.075000,5.801186,0.542818,-0.075000,4.262405,0.362002,-0.075000,4.262405,0.362002,-0.075000,4.240719,0.542818,-0.075000,4.240719,0.542818,-0.075000,3.872289,0.362002,-0.075000,3.872289,0.362002,-0.075000,3.850602,0.542818,-0.075000,3.850602,0.542818,-0.075000,-4.320161,0.362002,-0.075000,-4.320161,0.362002,-0.075000,-4.341848,0.542818,-0.075000,-4.341848,0.542818,-0.075000,-5.100395,0.362002,-0.075000,-5.100395,0.362002,-0.075000,-5.122082,0.542818,-0.075000,-5.122082,0.542818,-0.075000,-6.270746,0.362002,-0.075000,-6.270746,0.362002,-0.075000,-6.292432,0.542818,-0.075000,-6.292432,0.531828,-0.075000,-8.199645,0.507651,-0.075000,-8.199645,0.372845,-0.075000,-8.474385,0.397022,-0.075000,-8.474385,0.530070,-0.075000,6.149688,0.374603,-0.075000,6.149688,0.374603,-0.075000,6.128003,0.530070,-0.075000,6.128003,0.530070,-0.075000,6.095473,0.374603,-0.075000,6.095473,0.374603,-0.075000,6.073787,0.530070,-0.075000,6.073787,0.512047,-0.075000,2.990804,0.392773,-0.075000,2.990804,0.392773,-0.075000,2.969119,0.512047,-0.075000,2.969119,0.512047,-0.075000,-5.981880,0.392773,-0.075000,-5.981880,0.392773,-0.075000,-6.003566,0.512047,-0.075000,-6.003566,0.512047,-0.075000,-6.762114,0.392773,-0.075000,-6.762114,0.392773,-0.075000,-6.783801,0.512047,-0.075000,-6.783801,0.463253,-0.075000,3.319525,0.441567,-0.075000,3.319525,0.430724,-0.075000,3.229118,0.474096,-0.075000,3.229118,0.463253,-0.075000,-0.191524,0.441567,-0.075000,-0.191524,0.430724,-0.075000,-0.281932,0.474096,-0.075000,-0.281932,0.474096,-0.075000,-0.440681,0.430724,-0.075000,-0.440681,0.430724,-0.075000,-0.484053,0.474096,-0.075000,-0.484053,0.474096,-0.075000,-3.951731,0.430724,-0.075000,-3.951731,0.430724,-0.075000,-3.995103,0.474096,-0.075000,-3.995103,0.463253,-0.075000,-3.518242,0.441567,-0.075000,-3.518242,0.441567,-0.075000,-3.792982,0.463253,-0.075000,-3.792982,0.723780,-0.075000,3.872289,0.542964,-0.075000,3.872289,0.542964,-0.075000,3.850602,0.723780,-0.075000,3.850602,0.723780,-0.075000,-0.418995,0.542964,-0.075000,-0.418995,0.542964,-0.075000,-0.440681,0.723780,-0.075000,-0.440681,0.723780,-0.075000,-4.320161,0.542964,-0.075000,-4.320161,0.542964,-0.075000,-4.341848,0.723780,-0.075000,-4.341848,0.723780,-0.075000,-5.100395,0.542964,-0.075000,-5.100395,0.542964,-0.075000,-5.122082,0.723780,-0.075000,-5.122082,0.723780,-0.075000,-6.270746,0.542964,-0.075000,-6.270746,0.542964,-0.075000,-6.292432,0.723780,-0.075000,-6.292432,0.712790,-0.075000,4.284092,0.688613,-0.075000,4.284092,0.553807,-0.075000,4.009351,0.577984,-0.075000,4.009351,0.712790,-0.075000,-7.809527,0.688613,-0.075000,-7.809527,0.553807,-0.075000,-8.084269,0.577984,-0.075000,-8.084269,0.579889,-0.075000,3.026997,0.555566,-0.075000,3.026997,0.633226,-0.075000,2.853507,0.711032,-0.075000,3.026997,0.686708,-0.075000,3.026997,0.633226,-0.075000,2.907576,0.693009,-0.075000,-5.981880,0.573735,-0.075000,-5.981880,0.573735,-0.075000,-6.003566,0.693009,-0.075000,-6.003566,0.693009,-0.075000,-6.762114,0.573735,-0.075000,-6.762114,0.573735,-0.075000,-6.783801,0.693009,-0.075000,-6.783801,0.644215,-0.075000,6.050342,0.622529,-0.075000,6.050342,0.611686,-0.075000,5.959935,0.655058,-0.075000,5.959935,0.644215,-0.075000,3.319525,0.622529,-0.075000,3.319525,0.611686,-0.075000,3.229118,0.655058,-0.075000,3.229118,0.655058,-0.075000,2.680253,0.611686,-0.075000,2.680253,0.611686,-0.075000,2.636881,0.655058,-0.075000,2.636881,0.644215,-0.075000,0.588709,0.622529,-0.075000,0.588709,0.611686,-0.075000,0.498301,0.655058,-0.075000,0.498301,0.655058,-0.075000,-1.220914,0.611686,-0.075000,-1.220914,0.611686,-0.075000,-1.264286,0.655058,-0.075000,-1.264286,0.644215,-0.075000,-3.312458,0.622529,-0.075000,-3.312458,0.611686,-0.075000,-3.402865,0.655058,-0.075000,-3.402865,0.644215,-0.075000,-4.092690,0.622529,-0.075000,-4.092690,0.611686,-0.075000,-4.183099,0.655058,-0.075000,-4.183099,0.904742,-0.075000,3.482172,0.723927,-0.075000,3.482172,0.723927,-0.075000,3.460486,0.904742,-0.075000,3.460486,0.904742,-0.075000,-5.100395,0.723927,-0.075000,-5.100395,0.723927,-0.075000,-5.122082,0.904742,-0.075000,-5.122082,0.904742,-0.075000,-6.270746,0.723927,-0.075000,-6.270746,0.723927,-0.075000,-6.292432,0.904742,-0.075000,-6.292432,0.893753,-0.075000,3.893975,0.869576,-0.075000,3.893975,0.734770,-0.075000,3.619235,0.758947,-0.075000,3.619235,0.893753,-0.075000,-0.007191,0.869576,-0.075000,-0.007191,0.734770,-0.075000,-0.281932,0.758947,-0.075000,-0.281932,0.893753,-0.075000,-7.419411,0.869576,-0.075000,-7.419411,0.734770,-0.075000,-7.694151,0.758947,-0.075000,-7.694151,0.869722,-0.075000,-0.672049,0.893900,-0.075000,-0.672049,0.759094,-0.075000,-0.397309,0.734916,-0.075000,-0.397309,0.873972,-0.075000,2.990804,0.754698,-0.075000,2.990804,0.754698,-0.075000,2.969119,0.873972,-0.075000,2.969119,0.873972,-0.075000,-5.981880,0.754698,-0.075000,-5.981880,0.754698,-0.075000,-6.003566,0.873972,-0.075000,-6.003566,0.873972,-0.075000,-6.762114,0.754698,-0.075000,-6.762114,0.754698,-0.075000,-6.783801,0.873972,-0.075000,-6.783801,0.825178,-0.075000,2.539292,0.803491,-0.075000,2.539292,0.792648,-0.075000,2.448884,0.836021,-0.075000,2.448884,0.836021,-0.075000,0.729669,0.792648,-0.075000,0.729669,0.792648,-0.075000,0.686297,0.836021,-0.075000,0.686297,0.825178,-0.075000,-1.361874,0.803491,-0.075000,-1.361874,0.792648,-0.075000,-1.452282,0.836021,-0.075000,-1.452282,0.836021,-0.075000,-3.171497,0.792648,-0.075000,-3.171497,0.792648,-0.075000,-3.214870,0.836021,-0.075000,-3.214870,0.825178,-0.075000,-4.298475,0.803491,-0.075000,-4.298475,0.803491,-0.075000,-4.573216,0.825178,-0.075000,-4.573216,0.825178,-0.075000,-4.688592,0.803491,-0.075000,-4.688592,0.803491,-0.075000,-4.963333,0.825178,-0.075000,-4.963333,1.085705,-0.075000,2.701939,0.904889,-0.075000,2.701939,0.904889,-0.075000,2.680253,1.085705,-0.075000,2.680253,1.085705,-0.075000,-0.028878,0.904889,-0.075000,-0.028878,0.904889,-0.075000,-0.050564,1.085705,-0.075000,-0.050564,1.085705,-0.075000,-0.809111,0.904889,-0.075000,-0.809111,0.904889,-0.075000,-0.830797,1.085705,-0.075000,-0.830797,1.074715,-0.075000,3.503859,1.050539,-0.075000,3.503859,0.915732,-0.075000,3.229118,0.939910,-0.075000,3.229118,1.074715,-0.075000,1.163159,1.050539,-0.075000,1.163159,0.915732,-0.075000,0.888418,0.939910,-0.075000,0.888418,1.074715,-0.075000,-2.738008,1.050539,-0.075000,-2.738008,0.915732,-0.075000,-3.012749,0.939910,-0.075000,-3.012749,1.074715,-0.075000,-5.858943,1.050539,-0.075000,-5.858943,0.915732,-0.075000,-6.133683,0.939910,-0.075000,-6.133683,1.074715,-0.075000,-7.029294,1.050539,-0.075000,-7.029294,0.915732,-0.075000,-7.304034,0.939910,-0.075000,-7.304034,1.050685,-0.075000,2.058768,1.074862,-0.075000,2.058768,0.940056,-0.075000,2.333508,0.915879,-0.075000,2.333508,1.050685,-0.075000,-1.842399,1.074862,-0.075000,-1.842399,0.940056,-0.075000,-1.567658,0.915879,-0.075000,-1.567658,1.054934,-0.075000,2.990804,0.935660,-0.075000,2.990804,0.935660,-0.075000,2.969119,1.054934,-0.075000,2.969119,1.054934,-0.075000,-6.762114,0.935660,-0.075000,-6.762114,0.935660,-0.075000,-6.783801,1.054934,-0.075000,-6.783801,1.006140,-0.075000,-5.078709,0.984454,-0.075000,-5.078709,0.984454,-0.075000,-5.353450,1.006140,-0.075000,-5.353450,1.006140,-0.075000,-5.468826,0.984454,-0.075000,-5.468826,0.984454,-0.075000,-5.743567,1.006140,-0.075000,-5.743567,1.006140,-0.075000,-6.249060,0.984454,-0.075000,-6.249060,0.984454,-0.075000,-6.523801,1.006140,-0.075000,-6.523801,1.266668,-0.075000,2.701939,1.085852,-0.075000,2.701939,1.085852,-0.075000,2.680253,1.266668,-0.075000,2.680253,1.255678,-0.075000,-0.397309,1.231501,-0.075000,-0.397309,1.096695,-0.075000,-0.672049,1.120872,-0.075000,-0.672049,1.255678,-0.075000,-5.078709,1.231501,-0.075000,-5.078709,1.096695,-0.075000,-5.353450,1.120872,-0.075000,-5.353450,1.255678,-0.075000,-5.468826,1.231501,-0.075000,-5.468826,1.096695,-0.075000,-5.743567,1.120872,-0.075000,-5.743567,1.231647,-0.075000,-0.281932,1.255824,-0.075000,-0.281932,1.121018,-0.075000,-0.007191,1.096841,-0.075000,-0.007191,1.187103,-0.075000,3.319525,1.165417,-0.075000,3.319525,1.154573,-0.075000,3.229118,1.197946,-0.075000,3.229118,1.197946,-0.075000,3.070369,1.154573,-0.075000,3.070369,1.154573,-0.075000,3.026997,1.197946,-0.075000,3.026997,1.187103,-0.075000,-6.823509,1.165417,-0.075000,-6.823509,1.154573,-0.075000,-6.913918,1.197946,-0.075000,-6.913918,1.187103,-0.075000,1.943392,1.165417,-0.075000,1.943392,1.165417,-0.075000,1.668651,1.187103,-0.075000,1.668651,1.187103,-0.075000,1.553275,1.165417,-0.075000,1.553275,1.165417,-0.075000,1.278535,1.187103,-0.075000,1.278535,1.187103,-0.075000,-1.957775,1.165417,-0.075000,-1.957775,1.165417,-0.075000,-2.232515,1.187103,-0.075000,-2.232515,1.187103,-0.075000,-2.347892,1.165417,-0.075000,-2.347892,1.165417,-0.075000,-2.622632,1.187103,-0.075000,-2.622632,1.447630,-0.075000,3.092056,1.266814,-0.075000,3.092056,1.266814,-0.075000,3.070369,1.447630,-0.075000,3.070369,1.436640,-0.075000,-4.688592,1.412463,-0.075000,-4.688592,1.277657,-0.075000,-4.963333,1.301834,-0.075000,-4.963333,1.436640,-0.075000,-5.078709,1.412463,-0.075000,-5.078709,1.277657,-0.075000,-5.353450,1.301834,-0.075000,-5.353450,1.378908,-0.075000,3.460486,1.335536,-0.075000,3.460486,1.335536,-0.075000,3.417114,1.378908,-0.075000,3.417114,1.368065,-0.075000,2.723625,1.346379,-0.075000,2.723625,1.346379,-0.075000,2.448884,1.368065,-0.075000,2.448884,1.368065,-0.075000,2.333508,1.346379,-0.075000,2.333508,1.346379,-0.075000,2.058768,1.368065,-0.075000,2.058768,1.368065,-0.075000,1.943392,1.346379,-0.075000,1.943392,1.346379,-0.075000,1.668651,1.368065,-0.075000,1.668651,1.368065,-0.075000,1.553275,1.346379,-0.075000,1.553275,1.346379,-0.075000,1.278535,1.368065,-0.075000,1.278535,1.368065,-0.075000,1.163159,1.346379,-0.075000,1.163159,1.346379,-0.075000,0.888418,1.368065,-0.075000,0.888418,1.368065,-0.075000,0.773042,1.346379,-0.075000,0.773042,1.346379,-0.075000,0.498301,1.368065,-0.075000,0.498301,1.368065,-0.075000,0.382925,1.346379,-0.075000,0.382925,1.346379,-0.075000,0.108184,1.368065,-0.075000,0.108184,1.368065,-0.075000,-0.007191,1.346379,-0.075000,-0.007191,1.346379,-0.075000,-0.281932,1.368065,-0.075000,-0.281932,1.368065,-0.075000,-0.397309,1.346379,-0.075000,-0.397309,1.346379,-0.075000,-0.672049,1.368065,-0.075000,-0.672049,1.368065,-0.075000,-0.787425,1.346379,-0.075000,-0.787425,1.346379,-0.075000,-1.062166,1.368065,-0.075000,-1.062166,1.368065,-0.075000,-1.177542,1.346379,-0.075000,-1.177542,1.346379,-0.075000,-1.452282,1.368065,-0.075000,-1.452282,1.368065,-0.075000,-1.567658,1.346379,-0.075000,-1.567658,1.346379,-0.075000,-1.842399,1.368065,-0.075000,-1.842399,1.368065,-0.075000,-1.957775,1.346379,-0.075000,-1.957775,1.346379,-0.075000,-2.232515,1.368065,-0.075000,-2.232515,1.368065,-0.075000,-2.347892,1.346379,-0.075000,-2.347892,1.346379,-0.075000,-2.622632,1.368065,-0.075000,-2.622632,1.368065,-0.075000,-2.738008,1.346379,-0.075000,-2.738008,1.346379,-0.075000,-3.012749,1.368065,-0.075000,-3.012749,1.368065,-0.075000,-3.128125,1.346379,-0.075000,-3.128125,1.346379,-0.075000,-3.402865,1.368065,-0.075000,-3.402865,1.368065,-0.075000,-3.518242,1.346379,-0.075000,-3.518242,1.346379,-0.075000,-3.792982,1.368065,-0.075000,-3.792982,1.368065,-0.075000,-3.908358,1.346379,-0.075000,-3.908358,1.346379,-0.075000,-4.183099,1.368065,-0.075000,-4.183099,1.368065,-0.075000,-4.298475,1.346379,-0.075000,-4.298475,1.346379,-0.075000,-4.573216,1.368065,-0.075000,-4.573216,1.617602,-0.075000,3.893975,1.593426,-0.075000,3.893975,1.458619,-0.075000,3.619235,1.482797,-0.075000,3.619235,1.617602,-0.075000,-4.688592,1.593426,-0.075000,-4.688592,1.458619,-0.075000,-4.963333,1.482797,-0.075000,-4.963333,1.559870,-0.075000,1.119786,1.516498,-0.075000,1.119786,1.516498,-0.075000,1.076414,1.559870,-0.075000,1.076414,1.549028,-0.075000,3.113741,1.527341,-0.075000,3.113741,1.527341,-0.075000,2.839001,1.549028,-0.075000,2.839001,1.549028,-0.075000,2.723625,1.527341,-0.075000,2.723625,1.527341,-0.075000,2.448884,1.549028,-0.075000,2.448884,1.549028,-0.075000,2.333508,1.527341,-0.075000,2.333508,1.527341,-0.075000,2.058768,1.549028,-0.075000,2.058768,1.549028,-0.075000,1.943392,1.527341,-0.075000,1.943392,1.527341,-0.075000,1.668651,1.549028,-0.075000,1.668651,1.549028,-0.075000,1.553275,1.527341,-0.075000,1.553275,1.527341,-0.075000,1.278535,1.549028,-0.075000,1.278535,1.798565,-0.075000,4.284092,1.774388,-0.075000,4.284092,1.639582,-0.075000,4.009351,1.663759,-0.075000,4.009351,1.798565,-0.075000,3.503859,1.774388,-0.075000,3.503859,1.639582,-0.075000,3.229118,1.663759,-0.075000,3.229118,1.798565,-0.075000,-4.298475,1.774388,-0.075000,-4.298475,1.639582,-0.075000,-4.573216,1.663759,-0.075000,-4.573216,1.774535,-0.075000,2.448884,1.798711,-0.075000,2.448884,1.663906,-0.075000,2.723625,1.639728,-0.075000,2.723625,1.729990,-0.075000,0.978826,1.708304,-0.075000,0.978826,1.697460,-0.075000,0.888418,1.740833,-0.075000,0.888418,1.729990,-0.075000,0.773042,1.708304,-0.075000,0.773042,1.708304,-0.075000,0.498301,1.729990,-0.075000,0.498301,1.729990,-0.075000,0.382925,1.708304,-0.075000,0.382925,1.708304,-0.075000,0.108184,1.729990,-0.075000,0.108184,1.729990,-0.075000,-0.007191,1.708304,-0.075000,-0.007191,1.708304,-0.075000,-0.281932,1.729990,-0.075000,-0.281932,1.729990,-0.075000,-0.397309,1.708304,-0.075000,-0.397309,1.708304,-0.075000,-0.672049,1.729990,-0.075000,-0.672049,1.729990,-0.075000,-0.787425,1.708304,-0.075000,-0.787425,1.708304,-0.075000,-1.062166,1.729990,-0.075000,-1.062166,1.729990,-0.075000,-1.177542,1.708304,-0.075000,-1.177542,1.708304,-0.075000,-1.452282,1.729990,-0.075000,-1.452282,1.729990,-0.075000,-1.567658,1.708304,-0.075000,-1.567658,1.708304,-0.075000,-1.842399,1.729990,-0.075000,-1.842399,1.729990,-0.075000,-1.957775,1.708304,-0.075000,-1.957775,1.708304,-0.075000,-2.232515,1.729990,-0.075000,-2.232515,1.729990,-0.075000,-2.347892,1.708304,-0.075000,-2.347892,1.708304,-0.075000,-2.622632,1.729990,-0.075000,-2.622632,1.729990,-0.075000,-2.738008,1.708304,-0.075000,-2.738008,1.708304,-0.075000,-3.012749,1.729990,-0.075000,-3.012749,1.729990,-0.075000,-3.128125,1.708304,-0.075000,-3.128125,1.708304,-0.075000,-3.402865,1.729990,-0.075000,-3.402865,1.729990,-0.075000,-3.518242,1.708304,-0.075000,-3.518242,1.708304,-0.075000,-3.792982,1.729990,-0.075000,-3.792982,1.729990,-0.075000,-3.908358,1.708304,-0.075000,-3.908358,1.708304,-0.075000,-4.183099,1.729990,-0.075000,-4.183099,1.979528,-0.075000,4.674209,1.955350,-0.075000,4.674209,1.820544,-0.075000,4.399468,1.844721,-0.075000,4.399468,1.979528,-0.075000,3.893975,1.955350,-0.075000,3.893975,1.820544,-0.075000,3.619235,1.844721,-0.075000,3.619235,1.979528,-0.075000,2.723625,1.955350,-0.075000,2.723625,1.820544,-0.075000,2.448884,1.844721,-0.075000,2.448884,1.979528,-0.075000,0.773042,1.955350,-0.075000,0.773042,1.820544,-0.075000,0.498301,1.844721,-0.075000,0.498301,2.171479,-0.075000,2.701939,1.990664,-0.075000,2.701939,1.990664,-0.075000,2.680253,2.171479,-0.075000,2.680253,2.160490,-0.075000,4.284092,2.136313,-0.075000,4.284092,2.001507,-0.075000,4.009351,2.025684,-0.075000,4.009351,2.160490,-0.075000,1.163159,2.136313,-0.075000,1.163159,2.001507,-0.075000,0.888418,2.025684,-0.075000,0.888418,2.091915,-0.075000,4.879992,2.070228,-0.075000,4.879992,2.059386,-0.075000,4.789584,2.102757,-0.075000,4.789584,2.352442,-0.075000,2.701939,2.171626,-0.075000,2.701939,2.171626,-0.075000,2.680253,2.352442,-0.075000,2.680253,2.341452,-0.075000,4.674209,2.317275,-0.075000,4.674209,2.182469,-0.075000,4.399468,2.206646,-0.075000,4.399468,2.341452,-0.075000,1.553275,2.317275,-0.075000,1.553275,2.182469,-0.075000,1.278535,2.206646,-0.075000,1.278535,2.272877,-0.075000,6.050342,2.251191,-0.075000,6.050342,2.240348,-0.075000,5.959935,2.283720,-0.075000,5.959935,2.283720,-0.075000,5.020953,2.240348,-0.075000,5.020953,2.240348,-0.075000,4.977580,2.283720,-0.075000,4.977580,2.533404,-0.075000,5.822873,2.352588,-0.075000,5.822873,2.352588,-0.075000,5.801186,2.533404,-0.075000,5.801186,2.533404,-0.075000,2.701939,2.352588,-0.075000,2.701939,2.352588,-0.075000,2.680253,2.533404,-0.075000,2.680253,2.522415,-0.075000,5.454442,2.498238,-0.075000,5.454442,2.363432,-0.075000,5.179701,2.387609,-0.075000,5.179701,2.522415,-0.075000,5.064325,2.498238,-0.075000,5.064325,2.363432,-0.075000,4.789584,2.387609,-0.075000,4.789584,2.522415,-0.075000,1.943392,2.498238,-0.075000,1.943392,2.363432,-0.075000,1.668651,2.387609,-0.075000,1.668651,2.520656,-0.075000,6.149688,2.365190,-0.075000,6.149688,2.365190,-0.075000,6.128003,2.520656,-0.075000,6.128003,2.520656,-0.075000,6.095473,2.365190,-0.075000,6.095473,2.365190,-0.075000,6.073787,2.520656,-0.075000,6.073787,2.714367,-0.075000,2.701939,2.533551,-0.075000,2.701939,2.533551,-0.075000,2.680253,2.714367,-0.075000,2.680253,2.703377,-0.075000,5.844558,2.679200,-0.075000,5.844558,2.544394,-0.075000,5.569818,2.568571,-0.075000,5.569818,2.703377,-0.075000,5.454442,2.679200,-0.075000,5.454442,2.544394,-0.075000,5.179701,2.568571,-0.075000,5.179701,2.703377,-0.075000,2.333508,2.679200,-0.075000,2.333508,2.544394,-0.075000,2.058768,2.568571,-0.075000,2.058768,2.701619,-0.075000,6.149688,2.546153,-0.075000,6.149688,2.546153,-0.075000,6.128003,2.701619,-0.075000,6.128003,2.701619,-0.075000,6.095473,2.546153,-0.075000,6.095473,2.546153,-0.075000,6.073787,2.701619,-0.075000,6.073787,2.884340,-0.075000,5.844558,2.860162,-0.075000,5.844558,2.725356,-0.075000,5.569818,2.749534,-0.075000,5.569818,2.884340,-0.075000,2.723625,2.860162,-0.075000,2.723625,2.725356,-0.075000,2.448884,2.749534,-0.075000,2.448884,2.882581,-0.075000,6.149688,2.727115,-0.075000,6.149688,2.727115,-0.075000,6.128003,2.882581,-0.075000,6.128003,2.882581,-0.075000,6.095473,2.727115,-0.075000,6.095473,2.727115,-0.075000,6.073787,2.882581,-0.075000,6.073787,3.076292,-0.075000,5.822873,2.895476,-0.075000,5.822873,2.895476,-0.075000,5.801186,3.076292,-0.075000,5.801186,3.063544,-0.075000,6.149688,2.908077,-0.075000,6.149688,2.908077,-0.075000,6.128003,3.063544,-0.075000,6.128003,3.063544,-0.075000,6.095473,2.908077,-0.075000,6.095473,2.908077,-0.075000,6.073787,3.063544,-0.075000,6.073787,3.257254,-0.075000,5.822873,3.076438,-0.075000,5.822873,3.076438,-0.075000,5.801186,3.257254,-0.075000,5.801186,3.244506,-0.075000,6.149688,3.089040,-0.075000,6.149688,3.089040,-0.075000,6.128003,3.244506,-0.075000,6.128003,3.244506,-0.075000,6.095473,3.089040,-0.075000,6.095473,3.089040,-0.075000,6.073787,3.244506,-0.075000,6.073787,-0.035090,-0.075000,-9.254619,-0.035090,0.075000,-9.254619,-0.010913,-0.075000,-9.254619,-0.010913,0.075000,-9.254619,-0.145719,-0.075000,-8.979878,-0.145719,0.075000,-8.979878,-0.169896,-0.075000,-8.979878,-0.169896,0.075000,-8.979878,0.169903,-0.075000,-8.979878,0.169903,0.075000,-8.979878,0.145726,-0.075000,-8.979878,0.145726,0.075000,-8.979878,0.010920,-0.075000,-9.254619,0.010920,0.075000,-9.254619,0.035097,-0.075000,-9.254619,0.035097,0.075000,-9.254619,-0.216052,-0.075000,-8.864502,-0.216052,0.075000,-8.864502,-0.191875,-0.075000,-8.864502,-0.191875,0.075000,-8.864502,-0.326681,-0.075000,-8.589762,-0.326681,0.075000,-8.589762,-0.350858,-0.075000,-8.589762,-0.350858,0.075000,-8.589762,-0.079634,-0.075000,-8.774094,-0.079634,0.075000,-8.774094,-0.101321,-0.075000,-8.774094,-0.101321,0.075000,-8.774094,-0.112164,-0.075000,-8.864502,-0.112164,0.075000,-8.864502,-0.068791,-0.075000,-8.864502,-0.068791,0.075000,-8.864502,0.101328,-0.075000,-8.774094,0.101328,0.075000,-8.774094,0.079642,-0.075000,-8.774094,0.079642,0.075000,-8.774094,0.068799,-0.075000,-8.864502,0.068799,0.075000,-8.864502,0.112171,-0.075000,-8.864502,0.112171,0.075000,-8.864502,0.350866,-0.075000,-8.589762,0.350866,0.075000,-8.589762,0.326688,-0.075000,-8.589762,0.326688,0.075000,-8.589762,0.191883,-0.075000,-8.864502,0.191883,0.075000,-8.864502,0.216060,-0.075000,-8.864502,0.216060,0.075000,-8.864502,-0.397015,-0.075000,-8.474385,-0.397015,0.075000,-8.474385,-0.372837,-0.075000,-8.474385,-0.372837,0.075000,-8.474385,-0.507644,-0.075000,-8.199645,-0.507644,0.075000,-8.199645,-0.531821,-0.075000,-8.199645,-0.531821,0.075000,-8.199645,0.531828,-0.075000,-8.199645,0.531828,0.075000,-8.199645,0.507651,-0.075000,-8.199645,0.507651,0.075000,-8.199645,0.372845,-0.075000,-8.474385,0.372845,0.075000,-8.474385,0.397022,-0.075000,-8.474385,0.397022,0.075000,-8.474385,-0.577977,-0.075000,-8.084269,-0.577977,0.075000,-8.084269,-0.553800,-0.075000,-8.084269,-0.553800,0.075000,-8.084269,-0.688606,-0.075000,-7.809527,-0.688606,0.075000,-7.809527,-0.712783,-0.075000,-7.809527,-0.712783,0.075000,-7.809527,0.712790,-0.075000,-7.809527,0.712790,0.075000,-7.809527,0.688613,-0.075000,-7.809527,0.688613,0.075000,-7.809527,0.553807,-0.075000,-8.084269,0.553807,0.075000,-8.084269,0.577984,-0.075000,-8.084269,0.577984,0.075000,-8.084269,-0.758940,-0.075000,-7.694151,-0.758940,0.075000,-7.694151,-0.734762,-0.075000,-7.694151,-0.734762,0.075000,-7.694151,-0.869568,-0.075000,-7.419411,-0.869568,0.075000,-7.419411,-0.893746,-0.075000,-7.419411,-0.893746,0.075000,-7.419411,0.893753,-0.075000,-7.419411,0.893753,0.075000,-7.419411,0.869576,-0.075000,-7.419411,0.869576,0.075000,-7.419411,0.734770,-0.075000,-7.694151,0.734770,0.075000,-7.694151,0.758947,-0.075000,-7.694151,0.758947,0.075000,-7.694151,-0.939902,-0.075000,-7.304034,-0.939902,0.075000,-7.304034,-0.915725,-0.075000,-7.304034,-0.915725,0.075000,-7.304034,-1.050531,-0.075000,-7.029294,-1.050531,0.075000,-7.029294,-1.074708,-0.075000,-7.029294,-1.074708,0.075000,-7.029294,1.074715,-0.075000,-7.029294,1.074715,0.075000,-7.029294,1.050539,-0.075000,-7.029294,1.050539,0.075000,-7.029294,0.915732,-0.075000,-7.304034,0.915732,0.075000,-7.304034,0.939910,-0.075000,-7.304034,0.939910,0.075000,-7.304034,-1.165409,-0.075000,-6.823509,-1.165409,0.075000,-6.823509,-1.187095,-0.075000,-6.823509,-1.187095,0.075000,-6.823509,-1.197938,-0.075000,-6.913918,-1.197938,0.075000,-6.913918,-1.154566,-0.075000,-6.913918,-1.154566,0.075000,-6.913918,-0.935653,-0.075000,-6.762114,-0.935653,0.075000,-6.762114,-1.054927,-0.075000,-6.762114,-1.054927,0.075000,-6.762114,-1.054927,-0.075000,-6.783801,-1.054927,0.075000,-6.783801,-0.935653,-0.075000,-6.783801,-0.935653,0.075000,-6.783801,-0.754690,-0.075000,-6.762114,-0.754690,0.075000,-6.762114,-0.873964,-0.075000,-6.762114,-0.873964,0.075000,-6.762114,-0.873964,-0.075000,-6.783801,-0.873964,0.075000,-6.783801,-0.754690,-0.075000,-6.783801,-0.754690,0.075000,-6.783801,-0.573728,-0.075000,-6.762114,-0.573728,0.075000,-6.762114,-0.693002,-0.075000,-6.762114,-0.693002,0.075000,-6.762114,-0.693002,-0.075000,-6.783801,-0.693002,0.075000,-6.783801,-0.573728,-0.075000,-6.783801,-0.573728,0.075000,-6.783801,-0.392765,-0.075000,-6.762114,-0.392765,0.075000,-6.762114,-0.512039,-0.075000,-6.762114,-0.512039,0.075000,-6.762114,-0.512039,-0.075000,-6.783801,-0.512039,0.075000,-6.783801,-0.392765,-0.075000,-6.783801,-0.392765,0.075000,-6.783801,-0.211803,-0.075000,-6.762114,-0.211803,0.075000,-6.762114,-0.331077,-0.075000,-6.762114,-0.331077,0.075000,-6.762114,-0.331077,-0.075000,-6.783801,-0.331077,0.075000,-6.783801,-0.211803,-0.075000,-6.783801,-0.211803,0.075000,-6.783801,-0.030840,-0.075000,-6.762114,-0.030840,0.075000,-6.762114,-0.150114,-0.075000,-6.762114,-0.150114,0.075000,-6.762114,-0.150114,-0.075000,-6.783801,-0.150114,0.075000,-6.783801,-0.030840,-0.075000,-6.783801,-0.030840,0.075000,-6.783801,0.150122,-0.075000,-6.762114,0.150122,0.075000,-6.762114,0.030848,-0.075000,-6.762114,0.030848,0.075000,-6.762114,0.030848,-0.075000,-6.783801,0.030848,0.075000,-6.783801,0.150122,-0.075000,-6.783801,0.150122,0.075000,-6.783801,0.331084,-0.075000,-6.762114,0.331084,0.075000,-6.762114,0.211810,-0.075000,-6.762114,0.211810,0.075000,-6.762114,0.211810,-0.075000,-6.783801,0.211810,0.075000,-6.783801,0.331084,-0.075000,-6.783801,0.331084,0.075000,-6.783801,0.512047,-0.075000,-6.762114,0.512047,0.075000,-6.762114,0.392773,-0.075000,-6.762114,0.392773,0.075000,-6.762114,0.392773,-0.075000,-6.783801,0.392773,0.075000,-6.783801,0.512047,-0.075000,-6.783801,0.512047,0.075000,-6.783801,0.693009,-0.075000,-6.762114,0.693009,0.075000,-6.762114,0.573735,-0.075000,-6.762114,0.573735,0.075000,-6.762114,0.573735,-0.075000,-6.783801,0.573735,0.075000,-6.783801,0.693009,-0.075000,-6.783801,0.693009,0.075000,-6.783801,0.873972,-0.075000,-6.762114,0.873972,0.075000,-6.762114,0.754698,-0.075000,-6.762114,0.754698,0.075000,-6.762114,0.754698,-0.075000,-6.783801,0.754698,0.075000,-6.783801,0.873972,-0.075000,-6.783801,0.873972,0.075000,-6.783801,1.054934,-0.075000,-6.762114,1.054934,0.075000,-6.762114,0.935660,-0.075000,-6.762114,0.935660,0.075000,-6.762114,0.935660,-0.075000,-6.783801,0.935660,0.075000,-6.783801,1.054934,-0.075000,-6.783801,1.054934,0.075000,-6.783801,1.187103,-0.075000,-6.823509,1.187103,0.075000,-6.823509,1.165417,-0.075000,-6.823509,1.165417,0.075000,-6.823509,1.154573,-0.075000,-6.913918,1.154573,0.075000,-6.913918,1.197946,-0.075000,-6.913918,1.197946,0.075000,-6.913918,-0.984447,-0.075000,-6.249060,-0.984447,0.075000,-6.249060,-1.006133,-0.075000,-6.249060,-1.006133,0.075000,-6.249060,-1.006133,-0.075000,-6.523801,-1.006133,0.075000,-6.523801,-0.984447,-0.075000,-6.523801,-0.984447,0.075000,-6.523801,-0.723919,-0.075000,-6.270746,-0.723919,0.075000,-6.270746,-0.904735,-0.075000,-6.270746,-0.904735,0.075000,-6.270746,-0.904735,-0.075000,-6.292432,-0.904735,0.075000,-6.292432,-0.723919,-0.075000,-6.292432,-0.723919,0.075000,-6.292432,-0.542957,-0.075000,-6.270746,-0.542957,0.075000,-6.270746,-0.723773,-0.075000,-6.270746,-0.723773,0.075000,-6.270746,-0.723773,-0.075000,-6.292432,-0.723773,0.075000,-6.292432,-0.542957,-0.075000,-6.292432,-0.542957,0.075000,-6.292432,-0.361994,-0.075000,-6.270746,-0.361994,0.075000,-6.270746,-0.542810,-0.075000,-6.270746,-0.542810,0.075000,-6.270746,-0.542810,-0.075000,-6.292432,-0.542810,0.075000,-6.292432,-0.361994,-0.075000,-6.292432,-0.361994,0.075000,-6.292432,-0.181032,-0.075000,-6.270746,-0.181032,0.075000,-6.270746,-0.361848,-0.075000,-6.270746,-0.361848,0.075000,-6.270746,-0.361848,-0.075000,-6.292432,-0.361848,0.075000,-6.292432,-0.181032,-0.075000,-6.292432,-0.181032,0.075000,-6.292432,-0.000070,-0.075000,-6.270746,-0.000070,0.075000,-6.270746,-0.180885,-0.075000,-6.270746,-0.180885,0.075000,-6.270746,-0.180885,-0.075000,-6.292432,-0.180885,0.075000,-6.292432,-0.000070,-0.075000,-6.292432,-0.000070,0.075000,-6.292432,0.180893,-0.075000,-6.270746,0.180893,0.075000,-6.270746,0.000077,-0.075000,-6.270746,0.000077,0.075000,-6.270746,0.000077,-0.075000,-6.292432,0.000077,0.075000,-6.292432,0.180893,-0.075000,-6.292432,0.180893,0.075000,-6.292432,0.361855,-0.075000,-6.270746,0.361855,0.075000,-6.270746,0.181040,-0.075000,-6.270746,0.181040,0.075000,-6.270746,0.181040,-0.075000,-6.292432,0.181040,0.075000,-6.292432,0.361855,-0.075000,-6.292432,0.361855,0.075000,-6.292432,0.542818,-0.075000,-6.270746,0.542818,0.075000,-6.270746,0.362002,-0.075000,-6.270746,0.362002,0.075000,-6.270746,0.362002,-0.075000,-6.292432,0.362002,0.075000,-6.292432,0.542818,-0.075000,-6.292432,0.542818,0.075000,-6.292432,0.723780,-0.075000,-6.270746,0.723780,0.075000,-6.270746,0.542964,-0.075000,-6.270746,0.542964,0.075000,-6.270746,0.542964,-0.075000,-6.292432,0.542964,0.075000,-6.292432,0.723780,-0.075000,-6.292432,0.723780,0.075000,-6.292432,0.904742,-0.075000,-6.270746,0.904742,0.075000,-6.270746,0.723927,-0.075000,-6.270746,0.723927,0.075000,-6.270746,0.723927,-0.075000,-6.292432,0.723927,0.075000,-6.292432,0.904742,-0.075000,-6.292432,0.904742,0.075000,-6.292432,1.006140,-0.075000,-6.249060,1.006140,0.075000,-6.249060,0.984454,-0.075000,-6.249060,0.984454,0.075000,-6.249060,0.984454,-0.075000,-6.523801,0.984454,0.075000,-6.523801,1.006140,-0.075000,-6.523801,1.006140,0.075000,-6.523801,-0.939902,-0.075000,-6.133683,-0.939902,0.075000,-6.133683,-0.915725,-0.075000,-6.133683,-0.915725,0.075000,-6.133683,-1.050531,-0.075000,-5.858943,-1.050531,0.075000,-5.858943,-1.074708,-0.075000,-5.858943,-1.074708,0.075000,-5.858943,-0.754690,-0.075000,-5.981880,-0.754690,0.075000,-5.981880,-0.873964,-0.075000,-5.981880,-0.873964,0.075000,-5.981880,-0.873964,-0.075000,-6.003566,-0.873964,0.075000,-6.003566,-0.754690,-0.075000,-6.003566,-0.754690,0.075000,-6.003566,-0.573728,-0.075000,-5.981880,-0.573728,0.075000,-5.981880,-0.693002,-0.075000,-5.981880,-0.693002,0.075000,-5.981880,-0.693002,-0.075000,-6.003566,-0.693002,0.075000,-6.003566,-0.573728,-0.075000,-6.003566,-0.573728,0.075000,-6.003566,-0.392765,-0.075000,-5.981880,-0.392765,0.075000,-5.981880,-0.512039,-0.075000,-5.981880,-0.512039,0.075000,-5.981880,-0.512039,-0.075000,-6.003566,-0.512039,0.075000,-6.003566,-0.392765,-0.075000,-6.003566,-0.392765,0.075000,-6.003566,-0.211803,-0.075000,-5.981880,-0.211803,0.075000,-5.981880,-0.331077,-0.075000,-5.981880,-0.331077,0.075000,-5.981880,-0.331077,-0.075000,-6.003566,-0.331077,0.075000,-6.003566,-0.211803,-0.075000,-6.003566,-0.211803,0.075000,-6.003566,-0.035090,-0.075000,-6.133683,-0.035090,0.075000,-6.133683,-0.010913,-0.075000,-6.133683,-0.010913,0.075000,-6.133683,-0.145719,-0.075000,-5.858943,-0.145719,0.075000,-5.858943,-0.169896,-0.075000,-5.858943,-0.169896,0.075000,-5.858943,0.169903,-0.075000,-5.858943,0.169903,0.075000,-5.858943,0.145726,-0.075000,-5.858943,0.145726,0.075000,-5.858943,0.010920,-0.075000,-6.133683,0.010920,0.075000,-6.133683,0.035097,-0.075000,-6.133683,0.035097,0.075000,-6.133683,0.331084,-0.075000,-5.981880,0.331084,0.075000,-5.981880,0.211810,-0.075000,-5.981880,0.211810,0.075000,-5.981880,0.211810,-0.075000,-6.003566,0.211810,0.075000,-6.003566,0.331084,-0.075000,-6.003566,0.331084,0.075000,-6.003566,0.512047,-0.075000,-5.981880,0.512047,0.075000,-5.981880,0.392773,-0.075000,-5.981880,0.392773,0.075000,-5.981880,0.392773,-0.075000,-6.003566,0.392773,0.075000,-6.003566,0.512047,-0.075000,-6.003566,0.512047,0.075000,-6.003566,0.693009,-0.075000,-5.981880,0.693009,0.075000,-5.981880,0.573735,-0.075000,-5.981880,0.573735,0.075000,-5.981880,0.573735,-0.075000,-6.003566,0.573735,0.075000,-6.003566,0.693009,-0.075000,-6.003566,0.693009,0.075000,-6.003566,0.873972,-0.075000,-5.981880,0.873972,0.075000,-5.981880,0.754698,-0.075000,-5.981880,0.754698,0.075000,-5.981880,0.754698,-0.075000,-6.003566,0.754698,0.075000,-6.003566,0.873972,-0.075000,-6.003566,0.873972,0.075000,-6.003566,1.074715,-0.075000,-5.858943,1.074715,0.075000,-5.858943,1.050539,-0.075000,-5.858943,1.050539,0.075000,-5.858943,0.915732,-0.075000,-6.133683,0.915732,0.075000,-6.133683,0.939910,-0.075000,-6.133683,0.939910,0.075000,-6.133683,-1.120864,-0.075000,-5.743567,-1.120864,0.075000,-5.743567,-1.096687,-0.075000,-5.743567,-1.096687,0.075000,-5.743567,-1.231493,-0.075000,-5.468826,-1.231493,0.075000,-5.468826,-1.255670,-0.075000,-5.468826,-1.255670,0.075000,-5.468826,-0.984447,-0.075000,-5.468826,-0.984447,0.075000,-5.468826,-1.006133,-0.075000,-5.468826,-1.006133,0.075000,-5.468826,-1.006133,-0.075000,-5.743567,-1.006133,0.075000,-5.743567,-0.984447,-0.075000,-5.743567,-0.984447,0.075000,-5.743567,-0.079634,-0.075000,-5.468826,-0.079634,0.075000,-5.468826,-0.101321,-0.075000,-5.468826,-0.101321,0.075000,-5.468826,-0.101321,-0.075000,-5.743567,-0.101321,0.075000,-5.743567,-0.079634,-0.075000,-5.743567,-0.079634,0.075000,-5.743567,0.101328,-0.075000,-5.468826,0.101328,0.075000,-5.468826,0.079642,-0.075000,-5.468826,0.079642,0.075000,-5.468826,0.079642,-0.075000,-5.743567,0.079642,0.075000,-5.743567,0.101328,-0.075000,-5.743567,0.101328,0.075000,-5.743567,1.006140,-0.075000,-5.468826,1.006140,0.075000,-5.468826,0.984454,-0.075000,-5.468826,0.984454,0.075000,-5.468826,0.984454,-0.075000,-5.743567,0.984454,0.075000,-5.743567,1.006140,-0.075000,-5.743567,1.006140,0.075000,-5.743567,1.255678,-0.075000,-5.468826,1.255678,0.075000,-5.468826,1.231501,-0.075000,-5.468826,1.231501,0.075000,-5.468826,1.096695,-0.075000,-5.743567,1.096695,0.075000,-5.743567,1.120872,-0.075000,-5.743567,1.120872,0.075000,-5.743567,-1.301827,-0.075000,-5.353450,-1.301827,0.075000,-5.353450,-1.277650,-0.075000,-5.353450,-1.277650,0.075000,-5.353450,-1.412456,-0.075000,-5.078709,-1.412456,0.075000,-5.078709,-1.436633,-0.075000,-5.078709,-1.436633,0.075000,-5.078709,-1.120864,-0.075000,-5.353450,-1.120864,0.075000,-5.353450,-1.096687,-0.075000,-5.353450,-1.096687,0.075000,-5.353450,-1.231493,-0.075000,-5.078709,-1.231493,0.075000,-5.078709,-1.255670,-0.075000,-5.078709,-1.255670,0.075000,-5.078709,-0.984447,-0.075000,-5.078709,-0.984447,0.075000,-5.078709,-1.006133,-0.075000,-5.078709,-1.006133,0.075000,-5.078709,-1.006133,-0.075000,-5.353450,-1.006133,0.075000,-5.353450,-0.984447,-0.075000,-5.353450,-0.984447,0.075000,-5.353450,-0.723919,-0.075000,-5.100395,-0.723919,0.075000,-5.100395,-0.904735,-0.075000,-5.100395,-0.904735,0.075000,-5.100395,-0.904735,-0.075000,-5.122082,-0.904735,0.075000,-5.122082,-0.723919,-0.075000,-5.122082,-0.723919,0.075000,-5.122082,-0.542957,-0.075000,-5.100395,-0.542957,0.075000,-5.100395,-0.723773,-0.075000,-5.100395,-0.723773,0.075000,-5.100395,-0.723773,-0.075000,-5.122082,-0.723773,0.075000,-5.122082,-0.542957,-0.075000,-5.122082,-0.542957,0.075000,-5.122082,-0.361994,-0.075000,-5.100395,-0.361994,0.075000,-5.100395,-0.542810,-0.075000,-5.100395,-0.542810,0.075000,-5.100395,-0.542810,-0.075000,-5.122082,-0.542810,0.075000,-5.122082,-0.361994,-0.075000,-5.122082,-0.361994,0.075000,-5.122082,-0.181032,-0.075000,-5.100395,-0.181032,0.075000,-5.100395,-0.361848,-0.075000,-5.100395,-0.361848,0.075000,-5.100395,-0.361848,-0.075000,-5.122082,-0.361848,0.075000,-5.122082,-0.181032,-0.075000,-5.122082,-0.181032,0.075000,-5.122082,-0.079634,-0.075000,-5.078709,-0.079634,0.075000,-5.078709,-0.101321,-0.075000,-5.078709,-0.101321,0.075000,-5.078709,-0.101321,-0.075000,-5.353450,-0.101321,0.075000,-5.353450,-0.079634,-0.075000,-5.353450,-0.079634,0.075000,-5.353450,0.101328,-0.075000,-5.078709,0.101328,0.075000,-5.078709,0.079642,-0.075000,-5.078709,0.079642,0.075000,-5.078709,0.079642,-0.075000,-5.353450,0.079642,0.075000,-5.353450,0.101328,-0.075000,-5.353450,0.101328,0.075000,-5.353450,0.361855,-0.075000,-5.100395,0.361855,0.075000,-5.100395,0.181040,-0.075000,-5.100395,0.181040,0.075000,-5.100395,0.181040,-0.075000,-5.122082,0.181040,0.075000,-5.122082,0.361855,-0.075000,-5.122082,0.361855,0.075000,-5.122082,0.542818,-0.075000,-5.100395,0.542818,0.075000,-5.100395,0.362002,-0.075000,-5.100395,0.362002,0.075000,-5.100395,0.362002,-0.075000,-5.122082,0.362002,0.075000,-5.122082,0.542818,-0.075000,-5.122082,0.542818,0.075000,-5.122082,0.723780,-0.075000,-5.100395,0.723780,0.075000,-5.100395,0.542964,-0.075000,-5.100395,0.542964,0.075000,-5.100395,0.542964,-0.075000,-5.122082,0.542964,0.075000,-5.122082,0.723780,-0.075000,-5.122082,0.723780,0.075000,-5.122082,0.904742,-0.075000,-5.100395,0.904742,0.075000,-5.100395,0.723927,-0.075000,-5.100395,0.723927,0.075000,-5.100395,0.723927,-0.075000,-5.122082,0.723927,0.075000,-5.122082,0.904742,-0.075000,-5.122082,0.904742,0.075000,-5.122082,1.006140,-0.075000,-5.078709,1.006140,0.075000,-5.078709,0.984454,-0.075000,-5.078709,0.984454,0.075000,-5.078709,0.984454,-0.075000,-5.353450,0.984454,0.075000,-5.353450,1.006140,-0.075000,-5.353450,1.006140,0.075000,-5.353450,1.255678,-0.075000,-5.078709,1.255678,0.075000,-5.078709,1.231501,-0.075000,-5.078709,1.231501,0.075000,-5.078709,1.096695,-0.075000,-5.353450,1.096695,0.075000,-5.353450,1.120872,-0.075000,-5.353450,1.120872,0.075000,-5.353450,1.436640,-0.075000,-5.078709,1.436640,0.075000,-5.078709,1.412463,-0.075000,-5.078709,1.412463,0.075000,-5.078709,1.277657,-0.075000,-5.353450,1.277657,0.075000,-5.353450,1.301834,-0.075000,-5.353450,1.301834,0.075000,-5.353450,-1.482789,-0.075000,-4.963333,-1.482789,0.075000,-4.963333,-1.458612,-0.075000,-4.963333,-1.458612,0.075000,-4.963333,-1.593418,-0.075000,-4.688592,-1.593418,0.075000,-4.688592,-1.617595,-0.075000,-4.688592,-1.617595,0.075000,-4.688592,-1.301827,-0.075000,-4.963333,-1.301827,0.075000,-4.963333,-1.277650,-0.075000,-4.963333,-1.277650,0.075000,-4.963333,-1.412456,-0.075000,-4.688592,-1.412456,0.075000,-4.688592,-1.436633,-0.075000,-4.688592,-1.436633,0.075000,-4.688592,-0.803484,-0.075000,-4.688592,-0.803484,0.075000,-4.688592,-0.825170,-0.075000,-4.688592,-0.825170,0.075000,-4.688592,-0.825170,-0.075000,-4.963333,-0.825170,0.075000,-4.963333,-0.803484,-0.075000,-4.963333,-0.803484,0.075000,-4.963333,-0.079634,-0.075000,-4.688592,-0.079634,0.075000,-4.688592,-0.101321,-0.075000,-4.688592,-0.101321,0.075000,-4.688592,-0.101321,-0.075000,-4.963333,-0.101321,0.075000,-4.963333,-0.079634,-0.075000,-4.963333,-0.079634,0.075000,-4.963333,0.101328,-0.075000,-4.688592,0.101328,0.075000,-4.688592,0.079642,-0.075000,-4.688592,0.079642,0.075000,-4.688592,0.079642,-0.075000,-4.963333,0.079642,0.075000,-4.963333,0.101328,-0.075000,-4.963333,0.101328,0.075000,-4.963333,0.825178,-0.075000,-4.688592,0.825178,0.075000,-4.688592,0.803491,-0.075000,-4.688592,0.803491,0.075000,-4.688592,0.803491,-0.075000,-4.963333,0.803491,0.075000,-4.963333,0.825178,-0.075000,-4.963333,0.825178,0.075000,-4.963333,1.436640,-0.075000,-4.688592,1.436640,0.075000,-4.688592,1.412463,-0.075000,-4.688592,1.412463,0.075000,-4.688592,1.277657,-0.075000,-4.963333,1.277657,0.075000,-4.963333,1.301834,-0.075000,-4.963333,1.301834,0.075000,-4.963333,1.617602,-0.075000,-4.688592,1.617602,0.075000,-4.688592,1.593426,-0.075000,-4.688592,1.593426,0.075000,-4.688592,1.458619,-0.075000,-4.963333,1.458619,0.075000,-4.963333,1.482797,-0.075000,-4.963333,1.482797,0.075000,-4.963333,-1.663752,-0.075000,-4.573216,-1.663752,0.075000,-4.573216,-1.639575,-0.075000,-4.573216,-1.639575,0.075000,-4.573216,-1.774380,-0.075000,-4.298475,-1.774380,0.075000,-4.298475,-1.798558,-0.075000,-4.298475,-1.798558,0.075000,-4.298475,-1.346371,-0.075000,-4.298475,-1.346371,0.075000,-4.298475,-1.368058,-0.075000,-4.298475,-1.368058,0.075000,-4.298475,-1.368058,-0.075000,-4.573216,-1.368058,0.075000,-4.573216,-1.346371,-0.075000,-4.573216,-1.346371,0.075000,-4.573216,-0.803484,-0.075000,-4.298475,-0.803484,0.075000,-4.298475,-0.825170,-0.075000,-4.298475,-0.825170,0.075000,-4.298475,-0.825170,-0.075000,-4.573216,-0.825170,0.075000,-4.573216,-0.803484,-0.075000,-4.573216,-0.803484,0.075000,-4.573216,-0.542957,-0.075000,-4.320161,-0.542957,0.075000,-4.320161,-0.723773,-0.075000,-4.320161,-0.723773,0.075000,-4.320161,-0.723773,-0.075000,-4.341848,-0.723773,0.075000,-4.341848,-0.542957,-0.075000,-4.341848,-0.542957,0.075000,-4.341848,-0.361994,-0.075000,-4.320161,-0.361994,0.075000,-4.320161,-0.542810,-0.075000,-4.320161,-0.542810,0.075000,-4.320161,-0.542810,-0.075000,-4.341848,-0.542810,0.075000,-4.341848,-0.361994,-0.075000,-4.341848,-0.361994,0.075000,-4.341848,-0.181032,-0.075000,-4.320161,-0.181032,0.075000,-4.320161,-0.361848,-0.075000,-4.320161,-0.361848,0.075000,-4.320161,-0.361848,-0.075000,-4.341848,-0.361848,0.075000,-4.341848,-0.181032,-0.075000,-4.341848,-0.181032,0.075000,-4.341848,-0.079634,-0.075000,-4.298475,-0.079634,0.075000,-4.298475,-0.101321,-0.075000,-4.298475,-0.101321,0.075000,-4.298475,-0.101321,-0.075000,-4.573216,-0.101321,0.075000,-4.573216,-0.079634,-0.075000,-4.573216,-0.079634,0.075000,-4.573216,0.101328,-0.075000,-4.298475,0.101328,0.075000,-4.298475,0.079642,-0.075000,-4.298475,0.079642,0.075000,-4.298475,0.079642,-0.075000,-4.573216,0.079642,0.075000,-4.573216,0.101328,-0.075000,-4.573216,0.101328,0.075000,-4.573216,0.361855,-0.075000,-4.320161,0.361855,0.075000,-4.320161,0.181040,-0.075000,-4.320161,0.181040,0.075000,-4.320161,0.181040,-0.075000,-4.341848,0.181040,0.075000,-4.341848,0.361855,-0.075000,-4.341848,0.361855,0.075000,-4.341848,0.542818,-0.075000,-4.320161,0.542818,0.075000,-4.320161,0.362002,-0.075000,-4.320161,0.362002,0.075000,-4.320161,0.362002,-0.075000,-4.341848,0.362002,0.075000,-4.341848,0.542818,-0.075000,-4.341848,0.542818,0.075000,-4.341848,0.723780,-0.075000,-4.320161,0.723780,0.075000,-4.320161,0.542964,-0.075000,-4.320161,0.542964,0.075000,-4.320161,0.542964,-0.075000,-4.341848,0.542964,0.075000,-4.341848,0.723780,-0.075000,-4.341848,0.723780,0.075000,-4.341848,0.825178,-0.075000,-4.298475,0.825178,0.075000,-4.298475,0.803491,-0.075000,-4.298475,0.803491,0.075000,-4.298475,0.803491,-0.075000,-4.573216,0.803491,0.075000,-4.573216,0.825178,-0.075000,-4.573216,0.825178,0.075000,-4.573216,1.368065,-0.075000,-4.298475,1.368065,0.075000,-4.298475,1.346379,-0.075000,-4.298475,1.346379,0.075000,-4.298475,1.346379,-0.075000,-4.573216,1.346379,0.075000,-4.573216,1.368065,-0.075000,-4.573216,1.368065,0.075000,-4.573216,1.798565,-0.075000,-4.298475,1.798565,0.075000,-4.298475,1.774388,-0.075000,-4.298475,1.774388,0.075000,-4.298475,1.639582,-0.075000,-4.573216,1.639582,0.075000,-4.573216,1.663759,-0.075000,-4.573216,1.663759,0.075000,-4.573216,-1.708296,-0.075000,-3.908358,-1.708296,0.075000,-3.908358,-1.729982,-0.075000,-3.908358,-1.729982,0.075000,-3.908358,-1.729982,-0.075000,-4.183099,-1.729982,0.075000,-4.183099,-1.708296,-0.075000,-4.183099,-1.708296,0.075000,-4.183099,-1.346371,-0.075000,-3.908358,-1.346371,0.075000,-3.908358,-1.368058,-0.075000,-3.908358,-1.368058,0.075000,-3.908358,-1.368058,-0.075000,-4.183099,-1.368058,0.075000,-4.183099,-1.346371,-0.075000,-4.183099,-1.346371,0.075000,-4.183099,-0.622522,-0.075000,-4.092690,-0.622522,0.075000,-4.092690,-0.644208,-0.075000,-4.092690,-0.644208,0.075000,-4.092690,-0.655051,-0.075000,-4.183099,-0.655051,0.075000,-4.183099,-0.611679,-0.075000,-4.183099,-0.611679,0.075000,-4.183099,-0.430716,-0.075000,-3.951731,-0.430716,0.075000,-3.951731,-0.474089,-0.075000,-3.951731,-0.474089,0.075000,-3.951731,-0.474089,-0.075000,-3.995103,-0.474089,0.075000,-3.995103,-0.430716,-0.075000,-3.995103,-0.430716,0.075000,-3.995103,-0.181032,-0.075000,-3.930044,-0.181032,0.075000,-3.930044,-0.361848,-0.075000,-3.930044,-0.361848,0.075000,-3.930044,-0.361848,-0.075000,-3.951731,-0.361848,0.075000,-3.951731,-0.181032,-0.075000,-3.951731,-0.181032,0.075000,-3.951731,-0.079634,-0.075000,-3.908358,-0.079634,0.075000,-3.908358,-0.101321,-0.075000,-3.908358,-0.101321,0.075000,-3.908358,-0.101321,-0.075000,-4.183099,-0.101321,0.075000,-4.183099,-0.079634,-0.075000,-4.183099,-0.079634,0.075000,-4.183099,0.101328,-0.075000,-3.908358,0.101328,0.075000,-3.908358,0.079642,-0.075000,-3.908358,0.079642,0.075000,-3.908358,0.079642,-0.075000,-4.183099,0.079642,0.075000,-4.183099,0.101328,-0.075000,-4.183099,0.101328,0.075000,-4.183099,0.361855,-0.075000,-3.930044,0.361855,0.075000,-3.930044,0.181040,-0.075000,-3.930044,0.181040,0.075000,-3.930044,0.181040,-0.075000,-3.951731,0.181040,0.075000,-3.951731,0.361855,-0.075000,-3.951731,0.361855,0.075000,-3.951731,0.474096,-0.075000,-3.951731,0.474096,0.075000,-3.951731,0.430724,-0.075000,-3.951731,0.430724,0.075000,-3.951731,0.430724,-0.075000,-3.995103,0.430724,0.075000,-3.995103,0.474096,-0.075000,-3.995103,0.474096,0.075000,-3.995103,0.644215,-0.075000,-4.092690,0.644215,0.075000,-4.092690,0.622529,-0.075000,-4.092690,0.622529,0.075000,-4.092690,0.611686,-0.075000,-4.183099,0.611686,0.075000,-4.183099,0.655058,-0.075000,-4.183099,0.655058,0.075000,-4.183099,1.368065,-0.075000,-3.908358,1.368065,0.075000,-3.908358,1.346379,-0.075000,-3.908358,1.346379,0.075000,-3.908358,1.346379,-0.075000,-4.183099,1.346379,0.075000,-4.183099,1.368065,-0.075000,-4.183099,1.368065,0.075000,-4.183099,1.729990,-0.075000,-3.908358,1.729990,0.075000,-3.908358,1.708304,-0.075000,-3.908358,1.708304,0.075000,-3.908358,1.708304,-0.075000,-4.183099,1.708304,0.075000,-4.183099,1.729990,-0.075000,-4.183099,1.729990,0.075000,-4.183099,-1.708296,-0.075000,-3.518242,-1.708296,0.075000,-3.518242,-1.729982,-0.075000,-3.518242,-1.729982,0.075000,-3.518242,-1.729982,-0.075000,-3.792982,-1.729982,0.075000,-3.792982,-1.708296,-0.075000,-3.792982,-1.708296,0.075000,-3.792982,-1.346371,-0.075000,-3.518242,-1.346371,0.075000,-3.518242,-1.368058,-0.075000,-3.518242,-1.368058,0.075000,-3.518242,-1.368058,-0.075000,-3.792982,-1.368058,0.075000,-3.792982,-1.346371,-0.075000,-3.792982,-1.346371,0.075000,-3.792982,-0.441559,-0.075000,-3.518242,-0.441559,0.075000,-3.518242,-0.463245,-0.075000,-3.518242,-0.463245,0.075000,-3.518242,-0.463245,-0.075000,-3.792982,-0.463245,0.075000,-3.792982,-0.441559,-0.075000,-3.792982,-0.441559,0.075000,-3.792982,-0.181032,-0.075000,-3.539928,-0.181032,0.075000,-3.539928,-0.361848,-0.075000,-3.539928,-0.361848,0.075000,-3.539928,-0.361848,-0.075000,-3.561614,-0.361848,0.075000,-3.561614,-0.181032,-0.075000,-3.561614,-0.181032,0.075000,-3.561614,-0.079634,-0.075000,-3.518242,-0.079634,0.075000,-3.518242,-0.101321,-0.075000,-3.518242,-0.101321,0.075000,-3.518242,-0.101321,-0.075000,-3.792982,-0.101321,0.075000,-3.792982,-0.079634,-0.075000,-3.792982,-0.079634,0.075000,-3.792982,0.101328,-0.075000,-3.518242,0.101328,0.075000,-3.518242,0.079642,-0.075000,-3.518242,0.079642,0.075000,-3.518242,0.079642,-0.075000,-3.792982,0.079642,0.075000,-3.792982,0.101328,-0.075000,-3.792982,0.101328,0.075000,-3.792982,0.361855,-0.075000,-3.539928,0.361855,0.075000,-3.539928,0.181040,-0.075000,-3.539928,0.181040,0.075000,-3.539928,0.181040,-0.075000,-3.561614,0.181040,0.075000,-3.561614,0.361855,-0.075000,-3.561614,0.361855,0.075000,-3.561614,0.463253,-0.075000,-3.518242,0.463253,0.075000,-3.518242,0.441567,-0.075000,-3.518242,0.441567,0.075000,-3.518242,0.441567,-0.075000,-3.792982,0.441567,0.075000,-3.792982,0.463253,-0.075000,-3.792982,0.463253,0.075000,-3.792982,1.368065,-0.075000,-3.518242,1.368065,0.075000,-3.518242,1.346379,-0.075000,-3.518242,1.346379,0.075000,-3.518242,1.346379,-0.075000,-3.792982,1.346379,0.075000,-3.792982,1.368065,-0.075000,-3.792982,1.368065,0.075000,-3.792982,1.729990,-0.075000,-3.518242,1.729990,0.075000,-3.518242,1.708304,-0.075000,-3.518242,1.708304,0.075000,-3.518242,1.708304,-0.075000,-3.792982,1.708304,0.075000,-3.792982,1.729990,-0.075000,-3.792982,1.729990,0.075000,-3.792982,-1.708296,-0.075000,-3.128125,-1.708296,0.075000,-3.128125,-1.729982,-0.075000,-3.128125,-1.729982,0.075000,-3.128125,-1.729982,-0.075000,-3.402865,-1.729982,0.075000,-3.402865,-1.708296,-0.075000,-3.402865,-1.708296,0.075000,-3.402865,-1.346371,-0.075000,-3.128125,-1.346371,0.075000,-3.128125,-1.368058,-0.075000,-3.128125,-1.368058,0.075000,-3.128125,-1.368058,-0.075000,-3.402865,-1.368058,0.075000,-3.402865,-1.346371,-0.075000,-3.402865,-1.346371,0.075000,-3.402865,-0.792641,-0.075000,-3.171497,-0.792641,0.075000,-3.171497,-0.836014,-0.075000,-3.171497,-0.836014,0.075000,-3.171497,-0.836014,-0.075000,-3.214870,-0.836014,0.075000,-3.214870,-0.792641,-0.075000,-3.214870,-0.792641,0.075000,-3.214870,-0.622522,-0.075000,-3.312458,-0.622522,0.075000,-3.312458,-0.644208,-0.075000,-3.312458,-0.644208,0.075000,-3.312458,-0.655051,-0.075000,-3.402865,-0.655051,0.075000,-3.402865,-0.611679,-0.075000,-3.402865,-0.611679,0.075000,-3.402865,-0.079634,-0.075000,-3.128125,-0.079634,0.075000,-3.128125,-0.101321,-0.075000,-3.128125,-0.101321,0.075000,-3.128125,-0.101321,-0.075000,-3.402865,-0.101321,0.075000,-3.402865,-0.079634,-0.075000,-3.402865,-0.079634,0.075000,-3.402865,0.101328,-0.075000,-3.128125,0.101328,0.075000,-3.128125,0.079642,-0.075000,-3.128125,0.079642,0.075000,-3.128125,0.079642,-0.075000,-3.402865,0.079642,0.075000,-3.402865,0.101328,-0.075000,-3.402865,0.101328,0.075000,-3.402865,0.644215,-0.075000,-3.312458,0.644215,0.075000,-3.312458,0.622529,-0.075000,-3.312458,0.622529,0.075000,-3.312458,0.611686,-0.075000,-3.402865,0.611686,0.075000,-3.402865,0.655058,-0.075000,-3.402865,0.655058,0.075000,-3.402865,0.836021,-0.075000,-3.171497,0.836021,0.075000,-3.171497,0.792648,-0.075000,-3.171497,0.792648,0.075000,-3.171497,0.792648,-0.075000,-3.214870,0.792648,0.075000,-3.214870,0.836021,-0.075000,-3.214870,0.836021,0.075000,-3.214870,1.368065,-0.075000,-3.128125,1.368065,0.075000,-3.128125,1.346379,-0.075000,-3.128125,1.346379,0.075000,-3.128125,1.346379,-0.075000,-3.402865,1.346379,0.075000,-3.402865,1.368065,-0.075000,-3.402865,1.368065,0.075000,-3.402865,1.729990,-0.075000,-3.128125,1.729990,0.075000,-3.128125,1.708304,-0.075000,-3.128125,1.708304,0.075000,-3.128125,1.708304,-0.075000,-3.402865,1.708304,0.075000,-3.402865,1.729990,-0.075000,-3.402865,1.729990,0.075000,-3.402865,-1.708296,-0.075000,-2.738008,-1.708296,0.075000,-2.738008,-1.729982,-0.075000,-2.738008,-1.729982,0.075000,-2.738008,-1.729982,-0.075000,-3.012749,-1.729982,0.075000,-3.012749,-1.708296,-0.075000,-3.012749,-1.708296,0.075000,-3.012749,-1.346371,-0.075000,-2.738008,-1.346371,0.075000,-2.738008,-1.368058,-0.075000,-2.738008,-1.368058,0.075000,-2.738008,-1.368058,-0.075000,-3.012749,-1.368058,0.075000,-3.012749,-1.346371,-0.075000,-3.012749,-1.346371,0.075000,-3.012749,-0.939902,-0.075000,-3.012749,-0.939902,0.075000,-3.012749,-0.915725,-0.075000,-3.012749,-0.915725,0.075000,-3.012749,-1.050531,-0.075000,-2.738008,-1.050531,0.075000,-2.738008,-1.074708,-0.075000,-2.738008,-1.074708,0.075000,-2.738008,-0.079634,-0.075000,-2.738008,-0.079634,0.075000,-2.738008,-0.101321,-0.075000,-2.738008,-0.101321,0.075000,-2.738008,-0.101321,-0.075000,-3.012749,-0.101321,0.075000,-3.012749,-0.079634,-0.075000,-3.012749,-0.079634,0.075000,-3.012749,0.101328,-0.075000,-2.738008,0.101328,0.075000,-2.738008,0.079642,-0.075000,-2.738008,0.079642,0.075000,-2.738008,0.079642,-0.075000,-3.012749,0.079642,0.075000,-3.012749,0.101328,-0.075000,-3.012749,0.101328,0.075000,-3.012749,1.074715,-0.075000,-2.738008,1.074715,0.075000,-2.738008,1.050539,-0.075000,-2.738008,1.050539,0.075000,-2.738008,0.915732,-0.075000,-3.012749,0.915732,0.075000,-3.012749,0.939910,-0.075000,-3.012749,0.939910,0.075000,-3.012749,1.368065,-0.075000,-2.738008,1.368065,0.075000,-2.738008,1.346379,-0.075000,-2.738008,1.346379,0.075000,-2.738008,1.346379,-0.075000,-3.012749,1.346379,0.075000,-3.012749,1.368065,-0.075000,-3.012749,1.368065,0.075000,-3.012749,1.729990,-0.075000,-2.738008,1.729990,0.075000,-2.738008,1.708304,-0.075000,-2.738008,1.708304,0.075000,-2.738008,1.708304,-0.075000,-3.012749,1.708304,0.075000,-3.012749,1.729990,-0.075000,-3.012749,1.729990,0.075000,-3.012749,-1.708296,-0.075000,-2.347892,-1.708296,0.075000,-2.347892,-1.729982,-0.075000,-2.347892,-1.729982,0.075000,-2.347892,-1.729982,-0.075000,-2.622632,-1.729982,0.075000,-2.622632,-1.708296,-0.075000,-2.622632,-1.708296,0.075000,-2.622632,-1.346371,-0.075000,-2.347892,-1.346371,0.075000,-2.347892,-1.368058,-0.075000,-2.347892,-1.368058,0.075000,-2.347892,-1.368058,-0.075000,-2.622632,-1.368058,0.075000,-2.622632,-1.346371,-0.075000,-2.622632,-1.346371,0.075000,-2.622632,-1.165409,-0.075000,-2.347892,-1.165409,0.075000,-2.347892,-1.187095,-0.075000,-2.347892,-1.187095,0.075000,-2.347892,-1.187095,-0.075000,-2.622632,-1.187095,0.075000,-2.622632,-1.165409,-0.075000,-2.622632,-1.165409,0.075000,-2.622632,-0.079634,-0.075000,-2.347892,-0.079634,0.075000,-2.347892,-0.101321,-0.075000,-2.347892,-0.101321,0.075000,-2.347892,-0.101321,-0.075000,-2.622632,-0.101321,0.075000,-2.622632,-0.079634,-0.075000,-2.622632,-0.079634,0.075000,-2.622632,0.101328,-0.075000,-2.347892,0.101328,0.075000,-2.347892,0.079642,-0.075000,-2.347892,0.079642,0.075000,-2.347892,0.079642,-0.075000,-2.622632,0.079642,0.075000,-2.622632,0.101328,-0.075000,-2.622632,0.101328,0.075000,-2.622632,1.187103,-0.075000,-2.347892,1.187103,0.075000,-2.347892,1.165417,-0.075000,-2.347892,1.165417,0.075000,-2.347892,1.165417,-0.075000,-2.622632,1.165417,0.075000,-2.622632,1.187103,-0.075000,-2.622632,1.187103,0.075000,-2.622632,1.368065,-0.075000,-2.347892,1.368065,0.075000,-2.347892,1.346379,-0.075000,-2.347892,1.346379,0.075000,-2.347892,1.346379,-0.075000,-2.622632,1.346379,0.075000,-2.622632,1.368065,-0.075000,-2.622632,1.368065,0.075000,-2.622632,1.729990,-0.075000,-2.347892,1.729990,0.075000,-2.347892,1.708304,-0.075000,-2.347892,1.708304,0.075000,-2.347892,1.708304,-0.075000,-2.622632,1.708304,0.075000,-2.622632,1.729990,-0.075000,-2.622632,1.729990,0.075000,-2.622632,-1.708296,-0.075000,-1.957775,-1.708296,0.075000,-1.957775,-1.729982,-0.075000,-1.957775,-1.729982,0.075000,-1.957775,-1.729982,-0.075000,-2.232515,-1.729982,0.075000,-2.232515,-1.708296,-0.075000,-2.232515,-1.708296,0.075000,-2.232515,-1.346371,-0.075000,-1.957775,-1.346371,0.075000,-1.957775,-1.368058,-0.075000,-1.957775,-1.368058,0.075000,-1.957775,-1.368058,-0.075000,-2.232515,-1.368058,0.075000,-2.232515,-1.346371,-0.075000,-2.232515,-1.346371,0.075000,-2.232515,-1.165409,-0.075000,-1.957775,-1.165409,0.075000,-1.957775,-1.187095,-0.075000,-1.957775,-1.187095,0.075000,-1.957775,-1.187095,-0.075000,-2.232515,-1.187095,0.075000,-2.232515,-1.165409,-0.075000,-2.232515,-1.165409,0.075000,-2.232515,-0.079634,-0.075000,-1.957775,-0.079634,0.075000,-1.957775,-0.101321,-0.075000,-1.957775,-0.101321,0.075000,-1.957775,-0.101321,-0.075000,-2.232515,-0.101321,0.075000,-2.232515,-0.079634,-0.075000,-2.232515,-0.079634,0.075000,-2.232515,0.101328,-0.075000,-1.957775,0.101328,0.075000,-1.957775,0.079642,-0.075000,-1.957775,0.079642,0.075000,-1.957775,0.079642,-0.075000,-2.232515,0.079642,0.075000,-2.232515,0.101328,-0.075000,-2.232515,0.101328,0.075000,-2.232515,1.187103,-0.075000,-1.957775,1.187103,0.075000,-1.957775,1.165417,-0.075000,-1.957775,1.165417,0.075000,-1.957775,1.165417,-0.075000,-2.232515,1.165417,0.075000,-2.232515,1.187103,-0.075000,-2.232515,1.187103,0.075000,-2.232515,1.368065,-0.075000,-1.957775,1.368065,0.075000,-1.957775,1.346379,-0.075000,-1.957775,1.346379,0.075000,-1.957775,1.346379,-0.075000,-2.232515,1.346379,0.075000,-2.232515,1.368065,-0.075000,-2.232515,1.368065,0.075000,-2.232515,1.729990,-0.075000,-1.957775,1.729990,0.075000,-1.957775,1.708304,-0.075000,-1.957775,1.708304,0.075000,-1.957775,1.708304,-0.075000,-2.232515,1.708304,0.075000,-2.232515,1.729990,-0.075000,-2.232515,1.729990,0.075000,-2.232515,-1.708296,-0.075000,-1.567658,-1.708296,0.075000,-1.567658,-1.729982,-0.075000,-1.567658,-1.729982,0.075000,-1.567658,-1.729982,-0.075000,-1.842399,-1.729982,0.075000,-1.842399,-1.708296,-0.075000,-1.842399,-1.708296,0.075000,-1.842399,-1.346371,-0.075000,-1.567658,-1.346371,0.075000,-1.567658,-1.368058,-0.075000,-1.567658,-1.368058,0.075000,-1.567658,-1.368058,-0.075000,-1.842399,-1.368058,0.075000,-1.842399,-1.346371,-0.075000,-1.842399,-1.346371,0.075000,-1.842399,-0.915871,-0.075000,-1.567658,-0.915871,0.075000,-1.567658,-0.940048,-0.075000,-1.567658,-0.940048,0.075000,-1.567658,-1.074855,-0.075000,-1.842399,-1.074855,0.075000,-1.842399,-1.050677,-0.075000,-1.842399,-1.050677,0.075000,-1.842399,-0.079634,-0.075000,-1.567658,-0.079634,0.075000,-1.567658,-0.101321,-0.075000,-1.567658,-0.101321,0.075000,-1.567658,-0.101321,-0.075000,-1.842399,-0.101321,0.075000,-1.842399,-0.079634,-0.075000,-1.842399,-0.079634,0.075000,-1.842399,0.101328,-0.075000,-1.567658,0.101328,0.075000,-1.567658,0.079642,-0.075000,-1.567658,0.079642,0.075000,-1.567658,0.079642,-0.075000,-1.842399,0.079642,0.075000,-1.842399,0.101328,-0.075000,-1.842399,0.101328,0.075000,-1.842399,1.050685,-0.075000,-1.842399,1.050685,0.075000,-1.842399,1.074862,-0.075000,-1.842399,1.074862,0.075000,-1.842399,0.940056,-0.075000,-1.567658,0.940056,0.075000,-1.567658,0.915879,-0.075000,-1.567658,0.915879,0.075000,-1.567658,1.368065,-0.075000,-1.567658,1.368065,0.075000,-1.567658,1.346379,-0.075000,-1.567658,1.346379,0.075000,-1.567658,1.346379,-0.075000,-1.842399,1.346379,0.075000,-1.842399,1.368065,-0.075000,-1.842399,1.368065,0.075000,-1.842399,1.729990,-0.075000,-1.567658,1.729990,0.075000,-1.567658,1.708304,-0.075000,-1.567658,1.708304,0.075000,-1.567658,1.708304,-0.075000,-1.842399,1.708304,0.075000,-1.842399,1.729990,-0.075000,-1.842399,1.729990,0.075000,-1.842399,-1.708296,-0.075000,-1.177542,-1.708296,0.075000,-1.177542,-1.729982,-0.075000,-1.177542,-1.729982,0.075000,-1.177542,-1.729982,-0.075000,-1.452282,-1.729982,0.075000,-1.452282,-1.708296,-0.075000,-1.452282,-1.708296,0.075000,-1.452282,-1.346371,-0.075000,-1.177542,-1.346371,0.075000,-1.177542,-1.368058,-0.075000,-1.177542,-1.368058,0.075000,-1.177542,-1.368058,-0.075000,-1.452282,-1.368058,0.075000,-1.452282,-1.346371,-0.075000,-1.452282,-1.346371,0.075000,-1.452282,-0.803484,-0.075000,-1.361874,-0.803484,0.075000,-1.361874,-0.825170,-0.075000,-1.361874,-0.825170,0.075000,-1.361874,-0.836014,-0.075000,-1.452282,-0.836014,0.075000,-1.452282,-0.792641,-0.075000,-1.452282,-0.792641,0.075000,-1.452282,-0.611679,-0.075000,-1.220914,-0.611679,0.075000,-1.220914,-0.655051,-0.075000,-1.220914,-0.655051,0.075000,-1.220914,-0.655051,-0.075000,-1.264286,-0.655051,0.075000,-1.264286,-0.611679,-0.075000,-1.264286,-0.611679,0.075000,-1.264286,-0.181032,-0.075000,-1.199228,-0.181032,0.075000,-1.199228,-0.361848,-0.075000,-1.199228,-0.361848,0.075000,-1.199228,-0.361848,-0.075000,-1.220914,-0.361848,0.075000,-1.220914,-0.181032,-0.075000,-1.220914,-0.181032,0.075000,-1.220914,-0.079634,-0.075000,-1.177542,-0.079634,0.075000,-1.177542,-0.101321,-0.075000,-1.177542,-0.101321,0.075000,-1.177542,-0.101321,-0.075000,-1.452282,-0.101321,0.075000,-1.452282,-0.079634,-0.075000,-1.452282,-0.079634,0.075000,-1.452282,0.101328,-0.075000,-1.177542,0.101328,0.075000,-1.177542,0.079642,-0.075000,-1.177542,0.079642,0.075000,-1.177542,0.079642,-0.075000,-1.452282,0.079642,0.075000,-1.452282,0.101328,-0.075000,-1.452282,0.101328,0.075000,-1.452282,0.361855,-0.075000,-1.199228,0.361855,0.075000,-1.199228,0.181040,-0.075000,-1.199228,0.181040,0.075000,-1.199228,0.181040,-0.075000,-1.220914,0.181040,0.075000,-1.220914,0.361855,-0.075000,-1.220914,0.361855,0.075000,-1.220914,0.655058,-0.075000,-1.220914,0.655058,0.075000,-1.220914,0.611686,-0.075000,-1.220914,0.611686,0.075000,-1.220914,0.611686,-0.075000,-1.264286,0.611686,0.075000,-1.264286,0.655058,-0.075000,-1.264286,0.655058,0.075000,-1.264286,0.825178,-0.075000,-1.361874,0.825178,0.075000,-1.361874,0.803491,-0.075000,-1.361874,0.803491,0.075000,-1.361874,0.792648,-0.075000,-1.452282,0.792648,0.075000,-1.452282,0.836021,-0.075000,-1.452282,0.836021,0.075000,-1.452282,1.368065,-0.075000,-1.177542,1.368065,0.075000,-1.177542,1.346379,-0.075000,-1.177542,1.346379,0.075000,-1.177542,1.346379,-0.075000,-1.452282,1.346379,0.075000,-1.452282,1.368065,-0.075000,-1.452282,1.368065,0.075000,-1.452282,1.729990,-0.075000,-1.177542,1.729990,0.075000,-1.177542,1.708304,-0.075000,-1.177542,1.708304,0.075000,-1.177542,1.708304,-0.075000,-1.452282,1.708304,0.075000,-1.452282,1.729990,-0.075000,-1.452282,1.729990,0.075000,-1.452282,-1.708296,-0.075000,-0.787425,-1.708296,0.075000,-0.787425,-1.729982,-0.075000,-0.787425,-1.729982,0.075000,-0.787425,-1.729982,-0.075000,-1.062166,-1.729982,0.075000,-1.062166,-1.708296,-0.075000,-1.062166,-1.708296,0.075000,-1.062166,-1.346371,-0.075000,-0.787425,-1.346371,0.075000,-0.787425,-1.368058,-0.075000,-0.787425,-1.368058,0.075000,-0.787425,-1.368058,-0.075000,-1.062166,-1.368058,0.075000,-1.062166,-1.346371,-0.075000,-1.062166,-1.346371,0.075000,-1.062166,-0.904882,-0.075000,-0.809111,-0.904882,0.075000,-0.809111,-1.085698,-0.075000,-0.809111,-1.085698,0.075000,-0.809111,-1.085698,-0.075000,-0.830797,-1.085698,0.075000,-0.830797,-0.904882,-0.075000,-0.830797,-0.904882,0.075000,-0.830797,-0.079634,-0.075000,-0.787425,-0.079634,0.075000,-0.787425,-0.101321,-0.075000,-0.787425,-0.101321,0.075000,-0.787425,-0.101321,-0.075000,-1.062166,-0.101321,0.075000,-1.062166,-0.079634,-0.075000,-1.062166,-0.079634,0.075000,-1.062166,0.101328,-0.075000,-0.787425,0.101328,0.075000,-0.787425,0.079642,-0.075000,-0.787425,0.079642,0.075000,-0.787425,0.079642,-0.075000,-1.062166,0.079642,0.075000,-1.062166,0.101328,-0.075000,-1.062166,0.101328,0.075000,-1.062166,1.085705,-0.075000,-0.809111,1.085705,0.075000,-0.809111,0.904889,-0.075000,-0.809111,0.904889,0.075000,-0.809111,0.904889,-0.075000,-0.830797,0.904889,0.075000,-0.830797,1.085705,-0.075000,-0.830797,1.085705,0.075000,-0.830797,1.368065,-0.075000,-0.787425,1.368065,0.075000,-0.787425,1.346379,-0.075000,-0.787425,1.346379,0.075000,-0.787425,1.346379,-0.075000,-1.062166,1.346379,0.075000,-1.062166,1.368065,-0.075000,-1.062166,1.368065,0.075000,-1.062166,1.729990,-0.075000,-0.787425,1.729990,0.075000,-0.787425,1.708304,-0.075000,-0.787425,1.708304,0.075000,-0.787425,1.708304,-0.075000,-1.062166,1.708304,0.075000,-1.062166,1.729990,-0.075000,-1.062166,1.729990,0.075000,-1.062166,-1.708296,-0.075000,-0.397309,-1.708296,0.075000,-0.397309,-1.729982,-0.075000,-0.397309,-1.729982,0.075000,-0.397309,-1.729982,-0.075000,-0.672049,-1.729982,0.075000,-0.672049,-1.708296,-0.075000,-0.672049,-1.708296,0.075000,-0.672049,-1.346371,-0.075000,-0.397309,-1.346371,0.075000,-0.397309,-1.368058,-0.075000,-0.397309,-1.368058,0.075000,-0.397309,-1.368058,-0.075000,-0.672049,-1.368058,0.075000,-0.672049,-1.346371,-0.075000,-0.672049,-1.346371,0.075000,-0.672049,-1.120864,-0.075000,-0.672049,-1.120864,0.075000,-0.672049,-1.096687,-0.075000,-0.672049,-1.096687,0.075000,-0.672049,-1.231493,-0.075000,-0.397309,-1.231493,0.075000,-0.397309,-1.255670,-0.075000,-0.397309,-1.255670,0.075000,-0.397309,-0.734909,-0.075000,-0.397309,-0.734909,0.075000,-0.397309,-0.759086,-0.075000,-0.397309,-0.759086,0.075000,-0.397309,-0.893892,-0.075000,-0.672049,-0.893892,0.075000,-0.672049,-0.869715,-0.075000,-0.672049,-0.869715,0.075000,-0.672049,-0.542957,-0.075000,-0.418995,-0.542957,0.075000,-0.418995,-0.723773,-0.075000,-0.418995,-0.723773,0.075000,-0.418995,-0.723773,-0.075000,-0.440681,-0.723773,0.075000,-0.440681,-0.542957,-0.075000,-0.440681,-0.542957,0.075000,-0.440681,-0.430716,-0.075000,-0.440681,-0.430716,0.075000,-0.440681,-0.474089,-0.075000,-0.440681,-0.474089,0.075000,-0.440681,-0.474089,-0.075000,-0.484053,-0.474089,0.075000,-0.484053,-0.430716,-0.075000,-0.484053,-0.430716,0.075000,-0.484053,-0.260597,-0.075000,-0.581641,-0.260597,0.075000,-0.581641,-0.282283,-0.075000,-0.581641,-0.282283,0.075000,-0.581641,-0.293126,-0.075000,-0.672049,-0.293126,0.075000,-0.672049,-0.249754,-0.075000,-0.672049,-0.249754,0.075000,-0.672049,-0.079634,-0.075000,-0.397309,-0.079634,0.075000,-0.397309,-0.101321,-0.075000,-0.397309,-0.101321,0.075000,-0.397309,-0.101321,-0.075000,-0.672049,-0.101321,0.075000,-0.672049,-0.079634,-0.075000,-0.672049,-0.079634,0.075000,-0.672049,0.101328,-0.075000,-0.397309,0.101328,0.075000,-0.397309,0.079642,-0.075000,-0.397309,0.079642,0.075000,-0.397309,0.079642,-0.075000,-0.672049,0.079642,0.075000,-0.672049,0.101328,-0.075000,-0.672049,0.101328,0.075000,-0.672049,0.282291,-0.075000,-0.581641,0.282291,0.075000,-0.581641,0.260604,-0.075000,-0.581641,0.260604,0.075000,-0.581641,0.249761,-0.075000,-0.672049,0.249761,0.075000,-0.672049,0.293134,-0.075000,-0.672049,0.293134,0.075000,-0.672049,0.474096,-0.075000,-0.440681,0.474096,0.075000,-0.440681,0.430724,-0.075000,-0.440681,0.430724,0.075000,-0.440681,0.430724,-0.075000,-0.484053,0.430724,0.075000,-0.484053,0.474096,-0.075000,-0.484053,0.474096,0.075000,-0.484053,0.723780,-0.075000,-0.418995,0.723780,0.075000,-0.418995,0.542964,-0.075000,-0.418995,0.542964,0.075000,-0.418995,0.542964,-0.075000,-0.440681,0.542964,0.075000,-0.440681,0.723780,-0.075000,-0.440681,0.723780,0.075000,-0.440681,0.869722,-0.075000,-0.672049,0.869722,0.075000,-0.672049,0.893900,-0.075000,-0.672049,0.893900,0.075000,-0.672049,0.759094,-0.075000,-0.397309,0.759094,0.075000,-0.397309,0.734916,-0.075000,-0.397309,0.734916,0.075000,-0.397309,1.255678,-0.075000,-0.397309,1.255678,0.075000,-0.397309,1.231501,-0.075000,-0.397309,1.231501,0.075000,-0.397309,1.096695,-0.075000,-0.672049,1.096695,0.075000,-0.672049,1.120872,-0.075000,-0.672049,1.120872,0.075000,-0.672049,1.368065,-0.075000,-0.397309,1.368065,0.075000,-0.397309,1.346379,-0.075000,-0.397309,1.346379,0.075000,-0.397309,1.346379,-0.075000,-0.672049,1.346379,0.075000,-0.672049,1.368065,-0.075000,-0.672049,1.368065,0.075000,-0.672049,1.729990,-0.075000,-0.397309,1.729990,0.075000,-0.397309,1.708304,-0.075000,-0.397309,1.708304,0.075000,-0.397309,1.708304,-0.075000,-0.672049,1.708304,0.075000,-0.672049,1.729990,-0.075000,-0.672049,1.729990,0.075000,-0.672049,-1.708296,-0.075000,-0.007191,-1.708296,0.075000,-0.007191,-1.729982,-0.075000,-0.007191,-1.729982,0.075000,-0.007191,-1.729982,-0.075000,-0.281932,-1.729982,0.075000,-0.281932,-1.708296,-0.075000,-0.281932,-1.708296,0.075000,-0.281932,-1.346371,-0.075000,-0.007191,-1.346371,0.075000,-0.007191,-1.368058,-0.075000,-0.007191,-1.368058,0.075000,-0.007191,-1.368058,-0.075000,-0.281932,-1.368058,0.075000,-0.281932,-1.346371,-0.075000,-0.281932,-1.346371,0.075000,-0.281932,-1.096834,-0.075000,-0.007191,-1.096834,0.075000,-0.007191,-1.121011,-0.075000,-0.007191,-1.121011,0.075000,-0.007191,-1.255817,-0.075000,-0.281932,-1.255817,0.075000,-0.281932,-1.231640,-0.075000,-0.281932,-1.231640,0.075000,-0.281932,-0.904882,-0.075000,-0.028878,-0.904882,0.075000,-0.028878,-1.085698,-0.075000,-0.028878,-1.085698,0.075000,-0.028878,-1.085698,-0.075000,-0.050564,-1.085698,0.075000,-0.050564,-0.904882,-0.075000,-0.050564,-0.904882,0.075000,-0.050564,-0.758940,-0.075000,-0.281932,-0.758940,0.075000,-0.281932,-0.734762,-0.075000,-0.281932,-0.734762,0.075000,-0.281932,-0.869568,-0.075000,-0.007191,-0.869568,0.075000,-0.007191,-0.893746,-0.075000,-0.007191,-0.893746,0.075000,-0.007191,-0.441559,-0.075000,-0.191524,-0.441559,0.075000,-0.191524,-0.463245,-0.075000,-0.191524,-0.463245,0.075000,-0.191524,-0.474089,-0.075000,-0.281932,-0.474089,0.075000,-0.281932,-0.430716,-0.075000,-0.281932,-0.430716,0.075000,-0.281932,-0.249754,-0.075000,-0.050564,-0.249754,0.075000,-0.050564,-0.293126,-0.075000,-0.050564,-0.293126,0.075000,-0.050564,-0.293126,-0.075000,-0.093937,-0.293126,0.075000,-0.093937,-0.249754,-0.075000,-0.093937,-0.249754,0.075000,-0.093937,-0.079634,-0.075000,-0.007191,-0.079634,0.075000,-0.007191,-0.101321,-0.075000,-0.007191,-0.101321,0.075000,-0.007191,-0.101321,-0.075000,-0.281932,-0.101321,0.075000,-0.281932,-0.079634,-0.075000,-0.281932,-0.079634,0.075000,-0.281932,0.101328,-0.075000,-0.007191,0.101328,0.075000,-0.007191,0.079642,-0.075000,-0.007191,0.079642,0.075000,-0.007191,0.079642,-0.075000,-0.281932,0.079642,0.075000,-0.281932,0.101328,-0.075000,-0.281932,0.101328,0.075000,-0.281932,0.293134,-0.075000,-0.050564,0.293134,0.075000,-0.050564,0.249761,-0.075000,-0.050564,0.249761,0.075000,-0.050564,0.249761,-0.075000,-0.093937,0.249761,0.075000,-0.093937,0.293134,-0.075000,-0.093937,0.293134,0.075000,-0.093937,0.463253,-0.075000,-0.191524,0.463253,0.075000,-0.191524,0.441567,-0.075000,-0.191524,0.441567,0.075000,-0.191524,0.430724,-0.075000,-0.281932,0.430724,0.075000,-0.281932,0.474096,-0.075000,-0.281932,0.474096,0.075000,-0.281932,0.893753,-0.075000,-0.007191,0.893753,0.075000,-0.007191,0.869576,-0.075000,-0.007191,0.869576,0.075000,-0.007191,0.734770,-0.075000,-0.281932,0.734770,0.075000,-0.281932,0.758947,-0.075000,-0.281932,0.758947,0.075000,-0.281932,1.085705,-0.075000,-0.028878,1.085705,0.075000,-0.028878,0.904889,-0.075000,-0.028878,0.904889,0.075000,-0.028878,0.904889,-0.075000,-0.050564,0.904889,0.075000,-0.050564,1.085705,-0.075000,-0.050564,1.085705,0.075000,-0.050564,1.231647,-0.075000,-0.281932,1.231647,0.075000,-0.281932,1.255824,-0.075000,-0.281932,1.255824,0.075000,-0.281932,1.121018,-0.075000,-0.007191,1.121018,0.075000,-0.007191,1.096841,-0.075000,-0.007191,1.096841,0.075000,-0.007191,1.368065,-0.075000,-0.007191,1.368065,0.075000,-0.007191,1.346379,-0.075000,-0.007191,1.346379,0.075000,-0.007191,1.346379,-0.075000,-0.281932,1.346379,0.075000,-0.281932,1.368065,-0.075000,-0.281932,1.368065,0.075000,-0.281932,1.729990,-0.075000,-0.007191,1.729990,0.075000,-0.007191,1.708304,-0.075000,-0.007191,1.708304,0.075000,-0.007191,1.708304,-0.075000,-0.281932,1.708304,0.075000,-0.281932,1.729990,-0.075000,-0.281932,1.729990,0.075000,-0.281932,-1.708296,-0.075000,0.382925,-1.708296,0.075000,0.382925,-1.729982,-0.075000,0.382925,-1.729982,0.075000,0.382925,-1.729982,-0.075000,0.108184,-1.729982,0.075000,0.108184,-1.708296,-0.075000,0.108184,-1.708296,0.075000,0.108184,-1.346371,-0.075000,0.382925,-1.346371,0.075000,0.382925,-1.368058,-0.075000,0.382925,-1.368058,0.075000,0.382925,-1.368058,-0.075000,0.108184,-1.368058,0.075000,0.108184,-1.346371,-0.075000,0.108184,-1.346371,0.075000,0.108184,-0.181032,-0.075000,0.361239,-0.181032,0.075000,0.361239,-0.361848,-0.075000,0.361239,-0.361848,0.075000,0.361239,-0.361848,-0.075000,0.339553,-0.361848,0.075000,0.339553,-0.181032,-0.075000,0.339553,-0.181032,0.075000,0.339553,-0.079634,-0.075000,0.382925,-0.079634,0.075000,0.382925,-0.101321,-0.075000,0.382925,-0.101321,0.075000,0.382925,-0.101321,-0.075000,0.108184,-0.101321,0.075000,0.108184,-0.079634,-0.075000,0.108184,-0.079634,0.075000,0.108184,0.101328,-0.075000,0.382925,0.101328,0.075000,0.382925,0.079642,-0.075000,0.382925,0.079642,0.075000,0.382925,0.079642,-0.075000,0.108184,0.079642,0.075000,0.108184,0.101328,-0.075000,0.108184,0.101328,0.075000,0.108184,0.361855,-0.075000,0.361239,0.361855,0.075000,0.361239,0.181040,-0.075000,0.361239,0.181040,0.075000,0.361239,0.181040,-0.075000,0.339553,0.181040,0.075000,0.339553,0.361855,-0.075000,0.339553,0.361855,0.075000,0.339553,1.368065,-0.075000,0.382925,1.368065,0.075000,0.382925,1.346379,-0.075000,0.382925,1.346379,0.075000,0.382925,1.346379,-0.075000,0.108184,1.346379,0.075000,0.108184,1.368065,-0.075000,0.108184,1.368065,0.075000,0.108184,1.729990,-0.075000,0.382925,1.729990,0.075000,0.382925,1.708304,-0.075000,0.382925,1.708304,0.075000,0.382925,1.708304,-0.075000,0.108184,1.708304,0.075000,0.108184,1.729990,-0.075000,0.108184,1.729990,0.075000,0.108184,-1.844714,-0.075000,0.498301,-1.844714,0.075000,0.498301,-1.820537,-0.075000,0.498301,-1.820537,0.075000,0.498301,-1.955343,-0.075000,0.773042,-1.955343,0.075000,0.773042,-1.979520,-0.075000,0.773042,-1.979520,0.075000,0.773042,-1.708296,-0.075000,0.773042,-1.708296,0.075000,0.773042,-1.729982,-0.075000,0.773042,-1.729982,0.075000,0.773042,-1.729982,-0.075000,0.498301,-1.729982,0.075000,0.498301,-1.708296,-0.075000,0.498301,-1.708296,0.075000,0.498301,-1.346371,-0.075000,0.773042,-1.346371,0.075000,0.773042,-1.368058,-0.075000,0.773042,-1.368058,0.075000,0.773042,-1.368058,-0.075000,0.498301,-1.368058,0.075000,0.498301,-1.346371,-0.075000,0.498301,-1.346371,0.075000,0.498301,-0.792641,-0.075000,0.729669,-0.792641,0.075000,0.729669,-0.836014,-0.075000,0.729669,-0.836014,0.075000,0.729669,-0.836014,-0.075000,0.686297,-0.836014,0.075000,0.686297,-0.792641,-0.075000,0.686297,-0.792641,0.075000,0.686297,-0.622522,-0.075000,0.588709,-0.622522,0.075000,0.588709,-0.644208,-0.075000,0.588709,-0.644208,0.075000,0.588709,-0.655051,-0.075000,0.498301,-0.655051,0.075000,0.498301,-0.611679,-0.075000,0.498301,-0.611679,0.075000,0.498301,-0.079634,-0.075000,0.773042,-0.079634,0.075000,0.773042,-0.101321,-0.075000,0.773042,-0.101321,0.075000,0.773042,-0.101321,-0.075000,0.498301,-0.101321,0.075000,0.498301,-0.079634,-0.075000,0.498301,-0.079634,0.075000,0.498301,0.101328,-0.075000,0.773042,0.101328,0.075000,0.773042,0.079642,-0.075000,0.773042,0.079642,0.075000,0.773042,0.079642,-0.075000,0.498301,0.079642,0.075000,0.498301,0.101328,-0.075000,0.498301,0.101328,0.075000,0.498301,0.644215,-0.075000,0.588709,0.644215,0.075000,0.588709,0.622529,-0.075000,0.588709,0.622529,0.075000,0.588709,0.611686,-0.075000,0.498301,0.611686,0.075000,0.498301,0.655058,-0.075000,0.498301,0.655058,0.075000,0.498301,0.836021,-0.075000,0.729669,0.836021,0.075000,0.729669,0.792648,-0.075000,0.729669,0.792648,0.075000,0.729669,0.792648,-0.075000,0.686297,0.792648,0.075000,0.686297,0.836021,-0.075000,0.686297,0.836021,0.075000,0.686297,1.368065,-0.075000,0.773042,1.368065,0.075000,0.773042,1.346379,-0.075000,0.773042,1.346379,0.075000,0.773042,1.346379,-0.075000,0.498301,1.346379,0.075000,0.498301,1.368065,-0.075000,0.498301,1.368065,0.075000,0.498301,1.729990,-0.075000,0.773042,1.729990,0.075000,0.773042,1.708304,-0.075000,0.773042,1.708304,0.075000,0.773042,1.708304,-0.075000,0.498301,1.708304,0.075000,0.498301,1.729990,-0.075000,0.498301,1.729990,0.075000,0.498301,1.979528,-0.075000,0.773042,1.979528,0.075000,0.773042,1.955350,-0.075000,0.773042,1.955350,0.075000,0.773042,1.820544,-0.075000,0.498301,1.820544,0.075000,0.498301,1.844721,-0.075000,0.498301,1.844721,0.075000,0.498301,-2.025676,-0.075000,0.888418,-2.025676,0.075000,0.888418,-2.001499,-0.075000,0.888418,-2.001499,0.075000,0.888418,-2.136305,-0.075000,1.163159,-2.136305,0.075000,1.163159,-2.160483,-0.075000,1.163159,-2.160483,0.075000,1.163159,-1.708296,-0.075000,0.978826,-1.708296,0.075000,0.978826,-1.729982,-0.075000,0.978826,-1.729982,0.075000,0.978826,-1.740826,-0.075000,0.888418,-1.740826,0.075000,0.888418,-1.697453,-0.075000,0.888418,-1.697453,0.075000,0.888418,-1.516491,-0.075000,1.119786,-1.516491,0.075000,1.119786,-1.559863,-0.075000,1.119786,-1.559863,0.075000,1.119786,-1.559863,-0.075000,1.076414,-1.559863,0.075000,1.076414,-1.516491,-0.075000,1.076414,-1.516491,0.075000,1.076414,-1.346371,-0.075000,1.163159,-1.346371,0.075000,1.163159,-1.368058,-0.075000,1.163159,-1.368058,0.075000,1.163159,-1.368058,-0.075000,0.888418,-1.368058,0.075000,0.888418,-1.346371,-0.075000,0.888418,-1.346371,0.075000,0.888418,-0.939902,-0.075000,0.888418,-0.939902,0.075000,0.888418,-0.915725,-0.075000,0.888418,-0.915725,0.075000,0.888418,-1.050531,-0.075000,1.163159,-1.050531,0.075000,1.163159,-1.074708,-0.075000,1.163159,-1.074708,0.075000,1.163159,-0.079634,-0.075000,1.163159,-0.079634,0.075000,1.163159,-0.101321,-0.075000,1.163159,-0.101321,0.075000,1.163159,-0.101321,-0.075000,0.888418,-0.101321,0.075000,0.888418,-0.079634,-0.075000,0.888418,-0.079634,0.075000,0.888418,0.101328,-0.075000,1.163159,0.101328,0.075000,1.163159,0.079642,-0.075000,1.163159,0.079642,0.075000,1.163159,0.079642,-0.075000,0.888418,0.079642,0.075000,0.888418,0.101328,-0.075000,0.888418,0.101328,0.075000,0.888418,1.074715,-0.075000,1.163159,1.074715,0.075000,1.163159,1.050539,-0.075000,1.163159,1.050539,0.075000,1.163159,0.915732,-0.075000,0.888418,0.915732,0.075000,0.888418,0.939910,-0.075000,0.888418,0.939910,0.075000,0.888418,1.368065,-0.075000,1.163159,1.368065,0.075000,1.163159,1.346379,-0.075000,1.163159,1.346379,0.075000,1.163159,1.346379,-0.075000,0.888418,1.346379,0.075000,0.888418,1.368065,-0.075000,0.888418,1.368065,0.075000,0.888418,1.559870,-0.075000,1.119786,1.559870,0.075000,1.119786,1.516498,-0.075000,1.119786,1.516498,0.075000,1.119786,1.516498,-0.075000,1.076414,1.516498,0.075000,1.076414,1.559870,-0.075000,1.076414,1.559870,0.075000,1.076414,1.729990,-0.075000,0.978826,1.729990,0.075000,0.978826,1.708304,-0.075000,0.978826,1.708304,0.075000,0.978826,1.697460,-0.075000,0.888418,1.697460,0.075000,0.888418,1.740833,-0.075000,0.888418,1.740833,0.075000,0.888418,2.160490,-0.075000,1.163159,2.160490,0.075000,1.163159,2.136313,-0.075000,1.163159,2.136313,0.075000,1.163159,2.001507,-0.075000,0.888418,2.001507,0.075000,0.888418,2.025684,-0.075000,0.888418,2.025684,0.075000,0.888418,-2.206639,-0.075000,1.278535,-2.206639,0.075000,1.278535,-2.182462,-0.075000,1.278535,-2.182462,0.075000,1.278535,-2.317268,-0.075000,1.553275,-2.317268,0.075000,1.553275,-2.341445,-0.075000,1.553275,-2.341445,0.075000,1.553275,-1.527334,-0.075000,1.553275,-1.527334,0.075000,1.553275,-1.549020,-0.075000,1.553275,-1.549020,0.075000,1.553275,-1.549020,-0.075000,1.278535,-1.549020,0.075000,1.278535,-1.527334,-0.075000,1.278535,-1.527334,0.075000,1.278535,-1.346371,-0.075000,1.553275,-1.346371,0.075000,1.553275,-1.368058,-0.075000,1.553275,-1.368058,0.075000,1.553275,-1.368058,-0.075000,1.278535,-1.368058,0.075000,1.278535,-1.346371,-0.075000,1.278535,-1.346371,0.075000,1.278535,-1.165409,-0.075000,1.553275,-1.165409,0.075000,1.553275,-1.187095,-0.075000,1.553275,-1.187095,0.075000,1.553275,-1.187095,-0.075000,1.278535,-1.187095,0.075000,1.278535,-1.165409,-0.075000,1.278535,-1.165409,0.075000,1.278535,-0.079634,-0.075000,1.553275,-0.079634,0.075000,1.553275,-0.101321,-0.075000,1.553275,-0.101321,0.075000,1.553275,-0.101321,-0.075000,1.278535,-0.101321,0.075000,1.278535,-0.079634,-0.075000,1.278535,-0.079634,0.075000,1.278535,0.101328,-0.075000,1.553275,0.101328,0.075000,1.553275,0.079642,-0.075000,1.553275,0.079642,0.075000,1.553275,0.079642,-0.075000,1.278535,0.079642,0.075000,1.278535,0.101328,-0.075000,1.278535,0.101328,0.075000,1.278535,1.187103,-0.075000,1.553275,1.187103,0.075000,1.553275,1.165417,-0.075000,1.553275,1.165417,0.075000,1.553275,1.165417,-0.075000,1.278535,1.165417,0.075000,1.278535,1.187103,-0.075000,1.278535,1.187103,0.075000,1.278535,1.368065,-0.075000,1.553275,1.368065,0.075000,1.553275,1.346379,-0.075000,1.553275,1.346379,0.075000,1.553275,1.346379,-0.075000,1.278535,1.346379,0.075000,1.278535,1.368065,-0.075000,1.278535,1.368065,0.075000,1.278535,1.549028,-0.075000,1.553275,1.549028,0.075000,1.553275,1.527341,-0.075000,1.553275,1.527341,0.075000,1.553275,1.527341,-0.075000,1.278535,1.527341,0.075000,1.278535,1.549028,-0.075000,1.278535,1.549028,0.075000,1.278535,2.341452,-0.075000,1.553275,2.341452,0.075000,1.553275,2.317275,-0.075000,1.553275,2.317275,0.075000,1.553275,2.182469,-0.075000,1.278535,2.182469,0.075000,1.278535,2.206646,-0.075000,1.278535,2.206646,0.075000,1.278535,-2.387601,-0.075000,1.668651,-2.387601,0.075000,1.668651,-2.363424,-0.075000,1.668651,-2.363424,0.075000,1.668651,-2.498230,-0.075000,1.943392,-2.498230,0.075000,1.943392,-2.522407,-0.075000,1.943392,-2.522407,0.075000,1.943392,-1.527334,-0.075000,1.943392,-1.527334,0.075000,1.943392,-1.549020,-0.075000,1.943392,-1.549020,0.075000,1.943392,-1.549020,-0.075000,1.668651,-1.549020,0.075000,1.668651,-1.527334,-0.075000,1.668651,-1.527334,0.075000,1.668651,-1.346371,-0.075000,1.943392,-1.346371,0.075000,1.943392,-1.368058,-0.075000,1.943392,-1.368058,0.075000,1.943392,-1.368058,-0.075000,1.668651,-1.368058,0.075000,1.668651,-1.346371,-0.075000,1.668651,-1.346371,0.075000,1.668651,-1.165409,-0.075000,1.943392,-1.165409,0.075000,1.943392,-1.187095,-0.075000,1.943392,-1.187095,0.075000,1.943392,-1.187095,-0.075000,1.668651,-1.187095,0.075000,1.668651,-1.165409,-0.075000,1.668651,-1.165409,0.075000,1.668651,-0.079634,-0.075000,1.943392,-0.079634,0.075000,1.943392,-0.101321,-0.075000,1.943392,-0.101321,0.075000,1.943392,-0.101321,-0.075000,1.668651,-0.101321,0.075000,1.668651,-0.079634,-0.075000,1.668651,-0.079634,0.075000,1.668651,0.101328,-0.075000,1.943392,0.101328,0.075000,1.943392,0.079642,-0.075000,1.943392,0.079642,0.075000,1.943392,0.079642,-0.075000,1.668651,0.079642,0.075000,1.668651,0.101328,-0.075000,1.668651,0.101328,0.075000,1.668651,1.187103,-0.075000,1.943392,1.187103,0.075000,1.943392,1.165417,-0.075000,1.943392,1.165417,0.075000,1.943392,1.165417,-0.075000,1.668651,1.165417,0.075000,1.668651,1.187103,-0.075000,1.668651,1.187103,0.075000,1.668651,1.368065,-0.075000,1.943392,1.368065,0.075000,1.943392,1.346379,-0.075000,1.943392,1.346379,0.075000,1.943392,1.346379,-0.075000,1.668651,1.346379,0.075000,1.668651,1.368065,-0.075000,1.668651,1.368065,0.075000,1.668651,1.549028,-0.075000,1.943392,1.549028,0.075000,1.943392,1.527341,-0.075000,1.943392,1.527341,0.075000,1.943392,1.527341,-0.075000,1.668651,1.527341,0.075000,1.668651,1.549028,-0.075000,1.668651,1.549028,0.075000,1.668651,2.522415,-0.075000,1.943392,2.522415,0.075000,1.943392,2.498238,-0.075000,1.943392,2.498238,0.075000,1.943392,2.363432,-0.075000,1.668651,2.363432,0.075000,1.668651,2.387609,-0.075000,1.668651,2.387609,0.075000,1.668651,-2.568564,-0.075000,2.058768,-2.568564,0.075000,2.058768,-2.544387,-0.075000,2.058768,-2.544387,0.075000,2.058768,-2.679193,-0.075000,2.333508,-2.679193,0.075000,2.333508,-2.703370,-0.075000,2.333508,-2.703370,0.075000,2.333508,-1.527334,-0.075000,2.333508,-1.527334,0.075000,2.333508,-1.549020,-0.075000,2.333508,-1.549020,0.075000,2.333508,-1.549020,-0.075000,2.058768,-1.549020,0.075000,2.058768,-1.527334,-0.075000,2.058768,-1.527334,0.075000,2.058768,-1.346371,-0.075000,2.333508,-1.346371,0.075000,2.333508,-1.368058,-0.075000,2.333508,-1.368058,0.075000,2.333508,-1.368058,-0.075000,2.058768,-1.368058,0.075000,2.058768,-1.346371,-0.075000,2.058768,-1.346371,0.075000,2.058768,-0.915871,-0.075000,2.333508,-0.915871,0.075000,2.333508,-0.940048,-0.075000,2.333508,-0.940048,0.075000,2.333508,-1.074855,-0.075000,2.058768,-1.074855,0.075000,2.058768,-1.050677,-0.075000,2.058768,-1.050677,0.075000,2.058768,-0.079634,-0.075000,2.333508,-0.079634,0.075000,2.333508,-0.101321,-0.075000,2.333508,-0.101321,0.075000,2.333508,-0.101321,-0.075000,2.058768,-0.101321,0.075000,2.058768,-0.079634,-0.075000,2.058768,-0.079634,0.075000,2.058768,0.101328,-0.075000,2.333508,0.101328,0.075000,2.333508,0.079642,-0.075000,2.333508,0.079642,0.075000,2.333508,0.079642,-0.075000,2.058768,0.079642,0.075000,2.058768,0.101328,-0.075000,2.058768,0.101328,0.075000,2.058768,1.050685,-0.075000,2.058768,1.050685,0.075000,2.058768,1.074862,-0.075000,2.058768,1.074862,0.075000,2.058768,0.940056,-0.075000,2.333508,0.940056,0.075000,2.333508,0.915879,-0.075000,2.333508,0.915879,0.075000,2.333508,1.368065,-0.075000,2.333508,1.368065,0.075000,2.333508,1.346379,-0.075000,2.333508,1.346379,0.075000,2.333508,1.346379,-0.075000,2.058768,1.346379,0.075000,2.058768,1.368065,-0.075000,2.058768,1.368065,0.075000,2.058768,1.549028,-0.075000,2.333508,1.549028,0.075000,2.333508,1.527341,-0.075000,2.333508,1.527341,0.075000,2.333508,1.527341,-0.075000,2.058768,1.527341,0.075000,2.058768,1.549028,-0.075000,2.058768,1.549028,0.075000,2.058768,2.703377,-0.075000,2.333508,2.703377,0.075000,2.333508,2.679200,-0.075000,2.333508,2.679200,0.075000,2.333508,2.544394,-0.075000,2.058768,2.544394,0.075000,2.058768,2.568571,-0.075000,2.058768,2.568571,0.075000,2.058768,-2.749526,-0.075000,2.448884,-2.749526,0.075000,2.448884,-2.725349,-0.075000,2.448884,-2.725349,0.075000,2.448884,-2.860155,-0.075000,2.723625,-2.860155,0.075000,2.723625,-2.884332,-0.075000,2.723625,-2.884332,0.075000,2.723625,-2.533544,-0.075000,2.701939,-2.533544,0.075000,2.701939,-2.714360,-0.075000,2.701939,-2.714360,0.075000,2.701939,-2.714360,-0.075000,2.680253,-2.714360,0.075000,2.680253,-2.533544,-0.075000,2.680253,-2.533544,0.075000,2.680253,-2.352581,-0.075000,2.701939,-2.352581,0.075000,2.701939,-2.533397,-0.075000,2.701939,-2.533397,0.075000,2.701939,-2.533397,-0.075000,2.680253,-2.533397,0.075000,2.680253,-2.352581,-0.075000,2.680253,-2.352581,0.075000,2.680253,-2.171619,-0.075000,2.701939,-2.171619,0.075000,2.701939,-2.352435,-0.075000,2.701939,-2.352435,0.075000,2.701939,-2.352435,-0.075000,2.680253,-2.352435,0.075000,2.680253,-2.171619,-0.075000,2.680253,-2.171619,0.075000,2.680253,-1.990656,-0.075000,2.701939,-1.990656,0.075000,2.701939,-2.171472,-0.075000,2.701939,-2.171472,0.075000,2.701939,-2.171472,-0.075000,2.680253,-2.171472,0.075000,2.680253,-1.990656,-0.075000,2.680253,-1.990656,0.075000,2.680253,-1.844714,-0.075000,2.448884,-1.844714,0.075000,2.448884,-1.820537,-0.075000,2.448884,-1.820537,0.075000,2.448884,-1.955343,-0.075000,2.723625,-1.955343,0.075000,2.723625,-1.979520,-0.075000,2.723625,-1.979520,0.075000,2.723625,-1.639721,-0.075000,2.723625,-1.639721,0.075000,2.723625,-1.663898,-0.075000,2.723625,-1.663898,0.075000,2.723625,-1.798704,-0.075000,2.448884,-1.798704,0.075000,2.448884,-1.774527,-0.075000,2.448884,-1.774527,0.075000,2.448884,-1.527334,-0.075000,2.723625,-1.527334,0.075000,2.723625,-1.549020,-0.075000,2.723625,-1.549020,0.075000,2.723625,-1.549020,-0.075000,2.448884,-1.549020,0.075000,2.448884,-1.527334,-0.075000,2.448884,-1.527334,0.075000,2.448884,-1.346371,-0.075000,2.723625,-1.346371,0.075000,2.723625,-1.368058,-0.075000,2.723625,-1.368058,0.075000,2.723625,-1.368058,-0.075000,2.448884,-1.368058,0.075000,2.448884,-1.346371,-0.075000,2.448884,-1.346371,0.075000,2.448884,-1.085844,-0.075000,2.701939,-1.085844,0.075000,2.701939,-1.266660,-0.075000,2.701939,-1.266660,0.075000,2.701939,-1.266660,-0.075000,2.680253,-1.266660,0.075000,2.680253,-1.085844,-0.075000,2.680253,-1.085844,0.075000,2.680253,-0.904882,-0.075000,2.701939,-0.904882,0.075000,2.701939,-1.085698,-0.075000,2.701939,-1.085698,0.075000,2.701939,-1.085698,-0.075000,2.680253,-1.085698,0.075000,2.680253,-0.904882,-0.075000,2.680253,-0.904882,0.075000,2.680253,-0.803484,-0.075000,2.539292,-0.803484,0.075000,2.539292,-0.825170,-0.075000,2.539292,-0.825170,0.075000,2.539292,-0.836014,-0.075000,2.448884,-0.836014,0.075000,2.448884,-0.792641,-0.075000,2.448884,-0.792641,0.075000,2.448884,-0.611679,-0.075000,2.680253,-0.611679,0.075000,2.680253,-0.655051,-0.075000,2.680253,-0.655051,0.075000,2.680253,-0.655051,-0.075000,2.636881,-0.655051,0.075000,2.636881,-0.611679,-0.075000,2.636881,-0.611679,0.075000,2.636881,-0.181032,-0.075000,2.701939,-0.181032,0.075000,2.701939,-0.361848,-0.075000,2.701939,-0.361848,0.075000,2.701939,-0.361848,-0.075000,2.680253,-0.361848,0.075000,2.680253,-0.181032,-0.075000,2.680253,-0.181032,0.075000,2.680253,-0.079634,-0.075000,2.723625,-0.079634,0.075000,2.723625,-0.101321,-0.075000,2.723625,-0.101321,0.075000,2.723625,-0.101321,-0.075000,2.448884,-0.101321,0.075000,2.448884,-0.079634,-0.075000,2.448884,-0.079634,0.075000,2.448884,0.101328,-0.075000,2.723625,0.101328,0.075000,2.723625,0.079642,-0.075000,2.723625,0.079642,0.075000,2.723625,0.079642,-0.075000,2.448884,0.079642,0.075000,2.448884,0.101328,-0.075000,2.448884,0.101328,0.075000,2.448884,0.361855,-0.075000,2.701939,0.361855,0.075000,2.701939,0.181040,-0.075000,2.701939,0.181040,0.075000,2.701939,0.181040,-0.075000,2.680253,0.181040,0.075000,2.680253,0.361855,-0.075000,2.680253,0.361855,0.075000,2.680253,0.655058,-0.075000,2.680253,0.655058,0.075000,2.680253,0.611686,-0.075000,2.680253,0.611686,0.075000,2.680253,0.611686,-0.075000,2.636881,0.611686,0.075000,2.636881,0.655058,-0.075000,2.636881,0.655058,0.075000,2.636881,0.825178,-0.075000,2.539292,0.825178,0.075000,2.539292,0.803491,-0.075000,2.539292,0.803491,0.075000,2.539292,0.792648,-0.075000,2.448884,0.792648,0.075000,2.448884,0.836021,-0.075000,2.448884,0.836021,0.075000,2.448884,1.085705,-0.075000,2.701939,1.085705,0.075000,2.701939,0.904889,-0.075000,2.701939,0.904889,0.075000,2.701939,0.904889,-0.075000,2.680253,0.904889,0.075000,2.680253,1.085705,-0.075000,2.680253,1.085705,0.075000,2.680253,1.266668,-0.075000,2.701939,1.266668,0.075000,2.701939,1.085852,-0.075000,2.701939,1.085852,0.075000,2.701939,1.085852,-0.075000,2.680253,1.085852,0.075000,2.680253,1.266668,-0.075000,2.680253,1.266668,0.075000,2.680253,1.368065,-0.075000,2.723625,1.368065,0.075000,2.723625,1.346379,-0.075000,2.723625,1.346379,0.075000,2.723625,1.346379,-0.075000,2.448884,1.346379,0.075000,2.448884,1.368065,-0.075000,2.448884,1.368065,0.075000,2.448884,1.549028,-0.075000,2.723625,1.549028,0.075000,2.723625,1.527341,-0.075000,2.723625,1.527341,0.075000,2.723625,1.527341,-0.075000,2.448884,1.527341,0.075000,2.448884,1.549028,-0.075000,2.448884,1.549028,0.075000,2.448884,1.774535,-0.075000,2.448884,1.774535,0.075000,2.448884,1.798711,-0.075000,2.448884,1.798711,0.075000,2.448884,1.663906,-0.075000,2.723625,1.663906,0.075000,2.723625,1.639728,-0.075000,2.723625,1.639728,0.075000,2.723625,1.979528,-0.075000,2.723625,1.979528,0.075000,2.723625,1.955350,-0.075000,2.723625,1.955350,0.075000,2.723625,1.820544,-0.075000,2.448884,1.820544,0.075000,2.448884,1.844721,-0.075000,2.448884,1.844721,0.075000,2.448884,2.171479,-0.075000,2.701939,2.171479,0.075000,2.701939,1.990664,-0.075000,2.701939,1.990664,0.075000,2.701939,1.990664,-0.075000,2.680253,1.990664,0.075000,2.680253,2.171479,-0.075000,2.680253,2.171479,0.075000,2.680253,2.352442,-0.075000,2.701939,2.352442,0.075000,2.701939,2.171626,-0.075000,2.701939,2.171626,0.075000,2.701939,2.171626,-0.075000,2.680253,2.171626,0.075000,2.680253,2.352442,-0.075000,2.680253,2.352442,0.075000,2.680253,2.533404,-0.075000,2.701939,2.533404,0.075000,2.701939,2.352588,-0.075000,2.701939,2.352588,0.075000,2.701939,2.352588,-0.075000,2.680253,2.352588,0.075000,2.680253,2.533404,-0.075000,2.680253,2.533404,0.075000,2.680253,2.714367,-0.075000,2.701939,2.714367,0.075000,2.701939,2.533551,-0.075000,2.701939,2.533551,0.075000,2.701939,2.533551,-0.075000,2.680253,2.533551,0.075000,2.680253,2.714367,-0.075000,2.680253,2.714367,0.075000,2.680253,2.884340,-0.075000,2.723625,2.884340,0.075000,2.723625,2.860162,-0.075000,2.723625,2.860162,0.075000,2.723625,2.725356,-0.075000,2.448884,2.725356,0.075000,2.448884,2.749534,-0.075000,2.448884,2.749534,0.075000,2.448884,-1.527334,-0.075000,3.113741,-1.527334,0.075000,3.113741,-1.549020,-0.075000,3.113741,-1.549020,0.075000,3.113741,-1.549020,-0.075000,2.839001,-1.549020,0.075000,2.839001,-1.527334,-0.075000,2.839001,-1.527334,0.075000,2.839001,-1.266807,-0.075000,3.092056,-1.266807,0.075000,3.092056,-1.447622,-0.075000,3.092056,-1.447622,0.075000,3.092056,-1.447622,-0.075000,3.070369,-1.447622,0.075000,3.070369,-1.266807,-0.075000,3.070369,-1.266807,0.075000,3.070369,-1.154566,-0.075000,3.070369,-1.154566,0.075000,3.070369,-1.197938,-0.075000,3.070369,-1.197938,0.075000,3.070369,-1.197938,-0.075000,3.026997,-1.197938,0.075000,3.026997,-1.154566,-0.075000,3.026997,-1.154566,0.075000,3.026997,-0.935653,-0.075000,2.990804,-0.935653,0.075000,2.990804,-1.054927,-0.075000,2.990804,-1.054927,0.075000,2.990804,-1.054927,-0.075000,2.969119,-1.054927,0.075000,2.969119,-0.935653,-0.075000,2.969119,-0.935653,0.075000,2.969119,-0.754690,-0.075000,2.990804,-0.754690,0.075000,2.990804,-0.873964,-0.075000,2.990804,-0.873964,0.075000,2.990804,-0.873964,-0.075000,2.969119,-0.873964,0.075000,2.969119,-0.754690,-0.075000,2.969119,-0.754690,0.075000,2.969119,-0.686848,-0.075000,3.026997,-0.686848,0.075000,3.026997,-0.711171,-0.075000,3.026997,-0.711171,0.075000,3.026997,-0.633511,-0.075000,2.853507,-0.633511,0.075000,2.853507,-0.555705,-0.075000,3.026997,-0.555705,0.075000,3.026997,-0.580028,-0.075000,3.026997,-0.580028,0.075000,3.026997,-0.633511,-0.075000,2.907576,-0.633511,0.075000,2.907576,-0.392765,-0.075000,2.990804,-0.392765,0.075000,2.990804,-0.512039,-0.075000,2.990804,-0.512039,0.075000,2.990804,-0.512039,-0.075000,2.969119,-0.512039,0.075000,2.969119,-0.392765,-0.075000,2.969119,-0.392765,0.075000,2.969119,-0.211803,-0.075000,2.990804,-0.211803,0.075000,2.990804,-0.331077,-0.075000,2.990804,-0.331077,0.075000,2.990804,-0.331077,-0.075000,2.969119,-0.331077,0.075000,2.969119,-0.211803,-0.075000,2.969119,-0.211803,0.075000,2.969119,-0.079634,-0.075000,3.113741,-0.079634,0.075000,3.113741,-0.101321,-0.075000,3.113741,-0.101321,0.075000,3.113741,-0.101321,-0.075000,2.839001,-0.101321,0.075000,2.839001,-0.079634,-0.075000,2.839001,-0.079634,0.075000,2.839001,0.101328,-0.075000,3.113741,0.101328,0.075000,3.113741,0.079642,-0.075000,3.113741,0.079642,0.075000,3.113741,0.079642,-0.075000,2.839001,0.079642,0.075000,2.839001,0.101328,-0.075000,2.839001,0.101328,0.075000,2.839001,0.331084,-0.075000,2.990804,0.331084,0.075000,2.990804,0.211810,-0.075000,2.990804,0.211810,0.075000,2.990804,0.211810,-0.075000,2.969119,0.211810,0.075000,2.969119,0.331084,-0.075000,2.969119,0.331084,0.075000,2.969119,0.512047,-0.075000,2.990804,0.512047,0.075000,2.990804,0.392773,-0.075000,2.990804,0.392773,0.075000,2.990804,0.392773,-0.075000,2.969119,0.392773,0.075000,2.969119,0.512047,-0.075000,2.969119,0.512047,0.075000,2.969119,0.579889,-0.075000,3.026997,0.579889,0.075000,3.026997,0.555566,-0.075000,3.026997,0.555566,0.075000,3.026997,0.633226,-0.075000,2.853507,0.633226,0.075000,2.853507,0.711032,-0.075000,3.026997,0.711032,0.075000,3.026997,0.686708,-0.075000,3.026997,0.686708,0.075000,3.026997,0.633226,-0.075000,2.907576,0.633226,0.075000,2.907576,0.873972,-0.075000,2.990804,0.873972,0.075000,2.990804,0.754698,-0.075000,2.990804,0.754698,0.075000,2.990804,0.754698,-0.075000,2.969119,0.754698,0.075000,2.969119,0.873972,-0.075000,2.969119,0.873972,0.075000,2.969119,1.054934,-0.075000,2.990804,1.054934,0.075000,2.990804,0.935660,-0.075000,2.990804,0.935660,0.075000,2.990804,0.935660,-0.075000,2.969119,0.935660,0.075000,2.969119,1.054934,-0.075000,2.969119,1.054934,0.075000,2.969119,1.197946,-0.075000,3.070369,1.197946,0.075000,3.070369,1.154573,-0.075000,3.070369,1.154573,0.075000,3.070369,1.154573,-0.075000,3.026997,1.154573,0.075000,3.026997,1.197946,-0.075000,3.026997,1.197946,0.075000,3.026997,1.447630,-0.075000,3.092056,1.447630,0.075000,3.092056,1.266814,-0.075000,3.092056,1.266814,0.075000,3.092056,1.266814,-0.075000,3.070369,1.266814,0.075000,3.070369,1.447630,-0.075000,3.070369,1.447630,0.075000,3.070369,1.549028,-0.075000,3.113741,1.549028,0.075000,3.113741,1.527341,-0.075000,3.113741,1.527341,0.075000,3.113741,1.527341,-0.075000,2.839001,1.527341,0.075000,2.839001,1.549028,-0.075000,2.839001,1.549028,0.075000,2.839001,-1.663752,-0.075000,3.229118,-1.663752,0.075000,3.229118,-1.639575,-0.075000,3.229118,-1.639575,0.075000,3.229118,-1.774380,-0.075000,3.503859,-1.774380,0.075000,3.503859,-1.798558,-0.075000,3.503859,-1.798558,0.075000,3.503859,-1.335528,-0.075000,3.460486,-1.335528,0.075000,3.460486,-1.378901,-0.075000,3.460486,-1.378901,0.075000,3.460486,-1.378901,-0.075000,3.417114,-1.378901,0.075000,3.417114,-1.335528,-0.075000,3.417114,-1.335528,0.075000,3.417114,-1.165409,-0.075000,3.319525,-1.165409,0.075000,3.319525,-1.187095,-0.075000,3.319525,-1.187095,0.075000,3.319525,-1.197938,-0.075000,3.229118,-1.197938,0.075000,3.229118,-1.154566,-0.075000,3.229118,-1.154566,0.075000,3.229118,-0.939902,-0.075000,3.229118,-0.939902,0.075000,3.229118,-0.915725,-0.075000,3.229118,-0.915725,0.075000,3.229118,-1.050531,-0.075000,3.503859,-1.050531,0.075000,3.503859,-1.074708,-0.075000,3.503859,-1.074708,0.075000,3.503859,-0.723919,-0.075000,3.482172,-0.723919,0.075000,3.482172,-0.904735,-0.075000,3.482172,-0.904735,0.075000,3.482172,-0.904735,-0.075000,3.460486,-0.904735,0.075000,3.460486,-0.723919,-0.075000,3.460486,-0.723919,0.075000,3.460486,-0.622522,-0.075000,3.319525,-0.622522,0.075000,3.319525,-0.644208,-0.075000,3.319525,-0.644208,0.075000,3.319525,-0.655051,-0.075000,3.229118,-0.655051,0.075000,3.229118,-0.611679,-0.075000,3.229118,-0.611679,0.075000,3.229118,-0.441559,-0.075000,3.319525,-0.441559,0.075000,3.319525,-0.463245,-0.075000,3.319525,-0.463245,0.075000,3.319525,-0.474089,-0.075000,3.229118,-0.474089,0.075000,3.229118,-0.430716,-0.075000,3.229118,-0.430716,0.075000,3.229118,-0.260597,-0.075000,3.319525,-0.260597,0.075000,3.319525,-0.282283,-0.075000,3.319525,-0.282283,0.075000,3.319525,-0.293126,-0.075000,3.229118,-0.293126,0.075000,3.229118,-0.249754,-0.075000,3.229118,-0.249754,0.075000,3.229118,-0.079634,-0.075000,3.503859,-0.079634,0.075000,3.503859,-0.101321,-0.075000,3.503859,-0.101321,0.075000,3.503859,-0.101321,-0.075000,3.229118,-0.101321,0.075000,3.229118,-0.079634,-0.075000,3.229118,-0.079634,0.075000,3.229118,0.101328,-0.075000,3.503859,0.101328,0.075000,3.503859,0.079642,-0.075000,3.503859,0.079642,0.075000,3.503859,0.079642,-0.075000,3.229118,0.079642,0.075000,3.229118,0.101328,-0.075000,3.229118,0.101328,0.075000,3.229118,0.282291,-0.075000,3.319525,0.282291,0.075000,3.319525,0.260604,-0.075000,3.319525,0.260604,0.075000,3.319525,0.249761,-0.075000,3.229118,0.249761,0.075000,3.229118,0.293134,-0.075000,3.229118,0.293134,0.075000,3.229118,0.463253,-0.075000,3.319525,0.463253,0.075000,3.319525,0.441567,-0.075000,3.319525,0.441567,0.075000,3.319525,0.430724,-0.075000,3.229118,0.430724,0.075000,3.229118,0.474096,-0.075000,3.229118,0.474096,0.075000,3.229118,0.644215,-0.075000,3.319525,0.644215,0.075000,3.319525,0.622529,-0.075000,3.319525,0.622529,0.075000,3.319525,0.611686,-0.075000,3.229118,0.611686,0.075000,3.229118,0.655058,-0.075000,3.229118,0.655058,0.075000,3.229118,0.904742,-0.075000,3.482172,0.904742,0.075000,3.482172,0.723927,-0.075000,3.482172,0.723927,0.075000,3.482172,0.723927,-0.075000,3.460486,0.723927,0.075000,3.460486,0.904742,-0.075000,3.460486,0.904742,0.075000,3.460486,1.074715,-0.075000,3.503859,1.074715,0.075000,3.503859,1.050539,-0.075000,3.503859,1.050539,0.075000,3.503859,0.915732,-0.075000,3.229118,0.915732,0.075000,3.229118,0.939910,-0.075000,3.229118,0.939910,0.075000,3.229118,1.187103,-0.075000,3.319525,1.187103,0.075000,3.319525,1.165417,-0.075000,3.319525,1.165417,0.075000,3.319525,1.154573,-0.075000,3.229118,1.154573,0.075000,3.229118,1.197946,-0.075000,3.229118,1.197946,0.075000,3.229118,1.378908,-0.075000,3.460486,1.378908,0.075000,3.460486,1.335536,-0.075000,3.460486,1.335536,0.075000,3.460486,1.335536,-0.075000,3.417114,1.335536,0.075000,3.417114,1.378908,-0.075000,3.417114,1.378908,0.075000,3.417114,1.798565,-0.075000,3.503859,1.798565,0.075000,3.503859,1.774388,-0.075000,3.503859,1.774388,0.075000,3.503859,1.639582,-0.075000,3.229118,1.639582,0.075000,3.229118,1.663759,-0.075000,3.229118,1.663759,0.075000,3.229118,-1.844714,-0.075000,3.619235,-1.844714,0.075000,3.619235,-1.820537,-0.075000,3.619235,-1.820537,0.075000,3.619235,-1.955343,-0.075000,3.893975,-1.955343,0.075000,3.893975,-1.979520,-0.075000,3.893975,-1.979520,0.075000,3.893975,-1.482789,-0.075000,3.619235,-1.482789,0.075000,3.619235,-1.458612,-0.075000,3.619235,-1.458612,0.075000,3.619235,-1.593418,-0.075000,3.893975,-1.593418,0.075000,3.893975,-1.617595,-0.075000,3.893975,-1.617595,0.075000,3.893975,-0.758940,-0.075000,3.619235,-0.758940,0.075000,3.619235,-0.734762,-0.075000,3.619235,-0.734762,0.075000,3.619235,-0.869568,-0.075000,3.893975,-0.869568,0.075000,3.893975,-0.893746,-0.075000,3.893975,-0.893746,0.075000,3.893975,-0.542957,-0.075000,3.872289,-0.542957,0.075000,3.872289,-0.723773,-0.075000,3.872289,-0.723773,0.075000,3.872289,-0.723773,-0.075000,3.850602,-0.723773,0.075000,3.850602,-0.542957,-0.075000,3.850602,-0.542957,0.075000,3.850602,-0.361994,-0.075000,3.872289,-0.361994,0.075000,3.872289,-0.542810,-0.075000,3.872289,-0.542810,0.075000,3.872289,-0.542810,-0.075000,3.850602,-0.542810,0.075000,3.850602,-0.361994,-0.075000,3.850602,-0.361994,0.075000,3.850602,-0.181032,-0.075000,3.872289,-0.181032,0.075000,3.872289,-0.361848,-0.075000,3.872289,-0.361848,0.075000,3.872289,-0.361848,-0.075000,3.850602,-0.361848,0.075000,3.850602,-0.181032,-0.075000,3.850602,-0.181032,0.075000,3.850602,-0.079634,-0.075000,3.893975,-0.079634,0.075000,3.893975,-0.101321,-0.075000,3.893975,-0.101321,0.075000,3.893975,-0.101321,-0.075000,3.619235,-0.101321,0.075000,3.619235,-0.079634,-0.075000,3.619235,-0.079634,0.075000,3.619235,0.101328,-0.075000,3.893975,0.101328,0.075000,3.893975,0.079642,-0.075000,3.893975,0.079642,0.075000,3.893975,0.079642,-0.075000,3.619235,0.079642,0.075000,3.619235,0.101328,-0.075000,3.619235,0.101328,0.075000,3.619235,0.361855,-0.075000,3.872289,0.361855,0.075000,3.872289,0.181040,-0.075000,3.872289,0.181040,0.075000,3.872289,0.181040,-0.075000,3.850602,0.181040,0.075000,3.850602,0.361855,-0.075000,3.850602,0.361855,0.075000,3.850602,0.542818,-0.075000,3.872289,0.542818,0.075000,3.872289,0.362002,-0.075000,3.872289,0.362002,0.075000,3.872289,0.362002,-0.075000,3.850602,0.362002,0.075000,3.850602,0.542818,-0.075000,3.850602,0.542818,0.075000,3.850602,0.723780,-0.075000,3.872289,0.723780,0.075000,3.872289,0.542964,-0.075000,3.872289,0.542964,0.075000,3.872289,0.542964,-0.075000,3.850602,0.542964,0.075000,3.850602,0.723780,-0.075000,3.850602,0.723780,0.075000,3.850602,0.893753,-0.075000,3.893975,0.893753,0.075000,3.893975,0.869576,-0.075000,3.893975,0.869576,0.075000,3.893975,0.734770,-0.075000,3.619235,0.734770,0.075000,3.619235,0.758947,-0.075000,3.619235,0.758947,0.075000,3.619235,1.617602,-0.075000,3.893975,1.617602,0.075000,3.893975,1.593426,-0.075000,3.893975,1.593426,0.075000,3.893975,1.458619,-0.075000,3.619235,1.458619,0.075000,3.619235,1.482797,-0.075000,3.619235,1.482797,0.075000,3.619235,1.979528,-0.075000,3.893975,1.979528,0.075000,3.893975,1.955350,-0.075000,3.893975,1.955350,0.075000,3.893975,1.820544,-0.075000,3.619235,1.820544,0.075000,3.619235,1.844721,-0.075000,3.619235,1.844721,0.075000,3.619235,-2.025676,-0.075000,4.009351,-2.025676,0.075000,4.009351,-2.001499,-0.075000,4.009351,-2.001499,0.075000,4.009351,-2.136305,-0.075000,4.284092,-2.136305,0.075000,4.284092,-2.160483,-0.075000,4.284092,-2.160483,0.075000,4.284092,-1.663752,-0.075000,4.009351,-1.663752,0.075000,4.009351,-1.639575,-0.075000,4.009351,-1.639575,0.075000,4.009351,-1.774380,-0.075000,4.284092,-1.774380,0.075000,4.284092,-1.798558,-0.075000,4.284092,-1.798558,0.075000,4.284092,-0.577977,-0.075000,4.009351,-0.577977,0.075000,4.009351,-0.553800,-0.075000,4.009351,-0.553800,0.075000,4.009351,-0.688606,-0.075000,4.284092,-0.688606,0.075000,4.284092,-0.712783,-0.075000,4.284092,-0.712783,0.075000,4.284092,-0.361994,-0.075000,4.262405,-0.361994,0.075000,4.262405,-0.542810,-0.075000,4.262405,-0.542810,0.075000,4.262405,-0.542810,-0.075000,4.240719,-0.542810,0.075000,4.240719,-0.361994,-0.075000,4.240719,-0.361994,0.075000,4.240719,-0.181032,-0.075000,4.262405,-0.181032,0.075000,4.262405,-0.361848,-0.075000,4.262405,-0.361848,0.075000,4.262405,-0.361848,-0.075000,4.240719,-0.361848,0.075000,4.240719,-0.181032,-0.075000,4.240719,-0.181032,0.075000,4.240719,-0.079634,-0.075000,4.284092,-0.079634,0.075000,4.284092,-0.101321,-0.075000,4.284092,-0.101321,0.075000,4.284092,-0.101321,-0.075000,4.009351,-0.101321,0.075000,4.009351,-0.079634,-0.075000,4.009351,-0.079634,0.075000,4.009351,0.101328,-0.075000,4.284092,0.101328,0.075000,4.284092,0.079642,-0.075000,4.284092,0.079642,0.075000,4.284092,0.079642,-0.075000,4.009351,0.079642,0.075000,4.009351,0.101328,-0.075000,4.009351,0.101328,0.075000,4.009351,0.361855,-0.075000,4.262405,0.361855,0.075000,4.262405,0.181040,-0.075000,4.262405,0.181040,0.075000,4.262405,0.181040,-0.075000,4.240719,0.181040,0.075000,4.240719,0.361855,-0.075000,4.240719,0.361855,0.075000,4.240719,0.542818,-0.075000,4.262405,0.542818,0.075000,4.262405,0.362002,-0.075000,4.262405,0.362002,0.075000,4.262405,0.362002,-0.075000,4.240719,0.362002,0.075000,4.240719,0.542818,-0.075000,4.240719,0.542818,0.075000,4.240719,0.712790,-0.075000,4.284092,0.712790,0.075000,4.284092,0.688613,-0.075000,4.284092,0.688613,0.075000,4.284092,0.553807,-0.075000,4.009351,0.553807,0.075000,4.009351,0.577984,-0.075000,4.009351,0.577984,0.075000,4.009351,1.798565,-0.075000,4.284092,1.798565,0.075000,4.284092,1.774388,-0.075000,4.284092,1.774388,0.075000,4.284092,1.639582,-0.075000,4.009351,1.639582,0.075000,4.009351,1.663759,-0.075000,4.009351,1.663759,0.075000,4.009351,2.160490,-0.075000,4.284092,2.160490,0.075000,4.284092,2.136313,-0.075000,4.284092,2.136313,0.075000,4.284092,2.001507,-0.075000,4.009351,2.001507,0.075000,4.009351,2.025684,-0.075000,4.009351,2.025684,0.075000,4.009351,-2.206639,-0.075000,4.399468,-2.206639,0.075000,4.399468,-2.182462,-0.075000,4.399468,-2.182462,0.075000,4.399468,-2.317268,-0.075000,4.674209,-2.317268,0.075000,4.674209,-2.341445,-0.075000,4.674209,-2.341445,0.075000,4.674209,-1.844714,-0.075000,4.399468,-1.844714,0.075000,4.399468,-1.820537,-0.075000,4.399468,-1.820537,0.075000,4.399468,-1.955343,-0.075000,4.674209,-1.955343,0.075000,4.674209,-1.979520,-0.075000,4.674209,-1.979520,0.075000,4.674209,-0.079634,-0.075000,4.674209,-0.079634,0.075000,4.674209,-0.101321,-0.075000,4.674209,-0.101321,0.075000,4.674209,-0.101321,-0.075000,4.399468,-0.101321,0.075000,4.399468,-0.079634,-0.075000,4.399468,-0.079634,0.075000,4.399468,0.101328,-0.075000,4.674209,0.101328,0.075000,4.674209,0.079642,-0.075000,4.674209,0.079642,0.075000,4.674209,0.079642,-0.075000,4.399468,0.079642,0.075000,4.399468,0.101328,-0.075000,4.399468,0.101328,0.075000,4.399468,1.979528,-0.075000,4.674209,1.979528,0.075000,4.674209,1.955350,-0.075000,4.674209,1.955350,0.075000,4.674209,1.820544,-0.075000,4.399468,1.820544,0.075000,4.399468,1.844721,-0.075000,4.399468,1.844721,0.075000,4.399468,2.341452,-0.075000,4.674209,2.341452,0.075000,4.674209,2.317275,-0.075000,4.674209,2.317275,0.075000,4.674209,2.182469,-0.075000,4.399468,2.182469,0.075000,4.399468,2.206646,-0.075000,4.399468,2.206646,0.075000,4.399468,-2.387601,-0.075000,4.789584,-2.387601,0.075000,4.789584,-2.363424,-0.075000,4.789584,-2.363424,0.075000,4.789584,-2.498230,-0.075000,5.064325,-2.498230,0.075000,5.064325,-2.522407,-0.075000,5.064325,-2.522407,0.075000,5.064325,-2.240340,-0.075000,5.020953,-2.240340,0.075000,5.020953,-2.283713,-0.075000,5.020953,-2.283713,0.075000,5.020953,-2.283713,-0.075000,4.977580,-2.283713,0.075000,4.977580,-2.240340,-0.075000,4.977580,-2.240340,0.075000,4.977580,-2.070221,-0.075000,4.879992,-2.070221,0.075000,4.879992,-2.091907,-0.075000,4.879992,-2.091907,0.075000,4.879992,-2.102750,-0.075000,4.789584,-2.102750,0.075000,4.789584,-2.059378,-0.075000,4.789584,-2.059378,0.075000,4.789584,-0.079634,-0.075000,5.064325,-0.079634,0.075000,5.064325,-0.101321,-0.075000,5.064325,-0.101321,0.075000,5.064325,-0.101321,-0.075000,4.789584,-0.101321,0.075000,4.789584,-0.079634,-0.075000,4.789584,-0.079634,0.075000,4.789584,0.101328,-0.075000,5.064325,0.101328,0.075000,5.064325,0.079642,-0.075000,5.064325,0.079642,0.075000,5.064325,0.079642,-0.075000,4.789584,0.079642,0.075000,4.789584,0.101328,-0.075000,4.789584,0.101328,0.075000,4.789584,2.091915,-0.075000,4.879992,2.091915,0.075000,4.879992,2.070228,-0.075000,4.879992,2.070228,0.075000,4.879992,2.059386,-0.075000,4.789584,2.059386,0.075000,4.789584,2.102757,-0.075000,4.789584,2.102757,0.075000,4.789584,2.283720,-0.075000,5.020953,2.283720,0.075000,5.020953,2.240348,-0.075000,5.020953,2.240348,0.075000,5.020953,2.240348,-0.075000,4.977580,2.240348,0.075000,4.977580,2.283720,-0.075000,4.977580,2.283720,0.075000,4.977580,2.522415,-0.075000,5.064325,2.522415,0.075000,5.064325,2.498238,-0.075000,5.064325,2.498238,0.075000,5.064325,2.363432,-0.075000,4.789584,2.363432,0.075000,4.789584,2.387609,-0.075000,4.789584,2.387609,0.075000,4.789584,-2.568564,-0.075000,5.179701,-2.568564,0.075000,5.179701,-2.544387,-0.075000,5.179701,-2.544387,0.075000,5.179701,-2.679193,-0.075000,5.454442,-2.679193,0.075000,5.454442,-2.703370,-0.075000,5.454442,-2.703370,0.075000,5.454442,-2.387601,-0.075000,5.179701,-2.387601,0.075000,5.179701,-2.363424,-0.075000,5.179701,-2.363424,0.075000,5.179701,-2.498230,-0.075000,5.454442,-2.498230,0.075000,5.454442,-2.522407,-0.075000,5.454442,-2.522407,0.075000,5.454442,-0.079634,-0.075000,5.454442,-0.079634,0.075000,5.454442,-0.101321,-0.075000,5.454442,-0.101321,0.075000,5.454442,-0.101321,-0.075000,5.179701,-0.101321,0.075000,5.179701,-0.079634,-0.075000,5.179701,-0.079634,0.075000,5.179701,0.101328,-0.075000,5.454442,0.101328,0.075000,5.454442,0.079642,-0.075000,5.454442,0.079642,0.075000,5.454442,0.079642,-0.075000,5.179701,0.079642,0.075000,5.179701,0.101328,-0.075000,5.179701,0.101328,0.075000,5.179701,2.522415,-0.075000,5.454442,2.522415,0.075000,5.454442,2.498238,-0.075000,5.454442,2.498238,0.075000,5.454442,2.363432,-0.075000,5.179701,2.363432,0.075000,5.179701,2.387609,-0.075000,5.179701,2.387609,0.075000,5.179701,2.703377,-0.075000,5.454442,2.703377,0.075000,5.454442,2.679200,-0.075000,5.454442,2.679200,0.075000,5.454442,2.544394,-0.075000,5.179701,2.544394,0.075000,5.179701,2.568571,-0.075000,5.179701,2.568571,0.075000,5.179701,-3.076431,-0.075000,5.822873,-3.076431,0.075000,5.822873,-3.257247,-0.075000,5.822873,-3.257247,0.075000,5.822873,-3.257247,-0.075000,5.801186,-3.257247,0.075000,5.801186,-3.076431,-0.075000,5.801186,-3.076431,0.075000,5.801186,-2.895468,-0.075000,5.822873,-2.895468,0.075000,5.822873,-3.076284,-0.075000,5.822873,-3.076284,0.075000,5.822873,-3.076284,-0.075000,5.801186,-3.076284,0.075000,5.801186,-2.895468,-0.075000,5.801186,-2.895468,0.075000,5.801186,-2.749526,-0.075000,5.569818,-2.749526,0.075000,5.569818,-2.725349,-0.075000,5.569818,-2.725349,0.075000,5.569818,-2.860155,-0.075000,5.844558,-2.860155,0.075000,5.844558,-2.884332,-0.075000,5.844558,-2.884332,0.075000,5.844558,-2.568564,-0.075000,5.569818,-2.568564,0.075000,5.569818,-2.544387,-0.075000,5.569818,-2.544387,0.075000,5.569818,-2.679193,-0.075000,5.844558,-2.679193,0.075000,5.844558,-2.703370,-0.075000,5.844558,-2.703370,0.075000,5.844558,-2.352581,-0.075000,5.822873,-2.352581,0.075000,5.822873,-2.533397,-0.075000,5.822873,-2.533397,0.075000,5.822873,-2.533397,-0.075000,5.801186,-2.533397,0.075000,5.801186,-2.352581,-0.075000,5.801186,-2.352581,0.075000,5.801186,-0.361994,-0.075000,5.822873,-0.361994,0.075000,5.822873,-0.542810,-0.075000,5.822873,-0.542810,0.075000,5.822873,-0.542810,-0.075000,5.801186,-0.542810,0.075000,5.801186,-0.361994,-0.075000,5.801186,-0.361994,0.075000,5.801186,-0.181032,-0.075000,5.822873,-0.181032,0.075000,5.822873,-0.361848,-0.075000,5.822873,-0.361848,0.075000,5.822873,-0.361848,-0.075000,5.801186,-0.361848,0.075000,5.801186,-0.181032,-0.075000,5.801186,-0.181032,0.075000,5.801186,-0.079634,-0.075000,5.844558,-0.079634,0.075000,5.844558,-0.101321,-0.075000,5.844558,-0.101321,0.075000,5.844558,-0.101321,-0.075000,5.569818,-0.101321,0.075000,5.569818,-0.079634,-0.075000,5.569818,-0.079634,0.075000,5.569818,0.101328,-0.075000,5.844558,0.101328,0.075000,5.844558,0.079642,-0.075000,5.844558,0.079642,0.075000,5.844558,0.079642,-0.075000,5.569818,0.079642,0.075000,5.569818,0.101328,-0.075000,5.569818,0.101328,0.075000,5.569818,0.361855,-0.075000,5.822873,0.361855,0.075000,5.822873,0.181040,-0.075000,5.822873,0.181040,0.075000,5.822873,0.181040,-0.075000,5.801186,0.181040,0.075000,5.801186,0.361855,-0.075000,5.801186,0.361855,0.075000,5.801186,0.542818,-0.075000,5.822873,0.542818,0.075000,5.822873,0.362002,-0.075000,5.822873,0.362002,0.075000,5.822873,0.362002,-0.075000,5.801186,0.362002,0.075000,5.801186,0.542818,-0.075000,5.801186,0.542818,0.075000,5.801186,2.533404,-0.075000,5.822873,2.533404,0.075000,5.822873,2.352588,-0.075000,5.822873,2.352588,0.075000,5.822873,2.352588,-0.075000,5.801186,2.352588,0.075000,5.801186,2.533404,-0.075000,5.801186,2.533404,0.075000,5.801186,2.703377,-0.075000,5.844558,2.703377,0.075000,5.844558,2.679200,-0.075000,5.844558,2.679200,0.075000,5.844558,2.544394,-0.075000,5.569818,2.544394,0.075000,5.569818,2.568571,-0.075000,5.569818,2.568571,0.075000,5.569818,2.884340,-0.075000,5.844558,2.884340,0.075000,5.844558,2.860162,-0.075000,5.844558,2.860162,0.075000,5.844558,2.725356,-0.075000,5.569818,2.725356,0.075000,5.569818,2.749534,-0.075000,5.569818,2.749534,0.075000,5.569818,3.076292,-0.075000,5.822873,3.076292,0.075000,5.822873,2.895476,-0.075000,5.822873,2.895476,0.075000,5.822873,2.895476,-0.075000,5.801186,2.895476,0.075000,5.801186,3.076292,-0.075000,5.801186,3.076292,0.075000,5.801186,3.257254,-0.075000,5.822873,3.257254,0.075000,5.822873,3.076438,-0.075000,5.822873,3.076438,0.075000,5.822873,3.076438,-0.075000,5.801186,3.076438,0.075000,5.801186,3.257254,-0.075000,5.801186,3.257254,0.075000,5.801186,-3.336958,-0.075000,6.050342,-3.336958,0.075000,6.050342,-3.358644,-0.075000,6.050342,-3.358644,0.075000,6.050342,-3.369488,-0.075000,5.959935,-3.369488,0.075000,5.959935,-3.326115,-0.075000,5.959935,-3.326115,0.075000,5.959935,-3.089179,-0.075000,6.149688,-3.089179,0.075000,6.149688,-3.244645,-0.075000,6.149688,-3.244645,0.075000,6.149688,-3.244645,-0.075000,6.128003,-3.244645,0.075000,6.128003,-3.089179,-0.075000,6.128003,-3.089179,0.075000,6.128003,-3.089179,-0.075000,6.095473,-3.089179,0.075000,6.095473,-3.244645,-0.075000,6.095473,-3.244645,0.075000,6.095473,-3.244645,-0.075000,6.073787,-3.244645,0.075000,6.073787,-3.089179,-0.075000,6.073787,-3.089179,0.075000,6.073787,-2.908216,-0.075000,6.149688,-2.908216,0.075000,6.149688,-3.063683,-0.075000,6.149688,-3.063683,0.075000,6.149688,-3.063683,-0.075000,6.128003,-3.063683,0.075000,6.128003,-2.908216,-0.075000,6.128003,-2.908216,0.075000,6.128003,-2.908216,-0.075000,6.095473,-2.908216,0.075000,6.095473,-3.063683,-0.075000,6.095473,-3.063683,0.075000,6.095473,-3.063683,-0.075000,6.073787,-3.063683,0.075000,6.073787,-2.908216,-0.075000,6.073787,-2.908216,0.075000,6.073787,-2.727254,-0.075000,6.149688,-2.727254,0.075000,6.149688,-2.882720,-0.075000,6.149688,-2.882720,0.075000,6.149688,-2.882720,-0.075000,6.128003,-2.882720,0.075000,6.128003,-2.727254,-0.075000,6.128003,-2.727254,0.075000,6.128003,-2.727254,-0.075000,6.095473,-2.727254,0.075000,6.095473,-2.882720,-0.075000,6.095473,-2.882720,0.075000,6.095473,-2.882720,-0.075000,6.073787,-2.882720,0.075000,6.073787,-2.727254,-0.075000,6.073787,-2.727254,0.075000,6.073787,-2.546292,-0.075000,6.149688,-2.546292,0.075000,6.149688,-2.701758,-0.075000,6.149688,-2.701758,0.075000,6.149688,-2.701758,-0.075000,6.128003,-2.701758,0.075000,6.128003,-2.546292,-0.075000,6.128003,-2.546292,0.075000,6.128003,-2.546292,-0.075000,6.095473,-2.546292,0.075000,6.095473,-2.701758,-0.075000,6.095473,-2.701758,0.075000,6.095473,-2.701758,-0.075000,6.073787,-2.701758,0.075000,6.073787,-2.546292,-0.075000,6.073787,-2.546292,0.075000,6.073787,-2.365329,-0.075000,6.149688,-2.365329,0.075000,6.149688,-2.520796,-0.075000,6.149688,-2.520796,0.075000,6.149688,-2.520796,-0.075000,6.128003,-2.520796,0.075000,6.128003,-2.365329,-0.075000,6.128003,-2.365329,0.075000,6.128003,-2.365329,-0.075000,6.095473,-2.365329,0.075000,6.095473,-2.520796,-0.075000,6.095473,-2.520796,0.075000,6.095473,-2.520796,-0.075000,6.073787,-2.520796,0.075000,6.073787,-2.365329,-0.075000,6.073787,-2.365329,0.075000,6.073787,-2.251184,-0.075000,6.050342,-2.251184,0.075000,6.050342,-2.272870,-0.075000,6.050342,-2.272870,0.075000,6.050342,-2.283713,-0.075000,5.959935,-2.283713,0.075000,5.959935,-2.240340,-0.075000,5.959935,-2.240340,0.075000,5.959935,-0.622522,-0.075000,6.050342,-0.622522,0.075000,6.050342,-0.644208,-0.075000,6.050342,-0.644208,0.075000,6.050342,-0.655051,-0.075000,5.959935,-0.655051,0.075000,5.959935,-0.611679,-0.075000,5.959935,-0.611679,0.075000,5.959935,-0.374742,-0.075000,6.149688,-0.374742,0.075000,6.149688,-0.530209,-0.075000,6.149688,-0.530209,0.075000,6.149688,-0.530209,-0.075000,6.128003,-0.530209,0.075000,6.128003,-0.374742,-0.075000,6.128003,-0.374742,0.075000,6.128003,-0.374742,-0.075000,6.095473,-0.374742,0.075000,6.095473,-0.530209,-0.075000,6.095473,-0.530209,0.075000,6.095473,-0.530209,-0.075000,6.073787,-0.530209,0.075000,6.073787,-0.374742,-0.075000,6.073787,-0.374742,0.075000,6.073787,-0.193780,-0.075000,6.149688,-0.193780,0.075000,6.149688,-0.349247,-0.075000,6.149688,-0.349247,0.075000,6.149688,-0.349247,-0.075000,6.128003,-0.349247,0.075000,6.128003,-0.193780,-0.075000,6.128003,-0.193780,0.075000,6.128003,-0.193780,-0.075000,6.095473,-0.193780,0.075000,6.095473,-0.349247,-0.075000,6.095473,-0.349247,0.075000,6.095473,-0.349247,-0.075000,6.073787,-0.349247,0.075000,6.073787,-0.193780,-0.075000,6.073787,-0.193780,0.075000,6.073787,-0.012817,-0.075000,6.149688,-0.012817,0.075000,6.149688,-0.168284,-0.075000,6.149688,-0.168284,0.075000,6.149688,-0.168284,-0.075000,6.128003,-0.168284,0.075000,6.128003,-0.012817,-0.075000,6.128003,-0.012817,0.075000,6.128003,-0.012817,-0.075000,6.095473,-0.012817,0.075000,6.095473,-0.168284,-0.075000,6.095473,-0.168284,0.075000,6.095473,-0.168284,-0.075000,6.073787,-0.168284,0.075000,6.073787,-0.012817,-0.075000,6.073787,-0.012817,0.075000,6.073787,0.168145,-0.075000,6.149688,0.168145,0.075000,6.149688,0.012678,-0.075000,6.149688,0.012678,0.075000,6.149688,0.012678,-0.075000,6.128003,0.012678,0.075000,6.128003,0.168145,-0.075000,6.128003,0.168145,0.075000,6.128003,0.168145,-0.075000,6.095473,0.168145,0.075000,6.095473,0.012678,-0.075000,6.095473,0.012678,0.075000,6.095473,0.012678,-0.075000,6.073787,0.012678,0.075000,6.073787,0.168145,-0.075000,6.073787,0.168145,0.075000,6.073787,0.349107,-0.075000,6.149688,0.349107,0.075000,6.149688,0.193641,-0.075000,6.149688,0.193641,0.075000,6.149688,0.193641,-0.075000,6.128003,0.193641,0.075000,6.128003,0.349107,-0.075000,6.128003,0.349107,0.075000,6.128003,0.349107,-0.075000,6.095473,0.349107,0.075000,6.095473,0.193641,-0.075000,6.095473,0.193641,0.075000,6.095473,0.193641,-0.075000,6.073787,0.193641,0.075000,6.073787,0.349107,-0.075000,6.073787,0.349107,0.075000,6.073787,0.530070,-0.075000,6.149688,0.530070,0.075000,6.149688,0.374603,-0.075000,6.149688,0.374603,0.075000,6.149688,0.374603,-0.075000,6.128003,0.374603,0.075000,6.128003,0.530070,-0.075000,6.128003,0.530070,0.075000,6.128003,0.530070,-0.075000,6.095473,0.530070,0.075000,6.095473,0.374603,-0.075000,6.095473,0.374603,0.075000,6.095473,0.374603,-0.075000,6.073787,0.374603,0.075000,6.073787,0.530070,-0.075000,6.073787,0.530070,0.075000,6.073787,0.644215,-0.075000,6.050342,0.644215,0.075000,6.050342,0.622529,-0.075000,6.050342,0.622529,0.075000,6.050342,0.611686,-0.075000,5.959935,0.611686,0.075000,5.959935,0.655058,-0.075000,5.959935,0.655058,0.075000,5.959935,2.272877,-0.075000,6.050342,2.272877,0.075000,6.050342,2.251191,-0.075000,6.050342,2.251191,0.075000,6.050342,2.240348,-0.075000,5.959935,2.240348,0.075000,5.959935,2.283720,-0.075000,5.959935,2.283720,0.075000,5.959935,2.520656,-0.075000,6.149688,2.520656,0.075000,6.149688,2.365190,-0.075000,6.149688,2.365190,0.075000,6.149688,2.365190,-0.075000,6.128003,2.365190,0.075000,6.128003,2.520656,-0.075000,6.128003,2.520656,0.075000,6.128003,2.520656,-0.075000,6.095473,2.520656,0.075000,6.095473,2.365190,-0.075000,6.095473,2.365190,0.075000,6.095473,2.365190,-0.075000,6.073787,2.365190,0.075000,6.073787,2.520656,-0.075000,6.073787,2.520656,0.075000,6.073787,2.701619,-0.075000,6.149688,2.701619,0.075000,6.149688,2.546153,-0.075000,6.149688,2.546153,0.075000,6.149688,2.546153,-0.075000,6.128003,2.546153,0.075000,6.128003,2.701619,-0.075000,6.128003,2.701619,0.075000,6.128003,2.701619,-0.075000,6.095473,2.701619,0.075000,6.095473,2.546153,-0.075000,6.095473,2.546153,0.075000,6.095473,2.546153,-0.075000,6.073787,2.546153,0.075000,6.073787,2.701619,-0.075000,6.073787,2.701619,0.075000,6.073787,2.882581,-0.075000,6.149688,2.882581,0.075000,6.149688,2.727115,-0.075000,6.149688,2.727115,0.075000,6.149688,2.727115,-0.075000,6.128003,2.727115,0.075000,6.128003,2.882581,-0.075000,6.128003,2.882581,0.075000,6.128003,2.882581,-0.075000,6.095473,2.882581,0.075000,6.095473,2.727115,-0.075000,6.095473,2.727115,0.075000,6.095473,2.727115,-0.075000,6.073787,2.727115,0.075000,6.073787,2.882581,-0.075000,6.073787,2.882581,0.075000,6.073787,3.063544,-0.075000,6.149688,3.063544,0.075000,6.149688,2.908077,-0.075000,6.149688,2.908077,0.075000,6.149688,2.908077,-0.075000,6.128003,2.908077,0.075000,6.128003,3.063544,-0.075000,6.128003,3.063544,0.075000,6.128003,3.063544,-0.075000,6.095473,3.063544,0.075000,6.095473,2.908077,-0.075000,6.095473,2.908077,0.075000,6.095473,2.908077,-0.075000,6.073787,2.908077,0.075000,6.073787,3.063544,-0.075000,6.073787,3.063544,0.075000,6.073787,3.244506,-0.075000,6.149688,3.244506,0.075000,6.149688,3.089040,-0.075000,6.149688,3.089040,0.075000,6.149688,3.089040,-0.075000,6.128003,3.089040,0.075000,6.128003,3.244506,-0.075000,6.128003,3.244506,0.075000,6.128003,3.244506,-0.075000,6.095473,3.244506,0.075000,6.095473,3.089040,-0.075000,6.095473,3.089040,0.075000,6.095473,3.089040,-0.075000,6.073787,3.089040,0.075000,6.073787,3.244506,-0.075000,6.073787,3.244506,0.075000,6.073787,3.358652,-0.075000,6.050342,3.358652,0.075000,6.050342,3.336966,-0.075000,6.050342,3.336966,0.075000,6.050342,3.326123,-0.075000,5.959935,3.326123,0.075000,5.959935,3.369495,-0.075000,5.959935,3.369495,0.075000,5.959935],
rocket-3d/web/obj/rocket_model.js:    "morphTargets": [],
rocket-3d/web/obj/rocket_model.js:    "normals": [0.000000,1.000000,0.000000,0.000000,0.999969,0.000000,0.000000,-1.000000,0.000000,0.000000,-0.999969,0.000000,-0.528886,0.000000,-0.848659,0.848659,0.000000,-0.528886,0.528886,0.000000,0.848659,-0.848659,0.000000,0.528886,0.848659,0.000000,0.528886,-0.528886,0.000000,0.848659,-0.848659,0.000000,-0.528886,0.528886,0.000000,-0.848659,0.663656,0.000000,0.748009,-0.663656,0.000000,0.748009,-0.748009,0.000000,-0.663656,0.748009,0.000000,-0.663656,0.707083,0.000000,0.707083,-0.707083,0.000000,0.707083,-0.707083,0.000000,-0.707083,0.707083,0.000000,-0.707083,0.544145,0.000000,0.838984,-0.839198,0.000000,0.543779,-0.000336,0.000000,-0.999969,0.839381,0.000000,0.543474,-0.543718,0.000000,0.839259,0.000488,0.000000,0.999969],
rocket-3d/web/obj/rocket_model.js:    "colors": [],
rocket-3d/web/obj/rocket_model.js:    "uvs": [[]],
rocket-3d/web/obj/rocket_model.js:    "faces": [34,5,7,6,0,0,0,0,34,5,4,7,0,0,1,0,34,9,11,10,0,0,0,0,34,9,8,11,0,0,0,0,34,13,15,14,0,0,0,0,34,13,12,15,0,0,0,0,34,17,19,18,0,0,0,0,34,17,16,19,0,0,0,0,34,21,23,22,0,0,0,0,34,21,20,23,0,0,0,0,34,25,27,26,0,0,0,0,34,25,24,27,0,0,0,0,34,29,31,30,0,0,0,0,34,29,28,31,0,0,0,0,34,35,33,32,0,0,0,0,34,35,34,33,0,0,0,0,34,39,37,36,0,0,0,0,34,39,38,37,0,0,0,0,34,41,43,42,0,0,0,0,34,41,40,43,0,0,0,0,34,45,47,46,0,0,0,0,34,45,44,47,0,0,0,0,34,49,51,50,0,0,0,0,34,49,48,51,0,0,0,0,34,55,53,52,0,0,0,0,34,55,54,53,0,0,0,0,34,59,57,56,0,0,0,0,34,59,58,57,0,0,0,0,34,63,61,60,0,0,0,0,34,63,62,61,0,0,0,0,34,65,67,66,0,0,0,0,34,65,64,67,0,0,0,0,34,69,71,70,0,0,0,0,34,69,68,71,0,0,0,0,34,73,75,74,0,0,0,0,34,73,72,75,0,0,0,0,34,77,79,78,0,0,0,0,34,77,76,79,0,0,0,0,34,83,81,80,0,0,0,0,34,83,82,81,0,0,0,0,34,87,85,84,0,0,0,0,34,87,86,85,0,0,0,0,34,91,89,88,0,0,0,0,34,91,90,89,0,0,0,0,34,93,95,94,0,0,0,0,34,93,92,95,0,0,0,0,34,97,99,98,0,0,0,0,34,97,96,99,0,0,0,0,34,101,103,102,0,0,0,0,34,101,100,103,0,0,0,0,34,107,105,104,0,0,0,0,34,107,106,105,0,0,0,0,34,111,109,108,0,0,0,0,34,111,110,109,0,0,0,0,34,113,115,114,0,1,0,0,34,113,112,115,0,1,0,0,34,117,119,118,0,0,0,0,34,117,116,119,0,0,0,0,34,121,123,122,0,0,0,0,34,121,120,123,0,0,0,0,34,127,125,124,0,0,0,0,34,127,126,125,0,0,0,0,34,131,129,128,0,0,0,0,34,131,130,129,0,0,0,0,34,133,135,134,0,1,1,1,34,133,132,135,0,1,0,1,34,139,137,136,0,0,0,0,34,139,138,137,0,0,0,0,34,143,141,140,0,0,0,0,34,143,142,141,0,0,0,0,34,147,145,144,0,0,0,0,34,147,146,145,0,0,0,0,34,151,149,148,0,0,0,0,34,151,150,149,0,0,0,0,34,153,155,154,0,0,0,0,34,153,152,155,0,0,0,0,34,159,157,156,0,0,0,0,34,159,158,157,0,0,0,0,34,163,161,160,0,0,0,0,34,163,162,161,0,0,0,0,34,167,165,164,0,0,0,0,34,167,166,165,0,0,0,0,34,169,171,170,0,0,0,0,34,169,168,171,0,0,0,0,34,173,175,174,0,0,0,0,34,173,172,175,0,0,0,0,34,177,179,178,0,0,0,0,34,177,176,179,0,0,0,0,34,181,183,182,0,0,0,0,34,181,180,183,0,0,0,0,34,185,187,186,0,0,0,0,34,185,184,187,0,0,0,0,34,189,191,190,0,0,0,0,34,189,188,191,0,0,0,0,34,193,195,194,0,0,0,0,34,193,192,195,0,0,0,0,34,197,199,198,0,0,0,0,34,197,196,199,0,0,0,0,34,201,203,202,0,1,1,0,34,201,200,203,0,1,0,1,34,205,207,206,0,0,0,0,34,205,204,207,0,0,0,0,34,209,211,210,0,0,0,0,34,209,208,211,0,0,0,0,34,213,215,214,0,0,0,0,34,213,212,215,0,0,0,0,34,217,219,218,0,0,0,0,34,217,216,219,0,0,0,0,34,221,223,222,0,0,0,0,34,221,220,223,0,0,0,0,34,227,225,224,0,0,0,0,34,227,226,225,0,0,0,0,34,231,229,228,0,0,0,0,34,231,230,229,0,0,0,0,34,233,235,234,0,0,0,0,34,233,232,235,0,0,0,0,34,237,239,238,0,0,0,0,34,237,236,239,0,0,0,0,34,241,243,242,0,0,0,0,34,241,240,243,0,0,0,0,34,245,247,246,0,0,0,0,34,245,244,247,0,0,0,0,34,249,251,250,0,0,0,0,34,249,248,251,0,0,0,0,34,253,255,254,0,0,0,0,34,253,252,255,0,0,0,0,34,257,259,258,0,0,0,0,34,257,256,259,0,0,0,0,34,263,261,260,0,0,0,0,34,263,262,261,0,0,0,0,34,267,265,264,0,0,0,0,34,267,266,265,0,0,0,0,34,269,271,270,0,0,0,0,34,269,268,271,0,0,0,0,34,273,275,274,0,1,1,0,34,273,272,275,0,1,0,1,34,277,279,278,0,1,1,0,34,277,276,279,0,1,0,1,34,281,283,282,0,0,0,0,34,281,280,283,0,0,0,0,34,285,287,286,0,1,1,0,34,285,284,287,0,1,0,1,34,289,291,290,0,0,0,0,34,289,288,291,0,0,0,0,34,293,295,294,0,0,0,0,34,293,292,295,0,0,0,0,34,297,299,298,0,0,0,0,34,297,296,299,0,0,0,0,34,301,303,302,0,0,0,0,34,301,300,303,0,0,0,0,34,305,307,306,0,0,0,0,34,305,304,307,0,0,0,0,34,309,311,310,0,0,0,0,34,309,308,311,0,0,0,0,34,313,315,314,0,0,0,0,34,313,312,315,0,0,0,0,34,317,319,318,0,1,1,0,34,317,316,319,0,1,0,1,34,321,323,322,0,0,0,0,34,321,320,323,0,0,0,0,34,325,327,326,0,1,1,0,34,325,324,327,0,1,0,1,34,329,331,330,0,1,1,0,34,329,328,331,0,1,0,1,34,333,335,334,0,1,1,0,34,333,332,335,0,1,0,1,34,337,339,338,0,0,0,0,34,337,336,339,0,0,0,0,34,341,343,342,0,1,1,0,34,341,340,343,0,1,0,1,34,345,347,346,0,1,1,0,34,345,344,347,0,1,0,1,34,349,351,350,0,0,0,0,34,349,348,351,0,0,0,0,34,353,355,354,0,0,0,0,34,353,352,355,0,0,0,0,34,359,357,356,0,0,0,0,34,359,358,357,0,0,0,0,34,363,361,360,0,0,0,0,34,363,362,361,0,0,0,0,34,367,365,364,0,0,0,0,34,367,366,365,0,0,0,0,34,369,371,370,0,0,0,0,34,369,368,371,0,0,0,0,34,373,375,374,0,0,0,0,34,373,372,375,0,0,0,0,34,377,379,378,0,0,1,1,34,377,376,379,0,0,1,1,34,381,383,382,0,0,0,0,34,381,380,383,0,0,0,0,34,385,387,386,0,1,1,0,34,385,384,387,0,1,0,1,34,389,391,390,0,0,0,0,34,389,388,391,0,0,0,0,34,393,395,394,0,1,1,0,34,393,392,395,0,1,0,1,34,397,399,398,0,0,0,0,34,397,396,399,0,0,0,0,34,401,403,402,0,0,0,0,34,401,400,403,0,0,0,0,34,405,407,406,0,0,0,0,34,405,404,407,0,0,0,0,34,409,411,410,0,0,0,0,34,409,408,411,0,0,0,0,34,413,415,414,0,0,0,0,34,413,412,415,0,0,0,0,34,419,417,416,0,0,0,0,34,419,418,417,0,0,0,0,34,423,421,420,0,0,0,0,34,423,422,421,0,0,0,0,34,427,425,424,0,0,0,0,34,427,426,425,0,0,0,0,34,431,429,428,0,0,0,0,34,431,430,429,0,0,0,0,34,435,433,432,0,0,0,0,34,435,434,433,0,0,0,0,34,437,439,438,0,0,0,0,34,437,436,439,0,0,0,0,34,441,443,442,0,0,0,0,34,441,440,443,0,0,0,0,34,445,447,446,0,0,0,0,34,445,444,447,0,0,0,0,34,449,451,450,0,0,0,0,34,449,448,451,0,0,0,0,34,453,455,454,0,0,0,0,34,453,452,455,0,0,0,0,34,457,459,458,0,0,0,0,34,457,456,459,0,0,0,0,34,461,463,462,0,0,0,0,34,461,460,463,0,0,0,0,34,465,467,466,0,0,0,0,34,465,464,467,0,0,0,0,34,469,471,470,0,0,0,0,34,469,468,471,0,0,0,0,34,475,473,472,0,0,0,0,34,475,474,473,0,0,0,0,34,479,477,476,0,0,1,0,34,479,478,477,0,0,0,1,34,483,481,480,0,0,0,0,34,483,482,481,0,0,0,0,34,485,487,486,0,0,0,0,34,485,484,487,0,0,0,0,34,489,491,490,0,0,0,0,34,489,488,491,0,0,0,0,34,493,495,494,0,0,0,0,34,493,492,495,0,0,0,0,34,497,499,498,0,1,0,1,34,497,496,499,0,1,1,0,34,501,503,502,0,1,1,0,34,501,500,503,0,1,0,1,34,505,507,506,0,1,0,0,34,505,504,507,0,1,0,0,34,509,511,510,0,1,1,0,34,509,508,511,0,1,0,1,34,513,515,514,0,0,0,0,34,513,512,515,0,0,0,0,34,517,519,518,0,0,0,0,34,517,516,519,0,0,0,0,34,521,523,522,0,0,0,0,34,521,520,523,0,0,0,0,34,525,527,526,0,0,0,0,34,525,524,527,0,0,0,0,34,529,531,530,0,0,0,0,34,529,528,531,0,0,0,0,34,533,535,534,0,0,0,0,34,533,532,535,0,0,0,0,34,537,539,538,0,0,0,0,34,537,536,539,0,0,0,0,34,543,541,540,0,0,0,0,34,543,542,541,0,0,0,0,34,547,545,544,0,0,0,0,34,547,546,545,0,0,0,0,34,549,553,550,0,0,1,0,34,553,551,550,0,1,0,0,34,549,548,553,0,0,1,1,34,552,551,553,0,0,0,1,34,555,557,556,0,0,0,0,34,555,554,557,0,0,0,0,34,559,561,560,0,0,0,0,34,559,558,561,0,0,0,0,34,563,565,564,0,0,0,0,34,563,562,565,0,0,1,0,34,567,569,568,0,0,0,0,34,567,566,569,0,0,0,0,34,571,573,572,0,0,0,0,34,571,570,573,0,0,0,0,34,575,577,576,0,0,0,0,34,575,574,577,0,0,0,0,34,579,581,580,0,0,0,0,34,579,578,581,0,0,0,0,34,583,585,584,0,0,0,0,34,583,582,585,0,0,1,0,34,587,589,588,0,0,1,1,34,587,586,589,0,0,0,1,34,591,593,592,0,0,0,0,34,591,590,593,0,0,0,0,34,595,597,596,0,0,0,0,34,595,594,597,0,0,0,0,34,599,601,600,0,0,0,0,34,599,598,601,0,0,0,0,34,603,605,604,0,0,0,0,34,603,602,605,0,0,0,0,34,607,609,608,0,0,0,0,34,607,606,609,0,0,0,0,34,611,613,612,0,0,0,0,34,611,610,613,0,0,0,0,34,617,615,614,0,0,0,0,34,617,616,615,0,0,0,0,34,619,621,620,0,1,1,0,34,619,618,621,0,1,0,1,34,623,625,624,0,0,0,0,34,623,622,625,0,0,0,0,34,627,629,628,0,1,1,0,34,627,626,629,0,1,0,1,34,631,633,632,0,0,0,0,34,631,630,633,0,0,0,0,34,635,637,636,0,0,0,0,34,635,634,637,0,0,0,0,34,639,641,640,0,0,0,0,34,639,638,641,0,0,0,0,34,643,645,644,0,0,0,0,34,643,642,645,0,0,0,0,34,647,649,648,0,0,0,0,34,647,646,649,0,0,0,0,34,651,653,652,0,0,0,0,34,651,650,653,0,0,0,0,34,655,657,656,0,1,1,0,34,655,654,657,0,1,0,1,34,659,661,660,0,0,0,0,34,659,658,661,0,0,0,0,34,663,665,664,0,0,0,0,34,663,662,665,0,0,0,0,34,667,669,668,0,0,0,0,34,667,666,669,0,0,0,0,34,671,673,672,0,0,0,0,34,671,670,673,0,0,0,0,34,675,677,676,0,0,0,0,34,675,674,677,0,0,0,0,34,679,681,680,0,0,0,0,34,679,678,681,0,0,0,0,34,683,685,684,0,0,0,0,34,683,682,685,0,0,0,0,34,687,689,688,0,0,0,0,34,687,686,689,0,0,0,0,34,691,693,692,0,0,0,0,34,691,690,693,0,0,0,0,34,695,697,696,0,0,0,0,34,695,694,697,0,0,0,0,34,699,701,700,0,0,0,0,34,699,698,701,0,0,0,0,34,705,703,702,0,0,0,0,34,705,704,703,0,0,0,0,34,707,709,708,0,0,0,0,34,707,706,709,0,0,0,0,34,711,713,712,0,0,0,0,34,711,710,713,0,0,0,0,34,715,717,716,0,0,0,0,34,715,714,717,0,0,0,0,34,719,721,720,0,0,0,0,34,719,718,721,0,0,0,0,34,723,725,724,0,0,0,0,34,723,722,725,0,0,0,0,34,727,729,728,0,0,0,0,34,727,726,729,0,0,1,0,34,731,733,732,0,0,0,0,34,731,730,733,0,0,0,0,34,735,737,736,0,0,1,1,34,735,734,737,0,0,0,1,34,739,741,740,0,0,0,0,34,739,738,741,0,0,0,0,34,745,743,742,0,0,1,0,34,745,744,743,0,0,0,1,34,749,747,746,0,0,0,0,34,749,748,747,0,0,0,0,34,751,753,752,0,0,0,0,34,751,750,753,0,0,0,0,34,755,757,756,0,0,0,0,34,755,754,757,0,0,0,0,34,759,761,760,0,0,0,0,34,759,758,761,0,0,0,0,34,763,765,764,0,0,0,1,34,763,762,765,0,0,0,0,34,767,769,768,0,0,0,0,34,767,766,769,0,0,0,0,34,771,773,772,0,0,0,0,34,771,770,773,0,0,0,0,34,775,777,776,0,0,0,0,34,775,774,777,0,0,0,0,34,779,781,780,0,0,0,0,34,779,778,781,0,0,0,0,34,783,785,784,0,0,0,0,34,783,782,785,0,0,0,0,34,787,789,788,0,0,0,0,34,787,786,789,0,0,0,0,34,791,793,792,0,0,0,0,34,791,790,793,0,0,0,0,34,795,797,796,0,0,0,0,34,795,794,797,0,0,0,0,34,799,801,800,0,0,0,0,34,799,798,801,0,0,0,0,34,803,805,804,0,0,0,0,34,803,802,805,0,0,0,0,34,807,809,808,0,0,0,0,34,807,806,809,0,0,0,0,34,811,813,812,0,0,0,0,34,811,810,813,0,0,0,0,34,815,817,816,0,0,0,0,34,815,814,817,0,0,0,0,34,819,821,820,0,0,0,0,34,819,818,821,0,0,0,0,34,823,825,824,0,0,0,0,34,823,822,825,0,0,0,0,34,827,829,828,0,0,0,0,34,827,826,829,0,0,0,0,34,831,833,832,0,1,1,0,34,831,830,833,0,1,0,1,34,835,837,836,0,0,0,0,34,835,834,837,0,0,0,0,34,839,841,840,0,0,0,0,34,839,838,841,0,0,0,0,34,843,845,844,0,0,0,0,34,843,842,845,0,0,0,0,34,847,849,848,0,0,0,0,34,847,846,849,0,0,0,0,34,851,853,852,0,0,0,0,34,851,850,853,0,0,0,0,34,855,857,856,0,0,0,0,34,855,854,857,0,0,0,0,34,859,861,860,0,0,0,0,34,859,858,861,0,0,0,0,34,863,865,864,0,1,1,0,34,863,862,865,0,1,0,1,34,867,869,868,0,0,0,0,34,867,866,869,0,0,0,0,34,871,873,872,0,0,0,0,34,871,870,873,0,0,0,0,34,875,877,876,0,0,0,0,34,875,874,877,0,0,0,0,34,879,881,880,0,0,0,0,34,879,878,881,0,0,0,0,34,883,885,884,0,0,0,0,34,883,882,885,0,0,0,0,34,887,889,888,0,0,0,0,34,887,886,889,0,0,0,0,34,891,893,892,0,0,0,0,34,891,890,893,0,0,0,0,34,895,897,896,0,0,0,0,34,895,894,897,0,0,0,0,34,899,901,900,0,0,0,0,34,899,898,901,0,0,0,0,34,903,905,904,0,0,0,0,34,903,902,905,0,0,0,0,34,907,909,908,0,0,0,0,34,907,906,909,0,0,0,0,34,911,913,912,0,0,0,0,34,911,910,913,0,0,0,0,34,915,917,916,0,0,0,0,34,915,914,917,0,0,0,0,34,919,921,920,0,0,0,0,34,919,918,921,0,0,0,0,34,923,925,924,0,0,0,0,34,923,922,925,0,0,0,0,34,927,929,928,0,0,0,0,34,927,926,929,0,0,0,0,34,931,933,932,0,0,0,0,34,931,930,933,0,0,0,0,34,935,937,936,0,0,0,0,34,935,934,937,0,0,0,0,34,939,941,940,0,0,0,0,34,939,938,941,0,0,0,0,34,943,945,944,0,0,0,0,34,943,942,945,0,0,0,0,34,947,949,948,0,0,0,0,34,947,946,949,0,0,0,0,34,951,953,952,0,0,0,0,34,951,950,953,0,0,0,0,34,955,957,956,0,0,0,0,34,955,954,957,0,0,0,0,34,959,961,960,0,0,0,0,34,959,958,961,0,0,0,0,34,963,965,964,0,0,0,0,34,963,962,965,0,0,0,0,34,967,969,968,0,0,0,0,34,967,966,969,0,0,0,0,34,971,973,972,0,0,0,0,34,971,970,973,0,0,0,0,34,975,977,976,0,0,0,0,34,975,974,977,0,0,0,0,34,979,981,980,0,1,1,0,34,979,978,981,0,1,0,1,34,983,985,984,0,0,0,0,34,983,982,985,0,0,0,0,34,987,989,988,0,0,0,0,34,987,986,989,0,0,0,0,34,991,993,992,0,0,0,0,34,991,990,993,0,0,0,0,34,995,997,996,0,1,1,0,34,995,994,997,0,1,0,1,34,999,1001,1000,0,0,0,0,34,999,998,1001,0,0,0,0,34,1003,1005,1004,0,0,0,0,34,1003,1002,1005,0,0,0,0,34,1007,1009,1008,0,0,0,0,34,1007,1006,1009,0,0,0,0,34,1011,1013,1012,0,1,1,0,34,1011,1010,1013,0,1,0,1,34,1015,1017,1016,0,0,0,0,34,1015,1014,1017,0,0,0,0,34,1019,1021,1020,0,0,0,0,34,1019,1018,1021,0,0,0,0,34,1023,1025,1024,0,0,0,0,34,1023,1022,1025,0,0,0,0,34,1027,1029,1028,0,0,0,0,34,1027,1026,1029,0,0,0,0,34,1031,1033,1032,0,0,0,0,34,1031,1030,1033,0,0,0,0,34,1035,1037,1036,0,0,0,0,34,1035,1034,1037,0,0,0,0,34,1039,1041,1040,0,0,0,0,34,1039,1038,1041,0,0,0,0,34,1043,1045,1044,0,0,0,0,34,1043,1042,1045,0,0,0,0,34,1047,1049,1048,0,0,0,0,34,1047,1046,1049,0,0,0,0,34,1051,1053,1052,0,0,0,0,34,1051,1050,1053,0,0,0,0,34,1055,1057,1056,0,0,0,0,34,1055,1054,1057,0,0,0,0,34,1059,1061,1060,0,0,0,0,34,1059,1058,1061,0,0,0,0,34,1063,1065,1064,0,0,0,0,34,1063,1062,1065,0,0,0,0,34,1067,1069,1068,0,0,0,0,34,1067,1066,1069,0,0,0,0,34,1071,1073,1072,0,0,0,0,34,1071,1070,1073,0,0,0,0,34,1075,1077,1076,0,0,0,0,34,1075,1074,1077,0,0,0,0,34,1079,1081,1080,0,0,0,0,34,1079,1078,1081,0,0,0,0,34,1083,1085,1084,0,0,0,0,34,1083,1082,1085,0,0,0,0,34,1087,1089,1088,0,1,1,0,34,1087,1086,1089,0,1,0,1,34,1091,1093,1092,0,1,1,0,34,1091,1090,1093,0,1,0,1,34,1095,1097,1096,0,0,0,0,34,1095,1094,1097,0,0,0,0,34,1099,1101,1100,0,0,0,0,34,1099,1098,1101,0,0,0,0,34,1103,1105,1104,0,0,0,0,34,1103,1102,1105,0,0,0,0,34,1107,1109,1108,0,1,1,0,34,1107,1106,1109,0,1,0,1,34,1111,1113,1112,0,0,0,0,34,1111,1110,1113,0,0,0,0,34,1115,1117,1116,0,0,0,0,34,1115,1114,1117,0,0,0,0,34,1119,1121,1120,0,0,0,0,34,1119,1118,1121,0,0,0,0,34,1123,1125,1124,0,0,0,0,34,1123,1122,1125,0,0,0,0,34,1127,1129,1128,0,0,0,0,34,1127,1126,1129,0,0,0,0,34,1131,1133,1132,0,0,0,0,34,1131,1130,1133,0,0,0,0,34,1135,1137,1136,0,0,0,0,34,1135,1134,1137,0,0,0,0,34,1139,1141,1140,0,0,0,0,34,1139,1138,1141,0,0,0,0,34,1143,1145,1144,0,1,1,0,34,1143,1142,1145,0,1,0,1,34,1147,1149,1148,0,0,0,0,34,1147,1146,1149,0,0,0,0,34,1151,1153,1152,0,1,1,0,34,1151,1150,1153,0,1,0,1,34,1155,1157,1156,0,0,0,0,34,1155,1154,1157,0,0,0,0,34,1159,1161,1160,0,0,0,0,34,1159,1158,1161,0,0,0,0,34,1163,1165,1164,0,1,0,0,34,1163,1162,1165,0,1,1,0,34,1167,1169,1168,0,0,0,0,34,1167,1166,1169,0,0,0,0,34,1171,1173,1172,0,1,1,0,34,1171,1170,1173,0,1,0,1,34,1175,1177,1176,0,0,0,0,34,1175,1174,1177,0,0,0,0,34,1179,1181,1180,0,1,1,0,34,1179,1178,1181,0,1,0,1,34,1183,1185,1184,0,0,0,0,34,1183,1182,1185,0,0,0,0,34,1187,1189,1188,0,0,0,0,34,1187,1186,1189,0,0,0,0,34,1191,1193,1192,0,0,0,0,34,1191,1190,1193,0,0,0,0,34,1195,1197,1196,0,0,0,0,34,1195,1194,1197,0,0,0,0,34,1199,1201,1200,0,0,0,0,34,1199,1198,1201,0,0,0,0,34,1203,1205,1204,0,0,0,0,34,1203,1202,1205,0,0,0,0,34,1207,1209,1208,0,0,0,0,34,1207,1206,1209,0,0,0,0,34,1211,1215,1212,0,0,0,0,34,1215,1213,1212,0,0,0,0,34,1211,1210,1215,0,0,1,0,34,1214,1213,1215,0,0,0,0,34,1217,1219,1218,0,0,0,0,34,1217,1216,1219,0,0,0,0,34,1221,1223,1222,0,0,0,0,34,1221,1220,1223,0,0,0,0,34,1225,1227,1226,0,0,0,0,34,1225,1224,1227,0,0,1,0,34,1229,1231,1230,0,0,0,0,34,1229,1228,1231,0,0,0,0,34,1233,1235,1234,0,0,0,0,34,1233,1232,1235,0,0,0,0,34,1237,1239,1238,0,0,0,0,34,1237,1236,1239,0,0,0,0,34,1241,1243,1242,0,0,0,0,34,1241,1240,1243,0,0,0,0,34,1245,1247,1246,0,1,0,0,34,1245,1244,1247,0,1,1,0,34,1249,1251,1250,0,1,1,1,34,1249,1248,1251,0,1,0,1,34,1253,1255,1254,0,0,0,0,34,1253,1252,1255,0,0,0,0,34,1257,1259,1258,0,0,0,0,34,1257,1256,1259,0,0,0,0,34,1261,1263,1262,0,0,0,0,34,1261,1260,1263,0,0,0,0,34,1265,1267,1266,0,0,0,0,34,1265,1264,1267,0,0,0,0,34,1269,1271,1270,0,0,0,0,34,1269,1268,1271,0,0,0,0,34,1273,1275,1274,0,0,0,0,34,1273,1272,1275,0,0,0,0,34,1279,1277,1276,0,0,0,0,34,1279,1278,1277,0,0,0,0,34,1281,1283,1282,0,0,0,0,34,1281,1280,1283,0,0,0,0,34,1285,1287,1286,0,0,0,0,34,1285,1284,1287,0,0,0,0,34,1289,1291,1290,0,0,0,0,34,1289,1288,1291,0,0,0,0,34,1293,1295,1294,0,0,0,0,34,1293,1292,1295,0,0,0,0,34,1297,1299,1298,0,1,1,0,34,1297,1296,1299,0,1,0,1,34,1301,1303,1302,0,0,0,1,34,1301,1300,1303,0,0,0,0,34,1305,1307,1306,0,1,1,0,34,1305,1304,1307,0,1,0,1,34,1309,1311,1310,0,0,0,0,34,1309,1308,1311,0,0,0,0,34,1313,1315,1314,0,0,0,0,34,1313,1312,1315,0,0,0,0,34,1317,1319,1318,0,1,1,0,34,1317,1316,1319,0,1,0,1,34,1321,1323,1322,0,0,0,0,34,1321,1320,1323,0,0,0,0,34,1325,1327,1326,0,0,0,0,34,1325,1324,1327,0,0,0,0,34,1329,1331,1330,0,0,0,0,34,1329,1328,1331,0,0,0,0,34,1333,1335,1334,0,0,0,1,34,1333,1332,1335,0,0,0,0,34,1337,1339,1338,0,0,0,0,34,1337,1336,1339,0,0,0,0,34,1341,1343,1342,0,0,0,0,34,1341,1340,1343,0,0,0,0,34,1345,1347,1346,0,0,0,0,34,1345,1344,1347,0,0,0,0,34,1351,1349,1348,0,0,0,0,34,1351,1350,1349,0,0,0,0,34,1355,1353,1352,0,0,0,0,34,1355,1354,1353,0,0,0,0,34,1357,1359,1358,0,0,0,0,34,1357,1356,1359,0,0,0,0,34,1361,1363,1362,0,0,0,0,34,1361,1360,1363,0,0,0,0,34,1365,1367,1366,0,1,1,0,34,1365,1364,1367,0,1,0,1,34,1369,1371,1370,0,0,0,0,34,1369,1368,1371,0,0,0,0,34,1373,1375,1374,0,1,1,0,34,1373,1372,1375,0,1,0,1,34,1377,1379,1378,0,0,0,0,34,1377,1376,1379,0,0,0,0,34,1381,1383,1382,0,0,0,0,34,1381,1380,1383,0,0,0,0,34,1385,1387,1386,0,0,0,0,34,1385,1384,1387,0,0,0,0,34,1389,1391,1390,0,0,0,0,34,1389,1388,1391,0,0,0,0,34,1395,1393,1392,0,0,0,0,34,1395,1394,1393,0,0,0,0,34,1397,1399,1398,0,0,0,0,34,1397,1396,1399,0,0,0,0,34,1401,1403,1402,0,0,0,0,34,1401,1400,1403,0,0,0,0,34,1405,1407,1406,0,1,0,1,34,1405,1404,1407,0,1,0,0,34,1409,1411,1410,0,0,0,0,34,1409,1408,1411,0,0,0,0,34,1413,1415,1414,0,0,0,0,34,1413,1412,1415,0,0,0,0,34,1417,1419,1418,0,0,0,0,34,1417,1416,1419,0,0,0,0,34,1421,1423,1422,0,0,0,0,34,1421,1420,1423,0,0,0,0,34,1425,1427,1426,0,0,0,0,34,1425,1424,1427,0,0,0,0,34,1429,1431,1430,0,0,0,0,34,1429,1428,1431,0,0,0,0,34,1433,1435,1434,0,0,0,0,34,1433,1432,1435,0,0,0,0,34,1437,1439,1438,0,0,0,0,34,1437,1436,1439,0,0,0,0,34,1441,1443,1442,0,0,0,0,34,1441,1440,1443,0,0,0,0,34,1445,1447,1446,0,0,0,0,34,1445,1444,1447,0,0,0,0,34,1449,1451,1450,0,1,1,0,34,1449,1448,1451,0,1,0,1,34,1453,1455,1454,0,0,0,0,34,1453,1452,1455,0,0,0,0,34,1457,1459,1458,0,0,0,0,34,1457,1456,1459,0,0,0,0,34,1461,1463,1462,0,1,1,0,34,1461,1460,1463,0,1,0,1,34,1465,1467,1466,0,0,0,0,34,1465,1464,1467,0,0,0,0,34,1469,1471,1470,0,0,0,0,34,1469,1468,1471,0,0,0,0,34,1473,1475,1474,0,0,0,0,34,1473,1472,1475,0,0,0,0,34,1477,1479,1478,0,0,0,0,34,1477,1476,1479,0,0,0,0,34,1481,1483,1482,0,1,1,0,34,1481,1480,1483,0,1,0,1,34,1485,1487,1486,0,0,0,0,34,1485,1484,1487,0,0,0,0,34,1489,1491,1490,0,0,0,0,34,1489,1488,1491,0,0,0,0,34,1493,1495,1494,0,0,0,0,34,1493,1492,1495,0,0,0,0,34,1497,1499,1498,0,0,0,0,34,1497,1496,1499,0,0,0,0,34,1501,1503,1502,0,0,0,0,34,1501,1500,1503,0,0,0,0,34,1505,1507,1506,0,0,0,0,34,1505,1504,1507,0,0,0,0,34,1509,1511,1510,0,0,0,0,34,1509,1508,1511,0,0,0,0,34,1513,1515,1514,0,0,0,0,34,1513,1512,1515,0,0,0,0,34,1517,1519,1518,0,0,0,0,34,1517,1516,1519,0,0,0,0,34,1521,1523,1522,0,0,0,0,34,1521,1520,1523,0,0,0,0,34,1525,1527,1526,0,0,0,0,34,1525,1524,1527,0,0,0,0,34,1529,1531,1530,0,0,0,0,34,1529,1528,1531,0,0,0,0,34,1533,1535,1534,0,0,0,0,34,1533,1532,1535,0,0,0,0,34,1537,1539,1538,0,0,0,0,34,1537,1536,1539,0,0,0,0,34,1541,1543,1542,0,1,1,0,34,1541,1540,1543,0,1,0,1,34,1545,1547,1546,0,0,0,0,34,1545,1544,1547,0,0,0,0,34,1549,1551,1550,0,0,0,0,34,1549,1548,1551,0,0,0,0,34,1553,1555,1554,0,0,0,0,34,1553,1552,1555,0,0,0,0,34,1557,1559,1558,0,0,0,0,34,1557,1556,1559,0,0,0,0,34,1563,1561,1560,0,0,0,0,34,1563,1562,1561,0,0,0,0,34,1565,1567,1566,0,1,0,1,34,1565,1564,1567,0,1,0,0,34,1569,1571,1570,0,0,0,0,34,1569,1568,1571,0,0,0,0,34,1573,1575,1574,0,1,1,0,34,1573,1572,1575,0,1,0,1,34,1577,1579,1578,0,0,0,0,34,1577,1576,1579,0,0,0,0,34,1581,1583,1582,0,0,0,0,34,1581,1580,1583,0,0,0,0,34,1585,1587,1586,0,1,1,0,34,1585,1584,1587,0,1,0,1,34,1589,1591,1590,0,0,0,0,34,1589,1588,1591,0,0,0,0,34,1593,1595,1594,0,0,0,0,34,1593,1592,1595,0,0,0,0,34,1597,1599,1598,0,0,0,0,34,1597,1596,1599,0,0,0,0,34,1601,1603,1602,0,0,0,0,34,1601,1600,1603,0,0,0,0,34,1605,1607,1606,0,0,0,0,34,1605,1604,1607,0,0,0,0,34,1609,1611,1610,0,0,0,0,34,1609,1608,1611,0,0,0,0,34,1613,1615,1614,0,0,0,0,34,1613,1612,1615,0,0,0,0,34,1617,1619,1618,0,0,0,0,34,1617,1616,1619,0,0,0,0,34,1621,1623,1622,0,0,0,0,34,1621,1620,1623,0,0,0,0,34,1625,1627,1626,0,0,0,0,34,1625,1624,1627,0,0,0,0,34,1629,1631,1630,0,0,0,0,34,1629,1628,1631,0,0,0,0,34,1633,1635,1634,0,0,0,0,34,1633,1632,1635,0,0,0,0,34,1637,1639,1638,0,0,0,0,34,1637,1636,1639,0,0,0,0,34,1641,1643,1642,0,0,0,0,34,1641,1640,1643,0,0,0,0,34,1645,1647,1646,0,0,0,0,34,1645,1644,1647,0,0,0,0,34,1649,1651,1650,0,0,1,0,34,1649,1648,1651,0,0,0,1,34,1653,1655,1654,0,0,0,0,34,1653,1652,1655,0,0,0,0,34,1657,1659,1658,0,0,0,0,34,1657,1656,1659,0,0,0,0,34,1661,1663,1662,0,0,0,0,34,1661,1660,1663,0,0,0,0,34,1665,1667,1666,0,0,0,0,34,1665,1664,1667,0,0,0,0,34,1669,1671,1670,0,0,0,0,34,1669,1668,1671,0,0,0,0,34,1673,1675,1674,0,0,0,0,34,1673,1672,1675,0,0,0,0,34,1677,1679,1678,0,0,0,0,34,1677,1676,1679,0,0,0,0,34,1681,1683,1682,0,0,0,0,34,1681,1680,1683,0,0,0,0,34,1685,1687,1686,0,0,0,0,34,1685,1684,1687,0,0,0,0,34,1689,1691,1690,0,0,0,0,34,1689,1688,1691,0,0,0,0,34,1693,1695,1694,0,0,0,0,34,1693,1692,1695,0,0,0,0,34,1697,1699,1698,0,0,0,0,34,1697,1696,1699,0,0,0,0,34,1701,1703,1702,0,0,0,0,34,1701,1700,1703,0,0,0,0,34,1705,1707,1706,0,0,0,0,34,1705,1704,1707,0,0,0,0,34,1709,1711,1710,0,0,0,0,34,1709,1708,1711,0,0,0,0,34,1713,1715,1714,0,0,0,0,34,1713,1712,1715,0,0,0,0,34,1717,1719,1718,0,0,0,0,34,1717,1716,1719,0,0,0,0,34,1721,1723,1722,0,0,0,0,34,1721,1720,1723,0,0,0,0,34,1725,1727,1726,0,0,0,0,34,1725,1724,1727,0,0,0,0,34,1729,1731,1730,0,0,0,0,34,1729,1728,1731,0,0,0,0,34,1733,1735,1734,0,0,0,0,34,1733,1732,1735,0,0,0,0,34,1737,1739,1738,0,0,0,0,34,1737,1736,1739,0,0,0,0,34,1741,1743,1742,0,0,0,0,34,1741,1740,1743,0,0,0,0,34,1745,1747,1746,0,0,0,0,34,1745,1744,1747,0,0,0,0,34,1749,1751,1750,0,0,0,0,34,1749,1748,1751,0,0,0,0,34,1753,1755,1754,0,0,0,0,34,1753,1752,1755,0,0,0,0,34,1757,1759,1758,0,0,0,0,34,1757,1756,1759,0,0,0,0,34,1761,1763,1762,0,0,0,0,34,1761,1760,1763,0,0,0,0,34,1,3,2,0,1,0,0,34,1,0,3,0,1,1,0,34,1771,1769,1770,0,2,2,2,34,1768,1769,1771,0,3,2,2,34,1775,1773,1774,0,2,2,2,34,1772,1773,1775,0,2,2,2,34,1779,1777,1778,0,2,2,2,34,1776,1777,1779,0,2,2,2,34,1783,1781,1782,0,2,2,2,34,1780,1781,1783,0,2,2,2,34,1787,1785,1786,0,2,2,2,34,1784,1785,1787,0,2,2,2,34,1791,1789,1790,0,2,2,2,34,1788,1789,1791,0,2,2,2,34,1795,1793,1794,0,2,2,2,34,1792,1793,1795,0,2,2,2,34,1797,1799,1796,0,2,2,2,34,1798,1799,1797,0,2,2,2,34,1801,1803,1800,0,2,2,2,34,1802,1803,1801,0,2,2,2,34,1807,1805,1806,0,2,2,2,34,1804,1805,1807,0,2,2,2,34,1811,1809,1810,0,2,2,2,34,1808,1809,1811,0,2,2,2,34,1815,1813,1814,0,2,2,2,34,1812,1813,1815,0,2,2,2,34,1817,1819,1816,0,2,2,2,34,1818,1819,1817,0,2,2,2,34,1821,1823,1820,0,2,2,2,34,1822,1823,1821,0,2,2,2,34,1825,1827,1824,0,2,2,2,34,1826,1827,1825,0,2,2,2,34,1831,1829,1830,0,2,2,2,34,1828,1829,1831,0,2,2,2,34,1835,1833,1834,0,2,2,2,34,1832,1833,1835,0,2,2,2,34,1839,1837,1838,0,2,2,2,34,1836,1837,1839,0,2,2,2,34,1843,1841,1842,0,2,2,2,34,1840,1841,1843,0,2,2,2,34,1845,1847,1844,0,2,2,2,34,1846,1847,1845,0,2,2,2,34,1849,1851,1848,0,2,2,2,34,1850,1851,1849,0,2,2,2,34,1853,1855,1852,0,2,2,2,34,1854,1855,1853,0,2,2,2,34,1859,1857,1858,0,2,2,2,34,1856,1857,1859,0,2,2,2,34,1863,1861,1862,0,2,2,2,34,1860,1861,1863,0,2,2,2,34,1867,1865,1866,0,2,2,2,34,1864,1865,1867,0,2,2,2,34,1869,1871,1868,0,2,2,2,34,1870,1871,1869,0,2,2,2,34,1873,1875,1872,0,2,2,2,34,1874,1875,1873,0,2,2,2,34,1879,1877,1878,0,2,3,2,34,1876,1877,1879,0,2,3,2,34,1883,1881,1882,0,2,2,2,34,1880,1881,1883,0,2,2,2,34,1887,1885,1886,0,2,2,2,34,1884,1885,1887,0,2,2,2,34,1889,1891,1888,0,2,2,2,34,1890,1891,1889,0,2,2,2,34,1893,1895,1892,0,3,2,2,34,1894,1895,1893,0,2,2,3,34,1899,1897,1898,0,3,3,3,34,1896,1897,1899,0,2,3,3,34,1901,1903,1900,0,2,2,2,34,1902,1903,1901,0,2,2,2,34,1905,1907,1904,0,2,2,2,34,1906,1907,1905,0,2,2,2,34,1909,1911,1908,0,2,2,2,34,1910,1911,1909,0,2,2,2,34,1913,1915,1912,0,2,2,2,34,1914,1915,1913,0,2,2,2,34,1919,1917,1918,0,2,2,2,34,1916,1917,1919,0,2,2,2,34,1921,1923,1920,0,2,2,2,34,1922,1923,1921,0,2,2,2,34,1925,1927,1924,0,2,2,2,34,1926,1927,1925,0,2,2,2,34,1929,1931,1928,0,2,2,2,34,1930,1931,1929,0,2,2,2,34,1935,1933,1934,0,2,2,2,34,1932,1933,1935,0,2,2,2,34,1939,1937,1938,0,2,2,2,34,1936,1937,1939,0,2,2,2,34,1943,1941,1942,0,2,2,2,34,1940,1941,1943,0,2,2,2,34,1947,1945,1946,0,2,2,2,34,1944,1945,1947,0,2,2,2,34,1951,1949,1950,0,2,2,2,34,1948,1949,1951,0,2,2,2,34,1955,1953,1954,0,2,2,2,34,1952,1953,1955,0,2,2,2,34,1959,1957,1958,0,2,2,2,34,1956,1957,1959,0,2,2,2,34,1963,1961,1962,0,2,2,2,34,1960,1961,1963,0,2,2,2,34,1967,1965,1966,0,3,3,2,34,1964,1965,1967,0,2,3,3,34,1971,1969,1970,0,2,2,2,34,1968,1969,1971,0,2,2,2,34,1975,1973,1974,0,2,2,2,34,1972,1973,1975,0,2,2,2,34,1979,1977,1978,0,2,2,2,34,1976,1977,1979,0,2,2,2,34,1983,1981,1982,0,2,2,2,34,1980,1981,1983,0,2,2,2,34,1987,1985,1986,0,2,2,2,34,1984,1985,1987,0,2,2,2,34,1989,1991,1988,0,2,2,2,34,1990,1991,1989,0,2,2,2,34,1993,1995,1992,0,2,2,2,34,1994,1995,1993,0,2,2,2,34,1999,1997,1998,0,2,2,2,34,1996,1997,1999,0,2,2,2,34,2003,2001,2002,0,2,2,2,34,2000,2001,2003,0,2,2,2,34,2007,2005,2006,0,2,2,2,34,2004,2005,2007,0,2,2,2,34,2011,2009,2010,0,2,2,2,34,2008,2009,2011,0,2,2,2,34,2015,2013,2014,0,2,2,2,34,2012,2013,2015,0,2,2,2,34,2019,2017,2018,0,2,2,2,34,2016,2017,2019,0,2,2,2,34,2023,2021,2022,0,2,2,2,34,2020,2021,2023,0,2,2,2,34,2025,2027,2024,0,2,2,2,34,2026,2027,2025,0,2,2,2,34,2029,2031,2028,0,2,2,2,34,2030,2031,2029,0,2,2,2,34,2035,2033,2034,0,2,2,2,34,2032,2033,2035,0,2,2,2,34,2039,2037,2038,0,3,3,2,34,2036,2037,2039,0,2,3,3,34,2043,2041,2042,0,3,3,2,34,2040,2041,2043,0,2,3,3,34,2047,2045,2046,0,2,2,2,34,2044,2045,2047,0,2,2,2,34,2051,2049,2050,0,3,3,2,34,2048,2049,2051,0,2,3,3,34,2055,2053,2054,0,2,2,2,34,2052,2053,2055,0,2,2,2,34,2059,2057,2058,0,2,2,2,34,2056,2057,2059,0,2,2,2,34,2063,2061,2062,0,2,2,2,34,2060,2061,2063,0,2,2,2,34,2067,2065,2066,0,2,2,2,34,2064,2065,2067,0,2,2,2,34,2071,2069,2070,0,2,2,2,34,2068,2069,2071,0,2,2,2,34,2075,2073,2074,0,2,2,2,34,2072,2073,2075,0,2,2,2,34,2079,2077,2078,0,2,2,2,34,2076,2077,2079,0,2,2,2,34,2083,2081,2082,0,3,3,2,34,2080,2081,2083,0,2,3,3,34,2087,2085,2086,0,2,2,2,34,2084,2085,2087,0,2,2,2,34,2091,2089,2090,0,3,3,2,34,2088,2089,2091,0,2,3,3,34,2095,2093,2094,0,3,3,2,34,2092,2093,2095,0,2,3,3,34,2099,2097,2098,0,3,3,2,34,2096,2097,2099,0,2,3,3,34,2103,2101,2102,0,2,2,2,34,2100,2101,2103,0,2,2,2,34,2107,2105,2106,0,3,3,2,34,2104,2105,2107,0,2,3,3,34,2111,2109,2110,0,3,3,2,34,2108,2109,2111,0,2,3,3,34,2115,2113,2114,0,2,2,2,34,2112,2113,2115,0,2,2,2,34,2119,2117,2118,0,2,2,2,34,2116,2117,2119,0,2,2,2,34,2121,2123,2120,0,2,2,2,34,2122,2123,2121,0,2,2,2,34,2125,2127,2124,0,2,2,2,34,2126,2127,2125,0,2,2,2,34,2129,2131,2128,0,2,2,2,34,2130,2131,2129,0,2,2,2,34,2135,2133,2134,0,2,2,2,34,2132,2133,2135,0,2,2,2,34,2139,2137,2138,0,2,2,2,34,2136,2137,2139,0,2,2,2,34,2143,2141,2142,0,3,2,3,34,2140,2141,2143,0,3,2,3,34,2147,2145,2146,0,2,2,2,34,2144,2145,2147,0,2,2,2,34,2151,2149,2150,0,3,3,2,34,2148,2149,2151,0,2,3,3,34,2155,2153,2154,0,2,2,2,34,2152,2153,2155,0,2,2,2,34,2159,2157,2158,0,3,3,2,34,2156,2157,2159,0,2,3,3,34,2163,2161,2162,0,2,2,2,34,2160,2161,2163,0,2,2,2,34,2167,2165,2166,0,2,2,2,34,2164,2165,2167,0,2,2,2,34,2171,2169,2170,0,2,2,2,34,2168,2169,2171,0,2,2,2,34,2175,2173,2174,0,2,2,2,34,2172,2173,2175,0,2,2,2,34,2179,2177,2178,0,2,2,2,34,2176,2177,2179,0,2,2,2,34,2181,2183,2180,0,2,2,2,34,2182,2183,2181,0,2,2,2,34,2185,2187,2184,0,2,2,2,34,2186,2187,2185,0,2,2,2,34,2189,2191,2188,0,2,2,2,34,2190,2191,2189,0,2,2,2,34,2193,2195,2192,0,2,2,2,34,2194,2195,2193,0,2,2,2,34,2197,2199,2196,0,2,2,2,34,2198,2199,2197,0,2,2,2,34,2203,2201,2202,0,2,2,2,34,2200,2201,2203,0,2,2,2,34,2207,2205,2206,0,2,2,2,34,2204,2205,2207,0,2,2,2,34,2211,2209,2210,0,2,2,2,34,2208,2209,2211,0,2,2,2,34,2215,2213,2214,0,2,2,2,34,2212,2213,2215,0,2,2,2,34,2219,2217,2218,0,2,2,2,34,2216,2217,2219,0,2,2,2,34,2223,2221,2222,0,2,2,2,34,2220,2221,2223,0,2,2,2,34,2227,2225,2226,0,2,2,2,34,2224,2225,2227,0,2,2,2,34,2231,2229,2230,0,2,2,2,34,2228,2229,2231,0,2,2,2,34,2235,2233,2234,0,2,2,2,34,2232,2233,2235,0,2,2,2,34,2237,2239,2236,0,2,2,2,34,2238,2239,2237,0,2,2,2,34,2241,2243,2240,0,2,2,2,34,2242,2243,2241,0,2,2,2,34,2245,2247,2244,0,2,2,2,34,2246,2247,2245,0,2,2,2,34,2251,2249,2250,0,2,2,2,34,2248,2249,2251,0,2,2,2,34,2255,2253,2254,0,2,2,2,34,2252,2253,2255,0,2,2,2,34,2259,2257,2258,0,2,2,2,34,2256,2257,2259,0,2,2,2,34,2263,2261,2262,0,2,3,3,34,2260,2261,2263,0,3,3,2,34,2267,2265,2266,0,3,3,2,34,2264,2265,2267,0,2,3,3,34,2271,2269,2270,0,2,3,2,34,2268,2269,2271,0,2,3,2,34,2275,2273,2274,0,3,3,2,34,2272,2273,2275,0,2,3,3,34,2279,2277,2278,0,2,2,2,34,2276,2277,2279,0,2,2,2,34,2283,2281,2282,0,2,2,2,34,2280,2281,2283,0,2,2,2,34,2287,2285,2286,0,2,2,2,34,2284,2285,2287,0,2,2,2,34,2291,2289,2290,0,2,2,2,34,2288,2289,2291,0,2,2,2,34,2295,2293,2294,0,2,2,2,34,2292,2293,2295,0,2,2,2,34,2299,2297,2298,0,2,2,2,34,2296,2297,2299,0,2,2,2,34,2303,2301,2302,0,2,2,2,34,2300,2301,2303,0,2,2,2,34,2305,2307,2304,0,2,2,2,34,2306,2307,2305,0,2,2,2,34,2309,2311,2308,0,2,2,2,34,2310,2311,2309,0,2,2,2,34,2317,2313,2314,0,3,2,2,34,2315,2317,2314,0,2,3,2,34,2312,2313,2317,0,3,2,3,34,2315,2316,2317,0,2,2,3,34,2321,2319,2320,0,2,2,2,34,2318,2319,2321,0,2,2,2,34,2325,2323,2324,0,2,2,2,34,2322,2323,2325,0,2,2,2,34,2329,2327,2328,0,2,2,2,34,2326,2327,2329,0,3,2,2,34,2333,2331,2332,0,2,2,2,34,2330,2331,2333,0,2,2,2,34,2337,2335,2336,0,2,2,2,34,2334,2335,2337,0,2,2,2,34,2341,2339,2340,0,2,2,2,34,2338,2339,2341,0,2,2,2,34,2345,2343,2344,0,2,2,2,34,2342,2343,2345,0,2,2,2,34,2349,2347,2348,0,2,2,2,34,2346,2347,2349,0,3,2,2,34,2353,2351,2352,0,3,2,3,34,2350,2351,2353,0,2,2,3,34,2357,2355,2356,0,2,2,2,34,2354,2355,2357,0,2,2,2,34,2361,2359,2360,0,2,2,2,34,2358,2359,2361,0,2,2,2,34,2365,2363,2364,0,2,2,2,34,2362,2363,2365,0,2,2,2,34,2369,2367,2368,0,2,2,2,34,2366,2367,2369,0,2,2,2,34,2373,2371,2372,0,2,2,2,34,2370,2371,2373,0,2,2,2,34,2377,2375,2376,0,2,2,2,34,2374,2375,2377,0,2,2,2,34,2379,2381,2378,0,2,2,2,34,2380,2381,2379,0,2,2,2,34,2385,2383,2384,0,3,3,2,34,2382,2383,2385,0,2,3,3,34,2389,2387,2388,0,2,2,2,34,2386,2387,2389,0,2,2,2,34,2393,2391,2392,0,3,3,2,34,2390,2391,2393,0,2,3,3,34,2397,2395,2396,0,2,2,2,34,2394,2395,2397,0,2,2,2,34,2401,2399,2400,0,2,2,2,34,2398,2399,2401,0,2,2,2,34,2405,2403,2404,0,2,2,2,34,2402,2403,2405,0,2,2,2,34,2409,2407,2408,0,2,2,2,34,2406,2407,2409,0,2,2,2,34,2413,2411,2412,0,2,2,2,34,2410,2411,2413,0,2,2,2,34,2417,2415,2416,0,2,2,2,34,2414,2415,2417,0,2,2,2,34,2421,2419,2420,0,3,3,2,34,2418,2419,2421,0,2,3,3,34,2425,2423,2424,0,2,2,2,34,2422,2423,2425,0,2,2,2,34,2429,2427,2428,0,2,2,2,34,2426,2427,2429,0,2,2,2,34,2433,2431,2432,0,2,2,2,34,2430,2431,2433,0,2,2,2,34,2437,2435,2436,0,2,2,2,34,2434,2435,2437,0,2,2,2,34,2441,2439,2440,0,2,2,2,34,2438,2439,2441,0,2,2,2,34,2445,2443,2444,0,2,2,2,34,2442,2443,2445,0,2,2,2,34,2449,2447,2448,0,2,2,2,34,2446,2447,2449,0,2,2,2,34,2453,2451,2452,0,2,2,2,34,2450,2451,2453,0,2,2,2,34,2457,2455,2456,0,2,2,2,34,2454,2455,2457,0,2,2,2,34,2461,2459,2460,0,2,2,2,34,2458,2459,2461,0,2,2,2,34,2465,2463,2464,0,2,2,2,34,2462,2463,2465,0,2,2,2,34,2467,2469,2466,0,2,2,2,34,2468,2469,2467,0,2,2,2,34,2473,2471,2472,0,2,2,2,34,2470,2471,2473,0,2,2,2,34,2477,2475,2476,0,2,2,2,34,2474,2475,2477,0,2,2,2,34,2481,2479,2480,0,2,2,2,34,2478,2479,2481,0,2,2,2,34,2485,2483,2484,0,2,2,2,34,2482,2483,2485,0,2,2,2,34,2489,2487,2488,0,2,2,2,34,2486,2487,2489,0,2,2,2,34,2493,2491,2492,0,2,2,2,34,2490,2491,2493,0,3,2,2,34,2497,2495,2496,0,2,2,2,34,2494,2495,2497,0,2,2,2,34,2501,2499,2500,0,3,2,3,34,2498,2499,2501,0,2,2,3,34,2505,2503,2504,0,2,2,2,34,2502,2503,2505,0,2,2,2,34,2507,2509,2506,0,2,2,2,34,2508,2509,2507,0,2,2,2,34,2511,2513,2510,0,2,2,2,34,2512,2513,2511,0,2,2,2,34,2517,2515,2516,0,2,2,2,34,2514,2515,2517,0,2,2,2,34,2521,2519,2520,0,2,2,2,34,2518,2519,2521,0,2,2,2,34,2525,2523,2524,0,2,2,2,34,2522,2523,2525,0,2,2,2,34,2529,2527,2528,0,2,2,3,34,2526,2527,2529,0,2,2,2,34,2533,2531,2532,0,2,2,2,34,2530,2531,2533,0,2,2,2,34,2537,2535,2536,0,2,2,2,34,2534,2535,2537,0,2,2,2,34,2541,2539,2540,0,2,2,2,34,2538,2539,2541,0,2,2,2,34,2545,2543,2544,0,2,2,2,34,2542,2543,2545,0,2,2,2,34,2549,2547,2548,0,2,2,2,34,2546,2547,2549,0,2,2,2,34,2553,2551,2552,0,2,2,2,34,2550,2551,2553,0,2,2,2,34,2557,2555,2556,0,2,2,2,34,2554,2555,2557,0,2,2,2,34,2561,2559,2560,0,2,2,2,34,2558,2559,2561,0,2,2,2,34,2565,2563,2564,0,2,2,2,34,2562,2563,2565,0,2,2,2,34,2569,2567,2568,0,2,2,2,34,2566,2567,2569,0,2,2,2,34,2573,2571,2572,0,2,2,2,34,2570,2571,2573,0,2,2,2,34,2577,2575,2576,0,2,2,2,34,2574,2575,2577,0,2,2,2,34,2581,2579,2580,0,2,2,2,34,2578,2579,2581,0,2,2,2,34,2585,2583,2584,0,2,2,2,34,2582,2583,2585,0,2,2,2,34,2589,2587,2588,0,2,2,2,34,2586,2587,2589,0,2,2,2,34,2593,2591,2592,0,2,2,2,34,2590,2591,2593,0,2,2,2,34,2597,2595,2596,0,3,3,2,34,2594,2595,2597,0,2,3,3,34,2601,2599,2600,0,2,2,2,34,2598,2599,2601,0,2,2,2,34,2605,2603,2604,0,2,2,2,34,2602,2603,2605,0,2,2,2,34,2609,2607,2608,0,2,2,2,34,2606,2607,2609,0,2,2,2,34,2613,2611,2612,0,2,2,2,34,2610,2611,2613,0,2,2,2,34,2617,2615,2616,0,2,2,2,34,2614,2615,2617,0,2,2,2,34,2621,2619,2620,0,2,2,2,34,2618,2619,2621,0,2,2,2,34,2625,2623,2624,0,2,2,2,34,2622,2623,2625,0,2,2,2,34,2629,2627,2628,0,3,3,2,34,2626,2627,2629,0,2,3,3,34,2633,2631,2632,0,2,2,2,34,2630,2631,2633,0,2,2,2,34,2637,2635,2636,0,2,2,2,34,2634,2635,2637,0,2,2,2,34,2641,2639,2640,0,2,2,2,34,2638,2639,2641,0,2,2,2,34,2645,2643,2644,0,2,2,2,34,2642,2643,2645,0,2,2,2,34,2649,2647,2648,0,2,2,2,34,2646,2647,2649,0,2,2,2,34,2653,2651,2652,0,2,2,2,34,2650,2651,2653,0,2,2,2,34,2657,2655,2656,0,2,2,2,34,2654,2655,2657,0,2,2,2,34,2661,2659,2660,0,2,2,2,34,2658,2659,2661,0,2,2,2,34,2665,2663,2664,0,2,2,2,34,2662,2663,2665,0,2,2,2,34,2669,2667,2668,0,2,2,2,34,2666,2667,2669,0,2,2,2,34,2673,2671,2672,0,2,2,2,34,2670,2671,2673,0,2,2,2,34,2677,2675,2676,0,2,2,2,34,2674,2675,2677,0,2,2,2,34,2681,2679,2680,0,2,2,2,34,2678,2679,2681,0,2,2,2,34,2685,2683,2684,0,2,2,2,34,2682,2683,2685,0,2,2,2,34,2689,2687,2688,0,2,2,2,34,2686,2687,2689,0,2,2,2,34,2693,2691,2692,0,2,2,2,34,2690,2691,2693,0,2,2,2,34,2697,2695,2696,0,2,2,2,34,2694,2695,2697,0,2,2,2,34,2701,2699,2700,0,2,2,2,34,2698,2699,2701,0,2,2,2,34,2705,2703,2704,0,2,2,2,34,2702,2703,2705,0,2,2,2,34,2709,2707,2708,0,2,2,2,34,2706,2707,2709,0,2,2,2,34,2713,2711,2712,0,2,2,2,34,2710,2711,2713,0,2,2,2,34,2717,2715,2716,0,2,2,2,34,2714,2715,2717,0,2,2,2,34,2721,2719,2720,0,2,2,2,34,2718,2719,2721,0,2,2,2,34,2725,2723,2724,0,2,2,2,34,2722,2723,2725,0,2,2,2,34,2729,2727,2728,0,2,2,2,34,2726,2727,2729,0,2,2,2,34,2733,2731,2732,0,2,2,2,34,2730,2731,2733,0,2,2,2,34,2737,2735,2736,0,2,2,2,34,2734,2735,2737,0,2,2,2,34,2741,2739,2740,0,2,2,2,34,2738,2739,2741,0,2,2,2,34,2745,2743,2744,0,3,3,2,34,2742,2743,2745,0,2,3,3,34,2749,2747,2748,0,2,2,2,34,2746,2747,2749,0,2,2,2,34,2753,2751,2752,0,2,2,2,34,2750,2751,2753,0,2,2,2,34,2757,2755,2756,0,2,2,2,34,2754,2755,2757,0,2,2,2,34,2761,2759,2760,0,3,3,2,34,2758,2759,2761,0,2,3,3,34,2765,2763,2764,0,2,2,2,34,2762,2763,2765,0,2,2,2,34,2769,2767,2768,0,2,2,2,34,2766,2767,2769,0,2,2,2,34,2773,2771,2772,0,2,2,2,34,2770,2771,2773,0,2,2,2,34,2777,2775,2776,0,3,3,2,34,2774,2775,2777,0,2,3,3,34,2781,2779,2780,0,2,2,2,34,2778,2779,2781,0,2,2,2,34,2785,2783,2784,0,2,2,2,34,2782,2783,2785,0,2,2,2,34,2789,2787,2788,0,2,2,2,34,2786,2787,2789,0,2,2,2,34,2793,2791,2792,0,2,2,2,34,2790,2791,2793,0,2,2,2,34,2797,2795,2796,0,2,2,2,34,2794,2795,2797,0,2,2,2,34,2801,2799,2800,0,2,2,2,34,2798,2799,2801,0,2,2,2,34,2805,2803,2804,0,2,2,2,34,2802,2803,2805,0,2,2,2,34,2809,2807,2808,0,2,2,2,34,2806,2807,2809,0,2,2,2,34,2813,2811,2812,0,2,2,2,34,2810,2811,2813,0,2,2,2,34,2817,2815,2816,0,2,2,2,34,2814,2815,2817,0,2,2,2,34,2821,2819,2820,0,2,2,2,34,2818,2819,2821,0,2,2,2,34,2825,2823,2824,0,2,2,2,34,2822,2823,2825,0,2,2,2,34,2829,2827,2828,0,2,2,2,34,2826,2827,2829,0,2,2,2,34,2833,2831,2832,0,2,2,2,34,2830,2831,2833,0,2,2,2,34,2837,2835,2836,0,2,2,2,34,2834,2835,2837,0,2,2,2,34,2841,2839,2840,0,2,2,2,34,2838,2839,2841,0,2,2,2,34,2845,2843,2844,0,2,2,2,34,2842,2843,2845,0,2,2,2,34,2849,2847,2848,0,2,2,2,34,2846,2847,2849,0,2,2,2,34,2853,2851,2852,0,3,3,2,34,2850,2851,2853,0,2,3,3,34,2857,2855,2856,0,3,3,2,34,2854,2855,2857,0,2,3,3,34,2861,2859,2860,0,2,2,2,34,2858,2859,2861,0,2,2,2,34,2865,2863,2864,0,2,2,2,34,2862,2863,2865,0,2,2,2,34,2869,2867,2868,0,2,2,2,34,2866,2867,2869,0,2,2,2,34,2873,2871,2872,0,3,3,2,34,2870,2871,2873,0,2,3,3,34,2877,2875,2876,0,2,2,2,34,2874,2875,2877,0,2,2,2,34,2881,2879,2880,0,2,2,2,34,2878,2879,2881,0,2,2,2,34,2885,2883,2884,0,2,2,2,34,2882,2883,2885,0,2,2,2,34,2889,2887,2888,0,2,2,2,34,2886,2887,2889,0,2,2,2,34,2893,2891,2892,0,2,2,2,34,2890,2891,2893,0,2,2,2,34,2897,2895,2896,0,2,2,2,34,2894,2895,2897,0,2,2,2,34,2901,2899,2900,0,2,2,2,34,2898,2899,2901,0,2,2,2,34,2905,2903,2904,0,2,2,2,34,2902,2903,2905,0,2,2,2,34,2909,2907,2908,0,3,3,2,34,2906,2907,2909,0,2,3,3,34,2913,2911,2912,0,2,2,2,34,2910,2911,2913,0,2,2,2,34,2917,2915,2916,0,3,3,2,34,2914,2915,2917,0,2,3,3,34,2921,2919,2920,0,2,2,2,34,2918,2919,2921,0,2,2,2,34,2925,2923,2924,0,2,2,2,34,2922,2923,2925,0,2,2,2,34,2929,2927,2928,0,2,3,2,34,2926,2927,2929,0,3,3,2,34,2933,2931,2932,0,2,2,2,34,2930,2931,2933,0,2,2,2,34,2937,2935,2936,0,3,3,2,34,2934,2935,2937,0,2,3,3,34,2941,2939,2940,0,2,2,2,34,2938,2939,2941,0,2,2,2,34,2945,2943,2944,0,3,3,2,34,2942,2943,2945,0,2,3,3,34,2949,2947,2948,0,2,2,2,34,2946,2947,2949,0,2,2,2,34,2953,2951,2952,0,2,2,2,34,2950,2951,2953,0,2,2,2,34,2957,2955,2956,0,2,2,2,34,2954,2955,2957,0,2,2,2,34,2961,2959,2960,0,2,2,2,34,2958,2959,2961,0,2,2,2,34,2965,2963,2964,0,2,2,2,34,2962,2963,2965,0,2,2,2,34,2969,2967,2968,0,2,2,2,34,2966,2967,2969,0,2,2,2,34,2973,2971,2972,0,2,2,2,34,2970,2971,2973,0,2,2,2,34,2979,2975,2976,0,2,2,2,34,2977,2979,2976,0,2,2,2,34,2974,2975,2979,0,3,2,2,34,2977,2978,2979,0,2,2,2,34,2983,2981,2982,0,2,2,2,34,2980,2981,2983,0,2,2,2,34,2987,2985,2986,0,2,2,2,34,2984,2985,2987,0,2,2,2,34,2991,2989,2990,0,2,2,2,34,2988,2989,2991,0,3,2,2,34,2995,2993,2994,0,2,2,2,34,2992,2993,2995,0,2,2,2,34,2999,2997,2998,0,2,2,2,34,2996,2997,2999,0,2,2,2,34,3003,3001,3002,0,2,2,2,34,3000,3001,3003,0,2,2,2,34,3007,3005,3006,0,2,2,2,34,3004,3005,3007,0,2,2,2,34,3011,3009,3010,0,2,3,2,34,3008,3009,3011,0,3,3,2,34,3015,3013,3014,0,3,3,3,34,3012,3013,3015,0,2,3,3,34,3019,3017,3018,0,2,2,2,34,3016,3017,3019,0,2,2,2,34,3023,3021,3022,0,2,2,2,34,3020,3021,3023,0,2,2,2,34,3027,3025,3026,0,2,2,2,34,3024,3025,3027,0,2,2,2,34,3031,3029,3030,0,2,2,2,34,3028,3029,3031,0,2,2,2,34,3035,3033,3034,0,2,2,2,34,3032,3033,3035,0,2,2,2,34,3039,3037,3038,0,2,2,2,34,3036,3037,3039,0,2,2,2,34,3041,3043,3040,0,2,2,2,34,3042,3043,3041,0,2,2,2,34,3047,3045,3046,0,2,2,2,34,3044,3045,3047,0,2,2,2,34,3051,3049,3050,0,2,2,2,34,3048,3049,3051,0,2,2,2,34,3055,3053,3054,0,2,2,2,34,3052,3053,3055,0,2,2,2,34,3059,3057,3058,0,2,2,2,34,3056,3057,3059,0,2,2,2,34,3063,3061,3062,0,3,3,2,34,3060,3061,3063,0,2,3,3,34,3067,3065,3066,0,2,2,3,34,3064,3065,3067,0,2,2,2,34,3071,3069,3070,0,3,3,2,34,3068,3069,3071,0,2,3,3,34,3075,3073,3074,0,2,2,2,34,3072,3073,3075,0,2,2,2,34,3079,3077,3078,0,2,2,2,34,3076,3077,3079,0,2,2,2,34,3083,3081,3082,0,3,3,2,34,3080,3081,3083,0,2,3,3,34,3087,3085,3086,0,2,2,2,34,3084,3085,3087,0,2,2,2,34,3091,3089,3090,0,2,2,2,34,3088,3089,3091,0,2,2,2,34,3095,3093,3094,0,2,2,2,34,3092,3093,3095,0,2,2,2,34,3099,3097,3098,0,2,2,3,34,3096,3097,3099,0,2,2,2,34,3103,3101,3102,0,2,2,3,34,3100,3101,3103,0,2,2,2,34,3107,3105,3106,0,2,2,3,34,3104,3105,3107,0,2,2,2,34,3111,3109,3110,0,2,2,2,34,3108,3109,3111,0,2,2,2,34,3113,3115,3112,0,2,2,2,34,3114,3115,3113,0,2,2,2,34,3117,3119,3116,0,2,2,2,34,3118,3119,3117,0,2,2,2,34,3123,3121,3122,0,2,2,2,34,3120,3121,3123,0,2,2,2,34,3127,3125,3126,0,2,2,2,34,3124,3125,3127,0,2,2,2,34,3131,3129,3130,0,3,3,2,34,3128,3129,3131,0,2,3,3,34,3135,3133,3134,0,2,2,2,34,3132,3133,3135,0,2,2,2,34,3139,3137,3138,0,3,3,2,34,3136,3137,3139,0,2,3,3,34,3143,3141,3142,0,2,2,2,34,3140,3141,3143,0,2,2,2,34,3147,3145,3146,0,2,2,2,34,3144,3145,3147,0,2,2,2,34,3151,3149,3150,0,2,2,2,34,3148,3149,3151,0,2,2,2,34,3155,3153,3154,0,2,2,2,34,3152,3153,3155,0,2,2,2,34,3157,3159,3156,0,2,2,2,34,3158,3159,3157,0,2,2,2,34,3163,3161,3162,0,2,2,2,34,3160,3161,3163,0,2,2,2,34,3167,3165,3166,0,2,2,2,34,3164,3165,3167,0,2,2,2,34,3171,3169,3170,0,2,3,3,34,3168,3169,3171,0,2,3,2,34,3175,3173,3174,0,2,2,2,34,3172,3173,3175,0,2,2,2,34,3179,3177,3178,0,2,2,2,34,3176,3177,3179,0,2,2,2,34,3183,3181,3182,0,2,2,2,34,3180,3181,3183,0,2,2,2,34,3187,3185,3186,0,2,2,2,34,3184,3185,3187,0,2,2,2,34,3191,3189,3190,0,2,2,2,34,3188,3189,3191,0,2,2,2,34,3195,3193,3194,0,2,2,2,34,3192,3193,3195,0,2,2,2,34,3199,3197,3198,0,2,2,2,34,3196,3197,3199,0,2,2,2,34,3203,3201,3202,0,2,2,2,34,3200,3201,3203,0,2,2,2,34,3207,3205,3206,0,2,2,2,34,3204,3205,3207,0,2,2,2,34,3211,3209,3210,0,2,2,2,34,3208,3209,3211,0,2,2,2,34,3215,3213,3214,0,3,3,2,34,3212,3213,3215,0,2,3,3,34,3219,3217,3218,0,2,2,2,34,3216,3217,3219,0,2,2,2,34,3223,3221,3222,0,2,2,2,34,3220,3221,3223,0,2,2,2,34,3227,3225,3226,0,3,3,2,34,3224,3225,3227,0,2,3,3,34,3231,3229,3230,0,2,2,2,34,3228,3229,3231,0,2,2,2,34,3235,3233,3234,0,2,2,2,34,3232,3233,3235,0,2,2,2,34,3239,3237,3238,0,2,2,2,34,3236,3237,3239,0,2,2,2,34,3243,3241,3242,0,2,2,2,34,3240,3241,3243,0,2,2,2,34,3247,3245,3246,0,3,3,2,34,3244,3245,3247,0,2,3,3,34,3251,3249,3250,0,2,2,2,34,3248,3249,3251,0,2,2,2,34,3255,3253,3254,0,2,2,2,34,3252,3253,3255,0,2,2,2,34,3259,3257,3258,0,2,2,2,34,3256,3257,3259,0,2,2,2,34,3263,3261,3262,0,2,2,2,34,3260,3261,3263,0,2,2,2,34,3267,3265,3266,0,2,2,2,34,3264,3265,3267,0,2,2,2,34,3271,3269,3270,0,2,2,2,34,3268,3269,3271,0,2,2,2,34,3275,3273,3274,0,2,2,2,34,3272,3273,3275,0,2,2,2,34,3279,3277,3278,0,2,2,2,34,3276,3277,3279,0,2,2,2,34,3283,3281,3282,0,2,2,2,34,3280,3281,3283,0,2,2,2,34,3287,3285,3286,0,2,2,2,34,3284,3285,3287,0,2,2,2,34,3291,3289,3290,0,2,2,2,34,3288,3289,3291,0,2,2,2,34,3295,3293,3294,0,2,2,2,34,3292,3293,3295,0,2,2,2,34,3299,3297,3298,0,2,2,2,34,3296,3297,3299,0,2,2,2,34,3303,3301,3302,0,2,2,2,34,3300,3301,3303,0,2,2,2,34,3307,3305,3306,0,3,3,2,34,3304,3305,3307,0,2,3,3,34,3311,3309,3310,0,2,2,2,34,3308,3309,3311,0,2,2,2,34,3315,3313,3314,0,2,2,2,34,3312,3313,3315,0,2,2,2,34,3319,3317,3318,0,2,2,2,34,3316,3317,3319,0,2,2,2,34,3323,3321,3322,0,2,2,2,34,3320,3321,3323,0,2,2,2,34,3325,3327,3324,0,2,2,2,34,3326,3327,3325,0,2,2,2,34,3331,3329,3330,0,2,3,3,34,3328,3329,3331,0,2,3,2,34,3335,3333,3334,0,2,2,2,34,3332,3333,3335,0,2,2,2,34,3339,3337,3338,0,3,3,2,34,3336,3337,3339,0,2,3,3,34,3343,3341,3342,0,3,3,2,34,3340,3341,3343,0,2,3,3,34,3347,3345,3346,0,2,2,2,34,3344,3345,3347,0,2,2,2,34,3351,3349,3350,0,3,3,2,34,3348,3349,3351,0,2,3,3,34,3355,3353,3354,0,2,2,2,34,3352,3353,3355,0,2,2,2,34,3359,3357,3358,0,2,2,2,34,3356,3357,3359,0,2,2,2,34,3363,3361,3362,0,2,2,2,34,3360,3361,3363,0,2,2,2,34,3367,3365,3366,0,2,2,2,34,3364,3365,3367,0,2,2,2,34,3371,3369,3370,0,2,2,2,34,3368,3369,3371,0,2,2,2,34,3375,3373,3374,0,2,2,2,34,3372,3373,3375,0,2,2,2,34,3379,3377,3378,0,2,2,2,34,3376,3377,3379,0,2,2,2,34,3383,3381,3382,0,2,2,2,34,3380,3381,3383,0,2,2,2,34,3387,3385,3386,0,2,2,2,34,3384,3385,3387,0,2,2,2,34,3391,3389,3390,0,2,2,2,34,3388,3389,3391,0,2,2,2,34,3395,3393,3394,0,2,2,2,34,3392,3393,3395,0,2,2,2,34,3399,3397,3398,0,2,2,2,34,3396,3397,3399,0,2,2,2,34,3403,3401,3402,0,2,2,2,34,3400,3401,3403,0,2,2,2,34,3407,3405,3406,0,2,2,2,34,3404,3405,3407,0,2,2,2,34,3411,3409,3410,0,2,2,2,34,3408,3409,3411,0,2,2,2,34,3415,3413,3414,0,3,2,2,34,3412,3413,3415,0,2,2,3,34,3419,3417,3418,0,2,2,2,34,3416,3417,3419,0,2,2,2,34,3423,3421,3422,0,2,2,2,34,3420,3421,3423,0,2,2,2,34,3427,3425,3426,0,2,2,2,34,3424,3425,3427,0,2,2,2,34,3431,3429,3430,0,2,2,2,34,3428,3429,3431,0,2,2,2,34,3435,3433,3434,0,2,2,2,34,3432,3433,3435,0,2,2,2,34,3439,3437,3438,0,2,2,2,34,3436,3437,3439,0,2,2,2,34,3443,3441,3442,0,2,2,2,34,3440,3441,3443,0,2,2,2,34,3447,3445,3446,0,2,2,2,34,3444,3445,3447,0,2,2,2,34,3451,3449,3450,0,2,2,2,34,3448,3449,3451,0,2,2,2,34,3455,3453,3454,0,2,2,2,34,3452,3453,3455,0,2,2,2,34,3459,3457,3458,0,2,2,2,34,3456,3457,3459,0,2,2,2,34,3463,3461,3462,0,2,2,2,34,3460,3461,3463,0,2,2,2,34,3467,3465,3466,0,2,2,2,34,3464,3465,3467,0,2,2,2,34,3471,3469,3470,0,2,2,2,34,3468,3469,3471,0,2,2,2,34,3475,3473,3474,0,2,2,2,34,3472,3473,3475,0,2,2,2,34,3479,3477,3478,0,2,2,2,34,3476,3477,3479,0,2,2,2,34,3483,3481,3482,0,2,2,2,34,3480,3481,3483,0,2,2,2,34,3487,3485,3486,0,2,2,2,34,3484,3485,3487,0,2,2,2,34,3491,3489,3490,0,2,2,2,34,3488,3489,3491,0,2,2,2,34,3495,3493,3494,0,2,2,2,34,3492,3493,3495,0,2,2,2,34,3499,3497,3498,0,2,2,2,34,3496,3497,3499,0,2,2,2,34,3503,3501,3502,0,2,2,2,34,3500,3501,3503,0,2,2,2,34,3507,3505,3506,0,2,2,2,34,3504,3505,3507,0,2,2,2,34,3511,3509,3510,0,2,2,2,34,3508,3509,3511,0,2,2,2,34,3515,3513,3514,0,2,2,2,34,3512,3513,3515,0,2,2,2,34,3519,3517,3518,0,2,2,2,34,3516,3517,3519,0,2,2,2,34,3523,3521,3522,0,2,2,2,34,3520,3521,3523,0,2,2,2,34,3527,3525,3526,0,2,2,2,34,3524,3525,3527,0,2,2,2,34,1767,1765,1766,0,2,3,2,34,1764,1765,1767,0,3,3,2,35,3529,3531,3530,3528,0,4,5,5,4,35,3531,3533,3532,3530,0,5,6,6,5,35,3533,3535,3534,3532,0,6,7,7,6,35,3535,3529,3528,3534,0,7,4,4,7,35,3537,3539,3538,3536,0,8,9,9,8,35,3539,3541,3540,3538,0,9,10,10,9,35,3541,3543,3542,3540,0,10,11,11,10,35,3543,3537,3536,3542,0,11,8,8,11,35,3545,3547,3546,3544,0,4,5,5,4,35,3547,3549,3548,3546,0,5,6,6,5,35,3549,3551,3550,3548,0,6,7,7,6,35,3551,3545,3544,3550,0,7,4,4,7,35,3553,3555,3554,3552,0,12,13,13,12,35,3555,3557,3556,3554,0,13,14,14,13,35,3557,3559,3558,3556,0,14,15,15,14,35,3559,3553,3552,3558,0,15,12,12,15,35,3561,3563,3562,3560,0,12,13,13,12,35,3563,3565,3564,3562,0,13,14,14,13,35,3565,3567,3566,3564,0,14,15,15,14,35,3567,3561,3560,3566,0,15,12,12,15,35,3569,3571,3570,3568,0,8,9,9,8,35,3571,3573,3572,3570,0,9,10,10,9,35,3573,3575,3574,3572,0,10,11,11,10,35,3575,3569,3568,3574,0,11,8,8,11,35,3577,3579,3578,3576,0,4,5,5,4,35,3579,3581,3580,3578,0,5,6,6,5,35,3581,3583,3582,3580,0,6,7,7,6,35,3583,3577,3576,3582,0,7,4,4,7,35,3585,3587,3586,3584,0,8,9,9,8,35,3587,3589,3588,3586,0,9,10,10,9,35,3589,3591,3590,3588,0,10,11,11,10,35,3591,3585,3584,3590,0,11,8,8,11,35,3593,3595,3594,3592,0,4,5,5,4,35,3595,3597,3596,3594,0,5,6,6,5,35,3597,3599,3598,3596,0,6,7,7,6,35,3599,3593,3592,3598,0,7,4,4,7,35,3601,3603,3602,3600,0,8,9,9,8,35,3603,3605,3604,3602,0,9,10,10,9,35,3605,3607,3606,3604,0,10,11,11,10,35,3607,3601,3600,3606,0,11,8,8,11,35,3609,3611,3610,3608,0,4,5,5,4,35,3611,3613,3612,3610,0,5,6,6,5,35,3613,3615,3614,3612,0,6,7,7,6,35,3615,3609,3608,3614,0,7,4,4,7,35,3617,3619,3618,3616,0,8,9,9,8,35,3619,3621,3620,3618,0,9,10,10,9,35,3621,3623,3622,3620,0,10,11,11,10,35,3623,3617,3616,3622,0,11,8,8,11,35,3625,3627,3626,3624,0,4,5,5,4,35,3627,3629,3628,3626,0,5,6,6,5,35,3629,3631,3630,3628,0,6,7,7,6,35,3631,3625,3624,3630,0,7,4,4,7,35,3633,3635,3634,3632,0,8,9,9,8,35,3635,3637,3636,3634,0,9,10,10,9,35,3637,3639,3638,3636,0,10,11,11,10,35,3639,3633,3632,3638,0,11,8,8,11,35,3641,3643,3642,3640,0,12,13,13,12,35,3643,3645,3644,3642,0,13,14,14,13,35,3645,3647,3646,3644,0,14,15,15,14,35,3647,3641,3640,3646,0,15,12,12,15,35,3649,3651,3650,3648,0,16,17,17,16,35,3651,3653,3652,3650,0,17,18,18,17,35,3653,3655,3654,3652,0,18,19,19,18,35,3655,3649,3648,3654,0,19,16,16,19,35,3657,3659,3658,3656,0,16,17,17,16,35,3659,3661,3660,3658,0,17,18,18,17,35,3661,3663,3662,3660,0,18,19,19,18,35,3663,3657,3656,3662,0,19,16,16,19,35,3665,3667,3666,3664,0,16,17,17,16,35,3667,3669,3668,3666,0,17,18,18,17,35,3669,3671,3670,3668,0,18,19,19,18,35,3671,3665,3664,3670,0,19,16,16,19,35,3673,3675,3674,3672,0,16,17,17,16,35,3675,3677,3676,3674,0,17,18,18,17,35,3677,3679,3678,3676,0,18,19,19,18,35,3679,3673,3672,3678,0,19,16,16,19,35,3681,3683,3682,3680,0,16,17,17,16,35,3683,3685,3684,3682,0,17,18,18,17,35,3685,3687,3686,3684,0,18,19,19,18,35,3687,3681,3680,3686,0,19,16,16,19,35,3689,3691,3690,3688,0,16,17,17,16,35,3691,3693,3692,3690,0,17,18,18,17,35,3693,3695,3694,3692,0,18,19,19,18,35,3695,3689,3688,3694,0,19,16,16,19,35,3697,3699,3698,3696,0,16,17,17,16,35,3699,3701,3700,3698,0,17,18,18,17,35,3701,3703,3702,3700,0,18,19,19,18,35,3703,3697,3696,3702,0,19,16,16,19,35,3705,3707,3706,3704,0,16,17,17,16,35,3707,3709,3708,3706,0,17,18,18,17,35,3709,3711,3710,3708,0,18,19,19,18,35,3711,3705,3704,3710,0,19,16,16,19,35,3713,3715,3714,3712,0,16,17,17,16,35,3715,3717,3716,3714,0,17,18,18,17,35,3717,3719,3718,3716,0,18,19,19,18,35,3719,3713,3712,3718,0,19,16,16,19,35,3721,3723,3722,3720,0,16,17,17,16,35,3723,3725,3724,3722,0,17,18,18,17,35,3725,3727,3726,3724,0,18,19,19,18,35,3727,3721,3720,3726,0,19,16,16,19,35,3729,3731,3730,3728,0,16,17,17,16,35,3731,3733,3732,3730,0,17,18,18,17,35,3733,3735,3734,3732,0,18,19,19,18,35,3735,3729,3728,3734,0,19,16,16,19,35,3737,3739,3738,3736,0,16,17,17,16,35,3739,3741,3740,3738,0,17,18,18,17,35,3741,3743,3742,3740,0,18,19,19,18,35,3743,3737,3736,3742,0,19,16,16,19,35,3745,3747,3746,3744,0,12,13,13,12,35,3747,3749,3748,3746,0,13,14,14,13,35,3749,3751,3750,3748,0,14,15,15,14,35,3751,3745,3744,3750,0,15,12,12,15,35,3753,3755,3754,3752,0,16,17,17,16,35,3755,3757,3756,3754,0,17,18,18,17,35,3757,3759,3758,3756,0,18,19,19,18,35,3759,3753,3752,3758,0,19,16,16,19,35,3761,3763,3762,3760,0,16,17,17,16,35,3763,3765,3764,3762,0,17,18,18,17,35,3765,3767,3766,3764,0,18,19,19,18,35,3767,3761,3760,3766,0,19,16,16,19,35,3769,3771,3770,3768,0,16,17,17,16,35,3771,3773,3772,3770,0,17,18,18,17,35,3773,3775,3774,3772,0,18,19,19,18,35,3775,3769,3768,3774,0,19,16,16,19,35,3777,3779,3778,3776,0,16,17,17,16,35,3779,3781,3780,3778,0,17,18,18,17,35,3781,3783,3782,3780,0,18,19,19,18,35,3783,3777,3776,3782,0,19,16,16,19,35,3785,3787,3786,3784,0,16,17,17,16,35,3787,3789,3788,3786,0,17,18,18,17,35,3789,3791,3790,3788,0,18,19,19,18,35,3791,3785,3784,3790,0,19,16,16,19,35,3793,3795,3794,3792,0,16,17,17,16,35,3795,3797,3796,3794,0,17,18,18,17,35,3797,3799,3798,3796,0,18,19,19,18,35,3799,3793,3792,3798,0,19,16,16,19,35,3801,3803,3802,3800,0,16,17,17,16,35,3803,3805,3804,3802,0,17,18,18,17,35,3805,3807,3806,3804,0,18,19,19,18,35,3807,3801,3800,3806,0,19,16,16,19,35,3809,3811,3810,3808,0,16,17,17,16,35,3811,3813,3812,3810,0,17,18,18,17,35,3813,3815,3814,3812,0,18,19,19,18,35,3815,3809,3808,3814,0,19,16,16,19,35,3817,3819,3818,3816,0,16,17,17,16,35,3819,3821,3820,3818,0,17,18,18,17,35,3821,3823,3822,3820,0,18,19,19,18,35,3823,3817,3816,3822,0,19,16,16,19,35,3825,3827,3826,3824,0,16,17,17,16,35,3827,3829,3828,3826,0,17,18,18,17,35,3829,3831,3830,3828,0,18,19,19,18,35,3831,3825,3824,3830,0,19,16,16,19,35,3833,3835,3834,3832,0,16,17,17,16,35,3835,3837,3836,3834,0,17,18,18,17,35,3837,3839,3838,3836,0,18,19,19,18,35,3839,3833,3832,3838,0,19,16,16,19,35,3841,3843,3842,3840,0,16,17,17,16,35,3843,3845,3844,3842,0,17,18,18,17,35,3845,3847,3846,3844,0,18,19,19,18,35,3847,3841,3840,3846,0,19,16,16,19,35,3849,3851,3850,3848,0,4,5,5,4,35,3851,3853,3852,3850,0,5,6,6,5,35,3853,3855,3854,3852,0,6,7,7,6,35,3855,3849,3848,3854,0,7,4,4,7,35,3857,3859,3858,3856,0,16,17,17,16,35,3859,3861,3860,3858,0,17,18,18,17,35,3861,3863,3862,3860,0,18,19,19,18,35,3863,3857,3856,3862,0,19,16,16,19,35,3865,3867,3866,3864,0,16,17,17,16,35,3867,3869,3868,3866,0,17,18,18,17,35,3869,3871,3870,3868,0,18,19,19,18,35,3871,3865,3864,3870,0,19,16,16,19,35,3873,3875,3874,3872,0,16,17,17,16,35,3875,3877,3876,3874,0,17,18,18,17,35,3877,3879,3878,3876,0,18,19,19,18,35,3879,3873,3872,3878,0,19,16,16,19,35,3881,3883,3882,3880,0,16,17,17,16,35,3883,3885,3884,3882,0,17,18,18,17,35,3885,3887,3886,3884,0,18,19,19,18,35,3887,3881,3880,3886,0,19,16,16,19,35,3889,3891,3890,3888,0,4,5,5,4,35,3891,3893,3892,3890,0,5,6,6,5,35,3893,3895,3894,3892,0,6,7,7,6,35,3895,3889,3888,3894,0,7,4,4,7,35,3897,3899,3898,3896,0,8,9,9,8,35,3899,3901,3900,3898,0,9,10,10,9,35,3901,3903,3902,3900,0,10,11,11,10,35,3903,3897,3896,3902,0,11,8,8,11,35,3905,3907,3906,3904,0,16,17,17,16,35,3907,3909,3908,3906,0,17,18,18,17,35,3909,3911,3910,3908,0,18,19,19,18,35,3911,3905,3904,3910,0,19,16,16,19,35,3913,3915,3914,3912,0,16,17,17,16,35,3915,3917,3916,3914,0,17,18,18,17,35,3917,3919,3918,3916,0,18,19,19,18,35,3919,3913,3912,3918,0,19,16,16,19,35,3921,3923,3922,3920,0,16,17,17,16,35,3923,3925,3924,3922,0,17,18,18,17,35,3925,3927,3926,3924,0,18,19,19,18,35,3927,3921,3920,3926,0,19,16,16,19,35,3929,3931,3930,3928,0,16,17,17,16,35,3931,3933,3932,3930,0,17,18,18,17,35,3933,3935,3934,3932,0,18,19,19,18,35,3935,3929,3928,3934,0,19,16,16,19,35,3937,3939,3938,3936,0,8,9,9,8,35,3939,3941,3940,3938,0,9,10,10,9,35,3941,3943,3942,3940,0,10,11,11,10,35,3943,3937,3936,3942,0,11,8,8,11,35,3945,3947,3946,3944,0,4,5,5,4,35,3947,3949,3948,3946,0,5,6,6,5,35,3949,3951,3950,3948,0,6,7,7,6,35,3951,3945,3944,3950,0,7,4,4,7,35,3953,3955,3954,3952,0,16,17,17,16,35,3955,3957,3956,3954,0,17,18,18,17,35,3957,3959,3958,3956,0,18,19,19,18,35,3959,3953,3952,3958,0,19,16,16,19,35,3961,3963,3962,3960,0,16,17,17,16,35,3963,3965,3964,3962,0,17,18,18,17,35,3965,3967,3966,3964,0,18,19,19,18,35,3967,3961,3960,3966,0,19,16,16,19,35,3969,3971,3970,3968,0,16,17,17,16,35,3971,3973,3972,3970,0,17,18,18,17,35,3973,3975,3974,3972,0,18,19,19,18,35,3975,3969,3968,3974,0,19,16,16,19,35,3977,3979,3978,3976,0,16,17,17,16,35,3979,3981,3980,3978,0,17,18,18,17,35,3981,3983,3982,3980,0,18,19,19,18,35,3983,3977,3976,3982,0,19,16,16,19,35,3985,3987,3986,3984,0,8,9,9,8,35,3987,3989,3988,3986,0,9,10,10,9,35,3989,3991,3990,3988,0,10,11,11,10,35,3991,3985,3984,3990,0,11,8,8,11,35,3993,3995,3994,3992,0,4,5,5,4,35,3995,3997,3996,3994,0,5,6,6,5,35,3997,3999,3998,3996,0,6,7,7,6,35,3999,3993,3992,3998,0,7,4,4,7,35,4001,4003,4002,4000,0,4,5,5,4,35,4003,4005,4004,4002,0,5,6,6,5,35,4005,4007,4006,4004,0,6,7,7,6,35,4007,4001,4000,4006,0,7,4,4,7,35,4009,4011,4010,4008,0,16,17,17,16,35,4011,4013,4012,4010,0,17,18,18,17,35,4013,4015,4014,4012,0,18,19,19,18,35,4015,4009,4008,4014,0,19,16,16,19,35,4017,4019,4018,4016,0,16,17,17,16,35,4019,4021,4020,4018,0,17,18,18,17,35,4021,4023,4022,4020,0,18,19,19,18,35,4023,4017,4016,4022,0,19,16,16,19,35,4025,4027,4026,4024,0,16,17,17,16,35,4027,4029,4028,4026,0,17,18,18,17,35,4029,4031,4030,4028,0,18,19,19,18,35,4031,4025,4024,4030,0,19,16,16,19,35,4033,4035,4034,4032,0,16,17,17,16,35,4035,4037,4036,4034,0,17,18,18,17,35,4037,4039,4038,4036,0,18,19,19,18,35,4039,4033,4032,4038,0,19,16,16,19,35,4041,4043,4042,4040,0,16,17,17,16,35,4043,4045,4044,4042,0,17,18,18,17,35,4045,4047,4046,4044,0,18,19,19,18,35,4047,4041,4040,4046,0,19,16,16,19,35,4049,4051,4050,4048,0,16,17,17,16,35,4051,4053,4052,4050,0,17,18,18,17,35,4053,4055,4054,4052,0,18,19,19,18,35,4055,4049,4048,4054,0,19,16,16,19,35,4057,4059,4058,4056,0,16,17,17,16,35,4059,4061,4060,4058,0,17,18,18,17,35,4061,4063,4062,4060,0,18,19,19,18,35,4063,4057,4056,4062,0,19,16,16,19,35,4065,4067,4066,4064,0,16,17,17,16,35,4067,4069,4068,4066,0,17,18,18,17,35,4069,4071,4070,4068,0,18,19,19,18,35,4071,4065,4064,4070,0,19,16,16,19,35,4073,4075,4074,4072,0,16,17,17,16,35,4075,4077,4076,4074,0,17,18,18,17,35,4077,4079,4078,4076,0,18,19,19,18,35,4079,4073,4072,4078,0,19,16,16,19,35,4081,4083,4082,4080,0,16,17,17,16,35,4083,4085,4084,4082,0,17,18,18,17,35,4085,4087,4086,4084,0,18,19,19,18,35,4087,4081,4080,4086,0,19,16,16,19,35,4089,4091,4090,4088,0,16,17,17,16,35,4091,4093,4092,4090,0,17,18,18,17,35,4093,4095,4094,4092,0,18,19,19,18,35,4095,4089,4088,4094,0,19,16,16,19,35,4097,4099,4098,4096,0,16,17,17,16,35,4099,4101,4100,4098,0,17,18,18,17,35,4101,4103,4102,4100,0,18,19,19,18,35,4103,4097,4096,4102,0,19,16,16,19,35,4105,4107,4106,4104,0,8,9,9,8,35,4107,4109,4108,4106,0,9,10,10,9,35,4109,4111,4110,4108,0,10,11,11,10,35,4111,4105,4104,4110,0,11,8,8,11,35,4113,4115,4114,4112,0,8,9,9,8,35,4115,4117,4116,4114,0,9,10,10,9,35,4117,4119,4118,4116,0,10,11,11,10,35,4119,4113,4112,4118,0,11,8,8,11,35,4121,4123,4122,4120,0,4,5,5,4,35,4123,4125,4124,4122,0,5,6,6,5,35,4125,4127,4126,4124,0,6,7,7,6,35,4127,4121,4120,4126,0,7,4,4,7,35,4129,4131,4130,4128,0,4,5,5,4,35,4131,4133,4132,4130,0,5,6,6,5,35,4133,4135,4134,4132,0,6,7,7,6,35,4135,4129,4128,4134,0,7,4,4,7,35,4137,4139,4138,4136,0,16,17,17,16,35,4139,4141,4140,4138,0,17,18,18,17,35,4141,4143,4142,4140,0,18,19,19,18,35,4143,4137,4136,4142,0,19,16,16,19,35,4145,4147,4146,4144,0,16,17,17,16,35,4147,4149,4148,4146,0,17,18,18,17,35,4149,4151,4150,4148,0,18,19,19,18,35,4151,4145,4144,4150,0,19,16,16,19,35,4153,4155,4154,4152,0,16,17,17,16,35,4155,4157,4156,4154,0,17,18,18,17,35,4157,4159,4158,4156,0,18,19,19,18,35,4159,4153,4152,4158,0,19,16,16,19,35,4161,4163,4162,4160,0,16,17,17,16,35,4163,4165,4164,4162,0,17,18,18,17,35,4165,4167,4166,4164,0,18,19,19,18,35,4167,4161,4160,4166,0,19,16,16,19,35,4169,4171,4170,4168,0,8,9,9,8,35,4171,4173,4172,4170,0,9,10,10,9,35,4173,4175,4174,4172,0,10,11,11,10,35,4175,4169,4168,4174,0,11,8,8,11,35,4177,4179,4178,4176,0,8,9,9,8,35,4179,4181,4180,4178,0,9,10,10,9,35,4181,4183,4182,4180,0,10,11,11,10,35,4183,4177,4176,4182,0,11,8,8,11,35,4185,4187,4186,4184,0,4,5,5,4,35,4187,4189,4188,4186,0,5,6,6,5,35,4189,4191,4190,4188,0,6,7,7,6,35,4191,4185,4184,4190,0,7,4,4,7,35,4193,4195,4194,4192,0,16,17,17,16,35,4195,4197,4196,4194,0,17,18,18,17,35,4197,4199,4198,4196,0,18,19,19,18,35,4199,4193,4192,4198,0,19,16,16,19,35,4201,4203,4202,4200,0,16,17,17,16,35,4203,4205,4204,4202,0,17,18,18,17,35,4205,4207,4206,4204,0,18,19,19,18,35,4207,4201,4200,4206,0,19,16,16,19,35,4209,4211,4210,4208,0,16,17,17,16,35,4211,4213,4212,4210,0,17,18,18,17,35,4213,4215,4214,4212,0,18,19,19,18,35,4215,4209,4208,4214,0,19,16,16,19,35,4217,4219,4218,4216,0,16,17,17,16,35,4219,4221,4220,4218,0,17,18,18,17,35,4221,4223,4222,4220,0,18,19,19,18,35,4223,4217,4216,4222,0,19,16,16,19,35,4225,4227,4226,4224,0,16,17,17,16,35,4227,4229,4228,4226,0,17,18,18,17,35,4229,4231,4230,4228,0,18,19,19,18,35,4231,4225,4224,4230,0,19,16,16,19,35,4233,4235,4234,4232,0,16,17,17,16,35,4235,4237,4236,4234,0,17,18,18,17,35,4237,4239,4238,4236,0,18,19,19,18,35,4239,4233,4232,4238,0,19,16,16,19,35,4241,4243,4242,4240,0,16,17,17,16,35,4243,4245,4244,4242,0,17,18,18,17,35,4245,4247,4246,4244,0,18,19,19,18,35,4247,4241,4240,4246,0,19,16,16,19,35,4249,4251,4250,4248,0,16,17,17,16,35,4251,4253,4252,4250,0,17,18,18,17,35,4253,4255,4254,4252,0,18,19,19,18,35,4255,4249,4248,4254,0,19,16,16,19,35,4257,4259,4258,4256,0,16,17,17,16,35,4259,4261,4260,4258,0,17,18,18,17,35,4261,4263,4262,4260,0,18,19,19,18,35,4263,4257,4256,4262,0,19,16,16,19,35,4265,4267,4266,4264,0,16,17,17,16,35,4267,4269,4268,4266,0,17,18,18,17,35,4269,4271,4270,4268,0,18,19,19,18,35,4271,4265,4264,4270,0,19,16,16,19,35,4273,4275,4274,4272,0,16,17,17,16,35,4275,4277,4276,4274,0,17,18,18,17,35,4277,4279,4278,4276,0,18,19,19,18,35,4279,4273,4272,4278,0,19,16,16,19,35,4281,4283,4282,4280,0,16,17,17,16,35,4283,4285,4284,4282,0,17,18,18,17,35,4285,4287,4286,4284,0,18,19,19,18,35,4287,4281,4280,4286,0,19,16,16,19,35,4289,4291,4290,4288,0,8,9,9,8,35,4291,4293,4292,4290,0,9,10,10,9,35,4293,4295,4294,4292,0,10,11,11,10,35,4295,4289,4288,4294,0,11,8,8,11,35,4297,4299,4298,4296,0,16,17,17,16,35,4299,4301,4300,4298,0,17,18,18,17,35,4301,4303,4302,4300,0,18,19,19,18,35,4303,4297,4296,4302,0,19,16,16,19,35,4305,4307,4306,4304,0,16,17,17,16,35,4307,4309,4308,4306,0,17,18,18,17,35,4309,4311,4310,4308,0,18,19,19,18,35,4311,4305,4304,4310,0,19,16,16,19,35,4313,4315,4314,4312,0,12,13,13,12,35,4315,4317,4316,4314,0,13,14,14,13,35,4317,4319,4318,4316,0,14,15,15,14,35,4319,4313,4312,4318,0,15,12,12,15,35,4321,4323,4322,4320,0,16,17,17,16,35,4323,4325,4324,4322,0,17,18,18,17,35,4325,4327,4326,4324,0,18,19,19,18,35,4327,4321,4320,4326,0,19,16,16,19,35,4329,4331,4330,4328,0,16,17,17,16,35,4331,4333,4332,4330,0,17,18,18,17,35,4333,4335,4334,4332,0,18,19,19,18,35,4335,4329,4328,4334,0,19,16,16,19,35,4337,4339,4338,4336,0,16,17,17,16,35,4339,4341,4340,4338,0,17,18,18,17,35,4341,4343,4342,4340,0,18,19,19,18,35,4343,4337,4336,4342,0,19,16,16,19,35,4345,4347,4346,4344,0,16,17,17,16,35,4347,4349,4348,4346,0,17,18,18,17,35,4349,4351,4350,4348,0,18,19,19,18,35,4351,4345,4344,4350,0,19,16,16,19,35,4353,4355,4354,4352,0,16,17,17,16,35,4355,4357,4356,4354,0,17,18,18,17,35,4357,4359,4358,4356,0,18,19,19,18,35,4359,4353,4352,4358,0,19,16,16,19,35,4361,4363,4362,4360,0,16,17,17,16,35,4363,4365,4364,4362,0,17,18,18,17,35,4365,4367,4366,4364,0,18,19,19,18,35,4367,4361,4360,4366,0,19,16,16,19,35,4369,4371,4370,4368,0,12,13,13,12,35,4371,4373,4372,4370,0,13,14,14,13,35,4373,4375,4374,4372,0,14,15,15,14,35,4375,4369,4368,4374,0,15,12,12,15,35,4377,4379,4378,4376,0,16,17,17,16,35,4379,4381,4380,4378,0,17,18,18,17,35,4381,4383,4382,4380,0,18,19,19,18,35,4383,4377,4376,4382,0,19,16,16,19,35,4385,4387,4386,4384,0,16,17,17,16,35,4387,4389,4388,4386,0,17,18,18,17,35,4389,4391,4390,4388,0,18,19,19,18,35,4391,4385,4384,4390,0,19,16,16,19,35,4393,4395,4394,4392,0,16,17,17,16,35,4395,4397,4396,4394,0,17,18,18,17,35,4397,4399,4398,4396,0,18,19,19,18,35,4399,4393,4392,4398,0,19,16,16,19,35,4401,4403,4402,4400,0,16,17,17,16,35,4403,4405,4404,4402,0,17,18,18,17,35,4405,4407,4406,4404,0,18,19,19,18,35,4407,4401,4400,4406,0,19,16,16,19,35,4409,4411,4410,4408,0,16,17,17,16,35,4411,4413,4412,4410,0,17,18,18,17,35,4413,4415,4414,4412,0,18,19,19,18,35,4415,4409,4408,4414,0,19,16,16,19,35,4417,4419,4418,4416,0,16,17,17,16,35,4419,4421,4420,4418,0,17,18,18,17,35,4421,4423,4422,4420,0,18,19,19,18,35,4423,4417,4416,4422,0,19,16,16,19,35,4425,4427,4426,4424,0,16,17,17,16,35,4427,4429,4428,4426,0,17,18,18,17,35,4429,4431,4430,4428,0,18,19,19,18,35,4431,4425,4424,4430,0,19,16,16,19,35,4433,4435,4434,4432,0,16,17,17,16,35,4435,4437,4436,4434,0,17,18,18,17,35,4437,4439,4438,4436,0,18,19,19,18,35,4439,4433,4432,4438,0,19,16,16,19,35,4441,4443,4442,4440,0,16,17,17,16,35,4443,4445,4444,4442,0,17,18,18,17,35,4445,4447,4446,4444,0,18,19,19,18,35,4447,4441,4440,4446,0,19,16,16,19,35,4449,4451,4450,4448,0,16,17,17,16,35,4451,4453,4452,4450,0,17,18,18,17,35,4453,4455,4454,4452,0,18,19,19,18,35,4455,4449,4448,4454,0,19,16,16,19,35,4457,4459,4458,4456,0,16,17,17,16,35,4459,4461,4460,4458,0,17,18,18,17,35,4461,4463,4462,4460,0,18,19,19,18,35,4463,4457,4456,4462,0,19,16,16,19,35,4465,4467,4466,4464,0,16,17,17,16,35,4467,4469,4468,4466,0,17,18,18,17,35,4469,4471,4470,4468,0,18,19,19,18,35,4471,4465,4464,4470,0,19,16,16,19,35,4473,4475,4474,4472,0,16,17,17,16,35,4475,4477,4476,4474,0,17,18,18,17,35,4477,4479,4478,4476,0,18,19,19,18,35,4479,4473,4472,4478,0,19,16,16,19,35,4481,4483,4482,4480,0,16,17,17,16,35,4483,4485,4484,4482,0,17,18,18,17,35,4485,4487,4486,4484,0,18,19,19,18,35,4487,4481,4480,4486,0,19,16,16,19,35,4489,4491,4490,4488,0,16,17,17,16,35,4491,4493,4492,4490,0,17,18,18,17,35,4493,4495,4494,4492,0,18,19,19,18,35,4495,4489,4488,4494,0,19,16,16,19,35,4497,4499,4498,4496,0,12,13,13,12,35,4499,4501,4500,4498,0,13,14,14,13,35,4501,4503,4502,4500,0,14,15,15,14,35,4503,4497,4496,4502,0,15,12,12,15,35,4505,4507,4506,4504,0,16,17,17,16,35,4507,4509,4508,4506,0,17,18,18,17,35,4509,4511,4510,4508,0,18,19,19,18,35,4511,4505,4504,4510,0,19,16,16,19,35,4513,4515,4514,4512,0,16,17,17,16,35,4515,4517,4516,4514,0,17,18,18,17,35,4517,4519,4518,4516,0,18,19,19,18,35,4519,4513,4512,4518,0,19,16,16,19,35,4521,4523,4522,4520,0,12,13,13,12,35,4523,4525,4524,4522,0,13,14,14,13,35,4525,4527,4526,4524,0,14,15,15,14,35,4527,4521,4520,4526,0,15,12,12,15,35,4529,4531,4530,4528,0,16,17,17,16,35,4531,4533,4532,4530,0,17,18,18,17,35,4533,4535,4534,4532,0,18,19,19,18,35,4535,4529,4528,4534,0,19,16,16,19,35,4537,4539,4538,4536,0,16,17,17,16,35,4539,4541,4540,4538,0,17,18,18,17,35,4541,4543,4542,4540,0,18,19,19,18,35,4543,4537,4536,4542,0,19,16,16,19,35,4545,4547,4546,4544,0,16,17,17,16,35,4547,4549,4548,4546,0,17,18,18,17,35,4549,4551,4550,4548,0,18,19,19,18,35,4551,4545,4544,4550,0,19,16,16,19,35,4553,4555,4554,4552,0,16,17,17,16,35,4555,4557,4556,4554,0,17,18,18,17,35,4557,4559,4558,4556,0,18,19,19,18,35,4559,4553,4552,4558,0,19,16,16,19,35,4561,4563,4562,4560,0,16,17,17,16,35,4563,4565,4564,4562,0,17,18,18,17,35,4565,4567,4566,4564,0,18,19,19,18,35,4567,4561,4560,4566,0,19,16,16,19,35,4569,4571,4570,4568,0,4,5,5,4,35,4571,4573,4572,4570,0,5,6,6,5,35,4573,4575,4574,4572,0,6,7,7,6,35,4575,4569,4568,4574,0,7,4,4,7,35,4577,4579,4578,4576,0,16,17,17,16,35,4579,4581,4580,4578,0,17,18,18,17,35,4581,4583,4582,4580,0,18,19,19,18,35,4583,4577,4576,4582,0,19,16,16,19,35,4585,4587,4586,4584,0,16,17,17,16,35,4587,4589,4588,4586,0,17,18,18,17,35,4589,4591,4590,4588,0,18,19,19,18,35,4591,4585,4584,4590,0,19,16,16,19,35,4593,4595,4594,4592,0,8,9,9,8,35,4595,4597,4596,4594,0,9,10,10,9,35,4597,4599,4598,4596,0,10,11,11,10,35,4599,4593,4592,4598,0,11,8,8,11,35,4601,4603,4602,4600,0,16,17,17,16,35,4603,4605,4604,4602,0,17,18,18,17,35,4605,4607,4606,4604,0,18,19,19,18,35,4607,4601,4600,4606,0,19,16,16,19,35,4609,4611,4610,4608,0,16,17,17,16,35,4611,4613,4612,4610,0,17,18,18,17,35,4613,4615,4614,4612,0,18,19,19,18,35,4615,4609,4608,4614,0,19,16,16,19,35,4617,4619,4618,4616,0,16,17,17,16,35,4619,4621,4620,4618,0,17,18,18,17,35,4621,4623,4622,4620,0,18,19,19,18,35,4623,4617,4616,4622,0,19,16,16,19,35,4625,4627,4626,4624,0,16,17,17,16,35,4627,4629,4628,4626,0,17,18,18,17,35,4629,4631,4630,4628,0,18,19,19,18,35,4631,4625,4624,4630,0,19,16,16,19,35,4633,4635,4634,4632,0,16,17,17,16,35,4635,4637,4636,4634,0,17,18,18,17,35,4637,4639,4638,4636,0,18,19,19,18,35,4639,4633,4632,4638,0,19,16,16,19,35,4641,4643,4642,4640,0,16,17,17,16,35,4643,4645,4644,4642,0,17,18,18,17,35,4645,4647,4646,4644,0,18,19,19,18,35,4647,4641,4640,4646,0,19,16,16,19,35,4649,4651,4650,4648,0,16,17,17,16,35,4651,4653,4652,4650,0,17,18,18,17,35,4653,4655,4654,4652,0,18,19,19,18,35,4655,4649,4648,4654,0,19,16,16,19,35,4657,4659,4658,4656,0,16,17,17,16,35,4659,4661,4660,4658,0,17,18,18,17,35,4661,4663,4662,4660,0,18,19,19,18,35,4663,4657,4656,4662,0,19,16,16,19,35,4665,4667,4666,4664,0,16,17,17,16,35,4667,4669,4668,4666,0,17,18,18,17,35,4669,4671,4670,4668,0,18,19,19,18,35,4671,4665,4664,4670,0,19,16,16,19,35,4673,4675,4674,4672,0,16,17,17,16,35,4675,4677,4676,4674,0,17,18,18,17,35,4677,4679,4678,4676,0,18,19,19,18,35,4679,4673,4672,4678,0,19,16,16,19,35,4681,4683,4682,4680,0,16,17,17,16,35,4683,4685,4684,4682,0,17,18,18,17,35,4685,4687,4686,4684,0,18,19,19,18,35,4687,4681,4680,4686,0,19,16,16,19,35,4689,4691,4690,4688,0,16,17,17,16,35,4691,4693,4692,4690,0,17,18,18,17,35,4693,4695,4694,4692,0,18,19,19,18,35,4695,4689,4688,4694,0,19,16,16,19,35,4697,4699,4698,4696,0,16,17,17,16,35,4699,4701,4700,4698,0,17,18,18,17,35,4701,4703,4702,4700,0,18,19,19,18,35,4703,4697,4696,4702,0,19,16,16,19,35,4705,4707,4706,4704,0,16,17,17,16,35,4707,4709,4708,4706,0,17,18,18,17,35,4709,4711,4710,4708,0,18,19,19,18,35,4711,4705,4704,4710,0,19,16,16,19,35,4713,4715,4714,4712,0,16,17,17,16,35,4715,4717,4716,4714,0,17,18,18,17,35,4717,4719,4718,4716,0,18,19,19,18,35,4719,4713,4712,4718,0,19,16,16,19,35,4721,4723,4722,4720,0,16,17,17,16,35,4723,4725,4724,4722,0,17,18,18,17,35,4725,4727,4726,4724,0,18,19,19,18,35,4727,4721,4720,4726,0,19,16,16,19,35,4729,4731,4730,4728,0,16,17,17,16,35,4731,4733,4732,4730,0,17,18,18,17,35,4733,4735,4734,4732,0,18,19,19,18,35,4735,4729,4728,4734,0,19,16,16,19,35,4737,4739,4738,4736,0,16,17,17,16,35,4739,4741,4740,4738,0,17,18,18,17,35,4741,4743,4742,4740,0,18,19,19,18,35,4743,4737,4736,4742,0,19,16,16,19,35,4745,4747,4746,4744,0,16,17,17,16,35,4747,4749,4748,4746,0,17,18,18,17,35,4749,4751,4750,4748,0,18,19,19,18,35,4751,4745,4744,4750,0,19,16,16,19,35,4753,4755,4754,4752,0,16,17,17,16,35,4755,4757,4756,4754,0,17,18,18,17,35,4757,4759,4758,4756,0,18,19,19,18,35,4759,4753,4752,4758,0,19,16,16,19,35,4761,4763,4762,4760,0,8,9,9,8,35,4763,4765,4764,4762,0,9,10,10,9,35,4765,4767,4766,4764,0,10,11,11,10,35,4767,4761,4760,4766,0,11,8,8,11,35,4769,4771,4770,4768,0,16,17,17,16,35,4771,4773,4772,4770,0,17,18,18,17,35,4773,4775,4774,4772,0,18,19,19,18,35,4775,4769,4768,4774,0,19,16,16,19,35,4777,4779,4778,4776,0,16,17,17,16,35,4779,4781,4780,4778,0,17,18,18,17,35,4781,4783,4782,4780,0,18,19,19,18,35,4783,4777,4776,4782,0,19,16,16,19,35,4785,4787,4786,4784,0,4,5,5,4,35,4787,4789,4788,4786,0,5,6,6,5,35,4789,4791,4790,4788,0,6,7,7,6,35,4791,4785,4784,4790,0,7,4,4,7,35,4793,4795,4794,4792,0,16,17,17,16,35,4795,4797,4796,4794,0,17,18,18,17,35,4797,4799,4798,4796,0,18,19,19,18,35,4799,4793,4792,4798,0,19,16,16,19,35,4801,4803,4802,4800,0,16,17,17,16,35,4803,4805,4804,4802,0,17,18,18,17,35,4805,4807,4806,4804,0,18,19,19,18,35,4807,4801,4800,4806,0,19,16,16,19,35,4809,4811,4810,4808,0,16,17,17,16,35,4811,4813,4812,4810,0,17,18,18,17,35,4813,4815,4814,4812,0,18,19,19,18,35,4815,4809,4808,4814,0,19,16,16,19,35,4817,4819,4818,4816,0,16,17,17,16,35,4819,4821,4820,4818,0,17,18,18,17,35,4821,4823,4822,4820,0,18,19,19,18,35,4823,4817,4816,4822,0,19,16,16,19,35,4825,4827,4826,4824,0,12,13,13,12,35,4827,4829,4828,4826,0,13,14,14,13,35,4829,4831,4830,4828,0,14,15,15,14,35,4831,4825,4824,4830,0,15,12,12,15,35,4833,4835,4834,4832,0,16,17,17,16,35,4835,4837,4836,4834,0,17,18,18,17,35,4837,4839,4838,4836,0,18,19,19,18,35,4839,4833,4832,4838,0,19,16,16,19,35,4841,4843,4842,4840,0,16,17,17,16,35,4843,4845,4844,4842,0,17,18,18,17,35,4845,4847,4846,4844,0,18,19,19,18,35,4847,4841,4840,4846,0,19,16,16,19,35,4849,4851,4850,4848,0,16,17,17,16,35,4851,4853,4852,4850,0,17,18,18,17,35,4853,4855,4854,4852,0,18,19,19,18,35,4855,4849,4848,4854,0,19,16,16,19,35,4857,4859,4858,4856,0,16,17,17,16,35,4859,4861,4860,4858,0,17,18,18,17,35,4861,4863,4862,4860,0,18,19,19,18,35,4863,4857,4856,4862,0,19,16,16,19,35,4865,4867,4866,4864,0,16,17,17,16,35,4867,4869,4868,4866,0,17,18,18,17,35,4869,4871,4870,4868,0,18,19,19,18,35,4871,4865,4864,4870,0,19,16,16,19,35,4873,4875,4874,4872,0,16,17,17,16,35,4875,4877,4876,4874,0,17,18,18,17,35,4877,4879,4878,4876,0,18,19,19,18,35,4879,4873,4872,4878,0,19,16,16,19,35,4881,4883,4882,4880,0,12,13,13,12,35,4883,4885,4884,4882,0,13,14,14,13,35,4885,4887,4886,4884,0,14,15,15,14,35,4887,4881,4880,4886,0,15,12,12,15,35,4889,4891,4890,4888,0,16,17,17,16,35,4891,4893,4892,4890,0,17,18,18,17,35,4893,4895,4894,4892,0,18,19,19,18,35,4895,4889,4888,4894,0,19,16,16,19,35,4897,4899,4898,4896,0,16,17,17,16,35,4899,4901,4900,4898,0,17,18,18,17,35,4901,4903,4902,4900,0,18,19,19,18,35,4903,4897,4896,4902,0,19,16,16,19,35,4905,4907,4906,4904,0,16,17,17,16,35,4907,4909,4908,4906,0,17,18,18,17,35,4909,4911,4910,4908,0,18,19,19,18,35,4911,4905,4904,4910,0,19,16,16,19,35,4913,4915,4914,4912,0,16,17,17,16,35,4915,4917,4916,4914,0,17,18,18,17,35,4917,4919,4918,4916,0,18,19,19,18,35,4919,4913,4912,4918,0,19,16,16,19,35,4921,4923,4922,4920,0,16,17,17,16,35,4923,4925,4924,4922,0,17,18,18,17,35,4925,4927,4926,4924,0,18,19,19,18,35,4927,4921,4920,4926,0,19,16,16,19,35,4929,4931,4930,4928,0,16,17,17,16,35,4931,4933,4932,4930,0,17,18,18,17,35,4933,4935,4934,4932,0,18,19,19,18,35,4935,4929,4928,4934,0,19,16,16,19,35,4937,4939,4938,4936,0,16,17,17,16,35,4939,4941,4940,4938,0,17,18,18,17,35,4941,4943,4942,4940,0,18,19,19,18,35,4943,4937,4936,4942,0,19,16,16,19,35,4945,4947,4946,4944,0,16,17,17,16,35,4947,4949,4948,4946,0,17,18,18,17,35,4949,4951,4950,4948,0,18,19,19,18,35,4951,4945,4944,4950,0,19,16,16,19,35,4953,4955,4954,4952,0,16,17,17,16,35,4955,4957,4956,4954,0,17,18,18,17,35,4957,4959,4958,4956,0,18,19,19,18,35,4959,4953,4952,4958,0,19,16,16,19,35,4961,4963,4962,4960,0,16,17,17,16,35,4963,4965,4964,4962,0,17,18,18,17,35,4965,4967,4966,4964,0,18,19,19,18,35,4967,4961,4960,4966,0,19,16,16,19,35,4969,4971,4970,4968,0,16,17,17,16,35,4971,4973,4972,4970,0,17,18,18,17,35,4973,4975,4974,4972,0,18,19,19,18,35,4975,4969,4968,4974,0,19,16,16,19,35,4977,4979,4978,4976,0,16,17,17,16,35,4979,4981,4980,4978,0,17,18,18,17,35,4981,4983,4982,4980,0,18,19,19,18,35,4983,4977,4976,4982,0,19,16,16,19,35,4985,4987,4986,4984,0,4,5,5,4,35,4987,4989,4988,4986,0,5,6,6,5,35,4989,4991,4990,4988,0,6,7,7,6,35,4991,4985,4984,4990,0,7,4,4,7,35,4993,4995,4994,4992,0,8,9,9,8,35,4995,4997,4996,4994,0,9,10,10,9,35,4997,4999,4998,4996,0,10,11,11,10,35,4999,4993,4992,4998,0,11,8,8,11,35,5001,5003,5002,5000,0,16,17,17,16,35,5003,5005,5004,5002,0,17,18,18,17,35,5005,5007,5006,5004,0,18,19,19,18,35,5007,5001,5000,5006,0,19,16,16,19,35,5009,5011,5010,5008,0,16,17,17,16,35,5011,5013,5012,5010,0,17,18,18,17,35,5013,5015,5014,5012,0,18,19,19,18,35,5015,5009,5008,5014,0,19,16,16,19,35,5017,5019,5018,5016,0,12,13,13,12,35,5019,5021,5020,5018,0,13,14,14,13,35,5021,5023,5022,5020,0,14,15,15,14,35,5023,5017,5016,5022,0,15,12,12,15,35,5025,5027,5026,5024,0,16,17,17,16,35,5027,5029,5028,5026,0,17,18,18,17,35,5029,5031,5030,5028,0,18,19,19,18,35,5031,5025,5024,5030,0,19,16,16,19,35,5033,5035,5034,5032,0,16,17,17,16,35,5035,5037,5036,5034,0,17,18,18,17,35,5037,5039,5038,5036,0,18,19,19,18,35,5039,5033,5032,5038,0,19,16,16,19,35,5041,5043,5042,5040,0,12,13,13,12,35,5043,5045,5044,5042,0,13,14,14,13,35,5045,5047,5046,5044,0,14,15,15,14,35,5047,5041,5040,5046,0,15,12,12,15,35,5049,5051,5050,5048,0,16,17,17,16,35,5051,5053,5052,5050,0,17,18,18,17,35,5053,5055,5054,5052,0,18,19,19,18,35,5055,5049,5048,5054,0,19,16,16,19,35,5057,5059,5058,5056,0,16,17,17,16,35,5059,5061,5060,5058,0,17,18,18,17,35,5061,5063,5062,5060,0,18,19,19,18,35,5063,5057,5056,5062,0,19,16,16,19,35,5065,5067,5066,5064,0,4,5,5,4,35,5067,5069,5068,5066,0,5,6,6,5,35,5069,5071,5070,5068,0,6,7,7,6,35,5071,5065,5064,5070,0,7,4,4,7,35,5073,5075,5074,5072,0,8,9,9,8,35,5075,5077,5076,5074,0,9,10,10,9,35,5077,5079,5078,5076,0,10,11,11,10,35,5079,5073,5072,5078,0,11,8,8,11,35,5081,5083,5082,5080,0,16,17,17,16,35,5083,5085,5084,5082,0,17,18,18,17,35,5085,5087,5086,5084,0,18,19,19,18,35,5087,5081,5080,5086,0,19,16,16,19,35,5089,5091,5090,5088,0,16,17,17,16,35,5091,5093,5092,5090,0,17,18,18,17,35,5093,5095,5094,5092,0,18,19,19,18,35,5095,5089,5088,5094,0,19,16,16,19,35,5097,5099,5098,5096,0,16,17,17,16,35,5099,5101,5100,5098,0,17,18,18,17,35,5101,5103,5102,5100,0,18,19,19,18,35,5103,5097,5096,5102,0,19,16,16,19,35,5105,5107,5106,5104,0,16,17,17,16,35,5107,5109,5108,5106,0,17,18,18,17,35,5109,5111,5110,5108,0,18,19,19,18,35,5111,5105,5104,5110,0,19,16,16,19,35,5113,5115,5114,5112,0,8,9,9,8,35,5115,5117,5116,5114,0,9,10,10,9,35,5117,5119,5118,5116,0,10,11,11,10,35,5119,5113,5112,5118,0,11,8,8,11,35,5121,5123,5122,5120,0,16,17,17,16,35,5123,5125,5124,5122,0,17,18,18,17,35,5125,5127,5126,5124,0,18,19,19,18,35,5127,5121,5120,5126,0,19,16,16,19,35,5129,5131,5130,5128,0,4,5,5,4,35,5131,5133,5132,5130,0,5,6,6,5,35,5133,5135,5134,5132,0,6,7,7,6,35,5135,5129,5128,5134,0,7,4,4,7,35,5137,5139,5138,5136,0,12,13,13,12,35,5139,5141,5140,5138,0,13,14,14,13,35,5141,5143,5142,5140,0,14,15,15,14,35,5143,5137,5136,5142,0,15,12,12,15,35,5145,5147,5146,5144,0,16,17,17,16,35,5147,5149,5148,5146,0,17,18,18,17,35,5149,5151,5150,5148,0,18,19,19,18,35,5151,5145,5144,5150,0,19,16,16,19,35,5153,5155,5154,5152,0,16,17,17,16,35,5155,5157,5156,5154,0,17,18,18,17,35,5157,5159,5158,5156,0,18,19,19,18,35,5159,5153,5152,5158,0,19,16,16,19,35,5161,5163,5162,5160,0,16,17,17,16,35,5163,5165,5164,5162,0,17,18,18,17,35,5165,5167,5166,5164,0,18,19,19,18,35,5167,5161,5160,5166,0,19,16,16,19,35,5169,5171,5170,5168,0,16,17,17,16,35,5171,5173,5172,5170,0,17,18,18,17,35,5173,5175,5174,5172,0,18,19,19,18,35,5175,5169,5168,5174,0,19,16,16,19,35,5177,5179,5178,5176,0,12,13,13,12,35,5179,5181,5180,5178,0,13,14,14,13,35,5181,5183,5182,5180,0,14,15,15,14,35,5183,5177,5176,5182,0,15,12,12,15,35,5185,5187,5186,5184,0,8,9,9,8,35,5187,5189,5188,5186,0,9,10,10,9,35,5189,5191,5190,5188,0,10,11,11,10,35,5191,5185,5184,5190,0,11,8,8,11,35,5193,5195,5194,5192,0,16,17,17,16,35,5195,5197,5196,5194,0,17,18,18,17,35,5197,5199,5198,5196,0,18,19,19,18,35,5199,5193,5192,5198,0,19,16,16,19,35,5201,5203,5202,5200,0,4,5,5,4,35,5203,5205,5204,5202,0,5,6,6,5,35,5205,5207,5206,5204,0,6,7,7,6,35,5207,5201,5200,5206,0,7,4,4,7,35,5209,5211,5210,5208,0,16,17,17,16,35,5211,5213,5212,5210,0,17,18,18,17,35,5213,5215,5214,5212,0,18,19,19,18,35,5215,5209,5208,5214,0,19,16,16,19,35,5217,5219,5218,5216,0,16,17,17,16,35,5219,5221,5220,5218,0,17,18,18,17,35,5221,5223,5222,5220,0,18,19,19,18,35,5223,5217,5216,5222,0,19,16,16,19,35,5225,5227,5226,5224,0,16,17,17,16,35,5227,5229,5228,5226,0,17,18,18,17,35,5229,5231,5230,5228,0,18,19,19,18,35,5231,5225,5224,5230,0,19,16,16,19,35,5233,5235,5234,5232,0,16,17,17,16,35,5235,5237,5236,5234,0,17,18,18,17,35,5237,5239,5238,5236,0,18,19,19,18,35,5239,5233,5232,5238,0,19,16,16,19,35,5241,5243,5242,5240,0,16,17,17,16,35,5243,5245,5244,5242,0,17,18,18,17,35,5245,5247,5246,5244,0,18,19,19,18,35,5247,5241,5240,5246,0,19,16,16,19,35,5249,5251,5250,5248,0,16,17,17,16,35,5251,5253,5252,5250,0,17,18,18,17,35,5253,5255,5254,5252,0,18,19,19,18,35,5255,5249,5248,5254,0,19,16,16,19,35,5257,5259,5258,5256,0,16,17,17,16,35,5259,5261,5260,5258,0,17,18,18,17,35,5261,5263,5262,5260,0,18,19,19,18,35,5263,5257,5256,5262,0,19,16,16,19,35,5265,5267,5266,5264,0,16,17,17,16,35,5267,5269,5268,5266,0,17,18,18,17,35,5269,5271,5270,5268,0,18,19,19,18,35,5271,5265,5264,5270,0,19,16,16,19,35,5273,5275,5274,5272,0,16,17,17,16,35,5275,5277,5276,5274,0,17,18,18,17,35,5277,5279,5278,5276,0,18,19,19,18,35,5279,5273,5272,5278,0,19,16,16,19,35,5281,5283,5282,5280,0,16,17,17,16,35,5283,5285,5284,5282,0,17,18,18,17,35,5285,5287,5286,5284,0,18,19,19,18,35,5287,5281,5280,5286,0,19,16,16,19,35,5289,5291,5290,5288,0,4,5,5,4,35,5291,5293,5292,5290,0,5,6,6,5,35,5293,5295,5294,5292,0,6,7,7,6,35,5295,5289,5288,5294,0,7,4,4,7,35,5297,5299,5298,5296,0,16,17,17,16,35,5299,5301,5300,5298,0,17,18,18,17,35,5301,5303,5302,5300,0,18,19,19,18,35,5303,5297,5296,5302,0,19,16,16,19,35,5305,5307,5306,5304,0,16,17,17,16,35,5307,5309,5308,5306,0,17,18,18,17,35,5309,5311,5310,5308,0,18,19,19,18,35,5311,5305,5304,5310,0,19,16,16,19,35,5313,5315,5314,5312,0,16,17,17,16,35,5315,5317,5316,5314,0,17,18,18,17,35,5317,5319,5318,5316,0,18,19,19,18,35,5319,5313,5312,5318,0,19,16,16,19,35,5321,5323,5322,5320,0,12,13,13,12,35,5323,5325,5324,5322,0,13,14,14,13,35,5325,5327,5326,5324,0,14,15,15,14,35,5327,5321,5320,5326,0,15,12,12,15,35,5329,5331,5330,5328,0,16,17,17,16,35,5331,5333,5332,5330,0,17,18,18,17,35,5333,5335,5334,5332,0,18,19,19,18,35,5335,5329,5328,5334,0,19,16,16,19,35,5337,5339,5338,5336,0,16,17,17,16,35,5339,5341,5340,5338,0,17,18,18,17,35,5341,5343,5342,5340,0,18,19,19,18,35,5343,5337,5336,5342,0,19,16,16,19,35,5345,5347,5346,5344,0,12,13,13,12,35,5347,5349,5348,5346,0,13,14,14,13,35,5349,5351,5350,5348,0,14,15,15,14,35,5351,5345,5344,5350,0,15,12,12,15,35,5353,5355,5354,5352,0,16,17,17,16,35,5355,5357,5356,5354,0,17,18,18,17,35,5357,5359,5358,5356,0,18,19,19,18,35,5359,5353,5352,5358,0,19,16,16,19,35,5361,5363,5362,5360,0,16,17,17,16,35,5363,5365,5364,5362,0,17,18,18,17,35,5365,5367,5366,5364,0,18,19,19,18,35,5367,5361,5360,5366,0,19,16,16,19,35,5369,5371,5370,5368,0,16,17,17,16,35,5371,5373,5372,5370,0,17,18,18,17,35,5373,5375,5374,5372,0,18,19,19,18,35,5375,5369,5368,5374,0,19,16,16,19,35,5377,5379,5378,5376,0,8,9,9,8,35,5379,5381,5380,5378,0,9,10,10,9,35,5381,5383,5382,5380,0,10,11,11,10,35,5383,5377,5376,5382,0,11,8,8,11,35,5385,5387,5386,5384,0,4,5,5,4,35,5387,5389,5388,5386,0,5,6,6,5,35,5389,5391,5390,5388,0,6,7,7,6,35,5391,5385,5384,5390,0,7,4,4,7,35,5393,5395,5394,5392,0,12,13,13,12,35,5395,5397,5396,5394,0,13,14,14,13,35,5397,5399,5398,5396,0,14,15,15,14,35,5399,5393,5392,5398,0,15,12,12,15,35,5401,5403,5402,5400,0,16,17,17,16,35,5403,5405,5404,5402,0,17,18,18,17,35,5405,5407,5406,5404,0,18,19,19,18,35,5407,5401,5400,5406,0,19,16,16,19,35,5409,5411,5410,5408,0,16,17,17,16,35,5411,5413,5412,5410,0,17,18,18,17,35,5413,5415,5414,5412,0,18,19,19,18,35,5415,5409,5408,5414,0,19,16,16,19,35,5417,5419,5418,5416,0,4,5,5,4,35,5419,5421,5420,5418,0,5,6,6,5,35,5421,5423,5422,5420,0,6,7,7,6,35,5423,5417,5416,5422,0,7,4,4,7,35,5425,5427,5426,5424,0,16,17,17,16,35,5427,5429,5428,5426,0,17,18,18,17,35,5429,5431,5430,5428,0,18,19,19,18,35,5431,5425,5424,5430,0,19,16,16,19,35,5433,5435,5434,5432,0,16,17,17,16,35,5435,5437,5436,5434,0,17,18,18,17,35,5437,5439,5438,5436,0,18,19,19,18,35,5439,5433,5432,5438,0,19,16,16,19,35,5441,5443,5442,5440,0,8,9,9,8,35,5443,5445,5444,5442,0,9,10,10,9,35,5445,5447,5446,5444,0,10,11,11,10,35,5447,5441,5440,5446,0,11,8,8,11,35,5449,5451,5450,5448,0,16,17,17,16,35,5451,5453,5452,5450,0,17,18,18,17,35,5453,5455,5454,5452,0,18,19,19,18,35,5455,5449,5448,5454,0,19,16,16,19,35,5457,5459,5458,5456,0,16,17,17,16,35,5459,5461,5460,5458,0,17,18,18,17,35,5461,5463,5462,5460,0,18,19,19,18,35,5463,5457,5456,5462,0,19,16,16,19,35,5465,5467,5466,5464,0,12,13,13,12,35,5467,5469,5468,5466,0,13,14,14,13,35,5469,5471,5470,5468,0,14,15,15,14,35,5471,5465,5464,5470,0,15,12,12,15,35,5473,5475,5474,5472,0,8,9,9,8,35,5475,5477,5476,5474,0,9,10,10,9,35,5477,5479,5478,5476,0,10,11,11,10,35,5479,5473,5472,5478,0,11,8,8,11,35,5481,5483,5482,5480,0,4,5,5,4,35,5483,5485,5484,5482,0,5,6,6,5,35,5485,5487,5486,5484,0,6,7,7,6,35,5487,5481,5480,5486,0,7,4,4,7,35,5489,5491,5490,5488,0,16,17,17,16,35,5491,5493,5492,5490,0,17,18,18,17,35,5493,5495,5494,5492,0,18,19,19,18,35,5495,5489,5488,5494,0,19,16,16,19,35,5497,5499,5498,5496,0,16,17,17,16,35,5499,5501,5500,5498,0,17,18,18,17,35,5501,5503,5502,5500,0,18,19,19,18,35,5503,5497,5496,5502,0,19,16,16,19,35,5505,5507,5506,5504,0,16,17,17,16,35,5507,5509,5508,5506,0,17,18,18,17,35,5509,5511,5510,5508,0,18,19,19,18,35,5511,5505,5504,5510,0,19,16,16,19,35,5513,5515,5514,5512,0,16,17,17,16,35,5515,5517,5516,5514,0,17,18,18,17,35,5517,5519,5518,5516,0,18,19,19,18,35,5519,5513,5512,5518,0,19,16,16,19,35,5521,5523,5522,5520,0,16,17,17,16,35,5523,5525,5524,5522,0,17,18,18,17,35,5525,5527,5526,5524,0,18,19,19,18,35,5527,5521,5520,5526,0,19,16,16,19,35,5529,5531,5530,5528,0,16,17,17,16,35,5531,5533,5532,5530,0,17,18,18,17,35,5533,5535,5534,5532,0,18,19,19,18,35,5535,5529,5528,5534,0,19,16,16,19,35,5537,5539,5538,5536,0,16,17,17,16,35,5539,5541,5540,5538,0,17,18,18,17,35,5541,5543,5542,5540,0,18,19,19,18,35,5543,5537,5536,5542,0,19,16,16,19,35,5545,5547,5546,5544,0,16,17,17,16,35,5547,5549,5548,5546,0,17,18,18,17,35,5549,5551,5550,5548,0,18,19,19,18,35,5551,5545,5544,5550,0,19,16,16,19,35,5553,5555,5554,5552,0,8,9,9,8,35,5555,5557,5556,5554,0,9,10,10,9,35,5557,5559,5558,5556,0,10,11,11,10,35,5559,5553,5552,5558,0,11,8,8,11,35,5561,5563,5562,5560,0,4,5,5,4,35,5563,5565,5564,5562,0,5,6,6,5,35,5565,5567,5566,5564,0,6,7,7,6,35,5567,5561,5560,5566,0,7,4,4,7,35,5569,5571,5570,5568,0,16,17,17,16,35,5571,5573,5572,5570,0,17,18,18,17,35,5573,5575,5574,5572,0,18,19,19,18,35,5575,5569,5568,5574,0,19,16,16,19,35,5577,5579,5578,5576,0,16,17,17,16,35,5579,5581,5580,5578,0,17,18,18,17,35,5581,5583,5582,5580,0,18,19,19,18,35,5583,5577,5576,5582,0,19,16,16,19,35,5585,5587,5586,5584,0,16,17,17,16,35,5587,5589,5588,5586,0,17,18,18,17,35,5589,5591,5590,5588,0,18,19,19,18,35,5591,5585,5584,5590,0,19,16,16,19,35,5593,5595,5594,5592,0,16,17,17,16,35,5595,5597,5596,5594,0,17,18,18,17,35,5597,5599,5598,5596,0,18,19,19,18,35,5599,5593,5592,5598,0,19,16,16,19,35,5601,5603,5602,5600,0,16,17,17,16,35,5603,5605,5604,5602,0,17,18,18,17,35,5605,5607,5606,5604,0,18,19,19,18,35,5607,5601,5600,5606,0,19,16,16,19,35,5609,5611,5610,5608,0,16,17,17,16,35,5611,5613,5612,5610,0,17,18,18,17,35,5613,5615,5614,5612,0,18,19,19,18,35,5615,5609,5608,5614,0,19,16,16,19,35,5617,5619,5618,5616,0,16,17,17,16,35,5619,5621,5620,5618,0,17,18,18,17,35,5621,5623,5622,5620,0,18,19,19,18,35,5623,5617,5616,5622,0,19,16,16,19,35,5625,5627,5626,5624,0,16,17,17,16,35,5627,5629,5628,5626,0,17,18,18,17,35,5629,5631,5630,5628,0,18,19,19,18,35,5631,5625,5624,5630,0,19,16,16,19,35,5633,5635,5634,5632,0,8,9,9,8,35,5635,5637,5636,5634,0,9,10,10,9,35,5637,5639,5638,5636,0,10,11,11,10,35,5639,5633,5632,5638,0,11,8,8,11,35,5641,5643,5642,5640,0,4,5,5,4,35,5643,5645,5644,5642,0,5,6,6,5,35,5645,5647,5646,5644,0,6,7,7,6,35,5647,5641,5640,5646,0,7,4,4,7,35,5649,5651,5650,5648,0,16,17,17,16,35,5651,5653,5652,5650,0,17,18,18,17,35,5653,5655,5654,5652,0,18,19,19,18,35,5655,5649,5648,5654,0,19,16,16,19,35,5657,5659,5658,5656,0,16,17,17,16,35,5659,5661,5660,5658,0,17,18,18,17,35,5661,5663,5662,5660,0,18,19,19,18,35,5663,5657,5656,5662,0,19,16,16,19,35,5665,5667,5666,5664,0,8,9,9,8,35,5667,5669,5668,5666,0,9,10,10,9,35,5669,5671,5670,5668,0,10,11,11,10,35,5671,5665,5664,5670,0,11,8,8,11,35,5673,5675,5674,5672,0,16,17,17,16,35,5675,5677,5676,5674,0,17,18,18,17,35,5677,5679,5678,5676,0,18,19,19,18,35,5679,5673,5672,5678,0,19,16,16,19,35,5681,5683,5682,5680,0,16,17,17,16,35,5683,5685,5684,5682,0,17,18,18,17,35,5685,5687,5686,5684,0,18,19,19,18,35,5687,5681,5680,5686,0,19,16,16,19,35,5689,5691,5690,5688,0,4,5,5,4,35,5691,5693,5692,5690,0,5,6,6,5,35,5693,5695,5694,5692,0,6,7,7,6,35,5695,5689,5688,5694,0,7,4,4,7,35,5697,5699,5698,5696,0,16,17,17,16,35,5699,5701,5700,5698,0,17,18,18,17,35,5701,5703,5702,5700,0,18,19,19,18,35,5703,5697,5696,5702,0,19,16,16,19,35,5705,5707,5706,5704,0,16,17,17,16,35,5707,5709,5708,5706,0,17,18,18,17,35,5709,5711,5710,5708,0,18,19,19,18,35,5711,5705,5704,5710,0,19,16,16,19,35,5713,5715,5714,5712,0,8,9,9,8,35,5715,5717,5716,5714,0,9,10,10,9,35,5717,5719,5718,5716,0,10,11,11,10,35,5719,5713,5712,5718,0,11,8,8,11,35,5721,5723,5722,5720,0,4,5,5,4,35,5723,5725,5724,5722,0,5,6,6,5,35,5725,5727,5726,5724,0,6,7,7,6,35,5727,5721,5720,5726,0,7,4,4,7,35,5729,5731,5730,5728,0,16,17,17,16,35,5731,5733,5732,5730,0,17,18,18,17,35,5733,5735,5734,5732,0,18,19,19,18,35,5735,5729,5728,5734,0,19,16,16,19,35,5737,5739,5738,5736,0,16,17,17,16,35,5739,5741,5740,5738,0,17,18,18,17,35,5741,5743,5742,5740,0,18,19,19,18,35,5743,5737,5736,5742,0,19,16,16,19,35,5745,5747,5746,5744,0,16,17,17,16,35,5747,5749,5748,5746,0,17,18,18,17,35,5749,5751,5750,5748,0,18,19,19,18,35,5751,5745,5744,5750,0,19,16,16,19,35,5753,5755,5754,5752,0,16,17,17,16,35,5755,5757,5756,5754,0,17,18,18,17,35,5757,5759,5758,5756,0,18,19,19,18,35,5759,5753,5752,5758,0,19,16,16,19,35,5761,5763,5762,5760,0,4,5,5,4,35,5763,5765,5764,5762,0,5,6,6,5,35,5765,5767,5766,5764,0,6,7,7,6,35,5767,5761,5760,5766,0,7,4,4,7,35,5769,5771,5770,5768,0,8,9,9,8,35,5771,5773,5772,5770,0,9,10,10,9,35,5773,5775,5774,5772,0,10,11,11,10,35,5775,5769,5768,5774,0,11,8,8,11,35,5777,5779,5778,5776,0,16,17,17,16,35,5779,5781,5780,5778,0,17,18,18,17,35,5781,5783,5782,5780,0,18,19,19,18,35,5783,5777,5776,5782,0,19,16,16,19,35,5785,5787,5786,5784,0,16,17,17,16,35,5787,5789,5788,5786,0,17,18,18,17,35,5789,5791,5790,5788,0,18,19,19,18,35,5791,5785,5784,5790,0,19,16,16,19,35,5793,5795,5794,5792,0,16,17,17,16,35,5795,5797,5796,5794,0,17,18,18,17,35,5797,5799,5798,5796,0,18,19,19,18,35,5799,5793,5792,5798,0,19,16,16,19,35,5801,5803,5802,5800,0,16,17,17,16,35,5803,5805,5804,5802,0,17,18,18,17,35,5805,5807,5806,5804,0,18,19,19,18,35,5807,5801,5800,5806,0,19,16,16,19,35,5809,5811,5810,5808,0,12,13,13,12,35,5811,5813,5812,5810,0,13,14,14,13,35,5813,5815,5814,5812,0,14,15,15,14,35,5815,5809,5808,5814,0,15,12,12,15,35,5817,5819,5818,5816,0,16,17,17,16,35,5819,5821,5820,5818,0,17,18,18,17,35,5821,5823,5822,5820,0,18,19,19,18,35,5823,5817,5816,5822,0,19,16,16,19,35,5825,5827,5826,5824,0,16,17,17,16,35,5827,5829,5828,5826,0,17,18,18,17,35,5829,5831,5830,5828,0,18,19,19,18,35,5831,5825,5824,5830,0,19,16,16,19,35,5833,5835,5834,5832,0,16,17,17,16,35,5835,5837,5836,5834,0,17,18,18,17,35,5837,5839,5838,5836,0,18,19,19,18,35,5839,5833,5832,5838,0,19,16,16,19,35,5841,5843,5842,5840,0,16,17,17,16,35,5843,5845,5844,5842,0,17,18,18,17,35,5845,5847,5846,5844,0,18,19,19,18,35,5847,5841,5840,5846,0,19,16,16,19,35,5849,5851,5850,5848,0,16,17,17,16,35,5851,5853,5852,5850,0,17,18,18,17,35,5853,5855,5854,5852,0,18,19,19,18,35,5855,5849,5848,5854,0,19,16,16,19,35,5857,5859,5858,5856,0,16,17,17,16,35,5859,5861,5860,5858,0,17,18,18,17,35,5861,5863,5862,5860,0,18,19,19,18,35,5863,5857,5856,5862,0,19,16,16,19,35,5865,5867,5866,5864,0,12,13,13,12,35,5867,5869,5868,5866,0,13,14,14,13,35,5869,5871,5870,5868,0,14,15,15,14,35,5871,5865,5864,5870,0,15,12,12,15,35,5873,5875,5874,5872,0,16,17,17,16,35,5875,5877,5876,5874,0,17,18,18,17,35,5877,5879,5878,5876,0,18,19,19,18,35,5879,5873,5872,5878,0,19,16,16,19,35,5881,5883,5882,5880,0,16,17,17,16,35,5883,5885,5884,5882,0,17,18,18,17,35,5885,5887,5886,5884,0,18,19,19,18,35,5887,5881,5880,5886,0,19,16,16,19,35,5889,5891,5890,5888,0,16,17,17,16,35,5891,5893,5892,5890,0,17,18,18,17,35,5893,5895,5894,5892,0,18,19,19,18,35,5895,5889,5888,5894,0,19,16,16,19,35,5897,5899,5898,5896,0,16,17,17,16,35,5899,5901,5900,5898,0,17,18,18,17,35,5901,5903,5902,5900,0,18,19,19,18,35,5903,5897,5896,5902,0,19,16,16,19,35,5905,5907,5906,5904,0,4,5,5,4,35,5907,5909,5908,5906,0,5,6,6,5,35,5909,5911,5910,5908,0,6,7,7,6,35,5911,5905,5904,5910,0,7,4,4,7,35,5913,5915,5914,5912,0,8,9,9,8,35,5915,5917,5916,5914,0,9,10,10,9,35,5917,5919,5918,5916,0,10,11,11,10,35,5919,5913,5912,5918,0,11,8,8,11,35,5921,5923,5922,5920,0,16,17,17,16,35,5923,5925,5924,5922,0,17,18,18,17,35,5925,5927,5926,5924,0,18,19,19,18,35,5927,5921,5920,5926,0,19,16,16,19,35,5929,5931,5930,5928,0,16,17,17,16,35,5931,5933,5932,5930,0,17,18,18,17,35,5933,5935,5934,5932,0,18,19,19,18,35,5935,5929,5928,5934,0,19,16,16,19,35,5937,5939,5938,5936,0,16,17,17,16,35,5939,5941,5940,5938,0,17,18,18,17,35,5941,5943,5942,5940,0,18,19,19,18,35,5943,5937,5936,5942,0,19,16,16,19,35,5945,5947,5946,5944,0,16,17,17,16,35,5947,5949,5948,5946,0,17,18,18,17,35,5949,5951,5950,5948,0,18,19,19,18,35,5951,5945,5944,5950,0,19,16,16,19,35,5953,5955,5954,5952,0,8,9,9,8,35,5955,5957,5956,5954,0,9,10,10,9,35,5957,5959,5958,5956,0,10,11,11,10,35,5959,5953,5952,5958,0,11,8,8,11,35,5961,5963,5962,5960,0,16,17,17,16,35,5963,5965,5964,5962,0,17,18,18,17,35,5965,5967,5966,5964,0,18,19,19,18,35,5967,5961,5960,5966,0,19,16,16,19,35,5969,5971,5970,5968,0,16,17,17,16,35,5971,5973,5972,5970,0,17,18,18,17,35,5973,5975,5974,5972,0,18,19,19,18,35,5975,5969,5968,5974,0,19,16,16,19,35,5977,5979,5978,5976,0,16,17,17,16,35,5979,5981,5980,5978,0,17,18,18,17,35,5981,5983,5982,5980,0,18,19,19,18,35,5983,5977,5976,5982,0,19,16,16,19,35,5985,5987,5986,5984,0,16,17,17,16,35,5987,5989,5988,5986,0,17,18,18,17,35,5989,5991,5990,5988,0,18,19,19,18,35,5991,5985,5984,5990,0,19,16,16,19,35,5993,5995,5994,5992,0,16,17,17,16,35,5995,5997,5996,5994,0,17,18,18,17,35,5997,5999,5998,5996,0,18,19,19,18,35,5999,5993,5992,5998,0,19,16,16,19,35,6001,6003,6002,6000,0,20,21,21,20,35,6003,6005,6004,6002,0,21,22,22,21,35,6005,6007,6006,6004,0,22,23,23,22,35,6007,6009,6008,6006,0,23,24,24,23,35,6009,6011,6010,6008,0,24,25,25,24,35,6011,6001,6000,6010,0,25,20,20,25,35,6013,6015,6014,6012,0,16,17,17,16,35,6015,6017,6016,6014,0,17,18,18,17,35,6017,6019,6018,6016,0,18,19,19,18,35,6019,6013,6012,6018,0,19,16,16,19,35,6021,6023,6022,6020,0,16,17,17,16,35,6023,6025,6024,6022,0,17,18,18,17,35,6025,6027,6026,6024,0,18,19,19,18,35,6027,6021,6020,6026,0,19,16,16,19,35,6029,6031,6030,6028,0,16,17,17,16,35,6031,6033,6032,6030,0,17,18,18,17,35,6033,6035,6034,6032,0,18,19,19,18,35,6035,6029,6028,6034,0,19,16,16,19,35,6037,6039,6038,6036,0,16,17,17,16,35,6039,6041,6040,6038,0,17,18,18,17,35,6041,6043,6042,6040,0,18,19,19,18,35,6043,6037,6036,6042,0,19,16,16,19,35,6045,6047,6046,6044,0,16,17,17,16,35,6047,6049,6048,6046,0,17,18,18,17,35,6049,6051,6050,6048,0,18,19,19,18,35,6051,6045,6044,6050,0,19,16,16,19,35,6053,6055,6054,6052,0,16,17,17,16,35,6055,6057,6056,6054,0,17,18,18,17,35,6057,6059,6058,6056,0,18,19,19,18,35,6059,6053,6052,6058,0,19,16,16,19,35,6061,6063,6062,6060,0,20,21,21,20,35,6063,6065,6064,6062,0,21,22,22,21,35,6065,6067,6066,6064,0,22,23,23,22,35,6067,6069,6068,6066,0,23,24,24,23,35,6069,6071,6070,6068,0,24,25,25,24,35,6071,6061,6060,6070,0,25,20,20,25,35,6073,6075,6074,6072,0,16,17,17,16,35,6075,6077,6076,6074,0,17,18,18,17,35,6077,6079,6078,6076,0,18,19,19,18,35,6079,6073,6072,6078,0,19,16,16,19,35,6081,6083,6082,6080,0,16,17,17,16,35,6083,6085,6084,6082,0,17,18,18,17,35,6085,6087,6086,6084,0,18,19,19,18,35,6087,6081,6080,6086,0,19,16,16,19,35,6089,6091,6090,6088,0,16,17,17,16,35,6091,6093,6092,6090,0,17,18,18,17,35,6093,6095,6094,6092,0,18,19,19,18,35,6095,6089,6088,6094,0,19,16,16,19,35,6097,6099,6098,6096,0,16,17,17,16,35,6099,6101,6100,6098,0,17,18,18,17,35,6101,6103,6102,6100,0,18,19,19,18,35,6103,6097,6096,6102,0,19,16,16,19,35,6105,6107,6106,6104,0,16,17,17,16,35,6107,6109,6108,6106,0,17,18,18,17,35,6109,6111,6110,6108,0,18,19,19,18,35,6111,6105,6104,6110,0,19,16,16,19,35,6113,6115,6114,6112,0,4,5,5,4,35,6115,6117,6116,6114,0,5,6,6,5,35,6117,6119,6118,6116,0,6,7,7,6,35,6119,6113,6112,6118,0,7,4,4,7,35,6121,6123,6122,6120,0,16,17,17,16,35,6123,6125,6124,6122,0,17,18,18,17,35,6125,6127,6126,6124,0,18,19,19,18,35,6127,6121,6120,6126,0,19,16,16,19,35,6129,6131,6130,6128,0,12,13,13,12,35,6131,6133,6132,6130,0,13,14,14,13,35,6133,6135,6134,6132,0,14,15,15,14,35,6135,6129,6128,6134,0,15,12,12,15,35,6137,6139,6138,6136,0,4,5,5,4,35,6139,6141,6140,6138,0,5,6,6,5,35,6141,6143,6142,6140,0,6,7,7,6,35,6143,6137,6136,6142,0,7,4,4,7,35,6145,6147,6146,6144,0,16,17,17,16,35,6147,6149,6148,6146,0,17,18,18,17,35,6149,6151,6150,6148,0,18,19,19,18,35,6151,6145,6144,6150,0,19,16,16,19,35,6153,6155,6154,6152,0,12,13,13,12,35,6155,6157,6156,6154,0,13,14,14,13,35,6157,6159,6158,6156,0,14,15,15,14,35,6159,6153,6152,6158,0,15,12,12,15,35,6161,6163,6162,6160,0,12,13,13,12,35,6163,6165,6164,6162,0,13,14,14,13,35,6165,6167,6166,6164,0,14,15,15,14,35,6167,6161,6160,6166,0,15,12,12,15,35,6169,6171,6170,6168,0,12,13,13,12,35,6171,6173,6172,6170,0,13,14,14,13,35,6173,6175,6174,6172,0,14,15,15,14,35,6175,6169,6168,6174,0,15,12,12,15,35,6177,6179,6178,6176,0,16,17,17,16,35,6179,6181,6180,6178,0,17,18,18,17,35,6181,6183,6182,6180,0,18,19,19,18,35,6183,6177,6176,6182,0,19,16,16,19,35,6185,6187,6186,6184,0,16,17,17,16,35,6187,6189,6188,6186,0,17,18,18,17,35,6189,6191,6190,6188,0,18,19,19,18,35,6191,6185,6184,6190,0,19,16,16,19,35,6193,6195,6194,6192,0,12,13,13,12,35,6195,6197,6196,6194,0,13,14,14,13,35,6197,6199,6198,6196,0,14,15,15,14,35,6199,6193,6192,6198,0,15,12,12,15,35,6201,6203,6202,6200,0,12,13,13,12,35,6203,6205,6204,6202,0,13,14,14,13,35,6205,6207,6206,6204,0,14,15,15,14,35,6207,6201,6200,6206,0,15,12,12,15,35,6209,6211,6210,6208,0,12,13,13,12,35,6211,6213,6212,6210,0,13,14,14,13,35,6213,6215,6214,6212,0,14,15,15,14,35,6215,6209,6208,6214,0,15,12,12,15,35,6217,6219,6218,6216,0,16,17,17,16,35,6219,6221,6220,6218,0,17,18,18,17,35,6221,6223,6222,6220,0,18,19,19,18,35,6223,6217,6216,6222,0,19,16,16,19,35,6225,6227,6226,6224,0,8,9,9,8,35,6227,6229,6228,6226,0,9,10,10,9,35,6229,6231,6230,6228,0,10,11,11,10,35,6231,6225,6224,6230,0,11,8,8,11,35,6233,6235,6234,6232,0,12,13,13,12,35,6235,6237,6236,6234,0,13,14,14,13,35,6237,6239,6238,6236,0,14,15,15,14,35,6239,6233,6232,6238,0,15,12,12,15,35,6241,6243,6242,6240,0,16,17,17,16,35,6243,6245,6244,6242,0,17,18,18,17,35,6245,6247,6246,6244,0,18,19,19,18,35,6247,6241,6240,6246,0,19,16,16,19,35,6249,6251,6250,6248,0,8,9,9,8,35,6251,6253,6252,6250,0,9,10,10,9,35,6253,6255,6254,6252,0,10,11,11,10,35,6255,6249,6248,6254,0,11,8,8,11,35,6257,6259,6258,6256,0,4,5,5,4,35,6259,6261,6260,6258,0,5,6,6,5,35,6261,6263,6262,6260,0,6,7,7,6,35,6263,6257,6256,6262,0,7,4,4,7,35,6265,6267,6266,6264,0,4,5,5,4,35,6267,6269,6268,6266,0,5,6,6,5,35,6269,6271,6270,6268,0,6,7,7,6,35,6271,6265,6264,6270,0,7,4,4,7,35,6273,6275,6274,6272,0,4,5,5,4,35,6275,6277,6276,6274,0,5,6,6,5,35,6277,6279,6278,6276,0,6,7,7,6,35,6279,6273,6272,6278,0,7,4,4,7,35,6281,6283,6282,6280,0,16,17,17,16,35,6283,6285,6284,6282,0,17,18,18,17,35,6285,6287,6286,6284,0,18,19,19,18,35,6287,6281,6280,6286,0,19,16,16,19,35,6289,6291,6290,6288,0,16,17,17,16,35,6291,6293,6292,6290,0,17,18,18,17,35,6293,6295,6294,6292,0,18,19,19,18,35,6295,6289,6288,6294,0,19,16,16,19,35,6297,6299,6298,6296,0,16,17,17,16,35,6299,6301,6300,6298,0,17,18,18,17,35,6301,6303,6302,6300,0,18,19,19,18,35,6303,6297,6296,6302,0,19,16,16,19,35,6305,6307,6306,6304,0,16,17,17,16,35,6307,6309,6308,6306,0,17,18,18,17,35,6309,6311,6310,6308,0,18,19,19,18,35,6311,6305,6304,6310,0,19,16,16,19,35,6313,6315,6314,6312,0,16,17,17,16,35,6315,6317,6316,6314,0,17,18,18,17,35,6317,6319,6318,6316,0,18,19,19,18,35,6319,6313,6312,6318,0,19,16,16,19,35,6321,6323,6322,6320,0,16,17,17,16,35,6323,6325,6324,6322,0,17,18,18,17,35,6325,6327,6326,6324,0,18,19,19,18,35,6327,6321,6320,6326,0,19,16,16,19,35,6329,6331,6330,6328,0,16,17,17,16,35,6331,6333,6332,6330,0,17,18,18,17,35,6333,6335,6334,6332,0,18,19,19,18,35,6335,6329,6328,6334,0,19,16,16,19,35,6337,6339,6338,6336,0,16,17,17,16,35,6339,6341,6340,6338,0,17,18,18,17,35,6341,6343,6342,6340,0,18,19,19,18,35,6343,6337,6336,6342,0,19,16,16,19,35,6345,6347,6346,6344,0,8,9,9,8,35,6347,6349,6348,6346,0,9,10,10,9,35,6349,6351,6350,6348,0,10,11,11,10,35,6351,6345,6344,6350,0,11,8,8,11,35,6353,6355,6354,6352,0,8,9,9,8,35,6355,6357,6356,6354,0,9,10,10,9,35,6357,6359,6358,6356,0,10,11,11,10,35,6359,6353,6352,6358,0,11,8,8,11,35,6361,6363,6362,6360,0,8,9,9,8,35,6363,6365,6364,6362,0,9,10,10,9,35,6365,6367,6366,6364,0,10,11,11,10,35,6367,6361,6360,6366,0,11,8,8,11,35,6369,6371,6370,6368,0,4,5,5,4,35,6371,6373,6372,6370,0,5,6,6,5,35,6373,6375,6374,6372,0,6,7,7,6,35,6375,6369,6368,6374,0,7,4,4,7,35,6377,6379,6378,6376,0,4,5,5,4,35,6379,6381,6380,6378,0,5,6,6,5,35,6381,6383,6382,6380,0,6,7,7,6,35,6383,6377,6376,6382,0,7,4,4,7,35,6385,6387,6386,6384,0,4,5,5,4,35,6387,6389,6388,6386,0,5,6,6,5,35,6389,6391,6390,6388,0,6,7,7,6,35,6391,6385,6384,6390,0,7,4,4,7,35,6393,6395,6394,6392,0,16,17,17,16,35,6395,6397,6396,6394,0,17,18,18,17,35,6397,6399,6398,6396,0,18,19,19,18,35,6399,6393,6392,6398,0,19,16,16,19,35,6401,6403,6402,6400,0,16,17,17,16,35,6403,6405,6404,6402,0,17,18,18,17,35,6405,6407,6406,6404,0,18,19,19,18,35,6407,6401,6400,6406,0,19,16,16,19,35,6409,6411,6410,6408,0,16,17,17,16,35,6411,6413,6412,6410,0,17,18,18,17,35,6413,6415,6414,6412,0,18,19,19,18,35,6415,6409,6408,6414,0,19,16,16,19,35,6417,6419,6418,6416,0,16,17,17,16,35,6419,6421,6420,6418,0,17,18,18,17,35,6421,6423,6422,6420,0,18,19,19,18,35,6423,6417,6416,6422,0,19,16,16,19,35,6425,6427,6426,6424,0,16,17,17,16,35,6427,6429,6428,6426,0,17,18,18,17,35,6429,6431,6430,6428,0,18,19,19,18,35,6431,6425,6424,6430,0,19,16,16,19,35,6433,6435,6434,6432,0,16,17,17,16,35,6435,6437,6436,6434,0,17,18,18,17,35,6437,6439,6438,6436,0,18,19,19,18,35,6439,6433,6432,6438,0,19,16,16,19,35,6441,6443,6442,6440,0,8,9,9,8,35,6443,6445,6444,6442,0,9,10,10,9,35,6445,6447,6446,6444,0,10,11,11,10,35,6447,6441,6440,6446,0,11,8,8,11,35,6449,6451,6450,6448,0,8,9,9,8,35,6451,6453,6452,6450,0,9,10,10,9,35,6453,6455,6454,6452,0,10,11,11,10,35,6455,6449,6448,6454,0,11,8,8,11,35,6457,6459,6458,6456,0,8,9,9,8,35,6459,6461,6460,6458,0,9,10,10,9,35,6461,6463,6462,6460,0,10,11,11,10,35,6463,6457,6456,6462,0,11,8,8,11,35,6465,6467,6466,6464,0,4,5,5,4,35,6467,6469,6468,6466,0,5,6,6,5,35,6469,6471,6470,6468,0,6,7,7,6,35,6471,6465,6464,6470,0,7,4,4,7,35,6473,6475,6474,6472,0,4,5,5,4,35,6475,6477,6476,6474,0,5,6,6,5,35,6477,6479,6478,6476,0,6,7,7,6,35,6479,6473,6472,6478,0,7,4,4,7,35,6481,6483,6482,6480,0,16,17,17,16,35,6483,6485,6484,6482,0,17,18,18,17,35,6485,6487,6486,6484,0,18,19,19,18,35,6487,6481,6480,6486,0,19,16,16,19,35,6489,6491,6490,6488,0,16,17,17,16,35,6491,6493,6492,6490,0,17,18,18,17,35,6493,6495,6494,6492,0,18,19,19,18,35,6495,6489,6488,6494,0,19,16,16,19,35,6497,6499,6498,6496,0,8,9,9,8,35,6499,6501,6500,6498,0,9,10,10,9,35,6501,6503,6502,6500,0,10,11,11,10,35,6503,6497,6496,6502,0,11,8,8,11,35,6505,6507,6506,6504,0,8,9,9,8,35,6507,6509,6508,6506,0,9,10,10,9,35,6509,6511,6510,6508,0,10,11,11,10,35,6511,6505,6504,6510,0,11,8,8,11,35,6513,6515,6514,6512,0,4,5,5,4,35,6515,6517,6516,6514,0,5,6,6,5,35,6517,6519,6518,6516,0,6,7,7,6,35,6519,6513,6512,6518,0,7,4,4,7,35,6521,6523,6522,6520,0,16,17,17,16,35,6523,6525,6524,6522,0,17,18,18,17,35,6525,6527,6526,6524,0,18,19,19,18,35,6527,6521,6520,6526,0,19,16,16,19,35,6529,6531,6530,6528,0,12,13,13,12,35,6531,6533,6532,6530,0,13,14,14,13,35,6533,6535,6534,6532,0,14,15,15,14,35,6535,6529,6528,6534,0,15,12,12,15,35,6537,6539,6538,6536,0,16,17,17,16,35,6539,6541,6540,6538,0,17,18,18,17,35,6541,6543,6542,6540,0,18,19,19,18,35,6543,6537,6536,6542,0,19,16,16,19,35,6545,6547,6546,6544,0,16,17,17,16,35,6547,6549,6548,6546,0,17,18,18,17,35,6549,6551,6550,6548,0,18,19,19,18,35,6551,6545,6544,6550,0,19,16,16,19,35,6553,6555,6554,6552,0,12,13,13,12,35,6555,6557,6556,6554,0,13,14,14,13,35,6557,6559,6558,6556,0,14,15,15,14,35,6559,6553,6552,6558,0,15,12,12,15,35,6561,6563,6562,6560,0,16,17,17,16,35,6563,6565,6564,6562,0,17,18,18,17,35,6565,6567,6566,6564,0,18,19,19,18,35,6567,6561,6560,6566,0,19,16,16,19,35,6569,6571,6570,6568,0,8,9,9,8,35,6571,6573,6572,6570,0,9,10,10,9,35,6573,6575,6574,6572,0,10,11,11,10,35,6575,6569,6568,6574,0,11,8,8,11,35,6577,6579,6578,6576,0,4,5,5,4,35,6579,6581,6580,6578,0,5,6,6,5,35,6581,6583,6582,6580,0,6,7,7,6,35,6583,6577,6576,6582,0,7,4,4,7,35,6585,6587,6586,6584,0,4,5,5,4,35,6587,6589,6588,6586,0,5,6,6,5,35,6589,6591,6590,6588,0,6,7,7,6,35,6591,6585,6584,6590,0,7,4,4,7,35,6593,6595,6594,6592,0,16,17,17,16,35,6595,6597,6596,6594,0,17,18,18,17,35,6597,6599,6598,6596,0,18,19,19,18,35,6599,6593,6592,6598,0,19,16,16,19,35,6601,6603,6602,6600,0,16,17,17,16,35,6603,6605,6604,6602,0,17,18,18,17,35,6605,6607,6606,6604,0,18,19,19,18,35,6607,6601,6600,6606,0,19,16,16,19,35,6609,6611,6610,6608,0,8,9,9,8,35,6611,6613,6612,6610,0,9,10,10,9,35,6613,6615,6614,6612,0,10,11,11,10,35,6615,6609,6608,6614,0,11,8,8,11,35,6617,6619,6618,6616,0,8,9,9,8,35,6619,6621,6620,6618,0,9,10,10,9,35,6621,6623,6622,6620,0,10,11,11,10,35,6623,6617,6616,6622,0,11,8,8,11,35,6625,6627,6626,6624,0,16,17,17,16,35,6627,6629,6628,6626,0,17,18,18,17,35,6629,6631,6630,6628,0,18,19,19,18,35,6631,6625,6624,6630,0,19,16,16,19,35,6633,6635,6634,6632,0,16,17,17,16,35,6635,6637,6636,6634,0,17,18,18,17,35,6637,6639,6638,6636,0,18,19,19,18,35,6639,6633,6632,6638,0,19,16,16,19,35,6641,6643,6642,6640,0,4,5,5,4,35,6643,6645,6644,6642,0,5,6,6,5,35,6645,6647,6646,6644,0,6,7,7,6,35,6647,6641,6640,6646,0,7,4,4,7,35,6649,6651,6650,6648,0,4,5,5,4,35,6651,6653,6652,6650,0,5,6,6,5,35,6653,6655,6654,6652,0,6,7,7,6,35,6655,6649,6648,6654,0,7,4,4,7,35,6657,6659,6658,6656,0,16,17,17,16,35,6659,6661,6660,6658,0,17,18,18,17,35,6661,6663,6662,6660,0,18,19,19,18,35,6663,6657,6656,6662,0,19,16,16,19,35,6665,6667,6666,6664,0,16,17,17,16,35,6667,6669,6668,6666,0,17,18,18,17,35,6669,6671,6670,6668,0,18,19,19,18,35,6671,6665,6664,6670,0,19,16,16,19,35,6673,6675,6674,6672,0,16,17,17,16,35,6675,6677,6676,6674,0,17,18,18,17,35,6677,6679,6678,6676,0,18,19,19,18,35,6679,6673,6672,6678,0,19,16,16,19,35,6681,6683,6682,6680,0,16,17,17,16,35,6683,6685,6684,6682,0,17,18,18,17,35,6685,6687,6686,6684,0,18,19,19,18,35,6687,6681,6680,6686,0,19,16,16,19,35,6689,6691,6690,6688,0,16,17,17,16,35,6691,6693,6692,6690,0,17,18,18,17,35,6693,6695,6694,6692,0,18,19,19,18,35,6695,6689,6688,6694,0,19,16,16,19,35,6697,6699,6698,6696,0,16,17,17,16,35,6699,6701,6700,6698,0,17,18,18,17,35,6701,6703,6702,6700,0,18,19,19,18,35,6703,6697,6696,6702,0,19,16,16,19,35,6705,6707,6706,6704,0,16,17,17,16,35,6707,6709,6708,6706,0,17,18,18,17,35,6709,6711,6710,6708,0,18,19,19,18,35,6711,6705,6704,6710,0,19,16,16,19,35,6713,6715,6714,6712,0,16,17,17,16,35,6715,6717,6716,6714,0,17,18,18,17,35,6717,6719,6718,6716,0,18,19,19,18,35,6719,6713,6712,6718,0,19,16,16,19,35,6721,6723,6722,6720,0,8,9,9,8,35,6723,6725,6724,6722,0,9,10,10,9,35,6725,6727,6726,6724,0,10,11,11,10,35,6727,6721,6720,6726,0,11,8,8,11,35,6729,6731,6730,6728,0,8,9,9,8,35,6731,6733,6732,6730,0,9,10,10,9,35,6733,6735,6734,6732,0,10,11,11,10,35,6735,6729,6728,6734,0,11,8,8,11,35,6737,6739,6738,6736,0,16,17,17,16,35,6739,6741,6740,6738,0,17,18,18,17,35,6741,6743,6742,6740,0,18,19,19,18,35,6743,6737,6736,6742,0,19,16,16,19,35,6745,6747,6746,6744,0,16,17,17,16,35,6747,6749,6748,6746,0,17,18,18,17,35,6749,6751,6750,6748,0,18,19,19,18,35,6751,6745,6744,6750,0,19,16,16,19,35,6753,6755,6754,6752,0,12,13,13,12,35,6755,6757,6756,6754,0,13,14,14,13,35,6757,6759,6758,6756,0,14,15,15,14,35,6759,6753,6752,6758,0,15,12,12,15,35,6761,6763,6762,6760,0,16,17,17,16,35,6763,6765,6764,6762,0,17,18,18,17,35,6765,6767,6766,6764,0,18,19,19,18,35,6767,6761,6760,6766,0,19,16,16,19,35,6769,6771,6770,6768,0,16,17,17,16,35,6771,6773,6772,6770,0,17,18,18,17,35,6773,6775,6774,6772,0,18,19,19,18,35,6775,6769,6768,6774,0,19,16,16,19,35,6777,6779,6778,6776,0,16,17,17,16,35,6779,6781,6780,6778,0,17,18,18,17,35,6781,6783,6782,6780,0,18,19,19,18,35,6783,6777,6776,6782,0,19,16,16,19,35,6785,6787,6786,6784,0,16,17,17,16,35,6787,6789,6788,6786,0,17,18,18,17,35,6789,6791,6790,6788,0,18,19,19,18,35,6791,6785,6784,6790,0,19,16,16,19,35,6793,6795,6794,6792,0,16,17,17,16,35,6795,6797,6796,6794,0,17,18,18,17,35,6797,6799,6798,6796,0,18,19,19,18,35,6799,6793,6792,6798,0,19,16,16,19,35,6801,6803,6802,6800,0,16,17,17,16,35,6803,6805,6804,6802,0,17,18,18,17,35,6805,6807,6806,6804,0,18,19,19,18,35,6807,6801,6800,6806,0,19,16,16,19,35,6809,6811,6810,6808,0,16,17,17,16,35,6811,6813,6812,6810,0,17,18,18,17,35,6813,6815,6814,6812,0,18,19,19,18,35,6815,6809,6808,6814,0,19,16,16,19,35,6817,6819,6818,6816,0,16,17,17,16,35,6819,6821,6820,6818,0,17,18,18,17,35,6821,6823,6822,6820,0,18,19,19,18,35,6823,6817,6816,6822,0,19,16,16,19,35,6825,6827,6826,6824,0,16,17,17,16,35,6827,6829,6828,6826,0,17,18,18,17,35,6829,6831,6830,6828,0,18,19,19,18,35,6831,6825,6824,6830,0,19,16,16,19,35,6833,6835,6834,6832,0,16,17,17,16,35,6835,6837,6836,6834,0,17,18,18,17,35,6837,6839,6838,6836,0,18,19,19,18,35,6839,6833,6832,6838,0,19,16,16,19,35,6841,6843,6842,6840,0,12,13,13,12,35,6843,6845,6844,6842,0,13,14,14,13,35,6845,6847,6846,6844,0,14,15,15,14,35,6847,6841,6840,6846,0,15,12,12,15,35,6849,6851,6850,6848,0,12,13,13,12,35,6851,6853,6852,6850,0,13,14,14,13,35,6853,6855,6854,6852,0,14,15,15,14,35,6855,6849,6848,6854,0,15,12,12,15,35,6857,6859,6858,6856,0,16,17,17,16,35,6859,6861,6860,6858,0,17,18,18,17,35,6861,6863,6862,6860,0,18,19,19,18,35,6863,6857,6856,6862,0,19,16,16,19,35,6865,6867,6866,6864,0,16,17,17,16,35,6867,6869,6868,6866,0,17,18,18,17,35,6869,6871,6870,6868,0,18,19,19,18,35,6871,6865,6864,6870,0,19,16,16,19,35,6873,6875,6874,6872,0,16,17,17,16,35,6875,6877,6876,6874,0,17,18,18,17,35,6877,6879,6878,6876,0,18,19,19,18,35,6879,6873,6872,6878,0,19,16,16,19,35,6881,6883,6882,6880,0,16,17,17,16,35,6883,6885,6884,6882,0,17,18,18,17,35,6885,6887,6886,6884,0,18,19,19,18,35,6887,6881,6880,6886,0,19,16,16,19,35,6889,6891,6890,6888,0,16,17,17,16,35,6891,6893,6892,6890,0,17,18,18,17,35,6893,6895,6894,6892,0,18,19,19,18,35,6895,6889,6888,6894,0,19,16,16,19,35,6897,6899,6898,6896,0,16,17,17,16,35,6899,6901,6900,6898,0,17,18,18,17,35,6901,6903,6902,6900,0,18,19,19,18,35,6903,6897,6896,6902,0,19,16,16,19,35,6905,6907,6906,6904,0,16,17,17,16,35,6907,6909,6908,6906,0,17,18,18,17,35,6909,6911,6910,6908,0,18,19,19,18,35,6911,6905,6904,6910,0,19,16,16,19,35,6913,6915,6914,6912,0,16,17,17,16,35,6915,6917,6916,6914,0,17,18,18,17,35,6917,6919,6918,6916,0,18,19,19,18,35,6919,6913,6912,6918,0,19,16,16,19,35,6921,6923,6922,6920,0,16,17,17,16,35,6923,6925,6924,6922,0,17,18,18,17,35,6925,6927,6926,6924,0,18,19,19,18,35,6927,6921,6920,6926,0,19,16,16,19,35,6929,6931,6930,6928,0,16,17,17,16,35,6931,6933,6932,6930,0,17,18,18,17,35,6933,6935,6934,6932,0,18,19,19,18,35,6935,6929,6928,6934,0,19,16,16,19,35,6937,6939,6938,6936,0,16,17,17,16,35,6939,6941,6940,6938,0,17,18,18,17,35,6941,6943,6942,6940,0,18,19,19,18,35,6943,6937,6936,6942,0,19,16,16,19,35,6945,6947,6946,6944,0,16,17,17,16,35,6947,6949,6948,6946,0,17,18,18,17,35,6949,6951,6950,6948,0,18,19,19,18,35,6951,6945,6944,6950,0,19,16,16,19,35,6953,6955,6954,6952,0,12,13,13,12,35,6955,6957,6956,6954,0,13,14,14,13,35,6957,6959,6958,6956,0,14,15,15,14,35,6959,6953,6952,6958,0,15,12,12,15,35,6961,6963,6962,6960,0,12,13,13,12,35,6963,6965,6964,6962,0,13,14,14,13,35,6965,6967,6966,6964,0,14,15,15,14,35,6967,6961,6960,6966,0,15,12,12,15,35,6969,6971,6970,6968,0,16,17,17,16,35,6971,6973,6972,6970,0,17,18,18,17,35,6973,6975,6974,6972,0,18,19,19,18,35,6975,6969,6968,6974,0,19,16,16,19,35,6977,6979,6978,6976,0,16,17,17,16,35,6979,6981,6980,6978,0,17,18,18,17,35,6981,6983,6982,6980,0,18,19,19,18,35,6983,6977,6976,6982,0,19,16,16,19,35,6985,6987,6986,6984,0,16,17,17,16,35,6987,6989,6988,6986,0,17,18,18,17,35,6989,6991,6990,6988,0,18,19,19,18,35,6991,6985,6984,6990,0,19,16,16,19,35,6993,6995,6994,6992,0,16,17,17,16,35,6995,6997,6996,6994,0,17,18,18,17,35,6997,6999,6998,6996,0,18,19,19,18,35,6999,6993,6992,6998,0,19,16,16,19,35,7001,7003,7002,7000,0,16,17,17,16,35,7003,7005,7004,7002,0,17,18,18,17,35,7005,7007,7006,7004,0,18,19,19,18,35,7007,7001,7000,7006,0,19,16,16,19,35,7009,7011,7010,7008,0,16,17,17,16,35,7011,7013,7012,7010,0,17,18,18,17,35,7013,7015,7014,7012,0,18,19,19,18,35,7015,7009,7008,7014,0,19,16,16,19,35,7017,7019,7018,7016,0,16,17,17,16,35,7019,7021,7020,7018,0,17,18,18,17,35,7021,7023,7022,7020,0,18,19,19,18,35,7023,7017,7016,7022,0,19,16,16,19,35,7025,7027,7026,7024,0,16,17,17,16,35,7027,7029,7028,7026,0,17,18,18,17,35,7029,7031,7030,7028,0,18,19,19,18,35,7031,7025,7024,7030,0,19,16,16,19,35,7033,7035,7034,7032,0,16,17,17,16,35,7035,7037,7036,7034,0,17,18,18,17,35,7037,7039,7038,7036,0,18,19,19,18,35,7039,7033,7032,7038,0,19,16,16,19,35,7041,7043,7042,7040,0,16,17,17,16,35,7043,7045,7044,7042,0,17,18,18,17,35,7045,7047,7046,7044,0,18,19,19,18,35,7047,7041,7040,7046,0,19,16,16,19,35,7049,7051,7050,7048,0,12,13,13,12,35,7051,7053,7052,7050,0,13,14,14,13,35,7053,7055,7054,7052,0,14,15,15,14,35,7055,7049,7048,7054,0,15,12,12,15]
rocket-3d/web/obj/rocket_model.js:}
rocket-3d/web/rocket1.html:<!DOCTYPE html>
rocket-3d/web/rocket1.html:<html>
rocket-3d/web/rocket1.html:  <head>
rocket-3d/web/rocket1.html:    <title>Welcome to our world</title>
rocket-3d/web/rocket1.html:    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
rocket-3d/web/rocket1.html:    <!--[if IE]><script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
rocket-3d/web/rocket1.html:  </head>
rocket-3d/web/rocket1.html:  <body>
rocket-3d/web/rocket1.html:    <script src="js/Three.js"></script>
rocket-3d/web/rocket1.html:    <script src="js/Detector.js"></script>
rocket-3d/web/rocket1.html:    <script src="js/RequestAnimationFrame.js"></script>
rocket-3d/web/rocket1.html:    <script src="js/Stats.js"></script>
rocket-3d/web/rocket1.html:    <script src="js/jquery.min.js"></script>
rocket-3d/web/rocket1.html:    <!--<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>-->
rocket-3d/web/rocket1.html:    <script src="jquery.rocket-3d-anim1.js"></script>
rocket-3d/web/rocket1.html:    <p><a id="clickme" href="#">click me !</a></p>
rocket-3d/web/rocket1.html:    <p>or: <span>↑ ↑ ↓ ↓ ← → ← → B A</span></p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <p>Lorem Ipsum</p>
rocket-3d/web/rocket1.html:    <table>
rocket-3d/web/rocket1.html:      <tr><td>width</td><td id="aawidth"></td></tr>
rocket-3d/web/rocket1.html:      <tr><td>height</td><td id="aaheight"></td></tr>
rocket-3d/web/rocket1.html:      <tr><td>camera</td><td id="aacamera"></td></tr>
rocket-3d/web/rocket1.html:      <tr><td>step</td><td id="aastep"></td></tr>
rocket-3d/web/rocket1.html:      <tr><td>sleep_counter</td><td id="aasleep_counter"></td></tr>
rocket-3d/web/rocket1.html:      <tr><td>rotation.x</td><td id="rotationx"></td></tr>
rocket-3d/web/rocket1.html:      <tr><td>rotation.y</td><td id="rotationy"></td></tr>
rocket-3d/web/rocket1.html:      <tr><td>rotation.z</td><td id="rotationz"></td></tr>
rocket-3d/web/rocket1.html:      <tr><td>position.x</td><td id="positionx"></td></tr>
rocket-3d/web/rocket1.html:      <tr><td>position.y</td><td id="positiony"></td></tr>
rocket-3d/web/rocket1.html:      <tr><td>position.z</td><td id="positionz"></td></tr>
rocket-3d/web/rocket1.html:    </table>
rocket-3d/web/rocket1.html:    <script type="text/javascript">
rocket-3d/web/rocket1.html:      $(window).rocket3d({enterOn: 'now'});
rocket-3d/web/rocket1.html:      //$(window).rocket3d({enterOn: 'timer', delayTime: 2000});
rocket-3d/web/rocket1.html:      $(window).rocket3d({enterOn: 'konami-code'});
rocket-3d/web/rocket1.html:      $('#clickme').rocket3d({enterOn: 'click'});
rocket-3d/web/rocket1.html:    </script>
rocket-3d/web/rocket1.html:  </body>
rocket-3d/web/rocket1.html:</html>
rocket-3d/web/test.html:<!doctype html>
rocket-3d/web/test.html:<html lang="en">
rocket-3d/web/test.html:	<head>
rocket-3d/web/test.html:		<title>three.js webgl - free_rocket </title>
rocket-3d/web/test.html:		<meta charset="utf-8">
rocket-3d/web/test.html:		<style>
rocket-3d/web/test.html:			body {
rocket-3d/web/test.html:				color: #eee;
rocket-3d/web/test.html:				font-family:Monospace;
rocket-3d/web/test.html:				font-size:13px;
rocket-3d/web/test.html:				text-align:center;
rocket-3d/web/test.html:				background-color: #ccc;
rocket-3d/web/test.html:				margin: 0px;
rocket-3d/web/test.html:				padding: 0px;
rocket-3d/web/test.html:				overflow: hidden;
rocket-3d/web/test.html:			}
rocket-3d/web/test.html:			#info {
rocket-3d/web/test.html:				position: absolute;
rocket-3d/web/test.html:				top: 0px; width: 100%;
rocket-3d/web/test.html:				padding: 5px;
rocket-3d/web/test.html:			}
rocket-3d/web/test.html:			a {
rocket-3d/web/test.html:				color: #0080ff;
rocket-3d/web/test.html:			}
rocket-3d/web/test.html:		</style>
rocket-3d/web/test.html:	</head>
rocket-3d/web/test.html:	<body>
rocket-3d/web/test.html:		<div id="container"></div>
rocket-3d/web/test.html:		<div id="info">three.js webgl - free_rocket</div>
rocket-3d/web/test.html:		<script src="js/Three.js"></script>
rocket-3d/web/test.html:		<script src="js/Detector.js"></script>
rocket-3d/web/test.html:		<script src="js/RequestAnimationFrame.js"></script>
rocket-3d/web/test.html:		<script src="js/Stats.js"></script>
rocket-3d/web/test.html:		<script>
rocket-3d/web/test.html:			if ( ! Detector.webgl ) Detector.addGetWebGLMessage();
rocket-3d/web/test.html:			var container, stats;
rocket-3d/web/test.html:			var camera, scene, renderer;
rocket-3d/web/test.html:			var mesh, mesh2, mesh3, light;
rocket-3d/web/test.html:			var mouseX = 0, mouseY = 0;
rocket-3d/web/test.html:			var windowHalfX = window.innerWidth / 2;
rocket-3d/web/test.html:			var windowHalfY = window.innerHeight / 2;
rocket-3d/web/test.html:			init();
rocket-3d/web/test.html:			animate();
rocket-3d/web/test.html:			function init() {
rocket-3d/web/test.html:				container = document.getElementById( 'container' );
rocket-3d/web/test.html:				camera = new THREE.PerspectiveCamera( 40, window.innerWidth / window.innerHeight, 1, 10000 );
rocket-3d/web/test.html:				camera.position.z = 1800;
rocket-3d/web/test.html:				scene = new THREE.Scene();
rocket-3d/web/test.html:				light = new THREE.DirectionalLight( 0xffffff );
rocket-3d/web/test.html:				light.position.set( 0, 0, 1 ).normalize();
rocket-3d/web/test.html:				scene.add( light );
rocket-3d/web/test.html:				var loader = new THREE.JSONLoader();
rocket-3d/web/test.html:				loader.load( "obj/rocket3d.js", createScene1);
rocket-3d/web/test.html:				renderer = new THREE.WebGLRenderer( { antialias: true } );
rocket-3d/web/test.html:				renderer.setSize( window.innerWidth, window.innerHeight );
rocket-3d/web/test.html:				container.appendChild( renderer.domElement );
rocket-3d/web/test.html:				stats = new Stats();
rocket-3d/web/test.html:				stats.domElement.style.position = 'absolute';
rocket-3d/web/test.html:				stats.domElement.style.top = '0px';
rocket-3d/web/test.html:				container.appendChild( stats.domElement );
rocket-3d/web/test.html:				document.addEventListener( 'mousemove', onDocumentMouseMove, false );
rocket-3d/web/test.html:			}
rocket-3d/web/test.html:			function createScene1( geometry ) {
rocket-3d/web/test.html:				geometry.materials[ 0 ].shading = THREE.FlatShading;
rocket-3d/web/test.html:				mesh = new THREE.Object3D();
rocket-3d/web/test.html:				mesh.position.x = 0;
rocket-3d/web/test.html:				mesh.scale.x = mesh.scale.y = mesh.scale.z = 150;
rocket-3d/web/test.html:				scene.add( mesh );
rocket-3d/web/test.html:				var part1 = new THREE.Mesh( geometry, new THREE.MeshPhongMaterial( {map:THREE.ImageUtils.loadTexture('tex/rocket3d_uvmap.png')} ) );
rocket-3d/web/test.html:				mesh.add( part1 );
rocket-3d/web/test.html:				//var part2 = new THREE.Mesh( geometry, new THREE.MeshLambertMaterial( { color: 0xffffff, opacity: 0.9, shading: THREE.FlatShading, wireframe: true, wireframeLinewidth: 2, transparent: true } ) );
rocket-3d/web/test.html:				//mesh.add( part2 );
rocket-3d/web/test.html:			}
rocket-3d/web/test.html:			function createScene2( geometry ) {
rocket-3d/web/test.html:				geometry.materials[ 0 ].shading = THREE.FlatShading;
rocket-3d/web/test.html:				var material = new THREE.MeshFaceMaterial();
rocket-3d/web/test.html:				mesh2 = new THREE.Mesh( geometry, material );
rocket-3d/web/test.html:				mesh2.position.x = 0;
rocket-3d/web/test.html:				mesh2.scale.x = mesh2.scale.y = mesh2.scale.z = 250;
rocket-3d/web/test.html:				scene.add( mesh2 );
rocket-3d/web/test.html:			}
rocket-3d/web/test.html:			function onDocumentMouseMove( event ) {
rocket-3d/web/test.html:				mouseX = ( event.clientX - windowHalfX );
rocket-3d/web/test.html:				mouseY = ( event.clientY - windowHalfY );
rocket-3d/web/test.html:			}
rocket-3d/web/test.html:			//
rocket-3d/web/test.html:			function animate() {
rocket-3d/web/test.html:				requestAnimationFrame( animate );
rocket-3d/web/test.html:				render();
rocket-3d/web/test.html:				stats.update();
rocket-3d/web/test.html:			}
rocket-3d/web/test.html:			function render() {
rocket-3d/web/test.html:				camera.position.x += ( mouseX - camera.position.x ) * 0.05;
rocket-3d/web/test.html:				camera.position.y += ( - mouseY - camera.position.y ) * 0.05;
rocket-3d/web/test.html:				camera.lookAt( scene.position );
rocket-3d/web/test.html:				if ( mesh ) {
rocket-3d/web/test.html:					mesh.rotation.x += 0.01;
rocket-3d/web/test.html:					mesh.rotation.y += 0.01;
rocket-3d/web/test.html:				}
rocket-3d/web/test.html:				if ( mesh2 ) {
rocket-3d/web/test.html:					mesh2.rotation.x += 0.01;
rocket-3d/web/test.html:					mesh2.rotation.y += 0.01;
rocket-3d/web/test.html:				}
rocket-3d/web/test.html:				renderer.render( scene, camera );
rocket-3d/web/test.html:			}
rocket-3d/web/test.html:		</script>
rocket-3d/web/test.html:	</body>
rocket-3d/web/test.html:</html>
rocket-nyan/index.html:<!DOCTYPE html>
rocket-nyan/index.html:<html>
rocket-nyan/index.html:  <head>
rocket-nyan/index.html:    <title>Welcome to our world</title>
rocket-nyan/index.html:    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
rocket-nyan/index.html:    <!--[if IE]><script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
rocket-nyan/index.html:  </head>
rocket-nyan/index.html:  <body>
rocket-nyan/index.html:    <script src="http://swfobject.googlecode.com/svn/trunk/swfobject/swfobject.js"></script>
rocket-nyan/index.html:    <!--<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>-->
rocket-nyan/index.html:    <script src="js/jquery.min.js"></script>
rocket-nyan/index.html:    <script src="jquery.rocket-nyan.js"></script>
rocket-nyan/index.html:    <p>or: <span>↑ ↑ ↓ ↓ ← → ← → B A</span></p>
rocket-nyan/index.html:  </body>
rocket-nyan/index.html:</html>
rocket-nyan/jquery.rocket-nyan.js:/**
rocket-nyan/jquery.rocket-nyan.js: * http://www.free.fr/js/components/accueil/index.js
rocket-nyan/jquery.rocket-nyan.js: */
rocket-nyan/jquery.rocket-nyan.js:var keys = [];
rocket-nyan/jquery.rocket-nyan.js:var VroumVroum  = '38,38,40,40,37,39,37,39,66,65';
rocket-nyan/jquery.rocket-nyan.js:$(document)
rocket-nyan/jquery.rocket-nyan.js:    .keydown(
rocket-nyan/jquery.rocket-nyan.js:        function(e) {
rocket-nyan/jquery.rocket-nyan.js:            keys.push(e.keyCode);
rocket-nyan/jquery.rocket-nyan.js:            if (keys.toString().indexOf(VroumVroum) >= 0 ){
rocket-nyan/jquery.rocket-nyan.js:                $('body').append('<div id="KCode" style="position:absolute; z-index:1337;left:0px; top:0px; bottom:-30px; right:0px; display:none; background:url(nrbg.gif) ; padding-left:50%; padding-top:20%"><img src="nyanrocket.gif" style="margin-top:-160px; margin-left:-315px;"/></div><div id="loveboat" style="position:absolute; height:1px;width:1px; top:-100px;"></div>');
rocket-nyan/jquery.rocket-nyan.js:                var atts = { id: "video" };
rocket-nyan/jquery.rocket-nyan.js:                var params = {
rocket-nyan/jquery.rocket-nyan.js:                    allowScriptAccess: "always",
rocket-nyan/jquery.rocket-nyan.js:                    'wmode':'transparent'
rocket-nyan/jquery.rocket-nyan.js:                };
rocket-nyan/jquery.rocket-nyan.js:                if (typeof(swfobject) != 'undefined') {
rocket-nyan/jquery.rocket-nyan.js:                    swfobject.embedSWF("http://www.youtube.com/apiplayer?video_id=icAwcByaNtY&version=3&autoplay=1&enablejsapi=1&playerapiid=ytplayer","loveboat", "1", "1", "8", null, null, params, atts);
rocket-nyan/jquery.rocket-nyan.js:                }
rocket-nyan/jquery.rocket-nyan.js:                $('#KCode').fadeIn(2000);
rocket-nyan/jquery.rocket-nyan.js:                keys = [];
rocket-nyan/jquery.rocket-nyan.js:            }
rocket-nyan/jquery.rocket-nyan.js:        }
rocket-nyan/jquery.rocket-nyan.js:    );
rocket-nyan/js/jquery.min.js:/*!
rocket-nyan/js/jquery.min.js: * jQuery JavaScript Library v1.4.2
rocket-nyan/js/jquery.min.js: * http://jquery.com/
rocket-nyan/js/jquery.min.js: *
rocket-nyan/js/jquery.min.js: * Copyright 2010, John Resig
rocket-nyan/js/jquery.min.js: * Dual licensed under the MIT or GPL Version 2 licenses.
rocket-nyan/js/jquery.min.js: * http://jquery.org/license
rocket-nyan/js/jquery.min.js: *
rocket-nyan/js/jquery.min.js: * Includes Sizzle.js
rocket-nyan/js/jquery.min.js: * http://sizzlejs.com/
rocket-nyan/js/jquery.min.js: * Copyright 2010, The Dojo Foundation
rocket-nyan/js/jquery.min.js: * Released under the MIT, BSD, and GPL Licenses.
rocket-nyan/js/jquery.min.js: *
rocket-nyan/js/jquery.min.js: * Date: Sat Feb 13 22:33:48 2010 -0500
rocket-nyan/js/jquery.min.js: */
rocket-nyan/js/jquery.min.js:(function(A,w){function ma(){if(!c.isReady){try{s.documentElement.doScroll("left")}catch(a){setTimeout(ma,1);return}c.ready()}}function Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalEval(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.removeChild(b)}function X(a,b,d,f,e,j){var i=a.length;if(typeof b==="object"){for(var o in b)X(a,o,b[o],f,e,d);return a}if(d!==w){f=!j&&f&&c.isFunction(d);for(o=0;o<i;o++)e(a[o],b,f?d.call(a[o],o,e(a[o],b)):d,j);return a}return i?
rocket-nyan/js/jquery.min.js:e(a[0],b):w}function J(){return(new Date).getTime()}function Y(){return false}function Z(){return true}function na(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function oa(a){var b,d=[],f=[],e=arguments,j,i,o,k,n,r;i=c.data(this,"events");if(!(a.liveFired===this||!i||!i.live||a.button&&a.type==="click")){a.liveFired=this;var u=i.live.slice(0);for(k=0;k<u.length;k++){i=u[k];i.origType.replace(O,"")===a.type?f.push(i.selector):u.splice(k--,1)}j=c(a.target).closest(f,a.currentTarget);n=0;for(r=
rocket-nyan/js/jquery.min.js:j.length;n<r;n++)for(k=0;k<u.length;k++){i=u[k];if(j[n].selector===i.selector){o=j[n].elem;f=null;if(i.preType==="mouseenter"||i.preType==="mouseleave")f=c(a.relatedTarget).closest(i.selector)[0];if(!f||f!==o)d.push({elem:o,handleObj:i})}}n=0;for(r=d.length;n<r;n++){j=d[n];a.currentTarget=j.elem;a.data=j.handleObj.data;a.handleObj=j.handleObj;if(j.handleObj.origHandler.apply(j.elem,e)===false){b=false;break}}return b}}function pa(a,b){return"live."+(a&&a!=="*"?a+".":"")+b.replace(/\./g,"`").replace(/ /g,
rocket-nyan/js/jquery.min.js:"&")}function qa(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function ra(a,b){var d=0;b.each(function(){if(this.nodeName===(a[d]&&a[d].nodeName)){var f=c.data(a[d++]),e=c.data(this,f);if(f=f&&f.events){delete e.handle;e.events={};for(var j in f)for(var i in f[j])c.event.add(this,j,f[j][i],f[j][i].data)}}})}function sa(a,b,d){var f,e,j;b=b&&b[0]?b[0].ownerDocument||b[0]:s;if(a.length===1&&typeof a[0]==="string"&&a[0].length<512&&b===s&&!ta.test(a[0])&&(c.support.checkClone||!ua.test(a[0]))){e=
rocket-nyan/js/jquery.min.js:true;if(j=c.fragments[a[0]])if(j!==1)f=j}if(!f){f=b.createDocumentFragment();c.clean(a,b,f,d)}if(e)c.fragments[a[0]]=j?f:1;return{fragment:f,cacheable:e}}function K(a,b){var d={};c.each(va.concat.apply([],va.slice(0,b)),function(){d[this]=a});return d}function wa(a){return"scrollTo"in a&&a.document?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var c=function(a,b){return new c.fn.init(a,b)},Ra=A.jQuery,Sa=A.$,s=A.document,T,Ta=/^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,Ua=/^.[^:#\[\.,]*$/,Va=/\S/,
rocket-nyan/js/jquery.min.js:Wa=/^(\s|\u00A0)+|(\s|\u00A0)+$/g,Xa=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,P=navigator.userAgent,xa=false,Q=[],L,$=Object.prototype.toString,aa=Object.prototype.hasOwnProperty,ba=Array.prototype.push,R=Array.prototype.slice,ya=Array.prototype.indexOf;c.fn=c.prototype={init:function(a,b){var d,f;if(!a)return this;if(a.nodeType){this.context=this[0]=a;this.length=1;return this}if(a==="body"&&!b){this.context=s;this[0]=s.body;this.selector="body";this.length=1;return this}if(typeof a==="string")if((d=Ta.exec(a))&&
rocket-nyan/js/jquery.min.js:(d[1]||!b))if(d[1]){f=b?b.ownerDocument||b:s;if(a=Xa.exec(a))if(c.isPlainObject(b)){a=[s.createElement(a[1])];c.fn.attr.call(a,b,true)}else a=[f.createElement(a[1])];else{a=sa([d[1]],[f]);a=(a.cacheable?a.fragment.cloneNode(true):a.fragment).childNodes}return c.merge(this,a)}else{if(b=s.getElementById(d[2])){if(b.id!==d[2])return T.find(a);this.length=1;this[0]=b}this.context=s;this.selector=a;return this}else if(!b&&/^\w+$/.test(a)){this.selector=a;this.context=s;a=s.getElementsByTagName(a);return c.merge(this,
rocket-nyan/js/jquery.min.js:a)}else return!b||b.jquery?(b||T).find(a):c(b).find(a);else if(c.isFunction(a))return T.ready(a);if(a.selector!==w){this.selector=a.selector;this.context=a.context}return c.makeArray(a,this)},selector:"",jquery:"1.4.2",length:0,size:function(){return this.length},toArray:function(){return R.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this.slice(a)[0]:this[a]},pushStack:function(a,b,d){var f=c();c.isArray(a)?ba.apply(f,a):c.merge(f,a);f.prevObject=this;f.context=this.context;if(b===
rocket-nyan/js/jquery.min.js:"find")f.selector=this.selector+(this.selector?" ":"")+d;else if(b)f.selector=this.selector+"."+b+"("+d+")";return f},each:function(a,b){return c.each(this,a,b)},ready:function(a){c.bindReady();if(c.isReady)a.call(s,c);else Q&&Q.push(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(R.apply(this,arguments),"slice",R.call(arguments).join(","))},map:function(a){return this.pushStack(c.map(this,
rocket-nyan/js/jquery.min.js:function(b,d){return a.call(b,d,b)}))},end:function(){return this.prevObject||c(null)},push:ba,sort:[].sort,splice:[].splice};c.fn.init.prototype=c.fn;c.extend=c.fn.extend=function(){var a=arguments[0]||{},b=1,d=arguments.length,f=false,e,j,i,o;if(typeof a==="boolean"){f=a;a=arguments[1]||{};b=2}if(typeof a!=="object"&&!c.isFunction(a))a={};if(d===b){a=this;--b}for(;b<d;b++)if((e=arguments[b])!=null)for(j in e){i=a[j];o=e[j];if(a!==o)if(f&&o&&(c.isPlainObject(o)||c.isArray(o))){i=i&&(c.isPlainObject(i)||
rocket-nyan/js/jquery.min.js:c.isArray(i))?i:c.isArray(o)?[]:{};a[j]=c.extend(f,i,o)}else if(o!==w)a[j]=o}return a};c.extend({noConflict:function(a){A.$=Sa;if(a)A.jQuery=Ra;return c},isReady:false,ready:function(){if(!c.isReady){if(!s.body)return setTimeout(c.ready,13);c.isReady=true;if(Q){for(var a,b=0;a=Q[b++];)a.call(s,c);Q=null}c.fn.triggerHandler&&c(s).triggerHandler("ready")}},bindReady:function(){if(!xa){xa=true;if(s.readyState==="complete")return c.ready();if(s.addEventListener){s.addEventListener("DOMContentLoaded",
rocket-nyan/js/jquery.min.js:L,false);A.addEventListener("load",c.ready,false)}else if(s.attachEvent){s.attachEvent("onreadystatechange",L);A.attachEvent("onload",c.ready);var a=false;try{a=A.frameElement==null}catch(b){}s.documentElement.doScroll&&a&&ma()}}},isFunction:function(a){return $.call(a)==="[object Function]"},isArray:function(a){return $.call(a)==="[object Array]"},isPlainObject:function(a){if(!a||$.call(a)!=="[object Object]"||a.nodeType||a.setInterval)return false;if(a.constructor&&!aa.call(a,"constructor")&&!aa.call(a.constructor.prototype,
rocket-nyan/js/jquery.min.js:"isPrototypeOf"))return false;var b;for(b in a);return b===w||aa.call(a,b)},isEmptyObject:function(a){for(var b in a)return false;return true},error:function(a){throw a;},parseJSON:function(a){if(typeof a!=="string"||!a)return null;a=c.trim(a);if(/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return A.JSON&&A.JSON.parse?A.JSON.parse(a):(new Function("return "+
rocket-nyan/js/jquery.min.js:a))();else c.error("Invalid JSON: "+a)},noop:function(){},globalEval:function(a){if(a&&Va.test(a)){var b=s.getElementsByTagName("head")[0]||s.documentElement,d=s.createElement("script");d.type="text/javascript";if(c.support.scriptEval)d.appendChild(s.createTextNode(a));else d.text=a;b.insertBefore(d,b.firstChild);b.removeChild(d)}},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,b,d){var f,e=0,j=a.length,i=j===w||c.isFunction(a);if(d)if(i)for(f in a){if(b.apply(a[f],
rocket-nyan/js/jquery.min.js:d)===false)break}else for(;e<j;){if(b.apply(a[e++],d)===false)break}else if(i)for(f in a){if(b.call(a[f],f,a[f])===false)break}else for(d=a[0];e<j&&b.call(d,e,d)!==false;d=a[++e]);return a},trim:function(a){return(a||"").replace(Wa,"")},makeArray:function(a,b){b=b||[];if(a!=null)a.length==null||typeof a==="string"||c.isFunction(a)||typeof a!=="function"&&a.setInterval?ba.call(b,a):c.merge(b,a);return b},inArray:function(a,b){if(b.indexOf)return b.indexOf(a);for(var d=0,f=b.length;d<f;d++)if(b[d]===
rocket-nyan/js/jquery.min.js:a)return d;return-1},merge:function(a,b){var d=a.length,f=0;if(typeof b.length==="number")for(var e=b.length;f<e;f++)a[d++]=b[f];else for(;b[f]!==w;)a[d++]=b[f++];a.length=d;return a},grep:function(a,b,d){for(var f=[],e=0,j=a.length;e<j;e++)!d!==!b(a[e],e)&&f.push(a[e]);return f},map:function(a,b,d){for(var f=[],e,j=0,i=a.length;j<i;j++){e=b(a[j],j,d);if(e!=null)f[f.length]=e}return f.concat.apply([],f)},guid:1,proxy:function(a,b,d){if(arguments.length===2)if(typeof b==="string"){d=a;a=d[b];b=w}else if(b&&
rocket-nyan/js/jquery.min.js:!c.isFunction(b)){d=b;b=w}if(!b&&a)b=function(){return a.apply(d||this,arguments)};if(a)b.guid=a.guid=a.guid||b.guid||c.guid++;return b},uaMatch:function(a){a=a.toLowerCase();a=/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version)?[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||!/compatible/.test(a)&&/(mozilla)(?:.*? rv:([\w.]+))?/.exec(a)||[];return{browser:a[1]||"",version:a[2]||"0"}},browser:{}});P=c.uaMatch(P);if(P.browser){c.browser[P.browser]=true;c.browser.version=P.version}if(c.browser.webkit)c.browser.safari=
rocket-nyan/js/jquery.min.js:true;if(ya)c.inArray=function(a,b){return ya.call(b,a)};T=c(s);if(s.addEventListener)L=function(){s.removeEventListener("DOMContentLoaded",L,false);c.ready()};else if(s.attachEvent)L=function(){if(s.readyState==="complete"){s.detachEvent("onreadystatechange",L);c.ready()}};(function(){c.support={};var a=s.documentElement,b=s.createElement("script"),d=s.createElement("div"),f="script"+J();d.style.display="none";d.innerHTML="   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
rocket-nyan/js/jquery.min.js:var e=d.getElementsByTagName("*"),j=d.getElementsByTagName("a")[0];if(!(!e||!e.length||!j)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("link").length,style:/red/.test(j.getAttribute("style")),hrefNormalized:j.getAttribute("href")==="/a",opacity:/^0.55$/.test(j.style.opacity),cssFloat:!!j.style.cssFloat,checkOn:d.getElementsByTagName("input")[0].value==="on",optSelected:s.createElement("select").appendChild(s.createElement("option")).selected,
rocket-nyan/js/jquery.min.js:parentNode:d.removeChild(d.appendChild(s.createElement("div"))).parentNode===null,deleteExpando:true,checkClone:false,scriptEval:false,noCloneEvent:true,boxModel:null};b.type="text/javascript";try{b.appendChild(s.createTextNode("window."+f+"=1;"))}catch(i){}a.insertBefore(b,a.firstChild);if(A[f]){c.support.scriptEval=true;delete A[f]}try{delete b.test}catch(o){c.support.deleteExpando=false}a.removeChild(b);if(d.attachEvent&&d.fireEvent){d.attachEvent("onclick",function k(){c.support.noCloneEvent=
rocket-nyan/js/jquery.min.js:false;d.detachEvent("onclick",k)});d.cloneNode(true).fireEvent("onclick")}d=s.createElement("div");d.innerHTML="<input type='radio' name='radiotest' checked='checked'/>";a=s.createDocumentFragment();a.appendChild(d.firstChild);c.support.checkClone=a.cloneNode(true).cloneNode(true).lastChild.checked;c(function(){var k=s.createElement("div");k.style.width=k.style.paddingLeft="1px";s.body.appendChild(k);c.boxModel=c.support.boxModel=k.offsetWidth===2;s.body.removeChild(k).style.display="none"});a=function(k){var n=
rocket-nyan/js/jquery.min.js:s.createElement("div");k="on"+k;var r=k in n;if(!r){n.setAttribute(k,"return;");r=typeof n[k]==="function"}return r};c.support.submitBubbles=a("submit");c.support.changeBubbles=a("change");a=b=d=e=j=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};var G="jQuery"+J(),Ya=0,za={};c.extend({cache:{},expando:G,noData:{embed:true,object:true,
rocket-nyan/js/jquery.min.js:applet:true},data:function(a,b,d){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var f=a[G],e=c.cache;if(!f&&typeof b==="string"&&d===w)return null;f||(f=++Ya);if(typeof b==="object"){a[G]=f;e[f]=c.extend(true,{},b)}else if(!e[f]){a[G]=f;e[f]={}}a=e[f];if(d!==w)a[b]=d;return typeof b==="string"?a[b]:a}},removeData:function(a,b){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var d=a[G],f=c.cache,e=f[d];if(b){if(e){delete e[b];c.isEmptyObject(e)&&c.removeData(a)}}else{if(c.support.deleteExpando)delete a[c.expando];
rocket-nyan/js/jquery.min.js:else a.removeAttribute&&a.removeAttribute(c.expando);delete f[d]}}}});c.fn.extend({data:function(a,b){if(typeof a==="undefined"&&this.length)return c.data(this[0]);else if(typeof a==="object")return this.each(function(){c.data(this,a)});var d=a.split(".");d[1]=d[1]?"."+d[1]:"";if(b===w){var f=this.triggerHandler("getData"+d[1]+"!",[d[0]]);if(f===w&&this.length)f=c.data(this[0],a);return f===w&&d[1]?this.data(d[0]):f}else return this.trigger("setData"+d[1]+"!",[d[0],b]).each(function(){c.data(this,
rocket-nyan/js/jquery.min.js:a,b)})},removeData:function(a){return this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var f=c.data(a,b);if(!d)return f||[];if(!f||c.isArray(d))f=c.data(a,b,c.makeArray(d));else f.push(d);return f}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),f=d.shift();if(f==="inprogress")f=d.shift();if(f){b==="fx"&&d.unshift("inprogress");f.call(a,function(){c.dequeue(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof a!=="string"){b=a;a="fx"}if(b===
rocket-nyan/js/jquery.min.js:w)return c.queue(this[0],a);return this.each(function(){var d=c.queue(this,a,b);a==="fx"&&d[0]!=="inprogress"&&c.dequeue(this,a)})},dequeue:function(a){return this.each(function(){c.dequeue(this,a)})},delay:function(a,b){a=c.fx?c.fx.speeds[a]||a:a;b=b||"fx";return this.queue(b,function(){var d=this;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])}});var Aa=/[\n\t]/g,ca=/\s+/,Za=/\r/g,$a=/href|src|style/,ab=/(button|input)/i,bb=/(button|input|object|select|textarea)/i,
rocket-nyan/js/jquery.min.js:cb=/^(a|area)$/i,Ba=/radio|checkbox/;c.fn.extend({attr:function(a,b){return X(this,a,b,true,c.attr)},removeAttr:function(a){return this.each(function(){c.attr(this,a,"");this.nodeType===1&&this.removeAttribute(a)})},addClass:function(a){if(c.isFunction(a))return this.each(function(n){var r=c(this);r.addClass(a.call(this,n,r.attr("class")))});if(a&&typeof a==="string")for(var b=(a||"").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1)if(e.className){for(var j=" "+e.className+" ",
rocket-nyan/js/jquery.min.js:i=e.className,o=0,k=b.length;o<k;o++)if(j.indexOf(" "+b[o]+" ")<0)i+=" "+b[o];e.className=c.trim(i)}else e.className=a}return this},removeClass:function(a){if(c.isFunction(a))return this.each(function(k){var n=c(this);n.removeClass(a.call(this,k,n.attr("class")))});if(a&&typeof a==="string"||a===w)for(var b=(a||"").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1&&e.className)if(a){for(var j=(" "+e.className+" ").replace(Aa," "),i=0,o=b.length;i<o;i++)j=j.replace(" "+b[i]+" ",
rocket-nyan/js/jquery.min.js:" ");e.className=c.trim(j)}else e.className=""}return this},toggleClass:function(a,b){var d=typeof a,f=typeof b==="boolean";if(c.isFunction(a))return this.each(function(e){var j=c(this);j.toggleClass(a.call(this,e,j.attr("class"),b),b)});return this.each(function(){if(d==="string")for(var e,j=0,i=c(this),o=b,k=a.split(ca);e=k[j++];){o=f?o:!i.hasClass(e);i[o?"addClass":"removeClass"](e)}else if(d==="undefined"||d==="boolean"){this.className&&c.data(this,"__className__",this.className);this.className=
rocket-nyan/js/jquery.min.js:this.className||a===false?"":c.data(this,"__className__")||""}})},hasClass:function(a){a=" "+a+" ";for(var b=0,d=this.length;b<d;b++)if((" "+this[b].className+" ").replace(Aa," ").indexOf(a)>-1)return true;return false},val:function(a){if(a===w){var b=this[0];if(b){if(c.nodeName(b,"option"))return(b.attributes.value||{}).specified?b.value:b.text;if(c.nodeName(b,"select")){var d=b.selectedIndex,f=[],e=b.options;b=b.type==="select-one";if(d<0)return null;var j=b?d:0;for(d=b?d+1:e.length;j<d;j++){var i=
rocket-nyan/js/jquery.min.js:e[j];if(i.selected){a=c(i).val();if(b)return a;f.push(a)}}return f}if(Ba.test(b.type)&&!c.support.checkOn)return b.getAttribute("value")===null?"on":b.value;return(b.value||"").replace(Za,"")}return w}var o=c.isFunction(a);return this.each(function(k){var n=c(this),r=a;if(this.nodeType===1){if(o)r=a.call(this,k,n.val());if(typeof r==="number")r+="";if(c.isArray(r)&&Ba.test(this.type))this.checked=c.inArray(n.val(),r)>=0;else if(c.nodeName(this,"select")){var u=c.makeArray(r);c("option",this).each(function(){this.selected=
rocket-nyan/js/jquery.min.js:c.inArray(c(this).val(),u)>=0});if(!u.length)this.selectedIndex=-1}else this.value=r}})}});c.extend({attrFn:{val:true,css:true,html:true,text:true,data:true,width:true,height:true,offset:true},attr:function(a,b,d,f){if(!a||a.nodeType===3||a.nodeType===8)return w;if(f&&b in c.attrFn)return c(a)[b](d);f=a.nodeType!==1||!c.isXMLDoc(a);var e=d!==w;b=f&&c.props[b]||b;if(a.nodeType===1){var j=$a.test(b);if(b in a&&f&&!j){if(e){b==="type"&&ab.test(a.nodeName)&&a.parentNode&&c.error("type property can't be changed");
rocket-nyan/js/jquery.min.js:a[b]=d}if(c.nodeName(a,"form")&&a.getAttributeNode(b))return a.getAttributeNode(b).nodeValue;if(b==="tabIndex")return(b=a.getAttributeNode("tabIndex"))&&b.specified?b.value:bb.test(a.nodeName)||cb.test(a.nodeName)&&a.href?0:w;return a[b]}if(!c.support.style&&f&&b==="style"){if(e)a.style.cssText=""+d;return a.style.cssText}e&&a.setAttribute(b,""+d);a=!c.support.hrefNormalized&&f&&j?a.getAttribute(b,2):a.getAttribute(b);return a===null?w:a}return c.style(a,b,d)}});var O=/\.(.*)$/,db=function(a){return a.replace(/[^\w\s\.\|`]/g,
rocket-nyan/js/jquery.min.js:function(b){return"\\"+b})};c.event={add:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){if(a.setInterval&&a!==A&&!a.frameElement)a=A;var e,j;if(d.handler){e=d;d=e.handler}if(!d.guid)d.guid=c.guid++;if(j=c.data(a)){var i=j.events=j.events||{},o=j.handle;if(!o)j.handle=o=function(){return typeof c!=="undefined"&&!c.event.triggered?c.event.handle.apply(o.elem,arguments):w};o.elem=a;b=b.split(" ");for(var k,n=0,r;k=b[n++];){j=e?c.extend({},e):{handler:d,data:f};if(k.indexOf(".")>-1){r=k.split(".");
rocket-nyan/js/jquery.min.js:k=r.shift();j.namespace=r.slice(0).sort().join(".")}else{r=[];j.namespace=""}j.type=k;j.guid=d.guid;var u=i[k],z=c.event.special[k]||{};if(!u){u=i[k]=[];if(!z.setup||z.setup.call(a,f,r,o)===false)if(a.addEventListener)a.addEventListener(k,o,false);else a.attachEvent&&a.attachEvent("on"+k,o)}if(z.add){z.add.call(a,j);if(!j.handler.guid)j.handler.guid=d.guid}u.push(j);c.event.global[k]=true}a=null}}},global:{},remove:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){var e,j=0,i,o,k,n,r,u,z=c.data(a),
rocket-nyan/js/jquery.min.js:C=z&&z.events;if(z&&C){if(b&&b.type){d=b.handler;b=b.type}if(!b||typeof b==="string"&&b.charAt(0)==="."){b=b||"";for(e in C)c.event.remove(a,e+b)}else{for(b=b.split(" ");e=b[j++];){n=e;i=e.indexOf(".")<0;o=[];if(!i){o=e.split(".");e=o.shift();k=new RegExp("(^|\\.)"+c.map(o.slice(0).sort(),db).join("\\.(?:.*\\.)?")+"(\\.|$)")}if(r=C[e])if(d){n=c.event.special[e]||{};for(B=f||0;B<r.length;B++){u=r[B];if(d.guid===u.guid){if(i||k.test(u.namespace)){f==null&&r.splice(B--,1);n.remove&&n.remove.call(a,u)}if(f!=
rocket-nyan/js/jquery.min.js:null)break}}if(r.length===0||f!=null&&r.length===1){if(!n.teardown||n.teardown.call(a,o)===false)Ca(a,e,z.handle);delete C[e]}}else for(var B=0;B<r.length;B++){u=r[B];if(i||k.test(u.namespace)){c.event.remove(a,n,u.handler,B);r.splice(B--,1)}}}if(c.isEmptyObject(C)){if(b=z.handle)b.elem=null;delete z.events;delete z.handle;c.isEmptyObject(z)&&c.removeData(a)}}}}},trigger:function(a,b,d,f){var e=a.type||a;if(!f){a=typeof a==="object"?a[G]?a:c.extend(c.Event(e),a):c.Event(e);if(e.indexOf("!")>=0){a.type=
rocket-nyan/js/jquery.min.js:e=e.slice(0,-1);a.exclusive=true}if(!d){a.stopPropagation();c.event.global[e]&&c.each(c.cache,function(){this.events&&this.events[e]&&c.event.trigger(a,b,this.handle.elem)})}if(!d||d.nodeType===3||d.nodeType===8)return w;a.result=w;a.target=d;b=c.makeArray(b);b.unshift(a)}a.currentTarget=d;(f=c.data(d,"handle"))&&f.apply(d,b);f=d.parentNode||d.ownerDocument;try{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d["on"+e]&&d["on"+e].apply(d,b)===false)a.result=false}catch(j){}if(!a.isPropagationStopped()&&
rocket-nyan/js/jquery.min.js:f)c.event.trigger(a,b,f,true);else if(!a.isDefaultPrevented()){f=a.target;var i,o=c.nodeName(f,"a")&&e==="click",k=c.event.special[e]||{};if((!k._default||k._default.call(d,a)===false)&&!o&&!(f&&f.nodeName&&c.noData[f.nodeName.toLowerCase()])){try{if(f[e]){if(i=f["on"+e])f["on"+e]=null;c.event.triggered=true;f[e]()}}catch(n){}if(i)f["on"+e]=i;c.event.triggered=false}}},handle:function(a){var b,d,f,e;a=arguments[0]=c.event.fix(a||A.event);a.currentTarget=this;b=a.type.indexOf(".")<0&&!a.exclusive;
rocket-nyan/js/jquery.min.js:if(!b){d=a.type.split(".");a.type=d.shift();f=new RegExp("(^|\\.)"+d.slice(0).sort().join("\\.(?:.*\\.)?")+"(\\.|$)")}e=c.data(this,"events");d=e[a.type];if(e&&d){d=d.slice(0);e=0;for(var j=d.length;e<j;e++){var i=d[e];if(b||f.test(i.namespace)){a.handler=i.handler;a.data=i.data;a.handleObj=i;i=i.handler.apply(this,arguments);if(i!==w){a.result=i;if(i===false){a.preventDefault();a.stopPropagation()}}if(a.isImmediatePropagationStopped())break}}}return a.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
rocket-nyan/js/jquery.min.js:fix:function(a){if(a[G])return a;var b=a;a=c.Event(b);for(var d=this.props.length,f;d;){f=this.props[--d];a[f]=b[f]}if(!a.target)a.target=a.srcElement||s;if(a.target.nodeType===3)a.target=a.target.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement;if(a.pageX==null&&a.clientX!=null){b=s.documentElement;d=s.body;a.pageX=a.clientX+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft||0);a.pageY=a.clientY+(b&&b.scrollTop||
rocket-nyan/js/jquery.min.js:d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(!a.which&&(a.charCode||a.charCode===0?a.charCode:a.keyCode))a.which=a.charCode||a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=a.ctrlKey;if(!a.which&&a.button!==w)a.which=a.button&1?1:a.button&2?3:a.button&4?2:0;return a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.noop},live:{add:function(a){c.event.add(this,a.origType,c.extend({},a,{handler:oa}))},remove:function(a){var b=true,d=a.origType.replace(O,"");c.each(c.data(this,
rocket-nyan/js/jquery.min.js:"events").live||[],function(){if(d===this.origType.replace(O,""))return b=false});b&&c.event.remove(this,a.origType,oa)}},beforeunload:{setup:function(a,b,d){if(this.setInterval)this.onbeforeunload=d;return false},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}};var Ca=s.removeEventListener?function(a,b,d){a.removeEventListener(b,d,false)}:function(a,b,d){a.detachEvent("on"+b,d)};c.Event=function(a){if(!this.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=
rocket-nyan/js/jquery.min.js:a;this.type=a.type}else this.type=a;this.timeStamp=J();this[G]=true};c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=Z;var a=this.originalEvent;if(a){a.preventDefault&&a.preventDefault();a.returnValue=false}},stopPropagation:function(){this.isPropagationStopped=Z;var a=this.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.cancelBubble=true}},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=Z;this.stopPropagation()},isDefaultPrevented:Y,isPropagationStopped:Y,
rocket-nyan/js/jquery.min.js:isImmediatePropagationStopped:Y};var Da=function(a){var b=a.relatedTarget;try{for(;b&&b!==this;)b=b.parentNode;if(b!==this){a.type=a.data;c.event.handle.apply(this,arguments)}}catch(d){}},Ea=function(a){a.type=a.data;c.event.handle.apply(this,arguments)};c.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){c.event.special[a]={setup:function(d){c.event.add(this,b,d&&d.selector?Ea:Da,a)},teardown:function(d){c.event.remove(this,b,d&&d.selector?Ea:Da)}}});if(!c.support.submitBubbles)c.event.special.submit=
rocket-nyan/js/jquery.min.js:{setup:function(){if(this.nodeName.toLowerCase()!=="form"){c.event.add(this,"click.specialSubmit",function(a){var b=a.target,d=b.type;if((d==="submit"||d==="image")&&c(b).closest("form").length)return na("submit",this,arguments)});c.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,d=b.type;if((d==="text"||d==="password")&&c(b).closest("form").length&&a.keyCode===13)return na("submit",this,arguments)})}else return false},teardown:function(){c.event.remove(this,".specialSubmit")}};
rocket-nyan/js/jquery.min.js:if(!c.support.changeBubbles){var da=/textarea|input|select/i,ea,Fa=function(a){var b=a.type,d=a.value;if(b==="radio"||b==="checkbox")d=a.checked;else if(b==="select-multiple")d=a.selectedIndex>-1?c.map(a.options,function(f){return f.selected}).join("-"):"";else if(a.nodeName.toLowerCase()==="select")d=a.selectedIndex;return d},fa=function(a,b){var d=a.target,f,e;if(!(!da.test(d.nodeName)||d.readOnly)){f=c.data(d,"_change_data");e=Fa(d);if(a.type!=="focusout"||d.type!=="radio")c.data(d,"_change_data",
rocket-nyan/js/jquery.min.js:e);if(!(f===w||e===f))if(f!=null||e){a.type="change";return c.event.trigger(a,b,d)}}};c.event.special.change={filters:{focusout:fa,click:function(a){var b=a.target,d=b.type;if(d==="radio"||d==="checkbox"||b.nodeName.toLowerCase()==="select")return fa.call(this,a)},keydown:function(a){var b=a.target,d=b.type;if(a.keyCode===13&&b.nodeName.toLowerCase()!=="textarea"||a.keyCode===32&&(d==="checkbox"||d==="radio")||d==="select-multiple")return fa.call(this,a)},beforeactivate:function(a){a=a.target;c.data(a,
rocket-nyan/js/jquery.min.js:"_change_data",Fa(a))}},setup:function(){if(this.type==="file")return false;for(var a in ea)c.event.add(this,a+".specialChange",ea[a]);return da.test(this.nodeName)},teardown:function(){c.event.remove(this,".specialChange");return da.test(this.nodeName)}};ea=c.event.special.change.filters}s.addEventListener&&c.each({focus:"focusin",blur:"focusout"},function(a,b){function d(f){f=c.event.fix(f);f.type=b;return c.event.handle.call(this,f)}c.event.special[b]={setup:function(){this.addEventListener(a,
rocket-nyan/js/jquery.min.js:d,true)},teardown:function(){this.removeEventListener(a,d,true)}}});c.each(["bind","one"],function(a,b){c.fn[b]=function(d,f,e){if(typeof d==="object"){for(var j in d)this[b](j,f,d[j],e);return this}if(c.isFunction(f)){e=f;f=w}var i=b==="one"?c.proxy(e,function(k){c(this).unbind(k,i);return e.apply(this,arguments)}):e;if(d==="unload"&&b!=="one")this.one(d,f,e);else{j=0;for(var o=this.length;j<o;j++)c.event.add(this[j],d,i,f)}return this}});c.fn.extend({unbind:function(a,b){if(typeof a==="object"&&
rocket-nyan/js/jquery.min.js:!a.preventDefault)for(var d in a)this.unbind(d,a[d]);else{d=0;for(var f=this.length;d<f;d++)c.event.remove(this[d],a,b)}return this},delegate:function(a,b,d,f){return this.live(b,d,f,a)},undelegate:function(a,b,d){return arguments.length===0?this.unbind("live"):this.die(b,null,d,a)},trigger:function(a,b){return this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0]){a=c.Event(a);a.preventDefault();a.stopPropagation();c.event.trigger(a,b,this[0]);return a.result}},
rocket-nyan/js/jquery.min.js:toggle:function(a){for(var b=arguments,d=1;d<b.length;)c.proxy(a,b[d++]);return this.click(c.proxy(a,function(f){var e=(c.data(this,"lastToggle"+a.guid)||0)%d;c.data(this,"lastToggle"+a.guid,e+1);f.preventDefault();return b[e].apply(this,arguments)||false}))},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var Ga={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};c.each(["live","die"],function(a,b){c.fn[b]=function(d,f,e,j){var i,o=0,k,n,r=j||this.selector,
rocket-nyan/js/jquery.min.js:u=j?this:c(this.context);if(c.isFunction(f)){e=f;f=w}for(d=(d||"").split(" ");(i=d[o++])!=null;){j=O.exec(i);k="";if(j){k=j[0];i=i.replace(O,"")}if(i==="hover")d.push("mouseenter"+k,"mouseleave"+k);else{n=i;if(i==="focus"||i==="blur"){d.push(Ga[i]+k);i+=k}else i=(Ga[i]||i)+k;b==="live"?u.each(function(){c.event.add(this,pa(i,r),{data:f,selector:r,handler:e,origType:i,origHandler:e,preType:n})}):u.unbind(pa(i,r),e)}}return this}});c.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),
rocket-nyan/js/jquery.min.js:function(a,b){c.fn[b]=function(d){return d?this.bind(b,d):this.trigger(b)};if(c.attrFn)c.attrFn[b]=true});A.attachEvent&&!A.addEventListener&&A.attachEvent("onunload",function(){for(var a in c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}catch(b){}});(function(){function a(g){for(var h="",l,m=0;g[m];m++){l=g[m];if(l.nodeType===3||l.nodeType===4)h+=l.nodeValue;else if(l.nodeType!==8)h+=a(l.childNodes)}return h}function b(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];
rocket-nyan/js/jquery.min.js:if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1&&!p){t.sizcache=l;t.sizset=q}if(t.nodeName.toLowerCase()===h){y=t;break}t=t[g]}m[q]=y}}}function d(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1){if(!p){t.sizcache=l;t.sizset=q}if(typeof h!=="string"){if(t===h){y=true;break}}else if(k.filter(h,[t]).length>0){y=t;break}}t=t[g]}m[q]=y}}}var f=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
rocket-nyan/js/jquery.min.js:e=0,j=Object.prototype.toString,i=false,o=true;[0,0].sort(function(){o=false;return 0});var k=function(g,h,l,m){l=l||[];var q=h=h||s;if(h.nodeType!==1&&h.nodeType!==9)return[];if(!g||typeof g!=="string")return l;for(var p=[],v,t,y,S,H=true,M=x(h),I=g;(f.exec(""),v=f.exec(I))!==null;){I=v[3];p.push(v[1]);if(v[2]){S=v[3];break}}if(p.length>1&&r.exec(g))if(p.length===2&&n.relative[p[0]])t=ga(p[0]+p[1],h);else for(t=n.relative[p[0]]?[h]:k(p.shift(),h);p.length;){g=p.shift();if(n.relative[g])g+=p.shift();
rocket-nyan/js/jquery.min.js:t=ga(g,t)}else{if(!m&&p.length>1&&h.nodeType===9&&!M&&n.match.ID.test(p[0])&&!n.match.ID.test(p[p.length-1])){v=k.find(p.shift(),h,M);h=v.expr?k.filter(v.expr,v.set)[0]:v.set[0]}if(h){v=m?{expr:p.pop(),set:z(m)}:k.find(p.pop(),p.length===1&&(p[0]==="~"||p[0]==="+")&&h.parentNode?h.parentNode:h,M);t=v.expr?k.filter(v.expr,v.set):v.set;if(p.length>0)y=z(t);else H=false;for(;p.length;){var D=p.pop();v=D;if(n.relative[D])v=p.pop();else D="";if(v==null)v=h;n.relative[D](y,v,M)}}else y=[]}y||(y=t);y||k.error(D||
rocket-nyan/js/jquery.min.js:g);if(j.call(y)==="[object Array]")if(H)if(h&&h.nodeType===1)for(g=0;y[g]!=null;g++){if(y[g]&&(y[g]===true||y[g].nodeType===1&&E(h,y[g])))l.push(t[g])}else for(g=0;y[g]!=null;g++)y[g]&&y[g].nodeType===1&&l.push(t[g]);else l.push.apply(l,y);else z(y,l);if(S){k(S,q,l,m);k.uniqueSort(l)}return l};k.uniqueSort=function(g){if(B){i=o;g.sort(B);if(i)for(var h=1;h<g.length;h++)g[h]===g[h-1]&&g.splice(h--,1)}return g};k.matches=function(g,h){return k(g,null,null,h)};k.find=function(g,h,l){var m,q;if(!g)return[];
rocket-nyan/js/jquery.min.js:for(var p=0,v=n.order.length;p<v;p++){var t=n.order[p];if(q=n.leftMatch[t].exec(g)){var y=q[1];q.splice(1,1);if(y.substr(y.length-1)!=="\\"){q[1]=(q[1]||"").replace(/\\/g,"");m=n.find[t](q,h,l);if(m!=null){g=g.replace(n.match[t],"");break}}}}m||(m=h.getElementsByTagName("*"));return{set:m,expr:g}};k.filter=function(g,h,l,m){for(var q=g,p=[],v=h,t,y,S=h&&h[0]&&x(h[0]);g&&h.length;){for(var H in n.filter)if((t=n.leftMatch[H].exec(g))!=null&&t[2]){var M=n.filter[H],I,D;D=t[1];y=false;t.splice(1,1);if(D.substr(D.length-
rocket-nyan/js/jquery.min.js:1)!=="\\"){if(v===p)p=[];if(n.preFilter[H])if(t=n.preFilter[H](t,v,l,p,m,S)){if(t===true)continue}else y=I=true;if(t)for(var U=0;(D=v[U])!=null;U++)if(D){I=M(D,t,U,v);var Ha=m^!!I;if(l&&I!=null)if(Ha)y=true;else v[U]=false;else if(Ha){p.push(D);y=true}}if(I!==w){l||(v=p);g=g.replace(n.match[H],"");if(!y)return[];break}}}if(g===q)if(y==null)k.error(g);else break;q=g}return v};k.error=function(g){throw"Syntax error, unrecognized expression: "+g;};var n=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
rocket-nyan/js/jquery.min.js:CLASS:/\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(g){return g.getAttribute("href")}},
rocket-nyan/js/jquery.min.js:relative:{"+":function(g,h){var l=typeof h==="string",m=l&&!/\W/.test(h);l=l&&!m;if(m)h=h.toLowerCase();m=0;for(var q=g.length,p;m<q;m++)if(p=g[m]){for(;(p=p.previousSibling)&&p.nodeType!==1;);g[m]=l||p&&p.nodeName.toLowerCase()===h?p||false:p===h}l&&k.filter(h,g,true)},">":function(g,h){var l=typeof h==="string";if(l&&!/\W/.test(h)){h=h.toLowerCase();for(var m=0,q=g.length;m<q;m++){var p=g[m];if(p){l=p.parentNode;g[m]=l.nodeName.toLowerCase()===h?l:false}}}else{m=0;for(q=g.length;m<q;m++)if(p=g[m])g[m]=
rocket-nyan/js/jquery.min.js:l?p.parentNode:p.parentNode===h;l&&k.filter(h,g,true)}},"":function(g,h,l){var m=e++,q=d;if(typeof h==="string"&&!/\W/.test(h)){var p=h=h.toLowerCase();q=b}q("parentNode",h,m,g,p,l)},"~":function(g,h,l){var m=e++,q=d;if(typeof h==="string"&&!/\W/.test(h)){var p=h=h.toLowerCase();q=b}q("previousSibling",h,m,g,p,l)}},find:{ID:function(g,h,l){if(typeof h.getElementById!=="undefined"&&!l)return(g=h.getElementById(g[1]))?[g]:[]},NAME:function(g,h){if(typeof h.getElementsByName!=="undefined"){var l=[];
rocket-nyan/js/jquery.min.js:h=h.getElementsByName(g[1]);for(var m=0,q=h.length;m<q;m++)h[m].getAttribute("name")===g[1]&&l.push(h[m]);return l.length===0?null:l}},TAG:function(g,h){return h.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,h,l,m,q,p){g=" "+g[1].replace(/\\/g,"")+" ";if(p)return g;p=0;for(var v;(v=h[p])!=null;p++)if(v)if(q^(v.className&&(" "+v.className+" ").replace(/[\t\n]/g," ").indexOf(g)>=0))l||m.push(v);else if(l)h[p]=false;return false},ID:function(g){return g[1].replace(/\\/g,"")},TAG:function(g){return g[1].toLowerCase()},
rocket-nyan/js/jquery.min.js:CHILD:function(g){if(g[1]==="nth"){var h=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2]==="even"&&"2n"||g[2]==="odd"&&"2n+1"||!/\D/.test(g[2])&&"0n+"+g[2]||g[2]);g[2]=h[1]+(h[2]||1)-0;g[3]=h[3]-0}g[0]=e++;return g},ATTR:function(g,h,l,m,q,p){h=g[1].replace(/\\/g,"");if(!p&&n.attrMap[h])g[1]=n.attrMap[h];if(g[2]==="~=")g[4]=" "+g[4]+" ";return g},PSEUDO:function(g,h,l,m,q){if(g[1]==="not")if((f.exec(g[3])||"").length>1||/^\w/.test(g[3]))g[3]=k(g[3],null,null,h);else{g=k.filter(g[3],h,l,true^q);l||m.push.apply(m,
rocket-nyan/js/jquery.min.js:g);return false}else if(n.match.POS.test(g[0])||n.match.CHILD.test(g[0]))return true;return g},POS:function(g){g.unshift(true);return g}},filters:{enabled:function(g){return g.disabled===false&&g.type!=="hidden"},disabled:function(g){return g.disabled===true},checked:function(g){return g.checked===true},selected:function(g){return g.selected===true},parent:function(g){return!!g.firstChild},empty:function(g){return!g.firstChild},has:function(g,h,l){return!!k(l[3],g).length},header:function(g){return/h\d/i.test(g.nodeName)},
rocket-nyan/js/jquery.min.js:text:function(g){return"text"===g.type},radio:function(g){return"radio"===g.type},checkbox:function(g){return"checkbox"===g.type},file:function(g){return"file"===g.type},password:function(g){return"password"===g.type},submit:function(g){return"submit"===g.type},image:function(g){return"image"===g.type},reset:function(g){return"reset"===g.type},button:function(g){return"button"===g.type||g.nodeName.toLowerCase()==="button"},input:function(g){return/input|select|textarea|button/i.test(g.nodeName)}},
rocket-nyan/js/jquery.min.js:setFilters:{first:function(g,h){return h===0},last:function(g,h,l,m){return h===m.length-1},even:function(g,h){return h%2===0},odd:function(g,h){return h%2===1},lt:function(g,h,l){return h<l[3]-0},gt:function(g,h,l){return h>l[3]-0},nth:function(g,h,l){return l[3]-0===h},eq:function(g,h,l){return l[3]-0===h}},filter:{PSEUDO:function(g,h,l,m){var q=h[1],p=n.filters[q];if(p)return p(g,l,h,m);else if(q==="contains")return(g.textContent||g.innerText||a([g])||"").indexOf(h[3])>=0;else if(q==="not"){h=
rocket-nyan/js/jquery.min.js:h[3];l=0;for(m=h.length;l<m;l++)if(h[l]===g)return false;return true}else k.error("Syntax error, unrecognized expression: "+q)},CHILD:function(g,h){var l=h[1],m=g;switch(l){case "only":case "first":for(;m=m.previousSibling;)if(m.nodeType===1)return false;if(l==="first")return true;m=g;case "last":for(;m=m.nextSibling;)if(m.nodeType===1)return false;return true;case "nth":l=h[2];var q=h[3];if(l===1&&q===0)return true;h=h[0];var p=g.parentNode;if(p&&(p.sizcache!==h||!g.nodeIndex)){var v=0;for(m=p.firstChild;m;m=
rocket-nyan/js/jquery.min.js:m.nextSibling)if(m.nodeType===1)m.nodeIndex=++v;p.sizcache=h}g=g.nodeIndex-q;return l===0?g===0:g%l===0&&g/l>=0}},ID:function(g,h){return g.nodeType===1&&g.getAttribute("id")===h},TAG:function(g,h){return h==="*"&&g.nodeType===1||g.nodeName.toLowerCase()===h},CLASS:function(g,h){return(" "+(g.className||g.getAttribute("class"))+" ").indexOf(h)>-1},ATTR:function(g,h){var l=h[1];g=n.attrHandle[l]?n.attrHandle[l](g):g[l]!=null?g[l]:g.getAttribute(l);l=g+"";var m=h[2];h=h[4];return g==null?m==="!=":m===
rocket-nyan/js/jquery.min.js:"="?l===h:m==="*="?l.indexOf(h)>=0:m==="~="?(" "+l+" ").indexOf(h)>=0:!h?l&&g!==false:m==="!="?l!==h:m==="^="?l.indexOf(h)===0:m==="$="?l.substr(l.length-h.length)===h:m==="|="?l===h||l.substr(0,h.length+1)===h+"-":false},POS:function(g,h,l,m){var q=n.setFilters[h[2]];if(q)return q(g,l,h,m)}}},r=n.match.POS;for(var u in n.match){n.match[u]=new RegExp(n.match[u].source+/(?![^\[]*\])(?![^\(]*\))/.source);n.leftMatch[u]=new RegExp(/(^(?:.|\r|\n)*?)/.source+n.match[u].source.replace(/\\(\d+)/g,function(g,
rocket-nyan/js/jquery.min.js:h){return"\\"+(h-0+1)}))}var z=function(g,h){g=Array.prototype.slice.call(g,0);if(h){h.push.apply(h,g);return h}return g};try{Array.prototype.slice.call(s.documentElement.childNodes,0)}catch(C){z=function(g,h){h=h||[];if(j.call(g)==="[object Array]")Array.prototype.push.apply(h,g);else if(typeof g.length==="number")for(var l=0,m=g.length;l<m;l++)h.push(g[l]);else for(l=0;g[l];l++)h.push(g[l]);return h}}var B;if(s.documentElement.compareDocumentPosition)B=function(g,h){if(!g.compareDocumentPosition||
rocket-nyan/js/jquery.min.js:!h.compareDocumentPosition){if(g==h)i=true;return g.compareDocumentPosition?-1:1}g=g.compareDocumentPosition(h)&4?-1:g===h?0:1;if(g===0)i=true;return g};else if("sourceIndex"in s.documentElement)B=function(g,h){if(!g.sourceIndex||!h.sourceIndex){if(g==h)i=true;return g.sourceIndex?-1:1}g=g.sourceIndex-h.sourceIndex;if(g===0)i=true;return g};else if(s.createRange)B=function(g,h){if(!g.ownerDocument||!h.ownerDocument){if(g==h)i=true;return g.ownerDocument?-1:1}var l=g.ownerDocument.createRange(),m=
rocket-nyan/js/jquery.min.js:h.ownerDocument.createRange();l.setStart(g,0);l.setEnd(g,0);m.setStart(h,0);m.setEnd(h,0);g=l.compareBoundaryPoints(Range.START_TO_END,m);if(g===0)i=true;return g};(function(){var g=s.createElement("div"),h="script"+(new Date).getTime();g.innerHTML="<a name='"+h+"'/>";var l=s.documentElement;l.insertBefore(g,l.firstChild);if(s.getElementById(h)){n.find.ID=function(m,q,p){if(typeof q.getElementById!=="undefined"&&!p)return(q=q.getElementById(m[1]))?q.id===m[1]||typeof q.getAttributeNode!=="undefined"&&
rocket-nyan/js/jquery.min.js:q.getAttributeNode("id").nodeValue===m[1]?[q]:w:[]};n.filter.ID=function(m,q){var p=typeof m.getAttributeNode!=="undefined"&&m.getAttributeNode("id");return m.nodeType===1&&p&&p.nodeValue===q}}l.removeChild(g);l=g=null})();(function(){var g=s.createElement("div");g.appendChild(s.createComment(""));if(g.getElementsByTagName("*").length>0)n.find.TAG=function(h,l){l=l.getElementsByTagName(h[1]);if(h[1]==="*"){h=[];for(var m=0;l[m];m++)l[m].nodeType===1&&h.push(l[m]);l=h}return l};g.innerHTML="<a href='#'></a>";
rocket-nyan/js/jquery.min.js:if(g.firstChild&&typeof g.firstChild.getAttribute!=="undefined"&&g.firstChild.getAttribute("href")!=="#")n.attrHandle.href=function(h){return h.getAttribute("href",2)};g=null})();s.querySelectorAll&&function(){var g=k,h=s.createElement("div");h.innerHTML="<p class='TEST'></p>";if(!(h.querySelectorAll&&h.querySelectorAll(".TEST").length===0)){k=function(m,q,p,v){q=q||s;if(!v&&q.nodeType===9&&!x(q))try{return z(q.querySelectorAll(m),p)}catch(t){}return g(m,q,p,v)};for(var l in g)k[l]=g[l];h=null}}();
rocket-nyan/js/jquery.min.js:(function(){var g=s.createElement("div");g.innerHTML="<div class='test e'></div><div class='test'></div>";if(!(!g.getElementsByClassName||g.getElementsByClassName("e").length===0)){g.lastChild.className="e";if(g.getElementsByClassName("e").length!==1){n.order.splice(1,0,"CLASS");n.find.CLASS=function(h,l,m){if(typeof l.getElementsByClassName!=="undefined"&&!m)return l.getElementsByClassName(h[1])};g=null}}})();var E=s.compareDocumentPosition?function(g,h){return!!(g.compareDocumentPosition(h)&16)}:
rocket-nyan/js/jquery.min.js:function(g,h){return g!==h&&(g.contains?g.contains(h):true)},x=function(g){return(g=(g?g.ownerDocument||g:0).documentElement)?g.nodeName!=="HTML":false},ga=function(g,h){var l=[],m="",q;for(h=h.nodeType?[h]:h;q=n.match.PSEUDO.exec(g);){m+=q[0];g=g.replace(n.match.PSEUDO,"")}g=n.relative[g]?g+"*":g;q=0;for(var p=h.length;q<p;q++)k(g,h[q],l);return k.filter(m,l)};c.find=k;c.expr=k.selectors;c.expr[":"]=c.expr.filters;c.unique=k.uniqueSort;c.text=a;c.isXMLDoc=x;c.contains=E})();var eb=/Until$/,fb=/^(?:parents|prevUntil|prevAll)/,
rocket-nyan/js/jquery.min.js:gb=/,/;R=Array.prototype.slice;var Ia=function(a,b,d){if(c.isFunction(b))return c.grep(a,function(e,j){return!!b.call(e,j,e)===d});else if(b.nodeType)return c.grep(a,function(e){return e===b===d});else if(typeof b==="string"){var f=c.grep(a,function(e){return e.nodeType===1});if(Ua.test(b))return c.filter(b,f,!d);else b=c.filter(b,f)}return c.grep(a,function(e){return c.inArray(e,b)>=0===d})};c.fn.extend({find:function(a){for(var b=this.pushStack("","find",a),d=0,f=0,e=this.length;f<e;f++){d=b.length;
rocket-nyan/js/jquery.min.js:c.find(a,this[f],b);if(f>0)for(var j=d;j<b.length;j++)for(var i=0;i<d;i++)if(b[i]===b[j]){b.splice(j--,1);break}}return b},has:function(a){var b=c(a);return this.filter(function(){for(var d=0,f=b.length;d<f;d++)if(c.contains(this,b[d]))return true})},not:function(a){return this.pushStack(Ia(this,a,false),"not",a)},filter:function(a){return this.pushStack(Ia(this,a,true),"filter",a)},is:function(a){return!!a&&c.filter(a,this).length>0},closest:function(a,b){if(c.isArray(a)){var d=[],f=this[0],e,j=
rocket-nyan/js/jquery.min.js:{},i;if(f&&a.length){e=0;for(var o=a.length;e<o;e++){i=a[e];j[i]||(j[i]=c.expr.match.POS.test(i)?c(i,b||this.context):i)}for(;f&&f.ownerDocument&&f!==b;){for(i in j){e=j[i];if(e.jquery?e.index(f)>-1:c(f).is(e)){d.push({selector:i,elem:f});delete j[i]}}f=f.parentNode}}return d}var k=c.expr.match.POS.test(a)?c(a,b||this.context):null;return this.map(function(n,r){for(;r&&r.ownerDocument&&r!==b;){if(k?k.index(r)>-1:c(r).is(a))return r;r=r.parentNode}return null})},index:function(a){if(!a||typeof a===
rocket-nyan/js/jquery.min.js:"string")return c.inArray(this[0],a?c(a):this.parent().children());return c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){a=typeof a==="string"?c(a,b||this.context):c.makeArray(a);b=c.merge(this.get(),a);return this.pushStack(qa(a[0])||qa(b[0])?b:c.unique(b))},andSelf:function(){return this.add(this.prevObject)}});c.each({parent:function(a){return(a=a.parentNode)&&a.nodeType!==11?a:null},parents:function(a){return c.dir(a,"parentNode")},parentsUntil:function(a,b,d){return c.dir(a,"parentNode",
rocket-nyan/js/jquery.min.js:d)},next:function(a){return c.nth(a,2,"nextSibling")},prev:function(a){return c.nth(a,2,"previousSibling")},nextAll:function(a){return c.dir(a,"nextSibling")},prevAll:function(a){return c.dir(a,"previousSibling")},nextUntil:function(a,b,d){return c.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return c.dir(a,"previousSibling",d)},siblings:function(a){return c.sibling(a.parentNode.firstChild,a)},children:function(a){return c.sibling(a.firstChild)},contents:function(a){return c.nodeName(a,"iframe")?
rocket-nyan/js/jquery.min.js:a.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},function(a,b){c.fn[a]=function(d,f){var e=c.map(this,b,d);eb.test(a)||(f=d);if(f&&typeof f==="string")e=c.filter(f,e);e=this.length>1?c.unique(e):e;if((this.length>1||gb.test(f))&&fb.test(a))e=e.reverse();return this.pushStack(e,a,R.call(arguments).join(","))}});c.extend({filter:function(a,b,d){if(d)a=":not("+a+")";return c.find.matches(a,b)},dir:function(a,b,d){var f=[];for(a=a[b];a&&a.nodeType!==9&&(d===w||a.nodeType!==1||!c(a).is(d));){a.nodeType===
rocket-nyan/js/jquery.min.js:1&&f.push(a);a=a[b]}return f},nth:function(a,b,d){b=b||1;for(var f=0;a;a=a[d])if(a.nodeType===1&&++f===b)break;return a},sibling:function(a,b){for(var d=[];a;a=a.nextSibling)a.nodeType===1&&a!==b&&d.push(a);return d}});var Ja=/ jQuery\d+="(?:\d+|null)"/g,V=/^\s+/,Ka=/(<([\w:]+)[^>]*?)\/>/g,hb=/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,La=/<([\w:]+)/,ib=/<tbody/i,jb=/<|&#?\w+;/,ta=/<script|<object|<embed|<option|<style/i,ua=/checked\s*(?:[^=]|=\s*.checked.)/i,Ma=function(a,b,d){return hb.test(d)?
rocket-nyan/js/jquery.min.js:a:b+"></"+d+">"},F={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};F.optgroup=F.option;F.tbody=F.tfoot=F.colgroup=F.caption=F.thead;F.th=F.td;if(!c.support.htmlSerialize)F._default=[1,"div<div>","</div>"];c.fn.extend({text:function(a){if(c.isFunction(a))return this.each(function(b){var d=
rocket-nyan/js/jquery.min.js:c(this);d.text(a.call(this,b,d.text()))});if(typeof a!=="object"&&a!==w)return this.empty().append((this[0]&&this[0].ownerDocument||s).createTextNode(a));return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var b=c(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.insertBefore(this[0]);b.map(function(){for(var d=this;d.firstChild&&d.firstChild.nodeType===1;)d=d.firstChild;return d}).append(this)}return this},
rocket-nyan/js/jquery.min.js:wrapInner:function(a){if(c.isFunction(a))return this.each(function(b){c(this).wrapInner(a.call(this,b))});return this.each(function(){var b=c(this),d=b.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){c.nodeName(this,"body")||c(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.appendChild(a)})},
rocket-nyan/js/jquery.min.js:prepend:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,this)});else if(arguments.length){var a=c(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,
rocket-nyan/js/jquery.min.js:this.nextSibling)});else if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,c(arguments[0]).toArray());return a}},remove:function(a,b){for(var d=0,f;(f=this[d])!=null;d++)if(!a||c.filter(a,[f]).length){if(!b&&f.nodeType===1){c.cleanData(f.getElementsByTagName("*"));c.cleanData([f])}f.parentNode&&f.parentNode.removeChild(f)}return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++)for(b.nodeType===1&&c.cleanData(b.getElementsByTagName("*"));b.firstChild;)b.removeChild(b.firstChild);
rocket-nyan/js/jquery.min.js:return this},clone:function(a){var b=this.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){var d=this.outerHTML,f=this.ownerDocument;if(!d){d=f.createElement("div");d.appendChild(this.cloneNode(true));d=d.innerHTML}return c.clean([d.replace(Ja,"").replace(/=([^="'>\s]+\/)>/g,'="$1">').replace(V,"")],f)[0]}else return this.cloneNode(true)});if(a===true){ra(this,b);ra(this.find("*"),b.find("*"))}return b},html:function(a){if(a===w)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(Ja,
rocket-nyan/js/jquery.min.js:""):null;else if(typeof a==="string"&&!ta.test(a)&&(c.support.leadingWhitespace||!V.test(a))&&!F[(La.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Ka,Ma);try{for(var b=0,d=this.length;b<d;b++)if(this[b].nodeType===1){c.cleanData(this[b].getElementsByTagName("*"));this[b].innerHTML=a}}catch(f){this.empty().append(a)}}else c.isFunction(a)?this.each(function(e){var j=c(this),i=j.html();j.empty().append(function(){return a.call(this,e,i)})}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&
rocket-nyan/js/jquery.min.js:this[0].parentNode){if(c.isFunction(a))return this.each(function(b){var d=c(this),f=d.html();d.replaceWith(a.call(this,b,f))});if(typeof a!=="string")a=c(a).detach();return this.each(function(){var b=this.nextSibling,d=this.parentNode;c(this).remove();b?c(b).before(a):c(d).append(a)})}else return this.pushStack(c(c.isFunction(a)?a():a),"replaceWith",a)},detach:function(a){return this.remove(a,true)},domManip:function(a,b,d){function f(u){return c.nodeName(u,"table")?u.getElementsByTagName("tbody")[0]||
rocket-nyan/js/jquery.min.js:u.appendChild(u.ownerDocument.createElement("tbody")):u}var e,j,i=a[0],o=[],k;if(!c.support.checkClone&&arguments.length===3&&typeof i==="string"&&ua.test(i))return this.each(function(){c(this).domManip(a,b,d,true)});if(c.isFunction(i))return this.each(function(u){var z=c(this);a[0]=i.call(this,u,b?z.html():w);z.domManip(a,b,d)});if(this[0]){e=i&&i.parentNode;e=c.support.parentNode&&e&&e.nodeType===11&&e.childNodes.length===this.length?{fragment:e}:sa(a,this,o);k=e.fragment;if(j=k.childNodes.length===
rocket-nyan/js/jquery.min.js:1?(k=k.firstChild):k.firstChild){b=b&&c.nodeName(j,"tr");for(var n=0,r=this.length;n<r;n++)d.call(b?f(this[n],j):this[n],n>0||e.cacheable||this.length>1?k.cloneNode(true):k)}o.length&&c.each(o,Qa)}return this}});c.fragments={};c.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){c.fn[a]=function(d){var f=[];d=c(d);var e=this.length===1&&this[0].parentNode;if(e&&e.nodeType===11&&e.childNodes.length===1&&d.length===1){d[b](this[0]);
rocket-nyan/js/jquery.min.js:return this}else{e=0;for(var j=d.length;e<j;e++){var i=(e>0?this.clone(true):this).get();c.fn[b].apply(c(d[e]),i);f=f.concat(i)}return this.pushStack(f,a,d.selector)}}});c.extend({clean:function(a,b,d,f){b=b||s;if(typeof b.createElement==="undefined")b=b.ownerDocument||b[0]&&b[0].ownerDocument||s;for(var e=[],j=0,i;(i=a[j])!=null;j++){if(typeof i==="number")i+="";if(i){if(typeof i==="string"&&!jb.test(i))i=b.createTextNode(i);else if(typeof i==="string"){i=i.replace(Ka,Ma);var o=(La.exec(i)||["",
rocket-nyan/js/jquery.min.js:""])[1].toLowerCase(),k=F[o]||F._default,n=k[0],r=b.createElement("div");for(r.innerHTML=k[1]+i+k[2];n--;)r=r.lastChild;if(!c.support.tbody){n=ib.test(i);o=o==="table"&&!n?r.firstChild&&r.firstChild.childNodes:k[1]==="<table>"&&!n?r.childNodes:[];for(k=o.length-1;k>=0;--k)c.nodeName(o[k],"tbody")&&!o[k].childNodes.length&&o[k].parentNode.removeChild(o[k])}!c.support.leadingWhitespace&&V.test(i)&&r.insertBefore(b.createTextNode(V.exec(i)[0]),r.firstChild);i=r.childNodes}if(i.nodeType)e.push(i);else e=
rocket-nyan/js/jquery.min.js:c.merge(e,i)}}if(d)for(j=0;e[j];j++)if(f&&c.nodeName(e[j],"script")&&(!e[j].type||e[j].type.toLowerCase()==="text/javascript"))f.push(e[j].parentNode?e[j].parentNode.removeChild(e[j]):e[j]);else{e[j].nodeType===1&&e.splice.apply(e,[j+1,0].concat(c.makeArray(e[j].getElementsByTagName("script"))));d.appendChild(e[j])}return e},cleanData:function(a){for(var b,d,f=c.cache,e=c.event.special,j=c.support.deleteExpando,i=0,o;(o=a[i])!=null;i++)if(d=o[c.expando]){b=f[d];if(b.events)for(var k in b.events)e[k]?
rocket-nyan/js/jquery.min.js:c.event.remove(o,k):Ca(o,k,b.handle);if(j)delete o[c.expando];else o.removeAttribute&&o.removeAttribute(c.expando);delete f[d]}}});var kb=/z-?index|font-?weight|opacity|zoom|line-?height/i,Na=/alpha\([^)]*\)/,Oa=/opacity=([^)]*)/,ha=/float/i,ia=/-([a-z])/ig,lb=/([A-Z])/g,mb=/^-?\d+(?:px)?$/i,nb=/^-?\d/,ob={position:"absolute",visibility:"hidden",display:"block"},pb=["Left","Right"],qb=["Top","Bottom"],rb=s.defaultView&&s.defaultView.getComputedStyle,Pa=c.support.cssFloat?"cssFloat":"styleFloat",ja=
rocket-nyan/js/jquery.min.js:function(a,b){return b.toUpperCase()};c.fn.css=function(a,b){return X(this,a,b,true,function(d,f,e){if(e===w)return c.curCSS(d,f);if(typeof e==="number"&&!kb.test(f))e+="px";c.style(d,f,e)})};c.extend({style:function(a,b,d){if(!a||a.nodeType===3||a.nodeType===8)return w;if((b==="width"||b==="height")&&parseFloat(d)<0)d=w;var f=a.style||a,e=d!==w;if(!c.support.opacity&&b==="opacity"){if(e){f.zoom=1;b=parseInt(d,10)+""==="NaN"?"":"alpha(opacity="+d*100+")";a=f.filter||c.curCSS(a,"filter")||"";f.filter=
rocket-nyan/js/jquery.min.js:Na.test(a)?a.replace(Na,b):b}return f.filter&&f.filter.indexOf("opacity=")>=0?parseFloat(Oa.exec(f.filter)[1])/100+"":""}if(ha.test(b))b=Pa;b=b.replace(ia,ja);if(e)f[b]=d;return f[b]},css:function(a,b,d,f){if(b==="width"||b==="height"){var e,j=b==="width"?pb:qb;function i(){e=b==="width"?a.offsetWidth:a.offsetHeight;f!=="border"&&c.each(j,function(){f||(e-=parseFloat(c.curCSS(a,"padding"+this,true))||0);if(f==="margin")e+=parseFloat(c.curCSS(a,"margin"+this,true))||0;else e-=parseFloat(c.curCSS(a,
rocket-nyan/js/jquery.min.js:"border"+this+"Width",true))||0})}a.offsetWidth!==0?i():c.swap(a,ob,i);return Math.max(0,Math.round(e))}return c.curCSS(a,b,d)},curCSS:function(a,b,d){var f,e=a.style;if(!c.support.opacity&&b==="opacity"&&a.currentStyle){f=Oa.test(a.currentStyle.filter||"")?parseFloat(RegExp.$1)/100+"":"";return f===""?"1":f}if(ha.test(b))b=Pa;if(!d&&e&&e[b])f=e[b];else if(rb){if(ha.test(b))b="float";b=b.replace(lb,"-$1").toLowerCase();e=a.ownerDocument.defaultView;if(!e)return null;if(a=e.getComputedStyle(a,null))f=
rocket-nyan/js/jquery.min.js:a.getPropertyValue(b);if(b==="opacity"&&f==="")f="1"}else if(a.currentStyle){d=b.replace(ia,ja);f=a.currentStyle[b]||a.currentStyle[d];if(!mb.test(f)&&nb.test(f)){b=e.left;var j=a.runtimeStyle.left;a.runtimeStyle.left=a.currentStyle.left;e.left=d==="fontSize"?"1em":f||0;f=e.pixelLeft+"px";e.left=b;a.runtimeStyle.left=j}}return f},swap:function(a,b,d){var f={};for(var e in b){f[e]=a.style[e];a.style[e]=b[e]}d.call(a);for(e in b)a.style[e]=f[e]}});if(c.expr&&c.expr.filters){c.expr.filters.hidden=function(a){var b=
rocket-nyan/js/jquery.min.js:a.offsetWidth,d=a.offsetHeight,f=a.nodeName.toLowerCase()==="tr";return b===0&&d===0&&!f?true:b>0&&d>0&&!f?false:c.curCSS(a,"display")==="none"};c.expr.filters.visible=function(a){return!c.expr.filters.hidden(a)}}var sb=J(),tb=/<script(.|\s)*?\/script>/gi,ub=/select|textarea/i,vb=/color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week/i,N=/=\?(&|$)/,ka=/\?/,wb=/(\?|&)_=.*?(&|$)/,xb=/^(\w+:)?\/\/([^\/?#]+)/,yb=/%20/g,zb=c.fn.load;c.fn.extend({load:function(a,b,d){if(typeof a!==
rocket-nyan/js/jquery.min.js:"string")return zb.call(this,a);else if(!this.length)return this;var f=a.indexOf(" ");if(f>=0){var e=a.slice(f,a.length);a=a.slice(0,f)}f="GET";if(b)if(c.isFunction(b)){d=b;b=null}else if(typeof b==="object"){b=c.param(b,c.ajaxSettings.traditional);f="POST"}var j=this;c.ajax({url:a,type:f,dataType:"html",data:b,complete:function(i,o){if(o==="success"||o==="notmodified")j.html(e?c("<div />").append(i.responseText.replace(tb,"")).find(e):i.responseText);d&&j.each(d,[i.responseText,o,i])}});return this},
rocket-nyan/js/jquery.min.js:serialize:function(){return c.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?c.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ub.test(this.nodeName)||vb.test(this.type))}).map(function(a,b){a=c(this).val();return a==null?null:c.isArray(a)?c.map(a,function(d){return{name:b.name,value:d}}):{name:b.name,value:a}}).get()}});c.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),
rocket-nyan/js/jquery.min.js:function(a,b){c.fn[b]=function(d){return this.bind(b,d)}});c.extend({get:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b=null}return c.ajax({type:"GET",url:a,data:b,success:d,dataType:f})},getScript:function(a,b){return c.get(a,null,b,"script")},getJSON:function(a,b,d){return c.get(a,b,d,"json")},post:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b={}}return c.ajax({type:"POST",url:a,data:b,success:d,dataType:f})},ajaxSetup:function(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,
rocket-nyan/js/jquery.min.js:global:true,type:"GET",contentType:"application/x-www-form-urlencoded",processData:true,async:true,xhr:A.XMLHttpRequest&&(A.location.protocol!=="file:"||!A.ActiveXObject)?function(){return new A.XMLHttpRequest}:function(){try{return new A.ActiveXObject("Microsoft.XMLHTTP")}catch(a){}},accepts:{xml:"application/xml, text/xml",html:"text/html",script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},etag:{},ajax:function(a){function b(){e.success&&
rocket-nyan/js/jquery.min.js:e.success.call(k,o,i,x);e.global&&f("ajaxSuccess",[x,e])}function d(){e.complete&&e.complete.call(k,x,i);e.global&&f("ajaxComplete",[x,e]);e.global&&!--c.active&&c.event.trigger("ajaxStop")}function f(q,p){(e.context?c(e.context):c.event).trigger(q,p)}var e=c.extend(true,{},c.ajaxSettings,a),j,i,o,k=a&&a.context||e,n=e.type.toUpperCase();if(e.data&&e.processData&&typeof e.data!=="string")e.data=c.param(e.data,e.traditional);if(e.dataType==="jsonp"){if(n==="GET")N.test(e.url)||(e.url+=(ka.test(e.url)?
rocket-nyan/js/jquery.min.js:"&":"?")+(e.jsonp||"callback")+"=?");else if(!e.data||!N.test(e.data))e.data=(e.data?e.data+"&":"")+(e.jsonp||"callback")+"=?";e.dataType="json"}if(e.dataType==="json"&&(e.data&&N.test(e.data)||N.test(e.url))){j=e.jsonpCallback||"jsonp"+sb++;if(e.data)e.data=(e.data+"").replace(N,"="+j+"$1");e.url=e.url.replace(N,"="+j+"$1");e.dataType="script";A[j]=A[j]||function(q){o=q;b();d();A[j]=w;try{delete A[j]}catch(p){}z&&z.removeChild(C)}}if(e.dataType==="script"&&e.cache===null)e.cache=false;if(e.cache===
rocket-nyan/js/jquery.min.js:false&&n==="GET"){var r=J(),u=e.url.replace(wb,"$1_="+r+"$2");e.url=u+(u===e.url?(ka.test(e.url)?"&":"?")+"_="+r:"")}if(e.data&&n==="GET")e.url+=(ka.test(e.url)?"&":"?")+e.data;e.global&&!c.active++&&c.event.trigger("ajaxStart");r=(r=xb.exec(e.url))&&(r[1]&&r[1]!==location.protocol||r[2]!==location.host);if(e.dataType==="script"&&n==="GET"&&r){var z=s.getElementsByTagName("head")[0]||s.documentElement,C=s.createElement("script");C.src=e.url;if(e.scriptCharset)C.charset=e.scriptCharset;if(!j){var B=
rocket-nyan/js/jquery.min.js:false;C.onload=C.onreadystatechange=function(){if(!B&&(!this.readyState||this.readyState==="loaded"||this.readyState==="complete")){B=true;b();d();C.onload=C.onreadystatechange=null;z&&C.parentNode&&z.removeChild(C)}}}z.insertBefore(C,z.firstChild);return w}var E=false,x=e.xhr();if(x){e.username?x.open(n,e.url,e.async,e.username,e.password):x.open(n,e.url,e.async);try{if(e.data||a&&a.contentType)x.setRequestHeader("Content-Type",e.contentType);if(e.ifModified){c.lastModified[e.url]&&x.setRequestHeader("If-Modified-Since",
rocket-nyan/js/jquery.min.js:c.lastModified[e.url]);c.etag[e.url]&&x.setRequestHeader("If-None-Match",c.etag[e.url])}r||x.setRequestHeader("X-Requested-With","XMLHttpRequest");x.setRequestHeader("Accept",e.dataType&&e.accepts[e.dataType]?e.accepts[e.dataType]+", */*":e.accepts._default)}catch(ga){}if(e.beforeSend&&e.beforeSend.call(k,x,e)===false){e.global&&!--c.active&&c.event.trigger("ajaxStop");x.abort();return false}e.global&&f("ajaxSend",[x,e]);var g=x.onreadystatechange=function(q){if(!x||x.readyState===0||q==="abort"){E||
rocket-nyan/js/jquery.min.js:d();E=true;if(x)x.onreadystatechange=c.noop}else if(!E&&x&&(x.readyState===4||q==="timeout")){E=true;x.onreadystatechange=c.noop;i=q==="timeout"?"timeout":!c.httpSuccess(x)?"error":e.ifModified&&c.httpNotModified(x,e.url)?"notmodified":"success";var p;if(i==="success")try{o=c.httpData(x,e.dataType,e)}catch(v){i="parsererror";p=v}if(i==="success"||i==="notmodified")j||b();else c.handleError(e,x,i,p);d();q==="timeout"&&x.abort();if(e.async)x=null}};try{var h=x.abort;x.abort=function(){x&&h.call(x);
rocket-nyan/js/jquery.min.js:g("abort")}}catch(l){}e.async&&e.timeout>0&&setTimeout(function(){x&&!E&&g("timeout")},e.timeout);try{x.send(n==="POST"||n==="PUT"||n==="DELETE"?e.data:null)}catch(m){c.handleError(e,x,null,m);d()}e.async||g();return x}},handleError:function(a,b,d,f){if(a.error)a.error.call(a.context||a,b,d,f);if(a.global)(a.context?c(a.context):c.event).trigger("ajaxError",[b,a,f])},active:0,httpSuccess:function(a){try{return!a.status&&location.protocol==="file:"||a.status>=200&&a.status<300||a.status===304||a.status===
rocket-nyan/js/jquery.min.js:1223||a.status===0}catch(b){}return false},httpNotModified:function(a,b){var d=a.getResponseHeader("Last-Modified"),f=a.getResponseHeader("Etag");if(d)c.lastModified[b]=d;if(f)c.etag[b]=f;return a.status===304||a.status===0},httpData:function(a,b,d){var f=a.getResponseHeader("content-type")||"",e=b==="xml"||!b&&f.indexOf("xml")>=0;a=e?a.responseXML:a.responseText;e&&a.documentElement.nodeName==="parsererror"&&c.error("parsererror");if(d&&d.dataFilter)a=d.dataFilter(a,b);if(typeof a==="string")if(b===
rocket-nyan/js/jquery.min.js:"json"||!b&&f.indexOf("json")>=0)a=c.parseJSON(a);else if(b==="script"||!b&&f.indexOf("javascript")>=0)c.globalEval(a);return a},param:function(a,b){function d(i,o){if(c.isArray(o))c.each(o,function(k,n){b||/\[\]$/.test(i)?f(i,n):d(i+"["+(typeof n==="object"||c.isArray(n)?k:"")+"]",n)});else!b&&o!=null&&typeof o==="object"?c.each(o,function(k,n){d(i+"["+k+"]",n)}):f(i,o)}function f(i,o){o=c.isFunction(o)?o():o;e[e.length]=encodeURIComponent(i)+"="+encodeURIComponent(o)}var e=[];if(b===w)b=c.ajaxSettings.traditional;
rocket-nyan/js/jquery.min.js:if(c.isArray(a)||a.jquery)c.each(a,function(){f(this.name,this.value)});else for(var j in a)d(j,a[j]);return e.join("&").replace(yb,"+")}});var la={},Ab=/toggle|show|hide/,Bb=/^([+-]=)?([\d+-.]+)(.*)$/,W,va=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]];c.fn.extend({show:function(a,b){if(a||a===0)return this.animate(K("show",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],"olddisplay");
rocket-nyan/js/jquery.min.js:this[a].style.display=d||"";if(c.css(this[a],"display")==="none"){d=this[a].nodeName;var f;if(la[d])f=la[d];else{var e=c("<"+d+" />").appendTo("body");f=e.css("display");if(f==="none")f="block";e.remove();la[d]=f}c.data(this[a],"olddisplay",f)}}a=0;for(b=this.length;a<b;a++)this[a].style.display=c.data(this[a],"olddisplay")||"";return this}},hide:function(a,b){if(a||a===0)return this.animate(K("hide",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],"olddisplay");!d&&d!=="none"&&c.data(this[a],
rocket-nyan/js/jquery.min.js:"olddisplay",c.css(this[a],"display"))}a=0;for(b=this.length;a<b;a++)this[a].style.display="none";return this}},_toggle:c.fn.toggle,toggle:function(a,b){var d=typeof a==="boolean";if(c.isFunction(a)&&c.isFunction(b))this._toggle.apply(this,arguments);else a==null||d?this.each(function(){var f=d?a:c(this).is(":hidden");c(this)[f?"show":"hide"]()}):this.animate(K("toggle",3),a,b);return this},fadeTo:function(a,b,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,d)},
rocket-nyan/js/jquery.min.js:animate:function(a,b,d,f){var e=c.speed(b,d,f);if(c.isEmptyObject(a))return this.each(e.complete);return this[e.queue===false?"each":"queue"](function(){var j=c.extend({},e),i,o=this.nodeType===1&&c(this).is(":hidden"),k=this;for(i in a){var n=i.replace(ia,ja);if(i!==n){a[n]=a[i];delete a[i];i=n}if(a[i]==="hide"&&o||a[i]==="show"&&!o)return j.complete.call(this);if((i==="height"||i==="width")&&this.style){j.display=c.css(this,"display");j.overflow=this.style.overflow}if(c.isArray(a[i])){(j.specialEasing=
rocket-nyan/js/jquery.min.js:j.specialEasing||{})[i]=a[i][1];a[i]=a[i][0]}}if(j.overflow!=null)this.style.overflow="hidden";j.curAnim=c.extend({},a);c.each(a,function(r,u){var z=new c.fx(k,j,r);if(Ab.test(u))z[u==="toggle"?o?"show":"hide":u](a);else{var C=Bb.exec(u),B=z.cur(true)||0;if(C){u=parseFloat(C[2]);var E=C[3]||"px";if(E!=="px"){k.style[r]=(u||1)+E;B=(u||1)/z.cur(true)*B;k.style[r]=B+E}if(C[1])u=(C[1]==="-="?-1:1)*u+B;z.custom(B,u,E)}else z.custom(B,u,"")}});return true})},stop:function(a,b){var d=c.timers;a&&this.queue([]);
rocket-nyan/js/jquery.min.js:this.each(function(){for(var f=d.length-1;f>=0;f--)if(d[f].elem===this){b&&d[f](true);d.splice(f,1)}});b||this.dequeue();return this}});c.each({slideDown:K("show",1),slideUp:K("hide",1),slideToggle:K("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"}},function(a,b){c.fn[a]=function(d,f){return this.animate(b,d,f)}});c.extend({speed:function(a,b,d){var f=a&&typeof a==="object"?a:{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,easing:d&&b||b&&!c.isFunction(b)&&b};f.duration=c.fx.off?0:typeof f.duration===
rocket-nyan/js/jquery.min.js:"number"?f.duration:c.fx.speeds[f.duration]||c.fx.speeds._default;f.old=f.complete;f.complete=function(){f.queue!==false&&c(this).dequeue();c.isFunction(f.old)&&f.old.call(this)};return f},easing:{linear:function(a,b,d,f){return d+f*a},swing:function(a,b,d,f){return(-Math.cos(a*Math.PI)/2+0.5)*f+d}},timers:[],fx:function(a,b,d){this.options=b;this.elem=a;this.prop=d;if(!b.orig)b.orig={}}});c.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this);(c.fx.step[this.prop]||
rocket-nyan/js/jquery.min.js:c.fx.step._default)(this);if((this.prop==="height"||this.prop==="width")&&this.elem.style)this.elem.style.display="block"},cur:function(a){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];return(a=parseFloat(c.css(this.elem,this.prop,a)))&&a>-10000?a:parseFloat(c.curCSS(this.elem,this.prop))||0},custom:function(a,b,d){function f(j){return e.step(j)}this.startTime=J();this.start=a;this.end=b;this.unit=d||this.unit||"px";this.now=this.start;
rocket-nyan/js/jquery.min.js:this.pos=this.state=0;var e=this;f.elem=this.elem;if(f()&&c.timers.push(f)&&!W)W=setInterval(c.fx.tick,13)},show:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.show=true;this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur());c(this.elem).show()},hide:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.hide=true;this.custom(this.cur(),0)},step:function(a){var b=J(),d=true;if(a||b>=this.options.duration+this.startTime){this.now=
rocket-nyan/js/jquery.min.js:this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;for(var f in this.options.curAnim)if(this.options.curAnim[f]!==true)d=false;if(d){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;a=c.data(this.elem,"olddisplay");this.elem.style.display=a?a:this.options.display;if(c.css(this.elem,"display")==="none")this.elem.style.display="block"}this.options.hide&&c(this.elem).hide();if(this.options.hide||this.options.show)for(var e in this.options.curAnim)c.style(this.elem,
rocket-nyan/js/jquery.min.js:e,this.options.orig[e]);this.options.complete.call(this.elem)}return false}else{e=b-this.startTime;this.state=e/this.options.duration;a=this.options.easing||(c.easing.swing?"swing":"linear");this.pos=c.easing[this.options.specialEasing&&this.options.specialEasing[this.prop]||a](this.state,e,0,1,this.options.duration);this.now=this.start+(this.end-this.start)*this.pos;this.update()}return true}};c.extend(c.fx,{tick:function(){for(var a=c.timers,b=0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||
rocket-nyan/js/jquery.min.js:c.fx.stop()},stop:function(){clearInterval(W);W=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,"opacity",a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=null)a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit;else a.elem[a.prop]=a.now}}});if(c.expr&&c.expr.filters)c.expr.filters.animated=function(a){return c.grep(c.timers,function(b){return a===b.elem}).length};c.fn.offset="getBoundingClientRect"in s.documentElement?
rocket-nyan/js/jquery.min.js:function(a){var b=this[0];if(a)return this.each(function(e){c.offset.setOffset(this,a,e)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);var d=b.getBoundingClientRect(),f=b.ownerDocument;b=f.body;f=f.documentElement;return{top:d.top+(self.pageYOffset||c.support.boxModel&&f.scrollTop||b.scrollTop)-(f.clientTop||b.clientTop||0),left:d.left+(self.pageXOffset||c.support.boxModel&&f.scrollLeft||b.scrollLeft)-(f.clientLeft||b.clientLeft||0)}}:function(a){var b=
rocket-nyan/js/jquery.min.js:this[0];if(a)return this.each(function(r){c.offset.setOffset(this,a,r)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);c.offset.initialize();var d=b.offsetParent,f=b,e=b.ownerDocument,j,i=e.documentElement,o=e.body;f=(e=e.defaultView)?e.getComputedStyle(b,null):b.currentStyle;for(var k=b.offsetTop,n=b.offsetLeft;(b=b.parentNode)&&b!==o&&b!==i;){if(c.offset.supportsFixedPosition&&f.position==="fixed")break;j=e?e.getComputedStyle(b,null):b.currentStyle;
rocket-nyan/js/jquery.min.js:k-=b.scrollTop;n-=b.scrollLeft;if(b===d){k+=b.offsetTop;n+=b.offsetLeft;if(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(b.nodeName))){k+=parseFloat(j.borderTopWidth)||0;n+=parseFloat(j.borderLeftWidth)||0}f=d;d=b.offsetParent}if(c.offset.subtractsBorderForOverflowNotVisible&&j.overflow!=="visible"){k+=parseFloat(j.borderTopWidth)||0;n+=parseFloat(j.borderLeftWidth)||0}f=j}if(f.position==="relative"||f.position==="static"){k+=o.offsetTop;n+=o.offsetLeft}if(c.offset.supportsFixedPosition&&
rocket-nyan/js/jquery.min.js:f.position==="fixed"){k+=Math.max(i.scrollTop,o.scrollTop);n+=Math.max(i.scrollLeft,o.scrollLeft)}return{top:k,left:n}};c.offset={initialize:function(){var a=s.body,b=s.createElement("div"),d,f,e,j=parseFloat(c.curCSS(a,"marginTop",true))||0;c.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"});b.innerHTML="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
rocket-nyan/js/jquery.min.js:a.insertBefore(b,a.firstChild);d=b.firstChild;f=d.firstChild;e=d.nextSibling.firstChild.firstChild;this.doesNotAddBorder=f.offsetTop!==5;this.doesAddBorderForTableAndCells=e.offsetTop===5;f.style.position="fixed";f.style.top="20px";this.supportsFixedPosition=f.offsetTop===20||f.offsetTop===15;f.style.position=f.style.top="";d.style.overflow="hidden";d.style.position="relative";this.subtractsBorderForOverflowNotVisible=f.offsetTop===-5;this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==j;a.removeChild(b);
rocket-nyan/js/jquery.min.js:c.offset.initialize=c.noop},bodyOffset:function(a){var b=a.offsetTop,d=a.offsetLeft;c.offset.initialize();if(c.offset.doesNotIncludeMarginInBodyOffset){b+=parseFloat(c.curCSS(a,"marginTop",true))||0;d+=parseFloat(c.curCSS(a,"marginLeft",true))||0}return{top:b,left:d}},setOffset:function(a,b,d){if(/static/.test(c.curCSS(a,"position")))a.style.position="relative";var f=c(a),e=f.offset(),j=parseInt(c.curCSS(a,"top",true),10)||0,i=parseInt(c.curCSS(a,"left",true),10)||0;if(c.isFunction(b))b=b.call(a,
rocket-nyan/js/jquery.min.js:d,e);d={top:b.top-e.top+j,left:b.left-e.left+i};"using"in b?b.using.call(a,d):f.css(d)}};c.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),d=this.offset(),f=/^body|html$/i.test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=parseFloat(c.curCSS(a,"marginTop",true))||0;d.left-=parseFloat(c.curCSS(a,"marginLeft",true))||0;f.top+=parseFloat(c.curCSS(b[0],"borderTopWidth",true))||0;f.left+=parseFloat(c.curCSS(b[0],"borderLeftWidth",true))||0;return{top:d.top-
rocket-nyan/js/jquery.min.js:f.top,left:d.left-f.left}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||s.body;a&&!/^body|html$/i.test(a.nodeName)&&c.css(a,"position")==="static";)a=a.offsetParent;return a})}});c.each(["Left","Top"],function(a,b){var d="scroll"+b;c.fn[d]=function(f){var e=this[0],j;if(!e)return null;if(f!==w)return this.each(function(){if(j=wa(this))j.scrollTo(!a?f:c(j).scrollLeft(),a?f:c(j).scrollTop());else this[d]=f});else return(j=wa(e))?"pageXOffset"in j?j[a?"pageYOffset":
rocket-nyan/js/jquery.min.js:"pageXOffset"]:c.support.boxModel&&j.document.documentElement[d]||j.document.body[d]:e[d]}});c.each(["Height","Width"],function(a,b){var d=b.toLowerCase();c.fn["inner"+b]=function(){return this[0]?c.css(this[0],d,false,"padding"):null};c.fn["outer"+b]=function(f){return this[0]?c.css(this[0],d,false,f?"margin":"border"):null};c.fn[d]=function(f){var e=this[0];if(!e)return f==null?null:this;if(c.isFunction(f))return this.each(function(j){var i=c(this);i[d](f.call(this,j,i[d]()))});return"scrollTo"in
rocket-nyan/js/jquery.min.js:e&&e.document?e.document.compatMode==="CSS1Compat"&&e.document.documentElement["client"+b]||e.document.body["client"+b]:e.nodeType===9?Math.max(e.documentElement["client"+b],e.body["scroll"+b],e.documentElement["scroll"+b],e.body["offset"+b],e.documentElement["offset"+b]):f===w?c.css(e,d):this.css(d,typeof f==="string"?f:f+"px")}});A.jQuery=A.$=c})(window);
rocket-original/Makefile:COMPILER	= ../tools/compiler.jar
rocket-original/Makefile:DEST		= jquery.rocket.min.js
rocket-original/Makefile:SOURCE		= jquery.rocket.js
rocket-original/Makefile:all		: $(DEST)
rocket-original/Makefile:$(DEST)		: $(COMPILER) $(SOURCE)
rocket-original/Makefile:		java -jar $(COMPILER) --js $(SOURCE) --js_output_file $(DEST)
rocket-original/Makefile:clean		:
rocket-original/Makefile:		rm -f $(DEST)
rocket-original/index.html:<!DOCTYPE html>
rocket-original/index.html:<html>
rocket-original/index.html:  <head>
rocket-original/index.html:    <title>Welcome to our world</title>
rocket-original/index.html:    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
rocket-original/index.html:    <!--[if IE]><script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
rocket-original/index.html:  </head>
rocket-original/index.html:  <body>
rocket-original/index.html:    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
rocket-original/index.html:    <script src="jquery.rocket.js"></script>
rocket-original/index.html:    <p><a id="clickme" href="#">click me !</a></p>
rocket-original/index.html:    <p>or: <span>↑ ↑ ↓ ↓ ← → ← → B A</span></p>
rocket-original/index.html:    <script type="text/javascript">
rocket-original/index.html:      //$(window).rocket({enterOn: 'now', base_url: 'img/'});
rocket-original/index.html:      //$(window).rocket({enterOn: 'timer', delayTime: 2000, base_url: 'img/'});
rocket-original/index.html:      $(window).rocket({enterOn: 'konami-code', base_url: 'img/'});
rocket-original/index.html:      $('#clickme').rocket({enterOn: 'click', base_url: 'img/'});
rocket-original/index.html:    </script>
rocket-original/index.html:  </body>
rocket-original/index.html:</html>
rocket-original/jquery.rocket.compressed.js:(function(a){a.fn.rocket=function(b){b=a.extend({base_url:"https://raw.github.com/moul/jquery-rocket/master/",enterOn:"now",delayTime:5E3,spread:3},b);return this.each(function(){function h(){_propulsion&&(c.css("WebkitTransform","rotate("+(Math.floor(Math.random()*b.spread)-(b.spread-1)/2)+"deg)"),i.css({left:50,bottom:78,display:"block",marginLeft:-10+Math.floor(Math.random()*20),backgroundPosition:Math.floor(Math.random()*2)<1?"0% 0%":"left bottom"}).animate({left:"-=58",bottom:"-=100"},120,function(){setTimeout(h,
rocket-original/jquery.rocket.compressed.js:10)}))}function d(){if(!f){g=!1;f=!0;var b=c.parent().css("overflow"),d=a("body").width(),e=Math.max(a("body").height(),a(window).height());j.css("opacity",0);c.parent().css("overflow","hidden");a("html:not(:animated),body:not(:animated)").animate({scrollTop:e-a(window).height()},500,function(){g||(g=!0,c.css({display:"block",left:d-275,top:e}).animate({top:"-=500"},500).animate({top:"+=25"},200).delay(200).animate({left:"-="+(d-250)},1E3).animate({left:"+=25"},200,function(){j.delay(100).animate({opacity:"+=1"},
rocket-original/jquery.rocket.compressed.js:300,function(){_propulsion=!0;h();a("html:not(:animated),body:not(:animated)").delay(2300).animate({scrollTop:0},3200);c.delay(2E3).animate({left:"+="+d,top:"-="+(e+400)},5E3,function(){c.parent().css("overflow",b);f=_propulsion=!1;i.css("display","none")})})}))})}}var k=a(this),f=!1,g=!1;a("body").append('<div id="rocket" style="display: none"></div>');var c=a("#rocket").css({width:275,height:375,zIndex:9999,background:"url('"+b.base_url+"img/rocket-off.png') no-repeat",margin:"140px 0 50px",position:"absolute"});
rocket-original/jquery.rocket.compressed.js:c.append('<div id="rocketFire"></span>');var j=a("#rocketFire").css({position:"absolute",height:375,width:275,background:'url("'+b.base_url+'img/rocket-fire.png") no-repeat'});c.append('<span id="rocketSteam"></span>');var i=a("#rocketSteam").css({position:"absolute",bottom:78,left:50,width:80,height:80,background:'url("'+b.base_url+'img/steam.png") no-repeat',opacity:0.8,display:"none"});if(b.enterOn=="now")d();else if(b.enterOn=="timer")setTimeout(d,b.delayTime);else if(b.enterOn=="click")k.bind("click",
rocket-original/jquery.rocket.compressed.js:function(a){a.preventDefault();d()});else if(b.enterOn=="konami-code"){var e=[];a(window).bind("keydown.rocketz",function(a){e.push(a.keyCode);e.toString().indexOf("38,38,40,40,37,39,37,39,66,65")>=0&&(d(),e=[])},!0)}})}})(jQuery);
rocket-original/jquery.rocket.js:;(function($) {
rocket-original/jquery.rocket.js:      $.fn.rocket = $.fn.rocket || function(options) {
rocket-original/jquery.rocket.js:          var defaults = {
rocket-original/jquery.rocket.js:              base_url: 'https://raw.github.com/moul/jquery-rocket/master/rocket-original/img/',
rocket-original/jquery.rocket.js:              enterOn: 'now',
rocket-original/jquery.rocket.js:              delayTime: 5000,
rocket-original/jquery.rocket.js:              spread: 3
rocket-original/jquery.rocket.js:          };
rocket-original/jquery.rocket.js:          var options = $.extend(defaults, options);
rocket-original/jquery.rocket.js:
rocket-original/jquery.rocket.js:          return this.each(function() {
rocket-original/jquery.rocket.js:                               var _this = $(this);
rocket-original/jquery.rocket.js:                               var _started = false;
rocket-original/jquery.rocket.js:                               var _propulation = false;
rocket-original/jquery.rocket.js:                               var _on_the_launchpad = false;
rocket-original/jquery.rocket.js:
rocket-original/jquery.rocket.js:                               var rocketMarkup = '<div id="rocket" style="display: none"></div>';
rocket-original/jquery.rocket.js:                               $('body').append(rocketMarkup);
rocket-original/jquery.rocket.js:                               var rocket = $('#rocket').css({
rocket-original/jquery.rocket.js:                                                                 width: 275,
rocket-original/jquery.rocket.js:                                                                 height: 375,
rocket-original/jquery.rocket.js:                                                                 zIndex: 9999,
rocket-original/jquery.rocket.js:                                                                 background: "url('" + options.base_url + "/rocket-off.png') no-repeat",
rocket-original/jquery.rocket.js:                                                                 margin: "140px 0 50px",
rocket-original/jquery.rocket.js:                                                                 position: "absolute"
rocket-original/jquery.rocket.js:                                                             });
rocket-original/jquery.rocket.js:
rocket-original/jquery.rocket.js:                               rocket.append('<div id="rocketFire"></span>');
rocket-original/jquery.rocket.js:                               var fire = $('#rocketFire').css({
rocket-original/jquery.rocket.js:                                                                   position: 'absolute',
rocket-original/jquery.rocket.js:                                                                   height: 375,
rocket-original/jquery.rocket.js:                                                                   width: 275,
rocket-original/jquery.rocket.js:                                                                   background: 'url("' + options.base_url + '/rocket-fire.png") no-repeat'
rocket-original/jquery.rocket.js:                                                               });
rocket-original/jquery.rocket.js:
rocket-original/jquery.rocket.js:                               rocket.append('<span id="rocketSteam"></span>');
rocket-original/jquery.rocket.js:                               var steam = $('#rocketSteam').css({
rocket-original/jquery.rocket.js:                                                                     position: 'absolute',
rocket-original/jquery.rocket.js:                                                                     bottom: 78,
rocket-original/jquery.rocket.js:                                                                     left: 50,
rocket-original/jquery.rocket.js:                                                                     width: 80,
rocket-original/jquery.rocket.js:                                                                     height: 80,
rocket-original/jquery.rocket.js:                                                                     background: 'url("' + options.base_url + '/steam.png") no-repeat',
rocket-original/jquery.rocket.js:                                                                     opacity: 0.8,
rocket-original/jquery.rocket.js:                                                                     display: 'none'
rocket-original/jquery.rocket.js:                                                                 });
rocket-original/jquery.rocket.js:
rocket-original/jquery.rocket.js:                               function propulsion() {
rocket-original/jquery.rocket.js:                                   if (!_propulsion) {
rocket-original/jquery.rocket.js:                                       return ;
rocket-original/jquery.rocket.js:                                   }
rocket-original/jquery.rocket.js:                                   var rotate = Math.floor(Math.random() * options.spread) - ((options.spread - 1) / 2);
rocket-original/jquery.rocket.js:                                   rocket.css('WebkitTransform', 'rotate(' + rotate + 'deg)');
rocket-original/jquery.rocket.js:                                   steam.css({
rocket-original/jquery.rocket.js:                                                 left: 50,
rocket-original/jquery.rocket.js:                                                 bottom: 78,
rocket-original/jquery.rocket.js:                                                 display: 'block',
rocket-original/jquery.rocket.js:                                                 marginLeft: -10 + Math.floor(Math.random() * 20),
rocket-original/jquery.rocket.js:                                                 backgroundPosition: (Math.floor(Math.random() * 2) < 1 ? '0% 0%' : 'left bottom')
rocket-original/jquery.rocket.js:                                             })
rocket-original/jquery.rocket.js:                                       .animate({
rocket-original/jquery.rocket.js:                                                    left: '-=58',
rocket-original/jquery.rocket.js:                                                    bottom: '-=100'
rocket-original/jquery.rocket.js:                                                }, 120,
rocket-original/jquery.rocket.js:                                                function(){
rocket-original/jquery.rocket.js:                                                    setTimeout(propulsion, 10);
rocket-original/jquery.rocket.js:                                                });
rocket-original/jquery.rocket.js:                               }
rocket-original/jquery.rocket.js:
rocket-original/jquery.rocket.js:                               function init() {
rocket-original/jquery.rocket.js:                                   if (_started) {
rocket-original/jquery.rocket.js:                                       return ;
rocket-original/jquery.rocket.js:                                   }
rocket-original/jquery.rocket.js:                                   _on_the_launchpad = false;
rocket-original/jquery.rocket.js:                                   _started = true;
rocket-original/jquery.rocket.js:                                   var _overflow_state = rocket.parent().css('overflow');
rocket-original/jquery.rocket.js:                                   var _width = $('body').width();
rocket-original/jquery.rocket.js:                                   var _height = Math.max($('body').height(), $(window).height());
rocket-original/jquery.rocket.js:                                   fire.css('opacity', 0);
rocket-original/jquery.rocket.js:                                   rocket.parent().css('overflow', 'hidden');
rocket-original/jquery.rocket.js:                                   $("html:not(:animated),body:not(:animated)")
rocket-original/jquery.rocket.js:                                       .animate({scrollTop: _height - $(window).height()}, 500, function() {
rocket-original/jquery.rocket.js:                                                    if (_on_the_launchpad) {
rocket-original/jquery.rocket.js:                                                        return ;
rocket-original/jquery.rocket.js:                                                    }
rocket-original/jquery.rocket.js:                                                    _on_the_launchpad = true;
rocket-original/jquery.rocket.js:                                                    rocket.css({
rocket-original/jquery.rocket.js:                                                                   display: 'block',
rocket-original/jquery.rocket.js:                                                                   left: _width - 275,
rocket-original/jquery.rocket.js:                                                                   top: _height
rocket-original/jquery.rocket.js:                                                               })
rocket-original/jquery.rocket.js:                                                        .animate({top: '-=500'}, 500).animate({top: '+=25'}, 200)
rocket-original/jquery.rocket.js:                                                        .delay(200)
rocket-original/jquery.rocket.js:                                                        .animate({left: '-=' + (_width - 250)}, 1000)
rocket-original/jquery.rocket.js:                                                        .animate({left: '+=25'}, 200, function() {
rocket-original/jquery.rocket.js:                                                                     fire
rocket-original/jquery.rocket.js:                                                                         .delay(100)
rocket-original/jquery.rocket.js:                                                                         .animate({opacity: '+=1'}, 300, function() {
rocket-original/jquery.rocket.js:                                                                                      _propulsion = true;
rocket-original/jquery.rocket.js:                                                                                      propulsion();
rocket-original/jquery.rocket.js:                                                                                      $("html:not(:animated),body:not(:animated)")
rocket-original/jquery.rocket.js:                                                                                          .delay(2300)
rocket-original/jquery.rocket.js:                                                                                          .animate({scrollTop: 0}, 3200);
rocket-original/jquery.rocket.js:                                                                                      rocket
rocket-original/jquery.rocket.js:                                                                                          .delay(2000)
rocket-original/jquery.rocket.js:                                                                                          .animate({'left':'+=' + _width, "top": '-=' + (_height + 400)}, 5000,
rocket-original/jquery.rocket.js:                                                                                                   function() {
rocket-original/jquery.rocket.js:                                                                                                       rocket.parent().css('overflow', _overflow_state);
rocket-original/jquery.rocket.js:                                                                                                       _propulsion = false;
rocket-original/jquery.rocket.js:                                                                                                       _started = false;
rocket-original/jquery.rocket.js:                                                                                                       steam.css('display' ,'none');
rocket-original/jquery.rocket.js:                                                                                                   });
rocket-original/jquery.rocket.js:                                                                                  });
rocket-original/jquery.rocket.js:                                                                 });
rocket-original/jquery.rocket.js:                                                });
rocket-original/jquery.rocket.js:                               }
rocket-original/jquery.rocket.js:
rocket-original/jquery.rocket.js:                               if (options.enterOn == 'now') {
rocket-original/jquery.rocket.js:                                   init();
rocket-original/jquery.rocket.js:                               } else if (options.enterOn == 'timer') {
rocket-original/jquery.rocket.js:                                   setTimeout(init, options.delayTime);
rocket-original/jquery.rocket.js:                               } else if(options.enterOn == 'click') {
rocket-original/jquery.rocket.js:                                   _this.bind('click', function(e) {
rocket-original/jquery.rocket.js:                                                  e.preventDefault();
rocket-original/jquery.rocket.js:                                                  init();
rocket-original/jquery.rocket.js:                                              });
rocket-original/jquery.rocket.js:                               } else if(options.enterOn == 'konami-code') {
rocket-original/jquery.rocket.js:                                   var kkeys = [], konami = "38,38,40,40,37,39,37,39,66,65";
rocket-original/jquery.rocket.js:                                   $(window).bind("keydown.rocketz", function(e) {
rocket-original/jquery.rocket.js:                                                      kkeys.push(e.keyCode);
rocket-original/jquery.rocket.js:                                                      if (kkeys.toString().indexOf(konami) >= 0) {
rocket-original/jquery.rocket.js:                                                          init();
rocket-original/jquery.rocket.js:                                                          kkeys = []
rocket-original/jquery.rocket.js:                                                      }
rocket-original/jquery.rocket.js:                                                  }, true);
rocket-original/jquery.rocket.js:                               }
rocket-original/jquery.rocket.js:
rocket-original/jquery.rocket.js:                           });
rocket-original/jquery.rocket.js:      }
rocket-original/jquery.rocket.js:  })(jQuery);
rocket-original/jquery.rocket.min.js:(function(a){a.fn.rocket=a.fn.rocket||function(b){b=a.extend({base_url:"https://raw.github.com/moul/jquery-rocket/master/rocket-original/img/",enterOn:"now",delayTime:5E3,spread:3},b);return this.each(function(){function h(){_propulsion&&(c.css("WebkitTransform","rotate("+(Math.floor(Math.random()*b.spread)-(b.spread-1)/2)+"deg)"),i.css({left:50,bottom:78,display:"block",marginLeft:-10+Math.floor(Math.random()*20),backgroundPosition:Math.floor(Math.random()*2)<1?"0% 0%":"left bottom"}).animate({left:"-=58",
rocket-original/jquery.rocket.min.js:bottom:"-=100"},120,function(){setTimeout(h,10)}))}function d(){if(!f){g=!1;f=!0;var b=c.parent().css("overflow"),d=a("body").width(),e=Math.max(a("body").height(),a(window).height());j.css("opacity",0);c.parent().css("overflow","hidden");a("html:not(:animated),body:not(:animated)").animate({scrollTop:e-a(window).height()},500,function(){g||(g=!0,c.css({display:"block",left:d-275,top:e}).animate({top:"-=500"},500).animate({top:"+=25"},200).delay(200).animate({left:"-="+(d-250)},1E3).animate({left:"+=25"},
rocket-original/jquery.rocket.min.js:200,function(){j.delay(100).animate({opacity:"+=1"},300,function(){_propulsion=!0;h();a("html:not(:animated),body:not(:animated)").delay(2300).animate({scrollTop:0},3200);c.delay(2E3).animate({left:"+="+d,top:"-="+(e+400)},5E3,function(){c.parent().css("overflow",b);f=_propulsion=!1;i.css("display","none")})})}))})}}var k=a(this),f=!1,g=!1;a("body").append('<div id="rocket" style="display: none"></div>');var c=a("#rocket").css({width:275,height:375,zIndex:9999,background:"url('"+b.base_url+"/rocket-off.png') no-repeat",
rocket-original/jquery.rocket.min.js:margin:"140px 0 50px",position:"absolute"});c.append('<div id="rocketFire"></span>');var j=a("#rocketFire").css({position:"absolute",height:375,width:275,background:'url("'+b.base_url+'/rocket-fire.png") no-repeat'});c.append('<span id="rocketSteam"></span>');var i=a("#rocketSteam").css({position:"absolute",bottom:78,left:50,width:80,height:80,background:'url("'+b.base_url+'/steam.png") no-repeat',opacity:0.8,display:"none"});if(b.enterOn=="now")d();else if(b.enterOn=="timer")setTimeout(d,b.delayTime);
rocket-original/jquery.rocket.min.js:else if(b.enterOn=="click")k.bind("click",function(a){a.preventDefault();d()});else if(b.enterOn=="konami-code"){var e=[];a(window).bind("keydown.rocketz",function(a){e.push(a.keyCode);e.toString().indexOf("38,38,40,40,37,39,37,39,66,65")>=0&&(d(),e=[])},!0)}})}})(jQuery);
Makefile:#BINARY = ./test/darwin-x86_64-helloworld-dynamic
Makefile:BINARY = ./test/linux-x86_64-helloworld-static
Makefile:MISTERBIN_DIR = ./cmd/misterbin
Makefile:MISTERBUILD_DIR = ./cmd/misterbuild
Makefile:.PHONY: build
Makefile:build: misterbin misterbuild
Makefile:misterbuild: $(MISTERBUILD_DIR)/mister-build.go $(MISTERBUILD_DIR)/bindata.go
Makefile:	go build -o ./$@ ./$(MISTERBUILD_DIR)
Makefile:$(MISTERBUILD_DIR)/bindata.go: $(MISTERBIN_DIR)/mister-bin.go
Makefile:	go get github.com/jteeuwen/go-bindata/...
Makefile:	go-bindata -prefix=$(dir $<) -nocompress -o ./$@ $<
Makefile:	ls -la $@
Makefile:$(BINARY):
Makefile:	cd test; $(MAKE)
Makefile:$(MISTERBIN_DIR)/bindata.go: $(BINARY)
Makefile:	go get github.com/jteeuwen/go-bindata/...
Makefile:	go-bindata -o ./$@ $(BINARY)
Makefile:	ls -la $@
Makefile:misterbin: $(MISTERBIN_DIR)/mister-bin.go $(MISTERBIN_DIR)/bindata.go
Makefile:	go build -o ./$@ ./$(MISTERBIN_DIR)
Makefile:.PHONY: test
Makefile:test: misterbin
Makefile:	./misterbin -h || true
Makefile:	./misterbin $(notdir $(BINARY))
Makefile:.PHONY: docker
Makefile:docker: docker/misterbin docker/Dockerfile
Makefile:	docker build --no-cache -t misterbin docker
Makefile:	docker run -it --rm misterbin /bin/$(notdir $(BINARY))
Makefile:	docker export `docker create misterbin /dont-exists` | tar -tvf -
Makefile:docker/misterbin: $(MISTERBIN_DIR)/mister-bin.go $(MISTERBIN_DIR)/bindata.go
Makefile:	cd $(MISTERBIN_DIR); goxc -bc="linux,386" -d=../docker -n=misterbin -o="{{.Dest}}{{.PS}}{{.ExeName}}{{.Ext}}" -include="" compile
Makefile:.PHONY: clean
Makefile:clean:
Makefile:	./misterbin --uninstall
cmd/misterbin/mister-bin.go:package main
cmd/misterbin/mister-bin.go:import (
cmd/misterbin/mister-bin.go:	"fmt"
cmd/misterbin/mister-bin.go:	"os"
cmd/misterbin/mister-bin.go:	"os/exec"
cmd/misterbin/mister-bin.go:	"path"
cmd/misterbin/mister-bin.go:	"path/filepath"
cmd/misterbin/mister-bin.go:	"strings"
cmd/misterbin/mister-bin.go:	"syscall"
cmd/misterbin/mister-bin.go:	"unsafe"
cmd/misterbin/mister-bin.go:	"github.com/Sirupsen/logrus"
cmd/misterbin/mister-bin.go:	"github.com/codegangsta/cli"
cmd/misterbin/mister-bin.go:)
cmd/misterbin/mister-bin.go:const mapMaxSize = 1e8
cmd/misterbin/mister-bin.go:const (
cmd/misterbin/mister-bin.go:	InstallBinary = iota
cmd/misterbin/mister-bin.go:	InstallSymlink
cmd/misterbin/mister-bin.go:)
cmd/misterbin/mister-bin.go:type Binary struct {
cmd/misterbin/mister-bin.go:	Asset         []byte
cmd/misterbin/mister-bin.go:	Name          string
cmd/misterbin/mister-bin.go:	BaseDir       string
cmd/misterbin/mister-bin.go:	InstallMethod int
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func NewBinary(name string) Binary {
cmd/misterbin/mister-bin.go:	wd, err := os.Getwd()
cmd/misterbin/mister-bin.go:	if err != nil {
cmd/misterbin/mister-bin.go:		wd = "/"
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	return Binary{
cmd/misterbin/mister-bin.go:		Name:          name,
cmd/misterbin/mister-bin.go:		BaseDir:       wd,
cmd/misterbin/mister-bin.go:		InstallMethod: InstallBinary,
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func (b *Binary) FullPathFileName() string {
cmd/misterbin/mister-bin.go:	return strings.Replace(b.Name, "/", "_", -1)
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func (b *Binary) FileName() string {
cmd/misterbin/mister-bin.go:	return path.Base(b.Name)
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func (b *Binary) FilePath() string {
cmd/misterbin/mister-bin.go:	return filepath.Join(b.BaseDir, b.FileName())
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func (b *Binary) TempPath() string {
cmd/misterbin/mister-bin.go:	// FIXME: ensure using memory instead of disk if p ossible
cmd/misterbin/mister-bin.go:	return filepath.Join(os.TempDir(), b.FileName())
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func (b *Binary) Uninstall(installPath string) error {
cmd/misterbin/mister-bin.go:	logrus.Infof("Uninstalling binary %q (%s)", b.Name, installPath)
cmd/misterbin/mister-bin.go:	if _, err := os.Stat(installPath); os.IsNotExist(err) {
cmd/misterbin/mister-bin.go:		logrus.Debugf("Asset %q not installed, nothing to do", installPath)
cmd/misterbin/mister-bin.go:		return nil
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	return os.Remove(installPath)
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func (b *Binary) Install(installPath string) error {
cmd/misterbin/mister-bin.go:	os.MkdirAll(filepath.Dir(installPath), 0700)
cmd/misterbin/mister-bin.go:	switch b.InstallMethod {
cmd/misterbin/mister-bin.go:	case InstallBinary:
cmd/misterbin/mister-bin.go:		return b.InstallBinary(installPath)
cmd/misterbin/mister-bin.go:	case InstallSymlink:
cmd/misterbin/mister-bin.go:		return b.InstallSymlink(installPath)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	return fmt.Errorf("Invalid install method")
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func (b *Binary) InstallSymlink(installPath string) error {
cmd/misterbin/mister-bin.go:	logrus.Infof("Installing symlink %q (%s)", b.Name, installPath)
cmd/misterbin/mister-bin.go:	misterBinPath, err := filepath.Abs(os.Args[0])
cmd/misterbin/mister-bin.go:	if err != nil {
cmd/misterbin/mister-bin.go:		return err
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	return os.Symlink(misterBinPath, installPath)
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func (b *Binary) InstallBinary(filepath string) error {
cmd/misterbin/mister-bin.go:	logrus.Infof("Installing binary %q (%s)", b.Name, filepath)
cmd/misterbin/mister-bin.go:	if _, err := os.Stat(filepath); !os.IsNotExist(err) {
cmd/misterbin/mister-bin.go:		logrus.Debugf("Asset already installed: %q", filepath)
cmd/misterbin/mister-bin.go:		return nil
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	asset, err := Asset(b.Name)
cmd/misterbin/mister-bin.go:	if err != nil {
cmd/misterbin/mister-bin.go:		return fmt.Errorf("failed to load the asset %q: %v", b.Name, err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	length := len(asset)
cmd/misterbin/mister-bin.go:	size := int(unsafe.Sizeof(0)) * length
cmd/misterbin/mister-bin.go:	if size > mapMaxSize*int(unsafe.Sizeof(0)) {
cmd/misterbin/mister-bin.go:		return fmt.Errorf("file too big for current map size: %d > %d", size, mapMaxSize*int(unsafe.Sizeof(0)))
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	logrus.Debugf("Creating map file: %q", filepath)
cmd/misterbin/mister-bin.go:	mapFile, err := os.Create(filepath)
cmd/misterbin/mister-bin.go:	if err != nil {
cmd/misterbin/mister-bin.go:		return fmt.Errorf("failed to create map file: %v", err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	logrus.Debugf("Seeking file")
cmd/misterbin/mister-bin.go:	if _, err = mapFile.Seek(int64(length-1), 0); err != nil {
cmd/misterbin/mister-bin.go:		return fmt.Errorf("failed to seek: %v", err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	logrus.Debugf("Writing to file")
cmd/misterbin/mister-bin.go:	if _, err = mapFile.Write([]byte(" ")); err != nil {
cmd/misterbin/mister-bin.go:		return fmt.Errorf("failed to write to file: %v", err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	logrus.Debugf("MMAPing")
cmd/misterbin/mister-bin.go:	fd := int(mapFile.Fd())
cmd/misterbin/mister-bin.go:	mmap, err := syscall.Mmap(fd, 0, size, syscall.PROT_READ|syscall.PROT_WRITE, syscall.MAP_SHARED)
cmd/misterbin/mister-bin.go:	if err != nil {
cmd/misterbin/mister-bin.go:		return fmt.Errorf("failed to mmap: %v", err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	logrus.Debugf("Filling array var")
cmd/misterbin/mister-bin.go:	mapArray := (*[mapMaxSize]byte)(unsafe.Pointer(&mmap[0]))
cmd/misterbin/mister-bin.go:	for i := 0; i < length; i++ {
cmd/misterbin/mister-bin.go:		mapArray[i] = asset[i]
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	// fmt.Println(*mapArray)
cmd/misterbin/mister-bin.go:	logrus.Debugf("MUNMAPing")
cmd/misterbin/mister-bin.go:	if err = syscall.Munmap(mmap); err != nil {
cmd/misterbin/mister-bin.go:		return fmt.Errorf("failed to munmap: %v", err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	logrus.Debugf("Closing")
cmd/misterbin/mister-bin.go:	if err = mapFile.Close(); err != nil {
cmd/misterbin/mister-bin.go:		return fmt.Errorf("failed to close: %v", err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	logrus.Debugf("Chmoding binary")
cmd/misterbin/mister-bin.go:	if err = os.Chmod(filepath, 0777); err != nil {
cmd/misterbin/mister-bin.go:		return fmt.Errorf("failed to chmod program: %v", err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	return nil
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func (b *Binary) Execute(args []string) error {
cmd/misterbin/mister-bin.go:	filepath := b.TempPath()
cmd/misterbin/mister-bin.go:	logrus.Infof("Executing binary %q (%s)", b.Name, filepath)
cmd/misterbin/mister-bin.go:	if len(args) > 0 {
cmd/misterbin/mister-bin.go:		logrus.Infof("args=%v", args)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	// temporary
cmd/misterbin/mister-bin.go:	if err := b.Uninstall(filepath); err != nil {
cmd/misterbin/mister-bin.go:		logrus.Debugf("Failed to uninstall temporary binary %q: %v", filepath, err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	if err := b.Install(filepath); err != nil {
cmd/misterbin/mister-bin.go:		return err
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	// FIXME: delete early
cmd/misterbin/mister-bin.go:	defer b.Uninstall(filepath)
cmd/misterbin/mister-bin.go:	cmd := exec.Command(filepath, args...)
cmd/misterbin/mister-bin.go:	cmd.Stdout = os.Stdout
cmd/misterbin/mister-bin.go:	cmd.Stdin = os.Stdin
cmd/misterbin/mister-bin.go:	cmd.Stderr = os.Stderr
cmd/misterbin/mister-bin.go:	cmd.Start()
cmd/misterbin/mister-bin.go:	return cmd.Wait()
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func GetBinaryByName(name string) (*Binary, error) {
cmd/misterbin/mister-bin.go:	for _, assetName := range AssetNames() {
cmd/misterbin/mister-bin.go:		if name == assetName {
cmd/misterbin/mister-bin.go:			bin := NewBinary(assetName)
cmd/misterbin/mister-bin.go:			return &bin, nil
cmd/misterbin/mister-bin.go:		}
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	for _, assetName := range AssetNames() {
cmd/misterbin/mister-bin.go:		if name == filepath.Base(assetName) {
cmd/misterbin/mister-bin.go:			bin := NewBinary(assetName)
cmd/misterbin/mister-bin.go:			return &bin, nil
cmd/misterbin/mister-bin.go:		}
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	return nil, fmt.Errorf("No match")
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func ActionExecute(c *cli.Context) {
cmd/misterbin/mister-bin.go:	bin, err := GetBinaryByName(c.Command.Name)
cmd/misterbin/mister-bin.go:	if err != nil {
cmd/misterbin/mister-bin.go:		logrus.Fatalf("No such binary %q: %v", c.Command.Name, err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	binaryUseContext(bin, c)
cmd/misterbin/mister-bin.go:	if err := bin.Execute(c.Args()); err != nil {
cmd/misterbin/mister-bin.go:		logrus.Fatalf("Failed to execute binary: %v", err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func binaryUseContext(bin *Binary, context *cli.Context) {
cmd/misterbin/mister-bin.go:	if basedir := context.Parent().String("basedir"); basedir != "" {
cmd/misterbin/mister-bin.go:		bin.BaseDir = basedir
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	if basedir := context.String("basedir"); basedir != "" {
cmd/misterbin/mister-bin.go:		bin.BaseDir = basedir
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	if symlinks := context.Bool("symlinks"); symlinks {
cmd/misterbin/mister-bin.go:		bin.InstallMethod = InstallSymlink
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func ActionInstall(c *cli.Context) {
cmd/misterbin/mister-bin.go:	for _, name := range AssetNames() {
cmd/misterbin/mister-bin.go:		bin := NewBinary(name)
cmd/misterbin/mister-bin.go:		binaryUseContext(&bin, c)
cmd/misterbin/mister-bin.go:		if err := bin.Install(bin.FilePath()); err != nil {
cmd/misterbin/mister-bin.go:			logrus.Fatalf("Failed to install binary: %v", err)
cmd/misterbin/mister-bin.go:		}
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func ActionUninstall(c *cli.Context) {
cmd/misterbin/mister-bin.go:	for _, name := range AssetNames() {
cmd/misterbin/mister-bin.go:		bin := NewBinary(name)
cmd/misterbin/mister-bin.go:		binaryUseContext(&bin, c)
cmd/misterbin/mister-bin.go:		if err := bin.Uninstall(bin.FilePath()); err != nil {
cmd/misterbin/mister-bin.go:			logrus.Fatalf("Failed to uninstall binary: %v", err)
cmd/misterbin/mister-bin.go:		}
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func hookBefore(c *cli.Context) error {
cmd/misterbin/mister-bin.go:	if c.Bool("debug") {
cmd/misterbin/mister-bin.go:		os.Setenv("MB_DEBUG", "1")
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	initLogging()
cmd/misterbin/mister-bin.go:	return nil
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func initLogging() {
cmd/misterbin/mister-bin.go:	if os.Getenv("MB_DEBUG") == "1" {
cmd/misterbin/mister-bin.go:		logrus.SetLevel(logrus.DebugLevel)
cmd/misterbin/mister-bin.go:	} else {
cmd/misterbin/mister-bin.go:		logrus.SetLevel(logrus.WarnLevel)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:}
cmd/misterbin/mister-bin.go:func main() {
cmd/misterbin/mister-bin.go:	if os.Args[0] == "/bin/sh" && len(os.Args) > 1 && os.Args[1] == "-c" {
cmd/misterbin/mister-bin.go:		// mister-bin is called as /bin/sh, probably from a 'FROM scratch' Docker image
cmd/misterbin/mister-bin.go:		args := strings.Split(os.Args[2], " ")
cmd/misterbin/mister-bin.go:		// FIXME: add a basic shell support
cmd/misterbin/mister-bin.go:		cmd := exec.Command(args[0], args[1:]...)
cmd/misterbin/mister-bin.go:		cmd.Stdout = os.Stdout
cmd/misterbin/mister-bin.go:		cmd.Stdin = os.Stdin
cmd/misterbin/mister-bin.go:		cmd.Stderr = os.Stderr
cmd/misterbin/mister-bin.go:		if err := cmd.Run(); err != nil {
cmd/misterbin/mister-bin.go:			logrus.Fatalf("/bin/sh: failed to execute sub command %q: %v", args, err)
cmd/misterbin/mister-bin.go:		}
cmd/misterbin/mister-bin.go:		return
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	// Checking if file is a symlink to mister-bin or mister-bin itself
cmd/misterbin/mister-bin.go:	fi, err := os.Lstat(os.Args[0])
cmd/misterbin/mister-bin.go:	if err != nil {
cmd/misterbin/mister-bin.go:		logrus.Fatalf("Failed to lstat %q: %v", os.Args[0], err)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	// we are a symlink, direct execution
cmd/misterbin/mister-bin.go:	if fi.Mode()&os.ModeSymlink == os.ModeSymlink {
cmd/misterbin/mister-bin.go:		initLogging()
cmd/misterbin/mister-bin.go:		bin, err := GetBinaryByName(filepath.Base(os.Args[0]))
cmd/misterbin/mister-bin.go:		if err != nil {
cmd/misterbin/mister-bin.go:			logrus.Fatalf("No such binary %q: %v", filepath.Base(os.Args[0]), err)
cmd/misterbin/mister-bin.go:		}
cmd/misterbin/mister-bin.go:		if err := bin.Execute(os.Args[1:]); err != nil {
cmd/misterbin/mister-bin.go:			logrus.Fatalf("Failed to execute binary: %v", err)
cmd/misterbin/mister-bin.go:		}
cmd/misterbin/mister-bin.go:		return
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	// we are not a symlink, standard menu
cmd/misterbin/mister-bin.go:	app := cli.NewApp()
cmd/misterbin/mister-bin.go:	app.Name = "Mister Bin"
cmd/misterbin/mister-bin.go:	app.Flags = []cli.Flag{
cmd/misterbin/mister-bin.go:		cli.BoolFlag{
cmd/misterbin/mister-bin.go:			Name:   "debug, D",
cmd/misterbin/mister-bin.go:			EnvVar: "MB_DEBUG",
cmd/misterbin/mister-bin.go:		},
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	app.Before = hookBefore
cmd/misterbin/mister-bin.go:	app.Commands = []cli.Command{
cmd/misterbin/mister-bin.go:		{
cmd/misterbin/mister-bin.go:			Name:   "install",
cmd/misterbin/mister-bin.go:			Action: ActionInstall,
cmd/misterbin/mister-bin.go:			Flags: []cli.Flag{
cmd/misterbin/mister-bin.go:				cli.StringFlag{
cmd/misterbin/mister-bin.go:					Name:  "basedir",
cmd/misterbin/mister-bin.go:					Usage: "Base dir to install binaries to",
cmd/misterbin/mister-bin.go:				},
cmd/misterbin/mister-bin.go:				cli.BoolFlag{
cmd/misterbin/mister-bin.go:					Name:  "symlinks",
cmd/misterbin/mister-bin.go:					Usage: " Create symlinks instead of real binaries",
cmd/misterbin/mister-bin.go:				},
cmd/misterbin/mister-bin.go:			},
cmd/misterbin/mister-bin.go:		},
cmd/misterbin/mister-bin.go:		{
cmd/misterbin/mister-bin.go:			Name:   "uninstall",
cmd/misterbin/mister-bin.go:			Action: ActionUninstall,
cmd/misterbin/mister-bin.go:			Flags: []cli.Flag{
cmd/misterbin/mister-bin.go:				cli.StringFlag{
cmd/misterbin/mister-bin.go:					Name:  "basedir",
cmd/misterbin/mister-bin.go:					Usage: "Base dir to uninstall binaries from",
cmd/misterbin/mister-bin.go:				},
cmd/misterbin/mister-bin.go:			},
cmd/misterbin/mister-bin.go:		},
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	for _, name := range AssetNames() {
cmd/misterbin/mister-bin.go:		command := cli.Command{
cmd/misterbin/mister-bin.go:			Name:   filepath.Base(name),
cmd/misterbin/mister-bin.go:			Action: ActionExecute,
cmd/misterbin/mister-bin.go:		}
cmd/misterbin/mister-bin.go:		app.Commands = append(app.Commands, command)
cmd/misterbin/mister-bin.go:	}
cmd/misterbin/mister-bin.go:	app.Run(os.Args)
cmd/misterbin/mister-bin.go:}
cmd/misterbuild/bindata.go:// Code generated by go-bindata.
cmd/misterbuild/bindata.go:// sources:
cmd/misterbuild/bindata.go:// misterbin/mister-bin.go
cmd/misterbuild/bindata.go:// DO NOT EDIT!
cmd/misterbuild/bindata.go:package main
cmd/misterbuild/bindata.go:import (
cmd/misterbuild/bindata.go:	"fmt"
cmd/misterbuild/bindata.go:	"strings"
cmd/misterbuild/bindata.go:	"os"
cmd/misterbuild/bindata.go:	"time"
cmd/misterbuild/bindata.go:	"io/ioutil"
cmd/misterbuild/bindata.go:	"path/filepath"
cmd/misterbuild/bindata.go:)
cmd/misterbuild/bindata.go:type asset struct {
cmd/misterbuild/bindata.go:	bytes []byte
cmd/misterbuild/bindata.go:	info  os.FileInfo
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:type bindataFileInfo struct {
cmd/misterbuild/bindata.go:	name string
cmd/misterbuild/bindata.go:	size int64
cmd/misterbuild/bindata.go:	mode os.FileMode
cmd/misterbuild/bindata.go:	modTime time.Time
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (fi bindataFileInfo) Name() string {
cmd/misterbuild/bindata.go:	return fi.name
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (fi bindataFileInfo) Size() int64 {
cmd/misterbuild/bindata.go:	return fi.size
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (fi bindataFileInfo) Mode() os.FileMode {
cmd/misterbuild/bindata.go:	return fi.mode
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (fi bindataFileInfo) ModTime() time.Time {
cmd/misterbuild/bindata.go:	return fi.modTime
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (fi bindataFileInfo) IsDir() bool {
cmd/misterbuild/bindata.go:	return false
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (fi bindataFileInfo) Sys() interface{} {
cmd/misterbuild/bindata.go:	return nil
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:var _misterBinGo = []byte(`package main
cmd/misterbuild/bindata.go:import (
cmd/misterbuild/bindata.go:	"fmt"
cmd/misterbuild/bindata.go:	"os"
cmd/misterbuild/bindata.go:	"os/exec"
cmd/misterbuild/bindata.go:	"path"
cmd/misterbuild/bindata.go:	"path/filepath"
cmd/misterbuild/bindata.go:	"strings"
cmd/misterbuild/bindata.go:	"syscall"
cmd/misterbuild/bindata.go:	"unsafe"
cmd/misterbuild/bindata.go:	"github.com/Sirupsen/logrus"
cmd/misterbuild/bindata.go:	"github.com/codegangsta/cli"
cmd/misterbuild/bindata.go:)
cmd/misterbuild/bindata.go:const mapMaxSize = 1e8
cmd/misterbuild/bindata.go:const (
cmd/misterbuild/bindata.go:	InstallBinary = iota
cmd/misterbuild/bindata.go:	InstallSymlink
cmd/misterbuild/bindata.go:)
cmd/misterbuild/bindata.go:type Binary struct {
cmd/misterbuild/bindata.go:	Asset         []byte
cmd/misterbuild/bindata.go:	Name          string
cmd/misterbuild/bindata.go:	BaseDir       string
cmd/misterbuild/bindata.go:	InstallMethod int
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func NewBinary(name string) Binary {
cmd/misterbuild/bindata.go:	wd, err := os.Getwd()
cmd/misterbuild/bindata.go:	if err != nil {
cmd/misterbuild/bindata.go:		wd = "/"
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return Binary{
cmd/misterbuild/bindata.go:		Name:          name,
cmd/misterbuild/bindata.go:		BaseDir:       wd,
cmd/misterbuild/bindata.go:		InstallMethod: InstallBinary,
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (b *Binary) FullPathFileName() string {
cmd/misterbuild/bindata.go:	return strings.Replace(b.Name, "/", "_", -1)
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (b *Binary) FileName() string {
cmd/misterbuild/bindata.go:	return path.Base(b.Name)
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (b *Binary) FilePath() string {
cmd/misterbuild/bindata.go:	return filepath.Join(b.BaseDir, b.FileName())
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (b *Binary) TempPath() string {
cmd/misterbuild/bindata.go:	// FIXME: ensure using memory instead of disk if p ossible
cmd/misterbuild/bindata.go:	return filepath.Join(os.TempDir(), b.FileName())
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (b *Binary) Uninstall(installPath string) error {
cmd/misterbuild/bindata.go:	logrus.Infof("Uninstalling binary %q (%s)", b.Name, installPath)
cmd/misterbuild/bindata.go:	if _, err := os.Stat(installPath); os.IsNotExist(err) {
cmd/misterbuild/bindata.go:		logrus.Debugf("Asset %q not installed, nothing to do", installPath)
cmd/misterbuild/bindata.go:		return nil
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return os.Remove(installPath)
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (b *Binary) Install(installPath string) error {
cmd/misterbuild/bindata.go:	os.MkdirAll(filepath.Dir(installPath), 0700)
cmd/misterbuild/bindata.go:	switch b.InstallMethod {
cmd/misterbuild/bindata.go:	case InstallBinary:
cmd/misterbuild/bindata.go:		return b.InstallBinary(installPath)
cmd/misterbuild/bindata.go:	case InstallSymlink:
cmd/misterbuild/bindata.go:		return b.InstallSymlink(installPath)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return fmt.Errorf("Invalid install method")
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (b *Binary) InstallSymlink(installPath string) error {
cmd/misterbuild/bindata.go:	logrus.Infof("Installing symlink %q (%s)", b.Name, installPath)
cmd/misterbuild/bindata.go:	misterBinPath, err := filepath.Abs(os.Args[0])
cmd/misterbuild/bindata.go:	if err != nil {
cmd/misterbuild/bindata.go:		return err
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return os.Symlink(misterBinPath, installPath)
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (b *Binary) InstallBinary(filepath string) error {
cmd/misterbuild/bindata.go:	logrus.Infof("Installing binary %q (%s)", b.Name, filepath)
cmd/misterbuild/bindata.go:	if _, err := os.Stat(filepath); !os.IsNotExist(err) {
cmd/misterbuild/bindata.go:		logrus.Debugf("Asset already installed: %q", filepath)
cmd/misterbuild/bindata.go:		return nil
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	asset, err := Asset(b.Name)
cmd/misterbuild/bindata.go:	if err != nil {
cmd/misterbuild/bindata.go:		return fmt.Errorf("failed to load the asset %q: %v", b.Name, err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	length := len(asset)
cmd/misterbuild/bindata.go:	size := int(unsafe.Sizeof(0)) * length
cmd/misterbuild/bindata.go:	if size > mapMaxSize*int(unsafe.Sizeof(0)) {
cmd/misterbuild/bindata.go:		return fmt.Errorf("file too big for current map size: %d > %d", size, mapMaxSize*int(unsafe.Sizeof(0)))
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	logrus.Debugf("Creating map file: %q", filepath)
cmd/misterbuild/bindata.go:	mapFile, err := os.Create(filepath)
cmd/misterbuild/bindata.go:	if err != nil {
cmd/misterbuild/bindata.go:		return fmt.Errorf("failed to create map file: %v", err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	logrus.Debugf("Seeking file")
cmd/misterbuild/bindata.go:	if _, err = mapFile.Seek(int64(length-1), 0); err != nil {
cmd/misterbuild/bindata.go:		return fmt.Errorf("failed to seek: %v", err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	logrus.Debugf("Writing to file")
cmd/misterbuild/bindata.go:	if _, err = mapFile.Write([]byte(" ")); err != nil {
cmd/misterbuild/bindata.go:		return fmt.Errorf("failed to write to file: %v", err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	logrus.Debugf("MMAPing")
cmd/misterbuild/bindata.go:	fd := int(mapFile.Fd())
cmd/misterbuild/bindata.go:	mmap, err := syscall.Mmap(fd, 0, size, syscall.PROT_READ|syscall.PROT_WRITE, syscall.MAP_SHARED)
cmd/misterbuild/bindata.go:	if err != nil {
cmd/misterbuild/bindata.go:		return fmt.Errorf("failed to mmap: %v", err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	logrus.Debugf("Filling array var")
cmd/misterbuild/bindata.go:	mapArray := (*[mapMaxSize]byte)(unsafe.Pointer(&mmap[0]))
cmd/misterbuild/bindata.go:	for i := 0; i < length; i++ {
cmd/misterbuild/bindata.go:		mapArray[i] = asset[i]
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	// fmt.Println(*mapArray)
cmd/misterbuild/bindata.go:	logrus.Debugf("MUNMAPing")
cmd/misterbuild/bindata.go:	if err = syscall.Munmap(mmap); err != nil {
cmd/misterbuild/bindata.go:		return fmt.Errorf("failed to munmap: %v", err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	logrus.Debugf("Closing")
cmd/misterbuild/bindata.go:	if err = mapFile.Close(); err != nil {
cmd/misterbuild/bindata.go:		return fmt.Errorf("failed to close: %v", err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	logrus.Debugf("Chmoding binary")
cmd/misterbuild/bindata.go:	if err = os.Chmod(filepath, 0777); err != nil {
cmd/misterbuild/bindata.go:		return fmt.Errorf("failed to chmod program: %v", err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return nil
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func (b *Binary) Execute(args []string) error {
cmd/misterbuild/bindata.go:	filepath := b.TempPath()
cmd/misterbuild/bindata.go:	logrus.Infof("Executing binary %q (%s)", b.Name, filepath)
cmd/misterbuild/bindata.go:	if len(args) > 0 {
cmd/misterbuild/bindata.go:		logrus.Infof("args=%v", args)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	// temporary
cmd/misterbuild/bindata.go:	if err := b.Uninstall(filepath); err != nil {
cmd/misterbuild/bindata.go:		logrus.Debugf("Failed to uninstall temporary binary %q: %v", filepath, err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	if err := b.Install(filepath); err != nil {
cmd/misterbuild/bindata.go:		return err
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	// FIXME: delete early
cmd/misterbuild/bindata.go:	defer b.Uninstall(filepath)
cmd/misterbuild/bindata.go:	cmd := exec.Command(filepath, args...)
cmd/misterbuild/bindata.go:	cmd.Stdout = os.Stdout
cmd/misterbuild/bindata.go:	cmd.Stdin = os.Stdin
cmd/misterbuild/bindata.go:	cmd.Stderr = os.Stderr
cmd/misterbuild/bindata.go:	cmd.Start()
cmd/misterbuild/bindata.go:	return cmd.Wait()
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func GetBinaryByName(name string) (*Binary, error) {
cmd/misterbuild/bindata.go:	for _, assetName := range AssetNames() {
cmd/misterbuild/bindata.go:		if name == assetName {
cmd/misterbuild/bindata.go:			bin := NewBinary(assetName)
cmd/misterbuild/bindata.go:			return &bin, nil
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	for _, assetName := range AssetNames() {
cmd/misterbuild/bindata.go:		if name == filepath.Base(assetName) {
cmd/misterbuild/bindata.go:			bin := NewBinary(assetName)
cmd/misterbuild/bindata.go:			return &bin, nil
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return nil, fmt.Errorf("No match")
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func ActionExecute(c *cli.Context) {
cmd/misterbuild/bindata.go:	bin, err := GetBinaryByName(c.Command.Name)
cmd/misterbuild/bindata.go:	if err != nil {
cmd/misterbuild/bindata.go:		logrus.Fatalf("No such binary %q: %v", c.Command.Name, err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	binaryUseContext(bin, c)
cmd/misterbuild/bindata.go:	if err := bin.Execute(c.Args()); err != nil {
cmd/misterbuild/bindata.go:		logrus.Fatalf("Failed to execute binary: %v", err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func binaryUseContext(bin *Binary, context *cli.Context) {
cmd/misterbuild/bindata.go:	if basedir := context.Parent().String("basedir"); basedir != "" {
cmd/misterbuild/bindata.go:		bin.BaseDir = basedir
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	if basedir := context.String("basedir"); basedir != "" {
cmd/misterbuild/bindata.go:		bin.BaseDir = basedir
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	if symlinks := context.Bool("symlinks"); symlinks {
cmd/misterbuild/bindata.go:		bin.InstallMethod = InstallSymlink
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func ActionInstall(c *cli.Context) {
cmd/misterbuild/bindata.go:	for _, name := range AssetNames() {
cmd/misterbuild/bindata.go:		bin := NewBinary(name)
cmd/misterbuild/bindata.go:		binaryUseContext(&bin, c)
cmd/misterbuild/bindata.go:		if err := bin.Install(bin.FilePath()); err != nil {
cmd/misterbuild/bindata.go:			logrus.Fatalf("Failed to install binary: %v", err)
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func ActionUninstall(c *cli.Context) {
cmd/misterbuild/bindata.go:	for _, name := range AssetNames() {
cmd/misterbuild/bindata.go:		bin := NewBinary(name)
cmd/misterbuild/bindata.go:		binaryUseContext(&bin, c)
cmd/misterbuild/bindata.go:		if err := bin.Uninstall(bin.FilePath()); err != nil {
cmd/misterbuild/bindata.go:			logrus.Fatalf("Failed to uninstall binary: %v", err)
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func hookBefore(c *cli.Context) error {
cmd/misterbuild/bindata.go:	if c.Bool("debug") {
cmd/misterbuild/bindata.go:		os.Setenv("MB_DEBUG", "1")
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	initLogging()
cmd/misterbuild/bindata.go:	return nil
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func initLogging() {
cmd/misterbuild/bindata.go:	if os.Getenv("MB_DEBUG") == "1" {
cmd/misterbuild/bindata.go:		logrus.SetLevel(logrus.DebugLevel)
cmd/misterbuild/bindata.go:	} else {
cmd/misterbuild/bindata.go:		logrus.SetLevel(logrus.WarnLevel)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func main() {
cmd/misterbuild/bindata.go:	if os.Args[0] == "/bin/sh" && len(os.Args) > 1 && os.Args[1] == "-c" {
cmd/misterbuild/bindata.go:		// mister-bin is called as /bin/sh, probably from a 'FROM scratch' Docker image
cmd/misterbuild/bindata.go:		args := strings.Split(os.Args[2], " ")
cmd/misterbuild/bindata.go:		// FIXME: add a basic shell support
cmd/misterbuild/bindata.go:		cmd := exec.Command(args[0], args[1:]...)
cmd/misterbuild/bindata.go:		cmd.Stdout = os.Stdout
cmd/misterbuild/bindata.go:		cmd.Stdin = os.Stdin
cmd/misterbuild/bindata.go:		cmd.Stderr = os.Stderr
cmd/misterbuild/bindata.go:		if err := cmd.Run(); err != nil {
cmd/misterbuild/bindata.go:			logrus.Fatalf("/bin/sh: failed to execute sub command %q: %v", args, err)
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:		return
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	// Checking if file is a symlink to mister-bin or mister-bin itself
cmd/misterbuild/bindata.go:	fi, err := os.Lstat(os.Args[0])
cmd/misterbuild/bindata.go:	if err != nil {
cmd/misterbuild/bindata.go:		logrus.Fatalf("Failed to lstat %q: %v", os.Args[0], err)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	// we are a symlink, direct execution
cmd/misterbuild/bindata.go:	if fi.Mode()&os.ModeSymlink == os.ModeSymlink {
cmd/misterbuild/bindata.go:		initLogging()
cmd/misterbuild/bindata.go:		bin, err := GetBinaryByName(filepath.Base(os.Args[0]))
cmd/misterbuild/bindata.go:		if err != nil {
cmd/misterbuild/bindata.go:			logrus.Fatalf("No such binary %q: %v", filepath.Base(os.Args[0]), err)
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:		if err := bin.Execute(os.Args[1:]); err != nil {
cmd/misterbuild/bindata.go:			logrus.Fatalf("Failed to execute binary: %v", err)
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:		return
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	// we are not a symlink, standard menu
cmd/misterbuild/bindata.go:	app := cli.NewApp()
cmd/misterbuild/bindata.go:	app.Name = "Mister Bin"
cmd/misterbuild/bindata.go:	app.Flags = []cli.Flag{
cmd/misterbuild/bindata.go:		cli.BoolFlag{
cmd/misterbuild/bindata.go:			Name:   "debug, D",
cmd/misterbuild/bindata.go:			EnvVar: "MB_DEBUG",
cmd/misterbuild/bindata.go:		},
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	app.Before = hookBefore
cmd/misterbuild/bindata.go:	app.Commands = []cli.Command{
cmd/misterbuild/bindata.go:		{
cmd/misterbuild/bindata.go:			Name:   "install",
cmd/misterbuild/bindata.go:			Action: ActionInstall,
cmd/misterbuild/bindata.go:			Flags: []cli.Flag{
cmd/misterbuild/bindata.go:				cli.StringFlag{
cmd/misterbuild/bindata.go:					Name:  "basedir",
cmd/misterbuild/bindata.go:					Usage: "Base dir to install binaries to",
cmd/misterbuild/bindata.go:				},
cmd/misterbuild/bindata.go:				cli.BoolFlag{
cmd/misterbuild/bindata.go:					Name:  "symlinks",
cmd/misterbuild/bindata.go:					Usage: " Create symlinks instead of real binaries",
cmd/misterbuild/bindata.go:				},
cmd/misterbuild/bindata.go:			},
cmd/misterbuild/bindata.go:		},
cmd/misterbuild/bindata.go:		{
cmd/misterbuild/bindata.go:			Name:   "uninstall",
cmd/misterbuild/bindata.go:			Action: ActionUninstall,
cmd/misterbuild/bindata.go:			Flags: []cli.Flag{
cmd/misterbuild/bindata.go:				cli.StringFlag{
cmd/misterbuild/bindata.go:					Name:  "basedir",
cmd/misterbuild/bindata.go:					Usage: "Base dir to uninstall binaries from",
cmd/misterbuild/bindata.go:				},
cmd/misterbuild/bindata.go:			},
cmd/misterbuild/bindata.go:		},
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	for _, name := range AssetNames() {
cmd/misterbuild/bindata.go:		command := cli.Command{
cmd/misterbuild/bindata.go:			Name:   filepath.Base(name),
cmd/misterbuild/bindata.go:			Action: ActionExecute,
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:		app.Commands = append(app.Commands, command)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	app.Run(os.Args)
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:`)
cmd/misterbuild/bindata.go:func misterBinGoBytes() ([]byte, error) {
cmd/misterbuild/bindata.go:	return _misterBinGo, nil
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func misterBinGo() (*asset, error) {
cmd/misterbuild/bindata.go:	bytes, err := misterBinGoBytes()
cmd/misterbuild/bindata.go:	if err != nil {
cmd/misterbuild/bindata.go:		return nil, err
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	info := bindataFileInfo{name: "mister-bin.go", size: 7953, mode: os.FileMode(420), modTime: time.Unix(1451461986, 0)}
cmd/misterbuild/bindata.go:	a := &asset{bytes: bytes, info:  info}
cmd/misterbuild/bindata.go:	return a, nil
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:// Asset loads and returns the asset for the given name.
cmd/misterbuild/bindata.go:// It returns an error if the asset could not be found or
cmd/misterbuild/bindata.go:// could not be loaded.
cmd/misterbuild/bindata.go:func Asset(name string) ([]byte, error) {
cmd/misterbuild/bindata.go:	cannonicalName := strings.Replace(name, "\\", "/", -1)
cmd/misterbuild/bindata.go:	if f, ok := _bindata[cannonicalName]; ok {
cmd/misterbuild/bindata.go:		a, err := f()
cmd/misterbuild/bindata.go:		if err != nil {
cmd/misterbuild/bindata.go:			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:		return a.bytes, nil
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return nil, fmt.Errorf("Asset %s not found", name)
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:// MustAsset is like Asset but panics when Asset would return an error.
cmd/misterbuild/bindata.go:// It simplifies safe initialization of global variables.
cmd/misterbuild/bindata.go:func MustAsset(name string) []byte {
cmd/misterbuild/bindata.go:	a, err := Asset(name)
cmd/misterbuild/bindata.go:	if (err != nil) {
cmd/misterbuild/bindata.go:		panic("asset: Asset(" + name + "): " + err.Error())
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return a
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:// AssetInfo loads and returns the asset info for the given name.
cmd/misterbuild/bindata.go:// It returns an error if the asset could not be found or
cmd/misterbuild/bindata.go:// could not be loaded.
cmd/misterbuild/bindata.go:func AssetInfo(name string) (os.FileInfo, error) {
cmd/misterbuild/bindata.go:	cannonicalName := strings.Replace(name, "\\", "/", -1)
cmd/misterbuild/bindata.go:	if f, ok := _bindata[cannonicalName]; ok {
cmd/misterbuild/bindata.go:		a, err := f()
cmd/misterbuild/bindata.go:		if err != nil {
cmd/misterbuild/bindata.go:			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:		return a.info, nil
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return nil, fmt.Errorf("AssetInfo %s not found", name)
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:// AssetNames returns the names of the assets.
cmd/misterbuild/bindata.go:func AssetNames() []string {
cmd/misterbuild/bindata.go:	names := make([]string, 0, len(_bindata))
cmd/misterbuild/bindata.go:	for name := range _bindata {
cmd/misterbuild/bindata.go:		names = append(names, name)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return names
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:// _bindata is a table, holding each asset generator, mapped to its name.
cmd/misterbuild/bindata.go:var _bindata = map[string]func() (*asset, error){
cmd/misterbuild/bindata.go:	"mister-bin.go": misterBinGo,
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:// AssetDir returns the file names below a certain
cmd/misterbuild/bindata.go:// directory embedded in the file by go-bindata.
cmd/misterbuild/bindata.go:// For example if you run go-bindata on data/... and data contains the
cmd/misterbuild/bindata.go:// following hierarchy:
cmd/misterbuild/bindata.go://     data/
cmd/misterbuild/bindata.go://       foo.txt
cmd/misterbuild/bindata.go://       img/
cmd/misterbuild/bindata.go://         a.png
cmd/misterbuild/bindata.go://         b.png
cmd/misterbuild/bindata.go:// then AssetDir("data") would return []string{"foo.txt", "img"}
cmd/misterbuild/bindata.go:// AssetDir("data/img") would return []string{"a.png", "b.png"}
cmd/misterbuild/bindata.go:// AssetDir("foo.txt") and AssetDir("notexist") would return an error
cmd/misterbuild/bindata.go:// AssetDir("") will return []string{"data"}.
cmd/misterbuild/bindata.go:func AssetDir(name string) ([]string, error) {
cmd/misterbuild/bindata.go:	node := _bintree
cmd/misterbuild/bindata.go:	if len(name) != 0 {
cmd/misterbuild/bindata.go:		cannonicalName := strings.Replace(name, "\\", "/", -1)
cmd/misterbuild/bindata.go:		pathList := strings.Split(cannonicalName, "/")
cmd/misterbuild/bindata.go:		for _, p := range pathList {
cmd/misterbuild/bindata.go:			node = node.Children[p]
cmd/misterbuild/bindata.go:			if node == nil {
cmd/misterbuild/bindata.go:				return nil, fmt.Errorf("Asset %s not found", name)
cmd/misterbuild/bindata.go:			}
cmd/misterbuild/bindata.go:		}
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	if node.Func != nil {
cmd/misterbuild/bindata.go:		return nil, fmt.Errorf("Asset %s not found", name)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	rv := make([]string, 0, len(node.Children))
cmd/misterbuild/bindata.go:	for childName := range node.Children {
cmd/misterbuild/bindata.go:		rv = append(rv, childName)
cmd/misterbuild/bindata.go:	}
cmd/misterbuild/bindata.go:	return rv, nil
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:type bintree struct {
cmd/misterbuild/bindata.go:	Func func() (*asset, error)
cmd/misterbuild/bindata.go:	Children map[string]*bintree
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:var _bintree = &bintree{nil, map[string]*bintree{
cmd/misterbuild/bindata.go:	"mister-bin.go": &bintree{misterBinGo, map[string]*bintree{
cmd/misterbuild/bindata.go:	}},
cmd/misterbuild/bindata.go:}}
cmd/misterbuild/bindata.go:// RestoreAsset restores an asset under the given directory
cmd/misterbuild/bindata.go:func RestoreAsset(dir, name string) error {
cmd/misterbuild/bindata.go:        data, err := Asset(name)
cmd/misterbuild/bindata.go:        if err != nil {
cmd/misterbuild/bindata.go:                return err
cmd/misterbuild/bindata.go:        }
cmd/misterbuild/bindata.go:        info, err := AssetInfo(name)
cmd/misterbuild/bindata.go:        if err != nil {
cmd/misterbuild/bindata.go:                return err
cmd/misterbuild/bindata.go:        }
cmd/misterbuild/bindata.go:        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
cmd/misterbuild/bindata.go:        if err != nil {
cmd/misterbuild/bindata.go:                return err
cmd/misterbuild/bindata.go:        }
cmd/misterbuild/bindata.go:        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
cmd/misterbuild/bindata.go:        if err != nil {
cmd/misterbuild/bindata.go:                return err
cmd/misterbuild/bindata.go:        }
cmd/misterbuild/bindata.go:        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
cmd/misterbuild/bindata.go:        if err != nil {
cmd/misterbuild/bindata.go:                return err
cmd/misterbuild/bindata.go:        }
cmd/misterbuild/bindata.go:        return nil
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:// RestoreAssets restores an asset under the given directory recursively
cmd/misterbuild/bindata.go:func RestoreAssets(dir, name string) error {
cmd/misterbuild/bindata.go:        children, err := AssetDir(name)
cmd/misterbuild/bindata.go:        // File
cmd/misterbuild/bindata.go:        if err != nil {
cmd/misterbuild/bindata.go:                return RestoreAsset(dir, name)
cmd/misterbuild/bindata.go:        }
cmd/misterbuild/bindata.go:        // Dir
cmd/misterbuild/bindata.go:        for _, child := range children {
cmd/misterbuild/bindata.go:                err = RestoreAssets(dir, filepath.Join(name, child))
cmd/misterbuild/bindata.go:                if err != nil {
cmd/misterbuild/bindata.go:                        return err
cmd/misterbuild/bindata.go:                }
cmd/misterbuild/bindata.go:        }
cmd/misterbuild/bindata.go:        return nil
cmd/misterbuild/bindata.go:}
cmd/misterbuild/bindata.go:func _filePath(dir, name string) string {
cmd/misterbuild/bindata.go:        cannonicalName := strings.Replace(name, "\\", "/", -1)
cmd/misterbuild/bindata.go:        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
cmd/misterbuild/bindata.go:}
cmd/misterbuild/mister-build.go:package main
cmd/misterbuild/mister-build.go:import (
cmd/misterbuild/mister-build.go:	"os"
cmd/misterbuild/mister-build.go:	"os/exec"
cmd/misterbuild/mister-build.go:	"path/filepath"
cmd/misterbuild/mister-build.go:	"github.com/Sirupsen/logrus"
cmd/misterbuild/mister-build.go:	"github.com/codegangsta/cli"
cmd/misterbuild/mister-build.go:	"github.com/jteeuwen/go-bindata"
cmd/misterbuild/mister-build.go:)
cmd/misterbuild/mister-build.go:func BuildAction(c *cli.Context) {
cmd/misterbuild/mister-build.go:	if len(c.Args()) < 1 {
cmd/misterbuild/mister-build.go:		logrus.Fatalf("You need to specify at least 1 binary")
cmd/misterbuild/mister-build.go:	}
cmd/misterbuild/mister-build.go:	tmpName := "misterbuild-tmp"
cmd/misterbuild/mister-build.go:	workdir := filepath.Join(os.Getenv("GOPATH"), "src", "tmp", tmpName)
cmd/misterbuild/mister-build.go:	// FIXME: use `ioutil.TempDir()` instead
cmd/misterbuild/mister-build.go:	// Generating bindata with target binaries
cmd/misterbuild/mister-build.go:	cfg := bindata.NewConfig()
cmd/misterbuild/mister-build.go:	cfg.Output = filepath.Join(workdir, "bindata.go")
cmd/misterbuild/mister-build.go:	// cfg.Prefix = goroot
cmd/misterbuild/mister-build.go:	cfg.Input = []bindata.InputConfig{}
cmd/misterbuild/mister-build.go:	for _, assetPath := range c.Args() {
cmd/misterbuild/mister-build.go:		cfg.Input = append(cfg.Input, bindata.InputConfig{
cmd/misterbuild/mister-build.go:			Path: assetPath,
cmd/misterbuild/mister-build.go:		})
cmd/misterbuild/mister-build.go:	}
cmd/misterbuild/mister-build.go:	if err := bindata.Translate(cfg); err != nil {
cmd/misterbuild/mister-build.go:		logrus.Fatalf("Failed to generate source based on binaries: %v", err)
cmd/misterbuild/mister-build.go:	}
cmd/misterbuild/mister-build.go:	// Exporting mister-bin.go
cmd/misterbuild/mister-build.go:	if err := RestoreAsset(workdir, "mister-bin.go"); err != nil {
cmd/misterbuild/mister-build.go:		logrus.Fatalf("Failed to restore mister-bin.go: %v", err)
cmd/misterbuild/mister-build.go:	}
cmd/misterbuild/mister-build.go:	// Build
cmd/misterbuild/mister-build.go:	cmd := exec.Command("go", "build", filepath.Join("tmp", tmpName))
cmd/misterbuild/mister-build.go:	cmd.Stdout = os.Stdout
cmd/misterbuild/mister-build.go:	cmd.Stderr = os.Stderr
cmd/misterbuild/mister-build.go:	if err := cmd.Run(); err != nil {
cmd/misterbuild/mister-build.go:		logrus.Fatalf("Failed to build binary: %v", err)
cmd/misterbuild/mister-build.go:	}
cmd/misterbuild/mister-build.go:	// FIXME: try to use go/build package directly
cmd/misterbuild/mister-build.go:	logrus.Infof("Success: binary built: %q", tmpName)
cmd/misterbuild/mister-build.go:	// Cleanup
cmd/misterbuild/mister-build.go:	// FIXME: todo
cmd/misterbuild/mister-build.go:}
cmd/misterbuild/mister-build.go:func main() {
cmd/misterbuild/mister-build.go:	app := cli.NewApp()
cmd/misterbuild/mister-build.go:	app.Name = "Mister Build"
cmd/misterbuild/mister-build.go:	app.Usage = "mister-bin builder"
cmd/misterbuild/mister-build.go:	app.Commands = []cli.Command{
cmd/misterbuild/mister-build.go:		{
cmd/misterbuild/mister-build.go:			Name:   "build",
cmd/misterbuild/mister-build.go:			Action: BuildAction,
cmd/misterbuild/mister-build.go:			Flags: []cli.Flag{
cmd/misterbuild/mister-build.go:				cli.StringFlag{
cmd/misterbuild/mister-build.go:					Name:  "basedir",
cmd/misterbuild/mister-build.go:					Usage: "Base dir to install binaries to",
cmd/misterbuild/mister-build.go:				},
cmd/misterbuild/mister-build.go:				cli.BoolFlag{
cmd/misterbuild/mister-build.go:					Name:  "symlinks",
cmd/misterbuild/mister-build.go:					Usage: " Create symlinks instead of real binaries",
cmd/misterbuild/mister-build.go:				},
cmd/misterbuild/mister-build.go:			},
cmd/misterbuild/mister-build.go:		},
cmd/misterbuild/mister-build.go:	}
cmd/misterbuild/mister-build.go:	app.Run(os.Args)
cmd/misterbuild/mister-build.go:}
docker/Dockerfile:FROM scratch
docker/Dockerfile:ADD ./mister-bin /bin/sh
docker/Dockerfile:#ENV MB_DEBUG=1
docker/Dockerfile:RUN /bin/sh install --basedir=/bin --symlinks
test/Makefile:all: build
test/Makefile:build:
test/Makefile:	docker run --rm -v $(PWD):/workdir -e CROSS_TRIPLE=x86_64 multiarch/crossbuild cc helloworld.c -o linux-x86_64-helloworld-dynamic           || true
test/Makefile:	docker run --rm -v $(PWD):/workdir -e CROSS_TRIPLE=x86_64 multiarch/crossbuild cc helloworld.c -o linux-x86_64-helloworld-static -static    || true
test/Makefile:	docker run --rm -v $(PWD):/workdir -e CROSS_TRIPLE=x86_64 multiarch/crossbuild cc quine.c      -o linux-x86_64-quine-dynamic                || true
test/Makefile:	docker run --rm -v $(PWD):/workdir -e CROSS_TRIPLE=x86_64 multiarch/crossbuild cc quine.c      -o linux-x86_64-quine-static -static         || true
test/Makefile:	docker run --rm -v $(PWD):/workdir -e CROSS_TRIPLE=darwin multiarch/crossbuild cc helloworld.c -w -o darwin-x86_64-helloworld-dynamic          || true
test/Makefile:	#docker run --rm -v $(PWD):/workdir -e CROSS_TRIPLE=darwin multiarch/crossbuild cc helloworld.c -o darwin-x86_64-helloworld-static -static   || true
test/Makefile:	docker run --rm -v $(PWD):/workdir -e CROSS_TRIPLE-darwin multiarch/crossbuild cc quine.c      -w -o darwin-x86_64-quine-dynamic               || true
test/Makefile:	#docker run --rm -v $(PWD):/workdir -e CROSS_TRIPLE=darwin multiarch/crossbuild cc quine.c      -o darwin-x86_64-quine-static -static        || true
test/helloworld.c:/* Hello World program */
test/helloworld.c:#include <stdio.h>
test/helloworld.c:int main(int ac, char **av) {
test/helloworld.c:  printf("Hello World !\n");
test/helloworld.c:  return 0;
test/helloworld.c:}
test/quine.c:main(a){printf(a="main(a){printf(a=%c%s%c,34,a,34);}",34,a,34);}
Makefile:no-ansi: cmd/no-ansi/main.go no-ansi.go
Makefile:	go build -o $@ ./cmd/$@
cmd/no-ansi/main.go:package main
cmd/no-ansi/main.go:import (
cmd/no-ansi/main.go:	"io"
cmd/no-ansi/main.go:	"log"
cmd/no-ansi/main.go:	"os"
cmd/no-ansi/main.go:	"os/exec"
cmd/no-ansi/main.go:	"sync"
cmd/no-ansi/main.go:	"github.com/kr/pty"
cmd/no-ansi/main.go:	"github.com/moul/no-ansi"
cmd/no-ansi/main.go:	"golang.org/x/crypto/ssh/terminal"
cmd/no-ansi/main.go:)
cmd/no-ansi/main.go:func main() {
cmd/no-ansi/main.go:	var wg sync.WaitGroup
cmd/no-ansi/main.go:	if len(os.Args) < 2 {
cmd/no-ansi/main.go:		// Read from stdin
cmd/no-ansi/main.go:		noansi.NoAnsiStream(os.Stdin, os.Stdout, &wg)
cmd/no-ansi/main.go:	} else {
cmd/no-ansi/main.go:		// Executing a program
cmd/no-ansi/main.go:		spawn := exec.Command(os.Args[1], os.Args[2:]...)
cmd/no-ansi/main.go:		// Setup tty
cmd/no-ansi/main.go:		tty, err := pty.Start(spawn)
cmd/no-ansi/main.go:		if err != nil {
cmd/no-ansi/main.go:			log.Fatalln(err)
cmd/no-ansi/main.go:		}
cmd/no-ansi/main.go:		defer tty.Close()
cmd/no-ansi/main.go:		// Setup raw input terminal
cmd/no-ansi/main.go:		oldState, err := terminal.MakeRaw(0)
cmd/no-ansi/main.go:		if err == nil {
cmd/no-ansi/main.go:			defer terminal.Restore(0, oldState)
cmd/no-ansi/main.go:		}
cmd/no-ansi/main.go:		// Process stdout routine
cmd/no-ansi/main.go:		noansi.NoAnsiStream(tty, os.Stdout, &wg)
cmd/no-ansi/main.go:		// Forward stdin routine
cmd/no-ansi/main.go:		go func() {
cmd/no-ansi/main.go:			wg.Add(1)
cmd/no-ansi/main.go:			defer wg.Done()
cmd/no-ansi/main.go:			io.Copy(tty, os.Stdin)
cmd/no-ansi/main.go:		}()
cmd/no-ansi/main.go:		// Wait for program to finish
cmd/no-ansi/main.go:		if err := spawn.Wait(); err != nil {
cmd/no-ansi/main.go:			panic(err)
cmd/no-ansi/main.go:		}
cmd/no-ansi/main.go:	}
cmd/no-ansi/main.go:	wg.Wait()
cmd/no-ansi/main.go:}
no-ansi.go:package noansi
no-ansi.go:import (
no-ansi.go:	"bufio"
no-ansi.go:	"fmt"
no-ansi.go:	"io"
no-ansi.go:	"regexp"
no-ansi.go:	"sync"
no-ansi.go:)
no-ansi.go:func NoAnsiString(input string) (string, error) {
no-ansi.go:	r := regexp.MustCompile("\x1b\\[[>0-9;]*[mc]")
no-ansi.go:	return r.ReplaceAllString(input, ""), nil
no-ansi.go:}
no-ansi.go:func NoAnsiStream(inputStream io.Reader, outputStream io.Writer, wg *sync.WaitGroup) {
no-ansi.go:	wg.Add(1)
no-ansi.go:	go func() {
no-ansi.go:		defer wg.Done()
no-ansi.go:		scanner := bufio.NewScanner(inputStream)
no-ansi.go:		for scanner.Scan() {
no-ansi.go:			line := scanner.Text()
no-ansi.go:			output, err := NoAnsiString(line)
no-ansi.go:			if err != nil {
no-ansi.go:				panic(err)
no-ansi.go:			}
no-ansi.go:			fmt.Fprintln(outputStream, output)
no-ansi.go:		}
no-ansi.go:	}()
no-ansi.go:}
AUTHORS:N: Thomas Poechtrager
AUTHORS:E: t.poechtrager@gmail.com
AUTHORS:D: OSXCross, cctools/ld64 port
AUTHORS:N: Cjacker
AUTHORS:W: https://code.google.com/p/ios-toolchain-based-on-clang-for-linux
AUTHORS:D: cctools/ld64 port
AUTHORS:N: Don Bright
AUTHORS:E: hugh.m.bright@gmail.com
AUTHORS:D: tools/get_dependencies.sh
AUTHORS:N: Marcel Wysocki
AUTHORS:D: Initial MacPorts script (https://github.com/maci0/pmmacports)
CHANGELOG:/****************************** v0.12 ********************************/
CHANGELOG:changed:
CHANGELOG: * updated cctools to 877.5
CHANGELOG: * updated ld64 to 253.3
CHANGELOG:added:
CHANGELOG: * support for Xcode 7.x / El Capitan
CHANGELOG:/****************************** v0.11 ********************************/
CHANGELOG:changed:
CHANGELOG:* '-oc-use-gcc-libs' has been renamed to '-foc-use-gcc-libstdc++'
CHANGELOG:* support for generating fat object files with gcc and '-foc-use-gcc-libstdc++'
CHANGELOG:  has been removed.
CHANGELOG:* support for setting the language standard via
CHANGELOG: 'OSXCROSS_C_STANDARD' / 'OSXCROSS_CXX_STANDARD' (env) has been removed
CHANGELOG:added:
CHANGELOG:* support for '-stdc++' and '-gstdc++' compiler "shortcuts"
CHANGELOG:  o32-clang++ --> uses libstdc++ for <= 10.8 and libc++ for >= 10.9
CHANGELOG:  o32-clang++-libc++ --> uses the SDK's libc++
CHANGELOG:  o32-clang++-stdc++ --> uses the SDK's libstdc++
CHANGELOG:  o32-clang++-gstdc++ --> uses gcc's (build_gcc.sh) libstdc++
CHANGELOG:* unit tests (wrapper)
CHANGELOG:* llvm-dsymutil build script
CHANGELOG:* dsymutil is now wrapped to llvm-dsymutil (LLVM >= 3.8 only)
CHANGELOG:/****************************** v0.10 ********************************/
CHANGELOG:changed:
CHANGELOG:* improved and colorized wrapper error/warning/debug/info messages
CHANGELOG:* updated cctools to 870
CHANGELOG:* updated ld64 to 242
CHANGELOG:added:
CHANGELOG:* Windows support via Cygwin
CHANGELOG:* OpenBSD and DragonFlyBSD support
CHANGELOG:* Linux ARM support
CHANGELOG:* Linux PPC/PPC64 support: Totally untested, but compiles
CHANGELOG:* gcc compiler support: OSXCross can now be built with gcc
CHANGELOG:* 'osxcross-man' man page tool
CHANGELOG:* p7zip sdk packaging script
CHANGELOG:* a minimalistic xcrun tool
CHANGELOG:* support for ccache symlinks
CHANGELOG:* darling-dmg sdk packaging script
CHANGELOG:* include path warnings for /usr/include and /usr/local/include
CHANGELOG:  (can be switched off via 'OSXCROSS_NO_INCLUDE_PATH_WARNINGS=1')
CHANGELOG:* an option to silence osxcross extension warnings
CHANGELOG:  (OSXCROSS_NO_EXTENSION_WARNINGS=1)
CHANGELOG:/******************************* v0.9 *******************************/
CHANGELOG:changed:
CHANGELOG: * updated cctools to 862
CHANGELOG: * updated ld64 to 241.9
CHANGELOG:added:
CHANGELOG: * binutils / gdb build script
CHANGELOG: * OSXCROSS_GCC_NO_STATIC_RUNTIME option (env)
CHANGELOG: * osxcross-macports: a minimalistic macports packet manager
CHANGELOG:/******************************* v0.8 *******************************/
CHANGELOG:changed:
CHANGELOG: * updated cctools to 855
CHANGELOG: * updated ld64 to 236.3
CHANGELOG: * gcc 4.9.0 -> gcc 4.9.2
CHANGELOG:added:
CHANGELOG: * support for new '-arch x86_64h' (requires clang 3.5+)
CHANGELOG: * support for multiple '-arch' flags with gcc
CHANGELOG: * scripts to make sdk extraction possible on linux (xcode 4.2 only)
CHANGELOG: * OS X 10.10 support (DP1)
CHANGELOG: * pkg-config wrapper
CHANGELOG:/******************************* v0.7 *******************************/
CHANGELOG:added:
CHANGELOG: * new compiler wrapper written in C++
CHANGELOG: * '-oc-use-gcc-libs' option (uses './build_gcc.sh' libstdc++)
CHANGELOG: * 10.6 SDK support (10.4-10.9 are all supported now)
CHANGELOG: * 'sw_vers' tool, which is required by some projects
CHANGELOG: * '-stdlib=' support for gcc (as an extension through the wrapper)
CHANGELOG: * 'OSXCROSS_C_STANDARD' env var (set C standard globally)
CHANGELOG: * 'OSXCROSS_CXX_STANDARD' env var (set C++ standard globally)
CHANGELOG: * OS X support (as host)
CHANGELOG:changed:
CHANGELOG: * 'osxcross-conf', 'osxcross-env' and the (fake) 'dsymutil' are now
CHANGELOG:   implemented in the wrapper
CHANGELOG: * <arch>-apple-darwinXX-cc/c++ defaults now to clang
CHANGELOG: * switched to two-space indents
CHANGELOG: * gcc 4.8.2 -> gcc 4.9.0
CHANGELOG:fixed:
CHANGELOG: * 'MACOSX_DEPLOYMENT_TARGET' env var is now handled correctly
CHANGELOG:/******************************* v0.6 *******************************/
CHANGELOG:added:
CHANGELOG: * NetBSD support
CHANGELOG: * dependencies installer script (Don Bright)
CHANGELOG: * SDK packaging script
CHANGELOG:/******************************* v0.5 *******************************/
CHANGELOG:added:
CHANGELOG: * libc++ support (for both, clang and gcc)
CHANGELOG: * FreeBSD support
CHANGELOG:changed:
CHANGELOG: * attempt to make the toolchain less path dependent
CHANGELOG: * updated cctools to 845
CHANGELOG:fixed:
CHANGELOG: * help clang to find its own intrinsic headers
CHANGELOG:   (this issue appears to be fixed in clang 3.4+)
CHANGELOG: * building the toolchain on 32 bit systems
CHANGELOG:/******************************* v0.4 *******************************/
CHANGELOG:added:
CHANGELOG:  * gcc build script
CHANGELOG:  * a workaround for buggy unistd.h headers
CHANGELOG:/******************************* v0.3 *******************************/
CHANGELOG:added:
CHANGELOG:  * 10.9 SDK support
CHANGELOG:  * *-apple-darwin*-clang* symlinks (same as invoking oXX-clang)
CHANGELOG:changed:
CHANGELOG:  * no need to build extra cctools binaries for targeting i386,
CHANGELOG:    symlinking the x86_64 builds works as well
CHANGELOG:/******************************* v0.2 *******************************/
CHANGELOG:added:
CHANGELOG:  * a check for broken unistd.h
CHANGELOG:  * comments to build.sh
CHANGELOG:changed:
CHANGELOG:  * updated cctools to 839 with ld64-134.9
CHANGELOG:fixed:
CHANGELOG:  * check if MacOSX package is present in tarballs
CHANGELOG:/******************************* v0.1 *******************************/
CHANGELOG:initial commit.
TODO:document 'osxcross-man'
TODO:verify downloaded archive tarballs (gcc, llvm, ...) with sha256sum or similar
build.sh:#!/usr/bin/env bash
build.sh:pushd "${0%/*}" &>/dev/null
build.sh:source tools/tools.sh
build.sh:# find sdk version to use
build.sh:function guess_sdk_version()
build.sh:{
build.sh:  tmp1=
build.sh:  tmp2=
build.sh:  tmp3=
build.sh:  file=
build.sh:  sdk=
build.sh:  guess_sdk_version_result=
build.sh:  sdkcount=$(find -L tarballs/ -type f | grep MacOSX | wc -l)
build.sh:  if [ $sdkcount -eq 0 ]; then
build.sh:    echo no SDK found in 'tarballs/'. please see README.md
build.sh:    exit 1
build.sh:  elif [ $sdkcount -gt 1 ]; then
build.sh:    sdks=$(find -L tarballs/ -type f | grep MacOSX)
build.sh:    for sdk in $sdks; do echo $sdk; done
build.sh:    echo 'more than one MacOSX SDK tarball found. please set'
build.sh:    echo 'SDK_VERSION environment variable for the one you want'
build.sh:    echo '(for example: SDK_VERSION=10.x [OSX_VERSION_MIN=10.x] ./build.sh)'
build.sh:    exit 1
build.sh:  else
build.sh:    sdk=$(find -L tarballs/ -type f | grep MacOSX)
build.sh:    tmp2=$(echo ${sdk/bz2/} | $SED s/[^0-9.]//g)
build.sh:    tmp3=$(echo $tmp2 | $SED s/\\\.*$//g)
build.sh:    guess_sdk_version_result=$tmp3
build.sh:    echo 'found SDK version' $guess_sdk_version_result 'at tarballs/'$(basename $sdk)
build.sh:  fi
build.sh:  if [ $guess_sdk_version_result ]; then
build.sh:    if [ $guess_sdk_version_result = 10.4 ]; then
build.sh:      guess_sdk_version_result=10.4u
build.sh:    fi
build.sh:  fi
build.sh:  export guess_sdk_version_result
build.sh:}
build.sh:# make sure there is actually a file with the given SDK_VERSION
build.sh:function verify_sdk_version()
build.sh:{
build.sh:  sdkv=$1
build.sh:  for file in tarballs/*; do
build.sh:    if [ -f "$file" ] && [ $(echo $file | grep OSX.*$sdkv) ]; then
build.sh:      echo "verified at "$file
build.sh:      sdk=$file
build.sh:    fi
build.sh:  done
build.sh:  if [ ! $sdk ] ; then
build.sh:    echo cant find SDK for OSX $sdkv in tarballs. exiting
build.sh:    exit
build.sh:  fi
build.sh:}
build.sh:if [ $SDK_VERSION ]; then
build.sh:  echo 'SDK VERSION set in environment variable:' $SDK_VERSION
build.sh:  test $SDK_VERSION = 10.4 && SDK_VERSION=10.4u
build.sh:else
build.sh:  guess_sdk_version
build.sh:  SDK_VERSION=$guess_sdk_version_result
build.sh:fi
build.sh:verify_sdk_version $SDK_VERSION
build.sh:# Minimum targeted OS X version
build.sh:# Must be <= SDK_VERSION
build.sh:if [ -z "$OSX_VERSION_MIN" ]; then
build.sh:  if [ $SDK_VERSION = 10.4u ]; then
build.sh:    OSX_VERSION_MIN=10.4
build.sh:  else
build.sh:    OSX_VERSION_MIN=10.5
build.sh:  fi
build.sh:fi
build.sh:OSXCROSS_VERSION=0.12
build.sh:X86_64H_SUPPORTED=0
build.sh:case $SDK_VERSION in
build.sh:  10.4*) TARGET=darwin8 ;;
build.sh:  10.5*) TARGET=darwin9 ;;
build.sh:  10.6*) TARGET=darwin10 ;;
build.sh:  10.7*) TARGET=darwin11 ;;
build.sh:  10.8*) TARGET=darwin12; X86_64H_SUPPORTED=1; ;;
build.sh:  10.9*) TARGET=darwin13; X86_64H_SUPPORTED=1; ;;
build.sh:  10.10*) TARGET=darwin14; X86_64H_SUPPORTED=1; ;;
build.sh:  10.11*) TARGET=darwin15; X86_64H_SUPPORTED=1; ;;
build.sh:  *) echo "Invalid SDK Version" && exit 1 ;;
build.sh:esac
build.sh:export TARGET
build.sh:echo ""
build.sh:echo "Building OSXCross toolchain, Version: $OSXCROSS_VERSION"
build.sh:echo ""
build.sh:echo "OS X SDK Version: $SDK_VERSION, Target: $TARGET"
build.sh:echo "Minimum targeted OS X Version: $OSX_VERSION_MIN"
build.sh:echo "Tarball Directory: $TARBALL_DIR"
build.sh:echo "Build Directory: $BUILD_DIR"
build.sh:echo "Install Directory: $TARGET_DIR"
build.sh:echo "SDK Install Directory: $SDK_DIR"
build.sh:if [ -z "$UNATTENDED" ]; then
build.sh:  echo ""
build.sh:  read -p "Press enter to start building"
build.sh:fi
build.sh:echo ""
build.sh:export PATH=$TARGET_DIR/bin:$PATH
build.sh:mkdir -p $BUILD_DIR
build.sh:mkdir -p $TARGET_DIR
build.sh:mkdir -p $SDK_DIR
build.sh:require $CC
build.sh:require $CXX
build.sh:require clang
build.sh:require patch
build.sh:require gunzip
build.sh:pushd $BUILD_DIR &>/dev/null
build.sh:function remove_locks()
build.sh:{
build.sh:  rm -rf $BUILD_DIR/have_cctools*
build.sh:}
build.sh:source $BASE_DIR/tools/trap_exit.sh
build.sh:# CCTOOLS
build.sh:LINKER_VERSION=253.3
build.sh:CCTOOLS="cctools-877.5-ld64-$LINKER_VERSION"
build.sh:CCTOOLS_TARBALL=$(ls $TARBALL_DIR/$CCTOOLS*.tar.* | head -n1)
build.sh:CCTOOLS_REVHASH=$(echo $(basename "$CCTOOLS_TARBALL") | tr '_' '\n' | \
build.sh:                  tr '.' '\n' | tail -n3 | head -n1)
build.sh:if [ ! -f "have_cctools_${CCTOOLS_REVHASH}_$TARGET" ]; then
build.sh:rm -rf cctools*
build.sh:rm -rf xar*
build.sh:extract $CCTOOLS_TARBALL 1
build.sh:pushd cctools*/cctools &>/dev/null
build.sh:pushd .. &>/dev/null
build.sh:./tools/fix_unistd_issue.sh 1>/dev/null
build.sh:popd &>/dev/null
build.sh:patch -p0 < $PATCH_DIR/cctools-ld64-1.patch
build.sh:patch -p0 < $PATCH_DIR/cctools-ld64-2.patch
build.sh:echo ""
build.sh:CONFFLAGS="--prefix=$TARGET_DIR --target=x86_64-apple-$TARGET "
build.sh:CONFFLAGS+="--disable-clang-as "
build.sh:[ -n "$DISABLE_LTO_SUPPORT" ] && CONFFLAGS+="--disable-lto-support "
build.sh:./configure $CONFFLAGS
build.sh:$MAKE -j$JOBS
build.sh:$MAKE install -j$JOBS
build.sh:popd &>/dev/null
build.sh:pushd $TARGET_DIR/bin &>/dev/null
build.sh:CCTOOLS=$(find . -name "x86_64-apple-darwin*")
build.sh:CCTOOLS=($CCTOOLS)
build.sh:if [ $X86_64H_SUPPORTED -eq 1 ]; then
build.sh:  for CCTOOL in ${CCTOOLS[@]}; do
build.sh:    CCTOOL_X86_64H=$(echo "$CCTOOL" | $SED 's/x86_64/x86_64h/g')
build.sh:    ln -sf $CCTOOL $CCTOOL_X86_64H
build.sh:  done
build.sh:fi
build.sh:for CCTOOL in ${CCTOOLS[@]}; do
build.sh:  CCTOOL_I386=$(echo "$CCTOOL" | $SED 's/x86_64/i386/g')
build.sh:  ln -sf $CCTOOL $CCTOOL_I386
build.sh:done
build.sh:popd &>/dev/null
build.sh:fi
build.sh:# CCTOOLS END
build.sh:# MacPorts symlinks
build.sh:pushd $TARGET_DIR/bin &>/dev/null # The BSD ln command doesn't support '-r'
build.sh:ln -sf $BASE_DIR/tools/osxcross-macports osxcross-macports
build.sh:ln -sf $BASE_DIR/tools/osxcross-macports osxcross-mp
build.sh:ln -sf $BASE_DIR/tools/osxcross-macports omp
build.sh:popd &>/dev/null
build.sh:SDK=$(ls $TARBALL_DIR/MacOSX$SDK_VERSION*)
build.sh:# XAR
build.sh:if [[ $SDK == *.pkg ]]; then
build.sh:set +e
build.sh:which xar &>/dev/null
build.sh:NEED_XAR=$?
build.sh:set -e
build.sh:if [ $NEED_XAR -ne 0 ]; then
build.sh:extract $TARBALL_DIR/xar*.tar.gz 2
build.sh:pushd xar* &>/dev/null
build.sh:[ $PLATFORM == "NetBSD" ] && patch -p0 -l < $PATCH_DIR/xar-netbsd.patch
build.sh:CFLAGS+=" -w" ./configure --prefix=$TARGET_DIR
build.sh:$MAKE -j$JOBS
build.sh:$MAKE install -j$JOBS
build.sh:popd &>/dev/null
build.sh:fi
build.sh:fi
build.sh:# XAR END
build.sh:if [ ! -f "have_cctools_${CCTOOLS_REVHASH}_$TARGET" ]; then
build.sh:function check_cctools()
build.sh:{
build.sh:  [ -f "$TARGET_DIR/bin/$1-apple-$TARGET-lipo" ] || exit 1
build.sh:  [ -f "$TARGET_DIR/bin/$1-apple-$TARGET-ld" ] || exit 1
build.sh:  [ -f "$TARGET_DIR/bin/$1-apple-$TARGET-nm" ] || exit 1
build.sh:  [ -f "$TARGET_DIR/bin/$1-apple-$TARGET-ar" ] || exit 1
build.sh:  [ -f "$TARGET_DIR/bin/$1-apple-$TARGET-ranlib" ] || exit 1
build.sh:  [ -f "$TARGET_DIR/bin/$1-apple-$TARGET-strip" ] || exit 1
build.sh:}
build.sh:check_cctools i386
build.sh:check_cctools x86_64
build.sh:touch "have_cctools_${CCTOOLS_REVHASH}_$TARGET"
build.sh:echo ""
build.sh:fi # HAVE_CCTOOLS
build.sh:set +e
build.sh:ls $TARBALL_DIR/MacOSX$SDK_VERSION* &>/dev/null
build.sh:while [ $? -ne 0 ]
build.sh:do
build.sh:  echo ""
build.sh:  echo "Get the MacOSX$SDK_VERSION SDK and move it into $TARBALL_DIR"
build.sh:  echo "(see README for SDK download links)"
build.sh:  echo ""
build.sh:  echo "You can press ctrl-c to break the build process,"
build.sh:  echo "if you restart ./build.sh then we will continue from here"
build.sh:  echo ""
build.sh:  if [ -z "$UNATTENDED" ]; then
build.sh:    read -p "Press enter to continue"
build.sh:  else
build.sh:    exit 1
build.sh:  fi
build.sh:  ls $TARBALL_DIR/MacOSX$SDK_VERSION* &>/dev/null
build.sh:done
build.sh:set -e
build.sh:extract $SDK 1 1
build.sh:rm -rf $SDK_DIR/MacOSX$SDK_VERSION* 2>/dev/null
build.sh:if [ "$(ls -l SDKs/*$SDK_VERSION* 2>/dev/null | wc -l | tr -d ' ')" != "0" ]; then
build.sh:  mv -f SDKs/*$SDK_VERSION* $SDK_DIR
build.sh:else
build.sh:  mv -f *OSX*$SDK_VERSION*sdk* $SDK_DIR
build.sh:fi
build.sh:pushd $SDK_DIR/MacOSX$SDK_VERSION.sdk &>/dev/null
build.sh:set +e
build.sh:ln -s \
build.sh:  $SDK_DIR/MacOSX$SDK_VERSION.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/std*.h \
build.sh:  usr/include 2>/dev/null
build.sh:[ ! -f "usr/include/float.h" ] && cp -f $BASE_DIR/oclang/quirks/float.h usr/include
build.sh:[ $PLATFORM == "FreeBSD" ] && cp -f $BASE_DIR/oclang/quirks/tgmath.h usr/include
build.sh:set -e
build.sh:popd &>/dev/null
build.sh:popd &>/dev/null
build.sh:OSXCROSS_CONF="$TARGET_DIR/bin/osxcross-conf"
build.sh:OSXCROSS_ENV="$TARGET_DIR/bin/osxcross-env"
build.sh:rm -f $OSXCROSS_CONF $OSXCROSS_ENV
build.sh:echo "compiling wrapper ..."
build.sh:export X86_64H_SUPPORTED
build.sh:export OSXCROSS_VERSION
build.sh:export OSXCROSS_TARGET=$TARGET
build.sh:export OSXCROSS_OSX_VERSION_MIN=$OSX_VERSION_MIN
build.sh:export OSXCROSS_LINKER_VERSION=$LINKER_VERSION
build.sh:export OSXCROSS_BUILD_DIR=$BUILD_DIR
build.sh:if [ "$PLATFORM" != "Darwin" ]; then
build.sh:  # libLTO.so
build.sh:  set +e
build.sh:  eval $(cat $BUILD_DIR/cctools*/cctools/config.log | grep LLVM_LIB_DIR | head -n1)
build.sh:  set -e
build.sh:  export OSXCROSS_LIBLTO_PATH=$LLVM_LIB_DIR
build.sh:fi
build.sh:$BASE_DIR/wrapper/build.sh 1>/dev/null
build.sh:echo ""
build.sh:if [ $(osxcross-cmp ${SDK_VERSION/u/} "<" $OSX_VERSION_MIN) -eq 1 ]; then
build.sh:  echo "OSX_VERSION_MIN must be <= SDK_VERSION"
build.sh:  trap "" EXIT
build.sh:  exit 1
build.sh:elif [ $(osxcross-cmp $OSX_VERSION_MIN "<" 10.4) -eq 1  ]; then
build.sh:  echo "OSX_VERSION_MIN must be >= 10.4"
build.sh:  trap "" EXIT
build.sh:  exit 1
build.sh:fi
build.sh:unset MACOSX_DEPLOYMENT_TARGET
build.sh:test_compiler o32-clang $BASE_DIR/oclang/test.c
build.sh:test_compiler o64-clang $BASE_DIR/oclang/test.c
build.sh:test_compiler o32-clang++ $BASE_DIR/oclang/test.cpp
build.sh:test_compiler o64-clang++ $BASE_DIR/oclang/test.cpp
build.sh:if [ $(osxcross-cmp ${SDK_VERSION/u/} ">=" 10.7) -eq 1 ]; then
build.sh:  if [ ! -d "$SDK_DIR/MacOSX$SDK_VERSION.sdk/usr/include/c++/v1" ]; then
build.sh:    echo ""
build.sh:    echo -n "Given SDK does not contain libc++ headers "
build.sh:    echo "(-stdlib=libc++ test may fail)"
build.sh:    echo -n "You may want to re-package your SDK using "
build.sh:    echo "'tools/gen_sdk_package.sh' on OS X"
build.sh:  fi
build.sh:  echo ""
build.sh:  test_compiler_cxx11 o32-clang++ $BASE_DIR/oclang/test_libcxx.cpp
build.sh:  test_compiler_cxx11 o64-clang++ $BASE_DIR/oclang/test_libcxx.cpp
build.sh:fi
build.sh:echo ""
build.sh:echo "Do not forget to add"
build.sh:echo ""
build.sh:echo -e "\x1B[32m${TARGET_DIR}/bin\x1B[0m"
build.sh:echo ""
build.sh:echo "to your PATH variable."
build.sh:echo ""
build.sh:echo "All done! Now you can use o32-clang(++) and o64-clang(++) like a normal compiler."
build.sh:echo ""
build.sh:echo "Example usage:"
build.sh:echo ""
build.sh:echo "Example 1: CC=o32-clang ./configure --host=i386-apple-$TARGET"
build.sh:echo "Example 2: CC=i386-apple-$TARGET-clang ./configure --host=i386-apple-$TARGET"
build.sh:echo "Example 3: o64-clang -Wall test.c -o test"
build.sh:echo "Example 4: x86_64-apple-$TARGET-strip -x test"
build.sh:echo ""
build_binutils.sh:#!/usr/bin/env bash
build_binutils.sh:pushd "${0%/*}" &>/dev/null
build_binutils.sh:DESC=binutils
build_binutils.sh:USESYSTEMCOMPILER=1
build_binutils.sh:source tools/tools.sh
build_binutils.sh:eval $(tools/osxcross_conf.sh)
build_binutils.sh:# binutils version to build
build_binutils.sh:if [ -z "$BINUTILS_VERSION" ]; then
build_binutils.sh:  BINUTILS_VERSION=2.25.1
build_binutils.sh:fi
build_binutils.sh:# gdb version to build
build_binutils.sh:if [ -z "$GDB_VERSION" ]; then
build_binutils.sh:  GDB_VERSION=7.10
build_binutils.sh:fi
build_binutils.sh:# mirror
build_binutils.sh:MIRROR="ftp://sourceware.org/pub"
build_binutils.sh:require wget
build_binutils.sh:pushd $OSXCROSS_BUILD_DIR &>/dev/null
build_binutils.sh:function remove_locks()
build_binutils.sh:{
build_binutils.sh:  rm -rf $OSXCROSS_BUILD_DIR/have_binutils*
build_binutils.sh:}
build_binutils.sh:function build_and_install()
build_binutils.sh:{
build_binutils.sh:  if [ ! -f "have_$1_$2_${OSXCROSS_TARGET}" ]; then
build_binutils.sh:    pushd $OSXCROSS_TARBALL_DIR &>/dev/null
build_binutils.sh:    wget -c "$MIRROR/$1/releases/$1-$2.tar.gz"
build_binutils.sh:    popd &>/dev/null
build_binutils.sh:    echo "cleaning up ..."
build_binutils.sh:    rm -rf $1* 2>/dev/null
build_binutils.sh:    extract "$OSXCROSS_TARBALL_DIR/$1-$2.tar.gz" 1
build_binutils.sh:    pushd $1*$2* &>/dev/null
build_binutils.sh:    mkdir -p build
build_binutils.sh:    pushd build &>/dev/null
build_binutils.sh:    ../configure \
build_binutils.sh:      --target=x86_64-apple-$OSXCROSS_TARGET \
build_binutils.sh:      --program-prefix=x86_64-apple-$OSXCROSS_TARGET- \
build_binutils.sh:      --prefix=$OSXCROSS_TARGET_DIR/binutils \
build_binutils.sh:      --disable-nls \
build_binutils.sh:      --disable-werror
build_binutils.sh:    $MAKE -j$JOBS
build_binutils.sh:    $MAKE install
build_binutils.sh:    popd &>/dev/null
build_binutils.sh:    popd &>/dev/null
build_binutils.sh:    touch "have_$1_$2_${OSXCROSS_TARGET}"
build_binutils.sh:  fi
build_binutils.sh:}
build_binutils.sh:source $BASE_DIR/tools/trap_exit.sh
build_binutils.sh:build_and_install binutils $BINUTILS_VERSION
build_binutils.sh:build_and_install gdb $GDB_VERSION
build_binutils.sh:echo ""
build_binutils.sh:echo "installed binutils and gdb to $OSXCROSS_TARGET_DIR/binutils"
build_binutils.sh:echo ""
build_clang.sh:#!/usr/bin/env bash
build_clang.sh:pushd "${0%/*}" &>/dev/null
build_clang.sh:DESC=clang
build_clang.sh:USESYSTEMCOMPILER=1
build_clang.sh:source tools/tools.sh
build_clang.sh:mkdir -p $BUILD_DIR
build_clang.sh:if [[ $(uname -s) == CYGWIN* ]]; then
build_clang.sh:  DISABLE_BOOTSTRAP=1
build_clang.sh:fi
build_clang.sh:if [ -z "$SKIP_GCC_CHECK" ]; then
build_clang.sh:if [ $PLATFORM != "Darwin" -a $PLATFORM != "FreeBSD" ]; then
build_clang.sh:  set +e
build_clang.sh:  which "g++${GCC_SUFFIX}" &>/dev/null && \
build_clang.sh:  {
build_clang.sh:    export CC="gcc${GCC_SUFFIX}"
build_clang.sh:    export CXX="g++${GCC_SUFFIX}"
build_clang.sh:    test="
build_clang.sh:    #define GCC_VERSION_AT_LEAST(major, minor, patch)                    \
build_clang.sh:      (defined(__GNUC__) &&                                              \
build_clang.sh:      (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__) >= \
build_clang.sh:      (major * 10000 + minor * 100 + patch))
build_clang.sh:    #if !GCC_VERSION_AT_LEAST(4, 7, 0)
build_clang.sh:      not_gcc_47_or_later
build_clang.sh:    #endif"
build_clang.sh:    echo "$test" | $CXX -fsyntax-only -xc++ - &>/dev/null || \
build_clang.sh:    {
build_clang.sh:      echo "Your GCC installation is too old to build recent clang releases."
build_clang.sh:      echo "Building clang 3.4.2 instead."
build_clang.sh:      CLANG_VERSION=3.4
build_clang.sh:      CLANG_VERSION_PATCH=.2
build_clang.sh:    }
build_clang.sh:  } || \
build_clang.sh:  {
build_clang.sh:    echo "Can not detect GCC installation." 1>&2
build_clang.sh:    echo "You may want to try 'GCC_SUFFIX=<suffix> $0'" 1>&2
build_clang.sh:    echo "(i.e. GCC_SUFFIX=-4.7 $0)" 1>&2
build_clang.sh:    exit 1
build_clang.sh:  }
build_clang.sh:  set -e
build_clang.sh:fi
build_clang.sh:fi
build_clang.sh:source $BASE_DIR/tools/trap_exit.sh
build_clang.sh:MIRROR="http://llvm.org"
build_clang.sh:if [ -z "$CLANG_VERSION" ]; then
build_clang.sh:  CLANG_VERSION=3.7.0
build_clang.sh:fi
build_clang.sh:if [ -z "$INSTALLPREFIX" ]; then
build_clang.sh:  INSTALLPREFIX="/usr/local"
build_clang.sh:fi
build_clang.sh:require wget
build_clang.sh:function warn_if_installed()
build_clang.sh:{
build_clang.sh:  set +e
build_clang.sh:  which $1 &>/dev/null && \
build_clang.sh:  {
build_clang.sh:    echo ""
build_clang.sh:    echo "It is highly recommended to uninstall previous $2 versions first:"
build_clang.sh:    echo "-> $(which $1 2>/dev/null)"
build_clang.sh:    echo ""
build_clang.sh:  }
build_clang.sh:  set -e
build_clang.sh:}
build_clang.sh:if [ $PLATFORM != "Darwin" -a $PLATFORM != "FreeBSD" ]; then
build_clang.sh:  warn_if_installed clang clang
build_clang.sh:  warn_if_installed llvm-config llvm
build_clang.sh:fi
build_clang.sh:echo "Building Clang/LLVM $CLANG_VERSION may take a long time."
build_clang.sh:echo "Installation Prefix: $INSTALLPREFIX"
build_clang.sh:if [ -z "$UNATTENDED" ]; then
build_clang.sh:  echo ""
build_clang.sh:  read -p "Press enter to start building."
build_clang.sh:  echo ""
build_clang.sh:fi
build_clang.sh:pushd $TARBALL_DIR &>/dev/null
build_clang.sh:if [ -z "$PKGCOMPRESSOR" ]; then
build_clang.sh:  PKGCOMPRESSOR="tar.xz"
build_clang.sh:  [ $CLANG_VERSION == "3.4" ] && PKGCOMPRESSOR="tar.gz"
build_clang.sh:fi
build_clang.sh:LLVM_PKG="$MIRROR/releases/${CLANG_VERSION}/"
build_clang.sh:LLVM_PKG+="llvm-${CLANG_VERSION}.src.${PKGCOMPRESSOR}"
build_clang.sh: 
build_clang.sh:CLANG_PKG="$MIRROR/releases/${CLANG_VERSION}/"
build_clang.sh:CLANG_PKG+="cfe-${CLANG_VERSION}.src.${PKGCOMPRESSOR}"
build_clang.sh:wget -c $LLVM_PKG
build_clang.sh:wget -c $CLANG_PKG
build_clang.sh:popd &>/dev/null
build_clang.sh:pushd $BUILD_DIR &>/dev/null
build_clang.sh:echo "cleaning up ..."
build_clang.sh:rm -rf llvm* 2>/dev/null
build_clang.sh:extract "$TARBALL_DIR/$(basename $LLVM_PKG)" 2 0
build_clang.sh:pushd llvm* &>/dev/null
build_clang.sh:pushd tools &>/dev/null
build_clang.sh:extract "$TARBALL_DIR/$(basename $CLANG_PKG)" 1
build_clang.sh:[ -e clang* ] && mv clang* clang
build_clang.sh:[ -e cfe* ] && mv cfe* clang
build_clang.sh:popd &>/dev/null
build_clang.sh:function build()
build_clang.sh:{
build_clang.sh:  stage=$1
build_clang.sh:  mkdir -p $stage
build_clang.sh:  pushd $stage &>/dev/null
build_clang.sh:  ../configure --prefix=$INSTALLPREFIX --enable-optimized --disable-assertions
build_clang.sh:  $MAKE $2 -j $JOBS VERBOSE=1
build_clang.sh:  popd &>/dev/null
build_clang.sh:}
build_clang.sh:if [ -n "$DISABLE_BOOTSTRAP" ]; then
build_clang.sh:  build build
build_clang.sh:else
build_clang.sh:  build build_stage1 clang-only
build_clang.sh:  export CC=$PWD/build_stage1/Release/bin/clang
build_clang.sh:  export CXX=$PWD/build_stage1/Release/bin/clang++
build_clang.sh:  if [ -z "$PORTABLE" ]; then
build_clang.sh:    export CFLAGS="-march=native"
build_clang.sh:    export CXXFLAGS="-march=native"
build_clang.sh:  fi
build_clang.sh:  build build_stage2
build_clang.sh:  if [ -n "$ENABLE_FULL_BOOTSTRAP" ]; then
build_clang.sh:    CC=$PWD/build_stage2/Release/bin/clang \
build_clang.sh:    CXX=$PWD/build_stage2/Release/bin/clang++ \
build_clang.sh:    build build_stage3
build_clang.sh:  fi
build_clang.sh:fi
build_clang.sh:echo ""
build_clang.sh:echo "Done!"
build_clang.sh:echo ""
build_clang.sh:echo -n "cd into '$PWD/$stage' and type 'make install' to install "
build_clang.sh:echo "clang/llvm to '$INSTALLPREFIX'"
build_clang.sh:echo ""
build_clang.sh:popd &>/dev/null # llvm
build_clang.sh:popd &>/dev/null
build_compiler_rt.sh:#!/usr/bin/env bash
build_compiler_rt.sh:pushd "${0%/*}" &>/dev/null
build_compiler_rt.sh:source tools/tools.sh
build_compiler_rt.sh:eval $(tools/osxcross_conf.sh)
build_compiler_rt.sh:if [ $PLATFORM == "Darwin" ]; then
build_compiler_rt.sh:  exit 0
build_compiler_rt.sh:fi
build_compiler_rt.sh:require git
build_compiler_rt.sh:set +e
build_compiler_rt.sh:which xcrun &>/dev/null
build_compiler_rt.sh:# Clang <= 3.4 doesn't like '-arch x86_64h'
build_compiler_rt.sh:if [ $? -ne 0 ] ||
build_compiler_rt.sh:   [[ $(xcrun clang -arch x86_64h --version 2>/dev/null) \
build_compiler_rt.sh:      == *Target:\ x86_64-* ]];
build_compiler_rt.sh:then
build_compiler_rt.sh:  echo "Please re-run ./build.sh" 1>&2
build_compiler_rt.sh:  exit 1
build_compiler_rt.sh:fi
build_compiler_rt.sh:set -e
build_compiler_rt.sh:CLANG_VERSION=$(echo "__clang_major__ __clang_minor__ __clang_patchlevel__" | \
build_compiler_rt.sh: clang -xc -E - | tail -n1 | tr ' ' '.')
build_compiler_rt.sh:# Drop patch level for <= 3.3.
build_compiler_rt.sh:if [ $(osxcross-cmp $CLANG_VERSION "<=" 3.3) -eq 1 ]; then
build_compiler_rt.sh:  CLANG_VERSION=$(echo $CLANG_VERSION | tr '.' ' ' |
build_compiler_rt.sh:                  awk '{print $1, $2}' | tr ' ' '.')
build_compiler_rt.sh:fi
build_compiler_rt.sh:CLANG_LIB_DIR=$(clang -print-search-dirs | grep "libraries: =" | \
build_compiler_rt.sh:                tr '=' ' ' | tr ':' ' ' | awk '{print $2}')
build_compiler_rt.sh:VERSION=$(echo "${CLANG_LIB_DIR}" | tr '/' '\n' | tail -n1)
build_compiler_rt.sh:if [ $VERSION != $CLANG_VERSION ]; then
build_compiler_rt.sh:  echo "sanity check failed: $VERSION != ${CLANG_VERSION}" 1>&2
build_compiler_rt.sh:  exit 1
build_compiler_rt.sh:fi
build_compiler_rt.sh:CLANG_INCLUDE_DIR="${CLANG_LIB_DIR}/include"
build_compiler_rt.sh:CLANG_DARWIN_LIB_DIR="${CLANG_LIB_DIR}/lib/darwin"
build_compiler_rt.sh:case $CLANG_VERSION in
build_compiler_rt.sh:  3.2*) BRANCH=release_32 ;;
build_compiler_rt.sh:  3.3*) BRANCH=release_33 ;;
build_compiler_rt.sh:  3.4*) BRANCH=release_34 ;;
build_compiler_rt.sh:  3.5*) BRANCH=release_35 ;;
build_compiler_rt.sh:  3.6*) BRANCH=release_36 ;;
build_compiler_rt.sh:  3.7*) BRANCH=release_37 ;;
build_compiler_rt.sh:  3.8*) BRANCH=master ;;
build_compiler_rt.sh:  * ) echo "Unsupported Clang version, must be >= 3.2 and <= 3.8" 1>&2; exit 1;
build_compiler_rt.sh:esac
build_compiler_rt.sh:pushd $OSXCROSS_BUILD_DIR &>/dev/null
build_compiler_rt.sh:if [ ! -e compiler-rt/.clone_complete ]; then
build_compiler_rt.sh:  rm -rf compiler-rt
build_compiler_rt.sh:  git clone http://llvm.org/git/compiler-rt.git
build_compiler_rt.sh:fi
build_compiler_rt.sh:pushd compiler-rt &>/dev/null
build_compiler_rt.sh:git reset --hard
build_compiler_rt.sh:git checkout $BRANCH
build_compiler_rt.sh:git clean -fdx
build_compiler_rt.sh:touch .clone_complete
build_compiler_rt.sh:git pull
build_compiler_rt.sh:$SED -i "s/Configs += ios//g" make/platform/clang_darwin.mk
build_compiler_rt.sh:$SED -i "s/Configs += cc_kext_ios5//g" make/platform/clang_darwin.mk
build_compiler_rt.sh:$SED -i "s/Configs += profile_ios//g" make/platform/clang_darwin.mk
build_compiler_rt.sh:$SED -i "s/Configs += asan_iossim_dynamic//g" make/platform/clang_darwin.mk
build_compiler_rt.sh:if [ -f "$OSXCROSS_SDK/usr/lib/libSystem.B.tbd" ]; then
build_compiler_rt.sh:  # https://llvm.org/bugs/show_bug.cgi?id=24776
build_compiler_rt.sh:  $SED -i "s/x86_64 x86_64h,/x86_64,/g" make/platform/clang_darwin.mk
build_compiler_rt.sh:fi
build_compiler_rt.sh:# Unbreak the -Werror build.
build_compiler_rt.sh:if [ -f lib/asan/asan_mac.h ]; then
build_compiler_rt.sh:  $SED -i "s/ASAN__MAC_H/ASAN_MAC_H/g" lib/asan/asan_mac.h
build_compiler_rt.sh:fi
build_compiler_rt.sh:if [ $(osxcross-cmp $CLANG_VERSION ">=" 3.5) -eq 1 ]; then
build_compiler_rt.sh:  export MACOSX_DEPLOYMENT_TARGET=10.7
build_compiler_rt.sh:else
build_compiler_rt.sh:  export MACOSX_DEPLOYMENT_TARGET=10.4
build_compiler_rt.sh:fi
build_compiler_rt.sh:if [ $(osxcross-cmp $MACOSX_DEPLOYMENT_TARGET ">" \
build_compiler_rt.sh:                    $OSXCROSS_SDK_VERSION) -eq 1 ];
build_compiler_rt.sh:then
build_compiler_rt.sh:  echo ">= $MACOSX_DEPLOYMENT_TARGET SDK required" 1>&2
build_compiler_rt.sh:  exit 1
build_compiler_rt.sh:fi
build_compiler_rt.sh:EXTRA_MAKE_FLAGS="LIPO=\"$(xcrun -f lipo)\""
build_compiler_rt.sh:if [ $(osxcross-cmp $CLANG_VERSION "<=" 3.3) -eq 1 ]; then
build_compiler_rt.sh:  EXTRA_MAKE_FLAGS+=" AR=\"$(xcrun -f ar)\""
build_compiler_rt.sh:  EXTRA_MAKE_FLAGS+=" RANLIB=\"$(xcrun -f ranlib)\""
build_compiler_rt.sh:  EXTRA_MAKE_FLAGS+=" CC=\"$(xcrun -f clang)\""
build_compiler_rt.sh:fi
build_compiler_rt.sh:if [ -n "$OCDEBUG" ]; then
build_compiler_rt.sh:  EXTRA_MAKE_FLAGS+=" VERBOSE=1"
build_compiler_rt.sh:fi
build_compiler_rt.sh:# Must eval here because of the spaces in EXTRA_MAKE_FLAGS.
build_compiler_rt.sh:eval \
build_compiler_rt.sh:  "OSXCROSS_NO_X86_64H_DEPLOYMENT_TARGET_WARNING=1 \
build_compiler_rt.sh:   $MAKE clang_darwin $EXTRA_MAKE_FLAGS -j $JOBS"
build_compiler_rt.sh:echo ""
build_compiler_rt.sh:echo ""
build_compiler_rt.sh:echo ""
build_compiler_rt.sh:echo "Please run the following commands by hand to install compiler-rt:"
build_compiler_rt.sh:echo ""
build_compiler_rt.sh:echo "mkdir -p ${CLANG_INCLUDE_DIR}"
build_compiler_rt.sh:echo "mkdir -p ${CLANG_DARWIN_LIB_DIR}"
build_compiler_rt.sh:echo "cp -r $PWD/include/sanitizer ${CLANG_INCLUDE_DIR}"
build_compiler_rt.sh:pushd "clang_darwin" &>/dev/null
build_compiler_rt.sh:function print_install_command() {
build_compiler_rt.sh:  if [ -f "$1" ]; then
build_compiler_rt.sh:    echo "cp $PWD/$1 ${CLANG_DARWIN_LIB_DIR}/$2"
build_compiler_rt.sh:  fi
build_compiler_rt.sh:}
build_compiler_rt.sh:print_install_command "osx/libcompiler_rt.a"         "libclang_rt.osx.a"
build_compiler_rt.sh:print_install_command "10.4/libcompiler_rt.a"        "libclang_rt.10.4.a"
build_compiler_rt.sh:print_install_command "eprintf/libcompiler_rt.a"     "libclang_rt.eprintf.a"
build_compiler_rt.sh:print_install_command "cc_kext/libcompiler_rt.a"     "libclang_rt.cc_kext.a"
build_compiler_rt.sh:print_install_command "profile_osx/libcompiler_rt.a" "libclang_rt.profile_osx.a"
build_compiler_rt.sh:print_install_command "ubsan_osx_dynamic/libcompiler_rt.dylib" \
build_compiler_rt.sh:  "libclang_rt.ubsan_osx_dynamic.dylib"
build_compiler_rt.sh:print_install_command "asan_osx_dynamic/libcompiler_rt.dylib" \
build_compiler_rt.sh:  "libclang_rt.asan_osx_dynamic.dylib"
build_compiler_rt.sh:echo ""
build_gcc.sh:#!/usr/bin/env bash
build_gcc.sh:pushd "${0%/*}" &>/dev/null
build_gcc.sh:unset LIBRARY_PATH
build_gcc.sh:DESC=gcc
build_gcc.sh:USESYSTEMCOMPILER=1
build_gcc.sh:source tools/tools.sh
build_gcc.sh:eval $(tools/osxcross_conf.sh)
build_gcc.sh:# GCC version to build
build_gcc.sh:# (<4.7 will not work properly with libc++)
build_gcc.sh:if [ -z "$GCC_VERSION" ]; then
build_gcc.sh:  GCC_VERSION=5.2.0
build_gcc.sh:  #GCC_VERSION=5-20140928 # snapshot
build_gcc.sh:fi
build_gcc.sh:# GCC mirror
build_gcc.sh:GCC_MIRROR="ftp://ftp.fu-berlin.de/unix/languages/gcc"
build_gcc.sh:require wget
build_gcc.sh:pushd $OSXCROSS_BUILD_DIR &>/dev/null
build_gcc.sh:function remove_locks()
build_gcc.sh:{
build_gcc.sh:  rm -rf $OSXCROSS_BUILD_DIR/have_gcc*
build_gcc.sh:}
build_gcc.sh:source $BASE_DIR/tools/trap_exit.sh
build_gcc.sh:if [ ! -f "have_gcc_${GCC_VERSION}_${OSXCROSS_TARGET}" ]; then
build_gcc.sh:pushd $OSXCROSS_TARBALL_DIR &>/dev/null
build_gcc.sh:if [[ $GCC_VERSION != *-* ]]; then
build_gcc.sh:  wget -c "$GCC_MIRROR/releases/gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.bz2"
build_gcc.sh:else
build_gcc.sh:  wget -c "$GCC_MIRROR/snapshots/$GCC_VERSION/gcc-$GCC_VERSION.tar.bz2"
build_gcc.sh:fi
build_gcc.sh:popd &>/dev/null
build_gcc.sh:echo "cleaning up ..."
build_gcc.sh:rm -rf gcc* 2>/dev/null
build_gcc.sh:extract "$OSXCROSS_TARBALL_DIR/gcc-$GCC_VERSION.tar.bz2" 1
build_gcc.sh:echo ""
build_gcc.sh:pushd gcc*$GCC_VERSION* &>/dev/null
build_gcc.sh:rm -f $OSXCROSS_TARGET_DIR/bin/*-gcc*
build_gcc.sh:rm -f $OSXCROSS_TARGET_DIR/bin/*-g++*
build_gcc.sh:if [ $(osxcross-cmp $GCC_VERSION '>' 5.0.0) == 1 ] &&
build_gcc.sh:   [ $(osxcross-cmp $GCC_VERSION '<' 5.3.0) == 1 ]; then
build_gcc.sh:  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=66035
build_gcc.sh:  patch -p1 < $PATCH_DIR/gcc-pr66035.patch
build_gcc.sh:fi
build_gcc.sh:mkdir -p build
build_gcc.sh:pushd build &>/dev/null
build_gcc.sh:if [[ $PLATFORM == *BSD ]]; then
build_gcc.sh:  export CPATH="/usr/local/include:/usr/pkg/include:$CPATH"
build_gcc.sh:  export LDFLAGS="-L/usr/local/lib -L/usr/pkg/lib $LDFLAGS"
build_gcc.sh:  export LD_LIBRARY_PATH="/usr/local/lib:/usr/pkg/lib:$LD_LIBRARY_PATH"
build_gcc.sh:elif [ "$PLATFORM" == "Darwin" ]; then
build_gcc.sh:  export CPATH="/opt/local/include:$CPATH"
build_gcc.sh:  export LDFLAGS="-L/opt/local/lib $LDFLAGS"
build_gcc.sh:  export LD_LIBRARY_PATH="/opt/local/lib:$LD_LIBRARY_PATH"
build_gcc.sh:fi
build_gcc.sh:EXTRACONFFLAGS=""
build_gcc.sh:if [ "$PLATFORM" != "Darwin" ]; then
build_gcc.sh:  EXTRACONFFLAGS+="--with-ld=$OSXCROSS_TARGET_DIR/bin/x86_64-apple-$OSXCROSS_TARGET-ld "
build_gcc.sh:  EXTRACONFFLAGS+="--with-as=$OSXCROSS_TARGET_DIR/bin/x86_64-apple-$OSXCROSS_TARGET-as "
build_gcc.sh:fi
build_gcc.sh:LANGS="c,c++,objc,obj-c++"
build_gcc.sh:if [ -n "$ENABLE_FORTRAN" ]; then
build_gcc.sh:  LANGS+=",fortran"
build_gcc.sh:fi
build_gcc.sh:../configure \
build_gcc.sh:  --target=x86_64-apple-$OSXCROSS_TARGET \
build_gcc.sh:  --with-sysroot=$OSXCROSS_SDK \
build_gcc.sh:  --disable-nls \
build_gcc.sh:  --enable-languages=$LANGS \
build_gcc.sh:  --without-headers \
build_gcc.sh:  --enable-multilib \
build_gcc.sh:  --with-multilib-list=m32,m64 \
build_gcc.sh:  --enable-lto \
build_gcc.sh:  --enable-checking=release \
build_gcc.sh:  --disable-libstdcxx-pch \
build_gcc.sh:  --prefix=$OSXCROSS_TARGET_DIR \
build_gcc.sh:  --with-system-zlib \
build_gcc.sh:  $EXTRACONFFLAGS
build_gcc.sh:$MAKE -j$JOBS
build_gcc.sh:$MAKE install
build_gcc.sh:GCC_VERSION=`echo $GCC_VERSION | tr '-' ' ' |  awk '{print $1}'`
build_gcc.sh:pushd $OSXCROSS_TARGET_DIR/x86_64-apple-$OSXCROSS_TARGET/include &>/dev/null
build_gcc.sh:pushd c++/${GCC_VERSION}* &>/dev/null
build_gcc.sh:cat $OSXCROSS_TARGET_DIR/../patches/libstdcxx.patch | \
build_gcc.sh:  $SED "s/darwin13/$OSXCROSS_TARGET/g" | \
build_gcc.sh:  patch -p0 -l &>/dev/null || true
build_gcc.sh:popd &>/dev/null
build_gcc.sh:popd &>/dev/null
build_gcc.sh:popd &>/dev/null # build
build_gcc.sh:popd &>/dev/null # gcc
build_gcc.sh:touch "have_gcc_${GCC_VERSION}_${OSXCROSS_TARGET}"
build_gcc.sh:fi # have gcc
build_gcc.sh:popd &>/dev/null # build dir
build_gcc.sh:unset USESYSTEMCOMPILER
build_gcc.sh:source tools/tools.sh
build_gcc.sh:pushd $OSXCROSS_TARGET_DIR/bin &>/dev/null
build_gcc.sh:if [ ! -f i386-apple-$OSXCROSS_TARGET-base-gcc ]; then
build_gcc.sh:  mv x86_64-apple-$OSXCROSS_TARGET-gcc x86_64-apple-$OSXCROSS_TARGET-base-gcc
build_gcc.sh:  mv x86_64-apple-$OSXCROSS_TARGET-g++ x86_64-apple-$OSXCROSS_TARGET-base-g++
build_gcc.sh:  ln -sf x86_64-apple-$OSXCROSS_TARGET-base-gcc i386-apple-$OSXCROSS_TARGET-base-gcc
build_gcc.sh:  ln -sf x86_64-apple-$OSXCROSS_TARGET-base-g++ i386-apple-$OSXCROSS_TARGET-base-g++
build_gcc.sh:fi
build_gcc.sh:echo "compiling wrapper ..."
build_gcc.sh:export OSXCROSS_VERSION
build_gcc.sh:export OSXCROSS_LIBLTO_PATH
build_gcc.sh:export OSXCROSS_TARGET
build_gcc.sh:export OSXCROSS_OSX_VERSION_MIN=$OSXCROSS_OSX_VERSION_MIN
build_gcc.sh:export OSXCROSS_LINKER_VERSION=$OSXCROSS_LINKER_VERSION
build_gcc.sh:TARGETCOMPILER=gcc \
build_gcc.sh:  $BASE_DIR/wrapper/build.sh 1>/dev/null
build_gcc.sh:popd &>/dev/null # wrapper dir
build_gcc.sh:echo ""
build_gcc.sh:test_compiler o32-gcc $BASE_DIR/oclang/test.c
build_gcc.sh:test_compiler o64-gcc $BASE_DIR/oclang/test.c
build_gcc.sh:test_compiler o32-g++ $BASE_DIR/oclang/test.cpp
build_gcc.sh:test_compiler o64-g++ $BASE_DIR/oclang/test.cpp
build_gcc.sh:echo ""
build_gcc.sh:echo "Done! Now you can use o32-gcc/o32-g++ and o64-gcc/o64-g++ as compiler"
build_gcc.sh:echo ""
build_gcc.sh:echo "Example usage:"
build_gcc.sh:echo ""
build_gcc.sh:echo "Example 1: CC=o32-gcc ./configure --host=i386-apple-$OSXCROSS_TARGET"
build_gcc.sh:echo "Example 2: CC=i386-apple-$OSXCROSS_TARGET-gcc ./configure --host=i386-apple-$OSXCROSS_TARGET"
build_gcc.sh:echo "Example 3: o64-gcc -Wall test.c -o test"
build_gcc.sh:echo "Example 4: x86_64-apple-$OSXCROSS_TARGET-strip -x test"
build_gcc.sh:echo ""
build_llvm_dsymutil.sh:#!/usr/bin/env bash
build_llvm_dsymutil.sh:pushd "${0%/*}" &>/dev/null
build_llvm_dsymutil.sh:DESC="llvm-dsymutil"
build_llvm_dsymutil.sh:source tools/tools.sh
build_llvm_dsymutil.sh:eval $(tools/osxcross_conf.sh)
build_llvm_dsymutil.sh:require git
build_llvm_dsymutil.sh:require cmake
build_llvm_dsymutil.sh:pushd $OSXCROSS_BUILD_DIR &>/dev/null
build_llvm_dsymutil.sh:if [ ! -e llvm-dsymutil/.clone_complete ]; then
build_llvm_dsymutil.sh:  rm -rf llvm-dsymutil
build_llvm_dsymutil.sh:  # Vanilla llvm-dsymutil with a few patches on top for OSXCross
build_llvm_dsymutil.sh:  git clone https://github.com/tpoechtrager/llvm-dsymutil.git --depth 1
build_llvm_dsymutil.sh:fi
build_llvm_dsymutil.sh:pushd llvm-dsymutil &>/dev/null
build_llvm_dsymutil.sh:git clean -fdx
build_llvm_dsymutil.sh:touch .clone_complete
build_llvm_dsymutil.sh:git pull
build_llvm_dsymutil.sh:mkdir build
build_llvm_dsymutil.sh:pushd build &>/dev/null
build_llvm_dsymutil.sh:cmake .. \
build_llvm_dsymutil.sh:  -DCMAKE_BUILD_TYPE=Release \
build_llvm_dsymutil.sh:  -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64" \
build_llvm_dsymutil.sh:  -DLLVM_ENABLE_ASSERTIONS=Off
build_llvm_dsymutil.sh:$MAKE -f tools/dsymutil/Makefile -j$JOBS
build_llvm_dsymutil.sh:cp bin/llvm-dsymutil $OSXCROSS_TARGET_DIR/bin/osxcross-llvm-dsymutil
build_llvm_dsymutil.sh:echo "installed llvm-dsymutil to $OSXCROSS_TARGET_DIR/bin/osxcross-llvm-dsymutil"
cleanup.sh:#!/usr/bin/env bash
cleanup.sh:git clean -fdx || rm -rf *~ build target *.tar.xz
oclang/quirks/float.h:/*===---- float.h - Characteristics of floating point types ----------------===
oclang/quirks/float.h: *
oclang/quirks/float.h: * Permission is hereby granted, free of charge, to any person obtaining a copy
oclang/quirks/float.h: * of this software and associated documentation files (the "Software"), to deal
oclang/quirks/float.h: * in the Software without restriction, including without limitation the rights
oclang/quirks/float.h: * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
oclang/quirks/float.h: * copies of the Software, and to permit persons to whom the Software is
oclang/quirks/float.h: * furnished to do so, subject to the following conditions:
oclang/quirks/float.h: *
oclang/quirks/float.h: * The above copyright notice and this permission notice shall be included in
oclang/quirks/float.h: * all copies or substantial portions of the Software.
oclang/quirks/float.h: *
oclang/quirks/float.h: * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
oclang/quirks/float.h: * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
oclang/quirks/float.h: * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
oclang/quirks/float.h: * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
oclang/quirks/float.h: * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
oclang/quirks/float.h: * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
oclang/quirks/float.h: * THE SOFTWARE.
oclang/quirks/float.h: *
oclang/quirks/float.h: *===-----------------------------------------------------------------------===
oclang/quirks/float.h: */
oclang/quirks/float.h:#ifndef __FLOAT_H
oclang/quirks/float.h:#define __FLOAT_H
oclang/quirks/float.h:/* If we're on MinGW, fall back to the system's float.h, which might have
oclang/quirks/float.h: * additional definitions provided for Windows.
oclang/quirks/float.h: * For more details see http://msdn.microsoft.com/en-us/library/y0ybw9fy.aspx
oclang/quirks/float.h: */
oclang/quirks/float.h:#if (defined(__MINGW32__) || defined(_MSC_VER)) && \
oclang/quirks/float.h:    defined(__has_include_next) && __has_include_next(<float.h>)
oclang/quirks/float.h:#  include_next <float.h>
oclang/quirks/float.h:/* Undefine anything that we'll be redefining below. */
oclang/quirks/float.h:#  undef FLT_EVAL_METHOD
oclang/quirks/float.h:#  undef FLT_ROUNDS
oclang/quirks/float.h:#  undef FLT_RADIX
oclang/quirks/float.h:#  undef FLT_MANT_DIG
oclang/quirks/float.h:#  undef DBL_MANT_DIG
oclang/quirks/float.h:#  undef LDBL_MANT_DIG
oclang/quirks/float.h:#  undef DECIMAL_DIG
oclang/quirks/float.h:#  undef FLT_DIG
oclang/quirks/float.h:#  undef DBL_DIG
oclang/quirks/float.h:#  undef LDBL_DIG
oclang/quirks/float.h:#  undef FLT_MIN_EXP
oclang/quirks/float.h:#  undef DBL_MIN_EXP
oclang/quirks/float.h:#  undef LDBL_MIN_EXP
oclang/quirks/float.h:#  undef FLT_MIN_10_EXP
oclang/quirks/float.h:#  undef DBL_MIN_10_EXP
oclang/quirks/float.h:#  undef LDBL_MIN_10_EXP
oclang/quirks/float.h:#  undef FLT_MAX_EXP
oclang/quirks/float.h:#  undef DBL_MAX_EXP
oclang/quirks/float.h:#  undef LDBL_MAX_EXP
oclang/quirks/float.h:#  undef FLT_MAX_10_EXP
oclang/quirks/float.h:#  undef DBL_MAX_10_EXP
oclang/quirks/float.h:#  undef LDBL_MAX_10_EXP
oclang/quirks/float.h:#  undef FLT_MAX
oclang/quirks/float.h:#  undef DBL_MAX
oclang/quirks/float.h:#  undef LDBL_MAX
oclang/quirks/float.h:#  undef FLT_EPSILON
oclang/quirks/float.h:#  undef DBL_EPSILON
oclang/quirks/float.h:#  undef LDBL_EPSILON
oclang/quirks/float.h:#  undef FLT_MIN
oclang/quirks/float.h:#  undef DBL_MIN
oclang/quirks/float.h:#  undef LDBL_MIN
oclang/quirks/float.h:#  if __STDC_VERSION__ >= 201112L || !defined(__STRICT_ANSI__)
oclang/quirks/float.h:#    undef FLT_TRUE_MIN
oclang/quirks/float.h:#    undef DBL_TRUE_MIN
oclang/quirks/float.h:#    undef LDBL_TRUE_MIN
oclang/quirks/float.h:#  endif
oclang/quirks/float.h:#endif
oclang/quirks/float.h:/* Characteristics of floating point types, C99 5.2.4.2.2 */
oclang/quirks/float.h:#define FLT_EVAL_METHOD __FLT_EVAL_METHOD__
oclang/quirks/float.h:#define FLT_ROUNDS (__builtin_flt_rounds())
oclang/quirks/float.h:#define FLT_RADIX __FLT_RADIX__
oclang/quirks/float.h:#define FLT_MANT_DIG __FLT_MANT_DIG__
oclang/quirks/float.h:#define DBL_MANT_DIG __DBL_MANT_DIG__
oclang/quirks/float.h:#define LDBL_MANT_DIG __LDBL_MANT_DIG__
oclang/quirks/float.h:#define DECIMAL_DIG __DECIMAL_DIG__
oclang/quirks/float.h:#define FLT_DIG __FLT_DIG__
oclang/quirks/float.h:#define DBL_DIG __DBL_DIG__
oclang/quirks/float.h:#define LDBL_DIG __LDBL_DIG__
oclang/quirks/float.h:#define FLT_MIN_EXP __FLT_MIN_EXP__
oclang/quirks/float.h:#define DBL_MIN_EXP __DBL_MIN_EXP__
oclang/quirks/float.h:#define LDBL_MIN_EXP __LDBL_MIN_EXP__
oclang/quirks/float.h:#define FLT_MIN_10_EXP __FLT_MIN_10_EXP__
oclang/quirks/float.h:#define DBL_MIN_10_EXP __DBL_MIN_10_EXP__
oclang/quirks/float.h:#define LDBL_MIN_10_EXP __LDBL_MIN_10_EXP__
oclang/quirks/float.h:#define FLT_MAX_EXP __FLT_MAX_EXP__
oclang/quirks/float.h:#define DBL_MAX_EXP __DBL_MAX_EXP__
oclang/quirks/float.h:#define LDBL_MAX_EXP __LDBL_MAX_EXP__
oclang/quirks/float.h:#define FLT_MAX_10_EXP __FLT_MAX_10_EXP__
oclang/quirks/float.h:#define DBL_MAX_10_EXP __DBL_MAX_10_EXP__
oclang/quirks/float.h:#define LDBL_MAX_10_EXP __LDBL_MAX_10_EXP__
oclang/quirks/float.h:#define FLT_MAX __FLT_MAX__
oclang/quirks/float.h:#define DBL_MAX __DBL_MAX__
oclang/quirks/float.h:#define LDBL_MAX __LDBL_MAX__
oclang/quirks/float.h:#define FLT_EPSILON __FLT_EPSILON__
oclang/quirks/float.h:#define DBL_EPSILON __DBL_EPSILON__
oclang/quirks/float.h:#define LDBL_EPSILON __LDBL_EPSILON__
oclang/quirks/float.h:#define FLT_MIN __FLT_MIN__
oclang/quirks/float.h:#define DBL_MIN __DBL_MIN__
oclang/quirks/float.h:#define LDBL_MIN __LDBL_MIN__
oclang/quirks/float.h:#if __STDC_VERSION__ >= 201112L || !defined(__STRICT_ANSI__)
oclang/quirks/float.h:#  define FLT_TRUE_MIN __FLT_DENORM_MIN__
oclang/quirks/float.h:#  define DBL_TRUE_MIN __DBL_DENORM_MIN__
oclang/quirks/float.h:#  define LDBL_TRUE_MIN __LDBL_DENORM_MIN__
oclang/quirks/float.h:#endif
oclang/quirks/float.h:#endif /* __FLOAT_H */
oclang/test.c:#include <stdio.h>
oclang/test.c:int main()
oclang/test.c:{
oclang/test.c:    printf("works");
oclang/test.c:    return 0;
oclang/test.c:}
oclang/test.cpp:#include <iostream>
oclang/test.cpp:int main()
oclang/test.cpp:{
oclang/test.cpp:    std::cout << "works" << std::endl;
oclang/test.cpp:    return 0;
oclang/test.cpp:}
oclang/test_libcxx.cpp:#include <type_traits>
oclang/test_libcxx.cpp:#include <thread>
oclang/test_libcxx.cpp:#include <mutex>
oclang/test_libcxx.cpp:#include <iostream>
oclang/test_libcxx.cpp:int main()
oclang/test_libcxx.cpp:{
oclang/test_libcxx.cpp:    auto test = []() -> int
oclang/test_libcxx.cpp:    {
oclang/test_libcxx.cpp:        return 0;
oclang/test_libcxx.cpp:    };
oclang/test_libcxx.cpp:    std::mutex m;
oclang/test_libcxx.cpp:    std::thread t(test);
oclang/test_libcxx.cpp:    t.join();
oclang/test_libcxx.cpp:    std::cout << "Hello World!" << std::endl;
oclang/test_libcxx.cpp:    return 0;
oclang/test_libcxx.cpp:}
package.sh:#!/usr/bin/env bash
package.sh:set -ex
package.sh:test -z "$COMPRESSLEVEL" && COMPRESSLEVEL=9
package.sh:if [ -n "$BINARYPACKAGE" ]; then
package.sh:  SUFFIX=""
package.sh:else
package.sh:  SUFFIX="_src"
package.sh:  BINARYPACKAGE="0"
package.sh:fi
package.sh:TMPDIR=`mktemp -d /tmp/XXXXXXXXX`
package.sh:BASEDIR=`pwd`
package.sh:set +e
package.sh:REVHASH=`git rev-parse --short HEAD`
package.sh:set -e
package.sh:OSXCROSSVER=`cat build.sh | grep "OSXCROSS_VERSION" | head -n1 | tr '=' ' ' | awk '{print $2}'`
package.sh:pushd $TMPDIR
package.sh:mkdir osxcross
package.sh:pushd osxcross
package.sh:if [ $BINARYPACKAGE != "1" ]; then
package.sh:  cp -r $BASEDIR/tarballs .
package.sh:  cp -r $BASEDIR/patches .
package.sh:  cp -r $BASEDIR/tools .
package.sh:  cp -r $BASEDIR/oclang .
package.sh:  cp -r $BASEDIR/wrapper .
package.sh:else
package.sh:  ldd `ls $BASEDIR/target/bin/x86_64-apple-darwin*-ld | head -n1` | grep "libLTO.so" &>/dev/null && \
package.sh:    echo "-->> WARNING: ld is linked dynamically against libLTO.so! Consider recompiling with DISABLE_LTO_SUPPORT=1 <<--" && \
package.sh:    sleep 5
package.sh:  cp -r $BASEDIR/target/* .
package.sh:  cp $BASEDIR/build/cctools*/cctools/APPLE_LICENSE CCTOOLS.LICENSE
package.sh:  cp $BASEDIR/oclang/find_intrinsic_headers.sh bin/osxcross-fix-intrinsic-headers
package.sh:  READMEINSTALL="README_INSTALL"
package.sh:  echo "- BINARY INSTALLATION INSTRUCTIONS -"     > $READMEINSTALL
package.sh:  echo ""                                        >> $READMEINSTALL
package.sh:  echo "Add "                                    >> $READMEINSTALL
package.sh:  echo ""                                        >> $READMEINSTALL
package.sh:  echo "  \`<absolute path>/bin/osxcross-env\`"  >> $READMEINSTALL
package.sh:  echo ""                                        >> $READMEINSTALL
package.sh:  echo "To your ~/.profile or ~/.bashrc,"        >> $READMEINSTALL
package.sh:  echo "then restart your shell session."        >> $READMEINSTALL
package.sh:  echo ""                                        >> $READMEINSTALL
package.sh:  echo "That's it."                              >> $READMEINSTALL
package.sh:  echo ""                                        >> $READMEINSTALL
package.sh:fi
package.sh:find $BASEDIR -maxdepth 1 -type f -exec cp {} . \;
package.sh:if [ $BINARYPACKAGE == "1" ]; then
package.sh:  rm -f *.sh
package.sh:  rm -f TODO
package.sh:fi
package.sh:rm -rf tarballs/old*
package.sh:rm -rf tarballs/gcc*
package.sh:rm -rf tarballs/MacOSX*
package.sh:rm -f tools/cpucount
package.sh:rm -f osxcross*.tar.*
package.sh:find . \( -name "*.save" -o -name "*~" -o -name "*.kate-swp" \) -exec rm {} \;
package.sh:rm -rf osxcross*.tar.*
package.sh:popd
package.sh:tar -cf - * | xz -$COMPRESSLEVEL -c - > $BASEDIR/osxcross-v${OSXCROSSVER}_${REVHASH}${SUFFIX}.tar.xz
package.sh:popd
package.sh:rm -rf $TMPDIR
patches/cctools-ld64-1.patch:--- ld64/src/3rd/helper_backup.h    2013-02-24 11:26:01.159718369 -0800
patches/cctools-ld64-1.patch:+++ ld64/src/3rd/helper.h   2013-02-24 11:27:22.107716807 -0800
patches/cctools-ld64-1.patch:@@ -1,6 +1,10 @@
patches/cctools-ld64-1.patch: #ifndef _HELPER_H
patches/cctools-ld64-1.patch: #define _HELPER_H
patches/cctools-ld64-1.patch: 
patches/cctools-ld64-1.patch:+#ifdef __cplusplus
patches/cctools-ld64-1.patch:+extern "C" {
patches/cctools-ld64-1.patch:+#endif
patches/cctools-ld64-1.patch:+
patches/cctools-ld64-1.patch: #include <mach/mach_time.h>
patches/cctools-ld64-1.patch: #include <mach/mach_host.h>
patches/cctools-ld64-1.patch: #include <mach/host_info.h>
patches/cctools-ld64-1.patch:@@ -30,4 +34,8 @@
patches/cctools-ld64-1.patch: 
patches/cctools-ld64-1.patch: uint64_t mach_absolute_time(void);
patches/cctools-ld64-1.patch: 
patches/cctools-ld64-1.patch:+#ifdef __cplusplus
patches/cctools-ld64-1.patch:+}
patches/cctools-ld64-1.patch:+#endif
patches/cctools-ld64-1.patch:+
patches/cctools-ld64-1.patch: #endif
patches/cctools-ld64-2.patch:--- ld64/src/ld/Snapshot.cpp	2013-10-02 20:08:31.672088145 +0200
patches/cctools-ld64-2.patch:+++ ld64/src/ld/Snapshot.cpp	2013-10-02 20:08:42.330088934 +0200
patches/cctools-ld64-2.patch:@@ -15,7 +15,7 @@
patches/cctools-ld64-2.patch: #include <sys/stat.h>
patches/cctools-ld64-2.patch: #include <libgen.h>
patches/cctools-ld64-2.patch: #include <time.h>
patches/cctools-ld64-2.patch:-#include <Block.h>
patches/cctools-ld64-2.patch:+#include <BlocksRuntime/Block.h>
patches/cctools-ld64-2.patch: 
patches/cctools-ld64-2.patch: #include "Snapshot.h"
patches/cctools-ld64-2.patch: #include "Options.h"
patches/gcc-pr66035.patch:--- a/gcc/fortran/trans-expr.c	
patches/gcc-pr66035.patch:+++ a/gcc/fortran/trans-expr.c	
patches/gcc-pr66035.patch:@@ -6897,6 +6897,30 @@ alloc_scalar_allocatable_for_subcomponent_assignment (stmtblock_t *block,
patches/gcc-pr66035.patch: 				       TREE_TYPE (tmp), tmp,
patches/gcc-pr66035.patch: 				       fold_convert (TREE_TYPE (tmp), size));
patches/gcc-pr66035.patch:     }
patches/gcc-pr66035.patch:+  else if (cm->ts.type == BT_CLASS)
patches/gcc-pr66035.patch:+    {
patches/gcc-pr66035.patch:+      gcc_assert (expr2->ts.type == BT_CLASS || expr2->ts.type == BT_DERIVED);
patches/gcc-pr66035.patch:+      if (expr2->ts.type == BT_DERIVED)
patches/gcc-pr66035.patch:+	{
patches/gcc-pr66035.patch:+	  tmp = gfc_get_symbol_decl (gfc_find_vtab (&expr2->ts));
patches/gcc-pr66035.patch:+	  tmp = gfc_build_addr_expr (NULL_TREE, tmp);
patches/gcc-pr66035.patch:+	  size = fold_convert (size_type_node, gfc_vptr_size_get (tmp));
patches/gcc-pr66035.patch:+	}
patches/gcc-pr66035.patch:+      else
patches/gcc-pr66035.patch:+	{
patches/gcc-pr66035.patch:+	  gfc_expr *e2vtab;
patches/gcc-pr66035.patch:+	  gfc_se se;
patches/gcc-pr66035.patch:+	  e2vtab = gfc_find_and_cut_at_last_class_ref (expr2);
patches/gcc-pr66035.patch:+	  gfc_add_vptr_component (e2vtab);
patches/gcc-pr66035.patch:+	  gfc_add_size_component (e2vtab);
patches/gcc-pr66035.patch:+	  gfc_init_se (&se, NULL);
patches/gcc-pr66035.patch:+	  gfc_conv_expr (&se, e2vtab);
patches/gcc-pr66035.patch:+	  gfc_add_block_to_block (block, &se.pre);
patches/gcc-pr66035.patch:+	  size = fold_convert (size_type_node, se.expr);
patches/gcc-pr66035.patch:+	  gfc_free_expr (e2vtab);
patches/gcc-pr66035.patch:+	}
patches/gcc-pr66035.patch:+      size_in_bytes = size;
patches/gcc-pr66035.patch:+    }
patches/gcc-pr66035.patch:   else
patches/gcc-pr66035.patch:     {
patches/gcc-pr66035.patch:       /* Otherwise use the length in bytes of the rhs.  */
patches/gcc-pr66035.patch:@@ -7068,6 +7092,14 @@ gfc_trans_subcomponent_assign (tree dest, gfc_component * cm, gfc_expr * expr,
patches/gcc-pr66035.patch: 	  tmp = gfc_build_memcpy_call (tmp, se.expr, size);
patches/gcc-pr66035.patch: 	  gfc_add_expr_to_block (&block, tmp);
patches/gcc-pr66035.patch: 	}
patches/gcc-pr66035.patch:+      else if (cm->ts.type == BT_CLASS && expr->ts.type == BT_CLASS)
patches/gcc-pr66035.patch:+	{
patches/gcc-pr66035.patch:+	  tmp = gfc_copy_class_to_class (se.expr, dest, integer_one_node,
patches/gcc-pr66035.patch:+				   CLASS_DATA (cm)->attr.unlimited_polymorphic);
patches/gcc-pr66035.patch:+	  gfc_add_expr_to_block (&block, tmp);
patches/gcc-pr66035.patch:+	  gfc_add_modify (&block, gfc_class_vptr_get (dest),
patches/gcc-pr66035.patch:+			  gfc_class_vptr_get (se.expr));
patches/gcc-pr66035.patch:+	}
patches/gcc-pr66035.patch:       else
patches/gcc-pr66035.patch: 	gfc_add_modify (&block, tmp,
patches/gcc-pr66035.patch: 			fold_convert (TREE_TYPE (tmp), se.expr));
patches/libstdcxx.patch:--- bits/random.h
patches/libstdcxx.patch:+++ bits/random.h
patches/libstdcxx.patch:@@ -101,10 +101,12 @@
patches/libstdcxx.patch:       { typedef unsigned long long type; };
patches/libstdcxx.patch: 
patches/libstdcxx.patch: #ifdef _GLIBCXX_USE_INT128
patches/libstdcxx.patch:+#ifndef __clang__
patches/libstdcxx.patch:     template<int __s>
patches/libstdcxx.patch:       struct _Select_uint_least_t<__s, 1>
patches/libstdcxx.patch:       { typedef unsigned __int128 type; };
patches/libstdcxx.patch: #endif
patches/libstdcxx.patch:+#endif
patches/libstdcxx.patch: 
patches/libstdcxx.patch:     // Assume a != 0, a < m, c < m, x < m.
patches/libstdcxx.patch:     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c,
patches/libstdcxx.patch:--- cstddef
patches/libstdcxx.patch:+++ cstddef
patches/libstdcxx.patch:@@ -45,11 +45,13 @@
patches/libstdcxx.patch: #include <stddef.h>
patches/libstdcxx.patch: 
patches/libstdcxx.patch: #if __cplusplus >= 201103L
patches/libstdcxx.patch:+#ifndef __clang__
patches/libstdcxx.patch: namespace std
patches/libstdcxx.patch: {
patches/libstdcxx.patch:   // We handle size_t, ptrdiff_t, and nullptr_t in c++config.h.
patches/libstdcxx.patch:   using ::max_align_t;
patches/libstdcxx.patch: }
patches/libstdcxx.patch: #endif
patches/libstdcxx.patch:+#endif
patches/libstdcxx.patch: 
patches/libstdcxx.patch: #endif // _GLIBCXX_CSTDDEF
patches/libstdcxx.patch:--- x86_64-apple-darwin13/bits/c++config.h
patches/libstdcxx.patch:+++ x86_64-apple-darwin13/bits/c++config.h
patches/libstdcxx.patch:@@ -913,7 +913,9 @@
patches/libstdcxx.patch: #define _GLIBCXX_HAVE_TGMATH_H 1
patches/libstdcxx.patch: 
patches/libstdcxx.patch: /* Define to 1 if the target supports thread-local storage. */
patches/libstdcxx.patch:+#if !defined(__clang__) || __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1070
patches/libstdcxx.patch: #define _GLIBCXX_HAVE_TLS 1
patches/libstdcxx.patch:+#endif
patches/libstdcxx.patch: 
patches/libstdcxx.patch: /* Define to 1 if you have the <unistd.h> header file. */
patches/libstdcxx.patch: #define _GLIBCXX_HAVE_UNISTD_H 1
patches/libstdcxx.patch:--- x86_64-apple-darwin13/i386/bits/c++config.h
patches/libstdcxx.patch:+++ x86_64-apple-darwin13/i386/bits/c++config.h
patches/libstdcxx.patch:@@ -913,7 +913,9 @@
patches/libstdcxx.patch: #define _GLIBCXX_HAVE_TGMATH_H 1
patches/libstdcxx.patch: 
patches/libstdcxx.patch: /* Define to 1 if the target supports thread-local storage. */
patches/libstdcxx.patch:+#if !defined(__clang__) || __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1070
patches/libstdcxx.patch: #define _GLIBCXX_HAVE_TLS 1
patches/libstdcxx.patch:+#endif
patches/libstdcxx.patch: 
patches/libstdcxx.patch: /* Define to 1 if you have the <unistd.h> header file. */
patches/libstdcxx.patch: #define _GLIBCXX_HAVE_UNISTD_H 1
patches/xar-netbsd.patch:--- lib/linuxattr.c
patches/xar-netbsd.patch:+++ lib/linuxattr.c
patches/xar-netbsd.patch:@@ -52,9 +52,7 @@
patches/xar-netbsd.patch: #include <sys/param.h>
patches/xar-netbsd.patch: #endif
patches/xar-netbsd.patch: 
patches/xar-netbsd.patch:-#ifdef HAVE_SYS_STATFS_H  /* Nonexistant future OS needs this */
patches/xar-netbsd.patch:-#include <sys/statfs.h>
patches/xar-netbsd.patch:-#endif
patches/xar-netbsd.patch:+#include <sys/statvfs.h>
patches/xar-netbsd.patch: 
patches/xar-netbsd.patch: #ifdef HAVE_SYS_MOUNT_H
patches/xar-netbsd.patch: #include <sys/mount.h>
patches/xar-netbsd.patch:@@ -138,7 +136,7 @@
patches/xar-netbsd.patch: #if defined(HAVE_SYS_XATTR_H) && defined(HAVE_LGETXATTR) && !defined(__APPLE__)
patches/xar-netbsd.patch: 	char *i, *buf = NULL;
patches/xar-netbsd.patch: 	int ret, retval=0, bufsz = 1024;
patches/xar-netbsd.patch:-	struct statfs sfs;
patches/xar-netbsd.patch:+	struct statvfs sfs;
patches/xar-netbsd.patch: 	char *fsname = NULL;
patches/xar-netbsd.patch: 	struct _linuxattr_context context;
patches/xar-netbsd.patch: 	
patches/xar-netbsd.patch:@@ -165,8 +163,9 @@
patches/xar-netbsd.patch: 	if( ret == 0 ) goto BAIL;
patches/xar-netbsd.patch: 
patches/xar-netbsd.patch: 	memset(&sfs, 0, sizeof(sfs));
patches/xar-netbsd.patch:-	statfs(file, &sfs);
patches/xar-netbsd.patch:+	statvfs(file, &sfs);
patches/xar-netbsd.patch: 
patches/xar-netbsd.patch:+#if 0
patches/xar-netbsd.patch: 	switch(sfs.f_type) {
patches/xar-netbsd.patch: 	case EXT3_SUPER_MAGIC: fsname = "ext3"; break; /* assume ext3 */
patches/xar-netbsd.patch: 	case JFS_SUPER_MAGIC:  fsname = "jfs" ; break;
patches/xar-netbsd.patch:@@ -174,6 +173,15 @@
patches/xar-netbsd.patch: 	case XFS_SUPER_MAGIC:  fsname = "xfs" ; break;
patches/xar-netbsd.patch: 	default: retval=0; goto BAIL;
patches/xar-netbsd.patch: 	};
patches/xar-netbsd.patch:+#endif
patches/xar-netbsd.patch:+
patches/xar-netbsd.patch:+    fsname = sfs.f_fstypename;
patches/xar-netbsd.patch:+
patches/xar-netbsd.patch:+    if(strcmp(fsname, "ext3") && strcmp(fsname, "jfs") &&
patches/xar-netbsd.patch:+       strcmp(fsname, "reiser") && strcmp(fsname, "xfs")) {
patches/xar-netbsd.patch:+        retval=0;
patches/xar-netbsd.patch:+        goto BAIL;
patches/xar-netbsd.patch:+    }
patches/xar-netbsd.patch: 
patches/xar-netbsd.patch: 	for( i=buf; (i-buf) < ret; i += strlen(i)+1 ) {
patches/xar-netbsd.patch: 		xar_ea_t e;
patches/xar-netbsd.patch:@@ -202,7 +210,7 @@
patches/xar-netbsd.patch: {
patches/xar-netbsd.patch: #if defined HAVE_SYS_XATTR_H && defined(HAVE_LSETXATTR) && !defined(__APPLE__)
patches/xar-netbsd.patch: 	const char *fsname = "bogus";
patches/xar-netbsd.patch:-	struct statfs sfs;
patches/xar-netbsd.patch:+	struct statvfs sfs;
patches/xar-netbsd.patch: 	int eaopt = 0;
patches/xar-netbsd.patch: 	struct _linuxattr_context context;
patches/xar-netbsd.patch: 	xar_prop_t p;
patches/xar-netbsd.patch:@@ -217,19 +225,31 @@
patches/xar-netbsd.patch: 	/* Check for EA extraction behavior */
patches/xar-netbsd.patch: 
patches/xar-netbsd.patch: 	memset(&sfs, 0, sizeof(sfs));
patches/xar-netbsd.patch:-	if( statfs(file, &sfs) != 0 ) {
patches/xar-netbsd.patch:+	if( statvfs(file, &sfs) != 0 ) {
patches/xar-netbsd.patch: 		char *tmp, *bname;
patches/xar-netbsd.patch: 		tmp = strdup(file);
patches/xar-netbsd.patch: 		bname = dirname(tmp);
patches/xar-netbsd.patch:-		statfs(bname, &sfs);
patches/xar-netbsd.patch:+		statvfs(bname, &sfs);
patches/xar-netbsd.patch: 		free(tmp);
patches/xar-netbsd.patch: 	}
patches/xar-netbsd.patch:+#if 0
patches/xar-netbsd.patch: 	switch(sfs.f_type) {
patches/xar-netbsd.patch: 	case EXT3_SUPER_MAGIC: fsname = "ext3"; break; /* assume ext3 */
patches/xar-netbsd.patch: 	case JFS_SUPER_MAGIC:  fsname = "jfs" ; break;
patches/xar-netbsd.patch: 	case REISERFS_SUPER_MAGIC:fsname = "reiser" ; break;
patches/xar-netbsd.patch: 	case XFS_SUPER_MAGIC:  fsname = "xfs" ; break;
patches/xar-netbsd.patch: 	};
patches/xar-netbsd.patch:+#endif
patches/xar-netbsd.patch:+
patches/xar-netbsd.patch:+    {
patches/xar-netbsd.patch:+        const char *pp = fsname;
patches/xar-netbsd.patch:+        fsname = sfs.f_fstypename;
patches/xar-netbsd.patch:+    
patches/xar-netbsd.patch:+        if(strcmp(fsname, "ext3") && strcmp(fsname, "jfs") &&
patches/xar-netbsd.patch:+            strcmp(fsname, "reiser") && strcmp(fsname, "xfs")) {
patches/xar-netbsd.patch:+            fsname = pp;
patches/xar-netbsd.patch:+        }
patches/xar-netbsd.patch:+    } 
patches/xar-netbsd.patch: 
patches/xar-netbsd.patch: 	for(p = xar_prop_pfirst(f); p; p = xar_prop_pnext(p)) {
patches/xar-netbsd.patch: 		const char *fs = NULL;
tools/cpucount.c:/***********************************************************************
tools/cpucount.c: *  OSXCross                                                           *
tools/cpucount.c: *  Copyright (C) 2013, 2014 by Thomas Poechtrager                     *
tools/cpucount.c: *  t.poechtrager@gmail.com                                            *
tools/cpucount.c: *                                                                     *
tools/cpucount.c: *  This program is free software; you can redistribute it and/or      *
tools/cpucount.c: *  modify it under the terms of the GNU General Public License        *
tools/cpucount.c: *  as published by the Free Software Foundation; either version 2     *
tools/cpucount.c: *  of the License, or (at your option) any later version.             *
tools/cpucount.c: *                                                                     *
tools/cpucount.c: *  This program is distributed in the hope that it will be useful,    *
tools/cpucount.c: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
tools/cpucount.c: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
tools/cpucount.c: *  GNU General Public License for more details.                       *
tools/cpucount.c: *                                                                     *
tools/cpucount.c: *  You should have received a copy of the GNU General Public License  *
tools/cpucount.c: *  along with this program; if not, write to the Free Software        *
tools/cpucount.c: *  Foundation, Inc.,                                                  *
tools/cpucount.c: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
tools/cpucount.c: ***********************************************************************/
tools/cpucount.c:#include <stdio.h>
tools/cpucount.c:#include <stdlib.h>
tools/cpucount.c:#ifdef __CYGWIN__
tools/cpucount.c:#define WIN32
tools/cpucount.c:#endif /* __CYGWIN__ */
tools/cpucount.c:#ifdef WIN32
tools/cpucount.c:#include <windows.h>
tools/cpucount.c:#endif /* WIN32 */
tools/cpucount.c:#ifdef __linux__
tools/cpucount.c:#define __USE_GNU
tools/cpucount.c:#include <sched.h>
tools/cpucount.c:#undef __USE_GNU
tools/cpucount.c:#endif /* __linux__ */
tools/cpucount.c:#if defined(__FreeBSD__) || defined(__NetBSD__) || \
tools/cpucount.c:    defined(__OpenBSD__) || defined(__DragonFly__) || \
tools/cpucount.c:    defined(__APPLE__)
tools/cpucount.c:#include <unistd.h>
tools/cpucount.c:#include <sys/param.h>
tools/cpucount.c:#include <sys/types.h>
tools/cpucount.c:#include <sys/sysctl.h>
tools/cpucount.c:#ifndef HW_AVAILCPU
tools/cpucount.c:#define HW_AVAILCPU 25
tools/cpucount.c:#endif /* HW_AVAILCPU */
tools/cpucount.c:#endif /* BSD */
tools/cpucount.c:int getcpucount() {
tools/cpucount.c:#ifdef WIN32
tools/cpucount.c:  SYSTEM_INFO sysinfo;
tools/cpucount.c:  GetSystemInfo(&sysinfo);
tools/cpucount.c:  return sysinfo.dwNumberOfProcessors;
tools/cpucount.c:#else
tools/cpucount.c:#ifdef __linux__
tools/cpucount.c:  cpu_set_t cs;
tools/cpucount.c:  int i, cpucount = 0;
tools/cpucount.c:  CPU_ZERO(&cs);
tools/cpucount.c:  sched_getaffinity(0, sizeof(cs), &cs);
tools/cpucount.c:  for (i = 0; i < 128; i++) {
tools/cpucount.c:    if (CPU_ISSET(i, &cs))
tools/cpucount.c:      cpucount++;
tools/cpucount.c:  }
tools/cpucount.c:  return cpucount ? cpucount : 1;
tools/cpucount.c:#else
tools/cpucount.c:#if defined(__FreeBSD__) || defined(__NetBSD__) || \
tools/cpucount.c:    defined(__OpenBSD__) || defined(__DragonFly__) || \
tools/cpucount.c:    defined(__APPLE__)
tools/cpucount.c:  int cpucount = 0;
tools/cpucount.c:  int mib[4];
tools/cpucount.c:  size_t len = sizeof(cpucount);
tools/cpucount.c:  mib[0] = CTL_HW;
tools/cpucount.c:  mib[1] = HW_AVAILCPU;
tools/cpucount.c:  sysctl(mib, 2, &cpucount, &len, NULL, 0);
tools/cpucount.c:  if (cpucount < 1) {
tools/cpucount.c:    mib[1] = HW_NCPU;
tools/cpucount.c:    sysctl(mib, 2, &cpucount, &len, NULL, 0);
tools/cpucount.c:  }
tools/cpucount.c:  return cpucount ? cpucount : 1;
tools/cpucount.c:#else
tools/cpucount.c:#warning unknown platform
tools/cpucount.c:  return 1;
tools/cpucount.c:#endif /* BSD */
tools/cpucount.c:#endif /* __linux__ */
tools/cpucount.c:#endif /* WIN32 */
tools/cpucount.c:}
tools/cpucount.c:int main(void) {
tools/cpucount.c:  printf("%d\n", getcpucount());
tools/cpucount.c:  return 0;
tools/cpucount.c:}
tools/gen_sdk_package.sh:#!/usr/bin/env bash
tools/gen_sdk_package.sh:# OS X SDK packaging script
tools/gen_sdk_package.sh:export LC_ALL=C
tools/gen_sdk_package.sh:function set_xcode_dir()
tools/gen_sdk_package.sh:{
tools/gen_sdk_package.sh:  local tmp=$(ls $1 2>/dev/null | grep "^Xcode.*.app" | grep -v "beta" | head -n1)
tools/gen_sdk_package.sh:  if [ -z "$tmp" ]; then
tools/gen_sdk_package.sh:    tmp=$(ls $1 2>/dev/null | grep "^Xcode.*.app" | head -n1)
tools/gen_sdk_package.sh:  fi
tools/gen_sdk_package.sh:  if [ -n "$tmp" ]; then
tools/gen_sdk_package.sh:    XCODEDIR="$1/$tmp"
tools/gen_sdk_package.sh:  fi
tools/gen_sdk_package.sh:}
tools/gen_sdk_package.sh:if [ $(uname -s) != "Darwin" ]; then
tools/gen_sdk_package.sh:  if [ -z "$XCODEDIR" ]; then
tools/gen_sdk_package.sh:    echo "This script must be run on OS X" 1>&2
tools/gen_sdk_package.sh:    echo "... Or with XCODEDIR=... on Linux" 1>&2
tools/gen_sdk_package.sh:    exit 1
tools/gen_sdk_package.sh:  else
tools/gen_sdk_package.sh:    case $XCODEDIR in
tools/gen_sdk_package.sh:      /*) ;;
tools/gen_sdk_package.sh:      *) XCODEDIR="$PWD/$XCODEDIR" ;;
tools/gen_sdk_package.sh:    esac
tools/gen_sdk_package.sh:    set_xcode_dir $XCODEDIR
tools/gen_sdk_package.sh:  fi
tools/gen_sdk_package.sh:else
tools/gen_sdk_package.sh:  set_xcode_dir $(echo /Volumes/Xcode* | tr ' ' '\n' | grep -v "beta" | head -n1)
tools/gen_sdk_package.sh:  if [ -z "$XCODEDIR" ]; then
tools/gen_sdk_package.sh:    set_xcode_dir /Applications
tools/gen_sdk_package.sh:    if [ -z "$XCODEDIR" ]; then
tools/gen_sdk_package.sh:      set_xcode_dir $(echo /Volumes/Xcode* | tr ' ' '\n' | head -n1)
tools/gen_sdk_package.sh:      if [ -z "$XCODEDIR" ]; then
tools/gen_sdk_package.sh:        echo "please mount Xcode.dmg" 1>&2
tools/gen_sdk_package.sh:        exit 1
tools/gen_sdk_package.sh:      fi
tools/gen_sdk_package.sh:    fi
tools/gen_sdk_package.sh:  fi
tools/gen_sdk_package.sh:fi
tools/gen_sdk_package.sh:if [ ! -d $XCODEDIR ]; then
tools/gen_sdk_package.sh:  echo "cannot find Xcode (XCODEDIR=$XCODEDIR)" 1>&2
tools/gen_sdk_package.sh:  exit 1
tools/gen_sdk_package.sh:fi
tools/gen_sdk_package.sh:echo -e "found Xcode: $XCODEDIR"
tools/gen_sdk_package.sh:WDIR=$(pwd)
tools/gen_sdk_package.sh:which gnutar &>/dev/null
tools/gen_sdk_package.sh:if [ $? -eq 0 ]; then
tools/gen_sdk_package.sh:  TAR=gnutar
tools/gen_sdk_package.sh:else
tools/gen_sdk_package.sh:  TAR=tar
tools/gen_sdk_package.sh:fi
tools/gen_sdk_package.sh:which xz &>/dev/null
tools/gen_sdk_package.sh:if [ $? -eq 0 ]; then
tools/gen_sdk_package.sh:  COMPRESSOR=xz
tools/gen_sdk_package.sh:  PKGEXT="tar.xz"
tools/gen_sdk_package.sh:else
tools/gen_sdk_package.sh:  COMPRESSOR=bzip2
tools/gen_sdk_package.sh:  PKGEXT="tar.bz2"
tools/gen_sdk_package.sh:fi
tools/gen_sdk_package.sh:set -e
tools/gen_sdk_package.sh:pushd $XCODEDIR &>/dev/null
tools/gen_sdk_package.sh:if [ -d "Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs" ]; then
tools/gen_sdk_package.sh:  pushd "Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs" &>/dev/null
tools/gen_sdk_package.sh:else
tools/gen_sdk_package.sh:  if [ -d "../Packages" ]; then
tools/gen_sdk_package.sh:    pushd "../Packages" &>/dev/null
tools/gen_sdk_package.sh:  elif [ -d "Packages" ]; then
tools/gen_sdk_package.sh:    pushd "Packages" &>/dev/null
tools/gen_sdk_package.sh:  else
tools/gen_sdk_package.sh:    if [ $? -ne 0 ]; then
tools/gen_sdk_package.sh:      echo "Xcode (or this script) is out of date" 1>&2
tools/gen_sdk_package.sh:      echo "trying some magic to find the SDKs anyway ..." 1>&2
tools/gen_sdk_package.sh:      SDKDIR=$(find . -name SDKs -type d | grep MacOSX | head -n1)
tools/gen_sdk_package.sh:      if [ -z "$SDKDIR" ]; then
tools/gen_sdk_package.sh:        echo "cannot find SDKs!" 1>&2
tools/gen_sdk_package.sh:        exit 1
tools/gen_sdk_package.sh:      fi
tools/gen_sdk_package.sh:      pushd $SDKDIR &>/dev/null
tools/gen_sdk_package.sh:    fi
tools/gen_sdk_package.sh:  fi
tools/gen_sdk_package.sh:fi
tools/gen_sdk_package.sh:SDKS=$(ls | grep "^MacOSX10.*" | grep -v "Patch")
tools/gen_sdk_package.sh:if [ -z "$SDKS" ]; then
tools/gen_sdk_package.sh:    echo "No SDK found" 1>&2
tools/gen_sdk_package.sh:    exit 1
tools/gen_sdk_package.sh:fi
tools/gen_sdk_package.sh:# Xcode 5
tools/gen_sdk_package.sh:LIBCXXDIR1="Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/c++/v1"
tools/gen_sdk_package.sh:# Xcode 6
tools/gen_sdk_package.sh:LIBCXXDIR2="Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1"
tools/gen_sdk_package.sh:# Manual directory
tools/gen_sdk_package.sh:MANDIR="Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/share/man"
tools/gen_sdk_package.sh:for SDK in $SDKS; do
tools/gen_sdk_package.sh:  echo -n "packaging $(echo "$SDK" | sed -E "s/(.sdk|.pkg)//g") SDK "
tools/gen_sdk_package.sh:  echo "(this may take several minutes) ..."
tools/gen_sdk_package.sh:  if [[ $SDK == *.pkg ]]; then
tools/gen_sdk_package.sh:    cp $SDK $WDIR
tools/gen_sdk_package.sh:    continue
tools/gen_sdk_package.sh:  fi
tools/gen_sdk_package.sh:  TMP=$(mktemp -d /tmp/XXXXXXXXXXX)
tools/gen_sdk_package.sh:  cp -r $SDK $TMP &>/dev/null || true
tools/gen_sdk_package.sh:  pushd $XCODEDIR &>/dev/null
tools/gen_sdk_package.sh:  # libc++ headers for C++11/C++14
tools/gen_sdk_package.sh:  if [ -d $LIBCXXDIR1 ]; then
tools/gen_sdk_package.sh:    cp -rf $LIBCXXDIR1 "$TMP/$SDK/usr/include/c++"
tools/gen_sdk_package.sh:  elif [ -d $LIBCXXDIR2 ]; then
tools/gen_sdk_package.sh:    cp -rf $LIBCXXDIR2 "$TMP/$SDK/usr/include/c++"
tools/gen_sdk_package.sh:  fi
tools/gen_sdk_package.sh:  if [ -d $MANDIR ]; then
tools/gen_sdk_package.sh:    mkdir -p $TMP/$SDK/usr/share/man
tools/gen_sdk_package.sh:    cp -rf $MANDIR/* $TMP/$SDK/usr/share/man
tools/gen_sdk_package.sh:  fi
tools/gen_sdk_package.sh:  popd &>/dev/null
tools/gen_sdk_package.sh:  pushd $TMP &>/dev/null
tools/gen_sdk_package.sh:  $TAR -cf - * | $COMPRESSOR -9 -c - > "$WDIR/$SDK.$PKGEXT"
tools/gen_sdk_package.sh:  popd &>/dev/null
tools/gen_sdk_package.sh:  rm -rf $TMP
tools/gen_sdk_package.sh:done
tools/gen_sdk_package.sh:popd &>/dev/null
tools/gen_sdk_package.sh:popd &>/dev/null
tools/gen_sdk_package.sh:echo ""
tools/gen_sdk_package.sh:ls -lh | grep MacOSX
tools/gen_sdk_package_darling_dmg.sh:#!/usr/bin/env bash
tools/gen_sdk_package_darling_dmg.sh:pushd "${0%/*}/.." &>/dev/null
tools/gen_sdk_package_darling_dmg.sh:source tools/tools.sh
tools/gen_sdk_package_darling_dmg.sh:if [ $PLATFORM == "Darwin" ]; then
tools/gen_sdk_package_darling_dmg.sh:  echo "Use gen_sdk_package.sh on Mac OS X" 1>&2
tools/gen_sdk_package_darling_dmg.sh:  exit 1
tools/gen_sdk_package_darling_dmg.sh:fi
tools/gen_sdk_package_darling_dmg.sh:if [ $# -eq 0 ]; then
tools/gen_sdk_package_darling_dmg.sh:  echo "Usage: $0 <xcode.dmg>" 1>&2
tools/gen_sdk_package_darling_dmg.sh:  exit 1
tools/gen_sdk_package_darling_dmg.sh:fi
tools/gen_sdk_package_darling_dmg.sh:mkdir -p $BUILD_DIR
tools/gen_sdk_package_darling_dmg.sh:require git
tools/gen_sdk_package_darling_dmg.sh:require cmake
tools/gen_sdk_package_darling_dmg.sh:require $MAKE
tools/gen_sdk_package_darling_dmg.sh:require modinfo
tools/gen_sdk_package_darling_dmg.sh:require fusermount
tools/gen_sdk_package_darling_dmg.sh:[ -n "$CC" ] && require $CC
tools/gen_sdk_package_darling_dmg.sh:[ -n "$CXX" ] && require $CXX
tools/gen_sdk_package_darling_dmg.sh:set +e
tools/gen_sdk_package_darling_dmg.sh:modinfo fuse &>/dev/null
tools/gen_sdk_package_darling_dmg.sh:if [ $? -ne 0 ]; then
tools/gen_sdk_package_darling_dmg.sh:  echo "required kernel module 'fuse' not loaded" 1>&2
tools/gen_sdk_package_darling_dmg.sh:  echo "please run 'insmod fuse' as root" 1>&2
tools/gen_sdk_package_darling_dmg.sh:  exit 1
tools/gen_sdk_package_darling_dmg.sh:fi
tools/gen_sdk_package_darling_dmg.sh:set -e
tools/gen_sdk_package_darling_dmg.sh:pushd $BUILD_DIR &>/dev/null
tools/gen_sdk_package_darling_dmg.sh:if [ ! -f $TARGET_DIR/SDK/tools/bin/darling-dmg ]; then
tools/gen_sdk_package_darling_dmg.sh:  rm -f have_darling_dmg
tools/gen_sdk_package_darling_dmg.sh:fi
tools/gen_sdk_package_darling_dmg.sh:if [ ! -f "have_darling_dmg" ]; then
tools/gen_sdk_package_darling_dmg.sh:rm -rf darling-dmg*
tools/gen_sdk_package_darling_dmg.sh:git clone https://github.com/LubosD/darling-dmg.git
tools/gen_sdk_package_darling_dmg.sh:pushd darling-dmg &>/dev/null
tools/gen_sdk_package_darling_dmg.sh:mkdir -p build
tools/gen_sdk_package_darling_dmg.sh:pushd build &>/dev/null
tools/gen_sdk_package_darling_dmg.sh:cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$TARGET_DIR/SDK/tools
tools/gen_sdk_package_darling_dmg.sh:$MAKE -j $JOBS install
tools/gen_sdk_package_darling_dmg.sh:popd &>/dev/null
tools/gen_sdk_package_darling_dmg.sh:popd &>/dev/null
tools/gen_sdk_package_darling_dmg.sh:touch "have_darling_dmg"
tools/gen_sdk_package_darling_dmg.sh:fi
tools/gen_sdk_package_darling_dmg.sh:popd &>/dev/null # build dir
tools/gen_sdk_package_darling_dmg.sh:TMP=$(mktemp -d /tmp/XXXXXXXXX)
tools/gen_sdk_package_darling_dmg.sh:function cleanup() {
tools/gen_sdk_package_darling_dmg.sh:  fusermount -u $TMP || true
tools/gen_sdk_package_darling_dmg.sh:  rm -rf $TMP
tools/gen_sdk_package_darling_dmg.sh:}
tools/gen_sdk_package_darling_dmg.sh:trap cleanup EXIT
tools/gen_sdk_package_darling_dmg.sh:$TARGET_DIR/SDK/tools/bin/darling-dmg $1 $TMP
tools/gen_sdk_package_darling_dmg.sh:XCODEDIR=$TMP ./tools/gen_sdk_package.sh
tools/gen_sdk_package_p7zip.sh:#!/usr/bin/env bash
tools/gen_sdk_package_p7zip.sh:pushd "${0%/*}/.." &>/dev/null
tools/gen_sdk_package_p7zip.sh:source tools/tools.sh
tools/gen_sdk_package_p7zip.sh:if [ $PLATFORM == "Darwin" ]; then
tools/gen_sdk_package_p7zip.sh:  echo "Use gen_sdk_package.sh on Mac OS X" 1>&2
tools/gen_sdk_package_p7zip.sh:  exit 1
tools/gen_sdk_package_p7zip.sh:fi
tools/gen_sdk_package_p7zip.sh:if [ $# -eq 0 ]; then
tools/gen_sdk_package_p7zip.sh:  echo "Usage: $0 <xcode.dmg>" 1>&2
tools/gen_sdk_package_p7zip.sh:  exit 1
tools/gen_sdk_package_p7zip.sh:fi
tools/gen_sdk_package_p7zip.sh:case $1 in
tools/gen_sdk_package_p7zip.sh:  /*) XCODEDMG="$1" ;;
tools/gen_sdk_package_p7zip.sh:  *) XCODEDMG="$PWD/$1" ;;
tools/gen_sdk_package_p7zip.sh:esac
tools/gen_sdk_package_p7zip.sh:mkdir -p $BUILD_DIR
tools/gen_sdk_package_p7zip.sh:require git
tools/gen_sdk_package_p7zip.sh:require $MAKE
tools/gen_sdk_package_p7zip.sh:[ -n "$CC" ] && require $CC
tools/gen_sdk_package_p7zip.sh:[ -n "$CXX" ] && require $CXX
tools/gen_sdk_package_p7zip.sh:pushd $BUILD_DIR &>/dev/null
tools/gen_sdk_package_p7zip.sh:if [ ! -f $TARGET_DIR/SDK/tools/bin/7z ]; then
tools/gen_sdk_package_p7zip.sh:  rm -f have_p7zip
tools/gen_sdk_package_p7zip.sh:fi
tools/gen_sdk_package_p7zip.sh:if [ ! -f "have_p7zip" ]; then
tools/gen_sdk_package_p7zip.sh:rm -rf p7zip*
tools/gen_sdk_package_p7zip.sh:git clone https://github.com/tpoechtrager/p7zip.git
tools/gen_sdk_package_p7zip.sh:pushd p7zip &>/dev/null
tools/gen_sdk_package_p7zip.sh:if [ -n "$CC" ] && [ -n "$CXX" ]; then
tools/gen_sdk_package_p7zip.sh:  [[ $CC == *clang* ]] && CC="$CC -Qunused-arguments"
tools/gen_sdk_package_p7zip.sh:  [[ $CXX == *clang* ]] && CXX="$CXX -Qunused-arguments"
tools/gen_sdk_package_p7zip.sh:  $MAKE 7z -j $JOBS CC="$CC" CXX="$CXX"
tools/gen_sdk_package_p7zip.sh:else
tools/gen_sdk_package_p7zip.sh:  $MAKE 7z -j $JOBS
tools/gen_sdk_package_p7zip.sh:fi
tools/gen_sdk_package_p7zip.sh:$MAKE install DEST_HOME=$TARGET_DIR/SDK/tools
tools/gen_sdk_package_p7zip.sh:find $TARGET_DIR/SDK/tools/share -type f -exec chmod 0664 {} \;
tools/gen_sdk_package_p7zip.sh:find $TARGET_DIR/SDK/tools/share -type d -exec chmod 0775 {} \;
tools/gen_sdk_package_p7zip.sh:popd &>/dev/null
tools/gen_sdk_package_p7zip.sh:touch "have_p7zip"
tools/gen_sdk_package_p7zip.sh:fi
tools/gen_sdk_package_p7zip.sh:popd &>/dev/null
tools/gen_sdk_package_p7zip.sh:#/tmp is prone to run out of space
tools/gen_sdk_package_p7zip.sh:#TMP=$(mktemp -d /tmp/XXXXXXXXX)
tools/gen_sdk_package_p7zip.sh:for i in {1..100}; do
tools/gen_sdk_package_p7zip.sh:  TMP="tmp_$RANDOM"
tools/gen_sdk_package_p7zip.sh:  [ -e $TMP ] && continue
tools/gen_sdk_package_p7zip.sh:  mkdir $TMP && break
tools/gen_sdk_package_p7zip.sh:done
tools/gen_sdk_package_p7zip.sh:if [ ! -d $TMP ]; then
tools/gen_sdk_package_p7zip.sh:  echo "cannot create $PWD/$TMP directory" 1>&2
tools/gen_sdk_package_p7zip.sh:  exit 1
tools/gen_sdk_package_p7zip.sh:fi
tools/gen_sdk_package_p7zip.sh:function cleanup() {
tools/gen_sdk_package_p7zip.sh:  popd &>/dev/null || true
tools/gen_sdk_package_p7zip.sh:  rm -rf $TMP
tools/gen_sdk_package_p7zip.sh:}
tools/gen_sdk_package_p7zip.sh:trap cleanup EXIT
tools/gen_sdk_package_p7zip.sh:pushd $TMP &>/dev/null
tools/gen_sdk_package_p7zip.sh:set +e
tools/gen_sdk_package_p7zip.sh:$TARGET_DIR/SDK/tools/bin/7z x \
tools/gen_sdk_package_p7zip.sh:  $XCODEDMG \
tools/gen_sdk_package_p7zip.sh:  "*/Xcode*.app/Contents/Developer/Platforms/MacOSX.platform" \
tools/gen_sdk_package_p7zip.sh:  "*/Xcode*.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain"
tools/gen_sdk_package_p7zip.sh:[ $? -ne 0 -a $? -ne 2 ] && exit 1
tools/gen_sdk_package_p7zip.sh:if [ -z "$(ls -A)" ]; then
tools/gen_sdk_package_p7zip.sh:  $TARGET_DIR/SDK/tools/bin/7z x $XCODEDMG "*/Packages/MacOSX*.pkg"
tools/gen_sdk_package_p7zip.sh:  [ $? -ne 0 -a $? -ne 2 ] && exit 1
tools/gen_sdk_package_p7zip.sh:fi
tools/gen_sdk_package_p7zip.sh:[ -z "$(ls -A)" ] && exit 1
tools/gen_sdk_package_p7zip.sh:set -e
tools/gen_sdk_package_p7zip.sh:popd &>/dev/null
tools/gen_sdk_package_p7zip.sh:XCODEDIR="$TMP/$(ls $TMP | grep "code" | head -n1)" \
tools/gen_sdk_package_p7zip.sh:  ./tools/gen_sdk_package.sh
tools/get_cpu_count.sh:#!/usr/bin/env bash
tools/get_cpu_count.sh:set -e
tools/get_cpu_count.sh:which cc &>/dev/null || { echo "1" && exit 0; }
tools/get_cpu_count.sh:prog="cpucount"
tools/get_cpu_count.sh:pushd "${0%/*}" >/dev/null 2>&1
tools/get_cpu_count.sh:case "$(uname -s)" in
tools/get_cpu_count.sh:  *NT* | CYGWIN*)
tools/get_cpu_count.sh:    prog="${prog}.exe" ;;
tools/get_cpu_count.sh:esac
tools/get_cpu_count.sh:[ ! -f $prog ] && cc cpucount.c -o cpucount &>/dev/null
tools/get_cpu_count.sh:./$prog
tools/get_dependencies.sh:#!/usr/bin/env sh
tools/get_dependencies.sh:#
tools/get_dependencies.sh:# auto-install dependency packages using the systems package manager.
tools/get_dependencies.sh:# this assumes you are running as root or are using sudo
tools/get_dependencies.sh:#
tools/get_dependencies.sh:get_fedora_deps()
tools/get_dependencies.sh:{
tools/get_dependencies.sh: yum install clang llvm-devel libxml2-devel libuuid-devel openssl-devel \
tools/get_dependencies.sh:  bash patch libstdc++-static make
tools/get_dependencies.sh:}
tools/get_dependencies.sh:get_freebsd_deps()
tools/get_dependencies.sh:{
tools/get_dependencies.sh: for pkgname in llvm-devel libxml2 e2fsprogs-libuuid \
tools/get_dependencies.sh:   openssl bash gmake; do
tools/get_dependencies.sh:    echo $pkgname
tools/get_dependencies.sh:    pkg install $pkgname
tools/get_dependencies.sh: done
tools/get_dependencies.sh:}
tools/get_dependencies.sh:get_netbsd_deps()
tools/get_dependencies.sh:{
tools/get_dependencies.sh: pkgin install clang libxml2 libuuid openssl bash patch gmake
tools/get_dependencies.sh:}
tools/get_dependencies.sh:get_opensuse_deps()
tools/get_dependencies.sh:{
tools/get_dependencies.sh: zypper install llvm-clang-devel llvm-clang libclang \
tools/get_dependencies.sh:  libxml2-devel libuuid-devel openssl bash patch make
tools/get_dependencies.sh:}
tools/get_dependencies.sh:get_mageia_deps()
tools/get_dependencies.sh:{
tools/get_dependencies.sh: urpmi ctags
tools/get_dependencies.sh: urpmi task-c-devel task-c++-devel clang lib64llvm-devel llvm \
tools/get_dependencies.sh:  libxml2-devel libuuid-devel openssl libopenssl-devel bash patch \
tools/get_dependencies.sh:  make libstdc++-devel
tools/get_dependencies.sh:}
tools/get_dependencies.sh:get_debian_deps()
tools/get_dependencies.sh:{
tools/get_dependencies.sh: apt-get install -y --force-yes clang llvm-dev libxml2-dev uuid-dev \
tools/get_dependencies.sh:  libssl-dev bash patch make  tar xz-utils bzip2 gzip sed cpio
tools/get_dependencies.sh:}
tools/get_dependencies.sh:unknown()
tools/get_dependencies.sh:{
tools/get_dependencies.sh: echo "Unknown system type. Please get dependencies by hand "
tools/get_dependencies.sh: echo "following README.md. Or update get_dependencies.sh and submit a patch."
tools/get_dependencies.sh:}
tools/get_dependencies.sh:if [ -e /etc/issue ]; then
tools/get_dependencies.sh: if [ "`grep -i ubuntu /etc/issue`" ]; then
tools/get_dependencies.sh:  get_debian_deps
tools/get_dependencies.sh: elif [ "`grep -i debian /etc/issue`" ]; then
tools/get_dependencies.sh:  get_debian_deps
tools/get_dependencies.sh: elif [ "`grep -i raspbian /etc/issue`" ]; then
tools/get_dependencies.sh:  get_debian_deps
tools/get_dependencies.sh: elif [ "`grep -i mint /etc/issue`" ]; then
tools/get_dependencies.sh:  get_debian_deps
tools/get_dependencies.sh: elif [ "`grep -i suse /etc/issue`" ]; then
tools/get_dependencies.sh:  get_opensuse_deps
tools/get_dependencies.sh: elif [ "`grep -i fedora /etc/issue`" ]; then
tools/get_dependencies.sh:  get_fedora_deps
tools/get_dependencies.sh: elif [ "`grep -i red.hat /etc/issue`" ]; then
tools/get_dependencies.sh:  get_fedora_deps
tools/get_dependencies.sh: elif [ "`grep -i mageia /etc/issue`" ]; then
tools/get_dependencies.sh:  get_mageia_deps
tools/get_dependencies.sh: else
tools/get_dependencies.sh:  unknown
tools/get_dependencies.sh: fi
tools/get_dependencies.sh:elif [ "`uname | grep -i freebsd `" ]; then
tools/get_dependencies.sh: get_freebsd_deps
tools/get_dependencies.sh:elif [ "`uname | grep -i netbsd`" ]; then
tools/get_dependencies.sh: get_netbsd_deps
tools/get_dependencies.sh:else
tools/get_dependencies.sh: unknown
tools/get_dependencies.sh:fi
tools/mount_xcode_image.sh:#!/usr/bin/env bash
tools/mount_xcode_image.sh:if [ $(uname -s) != "Linux" ]; then
tools/mount_xcode_image.sh:  echo "This script must be run on Linux"
tools/mount_xcode_image.sh:  exit 1
tools/mount_xcode_image.sh:fi
tools/mount_xcode_image.sh:if [ $EUID -ne 0 ]; then
tools/mount_xcode_image.sh:  echo "This script must be run as root"
tools/mount_xcode_image.sh:  exit 1
tools/mount_xcode_image.sh:fi
tools/mount_xcode_image.sh:if [ $# -lt 1 ]; then
tools/mount_xcode_image.sh:  echo "usage: $0 /path/to/xcode.dmg"
tools/mount_xcode_image.sh:  exit 1
tools/mount_xcode_image.sh:fi
tools/mount_xcode_image.sh:case $1 in
tools/mount_xcode_image.sh:  /*) XCODEDMG="$1" ;;
tools/mount_xcode_image.sh:  *) XCODEDMG="$PWD/$1" ;;
tools/mount_xcode_image.sh:esac
tools/mount_xcode_image.sh:if [ ! -e "$XCODEDMG" ]; then
tools/mount_xcode_image.sh:  echo "$1 does not exist"
tools/mount_xcode_image.sh:  exit 1
tools/mount_xcode_image.sh:fi
tools/mount_xcode_image.sh:pushd "${0%/*}/.." &>/dev/null
tools/mount_xcode_image.sh:source tools/tools.sh
tools/mount_xcode_image.sh:popd &>/dev/null
tools/mount_xcode_image.sh:require dmg2img
tools/mount_xcode_image.sh:verbose_cmd "modprobe hfsplus"
tools/mount_xcode_image.sh:TMP=$(mktemp -d /tmp/XXXXXXXXX)
tools/mount_xcode_image.sh:echo "tmp dir: $TMP"
tools/mount_xcode_image.sh:verbose_cmd "chmod 777 $TMP"
tools/mount_xcode_image.sh:pushd $TMP &>/dev/null
tools/mount_xcode_image.sh:PARTITION=$(dmg2img -l $XCODEDMG | grep 'disk image (Apple_HFS ' | \
tools/mount_xcode_image.sh:            awk '{printf "%d", $2}')
tools/mount_xcode_image.sh:case $PARTITION in
tools/mount_xcode_image.sh:  ''|*[!0-9]*)
tools/mount_xcode_image.sh:    echo "$XCODEDMG: cannot determine HFS partition"
tools/mount_xcode_image.sh:    exit 1 ;;
tools/mount_xcode_image.sh:esac
tools/mount_xcode_image.sh:echo "HFS partition: $PARTITION"
tools/mount_xcode_image.sh:verbose_cmd "dmg2img -p $PARTITION -i $XCODEDMG -o xcode.img &>dmg2img.log"
tools/mount_xcode_image.sh:verbose_cmd "mkdir -m 777 mnt"
tools/mount_xcode_image.sh:verbose_cmd "cd mnt"
tools/mount_xcode_image.sh:verbose_cmd "mount -o loop -t hfsplus ../xcode.img $TMP/mnt"
tools/mount_xcode_image.sh:echo ""
tools/mount_xcode_image.sh:echo "mounted the xcode image to: $TMP/mnt"
tools/mount_xcode_image.sh:echo ""
tools/mount_xcode_image.sh:echo "now run (not as root):"
tools/mount_xcode_image.sh:echo "XCODEDIR=$TMP/mnt ./tools/gen_sdk_package.sh"
tools/mount_xcode_image.sh:echo ""
tools/mount_xcode_image.sh:echo "once you are done with gen_sdk_package.sh, run:"
tools/mount_xcode_image.sh:echo "umount -l $TMP/mnt && rm -rf $TMP"
tools/mount_xcode_image.sh:echo ""
tools/mount_xcode_image.sh:popd &>/dev/null
tools/osxcross-macports:#!/usr/bin/env bash
tools/osxcross-macports:##
tools/osxcross-macports:## A minimalistic MacPorts Packet Manager for OSXCross,
tools/osxcross-macports:## based on: https://github.com/maci0/pmmacports.
tools/osxcross-macports:## Please see README.MACPORTS for more.
tools/osxcross-macports:## License: GPLv2.
tools/osxcross-macports:##
tools/osxcross-macports:set -e
tools/osxcross-macports:export LC_ALL=C
tools/osxcross-macports:pushd "${0%/*}" &>/dev/null
tools/osxcross-macports:MIRROR="$OSXCROSS_MACPORTS_MIRROR"
tools/osxcross-macports:if [ -z "$MIRROR" ]; then
tools/osxcross-macports:  MIRROR="http://packages.macports.org"
tools/osxcross-macports:fi
tools/osxcross-macports:PUBKEYURL="https://svn.macports.org/repository/"
tools/osxcross-macports:PUBKEYURL+="macports/trunk/base/macports-pubkey.pem"
tools/osxcross-macports:# Darwin's antique OpenSSL does not support the SHA-2 family
tools/osxcross-macports:PUBKEYRMD160="d3a22f5be7184d6575afcc1be6fdb82fd25562e8"
tools/osxcross-macports:PUBKEYSHA1="214baa965af76ff71187e6c1ac91c559547f48ab"
tools/osxcross-macports:PLATFORM=$(uname -s)
tools/osxcross-macports:if [ $PLATFORM == "FreeBSD" ]; then
tools/osxcross-macports:  WGETOPTS="--ca-certificate="
tools/osxcross-macports:  WGETOPTS+="/usr/local/share/certs/ca-root-nss.crt"
tools/osxcross-macports:fi
tools/osxcross-macports:if [ -n "$OSXCROSS_MACPORTS_ENABLE_HTTPS" ]; then
tools/osxcross-macports:  MIRROR=$(echo $MIRROR | sed 's/http:/https:/g')
tools/osxcross-macports:fi
tools/osxcross-macports:if [ -z "$BASHPID" ]; then
tools/osxcross-macports:  BASHPID=$(sh -c 'echo $PPID')
tools/osxcross-macports:fi
tools/osxcross-macports:errorMsg()
tools/osxcross-macports:{
tools/osxcross-macports:  echo "$@" 1>&2
tools/osxcross-macports:}
tools/osxcross-macports:verboseMsg()
tools/osxcross-macports:{
tools/osxcross-macports:  if [ -n "$VERBOSE" ]; then
tools/osxcross-macports:    errorMsg "$@"
tools/osxcross-macports:  fi
tools/osxcross-macports:}
tools/osxcross-macports:verbosePlaceHolder()
tools/osxcross-macports:{
tools/osxcross-macports:  if [ -n "$VERBOSE" ]; then
tools/osxcross-macports:    errorMsg ""
tools/osxcross-macports:  fi
tools/osxcross-macports:}
tools/osxcross-macports:require()
tools/osxcross-macports:{
tools/osxcross-macports:  set +e
tools/osxcross-macports:  which $1 &>/dev/null
tools/osxcross-macports:  if [ $? -ne 0 ]; then
tools/osxcross-macports:    errorMsg "$1 is required"
tools/osxcross-macports:    exit 1
tools/osxcross-macports:  fi
tools/osxcross-macports:  set -e
tools/osxcross-macports:}
tools/osxcross-macports:if [ -z "$MACOSX_DEPLOYMENT_TARGET" ]; then
tools/osxcross-macports:  errorMsg "You must set MACOSX_DEPLOYMENT_TARGET first."
tools/osxcross-macports:  errorMsg "Please see README.MACPORTS."
tools/osxcross-macports:  exit 1
tools/osxcross-macports:fi
tools/osxcross-macports:unsupportedDepTarget()
tools/osxcross-macports:{
tools/osxcross-macports:  errorMsg "unsupported deployment target"
tools/osxcross-macports:  exit 1
tools/osxcross-macports:}
tools/osxcross-macports:require "wget"
tools/osxcross-macports:require "openssl"
tools/osxcross-macports:case $MACOSX_DEPLOYMENT_TARGET in
tools/osxcross-macports:  10.6*  ) OSXVERSION="darwin_10" ;;
tools/osxcross-macports:  10.7*  ) OSXVERSION="darwin_11" ;;
tools/osxcross-macports:  10.8*  ) OSXVERSION="darwin_12" ;;
tools/osxcross-macports:  10.9*  ) OSXVERSION="darwin_13" ;;
tools/osxcross-macports:  10.10* ) OSXVERSION="darwin_14" ;;
tools/osxcross-macports:  # "Downgrade" 10.11 to 10.10 until
tools/osxcross-macports:  # there are packages for 10.11
tools/osxcross-macports:  10.11* ) OSXVERSION="darwin_14" ;;
tools/osxcross-macports:       * ) unsupportedDepTarget ;;
tools/osxcross-macports:esac
tools/osxcross-macports:require "osxcross-conf"
tools/osxcross-macports:eval $(osxcross-conf)
tools/osxcross-macports:if [ -z "$OSXCROSS_TARGET_DIR" ]; then
tools/osxcross-macports:  errorMsg "OSXCROSS_TARGET_DIR should be set"
tools/osxcross-macports:  exit 1
tools/osxcross-macports:fi
tools/osxcross-macports:ROOT="$OSXCROSS_TARGET_DIR/macports"
tools/osxcross-macports:if [ ! -d "$ROOT" ]; then
tools/osxcross-macports:  echo "creating macports directory: $ROOT"
tools/osxcross-macports:  mkdir -p $ROOT
tools/osxcross-macports:fi
tools/osxcross-macports:PUBKEY="$ROOT/mp-pubkey.pem"
tools/osxcross-macports:INSTALLDB="$ROOT/INSTALLED"
tools/osxcross-macports:CACHE="$ROOT/cache"
tools/osxcross-macports:INSTALL="$ROOT/pkgs"
tools/osxcross-macports:TMP="$ROOT/tmp"
tools/osxcross-macports:LASTPKGNAME=""
tools/osxcross-macports:LOCKDIR="/tmp/osxcross-macports-lock"
tools/osxcross-macports:LOCKPID="$LOCKDIR/pid"
tools/osxcross-macports:checkLock()
tools/osxcross-macports:{
tools/osxcross-macports:  if mkdir $LOCKDIR 2>/dev/null; then
tools/osxcross-macports:    echo $BASHPID > $LOCKPID
tools/osxcross-macports:  else
tools/osxcross-macports:    pid=$(cat $LOCKPID 2>/dev/null) || { errorMsg "remove $LOCKDIR"; exit 1; }
tools/osxcross-macports:    if [ $? -eq 0 -a "$(ps -p $pid -o comm=)" == "bash" ]; then
tools/osxcross-macports:      errorMsg "locked by pid $pid"
tools/osxcross-macports:    else
tools/osxcross-macports:      errorMsg "dead lockdir detected! please remove '$LOCKDIR' by hand."
tools/osxcross-macports:    fi
tools/osxcross-macports:    exit 1
tools/osxcross-macports:  fi
tools/osxcross-macports:}
tools/osxcross-macports:createDir()
tools/osxcross-macports:{
tools/osxcross-macports:  if [ ! -d $2 ]; then
tools/osxcross-macports:    echo "creating $1 directory: $2"
tools/osxcross-macports:    mkdir -p $2
tools/osxcross-macports:  fi
tools/osxcross-macports:}
tools/osxcross-macports:checkLock
tools/osxcross-macports:createDir "cache" $CACHE
tools/osxcross-macports:createDir "install" $INSTALL
tools/osxcross-macports:createDir "tmp" $TMP
tools/osxcross-macports:getFileStdout()
tools/osxcross-macports:{
tools/osxcross-macports:  verbosePlaceHolder
tools/osxcross-macports:  local xargs=""
tools/osxcross-macports:  [ -z "$VERBOSE" ] && xargs+="--quiet"
tools/osxcross-macports:  wget $WGETOPTS "$1" -O- $xargs
tools/osxcross-macports:  #verbosePlaceHolder
tools/osxcross-macports:}
tools/osxcross-macports:getFile()
tools/osxcross-macports:{
tools/osxcross-macports:  verbosePlaceHolder
tools/osxcross-macports:  local xargs=""
tools/osxcross-macports:  if [ $# -ge 2 ]; then
tools/osxcross-macports:    xargs+="-O $2 "
tools/osxcross-macports:  else
tools/osxcross-macports:    xargs+="-P $CACHE "
tools/osxcross-macports:  fi
tools/osxcross-macports:  [ -z "$VERBOSE" ] && xargs+="--quiet"
tools/osxcross-macports:  wget $WGETOPTS -c "$1" $xargs
tools/osxcross-macports:  #verbosePlaceHolder
tools/osxcross-macports:}
tools/osxcross-macports:verifyFileIntegrity()
tools/osxcross-macports:{
tools/osxcross-macports:  local file="$1"
tools/osxcross-macports:  if [ ! -e "$PUBKEY" ]; then
tools/osxcross-macports:    echo "getting macports public key ..."
tools/osxcross-macports:    getFile $PUBKEYURL "$PUBKEY"
tools/osxcross-macports:  fi
tools/osxcross-macports:  local rmd160=$(openssl rmd160 "$PUBKEY" | awk '{print $2}')
tools/osxcross-macports:  local sha1=$(openssl sha1 "$PUBKEY" | awk '{print $2}')
tools/osxcross-macports:  if [ "$rmd160" != "$PUBKEYRMD160" -o "$sha1" != "$PUBKEYSHA1" ]; then
tools/osxcross-macports:    errorMsg "invalid macports public key (hash check failed)"
tools/osxcross-macports:    exit 1
tools/osxcross-macports:  fi
tools/osxcross-macports:  echo "verifying file integrity of $file"
tools/osxcross-macports:  set +e
tools/osxcross-macports:  openssl dgst -ripemd160 -verify "$PUBKEY" -signature \
tools/osxcross-macports:    "$CACHE/$file.rmd160" "$CACHE/$file" 1>/dev/null
tools/osxcross-macports:  if [ $? -ne 0 ]; then
tools/osxcross-macports:    errorMsg "file integrity check failed ($CACHE/$file)"
tools/osxcross-macports:    exit 2
tools/osxcross-macports:  fi
tools/osxcross-macports:  set -e
tools/osxcross-macports:}
tools/osxcross-macports:getPkgUrl()
tools/osxcross-macports:{
tools/osxcross-macports:  local pkgname="$1"
tools/osxcross-macports:  local pkgs
tools/osxcross-macports:  local pkg
tools/osxcross-macports:  set +e
tools/osxcross-macports:  pkgs=$(getFileStdout "$MIRROR/$pkgname/?C=M;O=A" | \
tools/osxcross-macports:         grep -o -E 'href="([^"#]+)"' | \
tools/osxcross-macports:         cut -d'"' -f2 | grep '.tbz2$')
tools/osxcross-macports:  local ec=$?
tools/osxcross-macports:  set -e
tools/osxcross-macports:  if [ $ec -ne 0 ]; then
tools/osxcross-macports:    errorMsg "no package found"
tools/osxcross-macports:    return
tools/osxcross-macports:  fi
tools/osxcross-macports:  verboseMsg " candidates for $pkgname:"
tools/osxcross-macports:  for p in $pkgs; do
tools/osxcross-macports:    verboseMsg "  $p"
tools/osxcross-macports:  done
tools/osxcross-macports:  local pkg=$(echo "$pkgs" | grep $OSXVERSION | uniq | tail -n1)
tools/osxcross-macports:  verboseMsg " selected: $pkg"
tools/osxcross-macports:  if [ -z "$pkg" ]; then
tools/osxcross-macports:    verboseMsg -n "  "
tools/osxcross-macports:    errorMsg "no suitable version found for $OSXVERSION"
tools/osxcross-macports:    return
tools/osxcross-macports:  fi
tools/osxcross-macports:  echo "$MIRROR/$pkgname/$pkg"
tools/osxcross-macports:}
tools/osxcross-macports:pkgInstalled()
tools/osxcross-macports:{
tools/osxcross-macports:  local pkgname="$1"
tools/osxcross-macports:  if [ ! -e "$INSTALLDB" ]; then
tools/osxcross-macports:    echo 0
tools/osxcross-macports:    return
tools/osxcross-macports:  fi
tools/osxcross-macports:  set +e
tools/osxcross-macports:  grep -x "$pkgname" "$INSTALLDB" &>/dev/null
tools/osxcross-macports:  local status=$?
tools/osxcross-macports:  set -e
tools/osxcross-macports:  if [ $status -eq 0 ]; then
tools/osxcross-macports:    echo 1
tools/osxcross-macports:  else
tools/osxcross-macports:    echo 0
tools/osxcross-macports:  fi
tools/osxcross-macports:}
tools/osxcross-macports:installPkg()
tools/osxcross-macports:{
tools/osxcross-macports:  local pkgname="$1"
tools/osxcross-macports:  LASTPKGNAME=$pkgname
tools/osxcross-macports:  if [ $(pkgInstalled $pkgname) -eq 1 ]; then
tools/osxcross-macports:    continue
tools/osxcross-macports:  fi
tools/osxcross-macports:  echo "searching package $pkgname ..."
tools/osxcross-macports:  local pkgurl=$(getPkgUrl "$pkgname")
tools/osxcross-macports:  local pkgfile=$(echo "$pkgurl" | awk -F'/' '{print $NF}')
tools/osxcross-macports:  if [ -z "$pkgurl" ]; then
tools/osxcross-macports:    local oldpkgname=$pkgname
tools/osxcross-macports:    local tmp=$(echo "$pkgname" | awk -F'-'  '{print $NF}')
tools/osxcross-macports:    [ -n "$tmp" ] && pkgname=${pkgname/-$tmp/}
tools/osxcross-macports:    if [ "$pkgname" != "$oldpkgname" ]; then
tools/osxcross-macports:      echo "trying $pkgname instead ..."
tools/osxcross-macports:    else
tools/osxcross-macports:      [ -n "$UPGRADE" ] && return
tools/osxcross-macports:      exit 3
tools/osxcross-macports:    fi
tools/osxcross-macports:    installPkg $pkgname
tools/osxcross-macports:    return
tools/osxcross-macports:  fi
tools/osxcross-macports:  echo "getting $pkgfile ..."
tools/osxcross-macports:  getFile "$pkgurl"
tools/osxcross-macports:  verboseMsg "getting $pkgname.rmd160 ..."
tools/osxcross-macports:  getFile "$pkgurl.rmd160"
tools/osxcross-macports:  verifyFileIntegrity "$pkgfile"
tools/osxcross-macports:  pushd $TMP &>/dev/null
tools/osxcross-macports:  echo "installing $pkgname ..."
tools/osxcross-macports:  verboseMsg " extracting $pkgfile ..."
tools/osxcross-macports:  bzip2 -dc "$CACHE/$pkgfile" | tar xf -
tools/osxcross-macports:  if [ -d opt/local ]; then
tools/osxcross-macports:    verboseMsg " fixing permissions ..."
tools/osxcross-macports:    find opt/local -type d -exec chmod 770 {} \;
tools/osxcross-macports:    find opt/local -type f -exec chmod 660 {} \;
tools/osxcross-macports:    if [ -d opt/local/lib ]; then
tools/osxcross-macports:      if [ -n "$STATIC" ]; then
tools/osxcross-macports:        verboseMsg " "
tools/osxcross-macports:        echo "removing dylibs ..."
tools/osxcross-macports:        find opt/local/lib -name "*.dylib" -exec rm {} \;
tools/osxcross-macports:      else
tools/osxcross-macports:        find opt/local/lib -type f -name "*.dylib" -exec chmod +x {} \;
tools/osxcross-macports:      fi
tools/osxcross-macports:    fi
tools/osxcross-macports:    set +e
tools/osxcross-macports:    cp -r opt $INSTALL
tools/osxcross-macports:    local status=$?
tools/osxcross-macports:    set -e
tools/osxcross-macports:    if [ $status -eq 1 ]; then
tools/osxcross-macports:      errorMsg "removing broken symlinks ..."
tools/osxcross-macports:      find -L . -type l -exec rm {} \;
tools/osxcross-macports:      cp -r opt $INSTALL
tools/osxcross-macports:    fi
tools/osxcross-macports:  fi
tools/osxcross-macports:  local pkgdeps=$(grep '@pkgdep' \+CONTENTS | cut -d\  -f2 | \
tools/osxcross-macports:                  rev | cut -f2-100 -d\- | rev)
tools/osxcross-macports:  popd &>/dev/null # TMP
tools/osxcross-macports:  rm -rf $TMP/*
tools/osxcross-macports:  for pkgdep in $pkgdeps; do
tools/osxcross-macports:    installPkg $pkgdep
tools/osxcross-macports:  done
tools/osxcross-macports:  echo "$pkgname" >> "$INSTALLDB"
tools/osxcross-macports:}
tools/osxcross-macports:installPkgs()
tools/osxcross-macports:{
tools/osxcross-macports:  local packages="$1"
tools/osxcross-macports:  for pkgname in $packages; do
tools/osxcross-macports:    if [ $(pkgInstalled $pkgname) == "1" ]; then
tools/osxcross-macports:      errorMsg "$pkgname is already installed"
tools/osxcross-macports:      continue
tools/osxcross-macports:    fi
tools/osxcross-macports:    installPkg $pkgname
tools/osxcross-macports:    echo "installed $pkgname"
tools/osxcross-macports:    rm -f $INSTALL/+*
tools/osxcross-macports:  done
tools/osxcross-macports:}
tools/osxcross-macports:updateSearchCache()
tools/osxcross-macports:{
tools/osxcross-macports:  pushd $CACHE &>/dev/null
tools/osxcross-macports:  echo "generating index cache (this may take several minutes ...)"
tools/osxcross-macports:  getFile $MIRROR $CACHE/packages
tools/osxcross-macports:  cat packages | grep -o -E 'href="([^"#]+)"' | cut -d'"' -f2 | \
tools/osxcross-macports:    sed 's/.\{1\}$//' | uniq | sort > INDEXCACHE
tools/osxcross-macports:  rm -f packages
tools/osxcross-macports:  echo "generated index cache for $(cat INDEXCACHE | wc -l) packages"
tools/osxcross-macports:  popd &>/dev/null
tools/osxcross-macports:}
tools/osxcross-macports:searchPkg()
tools/osxcross-macports:{
tools/osxcross-macports:  local pkg="$1"
tools/osxcross-macports:  pushd $CACHE &>/dev/null
tools/osxcross-macports:  if [ ! -e INDEXCACHE ]; then
tools/osxcross-macports:    updateSearchCache
tools/osxcross-macports:  fi
tools/osxcross-macports:  local packages=$(grep -i "$pkg" INDEXCACHE)
tools/osxcross-macports:  if [ -z "$packages" ]; then
tools/osxcross-macports:    echo "no matching packages found for $1"
tools/osxcross-macports:    return
tools/osxcross-macports:  fi
tools/osxcross-macports:  for pkg in $packages; do
tools/osxcross-macports:    echo $pkg
tools/osxcross-macports:  done
tools/osxcross-macports:  popd &>/dev/null
tools/osxcross-macports:}
tools/osxcross-macports:_exit()
tools/osxcross-macports:{
tools/osxcross-macports:  local ec=$?
tools/osxcross-macports:  if [ $ec -ne 0 ]; then
tools/osxcross-macports:    if [ -n "$LASTPKGNAME" ]; then
tools/osxcross-macports:      errorMsg "failed to install $LASTPKGNAME, try with '-v'"
tools/osxcross-macports:    fi
tools/osxcross-macports:    if [ $ec -eq 3 ]; then
tools/osxcross-macports:      errorMsg -n "use '$(basename $0) fake-install <pkgname>' to "
tools/osxcross-macports:      errorMsg "fake install non-existing packages"
tools/osxcross-macports:    fi
tools/osxcross-macports:  fi
tools/osxcross-macports:  rm -rf $LOCKDIR
tools/osxcross-macports:}
tools/osxcross-macports:showFlags()
tools/osxcross-macports:{
tools/osxcross-macports:  if [ -n "$OSXCROSS_TARGET" ]; then
tools/osxcross-macports:    PKG_CONFIG="x86_64-apple-${OSXCROSS_TARGET}-pkg-config"
tools/osxcross-macports:  else
tools/osxcross-macports:    PKG_CONFIG="pkg-config"
tools/osxcross-macports:  fi
tools/osxcross-macports:  $PKG_CONFIG $1 $2
tools/osxcross-macports:}
tools/osxcross-macports:showCFLAGS()
tools/osxcross-macports:{
tools/osxcross-macports:  showFlags "--cflags" $1
tools/osxcross-macports:}
tools/osxcross-macports:showLDFLAGS()
tools/osxcross-macports:{
tools/osxcross-macports:  showFlags "--libs" $1
tools/osxcross-macports:}
tools/osxcross-macports:upgrade()
tools/osxcross-macports:{
tools/osxcross-macports:  if [ ! -e $INSTALLDB ]; then
tools/osxcross-macports:    if [ -e $INSTALLDB.old ]; then
tools/osxcross-macports:      echo "restoring old installation database"
tools/osxcross-macports:      mv $INSTALLDB.old $INSTALLDB
tools/osxcross-macports:    else
tools/osxcross-macports:      errorMsg "no install database"
tools/osxcross-macports:      exit 1
tools/osxcross-macports:    fi
tools/osxcross-macports:  fi
tools/osxcross-macports:  local PKGS=$(cat $INSTALLDB)
tools/osxcross-macports:  mv $INSTALLDB $INSTALLDB.old
tools/osxcross-macports:  UPGRADE=1
tools/osxcross-macports:  rm -rf $INSTALL
tools/osxcross-macports:  createDir "" $INSTALL 1>/dev/null
tools/osxcross-macports:  for pkg in $PKGS; do
tools/osxcross-macports:    installPkg $pkg
tools/osxcross-macports:  done
tools/osxcross-macports:}
tools/osxcross-macports:clearCache()
tools/osxcross-macports:{
tools/osxcross-macports:  rm -rf $CACHE
tools/osxcross-macports:}
tools/osxcross-macports:removeDylibs()
tools/osxcross-macports:{
tools/osxcross-macports:  find $INSTALL -name "*.dylib" -exec rm {} \;
tools/osxcross-macports:}
tools/osxcross-macports:showHelpText()
tools/osxcross-macports:{
tools/osxcross-macports:  errorMsg "Please see README.MACPORTS"
tools/osxcross-macports:}
tools/osxcross-macports:main()
tools/osxcross-macports:{
tools/osxcross-macports:  local args
tools/osxcross-macports:  local cmd
tools/osxcross-macports:  for opt in $@; do
tools/osxcross-macports:    if [[ $opt == -* ]]; then
tools/osxcross-macports:      if [ $opt == "-v" -o $opt == "--verbose" ]; then
tools/osxcross-macports:        VERBOSE=1
tools/osxcross-macports:      elif [ $opt == "-v=2" -o $opt == "--verbose=2" ]; then
tools/osxcross-macports:        set -x
tools/osxcross-macports:        VERBOSE=1
tools/osxcross-macports:      elif [ $opt == "-s" -o $opt == "--static" ]; then
tools/osxcross-macports:        STATIC=1
tools/osxcross-macports:      elif [ $opt == "-c" -o $opt == "--cflags" ]; then
tools/osxcross-macports:        showCFLAGS $2
tools/osxcross-macports:        exit
tools/osxcross-macports:      elif [ $opt == "-l" -o $opt == "--ldflags" ]; then
tools/osxcross-macports:        showLDFLAGS $2
tools/osxcross-macports:        exit
tools/osxcross-macports:      elif [ $opt == "-h" -o $opt == "--help" ]; then
tools/osxcross-macports:        showHelpText
tools/osxcross-macports:        exit
tools/osxcross-macports:      else
tools/osxcross-macports:        errorMsg "unknown option: $opt"
tools/osxcross-macports:        exit 1
tools/osxcross-macports:      fi
tools/osxcross-macports:    else
tools/osxcross-macports:      if [ -z "$cmd" ]; then
tools/osxcross-macports:        cmd="$opt"
tools/osxcross-macports:      else
tools/osxcross-macports:        args+="$opt "
tools/osxcross-macports:      fi
tools/osxcross-macports:    fi
tools/osxcross-macports:  done
tools/osxcross-macports:  if [ -z "$cmd" ]; then
tools/osxcross-macports:    errorMsg "no command given"
tools/osxcross-macports:    showHelpText
tools/osxcross-macports:    exit 1
tools/osxcross-macports:  fi
tools/osxcross-macports:  case "$cmd" in
tools/osxcross-macports:    update*cache )
tools/osxcross-macports:      updateSearchCache
tools/osxcross-macports:      exit
tools/osxcross-macports:    ;;
tools/osxcross-macports:    upgrade )
tools/osxcross-macports:      upgrade
tools/osxcross-macports:      exit
tools/osxcross-macports:    ;;
tools/osxcross-macports:    clear*cache )
tools/osxcross-macports:      clearCache
tools/osxcross-macports:      echo "done"
tools/osxcross-macports:      exit
tools/osxcross-macports:    ;;
tools/osxcross-macports:    remove*dylibs )
tools/osxcross-macports:      removeDylibs
tools/osxcross-macports:      echo "done"
tools/osxcross-macports:      exit
tools/osxcross-macports:    ;;
tools/osxcross-macports:  esac
tools/osxcross-macports:  local packages="$args"
tools/osxcross-macports:  if [ -z "$packages" ]; then
tools/osxcross-macports:    errorMsg "no package name given"
tools/osxcross-macports:    exit 1
tools/osxcross-macports:  fi
tools/osxcross-macports:  case "$cmd" in
tools/osxcross-macports:    install )
tools/osxcross-macports:      installPkgs "$packages"
tools/osxcross-macports:    ;;
tools/osxcross-macports:    fake*install )
tools/osxcross-macports:      for pkgname in $args; do
tools/osxcross-macports:        if [ $(pkgInstalled $pkgname) -eq 0 ]; then
tools/osxcross-macports:          echo $pkgname >> $INSTALLDB
tools/osxcross-macports:        fi
tools/osxcross-macports:      done
tools/osxcross-macports:      echo "done"
tools/osxcross-macports:    ;;
tools/osxcross-macports:    search )
tools/osxcross-macports:      for pkgname in $args; do
tools/osxcross-macports:        searchPkg $pkgname
tools/osxcross-macports:      done
tools/osxcross-macports:    ;;
tools/osxcross-macports:    * )
tools/osxcross-macports:      showHelpText
tools/osxcross-macports:    ;;
tools/osxcross-macports:  esac
tools/osxcross-macports:}
tools/osxcross-macports:trap '' TERM
tools/osxcross-macports:trap '' INT
tools/osxcross-macports:trap _exit EXIT
tools/osxcross-macports:main "$@"
tools/osxcross_conf.sh:#!/usr/bin/env bash
tools/osxcross_conf.sh:pushd "${0%/*}" &>/dev/null
tools/osxcross_conf.sh:OSXCROSS_CONF="../target/bin/osxcross-conf"
tools/osxcross_conf.sh:[ -f $OSXCROSS_CONF ] || { OSXCROSS_CONF=$(which osxcross-conf 2>/dev/null) || exit 1; }
tools/osxcross_conf.sh:$OSXCROSS_CONF || exit 1
tools/osxcross_conf.sh:$(dirname $OSXCROSS_CONF)/osxcross-env
tools/osxcross_conf.sh:popd &>/dev/null
tools/tools.sh:#!/usr/bin/env bash
tools/tools.sh:export LC_ALL="C"
tools/tools.sh:BASE_DIR=$PWD
tools/tools.sh:TARBALL_DIR=$BASE_DIR/tarballs
tools/tools.sh:BUILD_DIR=$BASE_DIR/build
tools/tools.sh:TARGET_DIR=$BASE_DIR/target
tools/tools.sh:PATCH_DIR=$BASE_DIR/patches
tools/tools.sh:SDK_DIR=$TARGET_DIR/SDK
tools/tools.sh:PLATFORM=$(uname -s)
tools/tools.sh:ARCH=$(uname -m)
tools/tools.sh:SCRIPT=$(basename $0)
tools/tools.sh:if [ -z "$USESYSTEMCOMPILER" ]; then
tools/tools.sh:  # Default to gcc on some OSs rather than clang due to either
tools/tools.sh:  # libstdc++ issues (clang uses an outdated version on those)
tools/tools.sh:  # or some other incompatibilities
tools/tools.sh:  case "$PLATFORM" in
tools/tools.sh:    CYGWIN* | DragonFly )
tools/tools.sh:      cc=gcc
tools/tools.sh:      cxx=g++
tools/tools.sh:    ;;
tools/tools.sh:    OpenBSD )
tools/tools.sh:      cc=egcc
tools/tools.sh:      cxx=eg++
tools/tools.sh:    ;;
tools/tools.sh:    Darwin )
tools/tools.sh:      cc=clang
tools/tools.sh:      cxx=clang++
tools/tools.sh:    ;;
tools/tools.sh:    * )
tools/tools.sh:      case "$ARCH" in
tools/tools.sh:        arm* )
tools/tools.sh:          cc=gcc
tools/tools.sh:          cxx=g++
tools/tools.sh:        ;;
tools/tools.sh:        * )
tools/tools.sh:          cc=clang
tools/tools.sh:          cxx=clang++
tools/tools.sh:        ;;
tools/tools.sh:      esac
tools/tools.sh:    ;;
tools/tools.sh:  esac
tools/tools.sh:  [ -z "$CC" ] && export CC=$cc
tools/tools.sh:  [ -z "$CXX" ] && export CXX=$cxx
tools/tools.sh:elif [ -n "$CC" -o -n "$CXX" ]; then
tools/tools.sh:  echo "CC/CXX should not be set, continuing in 5 seconds..." 1>&2
tools/tools.sh:  sleep 5
tools/tools.sh:fi
tools/tools.sh:# enable debug messages
tools/tools.sh:[ -n "$OCDEBUG" ] && set -x
tools/tools.sh:if [[ $SCRIPT != *wrapper/build.sh ]]; then
tools/tools.sh:  # how many concurrent jobs should be used for compiling?
tools/tools.sh:  if [ -z "$JOBS" ]; then
tools/tools.sh:    JOBS=$(tools/get_cpu_count.sh || echo 1)
tools/tools.sh:  fi
tools/tools.sh:  if [ $SCRIPT != "build.sh" -a $SCRIPT != "build_clang.sh" -a \
tools/tools.sh:       $SCRIPT != "mount_xcode_image.sh" -a \
tools/tools.sh:       $SCRIPT != "gen_sdk_package_darling_dmg.sh" -a \
tools/tools.sh:       $SCRIPT != "gen_sdk_package_p7zip.sh" ]; then
tools/tools.sh:    res=$(tools/osxcross_conf.sh)
tools/tools.sh:    if [ $? -ne 0 ]; then
tools/tools.sh:      echo -n "you need to complete ./build.sh first, before you can start "
tools/tools.sh:      echo "building $DESC"
tools/tools.sh:      exit 1
tools/tools.sh:    fi
tools/tools.sh:    eval "$res"
tools/tools.sh:  fi
tools/tools.sh:fi
tools/tools.sh:function require()
tools/tools.sh:{
tools/tools.sh:  set +e
tools/tools.sh:  which $1 &>/dev/null
tools/tools.sh:  while [ $? -ne 0 ]
tools/tools.sh:  do
tools/tools.sh:    if [ -z "$UNATTENDED" ]; then
tools/tools.sh:      echo ""
tools/tools.sh:      read -p "Please install '$1' then press enter"
tools/tools.sh:    else
tools/tools.sh:      echo "Required dependency '$1' is not installed" 1>&2
tools/tools.sh:      exit 1
tools/tools.sh:    fi
tools/tools.sh:    which $1 &>/dev/null
tools/tools.sh:  done
tools/tools.sh:  set -e
tools/tools.sh:}
tools/tools.sh:if [[ $PLATFORM == *BSD ]] || [ $PLATFORM == "DragonFly" ]; then
tools/tools.sh:  MAKE=gmake
tools/tools.sh:  SED=gsed
tools/tools.sh:else
tools/tools.sh:  MAKE=make
tools/tools.sh:  SED=sed
tools/tools.sh:fi
tools/tools.sh:require $SED
tools/tools.sh:require $MAKE
tools/tools.sh:function extract()
tools/tools.sh:{
tools/tools.sh:  test $# -ge 2 -a $# -lt 4 && test $2 -eq 2 && echo ""
tools/tools.sh:  echo "extracting $(basename $1) ..."
tools/tools.sh:  local tarflags
tools/tools.sh:  tarflags="xf"
tools/tools.sh:  test -n "$OCDEBUG" && tarflags+="v"
tools/tools.sh:  case $1 in
tools/tools.sh:    *.pkg)
tools/tools.sh:      require cpio
tools/tools.sh:      which xar &>/dev/null || exit 1
tools/tools.sh:      xar -xf $1
tools/tools.sh:      cat Payload | gunzip -dc | cpio -i 2>/dev/null && rm Payload
tools/tools.sh:      ;;
tools/tools.sh:    *.tar.xz)
tools/tools.sh:      xz -dc $1 | tar $tarflags -
tools/tools.sh:      ;;
tools/tools.sh:    *.tar.gz)
tools/tools.sh:      gunzip -dc $1 | tar $tarflags -
tools/tools.sh:      ;;
tools/tools.sh:    *.tar.bz2)
tools/tools.sh:      bzip2 -dc $1 | tar $tarflags -
tools/tools.sh:      ;;
tools/tools.sh:    *)
tools/tools.sh:      echo "Unhandled archive type" 2>&1
tools/tools.sh:      exit 1
tools/tools.sh:      ;;
tools/tools.sh:  esac
tools/tools.sh:  if [ $# -eq 2 -o $# -eq 4 ]; then
tools/tools.sh:    echo ""
tools/tools.sh:  fi
tools/tools.sh:}
tools/tools.sh:if [[ $PLATFORM == CYGWIN* ]]; then
tools/tools.sh:# Work around Cygwin brokenness.
tools/tools.sh:function ln()
tools/tools.sh:{
tools/tools.sh:  [[ $1 == -* ]] && rm -f $3
tools/tools.sh:  $(which ln) $@
tools/tools.sh:}
tools/tools.sh:export -f ln
tools/tools.sh:fi
tools/tools.sh:function verbose_cmd()
tools/tools.sh:{
tools/tools.sh:  echo "$@"
tools/tools.sh:  eval "$@"
tools/tools.sh:}
tools/tools.sh:function test_compiler()
tools/tools.sh:{
tools/tools.sh:  echo -ne "testing $1 ... "
tools/tools.sh:  $1 $2 -O2 -Wall -o test
tools/tools.sh:  rm test
tools/tools.sh:  echo "works"
tools/tools.sh:}
tools/tools.sh:function test_compiler_cxx11()
tools/tools.sh:{
tools/tools.sh:  set +e
tools/tools.sh:  echo -ne "testing $1 -stdlib=libc++ -std=c++11 ... "
tools/tools.sh:  $1 $2 -O2 -stdlib=libc++ -std=c++11 -Wall -o test &>/dev/null
tools/tools.sh:  if [ $? -eq 0 ]; then
tools/tools.sh:    rm test
tools/tools.sh:    echo "works"
tools/tools.sh:  else
tools/tools.sh:    echo "failed (ignored)"
tools/tools.sh:  fi
tools/tools.sh:  set -e
tools/tools.sh:}
tools/tools.sh:# exit on error
tools/tools.sh:set -e
tools/trap_exit.sh:#!/usr/bin/env bash
tools/trap_exit.sh:function check_for_bug_1242300()
tools/trap_exit.sh:{
tools/trap_exit.sh:  if [ -e /etc/issue ]; then
tools/trap_exit.sh:    if [ "`grep -i ubuntu.13.10 /etc/issue`" ]; then
tools/trap_exit.sh:      echo "Ubuntu 13.10 detected. if there was a 'configure:' error"
tools/trap_exit.sh:      echo "please see https://bugs.launchpad.net/ubuntu/+source/llvm-defaults/+bug/1242300"
tools/trap_exit.sh:    fi
tools/trap_exit.sh:  fi
tools/trap_exit.sh:}
tools/trap_exit.sh:function _exit()
tools/trap_exit.sh:{
tools/trap_exit.sh:  EC=$?
tools/trap_exit.sh:  if [ $EC -ne 0 ]; then
tools/trap_exit.sh:    test -z "$SCRIPT" && SCRIPT=`basename $0`
tools/trap_exit.sh:    echo ""
tools/trap_exit.sh:    echo "exiting with abnormal exit code ($EC)"
tools/trap_exit.sh:    test -n "$OCDEBUG" || echo "run 'OCDEBUG=1 ./$SCRIPT' to enable debug messages"
tools/trap_exit.sh:    declare -f -F remove_locks &>/dev/null && \
tools/trap_exit.sh:    {
tools/trap_exit.sh:      echo "removing stale locks..."
tools/trap_exit.sh:      remove_locks
tools/trap_exit.sh:    }
tools/trap_exit.sh:    echo "if it is happening the first time, then just re-run the script"
tools/trap_exit.sh:    echo ""
tools/trap_exit.sh:    test $SCRIPT = "build.sh" && check_for_bug_1242300
tools/trap_exit.sh:  fi
tools/trap_exit.sh:}
tools/trap_exit.sh:trap _exit EXIT
wrapper/Makefile:PLATFORM ?= $(shell uname -s)
wrapper/Makefile:OPTIMIZE ?= 2
wrapper/Makefile:LTO ?= 0
wrapper/Makefile:OSXCROSS_VERSION ?= unknown
wrapper/Makefile:OSXCROSS_TARGET ?= darwin12
wrapper/Makefile:OSXCROSS_OSX_VERSION_MIN ?= 10.5
wrapper/Makefile:OSXCROSS_LINKER_VERSION ?= 134.9
wrapper/Makefile:OSXCROSS_LIBLTO_PATH ?=
wrapper/Makefile:OSXCROSS_CXXFLAGS ?= 
wrapper/Makefile:override CXXFLAGS=-std=c++0x -Wall -Wextra -pedantic
wrapper/Makefile:override CXXFLAGS+=-Wno-missing-field-initializers
wrapper/Makefile:override CXXFLAGS+=-I. -O$(OPTIMIZE) -g
wrapper/Makefile:ifeq ($(LTO), 1)
wrapper/Makefile:  override CXXFLAGS+=-flto
wrapper/Makefile:endif
wrapper/Makefile:override CXXFLAGS+=-DOSXCROSS_VERSION="\"$(OSXCROSS_VERSION)\""
wrapper/Makefile:override CXXFLAGS+=-DOSXCROSS_TARGET="\"$(OSXCROSS_TARGET)\""
wrapper/Makefile:override CXXFLAGS+=-DOSXCROSS_OSX_VERSION_MIN="\"$(OSXCROSS_OSX_VERSION_MIN)\""
wrapper/Makefile:override CXXFLAGS+=-DOSXCROSS_LINKER_VERSION="\"$(OSXCROSS_LINKER_VERSION)\""
wrapper/Makefile:override CXXFLAGS+=-DOSXCROSS_LIBLTO_PATH="\"$(OSXCROSS_LIBLTO_PATH)\""
wrapper/Makefile:override CXXFLAGS+=-DOSXCROSS_BUILD_DIR="\"$(OSXCROSS_BUILD_DIR)\""
wrapper/Makefile:override CXXFLAGS+= $(OSXCROSS_CXXFLAGS)
wrapper/Makefile:ifneq (,$(findstring FreeBSD, $(PLATFORM)))
wrapper/Makefile:  override LDFLAGS+=-lutil
wrapper/Makefile:else ifneq (,$(findstring Darwin, $(PLATFORM)))
wrapper/Makefile:  override CXXFLAGS+=-Wno-deprecated
wrapper/Makefile:  override LDFLAGS+=-framework CoreServices -Wno-deprecated
wrapper/Makefile:else ifneq (,$(findstring CYGWIN, $(PLATFORM)))
wrapper/Makefile:  # -std=gnu++0x doesn't work, so work around...
wrapper/Makefile:  override CXXFLAGS+=-U__STRICT_ANSI__
wrapper/Makefile:else
wrapper/Makefile:ifeq (,$(findstring Windows, $(PLATFORM)))
wrapper/Makefile:ifeq (,$(findstring OpenBSD, $(PLATFORM)))
wrapper/Makefile:  override LDFLAGS+=-lrt
wrapper/Makefile:endif
wrapper/Makefile:endif
wrapper/Makefile:endif
wrapper/Makefile:BIN=wrapper
wrapper/Makefile:SRCS= \
wrapper/Makefile: main.cpp \
wrapper/Makefile: tools.cpp \
wrapper/Makefile: target.cpp \
wrapper/Makefile: programs/osxcross-version.cpp \
wrapper/Makefile: programs/osxcross-env.cpp \
wrapper/Makefile: programs/osxcross-conf.cpp \
wrapper/Makefile: programs/osxcross-cmp.cpp \
wrapper/Makefile: programs/osxcross-man.cpp \
wrapper/Makefile: programs/sw_vers.cpp \
wrapper/Makefile: programs/pkg-config.cpp \
wrapper/Makefile: programs/xcrun.cpp \
wrapper/Makefile: programs/dsymutil.cpp
wrapper/Makefile:OBJS=$(subst .cpp,.o,$(SRCS))
wrapper/Makefile:all: wrapper
wrapper/Makefile:wrapper: $(OBJS)
wrapper/Makefile:	$(CXX) $(CXXFLAGS) -o wrapper $(OBJS) $(LDFLAGS)
wrapper/Makefile:.PHONY: clean
wrapper/Makefile:clean:
wrapper/Makefile:	rm -f $(BIN) $(OBJS)
wrapper/Makefile:-include $(SRCS:cpp=d)
wrapper/build.sh:#!/usr/bin/env bash
wrapper/build.sh:pushd "${0%/*}" &>/dev/null
wrapper/build.sh:pushd .. &>/dev/null
wrapper/build.sh:source ./tools/tools.sh
wrapper/build.sh:popd &>/dev/null
wrapper/build.sh:set +e
wrapper/build.sh:if [ -z "$OSXCROSS_VERSION" ]; then
wrapper/build.sh:  eval $(../target/bin/osxcross-conf 2>/dev/null)
wrapper/build.sh:  if [ -n "$OSXCROSS_SDK_VERSION" ] &&
wrapper/build.sh:     [ $(osxcross-cmp $OSXCROSS_SDK_VERSION ">=" 10.8) -eq 1 ]; then
wrapper/build.sh:    X86_64H_SUPPORTED=1
wrapper/build.sh:  fi
wrapper/build.sh:fi
wrapper/build.sh:set -e
wrapper/build.sh:EXESUFFIX=""
wrapper/build.sh:function create_wrapper_link
wrapper/build.sh:{
wrapper/build.sh:  # arg 1:
wrapper/build.sh:  #  program name
wrapper/build.sh:  # arg 2:
wrapper/build.sh:  #  1: create a standalone link and links with the target triple prefix
wrapper/build.sh:  #  2: create links with target triple prefix and shortcut links such
wrapper/build.sh:  #     as o32, o64, ...
wrapper/build.sh:  #
wrapper/build.sh:  # example:
wrapper/build.sh:  #  create_wrapper_link osxcross 1
wrapper/build.sh:  # creates the following symlinks:
wrapper/build.sh:  #  -> osxcross
wrapper/build.sh:  #  -> i386-apple-darwinXX-osxcross
wrapper/build.sh:  #  -> x86_64-apple-darwinXX-osxcross
wrapper/build.sh:  #  -> x86_64h-apple-darwinXX-osxcross
wrapper/build.sh:  if [ $# -ge 2 ] && [ $2 -eq 1 ]; then
wrapper/build.sh:    verbose_cmd ln -sf "${TARGETTRIPLE}-wrapper${EXESUFFIX}" \
wrapper/build.sh:      "${1}${EXESUFFIX}"
wrapper/build.sh:  fi
wrapper/build.sh:  verbose_cmd ln -sf "${TARGETTRIPLE}-wrapper${EXESUFFIX}" \
wrapper/build.sh:    "i386-apple-${OSXCROSS_TARGET}-${1}${EXESUFFIX}"
wrapper/build.sh:  verbose_cmd ln -sf "${TARGETTRIPLE}-wrapper${EXESUFFIX}" \
wrapper/build.sh:    "x86_64-apple-${OSXCROSS_TARGET}-${1}${EXESUFFIX}"
wrapper/build.sh:  if [ -n "$X86_64H_SUPPORTED" ] && [ $X86_64H_SUPPORTED -eq 1 ] &&
wrapper/build.sh:     ([[ $1 != gcc* ]] && [[ $1 != g++* ]] && [[ $1 != *gstdc++ ]]); then
wrapper/build.sh:    verbose_cmd ln -sf "${TARGETTRIPLE}-wrapper${EXESUFFIX}" \
wrapper/build.sh:      "x86_64h-apple-${OSXCROSS_TARGET}-${1}${EXESUFFIX}"
wrapper/build.sh:  fi
wrapper/build.sh:  if [ $# -ge 2 ] && [ $2 -eq 2 ]; then
wrapper/build.sh:    verbose_cmd ln -sf "${TARGETTRIPLE}-wrapper${EXESUFFIX}" \
wrapper/build.sh:      "o32-${1}${EXESUFFIX}"
wrapper/build.sh:    verbose_cmd ln -sf "${TARGETTRIPLE}-wrapper${EXESUFFIX}" \
wrapper/build.sh:      "o64-${1}${EXESUFFIX}"
wrapper/build.sh:    if [ -n "$X86_64H_SUPPORTED" ] && [ $X86_64H_SUPPORTED -eq 1 ] &&
wrapper/build.sh:       ([[ $1 != gcc* ]] && [[ $1 != g++* ]] && [[ $1 != *gstdc++ ]]); then
wrapper/build.sh:      verbose_cmd ln -sf "${TARGETTRIPLE}-wrapper${EXESUFFIX}" \
wrapper/build.sh:        "o64h-${1}${EXESUFFIX}"
wrapper/build.sh:    fi
wrapper/build.sh:  fi
wrapper/build.sh:}
wrapper/build.sh:[ -z "$TARGETCOMPILER" ] && TARGETCOMPILER=clang
wrapper/build.sh:TARGETTRIPLE=x86_64-apple-${OSXCROSS_TARGET}
wrapper/build.sh:FLAGS=""
wrapper/build.sh:if [ -n "$BWPLATFORM" ]; then
wrapper/build.sh:  PLATFORM=$BWPLATFORM
wrapper/build.sh:  if [ $PLATFORM = "Darwin" -a $(uname -s) != "Darwin" ]; then
wrapper/build.sh:    CXX=$(xcrun -f clang++)
wrapper/build.sh:    #CXX=$(xcrun -f g++)
wrapper/build.sh:    FLAGS+="-fvisibility-inlines-hidden "
wrapper/build.sh:  elif [ $PLATFORM = "FreeBSD" -a $(uname -s) != "FreeBSD" ]; then
wrapper/build.sh:    CXX=amd64-pc-freebsd10.1-clang++
wrapper/build.sh:    #CXX=amd64-pc-freebsd10.1-g++
wrapper/build.sh:  elif [ $PLATFORM = "NetBSD" -a $(uname -s) != "NetBSD" ]; then
wrapper/build.sh:    CXX=amd64-pc-netbsd6.1.3-clang++
wrapper/build.sh:    #CXX=amd64-pc-netbsd6.1.3-g++
wrapper/build.sh:  fi
wrapper/build.sh:  [ -z "$BWCOMPILEONLY" ] && BWCOMPILEONLY=1
wrapper/build.sh:else
wrapper/build.sh:  [ -z "$PORTABLE"] && FLAGS="$CXXFLAGS "
wrapper/build.sh:fi
wrapper/build.sh:if [ -n "$BWCXX" ]; then
wrapper/build.sh:  [ "$CXX" != "$BWCXX" ] && echo "using $BWCXX" 1>&2
wrapper/build.sh:  CXX=$BWCXX
wrapper/build.sh:fi
wrapper/build.sh:if [ "$PLATFORM" == "Linux" ]; then
wrapper/build.sh:  FLAGS+="-isystem quirks/include "
wrapper/build.sh:fi
wrapper/build.sh:function compile_wrapper()
wrapper/build.sh:{
wrapper/build.sh:  mkdir -p ../target ../target/bin
wrapper/build.sh:  export PLATFORM
wrapper/build.sh:  export CXX
wrapper/build.sh:  verbose_cmd $MAKE clean
wrapper/build.sh:  OSXCROSS_CXXFLAGS="$FLAGS" \
wrapper/build.sh:    verbose_cmd $MAKE wrapper -j$JOBS
wrapper/build.sh:}
wrapper/build.sh:compile_wrapper
wrapper/build.sh:if [ -n "$BWCOMPILEONLY" ]; then
wrapper/build.sh:  exit 0
wrapper/build.sh:fi
wrapper/build.sh:verbose_cmd mv wrapper "${TARGET_DIR}/bin/${TARGETTRIPLE}-wrapper${EXESUFFIX}"
wrapper/build.sh:pushd "../target/bin" &>/dev/null
wrapper/build.sh:if [ $TARGETCOMPILER = "clang" ]; then
wrapper/build.sh:  create_wrapper_link clang 2
wrapper/build.sh:  create_wrapper_link clang++ 2
wrapper/build.sh:  create_wrapper_link clang++-libc++ 2
wrapper/build.sh:  create_wrapper_link clang++-stdc++ 2
wrapper/build.sh:  create_wrapper_link clang++-gstdc++ 2
wrapper/build.sh:elif [ $TARGETCOMPILER = "gcc" ]; then
wrapper/build.sh:  create_wrapper_link gcc 2
wrapper/build.sh:  create_wrapper_link g++ 2
wrapper/build.sh:  create_wrapper_link g++-libc++ 2
wrapper/build.sh:fi
wrapper/build.sh:create_wrapper_link cc
wrapper/build.sh:create_wrapper_link c++
wrapper/build.sh:create_wrapper_link osxcross 1
wrapper/build.sh:create_wrapper_link osxcross-conf 1
wrapper/build.sh:create_wrapper_link osxcross-env 1
wrapper/build.sh:create_wrapper_link osxcross-cmp 1
wrapper/build.sh:create_wrapper_link osxcross-man 1
wrapper/build.sh:create_wrapper_link pkg-config
wrapper/build.sh:if [ "$PLATFORM" != "Darwin" ]; then
wrapper/build.sh:  create_wrapper_link sw_vers 1
wrapper/build.sh:  create_wrapper_link dsymutil 1
wrapper/build.sh:  create_wrapper_link xcrun 1
wrapper/build.sh:fi
wrapper/build.sh:popd &>/dev/null
wrapper/build.sh:popd &>/dev/null
wrapper/compat.h:#ifdef __clang__
wrapper/compat.h:#if __has_include(<__config>)
wrapper/compat.h:#include <__config>
wrapper/compat.h:#endif
wrapper/compat.h:#ifndef _LIBCPP_CONFIG
wrapper/compat.h:// NetBSD's libstdc++ 4.5.3
wrapper/compat.h:// requires this
wrapper/compat.h:#undef __GXX_EXPERIMENTAL_CXX0X__
wrapper/compat.h:#endif
wrapper/compat.h:#endif
wrapper/compat.h:#ifndef __has_builtin
wrapper/compat.h:#define __has_builtin(x) 0
wrapper/compat.h:#endif
wrapper/main.cpp:/***********************************************************************
wrapper/main.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/main.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/main.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/main.cpp: *                                                                     *
wrapper/main.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/main.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/main.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/main.cpp: *  of the License, or (at your option) any later version.             *
wrapper/main.cpp: *                                                                     *
wrapper/main.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/main.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/main.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/main.cpp: *  GNU General Public License for more details.                       *
wrapper/main.cpp: *                                                                     *
wrapper/main.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/main.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/main.cpp: *  Foundation, Inc.,                                                  *
wrapper/main.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/main.cpp: ***********************************************************************/
wrapper/main.cpp:/*
wrapper/main.cpp: * Debug messages can be enabled by setting 'OCDEBUG' (ENV) to >= 1.
wrapper/main.cpp: */
wrapper/main.cpp:#include "compat.h"
wrapper/main.cpp:#include <vector>
wrapper/main.cpp:#include <string>
wrapper/main.cpp:#include <sstream>
wrapper/main.cpp:#include <iostream>
wrapper/main.cpp:#include <cstring>
wrapper/main.cpp:#include <cstdlib>
wrapper/main.cpp:#include <cstdio>
wrapper/main.cpp:#include <climits>
wrapper/main.cpp:#include <cassert>
wrapper/main.cpp:#include <unistd.h>
wrapper/main.cpp:#include <sys/wait.h>
wrapper/main.cpp:#include "tools.h"
wrapper/main.cpp:#include "target.h"
wrapper/main.cpp:#include "progs.h"
wrapper/main.cpp:using namespace tools;
wrapper/main.cpp:using namespace target;
wrapper/main.cpp:int unittest = 0;
wrapper/main.cpp:int debug = 0;
wrapper/main.cpp:namespace {
wrapper/main.cpp:void warnExtension(const char *extension) {
wrapper/main.cpp:  static bool noextwarnings = !!getenv("OSXCROSS_NO_EXTENSION_WARNINGS");
wrapper/main.cpp:  if (noextwarnings)
wrapper/main.cpp:    return;
wrapper/main.cpp:  warn << extension << " is an osxcross extension" << warn.endl();
wrapper/main.cpp:  warninfo << "you can silence this warning via "
wrapper/main.cpp:           << "'OSXCROSS_NO_EXTENSION_WARNINGS=1' (env)" << warninfo.endl();
wrapper/main.cpp:}
wrapper/main.cpp:__attribute__((unused))
wrapper/main.cpp:void warnDeprecated(const char *flag, const char *replacement = nullptr) {
wrapper/main.cpp:  if (replacement)
wrapper/main.cpp:    warn << flag << " is deprecated; "
wrapper/main.cpp:         << "please use " << replacement << " instead"
wrapper/main.cpp:         << warn.endl();
wrapper/main.cpp:  else
wrapper/main.cpp:    warn << flag << " is deprecated and will be "
wrapper/main.cpp:         << "removed soon" << warn.endl();
wrapper/main.cpp:}
wrapper/main.cpp://
wrapper/main.cpp:// Command Line Options
wrapper/main.cpp://
wrapper/main.cpp:namespace commandopts {
wrapper/main.cpp:typedef bool (*optFun)(Target &target, const char *opt, const char *val,
wrapper/main.cpp:                      char **);
wrapper/main.cpp:bool versionmin(Target &target, const char *, const char *val, char **) {
wrapper/main.cpp:  target.OSNum = parseOSVersion(val);
wrapper/main.cpp:  if (target.OSNum != val)
wrapper/main.cpp:    warn << "'-mmacosx-version-min=' (" << target.OSNum.Str()
wrapper/main.cpp:         << " != " << val << ")" << warn.endl();
wrapper/main.cpp:  return true;
wrapper/main.cpp:}
wrapper/main.cpp:bool arch(Target &target, const char *opt, const char *val, char **) {
wrapper/main.cpp:  Arch arch;
wrapper/main.cpp:  if (!strcmp(opt, "-arch")) {
wrapper/main.cpp:    arch = parseArch(val);
wrapper/main.cpp:    if (arch == Arch::unknown)
wrapper/main.cpp:      warn << "'-arch': unknown architecture '" << val << "'"
wrapper/main.cpp:           << warn.endl();
wrapper/main.cpp:    const char *name = getArchName(arch);
wrapper/main.cpp:    if (strcmp(val, name))
wrapper/main.cpp:      warn << "'-arch': '" << val << "' != '" << name << "'" << warn.endl();
wrapper/main.cpp:  } else {
wrapper/main.cpp:    if (!strcmp(opt, "-m16") || !strcmp(opt, "-mx32")) {
wrapper/main.cpp:      err << "'" << opt << "' is not supported" << err.endl();
wrapper/main.cpp:      return false;
wrapper/main.cpp:    } else if (!strcmp(opt, "-m32")) {
wrapper/main.cpp:      arch = Arch::i386;
wrapper/main.cpp:    } else if (!strcmp(opt, "-m64")) {
wrapper/main.cpp:      arch = Arch::x86_64;
wrapper/main.cpp:    } else {
wrapper/main.cpp:      __builtin_unreachable();
wrapper/main.cpp:    }
wrapper/main.cpp:  }
wrapper/main.cpp:  if (target.isClang())
wrapper/main.cpp:    target.addArch(arch);
wrapper/main.cpp:  else
wrapper/main.cpp:    target.arch = arch;
wrapper/main.cpp:  return true;
wrapper/main.cpp:}
wrapper/main.cpp:bool stdlib(Target &target, const char *, const char *val, char **) {
wrapper/main.cpp:  if (target.isGCC())
wrapper/main.cpp:    warnExtension("'-stdlib='");
wrapper/main.cpp:  size_t i = 0;
wrapper/main.cpp:  for (auto stdlibname : StdLibNames) {
wrapper/main.cpp:    if (!strcmp(val, stdlibname)) {
wrapper/main.cpp:      target.stdlib = static_cast<StdLib>(i);
wrapper/main.cpp:      break;
wrapper/main.cpp:    }
wrapper/main.cpp:    ++i;
wrapper/main.cpp:  }
wrapper/main.cpp:  if (i == (sizeof(StdLibNames) / sizeof(StdLibNames[0]))) {
wrapper/main.cpp:    err << "value of '-stdlib=' must be ";
wrapper/main.cpp:    for (size_t j = 0; j < i; ++j) {
wrapper/main.cpp:      err << "'" << StdLibNames[j] << "'";
wrapper/main.cpp:      if (j == i - 2)
wrapper/main.cpp:        err << " or ";
wrapper/main.cpp:      else if (j < i - 2)
wrapper/main.cpp:        err << ", ";
wrapper/main.cpp:    }
wrapper/main.cpp:    err << err.endl();
wrapper/main.cpp:    return false;
wrapper/main.cpp:  }
wrapper/main.cpp:  return true;
wrapper/main.cpp:}
wrapper/main.cpp:bool language(Target &target, const char *, const char *val, char **) {
wrapper/main.cpp:  target.language = val;
wrapper/main.cpp:  return true;
wrapper/main.cpp:}
wrapper/main.cpp:bool usegcclibstdcxx(Target &target, const char *, const char *, char **) {
wrapper/main.cpp:  target.stdlib = StdLib::libstdcxx;
wrapper/main.cpp:  target.usegcclibs = true;
wrapper/main.cpp:  return true;
wrapper/main.cpp:}
wrapper/main.cpp:bool runprog(Target &target, const char *, const char *progname, char **cargs) {
wrapper/main.cpp:  auto *prog = program::getprog(progname);
wrapper/main.cpp:  if (!prog)
wrapper/main.cpp:    exit(EXIT_FAILURE);
wrapper/main.cpp:  std::vector<char *> args;
wrapper/main.cpp:  args.push_back(const_cast<char *>(progname));
wrapper/main.cpp:  while (*cargs)
wrapper/main.cpp:    args.push_back(*cargs++);
wrapper/main.cpp:  args.push_back(nullptr);
wrapper/main.cpp:  (*prog)(args.size() - 1, args.data(), target);
wrapper/main.cpp:}
wrapper/main.cpp:bool checkincludepath(Target &, const char *opt, const char *path, char **) {
wrapper/main.cpp:#ifndef __APPLE__
wrapper/main.cpp:  constexpr const char *DangerousIncludePaths[] = { "/usr/include",
wrapper/main.cpp:                                                    "/usr/local/include" };
wrapper/main.cpp:  static bool noinccheck = !!getenv("OSXCROSS_NO_INCLUDE_PATH_WARNINGS");
wrapper/main.cpp:  if (noinccheck)
wrapper/main.cpp:    return true;
wrapper/main.cpp:  char buf[PATH_MAX + 1];
wrapper/main.cpp:  const char *rpath = realpath(path, buf);
wrapper/main.cpp:  if (!rpath)
wrapper/main.cpp:    rpath = path;
wrapper/main.cpp:  for (const char *dpath : DangerousIncludePaths) {
wrapper/main.cpp:    if (!strncmp(rpath, dpath, strlen(dpath))) {
wrapper/main.cpp:      warn << "possibly dangerous include path specified: '" << opt << " "
wrapper/main.cpp:           << path << "'";
wrapper/main.cpp:      if (strcmp(path, rpath))
wrapper/main.cpp:        warn << " (" << rpath << ")";
wrapper/main.cpp:      warn << warn.endl();
wrapper/main.cpp:      warninfo << "you can silence this warning via "
wrapper/main.cpp:               << "'OSXCROSS_NO_INCLUDE_PATH_WARNINGS=1' (env)"
wrapper/main.cpp:               << warninfo.endl();
wrapper/main.cpp:    }
wrapper/main.cpp:  }
wrapper/main.cpp:#else
wrapper/main.cpp:  (void)opt;
wrapper/main.cpp:  (void)path;
wrapper/main.cpp:#endif
wrapper/main.cpp:  return true;
wrapper/main.cpp:}
wrapper/main.cpp:constexpr struct Opt {
wrapper/main.cpp:  const char *name;
wrapper/main.cpp:  const size_t namelen;
wrapper/main.cpp:  const optFun fun;
wrapper/main.cpp:  const bool valrequired;
wrapper/main.cpp:  const bool pusharg;
wrapper/main.cpp:  const char *valseparator;
wrapper/main.cpp:  const size_t valseparatorlen;
wrapper/main.cpp:  constexpr Opt(const char *name, optFun fun, const bool valrequired = false,
wrapper/main.cpp:                const bool pusharg = false, const char *valseparator = nullptr)
wrapper/main.cpp:      :  name(name), namelen(constexprStrLen(name)), fun(fun),
wrapper/main.cpp:         valrequired(valrequired), pusharg(pusharg),
wrapper/main.cpp:         valseparator(valseparator),
wrapper/main.cpp:         valseparatorlen(valseparator ? constexprStrLen(valseparator) : 0) {}
wrapper/main.cpp:} opts[] = {
wrapper/main.cpp:  {"-mmacosx-version-min", versionmin, true, false, "="},
wrapper/main.cpp:  {"-stdlib", stdlib, true, false, "="},
wrapper/main.cpp:  {"-arch", arch, true},
wrapper/main.cpp:  {"-m16", arch},
wrapper/main.cpp:  {"-m32", arch},
wrapper/main.cpp:  {"-mx32", arch},
wrapper/main.cpp:  {"-m64", arch},
wrapper/main.cpp:  {"-x", language, true, true},
wrapper/main.cpp:  {"-foc-use-gcc-libstdc++", usegcclibstdcxx},
wrapper/main.cpp:  {"-foc-run-prog", runprog, true, false, "="}, // for internal use only
wrapper/main.cpp:  {"-isystem", checkincludepath, true, true},
wrapper/main.cpp:  {"-icxx-isystem", checkincludepath, true, true},
wrapper/main.cpp:  {"-cxx-isystem", checkincludepath, true, true},
wrapper/main.cpp:  {"-I", checkincludepath, true, true},
wrapper/main.cpp:};
wrapper/main.cpp:bool parse(int argc, char **argv, Target &target) {
wrapper/main.cpp:  target.args.reserve(argc);
wrapper/main.cpp:  if (char *p = getenv("MACOSX_DEPLOYMENT_TARGET")) {
wrapper/main.cpp:    target.OSNum = parseOSVersion(p);
wrapper/main.cpp:    unsetenv("MACOSX_DEPLOYMENT_TARGET");
wrapper/main.cpp:  }
wrapper/main.cpp:  for (int i = 1; i < argc; ++i) {
wrapper/main.cpp:    char *arg = argv[i];
wrapper/main.cpp:    if (*arg != '-') {
wrapper/main.cpp:      target.args.push_back(arg);
wrapper/main.cpp:      continue;
wrapper/main.cpp:    }
wrapper/main.cpp:    bool pusharg = true;
wrapper/main.cpp:    int j = i;
wrapper/main.cpp:    for (const Opt &opt : opts) {
wrapper/main.cpp:      if (strncmp(arg, opt.name, opt.namelen))
wrapper/main.cpp:        continue;
wrapper/main.cpp:      pusharg = opt.pusharg;
wrapper/main.cpp:      const char *val = nullptr;
wrapper/main.cpp:      if (opt.valrequired) {
wrapper/main.cpp:        val = arg + opt.namelen;
wrapper/main.cpp:        if (opt.valseparator &&
wrapper/main.cpp:            strncmp(val, opt.valseparator, opt.valseparatorlen)) {
wrapper/main.cpp:          err << "expected '" << opt.name << opt.valseparator << "<val>' "
wrapper/main.cpp:              << "instead of '" << arg << "'" << err.endl();
wrapper/main.cpp:          return false;
wrapper/main.cpp:        } else {
wrapper/main.cpp:          val += opt.valseparatorlen;
wrapper/main.cpp:        }
wrapper/main.cpp:        if (!opt.valseparator && !*val && i < argc - 1)
wrapper/main.cpp:          val = argv[++i];
wrapper/main.cpp:        if (!*val) {
wrapper/main.cpp:          err << "missing argument for '" << opt.name << "'" << err.endl();
wrapper/main.cpp:          return false;
wrapper/main.cpp:        }
wrapper/main.cpp:      }
wrapper/main.cpp:      if (opt.fun && !opt.fun(target, opt.name, val, &argv[i + 1]))
wrapper/main.cpp:        return false;
wrapper/main.cpp:      break;
wrapper/main.cpp:    }
wrapper/main.cpp:    if (pusharg) {
wrapper/main.cpp:      for (; j <= i; ++j)
wrapper/main.cpp:        target.args.push_back(argv[j]);
wrapper/main.cpp:    }
wrapper/main.cpp:  }
wrapper/main.cpp:  return true;
wrapper/main.cpp:}
wrapper/main.cpp:} // namespace commandopts
wrapper/main.cpp:void detectCXXLib(Target &target) {
wrapper/main.cpp:  if (target.compilername.size() <= 7)
wrapper/main.cpp:    return;
wrapper/main.cpp:  StdLib prevstdlib = target.stdlib;
wrapper/main.cpp:  if (endsWith(target.compilername, "-stdc++")) {
wrapper/main.cpp:    target.stdlib = StdLib::libstdcxx;
wrapper/main.cpp:    target.compilername.resize(target.compilername.size() - 7);
wrapper/main.cpp:  } else if (endsWith(target.compilername, "-gstdc++")) {
wrapper/main.cpp:    target.stdlib = StdLib::libstdcxx;
wrapper/main.cpp:    target.usegcclibs = true;
wrapper/main.cpp:    target.compilername.resize(target.compilername.size() - 8);
wrapper/main.cpp:  } else if (endsWith(target.compilername, "-libc++")) {
wrapper/main.cpp:    target.stdlib = StdLib::libcxx;
wrapper/main.cpp:    target.compilername.resize(target.compilername.size() - 7);
wrapper/main.cpp:  }
wrapper/main.cpp:  if (prevstdlib != StdLib::unset && prevstdlib != target.stdlib)
wrapper/main.cpp:    warn << "ignoring '-stdlib=" << getStdLibString(prevstdlib) << "'"
wrapper/main.cpp:         << warn.endl();
wrapper/main.cpp:}
wrapper/main.cpp://
wrapper/main.cpp:// detectTarget():
wrapper/main.cpp://  detect target and setup invocation command
wrapper/main.cpp://
wrapper/main.cpp:bool detectTarget(int argc, char **argv, Target &target) {
wrapper/main.cpp:  const char *cmd = argv[0];
wrapper/main.cpp:  const char *p = strrchr(cmd, '/');
wrapper/main.cpp:  size_t len;
wrapper/main.cpp:  size_t i = 0;
wrapper/main.cpp:  if (p)
wrapper/main.cpp:    cmd = &p[1];
wrapper/main.cpp:  if (auto *prog = program::getprog(cmd))
wrapper/main.cpp:    (*prog)(argc, argv, target);
wrapper/main.cpp:  // -> x86_64 <- -apple-darwin13
wrapper/main.cpp:  p = strchr(cmd, '-');
wrapper/main.cpp:  len = (p ? p : cmd) - cmd;
wrapper/main.cpp:  for (auto arch : ArchNames) {
wrapper/main.cpp:    ++i;
wrapper/main.cpp:    if (!strncmp(cmd, arch, len)) {
wrapper/main.cpp:      target.arch = static_cast<Arch>(i - 1);
wrapper/main.cpp:      cmd += len;
wrapper/main.cpp:      if (*cmd++ != '-')
wrapper/main.cpp:        return false;
wrapper/main.cpp:      if (strncmp(cmd, "apple-", 6))
wrapper/main.cpp:        return false;
wrapper/main.cpp:      cmd += 6;
wrapper/main.cpp:      if (strncmp(cmd, "darwin", 6))
wrapper/main.cpp:        return false;
wrapper/main.cpp:      if (!(p = strchr(cmd, '-')))
wrapper/main.cpp:        return false;
wrapper/main.cpp:      target.target = std::string(cmd, p - cmd);
wrapper/main.cpp:      target.compiler = getCompilerIdentifier(&p[1]);
wrapper/main.cpp:      target.compilername = &p[1];
wrapper/main.cpp:      if (target.compilername == "cc") {
wrapper/main.cpp:        target.compiler = getDefaultCompilerIdentifier();
wrapper/main.cpp:        target.compilername = getDefaultCompilerName();
wrapper/main.cpp:      } else if (target.compilername == "c++") {
wrapper/main.cpp:        target.compiler = getDefaultCXXCompilerIdentifier();
wrapper/main.cpp:        target.compilername = getDefaultCXXCompilerName();
wrapper/main.cpp:      } else if (auto *prog = program::getprog(target.compilername)) {
wrapper/main.cpp:        (*prog)(argc, argv, target);
wrapper/main.cpp:      }
wrapper/main.cpp:      if (target.target != getDefaultTarget())
wrapper/main.cpp:        warn << "this wrapper was built for target "
wrapper/main.cpp:             << "'" << getDefaultTarget() << "'" << warn.endl();
wrapper/main.cpp:      if (!commandopts::parse(argc, argv, target))
wrapper/main.cpp:        return false;
wrapper/main.cpp:      detectCXXLib(target);
wrapper/main.cpp:      return target.setup();
wrapper/main.cpp:    }
wrapper/main.cpp:  }
wrapper/main.cpp:  if (!strncmp(cmd, "o32", 3))
wrapper/main.cpp:    target.arch = Arch::i386;
wrapper/main.cpp:  else if (!strncmp(cmd, "o64h", 4))
wrapper/main.cpp:    target.arch = Arch::x86_64h;
wrapper/main.cpp:  else if (!strncmp(cmd, "o64", 3))
wrapper/main.cpp:    target.arch = Arch::x86_64;
wrapper/main.cpp:  else
wrapper/main.cpp:    return false;
wrapper/main.cpp:  if (const char *p = strchr(cmd, '-')) {
wrapper/main.cpp:    const char *compilername = &cmd[p - cmd + 1];
wrapper/main.cpp:    target.compiler = getCompilerIdentifier(compilername);
wrapper/main.cpp:    target.compilername = compilername;
wrapper/main.cpp:  }
wrapper/main.cpp:  if (!commandopts::parse(argc, argv, target))
wrapper/main.cpp:    return false;
wrapper/main.cpp:  detectCXXLib(target);
wrapper/main.cpp:  return target.setup();
wrapper/main.cpp:}
wrapper/main.cpp:} // unnamed namespace
wrapper/main.cpp://
wrapper/main.cpp:// Main routine
wrapper/main.cpp://
wrapper/main.cpp:int main(int argc, char **argv) {
wrapper/main.cpp:  char bbuf[sizeof(benchmark)];
wrapper/main.cpp:  auto b = new (bbuf) benchmark;
wrapper/main.cpp:  Target target;
wrapper/main.cpp:  char **cargs = nullptr;
wrapper/main.cpp:  int rc = -1;
wrapper/main.cpp:  if (char *p = getenv("OCDEBUG"))
wrapper/main.cpp:    debug = atoi(p);
wrapper/main.cpp:  if (char *p = getenv("OSXCROSS_UNIT_TEST")) {
wrapper/main.cpp:    unittest = atoi(p);
wrapper/main.cpp:    if ((p = getenv("OSXCROSS_PROG_NAME")))
wrapper/main.cpp:      argv[0] = p;
wrapper/main.cpp:  }
wrapper/main.cpp:  if (!detectTarget(argc, argv, target)) {
wrapper/main.cpp:    err << "while detecting target" << err.endl();
wrapper/main.cpp:    return 1;
wrapper/main.cpp:  }
wrapper/main.cpp:  if (debug) {
wrapper/main.cpp:    b->halt();
wrapper/main.cpp:    if (debug >= 2) {
wrapper/main.cpp:      dbg << "detected target triple: " << target.getTriple() << dbg.endl();
wrapper/main.cpp:      dbg << "detected compiler: " << target.compilername << dbg.endl();
wrapper/main.cpp:      dbg << "detected stdlib: " << getStdLibString(target.stdlib)
wrapper/main.cpp:          << dbg.endl();
wrapper/main.cpp:      b->resume();
wrapper/main.cpp:    }
wrapper/main.cpp:  }
wrapper/main.cpp:#ifdef __DragonFly__
wrapper/main.cpp:  // Escape DragonFlyBSD's weird PFS paths.
wrapper/main.cpp:  std::string escapedexecpath;
wrapper/main.cpp:  escapePath(target.execpath, escapedexecpath);
wrapper/main.cpp:  concatEnvVariable("COMPILER_PATH", escapedexecpath);
wrapper/main.cpp:#else
wrapper/main.cpp:  concatEnvVariable("COMPILER_PATH", target.execpath);
wrapper/main.cpp:#endif
wrapper/main.cpp:  auto printCommand = [&]() {
wrapper/main.cpp:    std::string in;
wrapper/main.cpp:    std::string out;
wrapper/main.cpp:    for (int i = 0; i < argc; ++i) {
wrapper/main.cpp:      in += argv[i];
wrapper/main.cpp:      in += " ";
wrapper/main.cpp:    }
wrapper/main.cpp:    out += target.compilerpath;
wrapper/main.cpp:    if (target.compilerpath != target.fargs[0]) {
wrapper/main.cpp:      out += " (";
wrapper/main.cpp:      out += target.fargs[0];
wrapper/main.cpp:      out += ") ";
wrapper/main.cpp:    } else {
wrapper/main.cpp:      out += " ";
wrapper/main.cpp:    }
wrapper/main.cpp:    for (size_t i = 1; i < target.fargs.size(); ++i) {
wrapper/main.cpp:      out += target.fargs[i];
wrapper/main.cpp:      out += " ";
wrapper/main.cpp:    }
wrapper/main.cpp:    for (auto &arg : target.args) {
wrapper/main.cpp:      out += arg;
wrapper/main.cpp:      out += " ";
wrapper/main.cpp:    }
wrapper/main.cpp:    if (!unittest)
wrapper/main.cpp:      dbg << "--> " << in << dbg.endl();
wrapper/main.cpp:    dbg << "<-- " << out << dbg.endl();
wrapper/main.cpp:  };
wrapper/main.cpp:  if (rc == -1) {
wrapper/main.cpp:    cargs = new char *[target.fargs.size() + target.args.size() + 1];
wrapper/main.cpp:    size_t i = 0;
wrapper/main.cpp:    for (auto &arg : target.fargs)
wrapper/main.cpp:      cargs[i++] = const_cast<char *>(arg.c_str());
wrapper/main.cpp:    for (auto &arg : target.args)
wrapper/main.cpp:      cargs[i++] = const_cast<char *>(arg.c_str());
wrapper/main.cpp:    cargs[i] = nullptr;
wrapper/main.cpp:  }
wrapper/main.cpp:  if (debug) {
wrapper/main.cpp:    time_type diff = b->getDiff();
wrapper/main.cpp:    if (rc == -1)
wrapper/main.cpp:      printCommand();
wrapper/main.cpp:    dbg << "=== time spent in wrapper: " << diff / 1000000.0 << " ms"
wrapper/main.cpp:        << dbg.endl();
wrapper/main.cpp:  }
wrapper/main.cpp:  if (unittest == 2)
wrapper/main.cpp:    return 0;
wrapper/main.cpp:  if (rc == -1 && execvp(target.compilerpath.c_str(), cargs)) {
wrapper/main.cpp:    err << "invoking compiler failed" << err.endl();
wrapper/main.cpp:    if (!debug)
wrapper/main.cpp:      printCommand();
wrapper/main.cpp:    return 1;
wrapper/main.cpp:  }
wrapper/main.cpp:  return rc;
wrapper/main.cpp:}
wrapper/programs/dsymutil.cpp:/***********************************************************************
wrapper/programs/dsymutil.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/programs/dsymutil.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/programs/dsymutil.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/programs/dsymutil.cpp: *                                                                     *
wrapper/programs/dsymutil.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/programs/dsymutil.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/programs/dsymutil.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/programs/dsymutil.cpp: *  of the License, or (at your option) any later version.             *
wrapper/programs/dsymutil.cpp: *                                                                     *
wrapper/programs/dsymutil.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/programs/dsymutil.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/programs/dsymutil.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/programs/dsymutil.cpp: *  GNU General Public License for more details.                       *
wrapper/programs/dsymutil.cpp: *                                                                     *
wrapper/programs/dsymutil.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/programs/dsymutil.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/programs/dsymutil.cpp: *  Foundation, Inc.,                                                  *
wrapper/programs/dsymutil.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/programs/dsymutil.cpp: ***********************************************************************/
wrapper/programs/dsymutil.cpp:#include "proginc.h"
wrapper/programs/dsymutil.cpp:#include <sys/types.h>
wrapper/programs/dsymutil.cpp:#include <sys/wait.h>
wrapper/programs/dsymutil.cpp:#include <signal.h>
wrapper/programs/dsymutil.cpp:using namespace tools;
wrapper/programs/dsymutil.cpp:namespace program {
wrapper/programs/dsymutil.cpp:int dsymutil(int argc, char **argv, Target &target) {
wrapper/programs/dsymutil.cpp:  (void)argc;
wrapper/programs/dsymutil.cpp:  //
wrapper/programs/dsymutil.cpp:  // LLVM 3.6 and LLVM 3.7 come with too early in-development versions of
wrapper/programs/dsymutil.cpp:  // llvm-dsymutil, which we *must* ignore here.
wrapper/programs/dsymutil.cpp:  //
wrapper/programs/dsymutil.cpp:  // 1. Lookup the [osxcross-]llvm-dsymutil binary.
wrapper/programs/dsymutil.cpp:  //    If no binary is found, then silently return 0/EXIT_SUCCESS.
wrapper/programs/dsymutil.cpp:  // 2. Run <llvm-dsymutil -version>.
wrapper/programs/dsymutil.cpp:  // 3. Check whether we are using llvm-dsymutil 3.8 (or later),
wrapper/programs/dsymutil.cpp:  //    otherwise silently return 0/EXIT_SUCCESS.
wrapper/programs/dsymutil.cpp:  // 4. Apply compatibility workarounds.
wrapper/programs/dsymutil.cpp:  // 5. Run [osxcross-]llvm-dsymutil.
wrapper/programs/dsymutil.cpp:  //
wrapper/programs/dsymutil.cpp:  std::string dsymutil;
wrapper/programs/dsymutil.cpp:  char LLVMDsymutilVersionOutput[1024];
wrapper/programs/dsymutil.cpp:  const char *LLVMDsymutilVersionStr;
wrapper/programs/dsymutil.cpp:  LLVMVersion LLVMDsymutilVersion;
wrapper/programs/dsymutil.cpp:  const std::string &ParentProcessName = getParentProcessName();
wrapper/programs/dsymutil.cpp:  if (!debug && ParentProcessName.find("clang") == std::string::npos &&
wrapper/programs/dsymutil.cpp:      ParentProcessName != "collect2" && ParentProcessName != "unknown")
wrapper/programs/dsymutil.cpp:    debug = 1;
wrapper/programs/dsymutil.cpp:  if (char *p = getenv("OSXCROSS_LLVM_DSYMUTIL")) {
wrapper/programs/dsymutil.cpp:    dsymutil = p;
wrapper/programs/dsymutil.cpp:    debug = 1;
wrapper/programs/dsymutil.cpp:  } else {
wrapper/programs/dsymutil.cpp:    if (!realPath("osxcross-llvm-dsymutil", dsymutil) &&
wrapper/programs/dsymutil.cpp:        !realPath("llvm-dsymutil", dsymutil)) {
wrapper/programs/dsymutil.cpp:      if (debug)
wrapper/programs/dsymutil.cpp:        dbg << "dsymutil: cannot find [osxcross-]llvm-dsymutil in PATH"
wrapper/programs/dsymutil.cpp:            << dbg.endl();
wrapper/programs/dsymutil.cpp:      return 0;
wrapper/programs/dsymutil.cpp:    }
wrapper/programs/dsymutil.cpp:  }
wrapper/programs/dsymutil.cpp:  std::string command = dsymutil + " -version";
wrapper/programs/dsymutil.cpp:  if (runcommand(command.c_str(), LLVMDsymutilVersionOutput,
wrapper/programs/dsymutil.cpp:                 sizeof(LLVMDsymutilVersionOutput)) == RUNCOMMAND_ERROR) {
wrapper/programs/dsymutil.cpp:    if (debug)
wrapper/programs/dsymutil.cpp:      dbg << "dsymutil: executing \"" << command << "\" failed"
wrapper/programs/dsymutil.cpp:          << dbg.endl();
wrapper/programs/dsymutil.cpp:    return 0;
wrapper/programs/dsymutil.cpp:  }
wrapper/programs/dsymutil.cpp:  LLVMDsymutilVersionStr = strstr(LLVMDsymutilVersionOutput, "LLVM version ");
wrapper/programs/dsymutil.cpp:  if (!LLVMDsymutilVersionStr) {
wrapper/programs/dsymutil.cpp:    if (debug)
wrapper/programs/dsymutil.cpp:      dbg << "dsymutil: unable to parse llvm-dsymutil version"
wrapper/programs/dsymutil.cpp:          << dbg.endl();
wrapper/programs/dsymutil.cpp:    return 0;
wrapper/programs/dsymutil.cpp:  }
wrapper/programs/dsymutil.cpp:  LLVMDsymutilVersionStr += constexprStrLen("LLVM version ");
wrapper/programs/dsymutil.cpp:  LLVMDsymutilVersion = parseLLVMVersion(LLVMDsymutilVersionStr);
wrapper/programs/dsymutil.cpp:  constexpr LLVMVersion RequiredLLVMDsymutilVersion(3, 8);
wrapper/programs/dsymutil.cpp:  if (LLVMDsymutilVersion < RequiredLLVMDsymutilVersion) {
wrapper/programs/dsymutil.cpp:    if (debug)
wrapper/programs/dsymutil.cpp:      dbg << "ignoring dsymutil invocation: '"
wrapper/programs/dsymutil.cpp:          << dsymutil << "' is too old ("
wrapper/programs/dsymutil.cpp:          << LLVMDsymutilVersion.Str() << " < "
wrapper/programs/dsymutil.cpp:          << RequiredLLVMDsymutilVersion.Str() << ")"
wrapper/programs/dsymutil.cpp:          << dbg.endl();
wrapper/programs/dsymutil.cpp:    return 0;
wrapper/programs/dsymutil.cpp:  }
wrapper/programs/dsymutil.cpp:  std::stringstream lipo;
wrapper/programs/dsymutil.cpp:  std::string triple;
wrapper/programs/dsymutil.cpp:  lipo << target.execpath << PATHDIV
wrapper/programs/dsymutil.cpp:       << target.getDefaultTriple(triple) << "-lipo";
wrapper/programs/dsymutil.cpp:  if (endsWith(dsymutil, "osxcross-llvm-dsymutil")) {
wrapper/programs/dsymutil.cpp:    // This is a patched llvm-dsymutil, just need to set LIPO here.
wrapper/programs/dsymutil.cpp:    setenv("LIPO", lipo.str().c_str(), 1);
wrapper/programs/dsymutil.cpp:  } else {
wrapper/programs/dsymutil.cpp:    // This is an unpatched llvm-dsymutil, need to use stupid workarounds here.
wrapper/programs/dsymutil.cpp:    // There is a bug in the vanilla llvm-dsymutil sources which would cause it
wrapper/programs/dsymutil.cpp:    // to crash when operating on gcc object files.
wrapper/programs/dsymutil.cpp:    // Fix: https://github.com/tpoechtrager/llvm-dsymutil/commit/5e0fea25.patch
wrapper/programs/dsymutil.cpp:    auto fixHint = []() {
wrapper/programs/dsymutil.cpp:      info << "you can build a patched llvm-dsymutil via "
wrapper/programs/dsymutil.cpp:           << "./build_llvm_dsymutil.sh"
wrapper/programs/dsymutil.cpp:           << info.endl();
wrapper/programs/dsymutil.cpp:    };
wrapper/programs/dsymutil.cpp:    if (ParentProcessName == "collect2" &&
wrapper/programs/dsymutil.cpp:        !getenv("OSXCROSS_FORCE_GCC_DSYMUTIL_INVOCATION")) {
wrapper/programs/dsymutil.cpp:      if (!getenv("OSXCROSS_NO_GCC_DSYMUTIL_WARNING")) {
wrapper/programs/dsymutil.cpp:        warn << "dsymutil is a no-op when being invoked via gcc; "
wrapper/programs/dsymutil.cpp:             << "you would get a crash otherwise"
wrapper/programs/dsymutil.cpp:             << warn.endl();
wrapper/programs/dsymutil.cpp:        fixHint();
wrapper/programs/dsymutil.cpp:      }
wrapper/programs/dsymutil.cpp:      return 0;
wrapper/programs/dsymutil.cpp:    }
wrapper/programs/dsymutil.cpp:    //
wrapper/programs/dsymutil.cpp:    // A glorious workaround to make the vanilla llvm-dsymutil find lipo.
wrapper/programs/dsymutil.cpp:    //
wrapper/programs/dsymutil.cpp:    // 1. Create a temporary directory.
wrapper/programs/dsymutil.cpp:    // 2. Store a lipo symlink there.
wrapper/programs/dsymutil.cpp:    // 3. Append <tmpdir> to PATH.
wrapper/programs/dsymutil.cpp:    // 4. Fork the process and wait until the child process exited.
wrapper/programs/dsymutil.cpp:    // 5. Remove the temporary directory and return the llvm-dsymutil
wrapper/programs/dsymutil.cpp:    //    exit code.
wrapper/programs/dsymutil.cpp:    //
wrapper/programs/dsymutil.cpp:    char tmpdir[] = "/tmp/XXXXXX";
wrapper/programs/dsymutil.cpp:    std::string lipolink;
wrapper/programs/dsymutil.cpp:    pid_t pid;
wrapper/programs/dsymutil.cpp:    if (mkdtemp(tmpdir)) {
wrapper/programs/dsymutil.cpp:      lipolink = tmpdir;
wrapper/programs/dsymutil.cpp:      lipolink += "/lipo";
wrapper/programs/dsymutil.cpp:      auto removeTemporaryDirectory = [&]() {
wrapper/programs/dsymutil.cpp:        if ((!lipolink.empty() && unlink(lipolink.c_str())) || rmdir(tmpdir)) {
wrapper/programs/dsymutil.cpp:          warn << "dsymutil: cannot remove temporary directory '"
wrapper/programs/dsymutil.cpp:               << tmpdir << "'" << warn.endl();
wrapper/programs/dsymutil.cpp:        }
wrapper/programs/dsymutil.cpp:      };
wrapper/programs/dsymutil.cpp:      if (!symlink(lipo.str().c_str(), lipolink.c_str())) {
wrapper/programs/dsymutil.cpp:        concatEnvVariable("PATH", tmpdir);
wrapper/programs/dsymutil.cpp:        if ((pid = fork()) == -1) {
wrapper/programs/dsymutil.cpp:          err << "dsymutil: fork() failed" << err.endl();
wrapper/programs/dsymutil.cpp:          removeTemporaryDirectory();
wrapper/programs/dsymutil.cpp:          return 2;
wrapper/programs/dsymutil.cpp:        } else if (pid > 0) {
wrapper/programs/dsymutil.cpp:          int status;
wrapper/programs/dsymutil.cpp:          if (waitpid(pid, &status, 0) == -1) {
wrapper/programs/dsymutil.cpp:            err << "dsymutil: waitpid() failed" << err.endl();
wrapper/programs/dsymutil.cpp:            removeTemporaryDirectory();
wrapper/programs/dsymutil.cpp:            return 2;
wrapper/programs/dsymutil.cpp:          }
wrapper/programs/dsymutil.cpp:          removeTemporaryDirectory();
wrapper/programs/dsymutil.cpp:          if (WIFSIGNALED(status)) {
wrapper/programs/dsymutil.cpp:            int signal = WTERMSIG(status);
wrapper/programs/dsymutil.cpp:            err << "dsymutil: signal: " << strsignal(signal) << err.endl();
wrapper/programs/dsymutil.cpp:            if (signal == SIGSEGV) {
wrapper/programs/dsymutil.cpp:              info << "the vanilla llvm-dsymutil is known to crash "
wrapper/programs/dsymutil.cpp:                   << "when operating on gcc object files" << info.endl();
wrapper/programs/dsymutil.cpp:              fixHint();
wrapper/programs/dsymutil.cpp:            }
wrapper/programs/dsymutil.cpp:            return 2;
wrapper/programs/dsymutil.cpp:          }
wrapper/programs/dsymutil.cpp:          if (WIFEXITED(status))
wrapper/programs/dsymutil.cpp:            return WEXITSTATUS(status);
wrapper/programs/dsymutil.cpp:          abort();
wrapper/programs/dsymutil.cpp:        }
wrapper/programs/dsymutil.cpp:      } else {
wrapper/programs/dsymutil.cpp:        lipolink.clear();
wrapper/programs/dsymutil.cpp:        removeTemporaryDirectory();
wrapper/programs/dsymutil.cpp:      }
wrapper/programs/dsymutil.cpp:    }
wrapper/programs/dsymutil.cpp:  }
wrapper/programs/dsymutil.cpp:  if (execvp(dsymutil.c_str(), argv))
wrapper/programs/dsymutil.cpp:    err << "cannot execute '" << dsymutil << "'" << err.endl();
wrapper/programs/dsymutil.cpp:  return 1;
wrapper/programs/dsymutil.cpp:}
wrapper/programs/dsymutil.cpp:} // namespace program
wrapper/programs/osxcross-cmp.cpp:/***********************************************************************
wrapper/programs/osxcross-cmp.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/programs/osxcross-cmp.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/programs/osxcross-cmp.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/programs/osxcross-cmp.cpp: *                                                                     *
wrapper/programs/osxcross-cmp.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/programs/osxcross-cmp.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/programs/osxcross-cmp.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/programs/osxcross-cmp.cpp: *  of the License, or (at your option) any later version.             *
wrapper/programs/osxcross-cmp.cpp: *                                                                     *
wrapper/programs/osxcross-cmp.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/programs/osxcross-cmp.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/programs/osxcross-cmp.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/programs/osxcross-cmp.cpp: *  GNU General Public License for more details.                       *
wrapper/programs/osxcross-cmp.cpp: *                                                                     *
wrapper/programs/osxcross-cmp.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/programs/osxcross-cmp.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/programs/osxcross-cmp.cpp: *  Foundation, Inc.,                                                  *
wrapper/programs/osxcross-cmp.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/programs/osxcross-cmp.cpp: ***********************************************************************/
wrapper/programs/osxcross-cmp.cpp:#include "proginc.h"
wrapper/programs/osxcross-cmp.cpp:using namespace tools;
wrapper/programs/osxcross-cmp.cpp:namespace program {
wrapper/programs/osxcross-cmp.cpp:namespace osxcross {
wrapper/programs/osxcross-cmp.cpp:int cmp(int argc, char **argv) {
wrapper/programs/osxcross-cmp.cpp:  if (argc < 4)
wrapper/programs/osxcross-cmp.cpp:    return 1;
wrapper/programs/osxcross-cmp.cpp:  OSVersion a = parseOSVersion(argv[1]);
wrapper/programs/osxcross-cmp.cpp:  OSVersion b = parseOSVersion(argv[3]);
wrapper/programs/osxcross-cmp.cpp:  const char *op = argv[2];
wrapper/programs/osxcross-cmp.cpp:  bool res;
wrapper/programs/osxcross-cmp.cpp:  if (!strcmp(op, ">"))
wrapper/programs/osxcross-cmp.cpp:    res = a > b;
wrapper/programs/osxcross-cmp.cpp:  else if (!strcmp(op, "<"))
wrapper/programs/osxcross-cmp.cpp:    res = a < b;
wrapper/programs/osxcross-cmp.cpp:  else if (!strcmp(op, ">="))
wrapper/programs/osxcross-cmp.cpp:    res = a >= b;
wrapper/programs/osxcross-cmp.cpp:  else if (!strcmp(op, "<="))
wrapper/programs/osxcross-cmp.cpp:    res = a <= b;
wrapper/programs/osxcross-cmp.cpp:  else if (!strcmp(op, "=="))
wrapper/programs/osxcross-cmp.cpp:    res = a == b;
wrapper/programs/osxcross-cmp.cpp:  else if (!strcmp(op, "!="))
wrapper/programs/osxcross-cmp.cpp:    res = a != b;
wrapper/programs/osxcross-cmp.cpp:  else
wrapper/programs/osxcross-cmp.cpp:    return 1;
wrapper/programs/osxcross-cmp.cpp:  std::cout << (res ? "1" : "0");
wrapper/programs/osxcross-cmp.cpp:  return 0;
wrapper/programs/osxcross-cmp.cpp:}
wrapper/programs/osxcross-cmp.cpp:} // namespace osxcross
wrapper/programs/osxcross-cmp.cpp:} // namespace program
wrapper/programs/osxcross-conf.cpp:/***********************************************************************
wrapper/programs/osxcross-conf.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/programs/osxcross-conf.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/programs/osxcross-conf.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/programs/osxcross-conf.cpp: *                                                                     *
wrapper/programs/osxcross-conf.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/programs/osxcross-conf.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/programs/osxcross-conf.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/programs/osxcross-conf.cpp: *  of the License, or (at your option) any later version.             *
wrapper/programs/osxcross-conf.cpp: *                                                                     *
wrapper/programs/osxcross-conf.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/programs/osxcross-conf.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/programs/osxcross-conf.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/programs/osxcross-conf.cpp: *  GNU General Public License for more details.                       *
wrapper/programs/osxcross-conf.cpp: *                                                                     *
wrapper/programs/osxcross-conf.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/programs/osxcross-conf.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/programs/osxcross-conf.cpp: *  Foundation, Inc.,                                                  *
wrapper/programs/osxcross-conf.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/programs/osxcross-conf.cpp: ***********************************************************************/
wrapper/programs/osxcross-conf.cpp:#include "proginc.h"
wrapper/programs/osxcross-conf.cpp:using namespace tools;
wrapper/programs/osxcross-conf.cpp:using namespace target;
wrapper/programs/osxcross-conf.cpp:namespace program {
wrapper/programs/osxcross-conf.cpp:namespace osxcross {
wrapper/programs/osxcross-conf.cpp:int conf(Target &target) {
wrapper/programs/osxcross-conf.cpp:  std::string SDKPath;
wrapper/programs/osxcross-conf.cpp:  OSVersion OSXVersionMin = getDefaultMinTarget();
wrapper/programs/osxcross-conf.cpp:  const char *ltopath = getLibLTOPath();
wrapper/programs/osxcross-conf.cpp:  const char *builddir = getBuildDir();
wrapper/programs/osxcross-conf.cpp:  if (!target.getSDKPath(SDKPath))
wrapper/programs/osxcross-conf.cpp:    return 1;
wrapper/programs/osxcross-conf.cpp:  if (!OSXVersionMin.Num())
wrapper/programs/osxcross-conf.cpp:    OSXVersionMin = target.getSDKOSNum();
wrapper/programs/osxcross-conf.cpp:  if (!ltopath)
wrapper/programs/osxcross-conf.cpp:    ltopath = "";
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_VERSION=" << getOSXCrossVersion()
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_OSX_VERSION_MIN=" << OSXVersionMin.shortStr()
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_TARGET=" << getDefaultTarget()
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_SDK_VERSION=" << target.getSDKOSNum().shortStr()
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_SDK=" << SDKPath
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_TARBALL_DIR=" << target.execpath
wrapper/programs/osxcross-conf.cpp:            << "/../../tarballs"
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_PATCH_DIR=" << target.execpath
wrapper/programs/osxcross-conf.cpp:            << "/../../patches"
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_TARGET_DIR=" << target.execpath << "/.."
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_BUILD_DIR=";
wrapper/programs/osxcross-conf.cpp:  if (builddir[0])
wrapper/programs/osxcross-conf.cpp:    std::cout << builddir;
wrapper/programs/osxcross-conf.cpp:  else
wrapper/programs/osxcross-conf.cpp:    std::cout << target.execpath << "/../../build";
wrapper/programs/osxcross-conf.cpp:  std::cout << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_CCTOOLS_PATH=" << target.execpath
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_LIBLTO_PATH=" << ltopath
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  std::cout << "export OSXCROSS_LINKER_VERSION=" << getLinkerVersion()
wrapper/programs/osxcross-conf.cpp:            << std::endl;
wrapper/programs/osxcross-conf.cpp:  return 0;
wrapper/programs/osxcross-conf.cpp:}
wrapper/programs/osxcross-conf.cpp:} // namespace osxcross
wrapper/programs/osxcross-conf.cpp:} // namespace program
wrapper/programs/osxcross-env.cpp:/***********************************************************************
wrapper/programs/osxcross-env.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/programs/osxcross-env.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/programs/osxcross-env.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/programs/osxcross-env.cpp: *                                                                     *
wrapper/programs/osxcross-env.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/programs/osxcross-env.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/programs/osxcross-env.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/programs/osxcross-env.cpp: *  of the License, or (at your option) any later version.             *
wrapper/programs/osxcross-env.cpp: *                                                                     *
wrapper/programs/osxcross-env.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/programs/osxcross-env.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/programs/osxcross-env.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/programs/osxcross-env.cpp: *  GNU General Public License for more details.                       *
wrapper/programs/osxcross-env.cpp: *                                                                     *
wrapper/programs/osxcross-env.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/programs/osxcross-env.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/programs/osxcross-env.cpp: *  Foundation, Inc.,                                                  *
wrapper/programs/osxcross-env.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/programs/osxcross-env.cpp: ***********************************************************************/
wrapper/programs/osxcross-env.cpp:#include "proginc.h"
wrapper/programs/osxcross-env.cpp:#include <map>
wrapper/programs/osxcross-env.cpp:using namespace tools;
wrapper/programs/osxcross-env.cpp:using namespace target;
wrapper/programs/osxcross-env.cpp:namespace program {
wrapper/programs/osxcross-env.cpp:namespace osxcross {
wrapper/programs/osxcross-env.cpp:int env(int argc, char **argv) {
wrapper/programs/osxcross-env.cpp:  char epath[PATH_MAX + 1];
wrapper/programs/osxcross-env.cpp:  char *oldpath = getenv("PATH");
wrapper/programs/osxcross-env.cpp:  assert(oldpath);
wrapper/programs/osxcross-env.cpp:  if (!getExecutablePath(epath, sizeof(epath)))
wrapper/programs/osxcross-env.cpp:    exit(EXIT_FAILURE);
wrapper/programs/osxcross-env.cpp:  if (argc <= 1) {
wrapper/programs/osxcross-env.cpp:    const std::string &pname = getParentProcessName();
wrapper/programs/osxcross-env.cpp:    if (pname == "csh" || pname == "tcsh") {
wrapper/programs/osxcross-env.cpp:      std::cerr << std::endl << "you are invoking this program from a C shell, "
wrapper/programs/osxcross-env.cpp:                << std::endl << "please use " << std::endl << std::endl
wrapper/programs/osxcross-env.cpp:                << "setenv PATH `" << epath << "/osxcross-env -v=PATH`"
wrapper/programs/osxcross-env.cpp:                << std::endl << std::endl << "instead." << std::endl
wrapper/programs/osxcross-env.cpp:                << std::endl;
wrapper/programs/osxcross-env.cpp:    }
wrapper/programs/osxcross-env.cpp:  }
wrapper/programs/osxcross-env.cpp:  std::vector<std::string> path;
wrapper/programs/osxcross-env.cpp:  std::map<std::string, std::string> vars;
wrapper/programs/osxcross-env.cpp:  splitPath(oldpath, path);
wrapper/programs/osxcross-env.cpp:  if (!hasPath(path, epath))
wrapper/programs/osxcross-env.cpp:    path.push_back(epath);
wrapper/programs/osxcross-env.cpp:  vars["PATH"] = joinPath(path);
wrapper/programs/osxcross-env.cpp:  auto printVariable = [&](const std::string & var)->bool {
wrapper/programs/osxcross-env.cpp:    auto it = vars.find(var);
wrapper/programs/osxcross-env.cpp:    if (it == vars.end()) {
wrapper/programs/osxcross-env.cpp:      std::cerr << "unknown variable '" << var << "'" << std::endl;
wrapper/programs/osxcross-env.cpp:      return false;
wrapper/programs/osxcross-env.cpp:    }
wrapper/programs/osxcross-env.cpp:    std::cout << it->second << std::endl;
wrapper/programs/osxcross-env.cpp:    return true;
wrapper/programs/osxcross-env.cpp:  };
wrapper/programs/osxcross-env.cpp:  if (argc <= 1) {
wrapper/programs/osxcross-env.cpp:    std::cout << std::endl;
wrapper/programs/osxcross-env.cpp:    for (auto &v : vars) {
wrapper/programs/osxcross-env.cpp:      std::cout << "export " << v.first << "=";
wrapper/programs/osxcross-env.cpp:      if (!printVariable(v.first))
wrapper/programs/osxcross-env.cpp:        return 1;
wrapper/programs/osxcross-env.cpp:      std::cout << std::endl;
wrapper/programs/osxcross-env.cpp:    }
wrapper/programs/osxcross-env.cpp:  } else {
wrapper/programs/osxcross-env.cpp:    if (strncmp(argv[1], "-v=", 3))
wrapper/programs/osxcross-env.cpp:      return 1;
wrapper/programs/osxcross-env.cpp:    const char *var = argv[1] + 3;
wrapper/programs/osxcross-env.cpp:    return static_cast<int>(printVariable(var));
wrapper/programs/osxcross-env.cpp:  }
wrapper/programs/osxcross-env.cpp:  return 0;
wrapper/programs/osxcross-env.cpp:}
wrapper/programs/osxcross-env.cpp:} // namespace osxcross
wrapper/programs/osxcross-env.cpp:} // namespace program
wrapper/programs/osxcross-man.cpp:/***********************************************************************
wrapper/programs/osxcross-man.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/programs/osxcross-man.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/programs/osxcross-man.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/programs/osxcross-man.cpp: *                                                                     *
wrapper/programs/osxcross-man.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/programs/osxcross-man.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/programs/osxcross-man.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/programs/osxcross-man.cpp: *  of the License, or (at your option) any later version.             *
wrapper/programs/osxcross-man.cpp: *                                                                     *
wrapper/programs/osxcross-man.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/programs/osxcross-man.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/programs/osxcross-man.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/programs/osxcross-man.cpp: *  GNU General Public License for more details.                       *
wrapper/programs/osxcross-man.cpp: *                                                                     *
wrapper/programs/osxcross-man.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/programs/osxcross-man.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/programs/osxcross-man.cpp: *  Foundation, Inc.,                                                  *
wrapper/programs/osxcross-man.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/programs/osxcross-man.cpp: ***********************************************************************/
wrapper/programs/osxcross-man.cpp:#include "proginc.h"
wrapper/programs/osxcross-man.cpp:using namespace tools;
wrapper/programs/osxcross-man.cpp:using namespace target;
wrapper/programs/osxcross-man.cpp:namespace program {
wrapper/programs/osxcross-man.cpp:namespace osxcross {
wrapper/programs/osxcross-man.cpp:int man(int argc, char **argv, Target &target) {
wrapper/programs/osxcross-man.cpp:  std::string SDKPath;
wrapper/programs/osxcross-man.cpp:  if (!target.getSDKPath(SDKPath))
wrapper/programs/osxcross-man.cpp:    return 1;
wrapper/programs/osxcross-man.cpp:  std::vector<std::string> manpaths;
wrapper/programs/osxcross-man.cpp:  manpaths.push_back(SDKPath + "/usr/share/man");
wrapper/programs/osxcross-man.cpp:  manpaths.push_back(std::string(target.execpath) + "/../share/man");
wrapper/programs/osxcross-man.cpp:  unsetenv("MANPATH");
wrapper/programs/osxcross-man.cpp:  for (const std::string &manpath : manpaths)
wrapper/programs/osxcross-man.cpp:    if (dirExists(manpath))
wrapper/programs/osxcross-man.cpp:      concatEnvVariable("MANPATH", manpath);
wrapper/programs/osxcross-man.cpp:  if (!getenv("MANPATH")) {
wrapper/programs/osxcross-man.cpp:    err << "cannot find man pages!" << err.endl();
wrapper/programs/osxcross-man.cpp:    return 1;
wrapper/programs/osxcross-man.cpp:  }
wrapper/programs/osxcross-man.cpp:  std::vector<char *> args;
wrapper/programs/osxcross-man.cpp:  // All the const violation here doesn't matter,
wrapper/programs/osxcross-man.cpp:  // the arguments won't be modified
wrapper/programs/osxcross-man.cpp:  args.push_back(const_cast<char *>("man"));
wrapper/programs/osxcross-man.cpp:  for (int i = 1; i < argc; ++i) {
wrapper/programs/osxcross-man.cpp:    char *arg = argv[i];
wrapper/programs/osxcross-man.cpp:    // Rewrite gcc to <triple>-gcc for compatibility
wrapper/programs/osxcross-man.cpp:    // with other man pages
wrapper/programs/osxcross-man.cpp:    constexpr const char *GCCManPages[] = { "gcc", "g++", "cpp", "gcov" };
wrapper/programs/osxcross-man.cpp:    for (const char *mp : GCCManPages) {
wrapper/programs/osxcross-man.cpp:      if (!strcmp(mp, arg)) {
wrapper/programs/osxcross-man.cpp:        std::string *str = new std::string; // Intentionally "leaked"
wrapper/programs/osxcross-man.cpp:        target.getDefaultTriple(*str);
wrapper/programs/osxcross-man.cpp:        str->append("-");
wrapper/programs/osxcross-man.cpp:        str->append(arg);
wrapper/programs/osxcross-man.cpp:        arg = const_cast<char *>(str->c_str());
wrapper/programs/osxcross-man.cpp:        break;
wrapper/programs/osxcross-man.cpp:      }
wrapper/programs/osxcross-man.cpp:    }
wrapper/programs/osxcross-man.cpp:    args.push_back(arg);
wrapper/programs/osxcross-man.cpp:  }
wrapper/programs/osxcross-man.cpp:  args.push_back(nullptr);
wrapper/programs/osxcross-man.cpp:  execvp(args[0], args.data());
wrapper/programs/osxcross-man.cpp:  err << "cannot execute '" << args[0] << "'" << err.endl();
wrapper/programs/osxcross-man.cpp:  return 1;
wrapper/programs/osxcross-man.cpp:}
wrapper/programs/osxcross-man.cpp:} // namespace osxcross
wrapper/programs/osxcross-man.cpp:} // namespace program
wrapper/programs/osxcross-version.cpp:/***********************************************************************
wrapper/programs/osxcross-version.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/programs/osxcross-version.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/programs/osxcross-version.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/programs/osxcross-version.cpp: *                                                                     *
wrapper/programs/osxcross-version.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/programs/osxcross-version.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/programs/osxcross-version.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/programs/osxcross-version.cpp: *  of the License, or (at your option) any later version.             *
wrapper/programs/osxcross-version.cpp: *                                                                     *
wrapper/programs/osxcross-version.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/programs/osxcross-version.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/programs/osxcross-version.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/programs/osxcross-version.cpp: *  GNU General Public License for more details.                       *
wrapper/programs/osxcross-version.cpp: *                                                                     *
wrapper/programs/osxcross-version.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/programs/osxcross-version.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/programs/osxcross-version.cpp: *  Foundation, Inc.,                                                  *
wrapper/programs/osxcross-version.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/programs/osxcross-version.cpp: ***********************************************************************/
wrapper/programs/osxcross-version.cpp:#include "proginc.h"
wrapper/programs/osxcross-version.cpp:using namespace tools;
wrapper/programs/osxcross-version.cpp:using namespace target;
wrapper/programs/osxcross-version.cpp:namespace program {
wrapper/programs/osxcross-version.cpp:namespace osxcross {
wrapper/programs/osxcross-version.cpp:int version() {
wrapper/programs/osxcross-version.cpp:  std::cout << "version: " << getOSXCrossVersion() << std::endl;
wrapper/programs/osxcross-version.cpp:  return 0;
wrapper/programs/osxcross-version.cpp:}
wrapper/programs/osxcross-version.cpp:} // namespace osxcross
wrapper/programs/osxcross-version.cpp:} // namespace program
wrapper/programs/pkg-config.cpp:/***********************************************************************
wrapper/programs/pkg-config.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/programs/pkg-config.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/programs/pkg-config.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/programs/pkg-config.cpp: *                                                                     *
wrapper/programs/pkg-config.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/programs/pkg-config.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/programs/pkg-config.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/programs/pkg-config.cpp: *  of the License, or (at your option) any later version.             *
wrapper/programs/pkg-config.cpp: *                                                                     *
wrapper/programs/pkg-config.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/programs/pkg-config.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/programs/pkg-config.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/programs/pkg-config.cpp: *  GNU General Public License for more details.                       *
wrapper/programs/pkg-config.cpp: *                                                                     *
wrapper/programs/pkg-config.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/programs/pkg-config.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/programs/pkg-config.cpp: *  Foundation, Inc.,                                                  *
wrapper/programs/pkg-config.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/programs/pkg-config.cpp: ***********************************************************************/
wrapper/programs/pkg-config.cpp:#include "proginc.h"
wrapper/programs/pkg-config.cpp:extern char **environ;
wrapper/programs/pkg-config.cpp:using namespace tools;
wrapper/programs/pkg-config.cpp:namespace program {
wrapper/programs/pkg-config.cpp:namespace osxcross {
wrapper/programs/pkg-config.cpp:struct envvar {
wrapper/programs/pkg-config.cpp:  std::string name;
wrapper/programs/pkg-config.cpp:  std::string value;
wrapper/programs/pkg-config.cpp:  envvar() {}
wrapper/programs/pkg-config.cpp:  envvar(std::string name, std::string value) : name(name), value(value) {}
wrapper/programs/pkg-config.cpp:};
wrapper/programs/pkg-config.cpp:static envvar &var(const char *p, envvar &evar, const bool skipval = false) {
wrapper/programs/pkg-config.cpp:  const char *value = strchr(p, '=') + 1; // find value offset
wrapper/programs/pkg-config.cpp:  evar.name.assign(p, value - p - 1);
wrapper/programs/pkg-config.cpp:  if (!skipval)
wrapper/programs/pkg-config.cpp:    evar.value = value;
wrapper/programs/pkg-config.cpp:  return evar;
wrapper/programs/pkg-config.cpp:}
wrapper/programs/pkg-config.cpp:int pkg_config(int argc, char **argv, Target &target) {
wrapper/programs/pkg-config.cpp:  (void)argc;
wrapper/programs/pkg-config.cpp:  std::vector<envvar> envvars;
wrapper/programs/pkg-config.cpp:  std::vector<envvar> unset;
wrapper/programs/pkg-config.cpp:  envvar evar;
wrapper/programs/pkg-config.cpp:  if (!getenv("OSXCROSS_PKG_CONFIG_NO_MP_INC")) {
wrapper/programs/pkg-config.cpp:    std::string MacPortsSysRoot;
wrapper/programs/pkg-config.cpp:    if (target.getMacPortsSysRootDir(MacPortsSysRoot)) {
wrapper/programs/pkg-config.cpp:      concatEnvVariable("OSXCROSS_PKG_CONFIG_SYSROOT_DIR", MacPortsSysRoot);
wrapper/programs/pkg-config.cpp:      std::string MacPortsPkgConfigPath;
wrapper/programs/pkg-config.cpp:      if (target.getMacPortsPkgConfigDir(MacPortsPkgConfigPath))
wrapper/programs/pkg-config.cpp:        concatEnvVariable("OSXCROSS_PKG_CONFIG_PATH", MacPortsPkgConfigPath);
wrapper/programs/pkg-config.cpp:    }
wrapper/programs/pkg-config.cpp:  } else {
wrapper/programs/pkg-config.cpp:    unsetenv("OSXCROSS_PKG_CONFIG_NO_MP_INC");
wrapper/programs/pkg-config.cpp:  }
wrapper/programs/pkg-config.cpp:  // Map OSXCROSS_PKG_* to PKG_*.
wrapper/programs/pkg-config.cpp:  for (char **env = environ; *env; ++env) {
wrapper/programs/pkg-config.cpp:    char *p = *env;
wrapper/programs/pkg-config.cpp:    if (!strncmp(p, "OSXCROSS_PKG_CONFIG", 19)) {
wrapper/programs/pkg-config.cpp:      p += 9; // skip OSXCROSS_
wrapper/programs/pkg-config.cpp:      envvars.push_back(var(p, evar));
wrapper/programs/pkg-config.cpp:    } else if (!strncmp(p, "PKG_CONFIG", 10)) {
wrapper/programs/pkg-config.cpp:      // Unset native pkg-config vars.
wrapper/programs/pkg-config.cpp:      unset.push_back(var(p, evar, true));
wrapper/programs/pkg-config.cpp:    }
wrapper/programs/pkg-config.cpp:  }
wrapper/programs/pkg-config.cpp:  if (!envvars.empty()) {
wrapper/programs/pkg-config.cpp:    for (const envvar &evar : unset)
wrapper/programs/pkg-config.cpp:      unsetenv(evar.name.c_str());
wrapper/programs/pkg-config.cpp:    for (const envvar &evar : envvars)
wrapper/programs/pkg-config.cpp:      setenv(evar.name.c_str(), evar.value.c_str(), 1);
wrapper/programs/pkg-config.cpp:    // Prevent pkg-config from looking for *.pc files
wrapper/programs/pkg-config.cpp:    // in pre-defined search paths, such as /usr.
wrapper/programs/pkg-config.cpp:    if (!getenv("PKG_CONFIG_LIBDIR"))
wrapper/programs/pkg-config.cpp:      setenv("PKG_CONFIG_LIBDIR", "", 1);
wrapper/programs/pkg-config.cpp:    if (execvp("pkg-config", argv))
wrapper/programs/pkg-config.cpp:      err << "cannot find or execute pkg-config" << err.endl();
wrapper/programs/pkg-config.cpp:  }
wrapper/programs/pkg-config.cpp:  return 1;
wrapper/programs/pkg-config.cpp:}
wrapper/programs/pkg-config.cpp:} // namespace osxcross
wrapper/programs/pkg-config.cpp:} // namespace program
wrapper/programs/proginc.h:#include "compat.h"
wrapper/programs/proginc.h:#include <vector>
wrapper/programs/proginc.h:#include <iostream>
wrapper/programs/proginc.h:#include <sstream>
wrapper/programs/proginc.h:#include <cstdlib>
wrapper/programs/proginc.h:#include <cstring>
wrapper/programs/proginc.h:#include <climits>
wrapper/programs/proginc.h:#include <cassert>
wrapper/programs/proginc.h:#include <unistd.h>
wrapper/programs/proginc.h:#include "tools.h"
wrapper/programs/proginc.h:#include "target.h"
wrapper/programs/proginc.h:#include "progs.h"
wrapper/programs/proginc.h:extern int debug;
wrapper/programs/proginc.h:extern int unittest;
wrapper/programs/sw_vers.cpp:/***********************************************************************
wrapper/programs/sw_vers.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/programs/sw_vers.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/programs/sw_vers.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/programs/sw_vers.cpp: *                                                                     *
wrapper/programs/sw_vers.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/programs/sw_vers.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/programs/sw_vers.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/programs/sw_vers.cpp: *  of the License, or (at your option) any later version.             *
wrapper/programs/sw_vers.cpp: *                                                                     *
wrapper/programs/sw_vers.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/programs/sw_vers.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/programs/sw_vers.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/programs/sw_vers.cpp: *  GNU General Public License for more details.                       *
wrapper/programs/sw_vers.cpp: *                                                                     *
wrapper/programs/sw_vers.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/programs/sw_vers.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/programs/sw_vers.cpp: *  Foundation, Inc.,                                                  *
wrapper/programs/sw_vers.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/programs/sw_vers.cpp: ***********************************************************************/
wrapper/programs/sw_vers.cpp:#include "proginc.h"
wrapper/programs/sw_vers.cpp:using namespace tools;
wrapper/programs/sw_vers.cpp:using namespace target;
wrapper/programs/sw_vers.cpp:namespace program {
wrapper/programs/sw_vers.cpp:int sw_vers(int argc, char **argv, Target &target) {
wrapper/programs/sw_vers.cpp:  auto genFakeBuildVer = [](std::string & build)->std::string & {
wrapper/programs/sw_vers.cpp:    std::stringstream tmp;
wrapper/programs/sw_vers.cpp:#if __has_builtin(__builtin_readcyclecounter)
wrapper/programs/sw_vers.cpp:    srand(static_cast<unsigned int>(__builtin_readcyclecounter()));
wrapper/programs/sw_vers.cpp:#else
wrapper/programs/sw_vers.cpp:    srand(static_cast<unsigned int>(getNanoSeconds()));
wrapper/programs/sw_vers.cpp:#endif
wrapper/programs/sw_vers.cpp:    for (int i = 0; i < 5; ++i)
wrapper/programs/sw_vers.cpp:      tmp << std::hex << (rand() % 16 + 1);
wrapper/programs/sw_vers.cpp:    build = tmp.str();
wrapper/programs/sw_vers.cpp:    build.resize(5);
wrapper/programs/sw_vers.cpp:    return build;
wrapper/programs/sw_vers.cpp:  };
wrapper/programs/sw_vers.cpp:  auto getProductVer = [&]()->OSVersion {
wrapper/programs/sw_vers.cpp:    char *p = getenv("OSXCROSS_SW_VERS_OSX_VERSION");
wrapper/programs/sw_vers.cpp:    OSVersion OSNum;
wrapper/programs/sw_vers.cpp:    if (!p)
wrapper/programs/sw_vers.cpp:      p = getenv("MACOSX_DEPLOYMENT_TARGET");
wrapper/programs/sw_vers.cpp:    if (p)
wrapper/programs/sw_vers.cpp:      OSNum = parseOSVersion(p);
wrapper/programs/sw_vers.cpp:    else
wrapper/programs/sw_vers.cpp:      OSNum = getDefaultMinTarget();
wrapper/programs/sw_vers.cpp:    if (!OSNum.Num())
wrapper/programs/sw_vers.cpp:      OSNum = target.getSDKOSNum();
wrapper/programs/sw_vers.cpp:    return OSNum;
wrapper/programs/sw_vers.cpp:  };
wrapper/programs/sw_vers.cpp:  if (argc == 2) {
wrapper/programs/sw_vers.cpp:    std::stringstream str;
wrapper/programs/sw_vers.cpp:    if (!strcmp(argv[1], "-productName")) {
wrapper/programs/sw_vers.cpp:      str << "Mac OS X";
wrapper/programs/sw_vers.cpp:    } else if (!strcmp(argv[1], "-productVersion")) {
wrapper/programs/sw_vers.cpp:      str << getProductVer().shortStr();
wrapper/programs/sw_vers.cpp:    } else if (!strcmp(argv[1], "-buildVersion")) {
wrapper/programs/sw_vers.cpp:      std::string build;
wrapper/programs/sw_vers.cpp:      str << genFakeBuildVer(build);
wrapper/programs/sw_vers.cpp:    } else {
wrapper/programs/sw_vers.cpp:      return 1;
wrapper/programs/sw_vers.cpp:    }
wrapper/programs/sw_vers.cpp:    std::cout << str.str() << std::endl;
wrapper/programs/sw_vers.cpp:  } else if (argc == 1) {
wrapper/programs/sw_vers.cpp:    std::string build;
wrapper/programs/sw_vers.cpp:    std::cout << "ProductName:    Mac OS X" << std::endl;
wrapper/programs/sw_vers.cpp:    std::cout << "ProductVersion: " << getProductVer().shortStr() << std::endl;
wrapper/programs/sw_vers.cpp:    std::cout << "BuildVersion:   " << genFakeBuildVer(build) << std::endl;
wrapper/programs/sw_vers.cpp:  }
wrapper/programs/sw_vers.cpp:  return 0;
wrapper/programs/sw_vers.cpp:}
wrapper/programs/sw_vers.cpp:} // namespace program
wrapper/programs/xcrun.cpp:/***********************************************************************
wrapper/programs/xcrun.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/programs/xcrun.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/programs/xcrun.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/programs/xcrun.cpp: *                                                                     *
wrapper/programs/xcrun.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/programs/xcrun.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/programs/xcrun.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/programs/xcrun.cpp: *  of the License, or (at your option) any later version.             *
wrapper/programs/xcrun.cpp: *                                                                     *
wrapper/programs/xcrun.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/programs/xcrun.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/programs/xcrun.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/programs/xcrun.cpp: *  GNU General Public License for more details.                       *
wrapper/programs/xcrun.cpp: *                                                                     *
wrapper/programs/xcrun.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/programs/xcrun.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/programs/xcrun.cpp: *  Foundation, Inc.,                                                  *
wrapper/programs/xcrun.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/programs/xcrun.cpp: ***********************************************************************/
wrapper/programs/xcrun.cpp:#include "proginc.h"
wrapper/programs/xcrun.cpp:using namespace tools;
wrapper/programs/xcrun.cpp:using namespace target;
wrapper/programs/xcrun.cpp:namespace program {
wrapper/programs/xcrun.cpp:namespace {
wrapper/programs/xcrun.cpp:bool showCommand = false;
wrapper/programs/xcrun.cpp:bool isXcodeTool(const char *tool) {
wrapper/programs/xcrun.cpp:  constexpr const char *XcodeTools[] = {
wrapper/programs/xcrun.cpp:    "ar", "as", "c89", "c99", "c11", "c++", "cc", "checksyms", "clang",
wrapper/programs/xcrun.cpp:    "dsymutil", "codesign_allocate", "dyldinfo", "gcc", "g++", "gcov",
wrapper/programs/xcrun.cpp:    "gprof", "indr", "install_name_tool", "ld", "libtool", "lipo",
wrapper/programs/xcrun.cpp:    "machocheck", "nm", "nmedit", "ObjectDump", "objdump", "otool",
wrapper/programs/xcrun.cpp:    "pagestuff", "pkg-config", "ranlib", "redo_prebinding",
wrapper/programs/xcrun.cpp:    "seg_addr_table", "seg_hack", "size", "strings", "strip", "sw_vers",
wrapper/programs/xcrun.cpp:    "unwinddump", "xcodebuild", "xcrun", "bitcode_strip"
wrapper/programs/xcrun.cpp:  };
wrapper/programs/xcrun.cpp:  for (const char *xctool : XcodeTools)
wrapper/programs/xcrun.cpp:    if (!strncmp(tool, xctool, strlen(xctool)))
wrapper/programs/xcrun.cpp:      return true;
wrapper/programs/xcrun.cpp:  return false;
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:bool getToolPath(Target &target, std::string &toolpath, const char *tool) {
wrapper/programs/xcrun.cpp:  const char *filename = getFileName(tool);
wrapper/programs/xcrun.cpp:  bool isxcodetool = isXcodeTool(filename);
wrapper/programs/xcrun.cpp:  toolpath.clear();
wrapper/programs/xcrun.cpp:  if (tool[0] == PATHDIV) {
wrapper/programs/xcrun.cpp:    if (isxcodetool)
wrapper/programs/xcrun.cpp:      tool = filename; // map /usr/bin/clang (etc.) to <triple>-clang
wrapper/programs/xcrun.cpp:    else
wrapper/programs/xcrun.cpp:      toolpath = tool;
wrapper/programs/xcrun.cpp:  }
wrapper/programs/xcrun.cpp:  if (toolpath.empty()) {
wrapper/programs/xcrun.cpp:    toolpath = target.execpath;
wrapper/programs/xcrun.cpp:    toolpath += PATHDIV;
wrapper/programs/xcrun.cpp:    toolpath += getArchName(target.arch);
wrapper/programs/xcrun.cpp:    toolpath += "-";
wrapper/programs/xcrun.cpp:    toolpath += getDefaultVendor();
wrapper/programs/xcrun.cpp:    toolpath += "-";
wrapper/programs/xcrun.cpp:    toolpath += getDefaultTarget();
wrapper/programs/xcrun.cpp:    toolpath += "-";
wrapper/programs/xcrun.cpp:    toolpath += tool;
wrapper/programs/xcrun.cpp:  }
wrapper/programs/xcrun.cpp:  if (!fileExists(toolpath.c_str())) {
wrapper/programs/xcrun.cpp:    // Fall back to system executables so 'xcrun git status' etc. works.
wrapper/programs/xcrun.cpp:    if (!isxcodetool && realPath(tool, toolpath))
wrapper/programs/xcrun.cpp:      return true;
wrapper/programs/xcrun.cpp:    err << "xcrun: cannot find '" << tool << "' executable" << err.endl();
wrapper/programs/xcrun.cpp:    return false;
wrapper/programs/xcrun.cpp:  }
wrapper/programs/xcrun.cpp:  return true;
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:int help(Target&, char**) {
wrapper/programs/xcrun.cpp:  std::cerr << "https://developer.apple.com/library/mac/documentation/Darwin/"
wrapper/programs/xcrun.cpp:               "Reference/ManPages/man1/xcrun.1.html" << std::endl;
wrapper/programs/xcrun.cpp:  return 0;
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:int version(Target&, char**) {
wrapper/programs/xcrun.cpp:  std::cout << "xcrun version: 0." << std::endl;
wrapper/programs/xcrun.cpp:  return 0;
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:int sdk(Target&, char **argv) {
wrapper/programs/xcrun.cpp:  const char *SDK = argv[0];
wrapper/programs/xcrun.cpp:  if (!strcmp(SDK, "macosx") || !strcmp(SDK, "macosx.internal"))
wrapper/programs/xcrun.cpp:    return 0;
wrapper/programs/xcrun.cpp:  // Ignore '/'.
wrapper/programs/xcrun.cpp:  if (SDK[0] == PATHDIV && !SDK[1])
wrapper/programs/xcrun.cpp:    return 0;
wrapper/programs/xcrun.cpp:  std::string SDKPath = SDK;
wrapper/programs/xcrun.cpp:  while (SDKPath.size() && SDKPath[SDKPath.size() - 1] == PATHDIV)
wrapper/programs/xcrun.cpp:    SDKPath.erase(SDKPath.size() - 1, 1);
wrapper/programs/xcrun.cpp:  const char *SDKName = getFileName(SDKPath);
wrapper/programs/xcrun.cpp:  if (!strncasecmp(SDKName, "MacOSX", 6)) {
wrapper/programs/xcrun.cpp:    if (!dirExists(SDK)) {
wrapper/programs/xcrun.cpp:      err << "xcrun: '-sdk': directory '" << SDK << "' does not exist"
wrapper/programs/xcrun.cpp:          << err.endl();
wrapper/programs/xcrun.cpp:      return 1;
wrapper/programs/xcrun.cpp:    }
wrapper/programs/xcrun.cpp:    setenv("OSXCROSS_SDKROOT", SDK, 1);
wrapper/programs/xcrun.cpp:    return 0;
wrapper/programs/xcrun.cpp:  }
wrapper/programs/xcrun.cpp:  // Ignore empty argument.
wrapper/programs/xcrun.cpp:  if (SDK[0]) {
wrapper/programs/xcrun.cpp:    err << "xcrun: '-sdk': expected Mac OS X SDK" << err.endl();
wrapper/programs/xcrun.cpp:    return 1;
wrapper/programs/xcrun.cpp:  }
wrapper/programs/xcrun.cpp:  return 0;
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:int log(Target&, char**) {
wrapper/programs/xcrun.cpp:  showCommand = true;
wrapper/programs/xcrun.cpp:  return 0;
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:int find(Target &target, char **argv) {
wrapper/programs/xcrun.cpp:  if (argv[1])
wrapper/programs/xcrun.cpp:    return 1;
wrapper/programs/xcrun.cpp:  std::string toolpath;
wrapper/programs/xcrun.cpp:  if (!getToolPath(target, toolpath, argv[0]))
wrapper/programs/xcrun.cpp:    return 1;
wrapper/programs/xcrun.cpp:  std::cout << toolpath << std::endl;
wrapper/programs/xcrun.cpp:  return 0;
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:int run(Target &target, char **argv) {
wrapper/programs/xcrun.cpp:  std::string toolpath;
wrapper/programs/xcrun.cpp:  std::string command;
wrapper/programs/xcrun.cpp:  if (!getToolPath(target, toolpath, argv[0]))
wrapper/programs/xcrun.cpp:    exit(1);
wrapper/programs/xcrun.cpp:  std::vector<char *> args;
wrapper/programs/xcrun.cpp:  args.push_back(const_cast<char *>(toolpath.c_str()));
wrapper/programs/xcrun.cpp:  for (char **arg = &argv[1]; *arg; ++arg)
wrapper/programs/xcrun.cpp:    args.push_back(*arg);
wrapper/programs/xcrun.cpp:  args.push_back(nullptr);
wrapper/programs/xcrun.cpp:  if (showCommand) {
wrapper/programs/xcrun.cpp:    for (size_t i = 0; i < args.size() - 1; ++i) {
wrapper/programs/xcrun.cpp:      std::cout << args[i];
wrapper/programs/xcrun.cpp:      if (i != args.size() - 2)
wrapper/programs/xcrun.cpp:        std::cout << " ";
wrapper/programs/xcrun.cpp:    }
wrapper/programs/xcrun.cpp:    std::cout << std::endl;
wrapper/programs/xcrun.cpp:  }
wrapper/programs/xcrun.cpp:  execvp(args[0], args.data());
wrapper/programs/xcrun.cpp:  err << "xcrun: cannot execute '" << args[0] << "'" << err.endl();
wrapper/programs/xcrun.cpp:  exit(1);
wrapper/programs/xcrun.cpp:  // Silence -Wreturn-type warnings in case exit() is not marked as
wrapper/programs/xcrun.cpp:  // "no-return" for whatever reason.
wrapper/programs/xcrun.cpp:  __builtin_unreachable();
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:int showSDKPath(Target &target, char**) {
wrapper/programs/xcrun.cpp:  std::string SDKPath;
wrapper/programs/xcrun.cpp:  if (!target.getSDKPath(SDKPath))
wrapper/programs/xcrun.cpp:    return 1;
wrapper/programs/xcrun.cpp:  std::cout << SDKPath << std::endl;
wrapper/programs/xcrun.cpp:  return 0;
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:int showSDKVersion(Target &target, char**) {
wrapper/programs/xcrun.cpp:  std::cout << target.getSDKOSNum().shortStr() << std::endl;
wrapper/programs/xcrun.cpp:  return 0;
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:} // anonymous namespace
wrapper/programs/xcrun.cpp:int xcrun(int argc, char **argv, Target &target) {
wrapper/programs/xcrun.cpp:  if (getenv("xcrun_log"))
wrapper/programs/xcrun.cpp:    showCommand = true;
wrapper/programs/xcrun.cpp:  constexpr const char *ENVVARS[] = {
wrapper/programs/xcrun.cpp:    "DEVELOPER_DIR", "TOOLCHAINS", "xcrun_verbose"
wrapper/programs/xcrun.cpp:  };
wrapper/programs/xcrun.cpp:  for (const char *evar : ENVVARS) {
wrapper/programs/xcrun.cpp:    if (getenv(evar)) {
wrapper/programs/xcrun.cpp:      warn << "xcrun: ignoring environment variable "
wrapper/programs/xcrun.cpp:           << "'" << evar << "'" << warn.endl();
wrapper/programs/xcrun.cpp:    }
wrapper/programs/xcrun.cpp:  }
wrapper/programs/xcrun.cpp:  if (char *SDK = getenv("SDKROOT")) {
wrapper/programs/xcrun.cpp:    unsetenv("OSXCROSS_SDKROOT");
wrapper/programs/xcrun.cpp:    char *argv[1] = { SDK };
wrapper/programs/xcrun.cpp:    sdk(target, argv);
wrapper/programs/xcrun.cpp:  }
wrapper/programs/xcrun.cpp:  auto dummy = [](Target&, char**) { return 0; };
wrapper/programs/xcrun.cpp:  ArgParser<int (*)(Target&, char**), 19> argParser = {{
wrapper/programs/xcrun.cpp:    {"h", help},
wrapper/programs/xcrun.cpp:    {"help", help},
wrapper/programs/xcrun.cpp:    {"version", version},
wrapper/programs/xcrun.cpp:    {"v", dummy},
wrapper/programs/xcrun.cpp:    {"verbose", dummy},
wrapper/programs/xcrun.cpp:    {"k", dummy},
wrapper/programs/xcrun.cpp:    {"kill-cache", dummy},
wrapper/programs/xcrun.cpp:    {"n", dummy},
wrapper/programs/xcrun.cpp:    {"no-cache", dummy},
wrapper/programs/xcrun.cpp:    {"sdk", sdk, 1},
wrapper/programs/xcrun.cpp:    {"toolchain", dummy, 1},
wrapper/programs/xcrun.cpp:    {"l", log },
wrapper/programs/xcrun.cpp:    {"log", log},
wrapper/programs/xcrun.cpp:    {"f", find, 1},
wrapper/programs/xcrun.cpp:    {"find", find, 1},
wrapper/programs/xcrun.cpp:    {"r", run, 1},
wrapper/programs/xcrun.cpp:    {"run", run, 1},
wrapper/programs/xcrun.cpp:    {"show-sdk-path", showSDKPath},
wrapper/programs/xcrun.cpp:    {"show-sdk-version", showSDKVersion}
wrapper/programs/xcrun.cpp:  }};
wrapper/programs/xcrun.cpp:  int retVal = 1;
wrapper/programs/xcrun.cpp:  for (int i = 1; i < argc; ++i) {
wrapper/programs/xcrun.cpp:    auto b = argParser.parseArg(argc, argv, i);
wrapper/programs/xcrun.cpp:    if (!b) {
wrapper/programs/xcrun.cpp:      if (argv[i][0] == '-') {
wrapper/programs/xcrun.cpp:        err << "xcrun: unknown argument: '" << argv[i] << "'" << err.endl();
wrapper/programs/xcrun.cpp:        retVal = 2;
wrapper/programs/xcrun.cpp:        break;
wrapper/programs/xcrun.cpp:      }
wrapper/programs/xcrun.cpp:      run(target, &argv[i]);
wrapper/programs/xcrun.cpp:    }
wrapper/programs/xcrun.cpp:    retVal = b->fun(target, &argv[i + 1]);
wrapper/programs/xcrun.cpp:    if (retVal != 0)
wrapper/programs/xcrun.cpp:      break;
wrapper/programs/xcrun.cpp:    i += b->numArgs;
wrapper/programs/xcrun.cpp:  }
wrapper/programs/xcrun.cpp:  return retVal;
wrapper/programs/xcrun.cpp:}
wrapper/programs/xcrun.cpp:} // namespace program
wrapper/progs.h:/***********************************************************************
wrapper/progs.h: *  OSXCross Compiler Wrapper                                          *
wrapper/progs.h: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/progs.h: *  t.poechtrager@gmail.com                                            *
wrapper/progs.h: *                                                                     *
wrapper/progs.h: *  This program is free software; you can redistribute it and/or      *
wrapper/progs.h: *  modify it under the terms of the GNU General Public License        *
wrapper/progs.h: *  as published by the Free Software Foundation; either version 2     *
wrapper/progs.h: *  of the License, or (at your option) any later version.             *
wrapper/progs.h: *                                                                     *
wrapper/progs.h: *  This program is distributed in the hope that it will be useful,    *
wrapper/progs.h: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/progs.h: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/progs.h: *  GNU General Public License for more details.                       *
wrapper/progs.h: *                                                                     *
wrapper/progs.h: *  You should have received a copy of the GNU General Public License  *
wrapper/progs.h: *  along with this program; if not, write to the Free Software        *
wrapper/progs.h: *  Foundation, Inc.,                                                  *
wrapper/progs.h: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/progs.h: ***********************************************************************/
wrapper/progs.h:namespace target {
wrapper/progs.h:struct Target;
wrapper/progs.h:}
wrapper/progs.h:namespace program {
wrapper/progs.h:using target::Target;
wrapper/progs.h:class prog {
wrapper/progs.h:public:
wrapper/progs.h:  typedef int (*f1)();
wrapper/progs.h:  typedef int (*f2)(int, char **);
wrapper/progs.h:  typedef int (*f3)(int, char **, Target &);
wrapper/progs.h:  typedef int (*f4)(Target &);
wrapper/progs.h:  constexpr prog(const char *name, f1 fun)
wrapper/progs.h:      : name(name), fun1(fun), fun2(), fun3(), fun4(), type(1) {}
wrapper/progs.h:  constexpr prog(const char *name, f2 fun)
wrapper/progs.h:      : name(name), fun1(), fun2(fun), fun3(), fun4(), type(2) {}
wrapper/progs.h:  constexpr prog(const char *name, f3 fun)
wrapper/progs.h:      : name(name), fun1(), fun2(), fun3(fun), fun4(), type(3) {}
wrapper/progs.h:  constexpr prog(const char *name, f4 fun)
wrapper/progs.h:      : name(name), fun1(), fun2(), fun3(), fun4(fun), type(4) {}
wrapper/progs.h:  __attribute__((noreturn))
wrapper/progs.h:  void operator()(int argc, char **argv, Target &target) const {
wrapper/progs.h:    switch (type) {
wrapper/progs.h:    case 1:
wrapper/progs.h:      exit(fun1());
wrapper/progs.h:    case 2:
wrapper/progs.h:      exit(fun2(argc, argv));
wrapper/progs.h:    case 3:
wrapper/progs.h:      exit(fun3(argc, argv, target));
wrapper/progs.h:    case 4:
wrapper/progs.h:      exit(fun4(target));
wrapper/progs.h:    }
wrapper/progs.h:    __builtin_unreachable();
wrapper/progs.h:  }
wrapper/progs.h:  bool operator==(const char *name) const { return !strcmp(name, this->name); }
wrapper/progs.h:  template<class T>
wrapper/progs.h:  bool operator==(const T &name) const { return name == this->name; }
wrapper/progs.h:  const char *name;
wrapper/progs.h:private:
wrapper/progs.h:  f1 fun1;
wrapper/progs.h:  f2 fun2;
wrapper/progs.h:  f3 fun3;
wrapper/progs.h:  f4 fun4;
wrapper/progs.h:  int type;
wrapper/progs.h:};
wrapper/progs.h:int sw_vers(int argc, char **argv, target::Target &target);
wrapper/progs.h:int xcrun(int argc, char **argv, Target &target);
wrapper/progs.h:int dsymutil(int argc, char **argv, target::Target &target);
wrapper/progs.h:namespace osxcross {
wrapper/progs.h:int version();
wrapper/progs.h:int env(int argc, char **argv);
wrapper/progs.h:int conf(Target &target);
wrapper/progs.h:int cmp(int argc, char **argv);
wrapper/progs.h:int man(int argc, char **argv, Target &target);
wrapper/progs.h:int pkg_config(int argc, char **argv, Target &target);
wrapper/progs.h:} // namespace osxcross
wrapper/progs.h:static int dummy() { return 0; }
wrapper/progs.h:constexpr prog programs[] = {
wrapper/progs.h:  { "sw_vers", sw_vers },
wrapper/progs.h:  { "xcrun", xcrun },
wrapper/progs.h:  { "dsymutil", dsymutil },
wrapper/progs.h:  { "osxcross", osxcross::version },
wrapper/progs.h:  { "osxcross-env", osxcross::env },
wrapper/progs.h:  { "osxcross-conf", osxcross::conf },
wrapper/progs.h:  { "osxcross-cmp", osxcross::cmp },
wrapper/progs.h:  { "osxcross-man", osxcross::man },
wrapper/progs.h:  { "pkg-config", osxcross::pkg_config },
wrapper/progs.h:  { "wrapper", dummy }
wrapper/progs.h:};
wrapper/progs.h:template <class T> const prog *getprog(const T &name) {
wrapper/progs.h:  for (auto &p : programs) {
wrapper/progs.h:    if (p == name)
wrapper/progs.h:      return &p;
wrapper/progs.h:  }
wrapper/progs.h:  return nullptr;
wrapper/progs.h:}
wrapper/progs.h:} // namespace program
wrapper/quirks/include/sys/cdefs.h:/*
wrapper/quirks/include/sys/cdefs.h: * Workaround for a GLIBC bug.
wrapper/quirks/include/sys/cdefs.h: * https://sourceware.org/bugzilla/show_bug.cgi?id=14952
wrapper/quirks/include/sys/cdefs.h: */
wrapper/quirks/include/sys/cdefs.h:#include_next <sys/cdefs.h>
wrapper/quirks/include/sys/cdefs.h:#ifdef __GLIBC__
wrapper/quirks/include/sys/cdefs.h:#ifndef __extern_inline
wrapper/quirks/include/sys/cdefs.h:# define __extern_inline \
wrapper/quirks/include/sys/cdefs.h:  extern __inline __attribute__ ((__gnu_inline__))
wrapper/quirks/include/sys/cdefs.h:#endif
wrapper/quirks/include/sys/cdefs.h:#ifndef __extern_always_inline
wrapper/quirks/include/sys/cdefs.h:# define __extern_always_inline \
wrapper/quirks/include/sys/cdefs.h:  extern __always_inline __attribute__ ((__gnu_inline__))
wrapper/quirks/include/sys/cdefs.h:#endif
wrapper/quirks/include/sys/cdefs.h:#endif /* __GLIBC__ */
wrapper/target.cpp:/***********************************************************************
wrapper/target.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/target.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/target.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/target.cpp: *                                                                     *
wrapper/target.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/target.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/target.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/target.cpp: *  of the License, or (at your option) any later version.             *
wrapper/target.cpp: *                                                                     *
wrapper/target.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/target.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/target.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/target.cpp: *  GNU General Public License for more details.                       *
wrapper/target.cpp: *                                                                     *
wrapper/target.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/target.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/target.cpp: *  Foundation, Inc.,                                                  *
wrapper/target.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/target.cpp: ***********************************************************************/
wrapper/target.cpp:#include "compat.h"
wrapper/target.cpp:#include <iostream>
wrapper/target.cpp:#include <string>
wrapper/target.cpp:#include <sstream>
wrapper/target.cpp:#include <vector>
wrapper/target.cpp:#include <map>
wrapper/target.cpp:#include <algorithm>
wrapper/target.cpp:#include <cstring>
wrapper/target.cpp:#include <strings.h>
wrapper/target.cpp:#include <cstdlib>
wrapper/target.cpp:#include <climits>
wrapper/target.cpp:#include <cassert>
wrapper/target.cpp:#include <sys/stat.h>
wrapper/target.cpp:#include <unistd.h>
wrapper/target.cpp:#include "tools.h"
wrapper/target.cpp:#include "target.h"
wrapper/target.cpp:namespace target {
wrapper/target.cpp:Target::Target()
wrapper/target.cpp:    : vendor(getDefaultVendor()), SDK(getenv("OSXCROSS_SDKROOT")),
wrapper/target.cpp:      arch(Arch::x86_64), target(getDefaultTarget()), stdlib(StdLib::unset),
wrapper/target.cpp:      usegcclibs(), compiler(getDefaultCompilerIdentifier()),
wrapper/target.cpp:      compilername(getDefaultCompilerName()), language() {
wrapper/target.cpp:  if (!getExecutablePath(execpath, sizeof(execpath)))
wrapper/target.cpp:    abort();
wrapper/target.cpp:  const char *SDKSearchDir = getSDKSearchDir();
wrapper/target.cpp:  if (!SDK && SDKSearchDir[0])
wrapper/target.cpp:    overrideDefaultSDKPath(SDKSearchDir);
wrapper/target.cpp:}
wrapper/target.cpp:OSVersion Target::getSDKOSNum() const {
wrapper/target.cpp:  if (SDK) {
wrapper/target.cpp:    std::string SDKPath = SDK;
wrapper/target.cpp:    while (SDKPath.size() && SDKPath[SDKPath.size() - 1] == PATHDIV)
wrapper/target.cpp:      SDKPath.erase(SDKPath.size() - 1, 1);
wrapper/target.cpp:    const char *SDKName = getFileName(SDKPath);
wrapper/target.cpp:    if (strncasecmp(SDKName, "MacOSX", 6))
wrapper/target.cpp:      return OSVersion();
wrapper/target.cpp:    return parseOSVersion(SDKName + 6);
wrapper/target.cpp:  } else {
wrapper/target.cpp:    if (target.size() < 7)
wrapper/target.cpp:      return OSVersion();
wrapper/target.cpp:    int n = atoi(target.c_str() + 6);
wrapper/target.cpp:    return OSVersion(10, 4 + (n - 8));
wrapper/target.cpp:  }
wrapper/target.cpp:}
wrapper/target.cpp:void Target::overrideDefaultSDKPath(const char *SDKSearchDir) {
wrapper/target.cpp:  std::string defaultSDKPath;
wrapper/target.cpp:  defaultSDKPath = SDKSearchDir;
wrapper/target.cpp:  defaultSDKPath += PATHDIV;
wrapper/target.cpp:  defaultSDKPath += "default";
wrapper/target.cpp:  struct stat st;
wrapper/target.cpp:  if (!lstat(defaultSDKPath.c_str(), &st)) {
wrapper/target.cpp:    if (!S_ISLNK(st.st_mode)) {
wrapper/target.cpp:      err << "'" << defaultSDKPath << "' must be a symlink to an SDK"
wrapper/target.cpp:          << err.endl();
wrapper/target.cpp:      exit(EXIT_FAILURE);
wrapper/target.cpp:    }
wrapper/target.cpp:    if (char *resolved = realpath(defaultSDKPath.c_str(), nullptr)) {
wrapper/target.cpp:      SDK = resolved;
wrapper/target.cpp:    } else {
wrapper/target.cpp:      err << "'" << defaultSDKPath << "' broken symlink" << err.endl();
wrapper/target.cpp:      exit(EXIT_FAILURE);
wrapper/target.cpp:    }
wrapper/target.cpp:  } else {
wrapper/target.cpp:    // Choose the latest SDK
wrapper/target.cpp:    static OSVersion latestSDKVersion;
wrapper/target.cpp:    static std::string latestSDK;
wrapper/target.cpp:    latestSDKVersion = OSVersion();
wrapper/target.cpp:    latestSDK.clear();
wrapper/target.cpp:    listFiles(SDKSearchDir, nullptr, [](const char *SDK) {
wrapper/target.cpp:      if (!strncasecmp(SDK, "MacOSX", 6)) {
wrapper/target.cpp:        OSVersion SDKVersion = parseOSVersion(SDK + 6);
wrapper/target.cpp:        if (SDKVersion > latestSDKVersion) {
wrapper/target.cpp:          latestSDKVersion = SDKVersion;
wrapper/target.cpp:          latestSDK = SDK;
wrapper/target.cpp:        }
wrapper/target.cpp:      }
wrapper/target.cpp:      return false;
wrapper/target.cpp:    });
wrapper/target.cpp:    if (!latestSDKVersion.Num()) {
wrapper/target.cpp:      err << "no SDK found in '" << SDKSearchDir << "'" << err.endl();
wrapper/target.cpp:      exit(EXIT_FAILURE);
wrapper/target.cpp:    }
wrapper/target.cpp:    std::string SDKPath;
wrapper/target.cpp:    SDKPath = SDKSearchDir;
wrapper/target.cpp:    SDKPath += PATHDIV;
wrapper/target.cpp:    SDKPath += latestSDK;
wrapper/target.cpp:    SDK = strdup(SDKPath.c_str()); // intentionally leaked
wrapper/target.cpp:  }
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::getSDKPath(std::string &path) const {
wrapper/target.cpp:  if (SDK) {
wrapper/target.cpp:    path = SDK;
wrapper/target.cpp:  } else {
wrapper/target.cpp:    OSVersion SDKVer = getSDKOSNum();
wrapper/target.cpp:    path = execpath;
wrapper/target.cpp:    path += "/../SDK/MacOSX";
wrapper/target.cpp:    path += SDKVer.shortStr();
wrapper/target.cpp:    if (SDKVer <= OSVersion(10, 4))
wrapper/target.cpp:      path += "u";
wrapper/target.cpp:    path += ".sdk";
wrapper/target.cpp:  }
wrapper/target.cpp:  if (!dirExists(path)) {
wrapper/target.cpp:    err << "cannot find Mac OS X SDK (expected in: " << path << ")"
wrapper/target.cpp:        << err.endl();
wrapper/target.cpp:    return false;
wrapper/target.cpp:  }
wrapper/target.cpp:  return true;
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::getMacPortsDir(std::string &path) const {
wrapper/target.cpp:  path = execpath;
wrapper/target.cpp:  path += "/../macports";
wrapper/target.cpp:  return dirExists(path);
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::getMacPortsSysRootDir(std::string &path) const {
wrapper/target.cpp:  if (!getMacPortsDir(path))
wrapper/target.cpp:    return false;
wrapper/target.cpp:  path += "/pkgs";
wrapper/target.cpp:  return dirExists(path);
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::getMacPortsPkgConfigDir(std::string &path) const {
wrapper/target.cpp:  if (!getMacPortsDir(path))
wrapper/target.cpp:    return false;
wrapper/target.cpp:  path += "/pkgs/opt/local/lib/pkgconfig";
wrapper/target.cpp:  return dirExists(path);
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::getMacPortsIncludeDir(std::string &path) const {
wrapper/target.cpp:  if (!getMacPortsDir(path))
wrapper/target.cpp:    return false;
wrapper/target.cpp:  path += "/pkgs/opt/local/include";
wrapper/target.cpp:  return dirExists(path);
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::getMacPortsLibDir(std::string &path) const {
wrapper/target.cpp:  if (!getMacPortsDir(path))
wrapper/target.cpp:    return false;
wrapper/target.cpp:  path += "/pkgs/opt/local/lib";
wrapper/target.cpp:  return dirExists(path);
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::getMacPortsFrameworksDir(std::string &path) const {
wrapper/target.cpp:  if (!getMacPortsDir(path))
wrapper/target.cpp:    return false;
wrapper/target.cpp:  path += "/pkgs/opt/local/Library/Frameworks";
wrapper/target.cpp:  return dirExists(path);
wrapper/target.cpp:}
wrapper/target.cpp:void Target::addArch(const Arch arch) {
wrapper/target.cpp:  auto &v = targetarch;
wrapper/target.cpp:  for (size_t i = 0; i < v.size(); ++i) {
wrapper/target.cpp:    if (v[i] == arch) {
wrapper/target.cpp:      v.erase(v.begin() + i);
wrapper/target.cpp:      addArch(arch);
wrapper/target.cpp:      return;
wrapper/target.cpp:    }
wrapper/target.cpp:  }
wrapper/target.cpp:  v.push_back(arch);
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::haveArch(const Arch arch) {
wrapper/target.cpp:  for (auto a : targetarch) {
wrapper/target.cpp:    if (arch == a)
wrapper/target.cpp:      return true;
wrapper/target.cpp:  }
wrapper/target.cpp:  return false;
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::hasLibCXX() const { return getSDKOSNum() >= OSVersion(10, 7); }
wrapper/target.cpp:bool Target::libCXXIsDefaultCXXLib() const {
wrapper/target.cpp:  OSVersion OSNum = this->OSNum;
wrapper/target.cpp:  if (!OSNum.Num())
wrapper/target.cpp:    OSNum = getSDKOSNum();
wrapper/target.cpp:  return stdlib != libstdcxx && hasLibCXX() && !isGCC() &&
wrapper/target.cpp:         OSNum >= OSVersion(10, 9);
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::isCXX() {
wrapper/target.cpp:  if (isKnownCompiler())
wrapper/target.cpp:    return (compiler == Compiler::CLANGXX || compiler == Compiler::GXX);
wrapper/target.cpp:  return endsWith(compilername, "++");
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::isGCH() {
wrapper/target.cpp:  if (!language)
wrapper/target.cpp:    return false;
wrapper/target.cpp:  return !strcmp(language, "c-header") ||
wrapper/target.cpp:         !strcmp(language, "c++-header") ||
wrapper/target.cpp:         !strcmp(language, "objective-c-header") ||
wrapper/target.cpp:         !strcmp(language, "objective-c++-header");
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::isClang() const {
wrapper/target.cpp:  return (compiler == Compiler::CLANG || compiler == Compiler::CLANGXX);
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::isGCC() const {
wrapper/target.cpp:  return (compiler == Compiler::GCC || compiler == Compiler::GXX);
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::isKnownCompiler() const {
wrapper/target.cpp:  return compiler != Compiler::UNKNOWN;
wrapper/target.cpp:}
wrapper/target.cpp:const std::string &Target::getDefaultTriple(std::string &triple) const {
wrapper/target.cpp:  triple = getArchName(Arch::x86_64);
wrapper/target.cpp:  triple += "-";
wrapper/target.cpp:  triple += getDefaultVendor();
wrapper/target.cpp:  triple += "-";
wrapper/target.cpp:  triple += getDefaultTarget();
wrapper/target.cpp:  return triple;
wrapper/target.cpp:}
wrapper/target.cpp:void Target::setCompilerPath() {
wrapper/target.cpp:  if (isGCC()) {
wrapper/target.cpp:    compilerpath = execpath;
wrapper/target.cpp:    compilerpath += "/";
wrapper/target.cpp:    compilerpath += getTriple();
wrapper/target.cpp:    compilerpath += "-";
wrapper/target.cpp:    compilerpath += "base-";
wrapper/target.cpp:    compilerpath += compilername;
wrapper/target.cpp:    compilerexecname = getTriple();
wrapper/target.cpp:    compilerexecname += "-";
wrapper/target.cpp:    compilerexecname += compilername;
wrapper/target.cpp:  } else {
wrapper/target.cpp:    if (!realPath(compilername.c_str(), compilerpath, ignoreCCACHE))
wrapper/target.cpp:      compilerpath = compilername;
wrapper/target.cpp:    compilerexecname += compilername;
wrapper/target.cpp:  }
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::findClangIntrinsicHeaders(std::string &path) {
wrapper/target.cpp:  static std::stringstream dir;
wrapper/target.cpp:  assert(isClang());
wrapper/target.cpp:  if (compilerpath.empty())
wrapper/target.cpp:    return false;
wrapper/target.cpp:  std::string clangbindir = compilerpath;
wrapper/target.cpp:  stripFileName(clangbindir);
wrapper/target.cpp:  static ClangVersion *clangversion;
wrapper/target.cpp:  static std::string pathtmp;
wrapper/target.cpp:  clangversion = &this->clangversion;
wrapper/target.cpp:  clear(dir);
wrapper/target.cpp:  *clangversion = ClangVersion();
wrapper/target.cpp:  pathtmp.clear();
wrapper/target.cpp:  auto tryDir = [&]()->bool {
wrapper/target.cpp:    listFiles(dir.str().c_str(), nullptr, [](const char *file) {
wrapper/target.cpp:      if (file[0] != '.' && isDirectory(file, dir.str().c_str())) {
wrapper/target.cpp:        ClangVersion cv = parseClangVersion(file);
wrapper/target.cpp:        if (cv != ClangVersion()) {
wrapper/target.cpp:          static std::stringstream tmp;
wrapper/target.cpp:          clear(tmp);
wrapper/target.cpp:          auto checkDir = [&](std::stringstream &dir) {
wrapper/target.cpp:            static std::string intrindir;
wrapper/target.cpp:            auto &file = dir;
wrapper/target.cpp:            intrindir = dir.str();
wrapper/target.cpp:            file << "/xmmintrin.h";
wrapper/target.cpp:            if (fileExists(file.str())) {
wrapper/target.cpp:              if (cv > *clangversion) {
wrapper/target.cpp:                *clangversion = cv;
wrapper/target.cpp:                pathtmp.swap(intrindir);
wrapper/target.cpp:              }
wrapper/target.cpp:              return true;
wrapper/target.cpp:            }
wrapper/target.cpp:            return false;
wrapper/target.cpp:          };
wrapper/target.cpp:          tmp << dir.str() << "/" << file << "/include";
wrapper/target.cpp:          if (!checkDir(tmp)) {
wrapper/target.cpp:            clear(tmp);
wrapper/target.cpp:            tmp << dir.str() << "/" << file;
wrapper/target.cpp:            checkDir(tmp);
wrapper/target.cpp:          }
wrapper/target.cpp:        }
wrapper/target.cpp:        return true;
wrapper/target.cpp:      }
wrapper/target.cpp:      return true;
wrapper/target.cpp:    });
wrapper/target.cpp:    return *clangversion != ClangVersion();
wrapper/target.cpp:  };
wrapper/target.cpp:#define TRYDIR(basedir, subdir)                                                \
wrapper/target.cpp:do {                                                                           \
wrapper/target.cpp:  dir << basedir << subdir;                                                    \
wrapper/target.cpp:  if (tryDir()) {                                                              \
wrapper/target.cpp:    path.swap(pathtmp);                                                        \
wrapper/target.cpp:    return true;                                                               \
wrapper/target.cpp:  }                                                                            \
wrapper/target.cpp:  clear(dir);                                                                  \
wrapper/target.cpp:} while (0)
wrapper/target.cpp:#define TRYDIR2(libdir) TRYDIR(clangbindir, libdir)
wrapper/target.cpp:#define TRYDIR3(libdir) TRYDIR(std::string(), libdir)
wrapper/target.cpp:#ifdef __CYGWIN__
wrapper/target.cpp:#ifdef __x86_64__
wrapper/target.cpp:  TRYDIR2("/../lib/clang/x86_64-pc-cygwin");
wrapper/target.cpp:#else
wrapper/target.cpp:  TRYDIR2("/../lib/clang/i686-pc-cygwin");
wrapper/target.cpp:#endif
wrapper/target.cpp:#endif
wrapper/target.cpp:  TRYDIR2("/../lib/clang");
wrapper/target.cpp:#ifdef __linux__
wrapper/target.cpp:#ifdef __x86_64__
wrapper/target.cpp:  // opensuse uses lib64 instead of lib on x86_64
wrapper/target.cpp:  TRYDIR2("/../lib64/clang");
wrapper/target.cpp:#elif __i386__
wrapper/target.cpp:  TRYDIR2("/../lib32/clang");
wrapper/target.cpp:#endif
wrapper/target.cpp:#endif
wrapper/target.cpp:#ifdef __APPLE__
wrapper/target.cpp:  constexpr const char *OSXIntrinDirs[] = {
wrapper/target.cpp:    "/Library/Developer/CommandLineTools/usr/lib/clang",
wrapper/target.cpp:    "/Applications/Contents/Developer/Toolchains/"
wrapper/target.cpp:    "XcodeDefault.xctoolchain/usr/lib/clang"
wrapper/target.cpp:  };
wrapper/target.cpp:  for (auto intrindir : OSXIntrinDirs)
wrapper/target.cpp:    TRYDIR3(intrindir);
wrapper/target.cpp:#endif
wrapper/target.cpp:  TRYDIR2("/../include/clang");
wrapper/target.cpp:  TRYDIR2("/usr/include/clang");
wrapper/target.cpp:  return false;
wrapper/target.cpp:#undef TRYDIR
wrapper/target.cpp:#undef TRYDIR2
wrapper/target.cpp:#undef TRYDIR3
wrapper/target.cpp:}
wrapper/target.cpp:void Target::setupGCCLibs(Arch arch) {
wrapper/target.cpp:  assert(stdlib == StdLib::libstdcxx);
wrapper/target.cpp:  fargs.push_back("-nodefaultlibs");
wrapper/target.cpp:  std::string SDKPath;
wrapper/target.cpp:  std::stringstream GCCLibSTDCXXPath;
wrapper/target.cpp:  std::stringstream GCCLibPath;
wrapper/target.cpp:  const bool dynamic = !!getenv("OSXCROSS_GCC_NO_STATIC_RUNTIME");
wrapper/target.cpp:  getSDKPath(SDKPath);
wrapper/target.cpp:  GCCLibPath << SDKPath << "/../../lib/gcc/" << otriple << "/"
wrapper/target.cpp:             << gccversion.Str();
wrapper/target.cpp:  GCCLibSTDCXXPath << SDKPath << "/../../" << otriple << "/lib";
wrapper/target.cpp:  switch (arch) {
wrapper/target.cpp:  case Arch::i386:
wrapper/target.cpp:  case Arch::i486:
wrapper/target.cpp:  case Arch::i586:
wrapper/target.cpp:  case Arch::i686:
wrapper/target.cpp:    GCCLibPath << "/" << getArchName(Arch::i386);
wrapper/target.cpp:    GCCLibSTDCXXPath << "/" << getArchName(i386);
wrapper/target.cpp:  default:
wrapper/target.cpp:    ;
wrapper/target.cpp:  }
wrapper/target.cpp:  if (dynamic) {
wrapper/target.cpp:    fargs.push_back("-L");
wrapper/target.cpp:    fargs.push_back(GCCLibPath.str());
wrapper/target.cpp:    fargs.push_back("-L");
wrapper/target.cpp:    fargs.push_back(GCCLibSTDCXXPath.str());
wrapper/target.cpp:  }
wrapper/target.cpp:  auto addLib = [&](const std::stringstream &path, const char *lib) {
wrapper/target.cpp:    if (dynamic) {
wrapper/target.cpp:      fargs.push_back("-l");
wrapper/target.cpp:      fargs.push_back(lib);
wrapper/target.cpp:    } else {
wrapper/target.cpp:      static std::stringstream tmp;
wrapper/target.cpp:      clear(tmp);
wrapper/target.cpp:      tmp << path.str() << "/lib" << lib << ".a";
wrapper/target.cpp:      fargs.push_back(tmp.str());
wrapper/target.cpp:    }
wrapper/target.cpp:  };
wrapper/target.cpp:  fargs.push_back("-Qunused-arguments");
wrapper/target.cpp:  addLib(GCCLibSTDCXXPath, "stdc++");
wrapper/target.cpp:  addLib(GCCLibSTDCXXPath, "supc++");
wrapper/target.cpp:  addLib(GCCLibPath, "gcc");
wrapper/target.cpp:  addLib(GCCLibPath, "gcc_eh");
wrapper/target.cpp:  fargs.push_back("-lc");
wrapper/target.cpp:  fargs.push_back("-Wl,-no_compact_unwind");
wrapper/target.cpp:}
wrapper/target.cpp:bool Target::setup() {
wrapper/target.cpp:  std::string SDKPath;
wrapper/target.cpp:  OSVersion SDKOSNum = getSDKOSNum();
wrapper/target.cpp:  if (!isKnownCompiler())
wrapper/target.cpp:    warn << "unknown compiler '" << compilername << "'" << warn.endl();
wrapper/target.cpp:  if (!getSDKPath(SDKPath))
wrapper/target.cpp:    return false;
wrapper/target.cpp:  if (targetarch.empty())
wrapper/target.cpp:    targetarch.push_back(arch);
wrapper/target.cpp:  triple = getArchName(arch);
wrapper/target.cpp:  triple += "-";
wrapper/target.cpp:  triple += vendor;
wrapper/target.cpp:  triple += "-";
wrapper/target.cpp:  triple += target;
wrapper/target.cpp:  otriple = getArchName(Arch::x86_64);
wrapper/target.cpp:  otriple += "-";
wrapper/target.cpp:  otriple += vendor;
wrapper/target.cpp:  otriple += "-";
wrapper/target.cpp:  otriple += target;
wrapper/target.cpp:  setCompilerPath();
wrapper/target.cpp:  if (!OSNum.Num()) {
wrapper/target.cpp:    if (haveArch(Arch::x86_64h)) {
wrapper/target.cpp:      OSNum = OSVersion(10, 8); // Default to 10.8 for x86_64h
wrapper/target.cpp:      if (SDKOSNum < OSNum) {
wrapper/target.cpp:        err << "'" << getArchName(arch) << "' requires Mac OS X SDK "
wrapper/target.cpp:            << OSNum.shortStr() << " (or later)" << err.endl();
wrapper/target.cpp:        return false;
wrapper/target.cpp:      }
wrapper/target.cpp:    } else if (stdlib == StdLib::libcxx) {
wrapper/target.cpp:      OSNum = OSVersion(10, 7); // Default to 10.7 for libc++
wrapper/target.cpp:    } else {
wrapper/target.cpp:      OSNum = getDefaultMinTarget();
wrapper/target.cpp:    }
wrapper/target.cpp:  }
wrapper/target.cpp:  if (haveArch(Arch::x86_64h) && OSNum < OSVersion(10, 8)) {
wrapper/target.cpp:    // -mmacosx-version-min= < 10.8 in combination with '-arch x86_64h'
wrapper/target.cpp:    // may cause linker errors.
wrapper/target.cpp:    // Erroring here is really annoying, better risk linking errors instead
wrapper/target.cpp:    // of enforcing '-mmacosx-version-min= >= 10.8'.
wrapper/target.cpp:    if (!getenv("OSXCROSS_NO_X86_64H_DEPLOYMENT_TARGET_WARNING"))
wrapper/target.cpp:      warn << "'-mmacosx-version-min=' should be '>= 10.8' for architecture "
wrapper/target.cpp:           << "'" << getArchName(Arch::x86_64h) << "'" << warn.endl();
wrapper/target.cpp:  }
wrapper/target.cpp:  if (stdlib == StdLib::unset) {
wrapper/target.cpp:    if (libCXXIsDefaultCXXLib()) {
wrapper/target.cpp:      stdlib = StdLib::libcxx;
wrapper/target.cpp:    } else {
wrapper/target.cpp:      stdlib = StdLib::libstdcxx;
wrapper/target.cpp:    }
wrapper/target.cpp:  } else if (stdlib == StdLib::libcxx) {
wrapper/target.cpp:    if (!hasLibCXX()) {
wrapper/target.cpp:      err << "libc++ requires Mac OS X SDK 10.7 (or later)" << err.endl();
wrapper/target.cpp:      return false;
wrapper/target.cpp:    }
wrapper/target.cpp:    if (OSNum.Num() && OSNum < OSVersion(10, 7)) {
wrapper/target.cpp:      err << "libc++ requires '-mmacosx-version-min=10.7' (or later)"
wrapper/target.cpp:          << err.endl();
wrapper/target.cpp:      return false;
wrapper/target.cpp:    }
wrapper/target.cpp:  }
wrapper/target.cpp:  if (OSNum > SDKOSNum) {
wrapper/target.cpp:    err << "targeted OS X version must be <= " << SDKOSNum.Str() << " (SDK)"
wrapper/target.cpp:        << err.endl();
wrapper/target.cpp:    return false;
wrapper/target.cpp:  } else if (OSNum < OSVersion(10, 4)) {
wrapper/target.cpp:    err << "targeted OS X version must be >= 10.4" << err.endl();
wrapper/target.cpp:    return false;
wrapper/target.cpp:  }
wrapper/target.cpp:  std::string CXXHeaderPath = SDKPath;
wrapper/target.cpp:  string_vector AdditionalCXXHeaderPaths;
wrapper/target.cpp:  auto addCXXPath = [&](const std::string &path) {
wrapper/target.cpp:    std::string tmp;
wrapper/target.cpp:    tmp = CXXHeaderPath;
wrapper/target.cpp:    tmp += "/";
wrapper/target.cpp:    tmp += path;
wrapper/target.cpp:    AdditionalCXXHeaderPaths.push_back(tmp);
wrapper/target.cpp:  };
wrapper/target.cpp:  switch (stdlib) {
wrapper/target.cpp:  case StdLib::libcxx: {
wrapper/target.cpp:    CXXHeaderPath += "/usr/include/c++/v1";
wrapper/target.cpp:    if (!dirExists(CXXHeaderPath)) {
wrapper/target.cpp:      err << "cannot find " << getStdLibString(stdlib) << " headers"
wrapper/target.cpp:          << err.endl();
wrapper/target.cpp:      return false;
wrapper/target.cpp:    }
wrapper/target.cpp:    break;
wrapper/target.cpp:  }
wrapper/target.cpp:  case StdLib::libstdcxx: {
wrapper/target.cpp:    if (isGCC())
wrapper/target.cpp:      break;
wrapper/target.cpp:    if (usegcclibs) {
wrapper/target.cpp:      // Use libs from './build_gcc.sh' installation
wrapper/target.cpp:      CXXHeaderPath += "/../../";
wrapper/target.cpp:      CXXHeaderPath += otriple;
wrapper/target.cpp:      CXXHeaderPath += "/include/c++";
wrapper/target.cpp:      static std::vector<GCCVersion> v;
wrapper/target.cpp:      v.clear();
wrapper/target.cpp:      listFiles(CXXHeaderPath.c_str(), nullptr, [](const char *path) {
wrapper/target.cpp:        if (path[0] != '.')
wrapper/target.cpp:          v.push_back(parseGCCVersion(path));
wrapper/target.cpp:        return false;
wrapper/target.cpp:      });
wrapper/target.cpp:      if (v.empty()) {
wrapper/target.cpp:        err << "'-foc-use-gcc-libstdc++' requires gcc to be installed "
wrapper/target.cpp:               "(./build_gcc.sh)" << err.endl();
wrapper/target.cpp:        return false;
wrapper/target.cpp:      }
wrapper/target.cpp:      std::sort(v.begin(), v.end());
wrapper/target.cpp:      gccversion = v[v.size() - 1];
wrapper/target.cpp:      CXXHeaderPath += "/";
wrapper/target.cpp:      CXXHeaderPath += gccversion.Str();
wrapper/target.cpp:      addCXXPath(otriple);
wrapper/target.cpp:    } else {
wrapper/target.cpp:      // Use SDK libs
wrapper/target.cpp:      std::string tmp;
wrapper/target.cpp:      if (SDKOSNum <= OSVersion(10, 5))
wrapper/target.cpp:        CXXHeaderPath += "/usr/include/c++/4.0.0";
wrapper/target.cpp:      else
wrapper/target.cpp:        CXXHeaderPath += "/usr/include/c++/4.2.1";
wrapper/target.cpp:      tmp = getArchName(arch);
wrapper/target.cpp:      tmp += "-apple-";
wrapper/target.cpp:      tmp += target;
wrapper/target.cpp:      addCXXPath(tmp);
wrapper/target.cpp:    }
wrapper/target.cpp:    addCXXPath("backward");
wrapper/target.cpp:    if (!dirExists(CXXHeaderPath)) {
wrapper/target.cpp:      err << "cannot find " << getStdLibString(stdlib) << " headers"
wrapper/target.cpp:          << err.endl();
wrapper/target.cpp:      return false;
wrapper/target.cpp:    }
wrapper/target.cpp:    break;
wrapper/target.cpp:  }
wrapper/target.cpp:  case StdLib::unset:
wrapper/target.cpp:    abort();
wrapper/target.cpp:  }
wrapper/target.cpp:  fargs.push_back(compilerexecname);
wrapper/target.cpp:  if (isClang()) {
wrapper/target.cpp:    std::string tmp;
wrapper/target.cpp:    fargs.push_back("-target");
wrapper/target.cpp:    fargs.push_back(getTriple());
wrapper/target.cpp:    tmp = "-mlinker-version=";
wrapper/target.cpp:    tmp += getLinkerVersion();
wrapper/target.cpp:    fargs.push_back(tmp);
wrapper/target.cpp:    tmp.clear();
wrapper/target.cpp:#ifndef __APPLE__
wrapper/target.cpp:    if (!findClangIntrinsicHeaders(tmp)) {
wrapper/target.cpp:      warn << "cannot find clang intrinsic headers; please report this "
wrapper/target.cpp:              "issue to the OSXCross project" << warn.endl();
wrapper/target.cpp:    } else {
wrapper/target.cpp:      if (haveArch(Arch::x86_64h) && clangversion < ClangVersion(3, 5)) {
wrapper/target.cpp:        err << "'" << getArchName(Arch::x86_64h) << "' requires clang 3.5 "
wrapper/target.cpp:            << "(or later)" << err.endl();
wrapper/target.cpp:        return false;
wrapper/target.cpp:      }
wrapper/target.cpp:      fargs.push_back("-isystem");
wrapper/target.cpp:      fargs.push_back(tmp);
wrapper/target.cpp:    }
wrapper/target.cpp:    tmp.clear();
wrapper/target.cpp:#endif
wrapper/target.cpp:    fargs.push_back("-isysroot");
wrapper/target.cpp:    fargs.push_back(SDKPath);
wrapper/target.cpp:    if (isCXX()) {
wrapper/target.cpp:      tmp = "-stdlib=";
wrapper/target.cpp:      tmp += getStdLibString(stdlib);
wrapper/target.cpp:      fargs.push_back(tmp);
wrapper/target.cpp:      if (stdlib == StdLib::libcxx ||
wrapper/target.cpp:          (stdlib == StdLib::libstdcxx && usegcclibs)) {
wrapper/target.cpp:        fargs.push_back("-nostdinc++");
wrapper/target.cpp:        fargs.push_back("-Qunused-arguments");
wrapper/target.cpp:      }
wrapper/target.cpp:      if (stdlib == StdLib::libstdcxx && usegcclibs && targetarch.size() < 2 &&
wrapper/target.cpp:          !isGCH()) {
wrapper/target.cpp:        // Use libs from './build_gcc' installation
wrapper/target.cpp:        setupGCCLibs(targetarch[0]);
wrapper/target.cpp:      }
wrapper/target.cpp:    }
wrapper/target.cpp:  } else if (isGCC()) {
wrapper/target.cpp:    if (isCXX() && stdlib == StdLib::libcxx) {
wrapper/target.cpp:      fargs.push_back("-nostdinc++");
wrapper/target.cpp:      fargs.push_back("-nodefaultlibs");
wrapper/target.cpp:      if (!isGCH()) {
wrapper/target.cpp:        fargs.push_back("-lc");
wrapper/target.cpp:        fargs.push_back("-lc++");
wrapper/target.cpp:        fargs.push_back("-lgcc_s.10.5");
wrapper/target.cpp:      }
wrapper/target.cpp:    } else if (stdlib != StdLib::libcxx && !isGCH() &&
wrapper/target.cpp:               !getenv("OSXCROSS_GCC_NO_STATIC_RUNTIME")) {
wrapper/target.cpp:      fargs.push_back("-static-libgcc");
wrapper/target.cpp:      fargs.push_back("-static-libstdc++");
wrapper/target.cpp:    }
wrapper/target.cpp:    if (!isGCH())
wrapper/target.cpp:      fargs.push_back("-Wl,-no_compact_unwind");
wrapper/target.cpp:  }
wrapper/target.cpp:  auto addCXXHeaderPath = [&](const std::string &path) {
wrapper/target.cpp:    fargs.push_back(isClang() ? "-cxx-isystem" : "-isystem");
wrapper/target.cpp:    fargs.push_back(path);
wrapper/target.cpp:  };
wrapper/target.cpp:  addCXXHeaderPath(CXXHeaderPath);
wrapper/target.cpp:  for (auto &path : AdditionalCXXHeaderPaths)
wrapper/target.cpp:    addCXXHeaderPath(path);
wrapper/target.cpp:  if (getenv("OSXCROSS_MP_INC")) {
wrapper/target.cpp:    std::string MacPortsIncludeDir;
wrapper/target.cpp:    std::string MacPortsLibraryDir;
wrapper/target.cpp:    std::string MacPortsFrameworksDir;
wrapper/target.cpp:    // Add them to args (instead of fargs),
wrapper/target.cpp:    // so the user's -I / -L / -F is prefered.
wrapper/target.cpp:    if (getMacPortsIncludeDir(MacPortsIncludeDir)) {
wrapper/target.cpp:      args.push_back("-isystem");
wrapper/target.cpp:      args.push_back(MacPortsIncludeDir);
wrapper/target.cpp:      if (getMacPortsLibDir(MacPortsLibraryDir)) {
wrapper/target.cpp:        if (isClang())
wrapper/target.cpp:          args.push_back("-Qunused-arguments");
wrapper/target.cpp:        args.push_back("-L");
wrapper/target.cpp:        args.push_back(MacPortsLibraryDir);
wrapper/target.cpp:      }
wrapper/target.cpp:      if (getMacPortsFrameworksDir(MacPortsFrameworksDir)) {
wrapper/target.cpp:        args.push_back("-iframework");
wrapper/target.cpp:        args.push_back(MacPortsFrameworksDir);
wrapper/target.cpp:      }
wrapper/target.cpp:    }
wrapper/target.cpp:  }
wrapper/target.cpp:  if (OSNum.Num()) {
wrapper/target.cpp:    std::string tmp;
wrapper/target.cpp:    tmp = "-mmacosx-version-min=";
wrapper/target.cpp:    tmp += OSNum.Str();
wrapper/target.cpp:    fargs.push_back(tmp);
wrapper/target.cpp:  }
wrapper/target.cpp:  for (auto arch : targetarch) {
wrapper/target.cpp:    bool is32bit = false;
wrapper/target.cpp:    switch (arch) {
wrapper/target.cpp:    case Arch::i386:
wrapper/target.cpp:    case Arch::i486:
wrapper/target.cpp:    case Arch::i586:
wrapper/target.cpp:    case Arch::i686:
wrapper/target.cpp:      is32bit = true;
wrapper/target.cpp:    case Arch::x86_64:
wrapper/target.cpp:    case Arch::x86_64h:
wrapper/target.cpp:      if (isGCC()) {
wrapper/target.cpp:        if (arch == Arch::x86_64h) {
wrapper/target.cpp:          err << "gcc does not support architecture '" << getArchName(arch)
wrapper/target.cpp:              << "'" << err.endl();
wrapper/target.cpp:          return false;
wrapper/target.cpp:        }
wrapper/target.cpp:        if (targetarch.size() > 1)
wrapper/target.cpp:          break;
wrapper/target.cpp:        fargs.push_back(is32bit ? "-m32" : "-m64");
wrapper/target.cpp:      } else if (isClang()) {
wrapper/target.cpp:        if (usegcclibs && targetarch.size() > 1)
wrapper/target.cpp:          break;
wrapper/target.cpp:        fargs.push_back("-arch");
wrapper/target.cpp:        fargs.push_back(getArchName(arch));
wrapper/target.cpp:      }
wrapper/target.cpp:      break;
wrapper/target.cpp:    default:
wrapper/target.cpp:      err << "unsupported architecture: '" << getArchName(arch) << "'"
wrapper/target.cpp:          << err.endl();
wrapper/target.cpp:      return false;
wrapper/target.cpp:    }
wrapper/target.cpp:  }
wrapper/target.cpp:  return true;
wrapper/target.cpp:}
wrapper/target.cpp:} // namespace target
wrapper/target.h:/***********************************************************************
wrapper/target.h: *  OSXCross Compiler Wrapper                                          *
wrapper/target.h: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/target.h: *  t.poechtrager@gmail.com                                            *
wrapper/target.h: *                                                                     *
wrapper/target.h: *  This program is free software; you can redistribute it and/or      *
wrapper/target.h: *  modify it under the terms of the GNU General Public License        *
wrapper/target.h: *  as published by the Free Software Foundation; either version 2     *
wrapper/target.h: *  of the License, or (at your option) any later version.             *
wrapper/target.h: *                                                                     *
wrapper/target.h: *  This program is distributed in the hope that it will be useful,    *
wrapper/target.h: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/target.h: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/target.h: *  GNU General Public License for more details.                       *
wrapper/target.h: *                                                                     *
wrapper/target.h: *  You should have received a copy of the GNU General Public License  *
wrapper/target.h: *  along with this program; if not, write to the Free Software        *
wrapper/target.h: *  Foundation, Inc.,                                                  *
wrapper/target.h: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/target.h: ***********************************************************************/
wrapper/target.h:namespace target {
wrapper/target.h:using namespace tools;
wrapper/target.h://
wrapper/target.h:// Default values for the Target struct
wrapper/target.h://
wrapper/target.h:constexpr const char *getDefaultVendor() { return "apple"; }
wrapper/target.h:constexpr const char *getDefaultTarget() { return OSXCROSS_TARGET; }
wrapper/target.h:constexpr const char *getDefaultCompilerName() {
wrapper/target.h:  return "clang";
wrapper/target.h:}
wrapper/target.h:constexpr Compiler getDefaultCompilerIdentifier() {
wrapper/target.h:  return Compiler::CLANG;
wrapper/target.h:}
wrapper/target.h:constexpr const char *getDefaultCXXCompilerName() {
wrapper/target.h:  return "clang++";
wrapper/target.h:}
wrapper/target.h:constexpr Compiler getDefaultCXXCompilerIdentifier() {
wrapper/target.h:  return Compiler::CLANGXX;
wrapper/target.h:}
wrapper/target.h:constexpr const char *getLinkerVersion() { return OSXCROSS_LINKER_VERSION; }
wrapper/target.h:constexpr const char *getBuildDir() { return OSXCROSS_BUILD_DIR; }
wrapper/target.h:constexpr const char *getLibLTOPath() {
wrapper/target.h:#ifdef OSXCROSS_LIBLTO_PATH
wrapper/target.h:  return OSXCROSS_LIBLTO_PATH;
wrapper/target.h:#else
wrapper/target.h:  return nullptr;
wrapper/target.h:#endif
wrapper/target.h:}
wrapper/target.h:constexpr const char *getOSXCrossVersion() {
wrapper/target.h:#ifdef OSXCROSS_VERSION
wrapper/target.h:  return OSXCROSS_VERSION[0] ? OSXCROSS_VERSION : "unknown";
wrapper/target.h:#else
wrapper/target.h:  return "unknown";
wrapper/target.h:#endif
wrapper/target.h:}
wrapper/target.h:#ifdef OSXCROSS_OSX_VERSION_MIN
wrapper/target.h:inline OSVersion getDefaultMinTarget() {
wrapper/target.h:  if (!strcmp(OSXCROSS_OSX_VERSION_MIN, "default"))
wrapper/target.h:    return OSVersion();
wrapper/target.h:  return parseOSVersion(OSXCROSS_OSX_VERSION_MIN);
wrapper/target.h:}
wrapper/target.h:#else
wrapper/target.h:constexpr OSVersion getDefaultMinTarget() { return OSVersion(); }
wrapper/target.h:#endif
wrapper/target.h:inline const char *getSDKSearchDir() {
wrapper/target.h:  const char *SDKSearchDir = getenv("OSXCROSS_SDK_SEARCH_DIR");
wrapper/target.h:#ifdef OSXCROSS_SDK_SEARCH_DIR
wrapper/target.h:  if (!SDKSearchDir)
wrapper/target.h:    SDKSearchDir = OSXCROSS_SDK_SEARCH_DIR;
wrapper/target.h:#endif
wrapper/target.h:  return SDKSearchDir ? SDKSearchDir : "";
wrapper/target.h:}
wrapper/target.h://
wrapper/target.h:// Target
wrapper/target.h://
wrapper/target.h:struct Target {
wrapper/target.h:  Target();
wrapper/target.h:  OSVersion getSDKOSNum() const;
wrapper/target.h:  void overrideDefaultSDKPath(const char *SDKSearchDir);
wrapper/target.h:  bool getSDKPath(std::string &path) const;
wrapper/target.h:  bool getMacPortsDir(std::string &path) const;
wrapper/target.h:  bool getMacPortsSysRootDir(std::string &path) const;
wrapper/target.h:  bool getMacPortsPkgConfigDir(std::string &path) const;
wrapper/target.h:  bool getMacPortsIncludeDir(std::string &path) const;
wrapper/target.h:  bool getMacPortsLibDir(std::string &path) const;
wrapper/target.h:  bool getMacPortsFrameworksDir(std::string &path) const;
wrapper/target.h:  void addArch(const Arch arch);
wrapper/target.h:  bool haveArch(const Arch arch);
wrapper/target.h:  bool hasLibCXX() const;
wrapper/target.h:  bool libCXXIsDefaultCXXLib() const;
wrapper/target.h:  bool isCXX();
wrapper/target.h:  bool isGCH();
wrapper/target.h:  bool isClang() const;
wrapper/target.h:  bool isGCC() const;
wrapper/target.h:  bool isKnownCompiler() const;
wrapper/target.h:  const std::string &getDefaultTriple(std::string &triple) const;
wrapper/target.h:  const std::string &getTriple() const { return triple; }
wrapper/target.h:  void setCompilerPath();
wrapper/target.h:  bool findClangIntrinsicHeaders(std::string &path);
wrapper/target.h:  void setupGCCLibs(Arch arch);
wrapper/target.h:  bool setup();
wrapper/target.h:  const char *vendor;
wrapper/target.h:  const char *SDK;
wrapper/target.h:  Arch arch;
wrapper/target.h:  std::vector<Arch> targetarch;
wrapper/target.h:  std::string target;
wrapper/target.h:  OSVersion OSNum;
wrapper/target.h:  StdLib stdlib;
wrapper/target.h:  ClangVersion clangversion;
wrapper/target.h:  GCCVersion gccversion;
wrapper/target.h:  bool usegcclibs;
wrapper/target.h:  Compiler compiler;
wrapper/target.h:  std::string compilerpath;     // /usr/bin/clang | [...]/target/bin/*-gcc
wrapper/target.h:  std::string compilername;     // clang | gcc
wrapper/target.h:  std::string compilerexecname; // clang | *-apple-darwin-gcc
wrapper/target.h:  std::string triple;
wrapper/target.h:  std::string otriple;
wrapper/target.h:  string_vector fargs;
wrapper/target.h:  string_vector args;
wrapper/target.h:  const char *language;
wrapper/target.h:  char execpath[PATH_MAX + 1];
wrapper/target.h:};
wrapper/target.h:} // namespace target
wrapper/tools.cpp:/***********************************************************************
wrapper/tools.cpp: *  OSXCross Compiler Wrapper                                          *
wrapper/tools.cpp: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/tools.cpp: *  t.poechtrager@gmail.com                                            *
wrapper/tools.cpp: *                                                                     *
wrapper/tools.cpp: *  This program is free software; you can redistribute it and/or      *
wrapper/tools.cpp: *  modify it under the terms of the GNU General Public License        *
wrapper/tools.cpp: *  as published by the Free Software Foundation; either version 2     *
wrapper/tools.cpp: *  of the License, or (at your option) any later version.             *
wrapper/tools.cpp: *                                                                     *
wrapper/tools.cpp: *  This program is distributed in the hope that it will be useful,    *
wrapper/tools.cpp: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/tools.cpp: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/tools.cpp: *  GNU General Public License for more details.                       *
wrapper/tools.cpp: *                                                                     *
wrapper/tools.cpp: *  You should have received a copy of the GNU General Public License  *
wrapper/tools.cpp: *  along with this program; if not, write to the Free Software        *
wrapper/tools.cpp: *  Foundation, Inc.,                                                  *
wrapper/tools.cpp: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/tools.cpp: ***********************************************************************/
wrapper/tools.cpp:#include "compat.h"
wrapper/tools.cpp:#include <vector>
wrapper/tools.cpp:#include <string>
wrapper/tools.cpp:#include <sstream>
wrapper/tools.cpp:#include <istream>
wrapper/tools.cpp:#include <fstream>
wrapper/tools.cpp:#include <iostream>
wrapper/tools.cpp:#include <cstdlib>
wrapper/tools.cpp:#include <cstdio>
wrapper/tools.cpp:#include <cstring>
wrapper/tools.cpp:#include <climits>
wrapper/tools.cpp:#include <cassert>
wrapper/tools.cpp:#include <sys/time.h>
wrapper/tools.cpp:#include <sys/stat.h>
wrapper/tools.cpp:#include <unistd.h>
wrapper/tools.cpp:#include <sys/types.h>
wrapper/tools.cpp:#include <sys/wait.h>
wrapper/tools.cpp:#include <dirent.h>
wrapper/tools.cpp:#ifdef __APPLE__
wrapper/tools.cpp:#include <mach-o/dyld.h>
wrapper/tools.cpp:#include <CoreServices/CoreServices.h>
wrapper/tools.cpp:#include <mach/mach.h>
wrapper/tools.cpp:#include <mach/mach_time.h>
wrapper/tools.cpp:#include <libproc.h>
wrapper/tools.cpp:#endif
wrapper/tools.cpp:#if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__)
wrapper/tools.cpp:#include <sys/sysctl.h>
wrapper/tools.cpp:#include <sys/types.h>
wrapper/tools.cpp:#include <sys/user.h>
wrapper/tools.cpp:#endif
wrapper/tools.cpp:#ifdef __FreeBSD__
wrapper/tools.cpp:#include <libutil.h>
wrapper/tools.cpp:#endif
wrapper/tools.cpp:#include "tools.h"
wrapper/tools.cpp:namespace tools {
wrapper/tools.cpp://
wrapper/tools.cpp:// Terminal text colors
wrapper/tools.cpp://
wrapper/tools.cpp:bool isTerminal() {
wrapper/tools.cpp:  static bool first = false;
wrapper/tools.cpp:  static bool val;
wrapper/tools.cpp:  if (!first) {
wrapper/tools.cpp:    val = !!isatty(fileno(stderr));
wrapper/tools.cpp:    first = true;
wrapper/tools.cpp:  }
wrapper/tools.cpp:  return val;
wrapper/tools.cpp:}
wrapper/tools.cpp://
wrapper/tools.cpp:// Executable path
wrapper/tools.cpp://
wrapper/tools.cpp:char *getExecutablePath(char *buf, size_t len) {
wrapper/tools.cpp:  char *p;
wrapper/tools.cpp:#ifdef __APPLE__
wrapper/tools.cpp:  unsigned int l = len;
wrapper/tools.cpp:  if (_NSGetExecutablePath(buf, &l) != 0)
wrapper/tools.cpp:    return nullptr;
wrapper/tools.cpp:#elif defined(__FreeBSD__) || defined(__DragonFly__)
wrapper/tools.cpp:  int mib[4] = { CTL_KERN, KERN_PROC, KERN_PROC_PATHNAME, -1 };
wrapper/tools.cpp:  size_t l = len;
wrapper/tools.cpp:  if (sysctl(mib, 4, buf, &l, nullptr, 0) != 0)
wrapper/tools.cpp:    return nullptr;
wrapper/tools.cpp:#elif defined(__OpenBSD__)
wrapper/tools.cpp:  int mib[4] = {CTL_KERN, KERN_PROC_ARGS, getpid(), KERN_PROC_ARGV};
wrapper/tools.cpp:  char **argv;
wrapper/tools.cpp:  size_t l;
wrapper/tools.cpp:  const char *comm;
wrapper/tools.cpp:  int ok = 0;
wrapper/tools.cpp:  if (sysctl(mib, 4, NULL, &l, NULL, 0) < 0)
wrapper/tools.cpp:    abort();
wrapper/tools.cpp:  argv = new char *[l];
wrapper/tools.cpp:  if (sysctl(mib, 4, argv, &l, NULL, 0) < 0)
wrapper/tools.cpp:    abort();
wrapper/tools.cpp:  comm = argv[0];
wrapper/tools.cpp:  if (*comm == '/' || *comm == '.') {
wrapper/tools.cpp:    char *rpath;
wrapper/tools.cpp:    if ((rpath = realpath(comm, NULL))) {
wrapper/tools.cpp:      strlcpy(buf, rpath, len);
wrapper/tools.cpp:      free(rpath);
wrapper/tools.cpp:      ok = 1;
wrapper/tools.cpp:    }
wrapper/tools.cpp:  } else {
wrapper/tools.cpp:    char *sp;
wrapper/tools.cpp:    char *xpath = strdup(getenv("PATH"));
wrapper/tools.cpp:    char *path = strtok_r(xpath, ":", &sp);
wrapper/tools.cpp:    struct stat st;
wrapper/tools.cpp:    if (!xpath)
wrapper/tools.cpp:      abort();
wrapper/tools.cpp:    while (path) {
wrapper/tools.cpp:      snprintf(buf, len, "%s/%s", path, comm);
wrapper/tools.cpp:      if (!stat(buf, &st) && (st.st_mode & S_IXUSR)) {
wrapper/tools.cpp:        ok = 1;
wrapper/tools.cpp:        break;
wrapper/tools.cpp:      }
wrapper/tools.cpp:      path = strtok_r(NULL, ":", &sp);
wrapper/tools.cpp:    }
wrapper/tools.cpp:    free(xpath);
wrapper/tools.cpp:  }
wrapper/tools.cpp:  if (ok)
wrapper/tools.cpp:    l = strlen(buf);
wrapper/tools.cpp:  else
wrapper/tools.cpp:    l = 0;
wrapper/tools.cpp:  delete[] argv;
wrapper/tools.cpp:#else
wrapper/tools.cpp:  ssize_t l = readlink("/proc/self/exe", buf, len);
wrapper/tools.cpp:  assert(l > 0 && "/proc not mounted?");
wrapper/tools.cpp:#endif
wrapper/tools.cpp:  if (l <= 0)
wrapper/tools.cpp:    return nullptr;
wrapper/tools.cpp:  buf[len - 1] = '\0';
wrapper/tools.cpp:  p = strrchr(buf, PATHDIV);
wrapper/tools.cpp:  if (p)
wrapper/tools.cpp:    *p = '\0';
wrapper/tools.cpp:  return buf;
wrapper/tools.cpp:}
wrapper/tools.cpp:const std::string &getParentProcessName() {
wrapper/tools.cpp:  static std::string name;
wrapper/tools.cpp:  auto getName = [](const char * path)->const char * {
wrapper/tools.cpp:    if (const char *p = strrchr(path, '/')) {
wrapper/tools.cpp:      return p + 1;
wrapper/tools.cpp:    }
wrapper/tools.cpp:    return path;
wrapper/tools.cpp:  };
wrapper/tools.cpp:  auto ppid = getppid();
wrapper/tools.cpp:#ifdef __APPLE__
wrapper/tools.cpp:  char path[PROC_PIDPATHINFO_MAXSIZE];
wrapper/tools.cpp:  if (proc_pidpath(ppid, path, sizeof(path))) {
wrapper/tools.cpp:    name = getName(path);
wrapper/tools.cpp:    return name;
wrapper/tools.cpp:  }
wrapper/tools.cpp:#elif defined(__FreeBSD__)
wrapper/tools.cpp:  struct kinfo_proc *proc = kinfo_getproc(ppid);
wrapper/tools.cpp:  if (proc) {
wrapper/tools.cpp:    name = getName(proc->ki_comm);
wrapper/tools.cpp:    free(proc);
wrapper/tools.cpp:    return name;
wrapper/tools.cpp:  }
wrapper/tools.cpp:#else
wrapper/tools.cpp:  std::stringstream file;
wrapper/tools.cpp:  file << "/proc/" << ppid << "/comm";
wrapper/tools.cpp:  if (getFileContent(file.str(), name)) {
wrapper/tools.cpp:    if (!name.empty() && name.rbegin()[0] == '\n') {
wrapper/tools.cpp:      name.resize(name.size() - 1);
wrapper/tools.cpp:    }
wrapper/tools.cpp:    return name;
wrapper/tools.cpp:  } else {
wrapper/tools.cpp:    clear(file);
wrapper/tools.cpp:    file << "/proc/" << ppid << "/exe";
wrapper/tools.cpp:    char buf[PATH_MAX + 1];
wrapper/tools.cpp:    if (readlink(file.str().c_str(), buf, sizeof(buf)) > 0) {
wrapper/tools.cpp:      buf[PATH_MAX] = '\0';
wrapper/tools.cpp:      name = getName(buf);
wrapper/tools.cpp:      return name;
wrapper/tools.cpp:    }
wrapper/tools.cpp:  }
wrapper/tools.cpp:#endif
wrapper/tools.cpp:  name = "unknown";
wrapper/tools.cpp:  return name;
wrapper/tools.cpp:}
wrapper/tools.cpp://
wrapper/tools.cpp:// Environment
wrapper/tools.cpp://
wrapper/tools.cpp:void concatEnvVariable(const char *var, const std::string &val) {
wrapper/tools.cpp:  std::string nval = val;
wrapper/tools.cpp:  if (char *oldval = getenv(var)) {
wrapper/tools.cpp:    nval += ":";
wrapper/tools.cpp:    nval += oldval;
wrapper/tools.cpp:  }
wrapper/tools.cpp:  setenv(var, nval.c_str(), 1);
wrapper/tools.cpp:}
wrapper/tools.cpp:std::string &escapePath(const std::string &path, std::string &escapedpath) {
wrapper/tools.cpp:  for (const char *p = path.c_str(); *p; ++p) {
wrapper/tools.cpp:    switch (*p) {
wrapper/tools.cpp:    case '"':
wrapper/tools.cpp:    case '\'':
wrapper/tools.cpp:    case '\\':
wrapper/tools.cpp:    case '$':
wrapper/tools.cpp:    case '(':
wrapper/tools.cpp:    case ')':
wrapper/tools.cpp:    case ' ':
wrapper/tools.cpp:    case ';':
wrapper/tools.cpp:    case ':':
wrapper/tools.cpp:      escapedpath += '\\';
wrapper/tools.cpp:    }
wrapper/tools.cpp:    escapedpath += *p;
wrapper/tools.cpp:  }
wrapper/tools.cpp:  return escapedpath;
wrapper/tools.cpp:}
wrapper/tools.cpp:void splitPath(const char *path, std::vector<std::string> &result) {
wrapper/tools.cpp:  char *sp;
wrapper/tools.cpp:  char *xpath = strdup(path);
wrapper/tools.cpp:  char *p = strtok_r(xpath, ":", &sp);
wrapper/tools.cpp:  if (!xpath)
wrapper/tools.cpp:    abort();
wrapper/tools.cpp:  while (p) {
wrapper/tools.cpp:    result.push_back(p);
wrapper/tools.cpp:    p = strtok_r(NULL, ":", &sp);
wrapper/tools.cpp:  }
wrapper/tools.cpp:  free(xpath);
wrapper/tools.cpp:}
wrapper/tools.cpp:std::string joinPath(const std::vector<std::string> &path) {
wrapper/tools.cpp:  std::string tmp;
wrapper/tools.cpp:  std::string escaped;
wrapper/tools.cpp:  for (size_t i = 0; i < path.size(); ++i) {
wrapper/tools.cpp:    escaped.clear();
wrapper/tools.cpp:    tmp += escapePath(path[i], escaped);
wrapper/tools.cpp:    if (i != path.size() - 1)
wrapper/tools.cpp:      tmp += ":";
wrapper/tools.cpp:  }
wrapper/tools.cpp:  return tmp;
wrapper/tools.cpp:}
wrapper/tools.cpp:bool hasPath(const std::vector<std::string> &path, const char *find) {
wrapper/tools.cpp:  for (const std::string &p : path)
wrapper/tools.cpp:    if (p == find)
wrapper/tools.cpp:      return true;
wrapper/tools.cpp:  return false;
wrapper/tools.cpp:}
wrapper/tools.cpp://
wrapper/tools.cpp:// Files and Directories
wrapper/tools.cpp://
wrapper/tools.cpp:std::string *getFileContent(const std::string &file, std::string &content) {
wrapper/tools.cpp:  std::ifstream f(file.c_str());
wrapper/tools.cpp:  if (!f.is_open())
wrapper/tools.cpp:    return nullptr;
wrapper/tools.cpp:  f.seekg(0, std::ios::end);
wrapper/tools.cpp:  auto len = f.tellg();
wrapper/tools.cpp:  f.seekg(0, std::ios::beg);
wrapper/tools.cpp:  if (len != static_cast<decltype(len)>(-1))
wrapper/tools.cpp:    content.reserve(static_cast<size_t>(f.tellg()));
wrapper/tools.cpp:  content.assign(std::istreambuf_iterator<char>(f),
wrapper/tools.cpp:                 std::istreambuf_iterator<char>());
wrapper/tools.cpp:  return &content;
wrapper/tools.cpp:}
wrapper/tools.cpp:bool writeFileContent(const std::string &file, const std::string &content) {
wrapper/tools.cpp:  std::ofstream f(file.c_str());
wrapper/tools.cpp:  if (!f.is_open())
wrapper/tools.cpp:    return false;
wrapper/tools.cpp:  f << content;
wrapper/tools.cpp:  return f.good();
wrapper/tools.cpp:}
wrapper/tools.cpp:bool fileExists(const std::string &file) {
wrapper/tools.cpp:  struct stat st;
wrapper/tools.cpp:  return !stat(file.c_str(), &st);
wrapper/tools.cpp:}
wrapper/tools.cpp:bool dirExists(const std::string &dir) {
wrapper/tools.cpp:  struct stat st;
wrapper/tools.cpp:  return !stat(dir.c_str(), &st) && S_ISDIR(st.st_mode);
wrapper/tools.cpp:}
wrapper/tools.cpp:typedef bool (*listfilescallback)(const char *file);
wrapper/tools.cpp:bool isDirectory(const char *file, const char *prefix) {
wrapper/tools.cpp:  struct stat st;
wrapper/tools.cpp:  if (prefix) {
wrapper/tools.cpp:    std::string tmp = prefix;
wrapper/tools.cpp:    tmp += "/";
wrapper/tools.cpp:    tmp += file;
wrapper/tools.cpp:    return !stat(tmp.c_str(), &st) && S_ISDIR(st.st_mode);
wrapper/tools.cpp:  } else {
wrapper/tools.cpp:    return !stat(file, &st) && S_ISDIR(st.st_mode);
wrapper/tools.cpp:  }
wrapper/tools.cpp:}
wrapper/tools.cpp:bool listFiles(const char *dir, std::vector<std::string> *files,
wrapper/tools.cpp:               listfilescallback cmp) {
wrapper/tools.cpp:  DIR *d = opendir(dir);
wrapper/tools.cpp:  dirent *de;
wrapper/tools.cpp:  if (!d)
wrapper/tools.cpp:    return false;
wrapper/tools.cpp:  while ((de = readdir(d))) {
wrapper/tools.cpp:    if ((!cmp || cmp(de->d_name)) && files) {
wrapper/tools.cpp:      files->push_back(de->d_name);
wrapper/tools.cpp:    }
wrapper/tools.cpp:  }
wrapper/tools.cpp:  closedir(d);
wrapper/tools.cpp:  return true;
wrapper/tools.cpp:}
wrapper/tools.cpp:typedef bool (*realpathcmp)(const char *file, const struct stat &st);
wrapper/tools.cpp:bool isExecutable(const char *f, const struct stat &) {
wrapper/tools.cpp:  return !access(f, F_OK | X_OK);
wrapper/tools.cpp:}
wrapper/tools.cpp:bool ignoreCCACHE(const char *f, const struct stat &) {
wrapper/tools.cpp:  const char *name = getFileName(f);
wrapper/tools.cpp:  return name && strstr(name, "ccache") != name;
wrapper/tools.cpp:}
wrapper/tools.cpp:bool realPath(const char *file, std::string &result,
wrapper/tools.cpp:              realpathcmp cmp1, realpathcmp cmp2) {
wrapper/tools.cpp:  char *PATH = getenv("PATH");
wrapper/tools.cpp:  const char *p = PATH ? PATH : "";
wrapper/tools.cpp:  struct stat st;
wrapper/tools.cpp:  result.clear();
wrapper/tools.cpp:  do {
wrapper/tools.cpp:    if (*p == ':')
wrapper/tools.cpp:      ++p;
wrapper/tools.cpp:    while (*p && *p != ':')
wrapper/tools.cpp:      result += *p++;
wrapper/tools.cpp:    result += "/";
wrapper/tools.cpp:    result += file;
wrapper/tools.cpp:    if (!stat(result.c_str(), &st)) {
wrapper/tools.cpp:      char buf[PATH_MAX + 1];
wrapper/tools.cpp:      if (realpath(result.c_str(), buf)) {
wrapper/tools.cpp:        result.assign(buf);
wrapper/tools.cpp:      } else {
wrapper/tools.cpp:        ssize_t len;
wrapper/tools.cpp:        char path[PATH_MAX];
wrapper/tools.cpp:        size_t pathlen;
wrapper/tools.cpp:        size_t n = 0;
wrapper/tools.cpp:        pathlen = result.find_last_of(PATHDIV);
wrapper/tools.cpp:        if (pathlen == std::string::npos)
wrapper/tools.cpp:          pathlen = result.length();
wrapper/tools.cpp:        else
wrapper/tools.cpp:          ++pathlen; // PATHDIV
wrapper/tools.cpp:        memcpy(path, result.c_str(), pathlen); // not null terminated
wrapper/tools.cpp:        while ((len = readlink(result.c_str(), buf, PATH_MAX)) != -1) {
wrapper/tools.cpp:          if (buf[0] != PATHDIV) {
wrapper/tools.cpp:            result.assign(path, pathlen);
wrapper/tools.cpp:            result.append(buf, len);
wrapper/tools.cpp:          } else {
wrapper/tools.cpp:            result.assign(buf, len);
wrapper/tools.cpp:            pathlen = strrchr(buf, PATHDIV) - buf + 1; // + 1: PATHDIV
wrapper/tools.cpp:            memcpy(path, buf, pathlen);
wrapper/tools.cpp:          }
wrapper/tools.cpp:          if (++n >= 1000) {
wrapper/tools.cpp:            err << result << ": too many levels of symbolic links"
wrapper/tools.cpp:                << err.endl();
wrapper/tools.cpp:            result.clear();
wrapper/tools.cpp:            break;
wrapper/tools.cpp:          }
wrapper/tools.cpp:        }
wrapper/tools.cpp:      }
wrapper/tools.cpp:      if ((!cmp1 || cmp1(result.c_str(), st)) &&
wrapper/tools.cpp:          (!cmp2 || cmp2(result.c_str(), st)))
wrapper/tools.cpp:        break;
wrapper/tools.cpp:    }
wrapper/tools.cpp:    result.clear();
wrapper/tools.cpp:  } while (*p);
wrapper/tools.cpp:  return !result.empty();
wrapper/tools.cpp:}
wrapper/tools.cpp:bool getPathOfCommand(const char *command, std::string &result,
wrapper/tools.cpp:                              realpathcmp cmp) {
wrapper/tools.cpp:  if (realPath(command, result, isExecutable, cmp))
wrapper/tools.cpp:    stripFileName(result);
wrapper/tools.cpp:  return !result.empty();
wrapper/tools.cpp:}
wrapper/tools.cpp:void stripFileName(std::string &path) {
wrapper/tools.cpp:  size_t lastpathdiv = path.find_last_of(PATHDIV);
wrapper/tools.cpp:  if (lastpathdiv != 0 && lastpathdiv != std::string::npos)
wrapper/tools.cpp:    path.resize(lastpathdiv);
wrapper/tools.cpp:}
wrapper/tools.cpp:const char *getFileName(const char *file) {
wrapper/tools.cpp:  const char *p = strrchr(file, PATHDIV);
wrapper/tools.cpp:  if (!p)
wrapper/tools.cpp:    p = file;
wrapper/tools.cpp:  else
wrapper/tools.cpp:    ++p;
wrapper/tools.cpp:  return p;
wrapper/tools.cpp:}
wrapper/tools.cpp:const char *getFileExtension(const char *file) {
wrapper/tools.cpp:  const char *p = strrchr(file, '.');
wrapper/tools.cpp:  if (!p)
wrapper/tools.cpp:    p = "";
wrapper/tools.cpp:  return p;
wrapper/tools.cpp:}
wrapper/tools.cpp://
wrapper/tools.cpp:// Shell Commands
wrapper/tools.cpp://
wrapper/tools.cpp:size_t runcommand(const char *command, char *buf, size_t len) {
wrapper/tools.cpp:#define RETURN(v)                                                              \
wrapper/tools.cpp:  do {                                                                         \
wrapper/tools.cpp:    if (p)                                                                     \
wrapper/tools.cpp:      pclose(p);                                                               \
wrapper/tools.cpp:    return (v);                                                                \
wrapper/tools.cpp:  } while (0)
wrapper/tools.cpp:  if (!len)
wrapper/tools.cpp:    return RUNCOMMAND_ERROR;
wrapper/tools.cpp:  FILE *p;
wrapper/tools.cpp:  size_t outputlen;
wrapper/tools.cpp:  if (!(p = popen(command, "r")))
wrapper/tools.cpp:    RETURN(RUNCOMMAND_ERROR);
wrapper/tools.cpp:  if (!(outputlen = fread(buf, sizeof(char), len - 1, p)))
wrapper/tools.cpp:    RETURN(RUNCOMMAND_ERROR);
wrapper/tools.cpp:  buf[outputlen] = '\0';
wrapper/tools.cpp:  RETURN(outputlen);
wrapper/tools.cpp:#undef RETURN
wrapper/tools.cpp:}
wrapper/tools.cpp://
wrapper/tools.cpp:// Time
wrapper/tools.cpp://
wrapper/tools.cpp:time_type getNanoSeconds() {
wrapper/tools.cpp:#ifdef __APPLE__
wrapper/tools.cpp:  union {
wrapper/tools.cpp:    AbsoluteTime at;
wrapper/tools.cpp:    time_type ull;
wrapper/tools.cpp:  } tmp;
wrapper/tools.cpp:  tmp.ull = mach_absolute_time();
wrapper/tools.cpp:  Nanoseconds ns = AbsoluteToNanoseconds(tmp.at);
wrapper/tools.cpp:  tmp.ull = UnsignedWideToUInt64(ns);
wrapper/tools.cpp:  return tmp.ull;
wrapper/tools.cpp:#elif defined(__linux__)
wrapper/tools.cpp:  struct timespec tp;
wrapper/tools.cpp:  if (clock_gettime(CLOCK_MONOTONIC, &tp) == 0)
wrapper/tools.cpp:    return static_cast<time_type>((tp.tv_sec * 1000000000LL) + tp.tv_nsec);
wrapper/tools.cpp:#endif
wrapper/tools.cpp:  struct timeval tv;
wrapper/tools.cpp:  if (gettimeofday(&tv, nullptr) == 0)
wrapper/tools.cpp:    return static_cast<time_type>((tv.tv_sec * 1000000000LL) +
wrapper/tools.cpp:                                  (tv.tv_usec * 1000));
wrapper/tools.cpp:  abort();
wrapper/tools.cpp:}
wrapper/tools.cpp://
wrapper/tools.cpp:// OSVersion
wrapper/tools.cpp://
wrapper/tools.cpp:OSVersion parseOSVersion(const char *OSVer) {
wrapper/tools.cpp:  const char *p = OSVer;
wrapper/tools.cpp:  OSVersion OSNum;
wrapper/tools.cpp:  OSNum.major = atoi(p);
wrapper/tools.cpp:  while (*p && *p++ != '.')
wrapper/tools.cpp:    ;
wrapper/tools.cpp:  if (!*p)
wrapper/tools.cpp:    return OSNum;
wrapper/tools.cpp:  OSNum.minor = atoi(p);
wrapper/tools.cpp:  while (*p && *p++ != '.')
wrapper/tools.cpp:    ;
wrapper/tools.cpp:  if (!*p)
wrapper/tools.cpp:    return OSNum;
wrapper/tools.cpp:  OSNum.patch = atoi(p);
wrapper/tools.cpp:  return OSNum;
wrapper/tools.cpp:}
wrapper/tools.cpp:} // namespace tools
wrapper/tools.h:/***********************************************************************
wrapper/tools.h: *  OSXCross Compiler Wrapper                                          *
wrapper/tools.h: *  Copyright (C) 2014, 2015 by Thomas Poechtrager                     *
wrapper/tools.h: *  t.poechtrager@gmail.com                                            *
wrapper/tools.h: *                                                                     *
wrapper/tools.h: *  This program is free software; you can redistribute it and/or      *
wrapper/tools.h: *  modify it under the terms of the GNU General Public License        *
wrapper/tools.h: *  as published by the Free Software Foundation; either version 2     *
wrapper/tools.h: *  of the License, or (at your option) any later version.             *
wrapper/tools.h: *                                                                     *
wrapper/tools.h: *  This program is distributed in the hope that it will be useful,    *
wrapper/tools.h: *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
wrapper/tools.h: *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *
wrapper/tools.h: *  GNU General Public License for more details.                       *
wrapper/tools.h: *                                                                     *
wrapper/tools.h: *  You should have received a copy of the GNU General Public License  *
wrapper/tools.h: *  along with this program; if not, write to the Free Software        *
wrapper/tools.h: *  Foundation, Inc.,                                                  *
wrapper/tools.h: *  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.      *
wrapper/tools.h: ***********************************************************************/
wrapper/tools.h:struct stat;
wrapper/tools.h:namespace tools {
wrapper/tools.h://
wrapper/tools.h:// Misc helper tools
wrapper/tools.h://
wrapper/tools.h:typedef std::vector<std::string> string_vector;
wrapper/tools.h:static inline void clear(std::stringstream &sstr) {
wrapper/tools.h:  sstr.clear();
wrapper/tools.h:  sstr.str(std::string());
wrapper/tools.h:}
wrapper/tools.h:static inline bool endsWith(std::string const &str, std::string const &end) {
wrapper/tools.h:  if (end.size() > str.size())
wrapper/tools.h:    return false;
wrapper/tools.h:  return std::equal(end.rbegin(), end.rend(), str.rbegin());
wrapper/tools.h:}
wrapper/tools.h:size_t constexpr constexprStrLen(const char *str) {
wrapper/tools.h:  return *str ? 1 + constexprStrLen(str + 1) : 0;
wrapper/tools.h:}
wrapper/tools.h://
wrapper/tools.h:// Terminal text colors
wrapper/tools.h://
wrapper/tools.h:bool isTerminal();
wrapper/tools.h:// http://stackoverflow.com/a/17469726
wrapper/tools.h:enum ColorCode {
wrapper/tools.h:  FG_DEFAULT = 39,
wrapper/tools.h:  FG_BLACK = 30,
wrapper/tools.h:  FG_RED = 31,
wrapper/tools.h:  FG_GREEN = 32,
wrapper/tools.h:  FG_YELLOW = 33,
wrapper/tools.h:  FG_BLUE = 34,
wrapper/tools.h:  FG_MAGENTA = 35,
wrapper/tools.h:  FG_CYAN = 36,
wrapper/tools.h:  FG_LIGHT_GRAY = 37,
wrapper/tools.h:  FG_DARK_GRAY = 90,
wrapper/tools.h:  FG_LIGHT_RED = 91,
wrapper/tools.h:  FG_LIGHT_GREEN = 92,
wrapper/tools.h:  FG_LIGHT_YELLOW = 93,
wrapper/tools.h:  FG_LIGHT_BLUE = 94,
wrapper/tools.h:  FG_LIGHT_MAGENTA = 95,
wrapper/tools.h:  FG_LIGHT_CYAN = 96,
wrapper/tools.h:  FG_WHITE = 97,
wrapper/tools.h:  BG_RED = 41,
wrapper/tools.h:  BG_GREEN = 42,
wrapper/tools.h:  BG_BLUE = 44,
wrapper/tools.h:  BG_DEFAULT = 49
wrapper/tools.h:};
wrapper/tools.h:class Color {
wrapper/tools.h:  ColorCode cc;
wrapper/tools.h:public:
wrapper/tools.h:  Color(ColorCode cc) : cc(cc) {}
wrapper/tools.h:  friend std::ostream &
wrapper/tools.h:  operator<<(std::ostream &os, const Color &color) {
wrapper/tools.h:    if (isTerminal())
wrapper/tools.h:      return os << "\033[" << color.cc << "m";
wrapper/tools.h:    return os;
wrapper/tools.h:  }
wrapper/tools.h:};
wrapper/tools.h://
wrapper/tools.h:// Error message helper
wrapper/tools.h://
wrapper/tools.h:static class Message {
wrapper/tools.h:private:
wrapper/tools.h:  const char *msg;
wrapper/tools.h:  Color color;
wrapper/tools.h:  std::ostream &os;
wrapper/tools.h:  bool printprefix;
wrapper/tools.h:public:
wrapper/tools.h:  static constexpr char endl() { return '\n'; }
wrapper/tools.h:  bool isendl(char c) { return c == '\n'; }
wrapper/tools.h:  template<typename T>
wrapper/tools.h:  bool isendl(T&&) { return false; }
wrapper/tools.h:  template<typename T>
wrapper/tools.h:  Message &operator<<(T &&v) {
wrapper/tools.h:    if (printprefix) {
wrapper/tools.h:      os << Color(FG_DARK_GRAY) << "osxcross: " << color << msg << ": "
wrapper/tools.h:         << Color(FG_DEFAULT);
wrapper/tools.h:      printprefix = false;
wrapper/tools.h:    }
wrapper/tools.h:    if (isendl(v)) {
wrapper/tools.h:      printprefix = true;
wrapper/tools.h:      os << std::endl;
wrapper/tools.h:    } else {
wrapper/tools.h:      os << v;
wrapper/tools.h:    }
wrapper/tools.h:    return *this;
wrapper/tools.h:  }
wrapper/tools.h:  Message(const char *msg, Color color = FG_RED, std::ostream &os = std::cerr)
wrapper/tools.h:      : msg(msg), color(color), os(os), printprefix(true) {}
wrapper/tools.h:} warn("warning"), err("error"), dbg("debug", FG_LIGHT_MAGENTA),
wrapper/tools.h:  info("info", FG_LIGHT_MAGENTA), warninfo("info", FG_LIGHT_MAGENTA);
wrapper/tools.h://
wrapper/tools.h:// Executable path
wrapper/tools.h://
wrapper/tools.h:char *getExecutablePath(char *buf, size_t len);
wrapper/tools.h:const std::string &getParentProcessName();
wrapper/tools.h:std::string &fixPathDiv(std::string &path);
wrapper/tools.h://
wrapper/tools.h:// Environment
wrapper/tools.h://
wrapper/tools.h:void concatEnvVariable(const char *var, const std::string &val);
wrapper/tools.h:std::string &escapePath(const std::string &path, std::string &escapedpath);
wrapper/tools.h:void splitPath(const char *path, std::vector<std::string> &result);
wrapper/tools.h:std::string joinPath(const std::vector<std::string> &path);
wrapper/tools.h:bool hasPath(const std::vector<std::string> &path, const char *find);
wrapper/tools.h://
wrapper/tools.h:// Files and directories
wrapper/tools.h://
wrapper/tools.h:constexpr char PATHDIV = '/';
wrapper/tools.h:std::string *getFileContent(const std::string &file, std::string &content);
wrapper/tools.h:bool writeFileContent(const std::string &file, const std::string &content);
wrapper/tools.h:bool fileExists(const std::string &dir);
wrapper/tools.h:bool dirExists(const std::string &dir);
wrapper/tools.h:typedef bool (*listfilescallback)(const char *file);
wrapper/tools.h:bool isDirectory(const char *file, const char *prefix);
wrapper/tools.h:bool listFiles(const char *dir, std::vector<std::string> *files,
wrapper/tools.h:               listfilescallback cmp);
wrapper/tools.h:typedef bool (*realpathcmp)(const char *file, const struct stat &st);
wrapper/tools.h:bool isExecutable(const char *f, const struct stat &);
wrapper/tools.h:bool ignoreCCACHE(const char *f, const struct stat &);
wrapper/tools.h:bool realPath(const char *file, std::string &result,
wrapper/tools.h:              realpathcmp cmp1 = nullptr, realpathcmp cmp2 = nullptr);
wrapper/tools.h:bool getPathOfCommand(const char *command, std::string &result,
wrapper/tools.h:                      realpathcmp cmp = nullptr);
wrapper/tools.h:void stripFileName(std::string &path);
wrapper/tools.h:const char *getFileName(const char *file);
wrapper/tools.h:const char *getFileExtension(const char *file);
wrapper/tools.h:inline const char *getFileName(const std::string &file) {
wrapper/tools.h:  return getFileName(file.c_str());
wrapper/tools.h:}
wrapper/tools.h:inline const char *getFileExtension(const std::string &file) {
wrapper/tools.h:  return getFileExtension(file.c_str());
wrapper/tools.h:}
wrapper/tools.h://
wrapper/tools.h:// Argument Parsing
wrapper/tools.h://
wrapper/tools.h:template <typename T, size_t size = 0> struct ArgParser {
wrapper/tools.h:  const struct Bind {
wrapper/tools.h:    const char *name;
wrapper/tools.h:    T fun;
wrapper/tools.h:    int numArgs;
wrapper/tools.h:  } binds[size];
wrapper/tools.h:  const Bind *parseArg(int argc, char **argv, const int numArg = 1) {
wrapper/tools.h:    const char *arg = argv[numArg];
wrapper/tools.h:    if (*arg != '-')
wrapper/tools.h:      return nullptr;
wrapper/tools.h:    while (*arg && *arg == '-')
wrapper/tools.h:      ++arg;
wrapper/tools.h:    for (size_t i = 0; i < size; ++i) {
wrapper/tools.h:      const Bind &bind = binds[i];
wrapper/tools.h:      if (!strcmp(arg, bind.name)) {
wrapper/tools.h:        if (argc - numArg <= bind.numArgs) {
wrapper/tools.h:          err << "too few arguments for '-" << bind.name << "'" << err.endl();
wrapper/tools.h:          return nullptr;
wrapper/tools.h:        }
wrapper/tools.h:        return &bind;
wrapper/tools.h:      }
wrapper/tools.h:    }
wrapper/tools.h:    return nullptr;
wrapper/tools.h:  }
wrapper/tools.h:};
wrapper/tools.h://
wrapper/tools.h:// Shell Commands
wrapper/tools.h://
wrapper/tools.h:constexpr size_t RUNCOMMAND_ERROR = -1;
wrapper/tools.h:size_t runcommand(const char *command, char *buf, size_t len);
wrapper/tools.h://
wrapper/tools.h:// Time
wrapper/tools.h://
wrapper/tools.h:typedef unsigned long long time_type;
wrapper/tools.h:time_type getNanoSeconds();
wrapper/tools.h:class benchmark {
wrapper/tools.h:public:
wrapper/tools.h:  benchmark() { s = getTime(); }
wrapper/tools.h:  time_type getDiff() { return getTime() - s; }
wrapper/tools.h:  void halt() { h = getTime(); }
wrapper/tools.h:  void resume() { s += getTime() - h; }
wrapper/tools.h:  ~benchmark() {
wrapper/tools.h:    time_type diff = getTime() - s;
wrapper/tools.h:    dbg << "took: " << diff / 1000000.0 << " ms" << dbg.endl();
wrapper/tools.h:  }
wrapper/tools.h:private:
wrapper/tools.h:  __attribute__((always_inline)) time_type getTime() {
wrapper/tools.h:    return getNanoSeconds();
wrapper/tools.h:  }
wrapper/tools.h:  time_type h;
wrapper/tools.h:  time_type s;
wrapper/tools.h:};
wrapper/tools.h://
wrapper/tools.h:// OSVersion
wrapper/tools.h://
wrapper/tools.h:#undef major
wrapper/tools.h:#undef minor
wrapper/tools.h:#undef patch
wrapper/tools.h:struct OSVersion {
wrapper/tools.h:  constexpr OSVersion(int major, int minor, int patch = 0)
wrapper/tools.h:      : major(major), minor(minor), patch(patch) {}
wrapper/tools.h:  constexpr OSVersion() : major(), minor(), patch() {}
wrapper/tools.h:  constexpr int Num() const {
wrapper/tools.h:    return major * 10000 + minor * 100 + patch;
wrapper/tools.h:  };
wrapper/tools.h:  constexpr bool operator>(const OSVersion &OSNum) const {
wrapper/tools.h:    return Num() > OSNum.Num();
wrapper/tools.h:  }
wrapper/tools.h:  constexpr bool operator>=(const OSVersion &OSNum) const {
wrapper/tools.h:    return Num() >= OSNum.Num();
wrapper/tools.h:  }
wrapper/tools.h:  constexpr bool operator<(const OSVersion &OSNum) const {
wrapper/tools.h:    return Num() < OSNum.Num();
wrapper/tools.h:  }
wrapper/tools.h:  constexpr bool operator<=(const OSVersion &OSNum) const {
wrapper/tools.h:    return Num() <= OSNum.Num();
wrapper/tools.h:  }
wrapper/tools.h:  constexpr bool operator==(const OSVersion &OSNum) const {
wrapper/tools.h:    return Num() == OSNum.Num();
wrapper/tools.h:  }
wrapper/tools.h:  constexpr bool operator!=(const OSVersion &OSNum) const {
wrapper/tools.h:    return Num() != OSNum.Num();
wrapper/tools.h:  }
wrapper/tools.h:  bool operator!=(const char *val) const {
wrapper/tools.h:    size_t c = 0;
wrapper/tools.h:    const char *p = val;
wrapper/tools.h:    while (*p) {
wrapper/tools.h:      if (*p++ == '.')
wrapper/tools.h:        ++c;
wrapper/tools.h:    }
wrapper/tools.h:    switch (c) {
wrapper/tools.h:    case 1:
wrapper/tools.h:      return shortStr() != val;
wrapper/tools.h:    case 2:
wrapper/tools.h:      return Str() != val;
wrapper/tools.h:    default:
wrapper/tools.h:      return true;
wrapper/tools.h:    }
wrapper/tools.h:  }
wrapper/tools.h:  std::string Str() const {
wrapper/tools.h:    std::stringstream tmp;
wrapper/tools.h:    tmp << major << "." << minor << "." << patch;
wrapper/tools.h:    return tmp.str();
wrapper/tools.h:  }
wrapper/tools.h:  std::string shortStr() const {
wrapper/tools.h:    std::stringstream tmp;
wrapper/tools.h:    tmp << major << "." << minor;
wrapper/tools.h:    return tmp.str();
wrapper/tools.h:  }
wrapper/tools.h:  int major;
wrapper/tools.h:  int minor;
wrapper/tools.h:  int patch;
wrapper/tools.h:};
wrapper/tools.h:static_assert(OSVersion(10, 6) != OSVersion(10, 5), "");
wrapper/tools.h:OSVersion parseOSVersion(const char *OSVer);
wrapper/tools.h:typedef OSVersion GCCVersion;
wrapper/tools.h:static const auto &parseGCCVersion = parseOSVersion;
wrapper/tools.h:typedef OSVersion ClangVersion;
wrapper/tools.h:static const auto &parseClangVersion = parseOSVersion;
wrapper/tools.h:typedef OSVersion LLVMVersion;
wrapper/tools.h:static const auto &parseLLVMVersion = parseOSVersion;
wrapper/tools.h://
wrapper/tools.h:// Compiler Identifier
wrapper/tools.h://
wrapper/tools.h:#undef Compiler
wrapper/tools.h:#undef CLANG
wrapper/tools.h:#undef CLANGXX
wrapper/tools.h:#undef GCC
wrapper/tools.h:#undef GXX
wrapper/tools.h:enum Compiler : int {
wrapper/tools.h:  CLANG,
wrapper/tools.h:  CLANGXX,
wrapper/tools.h:  GCC,
wrapper/tools.h:  GXX,
wrapper/tools.h:  UNKNOWN // Upper-case to avoid clash with "enum Arch"
wrapper/tools.h:};
wrapper/tools.h:inline Compiler getCompilerIdentifier(const char *compilername) {
wrapper/tools.h:  if (!strncmp(compilername, "clang++", 7))
wrapper/tools.h:    return Compiler::CLANGXX;
wrapper/tools.h:  if (!strncmp(compilername, "clang", 5))
wrapper/tools.h:    return Compiler::CLANG;
wrapper/tools.h:  else if (!strncmp(compilername, "g++", 3))
wrapper/tools.h:    return Compiler::GXX;
wrapper/tools.h:  else if (!strncmp(compilername, "gcc", 3))
wrapper/tools.h:    return Compiler::GCC;
wrapper/tools.h:  return Compiler::UNKNOWN;
wrapper/tools.h:}
wrapper/tools.h://
wrapper/tools.h:// Arch
wrapper/tools.h://
wrapper/tools.h:enum Arch {
wrapper/tools.h:  armv4t,
wrapper/tools.h:  armv5,
wrapper/tools.h:  armv6,
wrapper/tools.h:  armv7,
wrapper/tools.h:  armv7f,
wrapper/tools.h:  armv7k,
wrapper/tools.h:  armv7s,
wrapper/tools.h:  armv6m,
wrapper/tools.h:  armv7m,
wrapper/tools.h:  armv7em,
wrapper/tools.h:  armv8,
wrapper/tools.h:  arm64,
wrapper/tools.h:  arm64v8,
wrapper/tools.h:  i386,
wrapper/tools.h:  i486,
wrapper/tools.h:  i586,
wrapper/tools.h:  i686,
wrapper/tools.h:  x86_64,
wrapper/tools.h:  x86_64h, // Haswell
wrapper/tools.h:  ppc,
wrapper/tools.h:  ppc64,
wrapper/tools.h:  unknown
wrapper/tools.h:};
wrapper/tools.h:constexpr const char *ArchNames[] = {
wrapper/tools.h:  "armv4t", "armv5",  "armv6",   "armv7",  "armv7f",  "armv7k",  "armv7s",
wrapper/tools.h:  "amrv6m", "armv7m", "armv7em", "armv8",  "arm64",   "arm64v8", "i386",
wrapper/tools.h:  "i486",   "i586",   "i686",    "x86_64", "x86_64h", "ppc",     "ppc64",
wrapper/tools.h:  "unknown"
wrapper/tools.h:};
wrapper/tools.h:constexpr const char *getArchName(Arch arch) { return ArchNames[arch]; }
wrapper/tools.h:inline Arch parseArch(const char *arch) {
wrapper/tools.h:  size_t i = 0;
wrapper/tools.h:  for (auto archname : ArchNames) {
wrapper/tools.h:    if (!strcmp(arch, archname)) {
wrapper/tools.h:      return static_cast<Arch>(i);
wrapper/tools.h:    }
wrapper/tools.h:    ++i;
wrapper/tools.h:  }
wrapper/tools.h:  return Arch::unknown;
wrapper/tools.h:}
wrapper/tools.h://
wrapper/tools.h:// Standard Library
wrapper/tools.h://
wrapper/tools.h:enum StdLib {
wrapper/tools.h:  unset,
wrapper/tools.h:  libcxx,
wrapper/tools.h:  libstdcxx
wrapper/tools.h:};
wrapper/tools.h:constexpr const char *StdLibNames[] = { "default", "libc++", "libstdc++" };
wrapper/tools.h:constexpr const char *getStdLibString(StdLib stdlib) {
wrapper/tools.h:  return StdLibNames[stdlib];
wrapper/tools.h:}
wrapper/tools.h:} // namespace tools
wrapper/unittests/run.bats:#!/usr/bin/env bats
wrapper/unittests/run.bats:#
wrapper/unittests/run.bats:# Requirements:
wrapper/unittests/run.bats:#  * bats (https://github.com/sstephenson/bats)
wrapper/unittests/run.bats:#  * OSXCRoss >= 0.11 must be in PATH
wrapper/unittests/run.bats:#
wrapper/unittests/run.bats:export OSXCROSS_UNIT_TEST=2
wrapper/unittests/run.bats:export OCDEBUG=1
wrapper/unittests/run.bats:unset OSXCROSS_NO_EXTENSION_WARNINGS
wrapper/unittests/run.bats:unset OSXCROSS_NO_X86_64H_DEPLOYMENT_TARGET_WARNING
wrapper/unittests/run.bats:unset OSXCROSS_GCC_NO_STATIC_RUNTIME
wrapper/unittests/run.bats:unset MACOSX_DEPLOYMENT_TARGET
wrapper/unittests/run.bats:unset OSXCROSS_SDKROOT
wrapper/unittests/run.bats:GCC_INSTALLED=1
wrapper/unittests/run.bats:command -v o64-clang++ >/dev/null 2>&1 || { echo "OSXCross must be in PATH" 1>&2; exit 1; }
wrapper/unittests/run.bats:command -v o64-g++ >/dev/null 2>&1 || GCC_INSTALLED=0
wrapper/unittests/run.bats:if [ $GCC_INSTALLED -eq 1 ]; then
wrapper/unittests/run.bats:  if [ "$(o64-clang++ -foc-run-prog=osxcross-conf 2>/dev/null)" != \
wrapper/unittests/run.bats:      "$(o64-g++ -foc-run-prog=osxcross-conf 2>/dev/null)" ]; then
wrapper/unittests/run.bats:      true
wrapper/unittests/run.bats:    #echo "warning: o64-clang++ and o64-g++ come from different installations; aborting unit testing" 1>&2
wrapper/unittests/run.bats:    GCC_INSTALLED=0
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:fi
wrapper/unittests/run.bats:eval $(osxcross-conf)
wrapper/unittests/run.bats:@test "osxcross-cmp" {
wrapper/unittests/run.bats:  run osxcross-cmp
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  run osxcross-cmp 10.5 '>' 10.6
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "$output" = "0" ]
wrapper/unittests/run.bats:  run osxcross-cmp 10.11 '>' 10.10
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "$output" = "1" ]
wrapper/unittests/run.bats:  run osxcross-cmp 10.11 '>=' 10.12
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "$output" = "0" ]
wrapper/unittests/run.bats:  run osxcross-cmp 10.11 '<=' 10.12
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "$output" = "1" ]
wrapper/unittests/run.bats:  run osxcross-cmp 10.10 '==' 10.10
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "$output" = "1" ]
wrapper/unittests/run.bats:  run osxcross-cmp 10.10 '!=' 10.10
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "$output" = "0" ]
wrapper/unittests/run.bats:  run osxcross-cmp 10.10 '?' 10.10
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  run osxcross-cmp 10.10 '>'
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "cross compiler arguments" {
wrapper/unittests/run.bats:  run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ *clang*\ \(clang++\)\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -target\ x86_64-apple-darwin*\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -mlinker-version=$OSXCROSS_LINKER_VERSION\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -isystem\ */clang/*.*/include\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -isysroot\ */MacOSX10.*.sdk\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -stdlib=*++*\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -mmacosx-version-min=10.* ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -arch\ x86_64\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" != *\ -Wl,-no_compact_unwind\ * ]]
wrapper/unittests/run.bats:  run o32-clang
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ *clang*\ \(clang\)\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -target\ i386-apple-darwin*\ * ]]
wrapper/unittests/run.bats:  if [ $GCC_INSTALLED -eq 1 ]; then
wrapper/unittests/run.bats:    run o64-g++
wrapper/unittests/run.bats:    [ "$status" -eq 0 ]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ *x86_64-apple-darwin*-base-g++*\ \(x86_64-apple-darwin*-g++\)\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -target\ x86_64-apple-darwin*\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -mlinker-version=*\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -isystem\ */clang/*.*/include\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -isysroot\ */MacOSX10.*.sdk\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -stdlib=*++*\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ -mmacosx-version-min=10.* ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ -m64\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ -Wl,-no_compact_unwind\ * ]]
wrapper/unittests/run.bats:    run o32-g++
wrapper/unittests/run.bats:    [ "$status" -eq 0 ]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ *i386-apple-darwin*-base-g++*\ \(i386-apple-darwin*-g++\)\ * ]]
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "OCDEBUG=2" {
wrapper/unittests/run.bats:  OCDEBUG=2 run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *debug:\ detected\ target\ triple:\ *-apple-darwin* ]]
wrapper/unittests/run.bats:  [[ "${lines[1]}" == *debug:\ detected\ compiler:\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[2]}" == *debug:\ detected\ stdlib:\ * ]]
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "argv[0] parsing" {
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=x86_64-apple-darwin999999-clang++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *warning:\ this\ wrapper\ was\ built\ for\ target\ \'darwin*\' ]]
wrapper/unittests/run.bats:  [[ "${lines[1]}" == *error:\ cannot\ find\ Mac\ OS\ X\ SDK\ \(expected\ in:\ */SDK/MacOSX10.999995.sdk\) ]]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=x86_64-apple-$OSXCROSS_TARGET-gcc run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ -z "$OUTPUT" ]]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=x86_64-apple-$OSXCROSS_TARGET-g++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ -z "$OUTPUT" ]]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=x86_64-apple-$OSXCROSS_TARGET-cc run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ -z "$OUTPUT" ]]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=x86_64-apple-$OSXCROSS_TARGET-c++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ -z "$OUTPUT" ]]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=i386-apple-$OSXCROSS_TARGET-clang++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=i486-apple-$OSXCROSS_TARGET-clang++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=i586-apple-$OSXCROSS_TARGET-clang++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=i686-apple-$OSXCROSS_TARGET-clang++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=i786-apple-$OSXCROSS_TARGET-clang++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=armv6-apple-$OSXCROSS_TARGET-clang++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=x86_64-mapple-$OSXCROSS_TARGET-clang++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=x86_64-apple-ddarwin13-clang++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=x86_64-apple--clang++ run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=x86_64-apple-$OSXCROSS_TARGET-foo run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *warning:\ unknown\ compiler\ \'foo\' ]]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME= run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  OSXCROSS_PROG_NAME=? run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "command line parsing" {
wrapper/unittests/run.bats:  run o64-clang++ -mmacosx-version-min=10.4 -g -I test1 -march=native -Itest2 -O2 \
wrapper/unittests/run.bats:                  -xc-header -x c++-header -stdlib=libstdc++ -stdlib=default -stdlib=libstdc++ \
wrapper/unittests/run.bats:                  -otest1 -o test2 foo.cpp -c
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -mmacosx-version-min=10.4*\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -g\ *\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -I\ test1\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -march=native\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -Itest2\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -O2\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -xc-header\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -x\ c++-header\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" != *\ -stdlib=default\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -otest1\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -o\ test2\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ foo.cpp\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -c\ * ]]
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "-mmacosx-version-min/MACOSX_DEPLOYMENT_TARGET" {
wrapper/unittests/run.bats:  run o64-clang++ -mmacosx-version-min=10.10000
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *error:\ targeted\ OS\ X\ version\ must\ be\ \<=\ 10.*.0\ \(SDK\) ]]
wrapper/unittests/run.bats:  run o64-clang++ -mmacosx-version-min=abc
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *warning:\ \'-mmacosx-version-min=\'\ \(0.0.0\ !=\ abc\) ]]
wrapper/unittests/run.bats:  [[ "${lines[1]}" != *\ -mmacosx-version-min=abc\ * ]]
wrapper/unittests/run.bats:  [[ "${lines[1]}" != *\ -mmacosx-version-min=0.0*\ * ]]
wrapper/unittests/run.bats:  run o64-clang++ -mmacosx-version-min=10.0
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *targeted\ OS\ X\ version\ must\ be\ \>=\ 10.4 ]]
wrapper/unittests/run.bats:  run o64-clang++ -mmacosx-version-min=10.0 -mmacosx-version-min=$OSXCROSS_SDK_VERSION
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -mmacosx-version-min=$OSXCROSS_SDK_VERSION.*\ * ]]
wrapper/unittests/run.bats:  MACOSX_DEPLOYMENT_TARGET=10.4 run o64-clang++ -mmacosx-version-min=10.0 -mmacosx-version-min=10.4
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -mmacosx-version-min=10.4.*\ * ]]
wrapper/unittests/run.bats:  MACOSX_DEPLOYMENT_TARGET=10.4 run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -mmacosx-version-min=10.4.*\ * ]]
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "-stdlib/-stdc++/-gstdc++/-foc-use-gcc-libstdc++/-libc++" {
wrapper/unittests/run.bats:  function libcxx()
wrapper/unittests/run.bats:  {
wrapper/unittests/run.bats:    run $@
wrapper/unittests/run.bats:    if [[ "$@" == *-mmacosx-version-min=10.4* ]]; then
wrapper/unittests/run.bats:      [ "$status" -ne 0 ]
wrapper/unittests/run.bats:      [[ "${lines[0]}" == *error:\ libc++\ requires\ \'-mmacosx-version-min=10.7\'\ \(or\ later\) ]]
wrapper/unittests/run.bats:    else
wrapper/unittests/run.bats:      [ "$status" -eq 0 ]
wrapper/unittests/run.bats:      if [[ $1 == *clang++* ]]; then
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -cxx-isystem\ */SDK/MacOSX10.*.sdk/usr/include/c++/v1\ * ]]
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -stdlib=libc++\ * ]]
wrapper/unittests/run.bats:        [[ "${lines[0]}" != *\ -stdlib=libstdc++\ * ]]
wrapper/unittests/run.bats:      else
wrapper/unittests/run.bats:        if [[ "$@" == *-stdlib* ]]; then
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *warning:\ \'-stdlib=\'\ is\ an\ osxcross\ extension* ]]
wrapper/unittests/run.bats:        else
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ -nostdinc++\ -nodefaultlibs\ -lc\ -lc++\ -lgcc_s.10.5\ * ]]
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ -isystem\ */SDK/MacOSX10.*.sdk/usr/include/c++/v1\ * ]]
wrapper/unittests/run.bats:        fi
wrapper/unittests/run.bats:      fi
wrapper/unittests/run.bats:    fi
wrapper/unittests/run.bats:  }
wrapper/unittests/run.bats:  if [ $(osxcross-cmp $OSXCROSS_SDK_VERSION '>=' 10.7) -eq 1 ]; then
wrapper/unittests/run.bats:    libcxx "o64-clang++" "-stdlib=libc++"
wrapper/unittests/run.bats:    libcxx "o64-clang++-libc++"
wrapper/unittests/run.bats:    libcxx "o64-clang++-libc++" "-mmacosx-version-min=10.4"
wrapper/unittests/run.bats:    if [ $GCC_INSTALLED -eq 1 ]; then
wrapper/unittests/run.bats:      libcxx "o64-g++-libc++"
wrapper/unittests/run.bats:      libcxx "o64-g++" "-stdlib=libc++"
wrapper/unittests/run.bats:      libcxx "o64-g++" "-stdlib=libc++"
wrapper/unittests/run.bats:    fi
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:  function stdcxx()
wrapper/unittests/run.bats:  {
wrapper/unittests/run.bats:    run $@
wrapper/unittests/run.bats:    [ "$status" -eq 0 ]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ -stdlib=libstdc++\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -stdlib=libc++\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -cxx-isystem\ */SDK/MacOSX10.*.sdk/usr/include/c++/v1\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ -cxx-isystem\ */SDK/MacOSX10.*.sdk/usr/include/c++/4.*\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ -cxx-isystem\ */SDK/MacOSX10.*.sdk/usr/include/c++/4.*/*-apple-darwin*\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ -cxx-isystem\ */SDK/MacOSX10.*.sdk/usr/include/c++/4.*/backward\ * ]]
wrapper/unittests/run.bats:  }
wrapper/unittests/run.bats:  stdcxx "o64-clang++" "-stdlib=libstdc++"
wrapper/unittests/run.bats:  stdcxx "o64-clang++-stdc++"
wrapper/unittests/run.bats:  run o64-clang++-stdc++ -stdlib=libc++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *warning:\ ignoring\ \'-stdlib=libc++\' ]]
wrapper/unittests/run.bats:  function gstdcxx()
wrapper/unittests/run.bats:  {
wrapper/unittests/run.bats:    run $@
wrapper/unittests/run.bats:    if [[ "${lines[0]}" == *error:\ \'-foc-use-gcc-libstdc++\'\ requires\ gcc\ to\ be\ installed\ \(./build_gcc.sh\) ]];
wrapper/unittests/run.bats:    then
wrapper/unittests/run.bats:      [ "$status" -ne 0 ]
wrapper/unittests/run.bats:    else
wrapper/unittests/run.bats:      [ "$status" -eq 0 ]
wrapper/unittests/run.bats:      if [[ $1 == *clang++* ]]; then
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -Qunused-arguments\ * ]]
wrapper/unittests/run.bats:      fi
wrapper/unittests/run.bats:      [[ "${lines[0]}" == *\ -cxx-isystem\ */x86_64-apple-darwin*/include/c++/*.*\ * ]]
wrapper/unittests/run.bats:      [[ "${lines[0]}" == *\ -cxx-isystem\ */x86_64-apple-darwin*/include/c++/*.*/x86_64-apple-darwin*\ *  ]]
wrapper/unittests/run.bats:      [[ "${lines[0]}" == *\ -cxx-isystem\ */x86_64-apple-darwin*/include/c++/*.*/backward\ * ]]
wrapper/unittests/run.bats:      if [[ $1 == *++  ]]; then
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -nostdinc++\ * ]]
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -stdlib=libstdc++\ * ]]
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -nodefaultlibs\ * ]]
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -Wl,-no_compact_unwind\ * ]]
wrapper/unittests/run.bats:        if [ -n "$OSXCROSS_GCC_NO_STATIC_RUNTIME" ]; then
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ -L\ */lib/gcc/x86_64-apple-darwin*/*.*\ * ]]
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ -L\ */x86_64-apple-darwin*/lib*\ * ]]
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ -l\ stdc++\ * ]]
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ -l\ supc++\ * ]]
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ -l\ gcc\ * ]]
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ -l\ gcc_eh\ * ]]
wrapper/unittests/run.bats:        else
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ */x86_64-apple-darwin*/lib*/libstdc++.a\ * ]]
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ */x86_64-apple-darwin*/lib*/libsupc++.a\ * ]]
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ */lib/gcc/x86_64-apple-darwin*/*.*/libgcc.a\ * ]]
wrapper/unittests/run.bats:          [[ "${lines[0]}" == *\ */lib/gcc/x86_64-apple-darwin*/*.*/libgcc_eh.a\ * ]]
wrapper/unittests/run.bats:        fi
wrapper/unittests/run.bats:      else
wrapper/unittests/run.bats:        [[ "${lines[0]}" != *\ -l\ stdc++\ * ]]
wrapper/unittests/run.bats:        [[ "${lines[0]}" != *\ -l\ supc++\ * ]]
wrapper/unittests/run.bats:        [[ "${lines[0]}" != *\ *libstdc++.a\ * ]]
wrapper/unittests/run.bats:        [[ "${lines[0]}" != *\ *libsupc++.a\ * ]]
wrapper/unittests/run.bats:      fi
wrapper/unittests/run.bats:    fi
wrapper/unittests/run.bats:  }
wrapper/unittests/run.bats:  gstdcxx "o64-clang++" "-foc-use-gcc-libstdc++"
wrapper/unittests/run.bats:  gstdcxx "o64-clang" "-foc-use-gcc-libstdc++"
wrapper/unittests/run.bats:  gstdcxx "o64-clang++-gstdc++" "-foc-use-gcc-libstdc++"
wrapper/unittests/run.bats:  gstdcxx "o32-clang++-gstdc++" "-foc-use-gcc-libstdc++"
wrapper/unittests/run.bats:  OSXCROSS_GCC_NO_STATIC_RUNTIME=1 gstdcxx "o64-clang++" "-foc-use-gcc-libstdc++"
wrapper/unittests/run.bats:  OSXCROSS_GCC_NO_STATIC_RUNTIME=1 gstdcxx "o64-clang++" "-foc-use-gcc-libstdc++" "-m32"
wrapper/unittests/run.bats:  if [ $GCC_INSTALLED -eq 1 ]; then
wrapper/unittests/run.bats:    run o64-g++
wrapper/unittests/run.bats:    [ "$status" -eq 0 ]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ -static-libgcc\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ -static-libstdc++\ * ]]
wrapper/unittests/run.bats:    OSXCROSS_GCC_NO_STATIC_RUNTIME=1 run o64-g++
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -static-libgcc\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -static-libstdc++\ * ]]
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:  run o64-clang++ -stdlib=default
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" != *\ -stdlib=default\ * ]]
wrapper/unittests/run.bats:  run o64-clang++ -stdlib=foo
wrapper/unittests/run.bats:  [ "$status" -eq 1 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *error:\ value\ of\ \'-stdlib=\'\ must\ be\ \'default\',\ \'libc++\'\ or\ \'libstdc++\' ]]
wrapper/unittests/run.bats:  if [ $(osxcross-cmp $OSXCROSS_SDK_VERSION "<" 10.7) -eq 1 ]; then
wrapper/unittests/run.bats:    run o64-clang++ -stdlib=libc++
wrapper/unittests/run.bats:    [ "$status" -ne 0 ]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *error:\ libc++\ requires\ Mac\ OS\ X\ SDK\ 10.7\ \(or\ later\) ]]
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "precompiled headers" {
wrapper/unittests/run.bats:  function gch()
wrapper/unittests/run.bats:  {
wrapper/unittests/run.bats:    run $@
wrapper/unittests/run.bats:    [ "$status" -eq 0 ]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -l* ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -Wl,* ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ *.a* ]]
wrapper/unittests/run.bats:  }
wrapper/unittests/run.bats:  gch o64-clang -x c-header
wrapper/unittests/run.bats:  if [ $GCC_INSTALLED -eq 1 ]; then
wrapper/unittests/run.bats:    gch o64-clang++-gstdc++ -xc++-header
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:  if [ $GCC_INSTALLED -eq 1 ]; then
wrapper/unittests/run.bats:    gch o64-g++ -xc++-header
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "-arch/-m32/-m64/-m16/-mx32" {
wrapper/unittests/run.bats:  run o64-clang++ -arch x86_64 -arch i386 -arch x86_64 -arch i386
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -arch\ x86_64\ \-arch\ i386\ * ]]
wrapper/unittests/run.bats:  run o64-clang++ -m16
wrapper/unittests/run.bats:  [ "$status" -eq 1 ]
wrapper/unittests/run.bats:  run o64-clang++ -mx32
wrapper/unittests/run.bats:  [ "$status" -eq 1 ]
wrapper/unittests/run.bats:  run o64-clang++ -arch x86_64h
wrapper/unittests/run.bats:  [ "$status" -eq 0 ] || [[ "${lines[0]}" == *error:\ \'x86_64\'\ requires\ Mac\ OS\ X\ SDK\ 10.8\ \(or\ later\) ]]
wrapper/unittests/run.bats:  run o64-clang++ -arch foo
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *warning:\ \'-arch\':\ \unknown\ architecture\ \'foo\' ]]
wrapper/unittests/run.bats:  [[ "${lines[1]}" == *warning:\ \'-arch\':\ \'foo\'\ !=\ \'unknown\' ]]
wrapper/unittests/run.bats:  [[ "${lines[2]}" == *error:\ unsupported\ architecture:\ \'unknown\' ]]
wrapper/unittests/run.bats:  run o64-clang++ -arch armv7
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *error:\ unsupported\ architecture:\ \'armv7\' ]]
wrapper/unittests/run.bats:  run o64-clang++ -arch i386
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" != *\ -arch\ x86_64\ * ]]
wrapper/unittests/run.bats:  run o64-clang++ -m32
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *\ -arch\ i386\ * ]]
wrapper/unittests/run.bats:  if [ $(osxcross-cmp $OSXCROSS_SDK_VERSION '>=' 10.8) -eq 1 ]; then
wrapper/unittests/run.bats:    run o64-clang++ -arch x86_64h -mmacosx-version-min=10.7
wrapper/unittests/run.bats:    [ "$status" -eq 0 ]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *warning:\ \'-mmacosx-version-min=\'\ should\ be\ \'\>=\ 10.8\'\ for\ architecture\ \'x86_64h\' ]]
wrapper/unittests/run.bats:    OSXCROSS_NO_X86_64H_DEPLOYMENT_TARGET_WARNING=1 run o64-clang++ -arch x86_64h -mmacosx-version-min=10.7
wrapper/unittests/run.bats:    [ "$status" -eq 0 ]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *warning:\ * ]]
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:  if [ $GCC_INSTALLED -eq 1 ]; then
wrapper/unittests/run.bats:    run o64-g++ -arch x86_64 -arch i386 -arch x86_64 -arch i386
wrapper/unittests/run.bats:    [ "$status" -eq 0 ]
wrapper/unittests/run.bats:    [[ "${lines[0]}" == *\ -m32\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -m64\ * ]]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *\ -arch\ * ]]
wrapper/unittests/run.bats:    if [ $(osxcross-cmp $OSXCROSS_SDK_VERSION ">=" 10.8) -eq 1 ]; then
wrapper/unittests/run.bats:      run o64-g++ -arch x86_64h
wrapper/unittests/run.bats:      [ "$status" -eq 1 ]
wrapper/unittests/run.bats:      [[ "${lines[0]}" == *error:\ gcc\ does\ not\ support\ architecture\ \'x86_64h\' ]]
wrapper/unittests/run.bats:    fi
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "bad include path warning" {
wrapper/unittests/run.bats:  if [ $(uname -s) == "Darwin" ]; then
wrapper/unittests/run.bats:    skip "Not supported"
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:  run o64-clang++ -I/usr/..////////usr//include
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *warning:\ possibly\ dangerous\ include\ path\ specified:\ \'-I\ /usr/..////////usr//include\'\ \(/usr/include\) ]]
wrapper/unittests/run.bats:  [[ "${lines[1]}" == *info:\ you\ can\ silence\ this\ warning\ via\ \'OSXCROSS_NO_INCLUDE_PATH_WARNINGS=1\'\ \(env\)* ]]
wrapper/unittests/run.bats:  [[ "${lines[2]}" == *\ -I/usr/..////////usr//include\ * ]]
wrapper/unittests/run.bats:  if [ $GCC_INSTALLED -eq 1 ]; then
wrapper/unittests/run.bats:    OSXCROSS_NO_INCLUDE_PATH_WARNINGS=1 run o64-g++ -I/usr/include
wrapper/unittests/run.bats:    [ "$status" -eq 0 ]
wrapper/unittests/run.bats:    [[ "${lines[0]}" != *warning:\ * ]]
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "OSXCROSS_MP_INC" {
wrapper/unittests/run.bats:  if [ -d "${OSXCROSS_TARGET_DIR}/macports" ]; then
wrapper/unittests/run.bats:    function macports()
wrapper/unittests/run.bats:    {
wrapper/unittests/run.bats:      run $@
wrapper/unittests/run.bats:      [ "$status" -eq 0 ]
wrapper/unittests/run.bats:      if [ -d "${OSXCROSS_TARGET_DIR}/macports/pkgs/opt/local/include" ]; then
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -isystem\ */macports/pkgs/opt/local/include\ * ]]
wrapper/unittests/run.bats:      fi
wrapper/unittests/run.bats:      if  [ -d "${OSXCROSS_TARGET_DIR}/macports/pkgs/opt/local/lib" ]; then
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -L\ */macports/pkgs/opt/local/lib\ * ]]
wrapper/unittests/run.bats:      fi
wrapper/unittests/run.bats:      if  [ -d "${OSXCROSS_TARGET_DIR}/macports/pkgs/opt/local/Library/Frameworks" ]; then
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -iframework\ */macports/pkgs/opt/local/Library/Frameworks\ * ]]
wrapper/unittests/run.bats:      fi
wrapper/unittests/run.bats:      if [[ $1 == *clang++* ]]; then
wrapper/unittests/run.bats:        [[ "${lines[0]}" == *\ -Qunused-arguments\ * ]]
wrapper/unittests/run.bats:      fi
wrapper/unittests/run.bats:    }
wrapper/unittests/run.bats:    OSXCROSS_MP_INC=1 macports o64-clang++
wrapper/unittests/run.bats:    if [ $GCC_INSTALLED -eq 1 ]; then
wrapper/unittests/run.bats:      OSXCROSS_MP_INC=1 macports o64-g++
wrapper/unittests/run.bats:    fi
wrapper/unittests/run.bats:  fi
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "OSXCROSS_SDKROOT" {
wrapper/unittests/run.bats:  OSXCROSS_SDKROOT=/dev/null/MacOSX10.10.sdk run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *error:\ cannot\ find\ Mac\ OS\ X\ SDK\ \(expected\ in:\ /dev/null/MacOSX10.10.sdk\) ]]
wrapper/unittests/run.bats:  OSXCROSS_SDKROOT=$OSXCROSS_SDK run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "OSXCROSS_SDK_SEARCH_DIR" {
wrapper/unittests/run.bats:  OSXCROSS_SDK_SEARCH_DIR=/dev/null run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *error:\ no\ SDK\ found\ in\ \'/dev/null\' ]]
wrapper/unittests/run.bats:  OSXCROSS_SDK_SEARCH_DIR=$OSXCROSS_SDK/.. run o64-clang++
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "xcrun" {
wrapper/unittests/run.bats:  run xcrun -sdk
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *error:\ too\ few\ arguments\ for\ \'-sdk\' ]]
wrapper/unittests/run.bats:  run xcrun -sdk /
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  run xcrun -sdk /dev/null
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *error:\ xcrun:\ \'-sdk\':\ expected\ Mac\ OS\ X\ SDK ]]
wrapper/unittests/run.bats:  OSXCROSS_SDKROOT=/dev/null/MacOSX10.9.sdk SDKROOT=/dev/null/MacOSX10.10.sdk run xcrun
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *error:\ xcrun:\ \'-sdk\':\ directory\ \'/dev/null/MacOSX10.10.sdk\'\ does\ not\ exist ]]
wrapper/unittests/run.bats:  run xcrun -sdk $OSXCROSS_SDK clang
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == *debug:\ \<--\ * ]]
wrapper/unittests/run.bats:  run xcrun -f clang
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == */bin/x86_64-apple-darwin*-clang ]]
wrapper/unittests/run.bats:  run xcrun -find /usr/bin/ld
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == */bin/x86_64-apple-darwin*-ld ]]
wrapper/unittests/run.bats:  run xcrun -show-sdk-path -show-sdk-version
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "${lines[0]}" == "$OSXCROSS_SDK" ]
wrapper/unittests/run.bats:  [ "${lines[1]}" == "$OSXCROSS_SDK_VERSION" ]
wrapper/unittests/run.bats:  xcrun_log=1 run xcrun clang
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == */bin/x86_64-apple-darwin*-clang ]]
wrapper/unittests/run.bats:  run xcrun -log -l clang
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[1]}" == *debug:\ \<--\ * ]]
wrapper/unittests/run.bats:  run xcrun -run clang
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  run xcrun -r clang
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  run xcrun -foo
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:  run xcrun -k -kill-cache -n -no-cache -toolchain / -v -verbose -h -help
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:}
wrapper/unittests/run.bats:@test "sw_vers" {
wrapper/unittests/run.bats:  run sw_vers
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "${lines[0]}"  == "ProductName:    Mac OS X" ]
wrapper/unittests/run.bats:  [ "${lines[1]}"  == "ProductVersion: $OSXCROSS_OSX_VERSION_MIN" ]
wrapper/unittests/run.bats:  [[ "${lines[2]}" ==  BuildVersion:\ \ \ * ]]
wrapper/unittests/run.bats:  run sw_vers -productName
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "${lines[0]}"  == "Mac OS X" ]
wrapper/unittests/run.bats:  OSXCROSS_SW_VERS_OSX_VERSION=10.15 MACOSX_DEPLOYMENT_TARGET=10.16 run sw_vers -productVersion
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "${lines[0]}"  == "10.15" ]
wrapper/unittests/run.bats:  MACOSX_DEPLOYMENT_TARGET=10.16 run sw_vers -productVersion
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [ "${lines[0]}"  == "10.16" ]
wrapper/unittests/run.bats:  run sw_vers -buildVersion
wrapper/unittests/run.bats:  [ "$status" -eq 0 ]
wrapper/unittests/run.bats:  [[ "${lines[0]}" == * ]]
wrapper/unittests/run.bats:  run sw_vers -foo
wrapper/unittests/run.bats:  [ "$status" -ne 0 ]
wrapper/unittests/run.bats:}
wrapper/wrapper.project:<?xml version="1.0" encoding="UTF-8"?>
wrapper/wrapper.project:<CodeLite_Project Name="wrapper" InternalType="">
wrapper/wrapper.project:  <Plugins>
wrapper/wrapper.project:    <Plugin Name="qmake">
wrapper/wrapper.project:      <![CDATA[00020001N0005Debug0000000000000001N0007Release000000000000]]>
wrapper/wrapper.project:    </Plugin>
wrapper/wrapper.project:    <Plugin Name="CMakePlugin">
wrapper/wrapper.project:      <![CDATA[[{
wrapper/wrapper.project:  "name": "Debug",
wrapper/wrapper.project:  "enabled": false,
wrapper/wrapper.project:  "buildDirectory": "build",
wrapper/wrapper.project:  "sourceDirectory": "$(ProjectPath)",
wrapper/wrapper.project:  "generator": "",
wrapper/wrapper.project:  "buildType": "",
wrapper/wrapper.project:  "arguments": [],
wrapper/wrapper.project:  "parentProject": ""
wrapper/wrapper.project: }, {
wrapper/wrapper.project:  "name": "Release",
wrapper/wrapper.project:  "enabled": false,
wrapper/wrapper.project:  "buildDirectory": "build",
wrapper/wrapper.project:  "sourceDirectory": "$(ProjectPath)",
wrapper/wrapper.project:  "generator": "",
wrapper/wrapper.project:  "buildType": "",
wrapper/wrapper.project:  "arguments": [],
wrapper/wrapper.project:  "parentProject": ""
wrapper/wrapper.project: }]]]>
wrapper/wrapper.project:    </Plugin>
wrapper/wrapper.project:  </Plugins>
wrapper/wrapper.project:  <Description/>
wrapper/wrapper.project:  <Dependencies/>
wrapper/wrapper.project:  <VirtualDirectory Name="src">
wrapper/wrapper.project:    <File Name="tools.h"/>
wrapper/wrapper.project:    <File Name="tools.cpp"/>
wrapper/wrapper.project:    <File Name="target.h"/>
wrapper/wrapper.project:    <File Name="target.cpp"/>
wrapper/wrapper.project:    <File Name="progs.h"/>
wrapper/wrapper.project:    <File Name="main.cpp"/>
wrapper/wrapper.project:    <File Name="compat.h"/>
wrapper/wrapper.project:    <VirtualDirectory Name="programs">
wrapper/wrapper.project:      <File Name="programs/sw_vers.cpp"/>
wrapper/wrapper.project:      <File Name="programs/proginc.h"/>
wrapper/wrapper.project:      <File Name="programs/pkg-config.cpp"/>
wrapper/wrapper.project:      <File Name="programs/osxcross-version.cpp"/>
wrapper/wrapper.project:      <File Name="programs/osxcross-env.cpp"/>
wrapper/wrapper.project:      <File Name="programs/osxcross-conf.cpp"/>
wrapper/wrapper.project:      <File Name="programs/osxcross-cmp.cpp"/>
wrapper/wrapper.project:      <File Name="programs/xcrun.cpp"/>
wrapper/wrapper.project:      <File Name="programs/osxcross-man.cpp"/>
wrapper/wrapper.project:      <File Name="programs/dsymutil.cpp"/>
wrapper/wrapper.project:    </VirtualDirectory>
wrapper/wrapper.project:    <File Name="Makefile"/>
wrapper/wrapper.project:    <File Name="build.sh"/>
wrapper/wrapper.project:  </VirtualDirectory>
wrapper/wrapper.project:  <Settings Type="Dynamic Library">
wrapper/wrapper.project:    <GlobalSettings>
wrapper/wrapper.project:      <Compiler Options="" C_Options="" Assembler="">
wrapper/wrapper.project:        <IncludePath Value="."/>
wrapper/wrapper.project:      </Compiler>
wrapper/wrapper.project:      <Linker Options="">
wrapper/wrapper.project:        <LibraryPath Value="."/>
wrapper/wrapper.project:      </Linker>
wrapper/wrapper.project:      <ResourceCompiler Options=""/>
wrapper/wrapper.project:    </GlobalSettings>
wrapper/wrapper.project:    <Configuration Name="Debug" CompilerType="clang++" DebuggerType="GNU gdb debugger" Type="Dynamic Library" BuildCmpWithGlobalSettings="append" BuildLnkWithGlobalSettings="append" BuildResWithGlobalSettings="append">
wrapper/wrapper.project:      <Compiler Options="-g" C_Options="-g" Assembler="" Required="yes" PreCompiledHeader="" PCHInCommandLine="no" PCHFlags="" PCHFlagsPolicy="0">
wrapper/wrapper.project:        <IncludePath Value="."/>
wrapper/wrapper.project:      </Compiler>
wrapper/wrapper.project:      <Linker Options="" Required="yes"/>
wrapper/wrapper.project:      <ResourceCompiler Options="" Required="no"/>
wrapper/wrapper.project:      <General OutputFile="" IntermediateDirectory="./Debug" Command="" CommandArguments="" UseSeparateDebugArgs="no" DebugArguments="" WorkingDirectory="$(IntermediateDirectory)" PauseExecWhenProcTerminates="yes" IsGUIProgram="no" IsEnabled="yes"/>
wrapper/wrapper.project:      <Environment EnvVarSetName="&lt;Use Defaults&gt;" DbgSetName="&lt;Use Defaults&gt;">
wrapper/wrapper.project:        <![CDATA[]]>
wrapper/wrapper.project:      </Environment>
wrapper/wrapper.project:      <Debugger IsRemote="no" RemoteHostName="" RemoteHostPort="" DebuggerPath="" IsExtended="no">
wrapper/wrapper.project:        <DebuggerSearchPaths/>
wrapper/wrapper.project:        <PostConnectCommands/>
wrapper/wrapper.project:        <StartupCommands/>
wrapper/wrapper.project:      </Debugger>
wrapper/wrapper.project:      <PreBuild/>
wrapper/wrapper.project:      <PostBuild/>
wrapper/wrapper.project:      <CustomBuild Enabled="yes">
wrapper/wrapper.project:        <RebuildCommand/>
wrapper/wrapper.project:        <CleanCommand>make clean</CleanCommand>
wrapper/wrapper.project:        <BuildCommand>./build.sh</BuildCommand>
wrapper/wrapper.project:        <PreprocessFileCommand/>
wrapper/wrapper.project:        <SingleFileCommand/>
wrapper/wrapper.project:        <MakefileGenerationCommand/>
wrapper/wrapper.project:        <ThirdPartyToolName>None</ThirdPartyToolName>
wrapper/wrapper.project:        <WorkingDirectory>$(WorkspacePath)</WorkingDirectory>
wrapper/wrapper.project:      </CustomBuild>
wrapper/wrapper.project:      <AdditionalRules>
wrapper/wrapper.project:        <CustomPostBuild/>
wrapper/wrapper.project:        <CustomPreBuild/>
wrapper/wrapper.project:      </AdditionalRules>
wrapper/wrapper.project:      <Completion EnableCpp11="no" EnableCpp14="no">
wrapper/wrapper.project:        <ClangCmpFlagsC/>
wrapper/wrapper.project:        <ClangCmpFlags/>
wrapper/wrapper.project:        <ClangPP/>
wrapper/wrapper.project:        <SearchPaths/>
wrapper/wrapper.project:      </Completion>
wrapper/wrapper.project:    </Configuration>
wrapper/wrapper.project:  </Settings>
wrapper/wrapper.project:</CodeLite_Project>
wrapper/wrapper.workspace:<?xml version="1.0" encoding="UTF-8"?>
wrapper/wrapper.workspace:<CodeLite_Workspace Name="wrapper" Database="wrapper.tags" SWTLW="No">
wrapper/wrapper.workspace:  <Project Name="wrapper" Path="./wrapper.project" Active="Yes"/>
wrapper/wrapper.workspace:  <BuildMatrix>
wrapper/wrapper.workspace:    <WorkspaceConfiguration Name="Debug" Selected="yes">
wrapper/wrapper.workspace:      <Project Name="wrapper" ConfigName="Debug"/>
wrapper/wrapper.workspace:    </WorkspaceConfiguration>
wrapper/wrapper.workspace:  </BuildMatrix>
wrapper/wrapper.workspace:</CodeLite_Workspace>
Makefile:PORT ?= 4343
Makefile:GOENV ?= GO15VENDOREXPERIMENT=1
Makefile:GO ?= $(GOENV) go
Makefile:COMPOSE_TARGET ?=
Makefile:ADMIN_PASSWORD ?= radioman
Makefile:COMPOSE_ENV ?= ICECAST_SOURCE_PASSWORD="$(ADMIN_PASSWORD)" ICECAST_ADMIN_PASSWORD="$(ADMIN_PASSWORD)" ICECAST_PASSWORD="$(ADMIN_PASSWORD)" ICECAST_RELAY_PASSWORD="$(ADMIN_PASSWORD)"
Makefile:SOURCES := $(shell find . -name "*.go")
Makefile:DOCKER_HOST ?= tcp://127.0.0.1:2376
Makefile:DOCKER_HOST_IP := $(shell echo $(DOCKER_HOST) | cut -d/ -f3 | cut -d: -f1)
Makefile:DOCKER_COMPOSE ?= docker-compose -pradioman
Makefile:RADIOMAND := radiomand-$(shell uname -s)-$(shell uname -m)
Makefile:all: build
Makefile:.PHONY: build
Makefile:build: $(RADIOMAND)
Makefile:.PHONY: godep-save
Makefile:godep-save:
Makefile:	cd radioman; godep save $(shell go list ./...| grep -v vendor)
Makefile:.PHONY: docker-telnet
Makefile:docker-telnet:
Makefile:	socat readline TCP:$(DOCKER_HOST_IP):2300
Makefile:.PHONY: test-liquidsoap-config
Makefile:test-liquidsoap-config:
Makefile:	docker run -it -u liquidsoap --rm -v "$(PWD)/liquidsoap:/liquidsoap" moul/liquidsoap liquidsoap --verbose --debug /liquidsoap/main.liq
Makefile:.PHONY: docker-exec-liquidsoap
Makefile:docker-exec-liquidsoap:
Makefile:	docker exec -it `docker-compose ps -q liquidsoap` /bin/bash
Makefile:.PHONY: docker-exec-radiomand
Makefile:docker-exec-radiomand:
Makefile:	docker exec -it `docker-compose ps -q radiomand` /bin/bash
Makefile:.PHONY: docker-exec-icecast
Makefile:docker-exec-icecast:
Makefile:	docker exec -it `docker-compose ps -q icecast` /bin/bash
Makefile:$(RADIOMAND): $(SOURCES)
Makefile:	$(GO) build -o $@ ./radioman/cmd/radiomand
Makefile:.PHONY: compose
Makefile:compose:
Makefile:	$(DOCKER_COMPOSE) build radiomand
Makefile:	$(DOCKER_COMPOSE) kill
Makefile:	$(DOCKER_COMPOSE) rm -fv
Makefile:	$(COMPOSE_ENV) $(DOCKER_COMPOSE) up -d $(COMPOSE_TARGET)
Makefile:	$(DOCKER_COMPOSE) logs $(COMPOSE_TARGET)
Makefile:.PHONY: gin
Makefile:gin:
Makefile:	$(GO) get github.com/codegangsta/gin
Makefile:	cd radioman/cmd/radiomand; WEBDIR=../../web $(GOENV) gin --immediate --port=$(PORT) ./main.go
Makefile:.PHONY: clean
Makefile:clean:
Makefile:	rm -f radiomand-*-*
Makefile:	find . -name gin-bin -delete
Makefile:	$(DOCKER_COMPOSE) kill
Makefile:	$(DOCKER_COMPOSE) rm -fv
liquidsoap/main.liq:#!/usr/bin/env liquidsoap
liquidsoap/main.liq:# Configure logging
liquidsoap/main.liq:set("log.file", false)
liquidsoap/main.liq:#set("log.file.path", "...")
liquidsoap/main.liq:set("log.stdout", true)
liquidsoap/main.liq:set("log.level", 4)
liquidsoap/main.liq:# Configure Telnet server
liquidsoap/main.liq:set("server.telnet", true)
liquidsoap/main.liq:set("server.telnet.port", 2300)
liquidsoap/main.liq:set("server.telnet.bind_addr", "0.0.0.0")
liquidsoap/main.liq:# Tuning
liquidsoap/main.liq:set("audio.converter.samplerate.libsamplerate.quality", "best")
liquidsoap/main.liq:set("buffer.path", "/tmp")
liquidsoap/main.liq:set("decoding.buffer_length", 10.)
liquidsoap/main.liq:# Telnet variables
liquidsoap/main.liq:radiomand_url = interactive.string("radiomand_url", "http://127.0.0.1:8000")
liquidsoap/main.liq:# Helpers
liquidsoap/main.liq:def request_radiomand(path) =
liquidsoap/main.liq:    command = "wget -qO - #{radiomand_url()}/#{path}"
liquidsoap/main.liq:    log("Executing: #{command}")
liquidsoap/main.liq:    get_process_lines(command)
liquidsoap/main.liq:end
liquidsoap/main.liq:# Input
liquidsoap/main.liq:requests = request.queue(id="request")
liquidsoap/main.liq:scheduler = request.dynamic(
liquidsoap/main.liq:    id="scheduler",
liquidsoap/main.liq:    fun () ->
liquidsoap/main.liq:        request.create(
liquidsoap/main.liq:            list.hd(
liquidsoap/main.liq:                request_radiomand("api/liquidsoap/getNextSong")
liquidsoap/main.liq:            )
liquidsoap/main.liq:        )
liquidsoap/main.liq:    )
liquidsoap/main.liq:source = fallback(id="switcher", track_sensitive=true, [
liquidsoap/main.liq:    requests, scheduler, blank(duration=5.)
liquidsoap/main.liq:])
liquidsoap/main.liq:# Outputs
liquidsoap/main.liq:def outputs(s) =
liquidsoap/main.liq:  icy = output.icecast(
liquidsoap/main.liq:    host=getenv("ICECAST_PORT_8000_TCP_ADDR"),
liquidsoap/main.liq:    port=int_of_string(getenv("ICECAST_PORT_8000_TCP_PORT")),
liquidsoap/main.liq:    password=getenv("ICECAST_SOURCE_PASSWORD")
liquidsoap/main.liq:  )
liquidsoap/main.liq:  icy(%mp3(bitrate=128), mount="/mp3-128", s)
liquidsoap/main.liq:  icy(%mp3(bitrate=192), mount="/mp3-192", s)
liquidsoap/main.liq:  icy(%aac(bitrate=128), mount="/aac-128", s)
liquidsoap/main.liq:  icy(%aac(bitrate=192), mount="/aac-192", s)
liquidsoap/main.liq:  icy(%vorbis, mount="/vorbis", s)
liquidsoap/main.liq:  output.dummy(id="manager", s)
liquidsoap/main.liq:end
liquidsoap/main.liq:outputs(source)
radioman/.dockerignore:playlists
radioman/.dockerignore:.git
radioman/.dockerignore:gin-bin
radioman/.dockerignore:radioman
radioman/Dockerfile:FROM golang:1.5
radioman/Dockerfile:# Configure environment and rebuild stdlib
radioman/Dockerfile:ENV CGO_ENABLED=1 GO15VENDOREXPERIMENT=1 GODIR=github.com/moul/radioman WEBDIR=/web
radioman/Dockerfile:RUN go install -a std
radioman/Dockerfile:# Install deps
radioman/Dockerfile:RUN go get github.com/tools/godep \
radioman/Dockerfile: && go get github.com/golang/lint/golint \
radioman/Dockerfile: && go get golang.org/x/tools/cmd/goimports \
radioman/Dockerfile: && go get golang.org/x/tools/cmd/stringer
radioman/Dockerfile:# Install dependencies
radioman/Dockerfile:RUN apt-get update \
radioman/Dockerfile: && apt-get install -y -qq libtagc0-dev pkg-config \
radioman/Dockerfile: && apt-get clean
radioman/Dockerfile:# Run the project
radioman/Dockerfile:WORKDIR /go/src/${GODIR}/radioman
radioman/Dockerfile:COPY pkg /go/src/${GODIR}/radioman/pkg
radioman/Dockerfile:COPY vendor /go/src/${GODIR}/radioman/vendor
radioman/Dockerfile:COPY cmd /go/src/${GODIR}/radioman/cmd
radioman/Dockerfile:COPY Godeps /go/src/${GODIR}/radioman/Godeps
radioman/Dockerfile:RUN go install ./cmd/radiomand
radioman/Dockerfile:COPY web ${WEBDIR}
radioman/Dockerfile:ENTRYPOINT ["radiomand"]
radioman/cmd/radiomand/endpoints.go:package main
radioman/cmd/radiomand/endpoints.go:import (
radioman/cmd/radiomand/endpoints.go:	"fmt"
radioman/cmd/radiomand/endpoints.go:	"net/http"
radioman/cmd/radiomand/endpoints.go:	"strings"
radioman/cmd/radiomand/endpoints.go:	"github.com/Sirupsen/logrus"
radioman/cmd/radiomand/endpoints.go:	"github.com/gin-gonic/gin"
radioman/cmd/radiomand/endpoints.go:)
radioman/cmd/radiomand/endpoints.go:func getNextSongEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	track, err := Radio.GetNextSong()
radioman/cmd/radiomand/endpoints.go:	if err != nil {
radioman/cmd/radiomand/endpoints.go:		c.String(http.StatusNotFound, fmt.Sprintf("# failed to get the next song: %v", err))
radioman/cmd/radiomand/endpoints.go:		return
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	c.String(http.StatusOK, track.Path)
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func playlistsEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	c.JSON(http.StatusOK, gin.H{
radioman/cmd/radiomand/endpoints.go:		"playlists": Radio.Playlists,
radioman/cmd/radiomand/endpoints.go:	})
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func defaultRadioEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	c.JSON(http.StatusOK, gin.H{
radioman/cmd/radiomand/endpoints.go:		"radio": Radio,
radioman/cmd/radiomand/endpoints.go:	})
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func radioSkipSongEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	if err := Radio.SkipSong(); err != nil {
radioman/cmd/radiomand/endpoints.go:		logrus.Errorf("Failed to connect to liquidsoap: %v", err)
radioman/cmd/radiomand/endpoints.go:		c.JSON(http.StatusNotFound, gin.H{
radioman/cmd/radiomand/endpoints.go:			"error": err,
radioman/cmd/radiomand/endpoints.go:		})
radioman/cmd/radiomand/endpoints.go:		return
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	c.JSON(http.StatusOK, gin.H{
radioman/cmd/radiomand/endpoints.go:		"status": "ok",
radioman/cmd/radiomand/endpoints.go:	})
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func radioPlayTrackEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	var json struct {
radioman/cmd/radiomand/endpoints.go:		Hash string `form:"hash" json:"hash"`
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	if err := c.BindJSON(&json); err != nil {
radioman/cmd/radiomand/endpoints.go:		c.JSON(http.StatusInternalServerError, gin.H{
radioman/cmd/radiomand/endpoints.go:			"error": err,
radioman/cmd/radiomand/endpoints.go:		})
radioman/cmd/radiomand/endpoints.go:		return
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	track, err := Radio.GetTrackByHash(json.Hash)
radioman/cmd/radiomand/endpoints.go:	if err != nil {
radioman/cmd/radiomand/endpoints.go:		c.JSON(http.StatusNotFound, gin.H{
radioman/cmd/radiomand/endpoints.go:			"error": err,
radioman/cmd/radiomand/endpoints.go:		})
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	if err := Radio.PlayTrack(track); err != nil {
radioman/cmd/radiomand/endpoints.go:		logrus.Errorf("Failed to connect to liquidsoap: %v", err)
radioman/cmd/radiomand/endpoints.go:		c.JSON(http.StatusNotFound, gin.H{
radioman/cmd/radiomand/endpoints.go:			"error": err,
radioman/cmd/radiomand/endpoints.go:		})
radioman/cmd/radiomand/endpoints.go:		return
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	c.JSON(http.StatusOK, gin.H{
radioman/cmd/radiomand/endpoints.go:		"status": "ok",
radioman/cmd/radiomand/endpoints.go:	})
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func radioSetNextTrackEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	c.JSON(http.StatusNotFound, gin.H{
radioman/cmd/radiomand/endpoints.go:		"error": "not yet implemented",
radioman/cmd/radiomand/endpoints.go:	})
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func playlistDetailEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	name := c.Param("name")
radioman/cmd/radiomand/endpoints.go:	playlist, err := Radio.GetPlaylistByName(name)
radioman/cmd/radiomand/endpoints.go:	if err != nil {
radioman/cmd/radiomand/endpoints.go:		c.JSON(http.StatusNotFound, gin.H{
radioman/cmd/radiomand/endpoints.go:			"error": err,
radioman/cmd/radiomand/endpoints.go:		})
radioman/cmd/radiomand/endpoints.go:		return
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	c.JSON(http.StatusOK, gin.H{
radioman/cmd/radiomand/endpoints.go:		"playlist": playlist,
radioman/cmd/radiomand/endpoints.go:	})
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func trackDetailEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	hash := c.Param("hash")
radioman/cmd/radiomand/endpoints.go:	track, err := Radio.GetTrackByHash(hash)
radioman/cmd/radiomand/endpoints.go:	if err != nil {
radioman/cmd/radiomand/endpoints.go:		c.JSON(http.StatusNotFound, gin.H{
radioman/cmd/radiomand/endpoints.go:			"error": err,
radioman/cmd/radiomand/endpoints.go:		})
radioman/cmd/radiomand/endpoints.go:		return
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	c.JSON(http.StatusOK, gin.H{
radioman/cmd/radiomand/endpoints.go:		"track": track,
radioman/cmd/radiomand/endpoints.go:	})
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func playlistUpdateEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	name := c.Param("name")
radioman/cmd/radiomand/endpoints.go:	playlist, err := Radio.GetPlaylistByName(name)
radioman/cmd/radiomand/endpoints.go:	if err != nil {
radioman/cmd/radiomand/endpoints.go:		c.JSON(http.StatusNotFound, gin.H{
radioman/cmd/radiomand/endpoints.go:			"error": err,
radioman/cmd/radiomand/endpoints.go:		})
radioman/cmd/radiomand/endpoints.go:		return
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	var json struct {
radioman/cmd/radiomand/endpoints.go:		SetDefault bool `form:"default" json:"default"`
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	if err := c.BindJSON(&json); err != nil {
radioman/cmd/radiomand/endpoints.go:		c.JSON(http.StatusInternalServerError, gin.H{
radioman/cmd/radiomand/endpoints.go:			"error": err,
radioman/cmd/radiomand/endpoints.go:		})
radioman/cmd/radiomand/endpoints.go:		return
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	if json.SetDefault {
radioman/cmd/radiomand/endpoints.go:		Radio.DefaultPlaylist = playlist
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	c.JSON(http.StatusOK, gin.H{
radioman/cmd/radiomand/endpoints.go:		"playlist": playlist,
radioman/cmd/radiomand/endpoints.go:	})
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func playlistTracksEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	name := c.Param("name")
radioman/cmd/radiomand/endpoints.go:	playlist, err := Radio.GetPlaylistByName(name)
radioman/cmd/radiomand/endpoints.go:	if err != nil {
radioman/cmd/radiomand/endpoints.go:		c.JSON(http.StatusNotFound, gin.H{
radioman/cmd/radiomand/endpoints.go:			"error": err,
radioman/cmd/radiomand/endpoints.go:		})
radioman/cmd/radiomand/endpoints.go:		return
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	c.JSON(http.StatusOK, gin.H{
radioman/cmd/radiomand/endpoints.go:		"tracks": playlist.Tracks,
radioman/cmd/radiomand/endpoints.go:	})
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:type Endpoint struct {
radioman/cmd/radiomand/endpoints.go:	Source string `json:"source"`
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func radioEndpointsEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	host := strings.Split(c.Request.Host, ":")[0]
radioman/cmd/radiomand/endpoints.go:	mountpoints := []string{
radioman/cmd/radiomand/endpoints.go:		"mp3-192",
radioman/cmd/radiomand/endpoints.go:		"aac-192",
radioman/cmd/radiomand/endpoints.go:		"vorbis",
radioman/cmd/radiomand/endpoints.go:		"aac-128",
radioman/cmd/radiomand/endpoints.go:		"mp3-128",
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	endpoints := []Endpoint{}
radioman/cmd/radiomand/endpoints.go:	for _, mountpoint := range mountpoints {
radioman/cmd/radiomand/endpoints.go:		endpoint := Endpoint{
radioman/cmd/radiomand/endpoints.go:			Source: fmt.Sprintf("http://%s:4444/%s", host, mountpoint),
radioman/cmd/radiomand/endpoints.go:		}
radioman/cmd/radiomand/endpoints.go:		endpoints = append(endpoints, endpoint)
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	c.JSON(http.StatusOK, gin.H{
radioman/cmd/radiomand/endpoints.go:		"endpoints": endpoints,
radioman/cmd/radiomand/endpoints.go:	})
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/endpoints.go:func m3uPlaylistEndpoint(c *gin.Context) {
radioman/cmd/radiomand/endpoints.go:	host := strings.Split(c.Request.Host, ":")[0]
radioman/cmd/radiomand/endpoints.go:	mountpoints := []string{
radioman/cmd/radiomand/endpoints.go:		"mp3-192",
radioman/cmd/radiomand/endpoints.go:		"aac-192",
radioman/cmd/radiomand/endpoints.go:		"vorbis",
radioman/cmd/radiomand/endpoints.go:		"aac-128",
radioman/cmd/radiomand/endpoints.go:		"mp3-128",
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	links := []string{}
radioman/cmd/radiomand/endpoints.go:	for _, mountpoint := range mountpoints {
radioman/cmd/radiomand/endpoints.go:		links = append(links, fmt.Sprintf("http://%s:4444/%s", host, mountpoint))
radioman/cmd/radiomand/endpoints.go:	}
radioman/cmd/radiomand/endpoints.go:	c.Header("Content-Type", "audio/x-mpegurl")
radioman/cmd/radiomand/endpoints.go:	c.String(http.StatusOK, strings.Join(links, "\n"))
radioman/cmd/radiomand/endpoints.go:}
radioman/cmd/radiomand/main.go:package main
radioman/cmd/radiomand/main.go:import (
radioman/cmd/radiomand/main.go:	"fmt"
radioman/cmd/radiomand/main.go:	"os"
radioman/cmd/radiomand/main.go:	"path"
radioman/cmd/radiomand/main.go:	"github.com/Sirupsen/logrus"
radioman/cmd/radiomand/main.go:	"github.com/gin-gonic/gin"
radioman/cmd/radiomand/main.go:	"github.com/moul/radioman/radioman/pkg/radioman"
radioman/cmd/radiomand/main.go:)
radioman/cmd/radiomand/main.go:var Radio *radioman.Radio
radioman/cmd/radiomand/main.go:func main() {
radioman/cmd/radiomand/main.go:	// Setup the Radio instance
radioman/cmd/radiomand/main.go:	Radio = radioman.NewRadio("RadioMan")
radioman/cmd/radiomand/main.go:	if err := Radio.Init(); err != nil {
radioman/cmd/radiomand/main.go:		logrus.Fatalf("Failed to initialize the radio: %v", err)
radioman/cmd/radiomand/main.go:	}
radioman/cmd/radiomand/main.go:	if err := Radio.StdPopulate(); err != nil {
radioman/cmd/radiomand/main.go:		logrus.Fatalf("Failed to populate the radio: %v", err)
radioman/cmd/radiomand/main.go:	}
radioman/cmd/radiomand/main.go:	// Setup the web server
radioman/cmd/radiomand/main.go:	router := gin.Default()
radioman/cmd/radiomand/main.go:	public := router.Group("/")
radioman/cmd/radiomand/main.go:	admin := router.Group("/")
radioman/cmd/radiomand/main.go:	liquidsoap := router.Group("/")
radioman/cmd/radiomand/main.go:	// Admin auth
radioman/cmd/radiomand/main.go:	// FIXME: make accounts dynamic
radioman/cmd/radiomand/main.go:	accounts := gin.Accounts{"admin": "admin"}
radioman/cmd/radiomand/main.go:	admin.Use(gin.BasicAuth(accounts))
radioman/cmd/radiomand/main.go:	// FIXME: add authentication on liquidsoap next handler
radioman/cmd/radiomand/main.go:	public.GET("/ping", func(c *gin.Context) {
radioman/cmd/radiomand/main.go:		c.String(200, "pong")
radioman/cmd/radiomand/main.go:	})
radioman/cmd/radiomand/main.go:	staticPrefix := "./radioman/web"
radioman/cmd/radiomand/main.go:	if os.Getenv("WEBDIR") != "" {
radioman/cmd/radiomand/main.go:		staticPrefix = os.Getenv("WEBDIR")
radioman/cmd/radiomand/main.go:	}
radioman/cmd/radiomand/main.go:	public.StaticFile("/", path.Join(staticPrefix, "static/index.html"))
radioman/cmd/radiomand/main.go:	public.Static("/static", path.Join(staticPrefix, "static"))
radioman/cmd/radiomand/main.go:	public.Static("/bower_components", path.Join(staticPrefix, "bower_components"))
radioman/cmd/radiomand/main.go:	admin.StaticFile("/admin/", path.Join(staticPrefix, "static/admin/index.html"))
radioman/cmd/radiomand/main.go:	admin.GET("/api/playlists", playlistsEndpoint)
radioman/cmd/radiomand/main.go:	admin.GET("/api/playlists/:name", playlistDetailEndpoint)
radioman/cmd/radiomand/main.go:	admin.PATCH("/api/playlists/:name", playlistUpdateEndpoint)
radioman/cmd/radiomand/main.go:	admin.GET("/api/playlists/:name/tracks", playlistTracksEndpoint)
radioman/cmd/radiomand/main.go:	admin.GET("/api/radios/default", defaultRadioEndpoint)
radioman/cmd/radiomand/main.go:	public.GET("/api/radios/default/endpoints", radioEndpointsEndpoint)
radioman/cmd/radiomand/main.go:	admin.POST("/api/radios/default/skip-song", radioSkipSongEndpoint)
radioman/cmd/radiomand/main.go:	admin.POST("/api/radios/default/play-track", radioPlayTrackEndpoint)
radioman/cmd/radiomand/main.go:	admin.POST("/api/radios/default/set-next-track", radioSetNextTrackEndpoint)
radioman/cmd/radiomand/main.go:	admin.GET("/api/tracks/:hash", trackDetailEndpoint)
radioman/cmd/radiomand/main.go:	liquidsoap.GET("/api/liquidsoap/getNextSong", getNextSongEndpoint)
radioman/cmd/radiomand/main.go:	public.GET("/playlist.m3u", m3uPlaylistEndpoint)
radioman/cmd/radiomand/main.go:	// Launch routines
radioman/cmd/radiomand/main.go:	go Radio.UpdatePlaylistsRoutine()
radioman/cmd/radiomand/main.go:	// Start web server mainloop
radioman/cmd/radiomand/main.go:	port := os.Getenv("PORT")
radioman/cmd/radiomand/main.go:	if port == "" {
radioman/cmd/radiomand/main.go:		port = "8000"
radioman/cmd/radiomand/main.go:	}
radioman/cmd/radiomand/main.go:	router.Run(fmt.Sprintf(":%s", port))
radioman/cmd/radiomand/main.go:}
radioman/pkg/liquidsoap/telnet.go:package liquidsoap
radioman/pkg/liquidsoap/telnet.go:import (
radioman/pkg/liquidsoap/telnet.go:	"bufio"
radioman/pkg/liquidsoap/telnet.go:	"fmt"
radioman/pkg/liquidsoap/telnet.go:	"net"
radioman/pkg/liquidsoap/telnet.go:	"github.com/Sirupsen/logrus"
radioman/pkg/liquidsoap/telnet.go:)
radioman/pkg/liquidsoap/telnet.go:type Telnet struct {
radioman/pkg/liquidsoap/telnet.go:	Host string
radioman/pkg/liquidsoap/telnet.go:	Port int
radioman/pkg/liquidsoap/telnet.go:	Conn net.Conn
radioman/pkg/liquidsoap/telnet.go:}
radioman/pkg/liquidsoap/telnet.go:func NewTelnet(host string, port int) *Telnet {
radioman/pkg/liquidsoap/telnet.go:	return &Telnet{
radioman/pkg/liquidsoap/telnet.go:		Host: host,
radioman/pkg/liquidsoap/telnet.go:		Port: port,
radioman/pkg/liquidsoap/telnet.go:	}
radioman/pkg/liquidsoap/telnet.go:}
radioman/pkg/liquidsoap/telnet.go:func (t *Telnet) Dest() string {
radioman/pkg/liquidsoap/telnet.go:	return fmt.Sprintf("%s:%d", t.Host, t.Port)
radioman/pkg/liquidsoap/telnet.go:}
radioman/pkg/liquidsoap/telnet.go:func (t *Telnet) Open() error {
radioman/pkg/liquidsoap/telnet.go:	logrus.Debugf("Connecting to Liquidsoap telnet: %s:%d", t.Host, t.Port)
radioman/pkg/liquidsoap/telnet.go:	conn, err := net.Dial("tcp", t.Dest())
radioman/pkg/liquidsoap/telnet.go:	if err != nil {
radioman/pkg/liquidsoap/telnet.go:		return err
radioman/pkg/liquidsoap/telnet.go:	}
radioman/pkg/liquidsoap/telnet.go:	t.Conn = conn
radioman/pkg/liquidsoap/telnet.go:	return nil
radioman/pkg/liquidsoap/telnet.go:}
radioman/pkg/liquidsoap/telnet.go:func (t *Telnet) Close() {
radioman/pkg/liquidsoap/telnet.go:	if t.Conn != nil {
radioman/pkg/liquidsoap/telnet.go:		t.Conn.Close()
radioman/pkg/liquidsoap/telnet.go:	}
radioman/pkg/liquidsoap/telnet.go:}
radioman/pkg/liquidsoap/telnet.go:func (t *Telnet) Command(command string) (string, error) {
radioman/pkg/liquidsoap/telnet.go:	logrus.Debugf("Sending to telnet: %q", command)
radioman/pkg/liquidsoap/telnet.go:	fmt.Fprintf(t.Conn, "%s\n", command)
radioman/pkg/liquidsoap/telnet.go:	message, err := bufio.NewReader(t.Conn).ReadString('\n')
radioman/pkg/liquidsoap/telnet.go:	if err != nil {
radioman/pkg/liquidsoap/telnet.go:		return "", err
radioman/pkg/liquidsoap/telnet.go:	}
radioman/pkg/liquidsoap/telnet.go:	logrus.Debugf("Received from telnet: %q", message)
radioman/pkg/liquidsoap/telnet.go:	return message, nil
radioman/pkg/liquidsoap/telnet.go:}
radioman/pkg/radioman/playlist.go:package radioman
radioman/pkg/radioman/playlist.go:import (
radioman/pkg/radioman/playlist.go:	"fmt"
radioman/pkg/radioman/playlist.go:	"math/rand"
radioman/pkg/radioman/playlist.go:	"os"
radioman/pkg/radioman/playlist.go:	"strings"
radioman/pkg/radioman/playlist.go:	"time"
radioman/pkg/radioman/playlist.go:	"github.com/Sirupsen/logrus"
radioman/pkg/radioman/playlist.go:	"github.com/kr/fs"
radioman/pkg/radioman/playlist.go:	"github.com/wtolson/go-taglib"
radioman/pkg/radioman/playlist.go:)
radioman/pkg/radioman/playlist.go:type Playlist struct {
radioman/pkg/radioman/playlist.go:	Name             string    `json:"name"`
radioman/pkg/radioman/playlist.go:	Path             string    `json:"path"`
radioman/pkg/radioman/playlist.go:	CreationDate     time.Time `json:"creation_date"`
radioman/pkg/radioman/playlist.go:	ModificationDate time.Time `json:"modification_date"`
radioman/pkg/radioman/playlist.go:	Status           string    `json:"status"`
radioman/pkg/radioman/playlist.go:	Stats            struct {
radioman/pkg/radioman/playlist.go:		Tracks int `json:"tracks"`
radioman/pkg/radioman/playlist.go:	} `json:"stats"`
radioman/pkg/radioman/playlist.go:	Tracks map[string]*Track `json:"-"`
radioman/pkg/radioman/playlist.go:}
radioman/pkg/radioman/playlist.go:func (p *Playlist) NewLocalTrack(path string) (*Track, error) {
radioman/pkg/radioman/playlist.go:	if track, err := p.GetTrackByPath(path); err == nil {
radioman/pkg/radioman/playlist.go:		return track, nil
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	relPath := path
radioman/pkg/radioman/playlist.go:	if strings.Index(path, p.Path) == 0 {
radioman/pkg/radioman/playlist.go:		relPath = path[len(p.Path):]
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	stat, err := os.Stat(path)
radioman/pkg/radioman/playlist.go:	if err != nil {
radioman/pkg/radioman/playlist.go:		return nil, err
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	track, err := NewTrack(path)
radioman/pkg/radioman/playlist.go:	if err != nil {
radioman/pkg/radioman/playlist.go:		return nil, err
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	track.RelPath = relPath
radioman/pkg/radioman/playlist.go:	track.FileName = stat.Name()
radioman/pkg/radioman/playlist.go:	track.FileSize = stat.Size()
radioman/pkg/radioman/playlist.go:	track.FileModTime = stat.ModTime()
radioman/pkg/radioman/playlist.go:	file, err := taglib.Read(path)
radioman/pkg/radioman/playlist.go:	if err != nil {
radioman/pkg/radioman/playlist.go:		logrus.Warnf("Failed to read taglib %q: %v", path, err)
radioman/pkg/radioman/playlist.go:		track.Status = "error"
radioman/pkg/radioman/playlist.go:		track.Title = track.FileName
radioman/pkg/radioman/playlist.go:	} else {
radioman/pkg/radioman/playlist.go:		defer file.Close()
radioman/pkg/radioman/playlist.go:		track.Tag.Length = file.Length() / time.Second
radioman/pkg/radioman/playlist.go:		track.Tag.Artist = file.Artist()
radioman/pkg/radioman/playlist.go:		track.Tag.Title = file.Title()
radioman/pkg/radioman/playlist.go:		track.Tag.Album = file.Album()
radioman/pkg/radioman/playlist.go:		track.Tag.Genre = file.Genre()
radioman/pkg/radioman/playlist.go:		track.Tag.Bitrate = file.Bitrate()
radioman/pkg/radioman/playlist.go:		track.Tag.Year = file.Year()
radioman/pkg/radioman/playlist.go:		track.Tag.Channels = file.Channels()
radioman/pkg/radioman/playlist.go:		// FIXME: do not prepend the artist if it is already present in the title
radioman/pkg/radioman/playlist.go:		track.Title = fmt.Sprintf("%s - %s", track.Tag.Artist, track.Tag.Title)
radioman/pkg/radioman/playlist.go:		track.Status = "ready"
radioman/pkg/radioman/playlist.go:		// fmt.Println(file.Title(), file.Artist(), file.Album(), file.Comment(), file.Genre(), file.Year(), file.Track(), file.Length(), file.Bitrate(), file.Samplerate(), file.Channels())
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	p.Tracks[track.Hash] = track
radioman/pkg/radioman/playlist.go:	p.Stats.Tracks++
radioman/pkg/radioman/playlist.go:	return track, nil
radioman/pkg/radioman/playlist.go:}
radioman/pkg/radioman/playlist.go:func (p *Playlist) GetTrackByPath(path string) (*Track, error) {
radioman/pkg/radioman/playlist.go:	// FIXME: use a dedicated map
radioman/pkg/radioman/playlist.go:	for _, track := range p.Tracks {
radioman/pkg/radioman/playlist.go:		if track.Path == path {
radioman/pkg/radioman/playlist.go:			return track, nil
radioman/pkg/radioman/playlist.go:		}
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	return nil, fmt.Errorf("no such track")
radioman/pkg/radioman/playlist.go:}
radioman/pkg/radioman/playlist.go:func (p *Playlist) GetRandomTrack() (*Track, error) {
radioman/pkg/radioman/playlist.go:	if p.Status != "ready" {
radioman/pkg/radioman/playlist.go:		return nil, fmt.Errorf("playlist is not ready")
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	validFiles := 0
radioman/pkg/radioman/playlist.go:	for _, track := range p.Tracks {
radioman/pkg/radioman/playlist.go:		if track.IsValid() {
radioman/pkg/radioman/playlist.go:			validFiles++
radioman/pkg/radioman/playlist.go:		}
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	if validFiles == 0 {
radioman/pkg/radioman/playlist.go:		return nil, fmt.Errorf("there is no available track")
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	i := rand.Intn(validFiles)
radioman/pkg/radioman/playlist.go:	for _, track := range p.Tracks {
radioman/pkg/radioman/playlist.go:		if !track.IsValid() {
radioman/pkg/radioman/playlist.go:			continue
radioman/pkg/radioman/playlist.go:		}
radioman/pkg/radioman/playlist.go:		if i <= 0 {
radioman/pkg/radioman/playlist.go:			return track, nil
radioman/pkg/radioman/playlist.go:		}
radioman/pkg/radioman/playlist.go:		i--
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	return nil, fmt.Errorf("cannot get a random track")
radioman/pkg/radioman/playlist.go:}
radioman/pkg/radioman/playlist.go:func (p *Playlist) AutoUpdate() error {
radioman/pkg/radioman/playlist.go:	if p.Path == "" {
radioman/pkg/radioman/playlist.go:		logrus.Debugf("Playlist %q is not dynamic, skipping update", p.Name)
radioman/pkg/radioman/playlist.go:		return nil
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	// if we are here, the playlist is based on local file system
radioman/pkg/radioman/playlist.go:	logrus.Infof("Updating playlist %q", p.Name)
radioman/pkg/radioman/playlist.go:	p.Status = "updating"
radioman/pkg/radioman/playlist.go:	walker := fs.Walk(p.Path)
radioman/pkg/radioman/playlist.go:	for walker.Step() {
radioman/pkg/radioman/playlist.go:		if err := walker.Err(); err != nil {
radioman/pkg/radioman/playlist.go:			logrus.Warnf("walker error: %v", err)
radioman/pkg/radioman/playlist.go:			continue
radioman/pkg/radioman/playlist.go:		}
radioman/pkg/radioman/playlist.go:		stat := walker.Stat()
radioman/pkg/radioman/playlist.go:		if stat.IsDir() {
radioman/pkg/radioman/playlist.go:			switch stat.Name() {
radioman/pkg/radioman/playlist.go:			case ".git", "bower_components":
radioman/pkg/radioman/playlist.go:				walker.SkipDir()
radioman/pkg/radioman/playlist.go:			}
radioman/pkg/radioman/playlist.go:		} else {
radioman/pkg/radioman/playlist.go:			switch stat.Name() {
radioman/pkg/radioman/playlist.go:			case ".DS_Store":
radioman/pkg/radioman/playlist.go:				continue
radioman/pkg/radioman/playlist.go:			}
radioman/pkg/radioman/playlist.go:			p.NewLocalTrack(walker.Path())
radioman/pkg/radioman/playlist.go:		}
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	logrus.Infof("Playlist %q updated, %d tracks", p.Name, len(p.Tracks))
radioman/pkg/radioman/playlist.go:	if p.Stats.Tracks > 0 {
radioman/pkg/radioman/playlist.go:		p.Status = "ready"
radioman/pkg/radioman/playlist.go:	} else {
radioman/pkg/radioman/playlist.go:		p.Status = "empty"
radioman/pkg/radioman/playlist.go:	}
radioman/pkg/radioman/playlist.go:	p.ModificationDate = time.Now()
radioman/pkg/radioman/playlist.go:	return nil
radioman/pkg/radioman/playlist.go:}
radioman/pkg/radioman/radio.go:package radioman
radioman/pkg/radioman/radio.go:import (
radioman/pkg/radioman/radio.go:	"fmt"
radioman/pkg/radioman/radio.go:	"os"
radioman/pkg/radioman/radio.go:	"path"
radioman/pkg/radioman/radio.go:	"path/filepath"
radioman/pkg/radioman/radio.go:	"strconv"
radioman/pkg/radioman/radio.go:	"strings"
radioman/pkg/radioman/radio.go:	"time"
radioman/pkg/radioman/radio.go:	"github.com/Sirupsen/logrus"
radioman/pkg/radioman/radio.go:	"github.com/kr/fs"
radioman/pkg/radioman/radio.go:	"github.com/moul/radioman/radioman/pkg/liquidsoap"
radioman/pkg/radioman/radio.go:)
radioman/pkg/radioman/radio.go:type Radio struct {
radioman/pkg/radioman/radio.go:	Name             string    `json:"name"`
radioman/pkg/radioman/radio.go:	DefaultPlaylist  *Playlist `json:"default_playlist"`
radioman/pkg/radioman/radio.go:	CreationDate     time.Time `json:"creation_date"`
radioman/pkg/radioman/radio.go:	ModificationDate time.Time `json:"modification_date"`
radioman/pkg/radioman/radio.go:	Stats            struct {
radioman/pkg/radioman/radio.go:		Playlists int `json:"playlists"`
radioman/pkg/radioman/radio.go:		Tracks    int `json:"tracks"`
radioman/pkg/radioman/radio.go:	} `json:"stats"`
radioman/pkg/radioman/radio.go:	Playlists []*Playlist        `json:"-"`
radioman/pkg/radioman/radio.go:	Telnet    *liquidsoap.Telnet `json:"-"`
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) NewPlaylist(name string) (*Playlist, error) {
radioman/pkg/radioman/radio.go:	logrus.Infof("New playlist %q", name)
radioman/pkg/radioman/radio.go:	playlist := &Playlist{
radioman/pkg/radioman/radio.go:		Name:             name,
radioman/pkg/radioman/radio.go:		CreationDate:     time.Now(),
radioman/pkg/radioman/radio.go:		ModificationDate: time.Now(),
radioman/pkg/radioman/radio.go:		Tracks:           make(map[string]*Track, 0),
radioman/pkg/radioman/radio.go:		Status:           "new",
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	r.Playlists = append(r.Playlists, playlist)
radioman/pkg/radioman/radio.go:	r.Stats.Playlists++
radioman/pkg/radioman/radio.go:	return playlist, nil
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) NewDirectoryPlaylist(name string, path string) (*Playlist, error) {
radioman/pkg/radioman/radio.go:	if _, err := os.Stat(path); err != nil {
radioman/pkg/radioman/radio.go:		return nil, err
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	playlist, err := r.NewPlaylist(name)
radioman/pkg/radioman/radio.go:	if err != nil {
radioman/pkg/radioman/radio.go:		return nil, err
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	expandedPath, err := expandUser(path)
radioman/pkg/radioman/radio.go:	if err != nil {
radioman/pkg/radioman/radio.go:		return nil, err
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	playlist.Path = expandedPath
radioman/pkg/radioman/radio.go:	return playlist, nil
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) GetPlaylistByName(name string) (*Playlist, error) {
radioman/pkg/radioman/radio.go:	for _, playlist := range r.Playlists {
radioman/pkg/radioman/radio.go:		if playlist.Name == name {
radioman/pkg/radioman/radio.go:			return playlist, nil
radioman/pkg/radioman/radio.go:		}
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	return nil, fmt.Errorf("no such playlist")
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) GetTrackByHash(hash string) (*Track, error) {
radioman/pkg/radioman/radio.go:	// FIXME: do not iterate over playlists, use a global map instead
radioman/pkg/radioman/radio.go:	for _, playlist := range r.Playlists {
radioman/pkg/radioman/radio.go:		if track, found := playlist.Tracks[hash]; found {
radioman/pkg/radioman/radio.go:			return track, nil
radioman/pkg/radioman/radio.go:		}
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	return nil, fmt.Errorf("no such track")
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func NewRadio(name string) *Radio {
radioman/pkg/radioman/radio.go:	return &Radio{
radioman/pkg/radioman/radio.go:		Name:             name,
radioman/pkg/radioman/radio.go:		Playlists:        make([]*Playlist, 0),
radioman/pkg/radioman/radio.go:		CreationDate:     time.Now(),
radioman/pkg/radioman/radio.go:		ModificationDate: time.Now(),
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) InitTelnet() error {
radioman/pkg/radioman/radio.go:	liquidsoapAddr := strings.Split(strings.Replace(os.Getenv("LIQUIDSOAP_PORT_2300_TCP"), "tcp://", "", -1), ":")
radioman/pkg/radioman/radio.go:	liquidsoapHost := liquidsoapAddr[0]
radioman/pkg/radioman/radio.go:	liquidsoapPort, _ := strconv.Atoi(liquidsoapAddr[1])
radioman/pkg/radioman/radio.go:	r.Telnet = liquidsoap.NewTelnet(liquidsoapHost, liquidsoapPort)
radioman/pkg/radioman/radio.go:	if err := r.Telnet.Open(); err != nil {
radioman/pkg/radioman/radio.go:		logrus.Fatalf("Failed to connect to liquidsoap")
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	defer r.Telnet.Close()
radioman/pkg/radioman/radio.go:	radiomandHost := strings.Split(r.Telnet.Conn.LocalAddr().String(), ":")[0]
radioman/pkg/radioman/radio.go:	_, err := r.Telnet.Command(fmt.Sprintf(`var.set radiomand_url = "http://%s:%d"`, radiomandHost, 8000))
radioman/pkg/radioman/radio.go:	return err
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) SkipSong() error {
radioman/pkg/radioman/radio.go:	if err := r.Telnet.Open(); err != nil {
radioman/pkg/radioman/radio.go:		return err
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	defer r.Telnet.Close()
radioman/pkg/radioman/radio.go:	if _, err := r.Telnet.Command("manager.skip"); err != nil {
radioman/pkg/radioman/radio.go:		return err
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	return nil
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) PlayTrack(track *Track) error {
radioman/pkg/radioman/radio.go:	if err := r.Telnet.Open(); err != nil {
radioman/pkg/radioman/radio.go:		return err
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	defer r.Telnet.Close()
radioman/pkg/radioman/radio.go:	if _, err := r.Telnet.Command(fmt.Sprintf("request.push %s", track.Path)); err != nil {
radioman/pkg/radioman/radio.go:		return err
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	return nil
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) UpdatePlaylistsRoutine() {
radioman/pkg/radioman/radio.go:	for {
radioman/pkg/radioman/radio.go:		defaultUpdated := false
radioman/pkg/radioman/radio.go:		tracksSum := 0
radioman/pkg/radioman/radio.go:		for _, playlist := range r.Playlists {
radioman/pkg/radioman/radio.go:			// automatically update playlist
radioman/pkg/radioman/radio.go:			if err := playlist.AutoUpdate(); err != nil {
radioman/pkg/radioman/radio.go:				playlist.Status = "error"
radioman/pkg/radioman/radio.go:				logrus.Warnf("Failed to update playlist: %v", err)
radioman/pkg/radioman/radio.go:				continue
radioman/pkg/radioman/radio.go:			}
radioman/pkg/radioman/radio.go:			tracksSum += playlist.Stats.Tracks
radioman/pkg/radioman/radio.go:			// Set default playlist if needed
radioman/pkg/radioman/radio.go:			if r.DefaultPlaylist == nil && playlist.Status == "ready" {
radioman/pkg/radioman/radio.go:				r.DefaultPlaylist = playlist
radioman/pkg/radioman/radio.go:				defaultUpdated = true
radioman/pkg/radioman/radio.go:			}
radioman/pkg/radioman/radio.go:		}
radioman/pkg/radioman/radio.go:		r.Stats.Tracks = tracksSum
radioman/pkg/radioman/radio.go:		// when getting a new playlist for the first time, a skipsong will act like the first "play"
radioman/pkg/radioman/radio.go:		if defaultUpdated {
radioman/pkg/radioman/radio.go:			r.SkipSong()
radioman/pkg/radioman/radio.go:		}
radioman/pkg/radioman/radio.go:		// sleep 5 minutes before next run
radioman/pkg/radioman/radio.go:		time.Sleep(5 * time.Minute)
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) Init() error {
radioman/pkg/radioman/radio.go:	if err := r.InitTelnet(); err != nil {
radioman/pkg/radioman/radio.go:		return err
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	return nil
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) StdPopulate() error {
radioman/pkg/radioman/radio.go:	// Add a dummy manual playlist
radioman/pkg/radioman/radio.go:	r.NewPlaylist("manual")
radioman/pkg/radioman/radio.go:	// Add local directory
radioman/pkg/radioman/radio.go:	playlistsDirs := []string{"/playlists"}
radioman/pkg/radioman/radio.go:	playlistsDirs = append(playlistsDirs, path.Join(os.Getenv("HOME"), "playlists"))
radioman/pkg/radioman/radio.go:	playlistsDirs = append(playlistsDirs, path.Join("/home", "playlists"))
radioman/pkg/radioman/radio.go:	dir, err := os.Getwd()
radioman/pkg/radioman/radio.go:	if err == nil && os.Getenv("NO_LOCAL_PLAYLISTS") != "1" {
radioman/pkg/radioman/radio.go:		r.NewDirectoryPlaylist("local directory", dir)
radioman/pkg/radioman/radio.go:		playlistsDirs = append(playlistsDirs, path.Join(dir, "playlists"))
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	// Add each folders in '/playlists' and './playlists'
radioman/pkg/radioman/radio.go:	for _, playlistsDir := range playlistsDirs {
radioman/pkg/radioman/radio.go:		walker := fs.Walk(playlistsDir)
radioman/pkg/radioman/radio.go:		for walker.Step() {
radioman/pkg/radioman/radio.go:			if walker.Path() == playlistsDir {
radioman/pkg/radioman/radio.go:				continue
radioman/pkg/radioman/radio.go:			}
radioman/pkg/radioman/radio.go:			if err := walker.Err(); err != nil {
radioman/pkg/radioman/radio.go:				logrus.Warnf("walker error: %v", err)
radioman/pkg/radioman/radio.go:				continue
radioman/pkg/radioman/radio.go:			}
radioman/pkg/radioman/radio.go:			var realpath string
radioman/pkg/radioman/radio.go:			if walker.Stat().IsDir() {
radioman/pkg/radioman/radio.go:				realpath = walker.Path()
radioman/pkg/radioman/radio.go:				walker.SkipDir()
radioman/pkg/radioman/radio.go:			} else {
radioman/pkg/radioman/radio.go:				realpath, err = filepath.EvalSymlinks(walker.Path())
radioman/pkg/radioman/radio.go:				if err != nil {
radioman/pkg/radioman/radio.go:					logrus.Warnf("filepath.EvalSymlinks error for %q: %v", walker.Path(), err)
radioman/pkg/radioman/radio.go:					continue
radioman/pkg/radioman/radio.go:				}
radioman/pkg/radioman/radio.go:			}
radioman/pkg/radioman/radio.go:			stat, err := os.Stat(realpath)
radioman/pkg/radioman/radio.go:			if err != nil {
radioman/pkg/radioman/radio.go:				logrus.Warnf("os.Stat error: %v", err)
radioman/pkg/radioman/radio.go:				continue
radioman/pkg/radioman/radio.go:			}
radioman/pkg/radioman/radio.go:			if stat.IsDir() {
radioman/pkg/radioman/radio.go:				r.NewDirectoryPlaylist(fmt.Sprintf("playlist: %s", walker.Stat().Name()), realpath)
radioman/pkg/radioman/radio.go:			}
radioman/pkg/radioman/radio.go:		}
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	// Add 'standard' music paths
radioman/pkg/radioman/radio.go:	r.NewDirectoryPlaylist("iTunes Music", "~/Music/iTunes/iTunes Media/Music/")
radioman/pkg/radioman/radio.go:	r.NewDirectoryPlaylist("iTunes Podcasts", "~/Music/iTunes/iTunes Media/Podcasts/")
radioman/pkg/radioman/radio.go:	r.NewDirectoryPlaylist("iTunes Music", "/home/Music/iTunes/iTunes Media/Music/")
radioman/pkg/radioman/radio.go:	r.NewDirectoryPlaylist("iTunes Podcasts", "/home/Music/iTunes/iTunes Media/Podcasts/")
radioman/pkg/radioman/radio.go:	return nil
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/radio.go:func (r *Radio) GetNextSong() (*Track, error) {
radioman/pkg/radioman/radio.go:	// FIXME: shuffle playlist instead of getting a random track
radioman/pkg/radioman/radio.go:	// FIXME: do not iterate over a map
radioman/pkg/radioman/radio.go:	playlist := r.DefaultPlaylist
radioman/pkg/radioman/radio.go:	track, err := playlist.GetRandomTrack()
radioman/pkg/radioman/radio.go:	if err == nil {
radioman/pkg/radioman/radio.go:		return track, nil
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	for _, playlist := range r.Playlists {
radioman/pkg/radioman/radio.go:		track, err := playlist.GetRandomTrack()
radioman/pkg/radioman/radio.go:		if err != nil {
radioman/pkg/radioman/radio.go:			continue
radioman/pkg/radioman/radio.go:		}
radioman/pkg/radioman/radio.go:		return track, nil
radioman/pkg/radioman/radio.go:	}
radioman/pkg/radioman/radio.go:	return nil, fmt.Errorf("no such next song, are your playlists empty ?")
radioman/pkg/radioman/radio.go:}
radioman/pkg/radioman/track.go:package radioman
radioman/pkg/radioman/track.go:import (
radioman/pkg/radioman/track.go:	"crypto/md5"
radioman/pkg/radioman/track.go:	"encoding/hex"
radioman/pkg/radioman/track.go:	"time"
radioman/pkg/radioman/track.go:)
radioman/pkg/radioman/track.go:type Track struct {
radioman/pkg/radioman/track.go:	Hash             string      `json:"hash"`
radioman/pkg/radioman/track.go:	Status           string      `json:"status"`
radioman/pkg/radioman/track.go:	Title            string      `json:"title"`
radioman/pkg/radioman/track.go:	RelPath          string      `json:"relative_path"`
radioman/pkg/radioman/track.go:	Path             string      `json:"path"`
radioman/pkg/radioman/track.go:	FileName         string      `json:"file_name"`
radioman/pkg/radioman/track.go:	FileSize         int64       `json:"file_size"`
radioman/pkg/radioman/track.go:	FileModTime      time.Time   `json:"file_modification_time"`
radioman/pkg/radioman/track.go:	CreationDate     time.Time   `json:"creation_date"`
radioman/pkg/radioman/track.go:	ModificationDate time.Time   `json:"modification_date"`
radioman/pkg/radioman/track.go:	Playlists        []*Playlist `json:"playlists"`
radioman/pkg/radioman/track.go:	Tag              struct {
radioman/pkg/radioman/track.go:		Length   time.Duration `json:"length"`
radioman/pkg/radioman/track.go:		Title    string        `json:"title"`
radioman/pkg/radioman/track.go:		Artist   string        `json:"artist"`
radioman/pkg/radioman/track.go:		Album    string        `json:"album"`
radioman/pkg/radioman/track.go:		Genre    string        `json:"genre"`
radioman/pkg/radioman/track.go:		Bitrate  int           `json:"bitrate"`
radioman/pkg/radioman/track.go:		Year     int           `json:"year"`
radioman/pkg/radioman/track.go:		Channels int           `json:"channels"`
radioman/pkg/radioman/track.go:	} `json:"tag"`
radioman/pkg/radioman/track.go:}
radioman/pkg/radioman/track.go:func NewTrack(path string) (*Track, error) {
radioman/pkg/radioman/track.go:	track := Track{
radioman/pkg/radioman/track.go:		Path:             path,
radioman/pkg/radioman/track.go:		RelPath:          path,
radioman/pkg/radioman/track.go:		Status:           "new",
radioman/pkg/radioman/track.go:		CreationDate:     time.Now(),
radioman/pkg/radioman/track.go:		ModificationDate: time.Now(),
radioman/pkg/radioman/track.go:	}
radioman/pkg/radioman/track.go:	hasher := md5.New()
radioman/pkg/radioman/track.go:	hasher.Write([]byte(path))
radioman/pkg/radioman/track.go:	track.Hash = hex.EncodeToString(hasher.Sum(nil))
radioman/pkg/radioman/track.go:	return &track, nil
radioman/pkg/radioman/track.go:}
radioman/pkg/radioman/track.go:func (t *Track) IsValid() bool {
radioman/pkg/radioman/track.go:	return t.Tag.Bitrate >= 64
radioman/pkg/radioman/track.go:}
radioman/pkg/radioman/utils.go:package radioman
radioman/pkg/radioman/utils.go:import (
radioman/pkg/radioman/utils.go:	"errors"
radioman/pkg/radioman/utils.go:	"os"
radioman/pkg/radioman/utils.go:	"strings"
radioman/pkg/radioman/utils.go:)
radioman/pkg/radioman/utils.go:func expandUser(path string) (string, error) {
radioman/pkg/radioman/utils.go:	// Expand variables
radioman/pkg/radioman/utils.go:	path = os.ExpandEnv(path)
radioman/pkg/radioman/utils.go:	if path[:2] == "~/" {
radioman/pkg/radioman/utils.go:		homeDir := os.Getenv("HOME") // *nix
radioman/pkg/radioman/utils.go:		if homeDir == "" {           // Windows
radioman/pkg/radioman/utils.go:			homeDir = os.Getenv("USERPROFILE")
radioman/pkg/radioman/utils.go:		}
radioman/pkg/radioman/utils.go:		if homeDir == "" {
radioman/pkg/radioman/utils.go:			return "", errors.New("user home directory not found")
radioman/pkg/radioman/utils.go:		}
radioman/pkg/radioman/utils.go:		return strings.Replace(path, "~", homeDir, 1), nil
radioman/pkg/radioman/utils.go:	}
radioman/pkg/radioman/utils.go:	return path, nil
radioman/pkg/radioman/utils.go:}
radioman/web/static/admin/app.js:var radiomanApp = angular.module('radiomanApp', ['ngRoute', 'angularMoment', 'angular-loading-bar', 'ngAnimate']);
radioman/web/static/admin/app.js:radiomanApp.controller('MainCtrl', function($scope, $route, $routeParams, $location) {
radioman/web/static/admin/app.js:  $scope.$route = $route;
radioman/web/static/admin/app.js:  $scope.$location = $location;
radioman/web/static/admin/app.js:  $scope.$routeParams = $routeParams;
radioman/web/static/admin/app.js:  $scope.basehref = document.location.protocol + '//' + document.location.host;
radioman/web/static/admin/app.js:});
radioman/web/static/admin/app.js:radiomanApp.controller('PlayerCtrl', function($scope, $http) {
radioman/web/static/admin/app.js:  $http.get('/api/radios/default/endpoints').success(function (data) {
radioman/web/static/admin/app.js:    $scope.endpoints = data.endpoints;
radioman/web/static/admin/app.js:  });
radioman/web/static/admin/app.js:  $scope.skipSong = function() {
radioman/web/static/admin/app.js:    $http.post('/api/radios/default/skip-song', {}).success(function (data) {
radioman/web/static/admin/app.js:      console.log('song skipped');
radioman/web/static/admin/app.js:    });
radioman/web/static/admin/app.js:  };
radioman/web/static/admin/app.js:});
radioman/web/static/admin/app.js:radiomanApp.config(function($routeProvider, $locationProvider) {
radioman/web/static/admin/app.js:  $routeProvider
radioman/web/static/admin/app.js:    .when('/playlists', {
radioman/web/static/admin/app.js:      templateUrl: '/static/admin/playlists.html',
radioman/web/static/admin/app.js:      controller: 'PlaylistListCtrl'
radioman/web/static/admin/app.js:    })
radioman/web/static/admin/app.js:    .when('/playlists/:name', {
radioman/web/static/admin/app.js:      templateUrl: '/static/admin/playlist.html',
radioman/web/static/admin/app.js:      controller: 'PlaylistViewCtrl'
radioman/web/static/admin/app.js:    })
radioman/web/static/admin/app.js:    .when('/tracks/:name', {
radioman/web/static/admin/app.js:      templateUrl: '/static/admin/track.html',
radioman/web/static/admin/app.js:      controller: 'TrackViewCtrl'
radioman/web/static/admin/app.js:    })
radioman/web/static/admin/app.js:    .otherwise({
radioman/web/static/admin/app.js:      templateUrl: '/static/admin/home.html',
radioman/web/static/admin/app.js:      controller: 'HomeCtrl'
radioman/web/static/admin/app.js:    });
radioman/web/static/admin/app.js:  // $locationProvider.html5Mode(true);
radioman/web/static/admin/app.js:});
radioman/web/static/admin/app.js:radiomanApp.controller('HomeCtrl', function($scope, $http, $routeParams) {
radioman/web/static/admin/app.js:  $http.get('/api/radios/default').success(function (data) {
radioman/web/static/admin/app.js:    $scope.radio = data.radio;
radioman/web/static/admin/app.js:  });
radioman/web/static/admin/app.js:});
radioman/web/static/admin/app.js:radiomanApp.controller('PlaylistListCtrl', function($scope, $http, $routeParams) {
radioman/web/static/admin/app.js:  $scope.orderByField = 'name';
radioman/web/static/admin/app.js:  $scope.reverseSort = true;
radioman/web/static/admin/app.js:  $http.get('/api/playlists').success(function (data) {
radioman/web/static/admin/app.js:    $scope.playlists = data.playlists;
radioman/web/static/admin/app.js:  });
radioman/web/static/admin/app.js:  $scope.makeDefault = function(playlist) {
radioman/web/static/admin/app.js:    var input = {
radioman/web/static/admin/app.js:      default: true
radioman/web/static/admin/app.js:    };
radioman/web/static/admin/app.js:    $http.patch('/api/playlists/' + playlist.name, input).success(function (data) {
radioman/web/static/admin/app.js:      console.log(data);
radioman/web/static/admin/app.js:    });
radioman/web/static/admin/app.js:  };
radioman/web/static/admin/app.js:});
radioman/web/static/admin/app.js:radiomanApp.controller('PlaylistViewCtrl', function($scope, $http, $routeParams) {
radioman/web/static/admin/app.js:  $scope.orderByField = 'path';
radioman/web/static/admin/app.js:  $scope.reverseSort = true;
radioman/web/static/admin/app.js:  $http.get('/api/playlists/' + $routeParams.name).success(function (data) {
radioman/web/static/admin/app.js:    $scope.playlist = data.playlist;
radioman/web/static/admin/app.js:  });
radioman/web/static/admin/app.js:  $http.get('/api/playlists/' + $routeParams.name + '/tracks').success(function (data) {
radioman/web/static/admin/app.js:    $scope.tracks = data.tracks;
radioman/web/static/admin/app.js:  });
radioman/web/static/admin/app.js:});
radioman/web/static/admin/app.js:radiomanApp.controller('TrackViewCtrl', function($scope, $http, $routeParams) {
radioman/web/static/admin/app.js:  $scope.playTrack = function(track) {
radioman/web/static/admin/app.js:    var input = {
radioman/web/static/admin/app.js:      hash: track.hash
radioman/web/static/admin/app.js:    };
radioman/web/static/admin/app.js:    $http.post('/api/radios/default/play-track', input).success(function (data) {
radioman/web/static/admin/app.js:      console.log(data);
radioman/web/static/admin/app.js:    });
radioman/web/static/admin/app.js:  };
radioman/web/static/admin/app.js:  $scope.setNextTrack = function(track) {
radioman/web/static/admin/app.js:    var input = {
radioman/web/static/admin/app.js:      hash: track.hash
radioman/web/static/admin/app.js:    };
radioman/web/static/admin/app.js:    $http.post('/api/radios/default/set-next-track', input).success(function (data) {
radioman/web/static/admin/app.js:      console.log(data);
radioman/web/static/admin/app.js:    });
radioman/web/static/admin/app.js:  };
radioman/web/static/admin/app.js:  $http.get('/api/tracks/' + $routeParams.name).success(function (data) {
radioman/web/static/admin/app.js:    $scope.track = data.track;
radioman/web/static/admin/app.js:  });
radioman/web/static/admin/app.js:});
radioman/web/static/admin/app.js:radiomanApp.filter('dictToArray', function() {
radioman/web/static/admin/app.js:  return function (obj) {
radioman/web/static/admin/app.js:    if (!(obj instanceof Object)) return obj;
radioman/web/static/admin/app.js:    return _.map(obj, function(val, key) {
radioman/web/static/admin/app.js:      return Object.defineProperty(val, '$key', {__proto__: null, value: key});
radioman/web/static/admin/app.js:    });
radioman/web/static/admin/app.js:  };
radioman/web/static/admin/app.js:});
radioman/web/static/admin/app.js:radiomanApp.filter('trustUrl', ['$sce', function($sce) {
radioman/web/static/admin/app.js:  return function (url) {
radioman/web/static/admin/app.js:    return $sce.trustAsResourceUrl(url);
radioman/web/static/admin/app.js:  };
radioman/web/static/admin/app.js:}]);
radioman/web/static/admin/app.js:radiomanApp.filter('trackDuration', function() {
radioman/web/static/admin/app.js:  return function (duration) {
radioman/web/static/admin/app.js:    var seconds = duration % 60;
radioman/web/static/admin/app.js:    var minutes = Math.floor(duration / 60);
radioman/web/static/admin/app.js:    var output = new Array();
radioman/web/static/admin/app.js:    if (minutes >= 1) {
radioman/web/static/admin/app.js:      output.push(minutes + "m");
radioman/web/static/admin/app.js:    }
radioman/web/static/admin/app.js:    if (seconds >= 1) {
radioman/web/static/admin/app.js:      output.push(seconds + "s");
radioman/web/static/admin/app.js:    }
radioman/web/static/admin/app.js:    return output.join(" ");
radioman/web/static/admin/app.js:  };
radioman/web/static/admin/app.js:});
radioman/web/static/admin/home.html:<section class="container">
radioman/web/static/admin/home.html:  <h1>Welcome to Radioman.</h1>
radioman/web/static/admin/home.html:  <table class="table-light overflow-hidden bg-white border rounded">
radioman/web/static/admin/home.html:    <thead class="bg-darken-2"><tr><th colspan="2">Info</th></tr></thead>
radioman/web/static/admin/home.html:    <tbody>
radioman/web/static/admin/home.html:      <tr><td class="bg-darken-1">Name</td><td>{{radio.name}}</td></tr>
radioman/web/static/admin/home.html:      <tr><td class="bg-darken-1">Default playlist</td><td><a href="#/playlists/{{radio.default_playlist.name}}">{{radio.default_playlist.name}}</a></td></tr>
radioman/web/static/admin/home.html:      <tr>
radioman/web/static/admin/home.html:        <td class="bg-darken-1">Creation date</td>
radioman/web/static/admin/home.html:        <td am-time-ago="radio.creation_date" title="{{radio.creation_date}}">{{radio.creation_date}}</td>
radioman/web/static/admin/home.html:      </tr>
radioman/web/static/admin/home.html:      <tr>
radioman/web/static/admin/home.html:        <td class="bg-darken-1">Modification date</td>
radioman/web/static/admin/home.html:        <td am-time-ago="radio.modification_date" title="{{radio.modification_date}}">{{radio.modification_date}}</td>
radioman/web/static/admin/home.html:      </tr>
radioman/web/static/admin/home.html:    </tbody>
radioman/web/static/admin/home.html:    <thead class="bg-darken-2"><tr><th colspan="2">Stats</th></tr></thead>
radioman/web/static/admin/home.html:    <tbody>
radioman/web/static/admin/home.html:      <tr><td class="bg-darken-1">Playlists</td><td>{{radio.stats.playlists}}</td></tr>
radioman/web/static/admin/home.html:      <tr><td class="bg-darken-1">Tracks</td><td>{{radio.stats.tracks}}</td></tr>
radioman/web/static/admin/home.html:    </tbody>
radioman/web/static/admin/home.html:  </table>
radioman/web/static/admin/home.html:</section>
radioman/web/static/admin/index.html:<html>
radioman/web/static/admin/index.html:  <head>
radioman/web/static/admin/index.html:    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
radioman/web/static/admin/index.html:    <title>Radioman</title>
radioman/web/static/admin/index.html:    <script type="text/javascript" src="/static/admin/app.js"></script>
radioman/web/static/admin/index.html:  </head>
radioman/web/static/admin/index.html:  <body ng-app="radiomanApp" class="flex flex-column">
radioman/web/static/admin/index.html:    <nav class="clearfix white bg-navy">
radioman/web/static/admin/index.html:      <section class="container">
radioman/web/static/admin/index.html:        <div class="sm-col">
radioman/web/static/admin/index.html:          <a href="/" class="btn py1">Radioman</a>
radioman/web/static/admin/index.html:        </div>
radioman/web/static/admin/index.html:        <div class="sm-col">
radioman/web/static/admin/index.html:          <a href="#/playlists" class="btn py1">Playlists</a>
radioman/web/static/admin/index.html:        </div>
radioman/web/static/admin/index.html:        <div class="sm-col-right">
radioman/web/static/admin/index.html:          <a href="/playlist.m3u" target="_blank" class="btn py1">m3u</a>
radioman/web/static/admin/index.html:        </div>
radioman/web/static/admin/index.html:        <!--
radioman/web/static/admin/index.html:        <div class="sm-col-right">
radioman/web/static/admin/index.html:          <a href="https://github.com/moul/radioman" class="btn py1">Fork me on Github</a>
radioman/web/static/admin/index.html:        </div>
radioman/web/static/admin/index.html:        -->
radioman/web/static/admin/index.html:      </section>
radioman/web/static/admin/index.html:    </nav>
radioman/web/static/admin/index.html:    <div ng-controller="MainCtrl" class="flex-auto">
radioman/web/static/admin/index.html:      <div ng-view></div>
radioman/web/static/admin/index.html:    </div>
radioman/web/static/admin/index.html:    <footer class="clearfix white bg-navy">
radioman/web/static/admin/index.html:      <section class="container center">
radioman/web/static/admin/index.html:        <div ng-controller="PlayerCtrl" class="center flex">
radioman/web/static/admin/index.html:          <div class="sm-col">
radioman/web/static/admin/index.html:            <audio audioplayer controls preload="none">
radioman/web/static/admin/index.html:              <source src="{{endpoint.source | trustUrl}}" ng-repeat="endpoint in endpoints" />
radioman/web/static/admin/index.html:            </audio>
radioman/web/static/admin/index.html:          </div>
radioman/web/static/admin/index.html:          <div class="sm-col">
radioman/web/static/admin/index.html:            <a href="" ng-click="skipSong()" class="btn py1">➤➤</a>
radioman/web/static/admin/index.html:          </div>
radioman/web/static/admin/index.html:        </div>
radioman/web/static/admin/index.html:      </section>
radioman/web/static/admin/index.html:    </footer>
radioman/web/static/admin/index.html:  </body>
radioman/web/static/admin/index.html:</html>
radioman/web/static/admin/playlist.html:<section class="container">
radioman/web/static/admin/playlist.html:  <div class="overflow-scroll">
radioman/web/static/admin/playlist.html:    <h2>Playlist: {{ playlist.name  }}</h2>
radioman/web/static/admin/playlist.html:    <table class="table-light overflow-hidden bg-white border rounded">
radioman/web/static/admin/playlist.html:      <thead class="bg-darken-2"><tr><th colspan="2">Info</th></tr></thead>
radioman/web/static/admin/playlist.html:      <tbody>
radioman/web/static/admin/playlist.html:        <tr><td class="bg-darken-1">Name</td><td>{{playlist.name}}</td></tr>
radioman/web/static/admin/playlist.html:        <tr><td class="bg-darken-1">Path</td><td>{{playlist.path}}</td></tr>
radioman/web/static/admin/playlist.html:        <tr>
radioman/web/static/admin/playlist.html:          <td class="bg-darken-1">Creation date</td>
radioman/web/static/admin/playlist.html:          <td am-time-ago="playlist.creation_date" title="{{playlist.creation_date}}">{{playlist.creation_date}}</td>
radioman/web/static/admin/playlist.html:        </tr>
radioman/web/static/admin/playlist.html:        <tr>
radioman/web/static/admin/playlist.html:          <td class="bg-darken-1">Modification date</td>
radioman/web/static/admin/playlist.html:          <td am-time-ago="playlist.modification_date" title="{{playlist.modification_date}}">{{playlist.modification_date}}</td>
radioman/web/static/admin/playlist.html:        </tr>
radioman/web/static/admin/playlist.html:        <tr><td class="bg-darken-1">Status</td><td>{{playlist.status}}</td></tr>
radioman/web/static/admin/playlist.html:      </tbody>
radioman/web/static/admin/playlist.html:      <thead class="bg-darken-2"><tr><th colspan="2">Stats</th></tr></thead>
radioman/web/static/admin/playlist.html:      <tbody>
radioman/web/static/admin/playlist.html:        <tr><td class="bg-darken-1">Tracks</td><td>{{playlist.stats.tracks}}</td></tr>
radioman/web/static/admin/playlist.html:      </tbody>
radioman/web/static/admin/playlist.html:    </table>
radioman/web/static/admin/playlist.html:    <h3>Tracks</h3>
radioman/web/static/admin/playlist.html:    <table class="table-light bg-white border rounded">
radioman/web/static/admin/playlist.html:      <thead class="bg-darken-2">
radioman/web/static/admin/playlist.html:        <tr>
radioman/web/static/admin/playlist.html:          <!--<th><a href="" ng-click="orderByField='relative_path'; reverseSort=!reverseSort">Path</a></th>-->
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='title'; reverseSort=!reverseSort">Title</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='creation_date'; reverseSort=!reverseSort">File Creation</a></th>
radioman/web/static/admin/playlist.html:          <!--
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='tag.title'; reverseSort=!reverseSort">Title</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='file_size'; reverseSort=!reverseSort">Size</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='tag.length'; reverseSort=!reverseSort">Length</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='tag.artist'; reverseSort=!reverseSort">Artist</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='tag.album'; reverseSort=!reverseSort">Album</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='tag.year'; reverseSort=!reverseSort">Year</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='tag.genre'; reverseSort=!reverseSort">Genre</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='tag.bitrate'; reverseSort=!reverseSort">Bitrate</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='tag.channels'; reverseSort=!reverseSort">Channels</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='file_modification_time'; reverseSort=!reverseSort">File Modified</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='creation_date'; reverseSort=!reverseSort">File Creation</a></th>
radioman/web/static/admin/playlist.html:          <th><a href="" ng-click="orderByField='modification_date'; reverseSort=!reverseSort">Modification date</a></th>
radioman/web/static/admin/playlist.html:          -->
radioman/web/static/admin/playlist.html:        </tr></thead>
radioman/web/static/admin/playlist.html:      <tbody>
radioman/web/static/admin/playlist.html:        <tr ng:repeat="track in tracks | dictToArray | orderBy:orderByField:reverseSort">
radioman/web/static/admin/playlist.html:          <!--
radioman/web/static/admin/playlist.html:          <td>
radioman/web/static/admin/playlist.html:          <a href="#/tracks/{{track.hash}}">
radioman/web/static/admin/playlist.html:          {{track.relative_path}}
radioman/web/static/admin/playlist.html:          </a>
radioman/web/static/admin/playlist.html:          </td>
radioman/web/static/admin/playlist.html:          -->
radioman/web/static/admin/playlist.html:          <td>
radioman/web/static/admin/playlist.html:            <a href="#/tracks/{{track.hash}}">
radioman/web/static/admin/playlist.html:              {{track.title || "n/a"}}
radioman/web/static/admin/playlist.html:            </a>
radioman/web/static/admin/playlist.html:          </td>
radioman/web/static/admin/playlist.html:          <td am-time-ago="track.creation_date" title="{{track.creation_date}}">{{track.creation_date}}</td>
radioman/web/static/admin/playlist.html:          <!--
radioman/web/static/admin/playlist.html:          <td>{{track.tag.title || "n/a"}}</td>
radioman/web/static/admin/playlist.html:          <td>{{track.file_size}}</td>
radioman/web/static/admin/playlist.html:          <td>{{track.tag.length || "n/a"}}</td>
radioman/web/static/admin/playlist.html:          <td>{{track.tag.artist || "n/a"}}</td>
radioman/web/static/admin/playlist.html:          <td>{{track.tag.album || "n/a"}}</td>
radioman/web/static/admin/playlist.html:          <td>{{track.tag.year || "n/a"}}</td>
radioman/web/static/admin/playlist.html:          <td>{{track.tag.genre || "n/a"}}</td>
radioman/web/static/admin/playlist.html:          <td>{{track.tag.bitrate || "n/a"}}</td>
radioman/web/static/admin/playlist.html:          <td>{{track.tag.channels || "n/a"}}</td>
radioman/web/static/admin/playlist.html:          <td>{{track.file_modification_time}}</td>
radioman/web/static/admin/playlist.html:          <td>{{track.modification_date}}</td>
radioman/web/static/admin/playlist.html:          -->
radioman/web/static/admin/playlist.html:        </tr>
radioman/web/static/admin/playlist.html:      </tbody>
radioman/web/static/admin/playlist.html:    </table>
radioman/web/static/admin/playlist.html:  </div>
radioman/web/static/admin/playlist.html:</section>
radioman/web/static/admin/playlists.html:<section class="container">
radioman/web/static/admin/playlists.html:  <div class="overflow-scroll">
radioman/web/static/admin/playlists.html:    <h3>Playlists</h3>
radioman/web/static/admin/playlists.html:    <table class="table-light bg-white border rounded">
radioman/web/static/admin/playlists.html:      <thead class="bg-darken-1">
radioman/web/static/admin/playlists.html:        <tr>
radioman/web/static/admin/playlists.html:          <th><a href="" ng-click="orderByField='status'; reverseSort=!reverseSort">Status</a></th>
radioman/web/static/admin/playlists.html:          <th><a href="" ng-click="orderByField='name'; reverseSort=!reverseSort">Name</a></th>
radioman/web/static/admin/playlists.html:          <th><a href="" ng-click="orderByField='stats.tracks'; reverseSort=!reverseSort">Tracks</a></th>
radioman/web/static/admin/playlists.html:          <th><a href="" ng-click="orderByField='path'; reverseSort=!reverseSort">Path</a></th>
radioman/web/static/admin/playlists.html:          <th><a href="" ng-click="orderByField='creation_date'; reverseSort=!reverseSort">Created</a></th>
radioman/web/static/admin/playlists.html:          <th><a href="" ng-click="orderByField='modification_date'; reverseSort=!reverseSort">Modified</a></th>
radioman/web/static/admin/playlists.html:          <th>Actions</th>
radioman/web/static/admin/playlists.html:        </tr>
radioman/web/static/admin/playlists.html:      </thead>
radioman/web/static/admin/playlists.html:      <tbody>
radioman/web/static/admin/playlists.html:        <tr ng:repeat="p in playlists | orderBy:orderByField:reverseSort">
radioman/web/static/admin/playlists.html:          <td class="py2">{{p.status}}</td>
radioman/web/static/admin/playlists.html:          <td class="py2"><a href="#/playlists/{{p.name}}">{{p.name}}</a></td>
radioman/web/static/admin/playlists.html:          <td class="py2">{{p.stats.tracks}}</td>
radioman/web/static/admin/playlists.html:          <td class="py2 break-word" style="max-width:200px; font-size:0.8em">{{p.path || "n/a"}}</td>
radioman/web/static/admin/playlists.html:          <td class="py2" am-time-ago="p.creation_date" title="{{p.creation_date}}">{{p.creation_date}}</td>
radioman/web/static/admin/playlists.html:          <td class="py2" am-time-ago="p.modification_date" title="{{p.modification_date}}">{{p.modification_date}}</td>
radioman/web/static/admin/playlists.html:          <td class="py2">
radioman/web/static/admin/playlists.html:            <a href="" ng-click="makeDefault(p)" class="btn btn-outline nowrap">Make def.</a>
radioman/web/static/admin/playlists.html:          </td>
radioman/web/static/admin/playlists.html:        </tr>
radioman/web/static/admin/playlists.html:      </tbody>
radioman/web/static/admin/playlists.html:    </table>
radioman/web/static/admin/playlists.html:  </div>
radioman/web/static/admin/playlists.html:</section>
radioman/web/static/admin/track.html:<section class="container">
radioman/web/static/admin/track.html:  <h2>Track: {{ track.path  }}</h2>
radioman/web/static/admin/track.html:  <a href="" ng-click="playTrack(track)" class="btn btn-outline nowrap">Play now</a>
radioman/web/static/admin/track.html:  <a href="" ng-click="setNextTrack(track)" class="btn btn-outline nowrap">Set next</a>
radioman/web/static/admin/track.html:  <table class="table-light overflow-hidden bg-white border rounded">
radioman/web/static/admin/track.html:    <thead class="bg-darken-2"><tr><th colspan="2">Info</th></tr></thead>
radioman/web/static/admin/track.html:    <tbody>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Status</td><td>{{track.status}}</td></tr>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Hash</td><td>{{track.hash}}</td></tr>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Title</td><td>{{track.title || "n/a"}}</td></tr>
radioman/web/static/admin/track.html:      <tr>
radioman/web/static/admin/track.html:        <td class="bg-darken-1">Creation date</td>
radioman/web/static/admin/track.html:        <td am-time-ago="track.creation_date" title="{{track.creation_date}}">{{track.creation_date}}</td>
radioman/web/static/admin/track.html:      </tr>
radioman/web/static/admin/track.html:      <tr>
radioman/web/static/admin/track.html:        <td class="bg-darken-1">Modification date</td>
radioman/web/static/admin/track.html:        <td am-time-ago="track.modification_date" title="{{track.modification_date}}">{{track.modification_date}}</td>
radioman/web/static/admin/track.html:      </tr>
radioman/web/static/admin/track.html:    </tbody>
radioman/web/static/admin/track.html:    <thead class="bg-darken-2"><tr><th colspan="2">Filesystem</th></tr></thead>
radioman/web/static/admin/track.html:    <tbody>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Relative Path</td><td>{{track.relative_path}}</td></tr>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Path</td><td>{{track.path}}</td></tr>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">File name</td><td>{{track.file_name}}</td></tr>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">File size</td><td>{{track.file_size}}</td></tr>
radioman/web/static/admin/track.html:      <tr>
radioman/web/static/admin/track.html:        <td class="bg-darken-1">File modification time</td>
radioman/web/static/admin/track.html:        <td am-time-ago="track.file_modification_time" title="{{track.file_modification_time}}">{{track.file_modification_time}}</td>
radioman/web/static/admin/track.html:      </tr>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Playlists</td><td>{{track.playlists || "n/a"}}</td></tr>
radioman/web/static/admin/track.html:    </tbody>
radioman/web/static/admin/track.html:    <thead class="bg-darken-2"><tr><th colspan="2">Taglib</th></tr></thead>
radioman/web/static/admin/track.html:    <tbody>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Length</td><td>{{(track.tag.length | trackDuration) || "n/a"}}</td></tr>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Title</td><td>{{track.tag.title || "n/a"}}</td></tr>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Artist</td><td>{{track.tag.artist || "n/a"}}</td></tr>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Album</td><td>{{track.tag.album || "n/a"}}</td></tr>
radioman/web/static/admin/track.html:      <tr><td class="bg-darken-1">Status</td><td>{{track.status || "n/a"}}</td></tr>
radioman/web/static/admin/track.html:    </tbody>
radioman/web/static/admin/track.html:  </table>
radioman/web/static/admin/track.html:</section>
radioman/web/static/app.css:body {
radioman/web/static/app.css:    background: #000;
radioman/web/static/app.css:    top: 0;
radioman/web/static/app.css:    left: 0;
radioman/web/static/app.css:    padding: 0;
radioman/web/static/app.css:    margin: 0;
radioman/web/static/app.css:}
radioman/web/static/app.css:/* Waves:
radioman/web/static/app.css:** Url: http://codepen.io/zachacole/pen/ojVqbg
radioman/web/static/app.css:** Title: Loader Demo
radioman/web/static/app.css:** Author: Zach Cole
radioman/web/static/app.css:** Inspiration: http://tobiasahlin.com/spinkit/
radioman/web/static/app.css:*/
radioman/web/static/app.css:.waves {
radioman/web/static/app.css:    position: relative;
radioman/web/static/app.css:    height: 40px;
radioman/web/static/app.css:    width: 160px;
radioman/web/static/app.css:    margin: 200px auto 0;
radioman/web/static/app.css:}
radioman/web/static/app.css:.waves > div {
radioman/web/static/app.css:    position: relative;
radioman/web/static/app.css:    display: inline-block;
radioman/web/static/app.css:    background: #03A9F4;
radioman/web/static/app.css:    height: 100%;
radioman/web/static/app.css:    width: 10px;
radioman/web/static/app.css:    margin: 0;
radioman/web/static/app.css:    -webkit-animation: load 3s ease-in-out infinite;
radioman/web/static/app.css:    animation: load 3s ease-in-out infinite;
radioman/web/static/app.css:}
radioman/web/static/app.css:.waves .rectangle-2 {
radioman/web/static/app.css:    -webkit-animation-delay: 0.1s;
radioman/web/static/app.css:    animation-delay: 0.1s;
radioman/web/static/app.css:}
radioman/web/static/app.css:.waves .rectangle-3 {
radioman/web/static/app.css:    -webkit-animation-delay: 0.2s;
radioman/web/static/app.css:    animation-delay: 0.2s;
radioman/web/static/app.css:}
radioman/web/static/app.css:.waves .rectangle-4 {
radioman/web/static/app.css:    -webkit-animation-delay: 0.3s;
radioman/web/static/app.css:    animation-delay: 0.3s;
radioman/web/static/app.css:}
radioman/web/static/app.css:.waves .rectangle-5 {
radioman/web/static/app.css:    -webkit-animation-delay: 0.4s;
radioman/web/static/app.css:    animation-delay: 0.4s;
radioman/web/static/app.css:}
radioman/web/static/app.css:.waves .rectangle-6 {
radioman/web/static/app.css:    -webkit-animation-delay: 0.5s;
radioman/web/static/app.css:    animation-delay: 0.5s;
radioman/web/static/app.css:}
radioman/web/static/app.css:@-moz-keyframes load {
radioman/web/static/app.css:    0%,
radioman/web/static/app.css:    100% {
radioman/web/static/app.css:        -moz-transform: scaleY(1);
radioman/web/static/app.css:        background: #03A9F4;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    16.67% {
radioman/web/static/app.css:        -moz-transform: scaleY(3);
radioman/web/static/app.css:        background: #FF5722;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    33.33% {
radioman/web/static/app.css:        -moz-transform: scaleY(1);
radioman/web/static/app.css:        background: #FF5252;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    50% {
radioman/web/static/app.css:        -moz-transform: scaleY(3);
radioman/web/static/app.css:        background: #E91E63;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    66.67% {
radioman/web/static/app.css:        -moz-transform: scaleY(1);
radioman/web/static/app.css:        background: #9C27B0;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    83.34% {
radioman/web/static/app.css:        -moz-transform: scaleY(3);
radioman/web/static/app.css:        background: #673AB7;
radioman/web/static/app.css:    }
radioman/web/static/app.css:}
radioman/web/static/app.css:@-webkit-keyframes load {
radioman/web/static/app.css:    0%,
radioman/web/static/app.css:    100% {
radioman/web/static/app.css:        -webkit-transform: scaleY(1);
radioman/web/static/app.css:        background: #03A9F4;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    16.67% {
radioman/web/static/app.css:        -webkit-transform: scaleY(3);
radioman/web/static/app.css:        background: #FF5722;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    33.33% {
radioman/web/static/app.css:        -webkit-transform: scaleY(1);
radioman/web/static/app.css:        background: #FF5252;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    50% {
radioman/web/static/app.css:        -webkit-transform: scaleY(3);
radioman/web/static/app.css:        background: #E91E63;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    66.67% {
radioman/web/static/app.css:        -webkit-transform: scaleY(1);
radioman/web/static/app.css:        background: #9C27B0;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    83.34% {
radioman/web/static/app.css:        -webkit-transform: scaleY(3);
radioman/web/static/app.css:        background: #673AB7;
radioman/web/static/app.css:    }
radioman/web/static/app.css:}
radioman/web/static/app.css:@keyframes load {
radioman/web/static/app.css:    0%,
radioman/web/static/app.css:    100% {
radioman/web/static/app.css:        transform: scaleY(1);
radioman/web/static/app.css:        background: #03A9F4;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    16.67% {
radioman/web/static/app.css:        transform: scaleY(4);
radioman/web/static/app.css:        background: #FF5722;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    33.33% {
radioman/web/static/app.css:        transform: scaleY(0.5);
radioman/web/static/app.css:        background: #FF5252;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    50% {
radioman/web/static/app.css:        transform: scaleY(3);
radioman/web/static/app.css:        background: #E91E63;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    66.67% {
radioman/web/static/app.css:        transform: scaleY(1.5);
radioman/web/static/app.css:        background: #9C27B0;
radioman/web/static/app.css:    }
radioman/web/static/app.css:    83.34% {
radioman/web/static/app.css:        transform: scaleY(3);
radioman/web/static/app.css:        background: #673AB7;
radioman/web/static/app.css:    }
radioman/web/static/app.css:}
radioman/web/static/app.js:$(document).ready(function() {
radioman/web/static/app.js:  var player = $('#player');
radioman/web/static/app.js:  player.hide();
radioman/web/static/app.js:  $.ajax('/api/radios/default/endpoints').done(function(data) {
radioman/web/static/app.js:    for (var idx in data.endpoints) {
radioman/web/static/app.js:      var endpoint = data.endpoints[idx];
radioman/web/static/app.js:      var source = $('<source></source>').attr('src', endpoint.source);
radioman/web/static/app.js:      source.appendTo(player);
radioman/web/static/app.js:    }
radioman/web/static/app.js:    player.fadeIn(1000);
radioman/web/static/app.js:    setTimeout(function() {
radioman/web/static/app.js:      player[0].play();
radioman/web/static/app.js:    }, 100);
radioman/web/static/app.js:  });
radioman/web/static/app.js:});
radioman/web/static/index.html:<html>
radioman/web/static/index.html:  <head>
radioman/web/static/index.html:    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
radioman/web/static/index.html:    <title>Radioman</title>
radioman/web/static/index.html:    <link href="/static/app.css" type="text/css" rel="stylesheet">
radioman/web/static/index.html:  </head>
radioman/web/static/index.html:  <body>
radioman/web/static/index.html:    <audio id="player" audioplayer controls preload="none"></audio>
radioman/web/static/index.html:    <div class="waves">
radioman/web/static/index.html:      <div class="rectangle-1"></div>
radioman/web/static/index.html:      <div class="rectangle-2"></div>
radioman/web/static/index.html:      <div class="rectangle-3"></div>
radioman/web/static/index.html:      <div class="rectangle-4"></div>
radioman/web/static/index.html:      <div class="rectangle-5"></div>
radioman/web/static/index.html:      <div class="rectangle-6"></div>
radioman/web/static/index.html:      <div class="rectangle-5"></div>
radioman/web/static/index.html:      <div class="rectangle-4"></div>
radioman/web/static/index.html:      <div class="rectangle-3"></div>
radioman/web/static/index.html:      <div class="rectangle-2"></div>
radioman/web/static/index.html:      <div class="rectangle-1"></div>
radioman/web/static/index.html:    </div>
radioman/web/static/index.html:    <script type="text/javascript" src="/static/app.js"></script>
radioman/web/static/index.html:  </body>
radioman/web/static/index.html:</html>
runcache:#!/bin/bash
runcache:RUNCACHE_DIR="${RUNCACHE_DIR:-/tmp/runcache}"
runcache:mkdir -p "${RUNCACHE_DIR}"
runcache:program="$(which ${1})"
runcache:argssum="$(echo "$*" | md5sum | awk '{print $1}')"
runcache:filesum=""
runcache:argv="$@"
runcache:#shift
runcache:for arg in $program $@; do
runcache:    # compute files sums
runcache:    if [ -f "${arg}" ]; then
runcache:        filesum="${filesum}:$(md5sum "${arg}" | awk '{print $1}')"
runcache:    fi
runcache:done
runcache:fullsum="$(echo "${argssum}:${filesum}" | md5sum | awk '{print $1}')"
runcache:if [ -f "${RUNCACHE_DIR}/${fullsum}" ]; then
runcache:    cat "${RUNCACHE_DIR}/${fullsum}"
runcache:    exit 0
runcache:fi
runcache:"$@" | tee "${RUNCACHE_DIR}/${fullsum}"
runcache:exit ${PIPESTATUS[0]}
Makefile:.PHONY: binaries
Makefile:binaries: node_modules
Makefile:	# npm install -g enclose
Makefile:	enclose -x -o ./bin/scw-$(shell uname -s)-$(shell uname -m)  ./bin/scw
Makefile:node_modules:
Makefile:	npm install
bin/scw:#!/usr/bin/env node
bin/scw:var program = require('..');
bin/scw:program.run();
examples/create-image-from-s3.sh:#!/bin/bash
examples/create-image-from-s3.sh:set -e
examples/create-image-from-s3.sh:URL="${1}"
examples/create-image-from-s3.sh:if [ -z "${1}" ]; then
examples/create-image-from-s3.sh:    echo "usage: $(basename ${0}) <url>"
examples/create-image-from-s3.sh:    echo ""
examples/create-image-from-s3.sh:    echo "examples:"
examples/create-image-from-s3.sh:    echo "  - $(basename ${0}) http://test-images.fr-1.storage.online.net/scw-distrib-ubuntu-trusty.tar"
examples/create-image-from-s3.sh:    echo "  - VOLUME=20GB $(basename ${0}) http://test-images.fr-1.storage.online.net/scw-distrib-ubuntu-trusty.tar"
examples/create-image-from-s3.sh:    exit 1
examples/create-image-from-s3.sh:fi
examples/create-image-from-s3.sh:# FIXME: add usage
examples/create-image-from-s3.sh:set -e
examples/create-image-from-s3.sh:NAME=$(basename "${URL}")
examples/create-image-from-s3.sh:NAME=${NAME%.*}-$(date +%Y-%m-%d_%H:%M)
examples/create-image-from-s3.sh:VOLUME_SIZE=${VOLUME_SIZE:-50GB}
examples/create-image-from-s3.sh:echo "[+] URL of the tarball: ${URL}"
examples/create-image-from-s3.sh:echo "[+] Target name: ${NAME}"
examples/create-image-from-s3.sh:echo "[+] Creating new server in rescue mode with a secondary volume..."
examples/create-image-from-s3.sh:SERVER=$(scw create --bootscript=rescue --volume="${VOLUME_SIZE}" --name="image-writer-${NAME}" 1GB)
examples/create-image-from-s3.sh:echo "[+] Server created: ${SERVER}"
examples/create-image-from-s3.sh:echo "[+] Booting..."
examples/create-image-from-s3.sh:scw start --wait --timeout=600 "${SERVER}" >/dev/null
examples/create-image-from-s3.sh:#IP=$(scw inspect -f .server.public_ip.address "${SERVER}")
examples/create-image-from-s3.sh:#echo "[+] SSH is ready (${IP})"
examples/create-image-from-s3.sh:echo "[+] Server is booted"
examples/create-image-from-s3.sh:scw exec "${SERVER}" 'uname -a'
examples/create-image-from-s3.sh:echo "[+] Formating and mounting /dev/nbd1..."
examples/create-image-from-s3.sh:scw exec "${SERVER}" 'service xnbd-common stop && service xnbd-common start && mkfs.ext4 /dev/nbd1 && mount /dev/nbd1 /mnt'
examples/create-image-from-s3.sh:echo "[+] /dev/nbd1 formatted in ext4 and mounted on /mnt"
examples/create-image-from-s3.sh:echo "[+] Download tarball from S3 and write it to /dev/nbd1"
examples/create-image-from-s3.sh:scw exec "${SERVER}" "wget -qO - ${URL} | tar -C /mnt/ -xf - && sync"
examples/create-image-from-s3.sh:echo "[+] Tarball extracted on /dev/nbd1"
examples/create-image-from-s3.sh:echo "[+] Stopping the server"
examples/create-image-from-s3.sh:scw stop "${SERVER}"
examples/create-image-from-s3.sh:scw wait "${SERVER}"
examples/create-image-from-s3.sh:echo "[+] Server stopped"
examples/create-image-from-s3.sh:echo "[+] Creating a snapshot of nbd1"
examples/create-image-from-s3.sh:SNAPSHOT=$(scw commit --volume=1 "${SERVER}" "${NAME}")
examples/create-image-from-s3.sh:echo "[+] Snapshot ${SNAPSHOT} created"
examples/create-image-from-s3.sh:echo "[+] Creating an image based of the snapshot"
examples/create-image-from-s3.sh:IMAGE=$(scw tag "${SNAPSHOT}" "${NAME}")
examples/create-image-from-s3.sh:echo "[+] Image created: ${IMAGE}"
examples/create-image-from-s3.sh:echo "[+] Deleting temporary server"
examples/create-image-from-s3.sh:scw rm "${SERVER}"
examples/create-image-from-s3.sh:echo "[+] Server deleted"
examples/create-image-livecd.sh:#!/bin/bash
examples/create-image-livecd.sh:set -e
examples/create-image-livecd.sh:URL="${1}"
examples/create-image-livecd.sh:if [ -z "${1}" ]; then
examples/create-image-livecd.sh:    echo "usage: $(basename ${0}) <url>"
examples/create-image-livecd.sh:    echo ""
examples/create-image-livecd.sh:    echo "examples:"
examples/create-image-livecd.sh:    echo "  - $(basename ${0}) http://test-images.fr-1.storage.online.net/scw-distrib-ubuntu-trusty.tar"
examples/create-image-livecd.sh:    exit 1
examples/create-image-livecd.sh:fi
examples/create-image-livecd.sh:# FIXME: add usage
examples/create-image-livecd.sh:NAME=$(basename "${URL}")
examples/create-image-livecd.sh:NAME=${NAME%.*}
examples/create-image-livecd.sh:echo "[+] URL of the tarball: ${URL}" >&2
examples/create-image-livecd.sh:echo "[+] Target name: ${NAME}" >&2
examples/create-image-livecd.sh:echo "[+] Creating new server in live mode..." >&2
examples/create-image-livecd.sh:SERVER=$(
examples/create-image-livecd.sh:    scw create \
examples/create-image-livecd.sh:        --bootscript=3.2.34 \
examples/create-image-livecd.sh:        --name="[live] $NAME" \
examples/create-image-livecd.sh:        --env="boot=live rescue_image=${URL}" \
examples/create-image-livecd.sh:        50GB
examples/create-image-livecd.sh:      )
examples/create-image-livecd.sh:echo "[+] Server created: ${SERVER}" >&2
examples/create-image-livecd.sh:echo "[+] Booting..." >&2
examples/create-image-livecd.sh:scw start "${SERVER}" >/dev/null
examples/create-image-livecd.sh:echo "[+] Done" >&2
examples/create-image-livecd.sh:echo "${SERVER}"
examples/create-image-testing-server.sh:#!/bin/bash
examples/create-image-testing-server.sh:set -e
examples/create-image-testing-server.sh:URL="${1}"
examples/create-image-testing-server.sh:if [ -z "${1}" ]; then
examples/create-image-testing-server.sh:    echo "usage: $(basename ${0}) <url>"
examples/create-image-testing-server.sh:    echo ""
examples/create-image-testing-server.sh:    echo "examples:"
examples/create-image-testing-server.sh:    echo "  - $(basename ${0}) http://test-images.fr-1.storage.online.net/scw-distrib-ubuntu-trusty.tar"
examples/create-image-testing-server.sh:    echo "  - VOLUME=20GB $(basename ${0}) http://test-images.fr-1.storage.online.net/scw-distrib-ubuntu-trusty.tar"
examples/create-image-testing-server.sh:    exit 1
examples/create-image-testing-server.sh:fi
examples/create-image-testing-server.sh:# FIXME: add usage
examples/create-image-testing-server.sh:NAME=$(basename "${URL}")
examples/create-image-testing-server.sh:NAME=${NAME%.*}
examples/create-image-testing-server.sh:echo "[+] URL of the tarball: ${URL}"
examples/create-image-testing-server.sh:echo "[+] Target name: ${NAME}"
examples/create-image-testing-server.sh:echo "[+] Creating new server in rescue mode..."
examples/create-image-testing-server.sh:SERVER=$(
examples/create-image-testing-server.sh:    scw create \
examples/create-image-testing-server.sh:        --bootscript=rescue \
examples/create-image-testing-server.sh:        --name="[testing] $NAME" \
examples/create-image-testing-server.sh:        --env="boot=rescue rescue_image=${URL}" \
examples/create-image-testing-server.sh:        1GB
examples/create-image-testing-server.sh:      )
examples/create-image-testing-server.sh:echo "[+] Server created: ${SERVER}"
examples/create-image-testing-server.sh:echo "[+] Booting..."
examples/create-image-testing-server.sh:scw start "${SERVER}" >/dev/null
examples/create-image-testing-server.sh:echo "[+] Done"
examples/image-quick-checks.sh:#!/usr/bin/env bash
examples/image-quick-checks.sh:# I'm a script used to check the state of images.
examples/image-quick-checks.sh:# parameters
examples/image-quick-checks.sh:if [ $# -ne 1 ]; then
examples/image-quick-checks.sh:    echo "usage: $0 image-id"
examples/image-quick-checks.sh:    exit 1
examples/image-quick-checks.sh:fi
examples/image-quick-checks.sh:IMAGE_ID=$1
examples/image-quick-checks.sh:NB_INSTANCES=16
examples/image-quick-checks.sh:WORKDIR=$(mktemp -d 2>/dev/null || mktemp -d -t /tmp)
examples/image-quick-checks.sh:INSTANCE_NAME='check-image'
examples/image-quick-checks.sh:# destroy all existing servers matching name
examples/image-quick-checks.sh:function cleanup {
examples/image-quick-checks.sh:    echo >&2 '[+] cleaning up existing servers...'
examples/image-quick-checks.sh:    for uuid in $(scw ps -a --no-trunc | tail -n +2 | awk '// { print $1, $NF; }' | grep "^.* ${INSTANCE_NAME}\-" | awk '// { print $1; }'); do
examples/image-quick-checks.sh:	scw stop -t $uuid
examples/image-quick-checks.sh:    done
examples/image-quick-checks.sh:    
examples/image-quick-checks.sh:    touch $WORKDIR/uuids.txt
examples/image-quick-checks.sh:    touch $WORKDIR/ips.txt
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:# create $NB_INSTANCES servers using the image
examples/image-quick-checks.sh:function boot {
examples/image-quick-checks.sh:    echo >&2 "[+] creating $NB_INSTANCES servers..."
examples/image-quick-checks.sh:    for i in $(eval echo {1..$NB_INSTANCES}); do
examples/image-quick-checks.sh:	scw create --volume 1G --name "$INSTANCE_NAME-$i" $IMAGE_ID >> $WORKDIR/uuids.txt
examples/image-quick-checks.sh:    done
examples/image-quick-checks.sh:    cat $WORKDIR/uuids.txt
examples/image-quick-checks.sh:    echo >&2 "[+] booting $NB_INSTANCES servers..."
examples/image-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/image-quick-checks.sh:	scw start -s --boot-timeout=120 --ssh-timeout=600 $uuid &
examples/image-quick-checks.sh:    done
examples/image-quick-checks.sh:    wait `jobs -p`
examples/image-quick-checks.sh:    echo >&2 "[+] fetching IPs..."
examples/image-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/image-quick-checks.sh:	scw inspect $uuid | grep address | awk '// { print $2; }' | tr -d '"' | awk '// { print $1; }' >> $WORKDIR/ips.txt
examples/image-quick-checks.sh:    done
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:# run several tests and output a Markdown report
examples/image-quick-checks.sh:function report {
examples/image-quick-checks.sh:    # status
examples/image-quick-checks.sh:    echo >&2 "[+] report status"
examples/image-quick-checks.sh:    echo "## Status of instances"
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    NB_INSTANCES_OK=$(wc -l $WORKDIR/ips.txt | awk '// { print $1; }')
examples/image-quick-checks.sh:    echo "- $NB_INSTANCES_OK / $NB_INSTANCES have correctly booted"
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    # fping
examples/image-quick-checks.sh:    echo >&2 "[+] report fping"
examples/image-quick-checks.sh:    echo "## fping"
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    fping $(cat $WORKDIR/ips.txt) | sed 's/\(.*\)/    \1/' > $WORKDIR/fping
examples/image-quick-checks.sh:    NB_INSTANCES_OK=$(wc -l $WORKDIR/fping | awk '// { print $1; }')
examples/image-quick-checks.sh:    echo "- $NB_INSTANCES_OK / $NB_INSTANCES respond to ping"
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    cat $WORKDIR/fping
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    # reboot
examples/image-quick-checks.sh:    echo >&2 "[+] reboot"
examples/image-quick-checks.sh:    echo "## reboot"
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/image-quick-checks.sh:	scw exec --wait --timeout 60 $uuid '(which systemctl &>/dev/null && systemctl reboot) || reboot'
examples/image-quick-checks.sh:    done
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    sleep 120
examples/image-quick-checks.sh:    # fping
examples/image-quick-checks.sh:    echo >&2 "[+] report fping 120 sec after reboot"
examples/image-quick-checks.sh:    echo "## fping after reboot"
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    fping $(cat $WORKDIR/ips.txt) | sed 's/\(.*\)/    \1/' > $WORKDIR/fping
examples/image-quick-checks.sh:    NB_INSTANCES_OK=$(wc -l $WORKDIR/fping | awk '// { print $1; }')
examples/image-quick-checks.sh:    echo "- $NB_INSTANCES_OK / $NB_INSTANCES respond to ping"
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    cat $WORKDIR/fping
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    # uptime
examples/image-quick-checks.sh:    echo >&2 "[+] uptime"
examples/image-quick-checks.sh:    echo "## uptime"
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/image-quick-checks.sh:	scw exec --wait --timeout 600 $uuid 'uptime' 1>&2
examples/image-quick-checks.sh:	failed=$?
examples/image-quick-checks.sh:	if [ $failed -ne 0 ]
examples/image-quick-checks.sh:	then
examples/image-quick-checks.sh:	    echo "    - $uuid is DOWN"
examples/image-quick-checks.sh:	else
examples/image-quick-checks.sh:	    echo "    - $uuid is UP"
examples/image-quick-checks.sh:	fi
examples/image-quick-checks.sh:    done
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function main {
examples/image-quick-checks.sh:    cleanup
examples/image-quick-checks.sh:    boot
examples/image-quick-checks.sh:    report
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:main
examples/kernel-quick-checks.sh:#!/usr/bin/env bash
examples/kernel-quick-checks.sh:# I'm a script used to check the stability of new kernels.
examples/kernel-quick-checks.sh:#
examples/kernel-quick-checks.sh:# I spawn 16 servers, boot them, and perform several checks such as a
examples/kernel-quick-checks.sh:# local iperf, some IOs (parallel download of 5GO on a NBD mounted
examples/kernel-quick-checks.sh:# disk).
examples/kernel-quick-checks.sh:#
examples/kernel-quick-checks.sh:# I generate a Markdown report with results
examples/kernel-quick-checks.sh:# parameters
examples/kernel-quick-checks.sh:if [ $# -ne 1 ]; then
examples/kernel-quick-checks.sh:    echo "usage: $0 build-id"
examples/kernel-quick-checks.sh:    exit 1
examples/kernel-quick-checks.sh:fi
examples/kernel-quick-checks.sh:# globals
examples/kernel-quick-checks.sh:BUILD_ID=$1
examples/kernel-quick-checks.sh:WORKDIR=$(mktemp -d -t minibench)
examples/kernel-quick-checks.sh:NB_INSTANCES=16
examples/kernel-quick-checks.sh:INSTANCE_NAME='minibench-kernel'
examples/kernel-quick-checks.sh:# we expect the following in the environment
examples/kernel-quick-checks.sh:#
examples/kernel-quick-checks.sh:# - JENKINS_MIRROR
examples/kernel-quick-checks.sh:# - SANDBOX_DTB_UUID
examples/kernel-quick-checks.sh:if [ -f env.bash ]
examples/kernel-quick-checks.sh:then
examples/kernel-quick-checks.sh:    source env.bash
examples/kernel-quick-checks.sh:fi
examples/kernel-quick-checks.sh:# fetch kernel and publish to S3
examples/kernel-quick-checks.sh:function prepare {
examples/kernel-quick-checks.sh:    echo >&2 '[+] preparing kernel...'
examples/kernel-quick-checks.sh:    local kernel=$(wget "${JENKINS_MIRROR}/" -O /dev/stdout 2>/dev/null | sed -e 's/<a href="\([^"]*\)\/">.*/\1/' -e 'tx' -e 'd' -e ':x' | grep "^.*\-${BUILD_ID}$\|^.*\-${BUILD_ID}\-.*$")
examples/kernel-quick-checks.sh:    if [ -z "$kernel" ]; then
examples/kernel-quick-checks.sh:	echo "can't find $BUILD_ID on jenkins"
examples/kernel-quick-checks.sh:	exit 1
examples/kernel-quick-checks.sh:    fi
examples/kernel-quick-checks.sh:    wget "${JENKINS_MIRROR}/${kernel}/uImage" -O /tmp/uImage 2>/dev/null
examples/kernel-quick-checks.sh:    wget "${JENKINS_MIRROR}/${kernel}/dtbs/pimouss-computing.dtb" -O /tmp/dtb 2>/dev/null
examples/kernel-quick-checks.sh:    s3cmd put --acl-public /tmp/uImage s3://mxs/uImage-$kernel &>/dev/null
examples/kernel-quick-checks.sh:    s3cmd put --acl-public /tmp/dtb s3://mxs/dtb-$kernel &>/dev/null
examples/kernel-quick-checks.sh:    s3cmd put --acl-public /tmp/uImage s3://mxs/uImage-sandbox &>/dev/null
examples/kernel-quick-checks.sh:    s3cmd put --acl-public /tmp/dtb s3://mxs/dtb-sandbox &>/dev/null
examples/kernel-quick-checks.sh:    rm -f /tmp/uImage /tmp/dtb
examples/kernel-quick-checks.sh:}
examples/kernel-quick-checks.sh:# destroy all existing servers matching name
examples/kernel-quick-checks.sh:function cleanup {
examples/kernel-quick-checks.sh:    echo >&2 '[+] cleaning up existing servers...'
examples/kernel-quick-checks.sh:    for uuid in $(scw ps -a --no-trunc | tail -n +2 | awk '// { print $1, $NF; }' | grep "^.* ${INSTANCE_NAME}\-" | awk '// { print $1; }'); do
examples/kernel-quick-checks.sh:	scw stop -t $uuid
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    touch $WORKDIR/uuids.txt
examples/kernel-quick-checks.sh:    touch $WORKDIR/ips.txt
examples/kernel-quick-checks.sh:}
examples/kernel-quick-checks.sh:# create $NB_INSTANCES servers with a bootscript pointing to the prepared kernel
examples/kernel-quick-checks.sh:function boot {
examples/kernel-quick-checks.sh:    echo >&2 "[+] creating $NB_INSTANCES servers..."
examples/kernel-quick-checks.sh:    for i in $(eval echo {1..$NB_INSTANCES}); do
examples/kernel-quick-checks.sh:	scw create --bootscript $SANDBOX_DTB_UUID --volume 50G --name "$INSTANCE_NAME-$i" Ubuntu_Trusty_14_04_LTS >> $WORKDIR/uuids.txt
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    cat $WORKDIR/uuids.txt
examples/kernel-quick-checks.sh:    echo >&2 "[+] booting $NB_INSTANCES servers..."
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw start -s $uuid &
examples/kernel-quick-checks.sh:	sleep .5
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    wait `jobs -p`
examples/kernel-quick-checks.sh:    echo >&2 "[+] fetching IPs..."
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw inspect $uuid | grep address | awk '// { print $2; }' | tr -d '"' | awk '// { print $1; }' >> $WORKDIR/ips.txt
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:}
examples/kernel-quick-checks.sh:# run several tests and output a Markdown report
examples/kernel-quick-checks.sh:function report {
examples/kernel-quick-checks.sh:    # status
examples/kernel-quick-checks.sh:    echo >&2 "[+] report status"
examples/kernel-quick-checks.sh:    echo "## Status of instances"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    NB_INSTANCES_OK=$(wc -l $WORKDIR/ips.txt | awk '// { print $1; }')
examples/kernel-quick-checks.sh:    echo "- $NB_INSTANCES_OK / $NB_INSTANCES have correctly booted"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    # fping
examples/kernel-quick-checks.sh:    echo >&2 "[+] report fping"
examples/kernel-quick-checks.sh:    echo "## fping"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    fping $(cat $WORKDIR/ips.txt) | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    # uname -a
examples/kernel-quick-checks.sh:    echo >&2 "[+] report uname"
examples/kernel-quick-checks.sh:    echo "## uname"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw exec $uuid 'uname -a' | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    # iperf
examples/kernel-quick-checks.sh:    echo >&2 "[+] report iperf"
examples/kernel-quick-checks.sh:    echo "## iperf"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw exec $uuid 'iperf -s & sleep 5 ; iperf -c localhost' | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    # quick stability check
examples/kernel-quick-checks.sh:    echo >&2 "[+] report stability 1st pass"
examples/kernel-quick-checks.sh:    echo "## stability"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw exec $uuid 'find /usr -type f | xargs md5sum &> /tmp/a'
examples/kernel-quick-checks.sh:	scw exec $uuid 'find /usr -type f | xargs cat &> /tmp/megafile'
examples/kernel-quick-checks.sh:	scw exec $uuid 'for i in {1..5}; do wget --no-verbose --page-requisites http://ping.online.net/1000Mo.dat -O $i 2>/dev/null & done; wait $(jobs -p)' | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    echo >&2 "[+] report stability 2nd pass"
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw exec $uuid 'find /usr -type f | xargs md5sum &> /tmp/b'
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    echo >&2 "[+] report stability 3rd pass"
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw exec $uuid 'diff /tmp/a /tmp/b' | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    echo >&2 "[+] report stability fping"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    fping $(cat $WORKDIR/ips.txt) | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:}
examples/kernel-quick-checks.sh:function main {
examples/kernel-quick-checks.sh:    prepare
examples/kernel-quick-checks.sh:    cleanup
examples/kernel-quick-checks.sh:    boot
examples/kernel-quick-checks.sh:    report > report-${BUILD_ID}.md
examples/kernel-quick-checks.sh:    echo >&2 "[+] report is at report-${BUILD_ID}.md"
examples/kernel-quick-checks.sh:    cleanup
examples/kernel-quick-checks.sh:}
examples/kernel-quick-checks.sh:main
examples/kernel-quick-checks.sh:rm -rf $WORKDIR
lib/program.js:var Q = require('q'),
lib/program.js:    _ = require('lodash'),
lib/program.js:    async = require('async'),
lib/program.js:    child_process = require('child_process'),
lib/program.js:    debug = require('debug')('scaleway-cli:program'),
lib/program.js:    filesize = require('filesize'),
lib/program.js:    filesizeParser = require('filesize-parser'),
lib/program.js:    fs = require('fs'),
lib/program.js:    jsonPath = require('JSONPath'),
lib/program.js:    moment = require('moment'),
lib/program.js:    program = require('commander'),
lib/program.js:    termJsCli = require('../node_modules/term.js-cli'),
lib/program.js:    utils = require('./utils');
lib/program.js:program
lib/program.js:  .version(utils.getVersion('..'))
lib/program.js:  .option('--api-endpoint <url>', 'set the API endpoint')
lib/program.js:  .option('--dry-run', 'do not execute actions')
lib/program.js:  .option('-D, --debug', 'enable debug mode');
lib/program.js:program
lib/program.js:  .command('attach <server>')
lib/program.js:  .description('attach (serial console) to a running server')
lib/program.js:  .option('-n, --no-newline', 'do not send a newline on connection')
lib/program.js:  .option('-q, --quiet', 'do not print warning message')
lib/program.js:  .action(function(server, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    utils.searchEntity({input: server, _type: 'servers', client: client}, function(err, entity) {
lib/program.js:      utils.assert(err);
lib/program.js:      var ttyUrl = 'https://tty.cloud.online.net?server_id=' + entity._id
lib/program.js:            + '&type=serial&auth_token=' + client.config.token;
lib/program.js:      debug('tty url', ttyUrl);
lib/program.js:      var serial = new termJsCli({
lib/program.js:        url: ttyUrl,
lib/program.js:        sendNewLineOnConnect: options.newline
lib/program.js:      });
lib/program.js:      serial.connect(function(err) {
lib/program.js:        utils.assert(err);
lib/program.js:        if (!options.quiet) {
lib/program.js:          console.error("info: you are connected, type 'Ctrl+q' to quit. (hide this message with -q)");
lib/program.js:        }
lib/program.js:      });
lib/program.js:    });
lib/program.js:  });
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('build <path>')
lib/program.js:  .description('build an image from a file')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:program
lib/program.js:  .command('commit <server> [name]')
lib/program.js:  .description("create a new snapshot from a server's volume")
lib/program.js:  // .option('-a, --author <author>',
lib/program.js:  //         'author (e.g., "Georges Abitbol <georges@most-class.world>")')
lib/program.js:  .option('--name <name>', 'assign a name to the snapshot', 'noname')
lib/program.js:  // .option('-p, --pause', 'pause server during commit')
lib/program.js:  .option('-v, --volume <slot>', 'volume slot')
lib/program.js:  .action(function(server, name, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    var volumeIdx = options.volume || 0;
lib/program.js:    utils.searchEntity({input: server, _type: 'servers', client: client}, function(err, entity) {
lib/program.js:      utils.assert(err);
lib/program.js:      client.get('/servers/' + entity._id)
lib/program.js:        .then(function(res) {
lib/program.js:          name = options.name || (res.body.server.name + '-snapshot');
lib/program.js:          client.post('/snapshots', {
lib/program.js:            volume_id: res.body.server.volumes[volumeIdx.toString()].id,
lib/program.js:            organization: res.body.server.organization,
lib/program.js:            name: name
lib/program.js:          })
lib/program.js:            .then(function(res) {
lib/program.js:              utils.saveEntity(res.body.snapshot, 'snapshots');
lib/program.js:              console.log(res.body.snapshot.id);
lib/program.js:            })
lib/program.js:            .catch(utils.panic);
lib/program.js:        })
lib/program.js:        .catch(utils.panic);
lib/program.js:    });
lib/program.js:  });
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('cp <server:path> <path>')
lib/program.js:  .description("copy files/folders from a server's filesystem to the host path")
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:program
lib/program.js:  .command('create <image>')
lib/program.js:  .description('create a new server but do not start it')
lib/program.js:  .option('--name <name>', 'assign a name to the server', 'noname')
lib/program.js:  .option('--bootscript <bootscript>', 'assign a bootscript')
lib/program.js:  .option('-v, --volume <size>', 'attach additional volume', utils.collect, [])
lib/program.js:  .option('-e, --env <environments>',
lib/program.js:          'provide metadata tags passed to initrd (i.e., boot=rescue,INITRD_DEBUG=1)',
lib/program.js:          utils.collect, [])
lib/program.js:  .on('--help', function() {
lib/program.js:    console.log('  Examples:');
lib/program.js:    console.log();
lib/program.js:    console.log('    $ scw create docker');
lib/program.js:    console.log('    $ scw create 10GB');
lib/program.js:    console.log('    $ scw create 50GB --bootscript=3.2.34 --env="boot=live" --env="rescue_image=http://test-images.fr-1.storage.online.net/ocs-distrib-ubuntu-trusty.tar"');
lib/program.js:    console.log('    $ SERVER=$(scw create 1GB --bootscript=rescue --volume="50GB"); scw inspect ${SERVER}');
lib/program.js:    console.log();
lib/program.js:  })
lib/program.js:  .action(function(image, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    // Create volumes
lib/program.js:    Q.all(_.map(options.volume, function(volume) {
lib/program.js:      return client.post('/volumes', {
lib/program.js:        organization: client.config.organization,
lib/program.js:        size: parseInt(filesizeParser(volume, {base: 10})),
lib/program.js:        name: volume,
lib/program.js:        volume_type: 'l_ssd'
lib/program.js:      });
lib/program.js:    })).then(
lib/program.js:      function(results) {
lib/program.js:        var volumes = _.pluck(_.pluck(results, 'body'), 'volume');
lib/program.js:        options.volumes = _.pluck(volumes, 'id');
lib/program.js:        _.forEach(volumes, function(volume) {
lib/program.js:          utils.saveEntity(volume, 'volumes');
lib/program.js:        });
lib/program.js:        // Resolve bootscript
lib/program.js:        utils.searchEntity({input: options.bootscript, _type: 'bootscripts', client: client}, function(err, bootscriptEntity) {
lib/program.js:          options.bootscript = bootscriptEntity && bootscriptEntity._id;
lib/program.js:          utils.getImageOrNewVolume(client, image, function(ret) {
lib/program.js:            if (ret.volume) {
lib/program.js:              options.root_volume = ret.volume;
lib/program.js:            } else if (ret.image) {
lib/program.js:              options.image = ret.image;
lib/program.js:            }
lib/program.js:            options.tags = options.env;
lib/program.js:            utils.createServer(client, options);
lib/program.js:          });
lib/program.js:        });
lib/program.js:      });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('events')
lib/program.js:  .description('get real time events from the API')
lib/program.js:  // .option('-f, --filter <filters>',
lib/program.js:  //         'provide filter values. valid filters: (i.e., status=pending)',
lib/program.js:  //         utils.collect, [])
lib/program.js:  // .option('--since <timestamp>', 'show all events created since timestamp')
lib/program.js:  // .option('--until <timestamp>', 'stream events until this timestamp')
lib/program.js:  .action(function(options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    client.get('/tasks')
lib/program.js:      .then(function(res) {
lib/program.js:        _.forEach(res.body.tasks, function(task) {
lib/program.js:          console.log(task.started_at + ' ' +
lib/program.js:                      task.href_from + ': ' +
lib/program.js:                      task.description + ' ('+
lib/program.js:                      task.status + ' ' +
lib/program.js:                      task.progress + ') ' +
lib/program.js:                      task.terminated_at);
lib/program.js:        });
lib/program.js:      })
lib/program.js:      .catch(utils.panic);
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('exec <server> <command> [args...]')
lib/program.js:  .description('run a command in a running server')
lib/program.js:  // .option('-d, --detach', 'detached mode: run command in the background')
lib/program.js:  // .option('-i, --interactive', 'keep STDIN open even if not attached')
lib/program.js:  // .option('-t, --tty', 'allocate a pseudo-TTY')
lib/program.js:  .option('-k, --insecure', 'DEPRECATED')
lib/program.js:  .option('-s, --secure', 'enable SSH strict host key checking')
lib/program.js:  .option('-T, --timeout <secs>', 'set all timeout values to secs')
lib/program.js:  .option('--ssh-timeout <secs>', 'set the ssh timeout to secs')
lib/program.js:  .option('--boot-timeout <secs>', 'set the boot timeout to secs')
lib/program.js:  .option('-w, --wait', 'wait for server to be available')
lib/program.js:  .on('--help', function() {
lib/program.js:    console.log("  the '--secure' option can be enabled by setting 'scw_exec_secure=1' in environment");
lib/program.js:    console.log();
lib/program.js:    console.log('  Examples:');
lib/program.js:    console.log();
lib/program.js:    console.log('    $ scw exec myserver /bin/bash');
lib/program.js:    console.log("    $ scw exec --safe myserver 'tmux a'");
lib/program.js:    console.log("    $ export scw_exec_secure=1; scw exec myserver 'ls -la | grep .tar'");
lib/program.js:    console.log("    $ scw exec $(scw start --wait $(scw create docker)) /bin/bash");
lib/program.js:    console.log('    $ scw exec --timeout=30 myserver /usr/local/bin/long-command');
lib/program.js:    console.log('    $ scw exec --wait $(scw start $(scw create docker)) /bin/bash');
lib/program.js:    console.log();
lib/program.js:  })
lib/program.js:  .action(function(server, command, commandArgs, options) {
lib/program.js:    if (options.insecure) {
lib/program.js:      console.log("The 'exec --insecure' option is now the default behaviour");
lib/program.js:      console.log();
lib/program.js:      console.log("See https://github.com/moul/scaleway-cli/issues/5");
lib/program.js:      utils.panic("Exiting.");
lib/program.js:    }
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    var globalTimeout = utils.panicTimeout(options.timeout, 'global execution'),
lib/program.js:        bootTimeout, sshTimeout;
lib/program.js:    options.secure = options.secure || client.config.exec_secure;
lib/program.js:    var execCallback = function(code) {
lib/program.js:      clearTimeout(globalTimeout);
lib/program.js:      process.exit(code);
lib/program.js:    };
lib/program.js:    utils.searchEntity({input: server, _type: 'servers', client: client}, function(err, entity) {
lib/program.js:      utils.assert(err);
lib/program.js:      if (options.wait) {
lib/program.js:        bootTimeout = utils.panicTimeout(options.bootTimeout, 'server state is ready');
lib/program.js:        utils.waitForServerState(client, entity._id, 'running', function(err, server) {
lib/program.js:          clearTimeout(bootTimeout);
lib/program.js:          sshTimeout = utils.panicTimeout(options.sshTimeout, 'ssh port is ready');
lib/program.js:          utils.waitPortOpen(server.public_ip.address, 22, function(err) {
lib/program.js:            clearTimeout(sshTimeout);
lib/program.js:            clearTimeout(globalTimeout);
lib/program.js:            utils.assert(err);
lib/program.js:            utils.serverExec(server.public_ip.address, command, commandArgs, options, execCallback);
lib/program.js:          });
lib/program.js:        });
lib/program.js:      } else {
lib/program.js:        client.get('/servers/' + entity._id)
lib/program.js:          .then(function(res) {
lib/program.js:            if (!res.body.server.public_ip) {
lib/program.js:              utils.panic('Server ' + res.body.server.id + ' is not running');
lib/program.js:            }
lib/program.js:            utils.serverExec(res.body.server.public_ip.address, command, commandArgs, options, execCallback);
lib/program.js:          }).catch(utils.panic);
lib/program.js:      }
lib/program.js:    });
lib/program.js:  });
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('export <server>')
lib/program.js:  .description('stream the contents of a server as a tar archive')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:program
lib/program.js:  .command('history <image>')
lib/program.js:  .description('show the history of an image')
lib/program.js:  .option('--no-trunc', "don't truncate output")
lib/program.js:  .option('-q, --quiet', 'only display numeric IDs')
lib/program.js:  .action(function(image, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    utils.searchEntity({input: image, _type: 'images', client: client}, function(err, entity) {
lib/program.js:      utils.assert(err);
lib/program.js:      client.get('/images/' + entity._id)
lib/program.js:        .then(function(res) {
lib/program.js:          if (options.quiet) {
lib/program.js:            console.log(res.body.image.id);
lib/program.js:          } else {
lib/program.js:            var table = utils.newTable({
lib/program.js:              head: [
lib/program.js:                'IMAGE', 'CREATED', 'CREATED BY', 'SIZE'
lib/program.js:              ]
lib/program.js:            });
lib/program.js:            var image = res.body.image;
lib/program.js:            var row = [
lib/program.js:              image.id,
lib/program.js:              moment(image.creation_date).fromNow(),
lib/program.js:              image.root_volume.name,
lib/program.js:              filesize(image.root_volume.size, {base: 10})
lib/program.js:            ];
lib/program.js:            if (options.trunc) {
lib/program.js:              utils.truncateRow(row, [8, 25, 25, 25]);
lib/program.js:            }
lib/program.js:            table.push(row);
lib/program.js:            console.log(table.toString());
lib/program.js:          }
lib/program.js:        })
lib/program.js:        .catch(utils.panic);
lib/program.js:    });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('images')
lib/program.js:  .description('list images')
lib/program.js:  .option('-a, --all', 'show all images')
lib/program.js:  // .option('-f, --filter <filters>',
lib/program.js:  //         "provide filter values. (i.e., 'public=true')", utils.collect, [])
lib/program.js:  .option('--no-trunc', "don't truncate output")
lib/program.js:  .option('-q, --quiet', 'only display numeric IDs')
lib/program.js:  .action(function(options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    var promises = [];
lib/program.js:    var query = '/images?';
lib/program.js:    promises.push(client.get(query));
lib/program.js:    if (options.all) {
lib/program.js:      promises.push(client.get('/snapshots'));
lib/program.js:      promises.push(client.get('/bootscripts'));
lib/program.js:    }
lib/program.js:    Q.all(promises).then(
lib/program.js:      function(results) {
lib/program.js:        var entries = _.reduce(
lib/program.js:          _.pluck(results, 'body'),
lib/program.js:          function(entries, group) {
lib/program.js:            return entries.concat.apply(
lib/program.js:              entries,
lib/program.js:              _.reduce(
lib/program.js:                group,
lib/program.js:                function(aggreg, n, key) {
lib/program.js:                  utils.saveEntities(n, key);
lib/program.js:                  return aggreg.concat.apply(
lib/program.js:                    aggreg,
lib/program.js:                    _.map(n, function(entry) {
lib/program.js:                      entry._type = key;
lib/program.js:                      return entry;
lib/program.js:                    })
lib/program.js:                  );
lib/program.js:                }, [])
lib/program.js:            );
lib/program.js:          }, []);
lib/program.js:        if (options.quiet) {
lib/program.js:          _.forEach(
lib/program.js:            _.sortByOrder(entries, ['creation_date'], [false]),
lib/program.js:            function(entry) {
lib/program.js:              console.log(entry.id);
lib/program.js:            });
lib/program.js:        } else {
lib/program.js:          var table = utils.newTable({
lib/program.js:            head: [
lib/program.js:              'REPOSITORY', 'TAG', 'IMAGE ID', 'CREATED', 'VIRTUAL SIZE'
lib/program.js:            ]
lib/program.js:          });
lib/program.js:          _.forEach(_.sortByOrder(
lib/program.js:            entries,
lib/program.js:            ['creation_date'],
lib/program.js:            [false]
lib/program.js:          ), function(entry) {
lib/program.js:            var repository, tag, imageId, created, virtualSize;
lib/program.js:            switch (entry._type) {
lib/program.js:            case 'snapshots':
lib/program.js:              var snapshot = entry;
lib/program.js:              repository = utils.wordify(snapshot.name);
lib/program.js:              tag = '<none>';
lib/program.js:              imageId = snapshot.id;
lib/program.js:              created = moment(snapshot.creation_date).fromNow();
lib/program.js:              virtualSize = filesize(snapshot.size, {base: 10});
lib/program.js:              break;
lib/program.js:            case 'images':
lib/program.js:              var image = entry;
lib/program.js:              repository = utils.wordify(image.name);
lib/program.js:              if (!image.public) {
lib/program.js:                repository = 'user/' + utils.wordify(image.name);
lib/program.js:              }
lib/program.js:              tag = 'latest';
lib/program.js:              imageId = image.id;
lib/program.js:              created = moment(image.creation_date).fromNow();
lib/program.js:              virtualSize = filesize(image.root_volume.size, {base: 10});
lib/program.js:              break;
lib/program.js:            case 'bootscripts':
lib/program.js:              var bootscript = entry;
lib/program.js:              repository = utils.wordify(bootscript.title);
lib/program.js:              tag = 'bootscript';
lib/program.js:              imageId = bootscript.id;
lib/program.js:              created = 'n/a';
lib/program.js:              virtualSize = 'n/a';
lib/program.js:              break;
lib/program.js:            }
lib/program.js:            var row = [
lib/program.js:              repository, tag, imageId, created, virtualSize
lib/program.js:            ];
lib/program.js:            if (options.trunc) {
lib/program.js:              utils.truncateRow(row, [40, 25, 8, 25, 25]);
lib/program.js:            }
lib/program.js:            table.push(row);
lib/program.js:          });
lib/program.js:          console.log(table.toString());
lib/program.js:        }
lib/program.js:      }, utils.panic);
lib/program.js:  });
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('import')
lib/program.js:  .description('create a new filesystem image from the contents of a tarball')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:program
lib/program.js:  .command('info')
lib/program.js:  .description('display system-wide information')
lib/program.js:  .action(function() {
lib/program.js:    var rc = utils.rc();
lib/program.js:    console.log('Organization: ' + rc.organization);
lib/program.js:    console.log('Token: ' + utils.anonymizeUUID(rc.token));
lib/program.js:    console.log('API Endpoint: ' + rc.api_endpoint);
lib/program.js:    console.log('RC file: ' + rc.config);
lib/program.js:    console.log('CLI path: ' + process.argv[1]);
lib/program.js:    console.log('User: ' + process.env.USER);
lib/program.js:    utils.db.count({}, function(err, count) {
lib/program.js:      if (!err) {
lib/program.js:        console.log('Cached entities: '+ count);
lib/program.js:      }
lib/program.js:    });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('inspect <items...>')
lib/program.js:  .description('return low-level information on a server or image')
lib/program.js:  .option('-f, --format <format>', 'format the output using the given template')
lib/program.js:  .action(function(items, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    var promises = [];
lib/program.js:    var once = function(item, cb) {
lib/program.js:      return [
lib/program.js:        client.get('/servers/' + item._id),
lib/program.js:        client.get('/images/' + item._id),
lib/program.js:        client.get('/volumes/' + item._id),
lib/program.js:        client.get('/bootscripts/' + item._id),
lib/program.js:        client.get('/snapshots/' + item._id)
lib/program.js:        // client.get('/organizations/' + item._id),
lib/program.js:        // client.get('/users/' + item._id),
lib/program.js:        // client.get('/ips/' + item._id)
lib/program.js:      ];
lib/program.js:    };
lib/program.js:    utils.searchEntities({inputs: items}, function(err, entities) {
lib/program.js:      utils.assert(err);
lib/program.js:      promises = promises.concat.apply(promises, entities.map(once));
lib/program.js:      Q.allSettled(promises).then(
lib/program.js:        function(results) {
lib/program.js:          var entries = _.compact(_.pluck(_.pluck(results, 'value'), 'body'));
lib/program.js:          if (options.format) {
lib/program.js:            _.map(entries, function(entry) {
lib/program.js:              var parsed = jsonPath.eval(entry, '$' + options.format);
lib/program.js:              if (typeof(parsed) === 'object' && parsed.length === 1) {
lib/program.js:                console.log(parsed[0]);
lib/program.js:              } else {
lib/program.js:                console.log(parsed);
lib/program.js:              }
lib/program.js:            });
lib/program.js:          } else {
lib/program.js:            console.log(JSON.stringify(entries, null, 2));
lib/program.js:          }
lib/program.js:        }, utils.panic);
lib/program.js:    });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('kill <server>')
lib/program.js:  .description('kill a running server')
lib/program.js:  // .option('-s, --signal <signal>', 'Signal to send to the server', 'KILL')
lib/program.js:  .action(function(server, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    utils.searchEntity({input: server, _type: 'servers', client: client}, function(err, entity) {
lib/program.js:      utils.assert(err);
lib/program.js:      client.get('/servers/' + entity._id)
lib/program.js:        .then(function(res) {
lib/program.js:          if (!res.body.server.public_ip) {
lib/program.js:            utils.panic('Server ' + res.body.server.id + ' is not running');
lib/program.js:          }
lib/program.js:          var ip = res.body.server.public_ip.address;
lib/program.js:          utils.sshExec(ip, 'halt', {}, function(statusCode) {
lib/program.js:            if (statusCode === 0) {
lib/program.js:              console.log(server);
lib/program.js:            }
lib/program.js:            process.exit(statusCode);
lib/program.js:          });
lib/program.js:        })
lib/program.js:        .catch(utils.panic);
lib/program.js:    });
lib/program.js:  });
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('load')
lib/program.js:  .description('load an image from a tar archive')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:program
lib/program.js:  .command('login')
lib/program.js:  .description('login to the API')
lib/program.js:  .option('--organization <uuid>', 'set the organization')
lib/program.js:  .option('--token <token>', 'token')
lib/program.js:  .action(function(options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    var newConfig = _.cloneDeep(client.config);
lib/program.js:    delete newConfig._;
lib/program.js:    delete newConfig.configs;
lib/program.js:    delete newConfig.config;
lib/program.js:    var filepath = utils.defaultConfigPath();
lib/program.js:    fs.writeFile(
lib/program.js:      filepath,
lib/program.js:      JSON.stringify(newConfig, null, 2),
lib/program.js:      function (err) {
lib/program.js:        utils.assert(err);
lib/program.js:        console.log('configuration written to ' + filepath);
lib/program.js:      });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('logout')
lib/program.js:  .description('log out from the API')
lib/program.js:  .action(function() {
lib/program.js:    var filepath = utils.defaultConfigPath();
lib/program.js:    fs.unlink(
lib/program.js:      filepath,
lib/program.js:      function (err) {
lib/program.js:        utils.panic(err);
lib/program.js:        console.log('removed ' + filepath + ' configuration file');
lib/program.js:      });
lib/program.js:  });
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('logs <server>')
lib/program.js:  .description('fetch the logs of a server')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('port')
lib/program.js:  .description('list port security for the server')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js:*/
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('pause')
lib/program.js:  .description('pause all processes within a server')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js:*/
lib/program.js:program
lib/program.js:  .command('ps')
lib/program.js:  .description('list servers')
lib/program.js:  .option('-a, --all',
lib/program.js:          'show all servers. only running servers are shown by default')
lib/program.js:  // .option('--before <server>', 'show only server created before server, ' +
lib/program.js:  //         'include non-running ones')
lib/program.js:  // .option('-f, --filter <filters>', 'provide filter values. valid filters: ' +
lib/program.js:  //         'status=(starting|running|stopping|stopped)', utils.collect, [])
lib/program.js:  .option('-l, --latest',
lib/program.js:          'show only the latest created server, include non-running ones')
lib/program.js:  .option('-n <n>', 'show n last created servers, include non-running ones.',
lib/program.js:          parseInt)
lib/program.js:  .option('--no-trunc', "don't truncate output")
lib/program.js:  .option('-q, --quiet', 'only display numeric IDs')
lib/program.js:  // .option('-s, --size', 'display total file sizes')
lib/program.js:  // .option('--since <server>',
lib/program.js:  //         'show only servers created since server, include non-running ones')
lib/program.js:  .action(function(options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    var query = '/servers?';
lib/program.js:    if (!options.all)   { query += 'state=running&'; }
lib/program.js:    if (options.latest) { query += 'limit=1&'; }
lib/program.js:    if (options.n)      { query += 'limit=' + options.n + '&'; }
lib/program.js:    client.get(query)
lib/program.js:      .then(function(res) {
lib/program.js:        if (options.all) {
lib/program.js:          utils.saveEntities(res.body.servers, 'servers');
lib/program.js:        } else {
lib/program.js:          // FIXME: saveEntity
lib/program.js:        }
lib/program.js:        if (options.quiet) {
lib/program.js:          _.forEach(
lib/program.js:            _.sortByOrder(res.body.servers, ['creation_date'], [false]),
lib/program.js:            function(server) {
lib/program.js:              console.log(server.id);
lib/program.js:            });
lib/program.js:        } else {
lib/program.js:          var table = utils.newTable({
lib/program.js:            head: [
lib/program.js:              'SERVER ID', 'IMAGE', 'COMMAND', 'CREATED', 'STATUS', 'PORTS',
lib/program.js:              'NAME'
lib/program.js:            ]
lib/program.js:          });
lib/program.js:          _.forEach(_.sortByOrder(
lib/program.js:            res.body.servers,
lib/program.js:            ['creation_date'],
lib/program.js:            [false]), function(server) {
lib/program.js:            var row = [
lib/program.js:              server.id,
lib/program.js:              (server.image ? utils.wordify(server.image.root_volume.name) : ''),
lib/program.js:              '',
lib/program.js:              moment(server.creation_date).fromNow(),
lib/program.js:              server.state,
lib/program.js:              '',
lib/program.js:              utils.wordify(server.name)
lib/program.js:            ];
lib/program.js:            if (options.trunc) {
lib/program.js:              utils.truncateRow(row, [8, 25, 25, 25, 25, 25, -1]);
lib/program.js:            }
lib/program.js:            table.push(row);
lib/program.js:          });
lib/program.js:          console.log(table.toString());
lib/program.js:        }
lib/program.js:      })
lib/program.js:      .catch(utils.panic);
lib/program.js:  });
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('pull <image>')
lib/program.js:  .description('pull an image or a repository')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('push <image>')
lib/program.js:  .description('push an image or a repository')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('rename <server>')
lib/program.js:  .description('rename an existing server')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:program
lib/program.js:  .command('restart <servers...>')
lib/program.js:  .description('restart a running server')
lib/program.js:  // .option('-t, --time <second>', 'number of seconds to try to stop for ' +
lib/program.js:  //         'before killing the server. once killed it will be restarted.')
lib/program.js:  .action(function(servers, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    utils.searchEntities({inputs: servers, filters: { _type: 'servers' }, any: true, client: client}, function(err, entities) {
lib/program.js:      utils.assert(err);
lib/program.js:      _.each(entities, function(server) {
lib/program.js:        if (server.length === 0) {
lib/program.js:          return null;
lib/program.js:        }
lib/program.js:        client.post('/servers/' + server._id + '/action', {
lib/program.js:          action: 'reboot'
lib/program.js:        })
lib/program.js:          .then(function() {
lib/program.js:            console.log(server);
lib/program.js:          })
lib/program.js:          .catch(function (err) {
lib/program.js:            if (err.error.message !== 'server is being stopped or rebooted') {
lib/program.js:              utils.panic(err);
lib/program.js:            }
lib/program.js:          });
lib/program.js:        return null;
lib/program.js:      });
lib/program.js:    });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('rm <servers...>')
lib/program.js:  .description('remove one or more servers')
lib/program.js:  .action(function(servers, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    utils.searchEntities({inputs: servers, filters: { _type: 'servers' }, any: true, client: client}, function(err, entities) {
lib/program.js:      utils.assert(err);
lib/program.js:      _.each(entities, function(server) {
lib/program.js:        if (server.length === 0) {
lib/program.js:          return null;
lib/program.js:        }
lib/program.js:        return client.delete('/servers/' + server._id)
lib/program.js:          .then(function(res) {
lib/program.js:            if (res.statusCode !== 204) {
lib/program.js:              error(res);
lib/program.js:            }
lib/program.js:          })
lib/program.js:          .catch(utils.error);
lib/program.js:      });
lib/program.js:    });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('rmi <images...>')
lib/program.js:  .description('remove one or more images')
lib/program.js:  .action(function(images, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    utils.searchEntities({inputs: images, filters: { _type: 'images' }, any: true, client: client}, function(err, entities) {
lib/program.js:      utils.assert(err);
lib/program.js:      _.each(entities, function(image) {
lib/program.js:        if (image.length === 0) {
lib/program.js:          return null;
lib/program.js:        }
lib/program.js:        return client.delete('/images/' + image._id)
lib/program.js:          .then(function(res) {
lib/program.js:            if (res.statusCode !== 204) {
lib/program.js:              error(res);
lib/program.js:            }
lib/program.js:          })
lib/program.js:          .catch(utils.error);
lib/program.js:      });
lib/program.js:    });
lib/program.js:  });
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('run <image>')
lib/program.js:  .description('run a command in a new server')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('save <image>')
lib/program.js:  .description('save an image to a tar archive')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('search <keyword>')
lib/program.js:  .description('search for an image on the Hub')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:program
lib/program.js:  .command('start <servers...>')
lib/program.js:  .description('start a stopped server')
lib/program.js:  // .option('-a, --attach', "attach server's STDOUT and STDERR and forward " +
lib/program.js:  //         'all signals to the process')
lib/program.js:  // .option('-i, --interactive', "attach server's STDIN")
lib/program.js:  .option('-s, --sync', 'DEPRECATED. see --wait')
lib/program.js:  .option('-w, --wait', 'synchronous start. wait for SSH to be ready')
lib/program.js:  .option('-T, --timeout <secs>', 'set all timeout values to secs')
lib/program.js:  .option('--boot-timeout <secs>', 'set the boot timeout to secs')
lib/program.js:  .option('--ssh-timeout <secs>', 'set the ssh timeout to secs')
lib/program.js:  .action(function(servers, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    if (options.sync) {
lib/program.js:      console.log("The 'start --sync' option was renamed to 'start --wait'");
lib/program.js:      utils.panic("Exiting.");
lib/program.js:    }
lib/program.js:    var globalTimeout = utils.panicTimeout(options.timeout, 'global execution'),
lib/program.js:        bootTimeout = null,
lib/program.js:        sshTimeout = null;
lib/program.js:    utils.searchEntities({inputs: servers, filters: { _type: 'servers' }, any: true, client: client}, function(err, entities) {
lib/program.js:      utils.assert(err);
lib/program.js:      _.each(entities, function(server) {
lib/program.js:        if (server.length === 0) {
lib/program.js:          return null;
lib/program.js:        }
lib/program.js:        client.post('/servers/' + server._id + '/action', {
lib/program.js:          action: 'poweron'
lib/program.js:        })
lib/program.js:          .then(function() {
lib/program.js:            console.log(server._id);
lib/program.js:            if ( options.wait) {
lib/program.js:              bootTimeout = utils.panicTimeout(options.bootTimeout, 'server state is ready');
lib/program.js:              utils.waitForServerState(client, server._id, 'running', function(err, server) {
lib/program.js:                clearTimeout(bootTimeout);
lib/program.js:                sshTimeout = utils.panicTimeout(options.sshTimeout, 'ssh port is ready');
lib/program.js:                utils.waitPortOpen(server.public_ip.address, 22, function(err) {
lib/program.js:                  clearTimeout(sshTimeout);
lib/program.js:                  clearTimeout(globalTimeout);
lib/program.js:                  utils.assert(err);
lib/program.js:                  process.exit(0);
lib/program.js:                });
lib/program.js:                debug('server state is running');
lib/program.js:              });
lib/program.js:            }
lib/program.js:          })
lib/program.js:          .catch(function (err) {
lib/program.js:            clearTimeout(globalTimeout);
lib/program.js:            if (err.error.message !== 'server should be stopped') {
lib/program.js:              utils.panic(err);
lib/program.js:            }
lib/program.js:          });
lib/program.js:        return null;
lib/program.js:      });
lib/program.js:    });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('stop <servers...>')
lib/program.js:  .description('stop a running server')
lib/program.js:  .option('-t, --terminate', 'stop and trash a server and its volumes')
lib/program.js:  .action(function(servers, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    var data = {
lib/program.js:      action: 'poweroff'
lib/program.js:    };
lib/program.js:    if (options.terminate) {
lib/program.js:      data.action = 'terminate';
lib/program.js:    }
lib/program.js:    utils.searchEntities({inputs: servers, filters: { _type: 'servers' }, any: true, client: client}, function(err, entities) {
lib/program.js:      utils.assert(err);
lib/program.js:      _.each(entities, function(server) {
lib/program.js:        if (server.length === 0) {
lib/program.js:          return null;
lib/program.js:        }
lib/program.js:        return client.post('/servers/' + server._id + '/action', data)
lib/program.js:          .then(function() {
lib/program.js:            console.log(server._id);
lib/program.js:          })
lib/program.js:          .catch(function (err) {
lib/program.js:            if (!_.includes([
lib/program.js:              'server is being stopped or rebooted',
lib/program.js:              'server should be running'
lib/program.js:            ], err.error.message)) {
lib/program.js:              utils.error(err);
lib/program.js:            }
lib/program.js:          });
lib/program.js:      });
lib/program.js:    });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('tag <snapshot> <tag-name>')
lib/program.js:  .description('tag an image into a repository')
lib/program.js:  .action(function(snapshot, tagName, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    utils.searchEntity({input: snapshot, _type: 'snapshots', client: client}, function(err, entity) {
lib/program.js:      utils.assert(err);
lib/program.js:      client.get('/snapshots/' + entity._id)
lib/program.js:        .then(function(res) {
lib/program.js:          client.post('/images', {
lib/program.js:            root_volume: res.body.snapshot.id,
lib/program.js:            organization: res.body.snapshot.organization,
lib/program.js:            name: tagName,
lib/program.js:            arch: 'arm'
lib/program.js:          })
lib/program.js:            .then(function(res) {
lib/program.js:              utils.saveEntity(res.body.image, 'images');
lib/program.js:              console.log(res.body.image.id);
lib/program.js:            })
lib/program.js:            .catch(utils.panic);
lib/program.js:        })
lib/program.js:        .catch(utils.panic);
lib/program.js:    });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('top <server>')
lib/program.js:  .description('lookup the running processes of a server')
lib/program.js:  .action(function(server, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    utils.searchEntity({input: server, _type: 'servers', client: client}, function(err, entity) {
lib/program.js:      utils.assert(err);
lib/program.js:      client.get('/servers/' + entity._id)
lib/program.js:        .then(function(res) {
lib/program.js:          if (!res.body.server.public_ip) {
lib/program.js:            utils.panic('Server ' + res.body.server.id + ' is not running');
lib/program.js:          }
lib/program.js:          var ip = res.body.server.public_ip.address;
lib/program.js:          utils.sshExec(ip, 'ps', {}, function(statusCode) {
lib/program.js:            if (statusCode === 0) {
lib/program.js:              console.log(server);
lib/program.js:            }
lib/program.js:            process.exit(statusCode);
lib/program.js:          });
lib/program.js:        })
lib/program.js:        .catch(utils.panic);
lib/program.js:    });
lib/program.js:  });
lib/program.js:/*
lib/program.js:program
lib/program.js:  .command('unpause <server>')
lib/program.js:  .description('unpause a paused server')
lib/program.js:  .action(utils.notImplementedAction);
lib/program.js: */
lib/program.js:program._events.version = null;
lib/program.js:program
lib/program.js:  .command('version')
lib/program.js:  .description('show the version information')
lib/program.js:  .action(function() {
lib/program.js:    console.log('Client version: ' + utils.getVersion('..'));
lib/program.js:    console.log('Client API version: ' + utils.getVersion('scaleway'));
lib/program.js:    console.log('Node.js version (client): ' + process.version);
lib/program.js:    console.log('OS/Arch (client): ' + process.platform + '/' + process.arch);
lib/program.js:    // FIXME: add information about server
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('wait <server>')
lib/program.js:  .description('block until a server stops')
lib/program.js:  .action(function(server, options) {
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    utils.searchEntity({input: server, _type: 'servers', client: client}, function(err, entity) {
lib/program.js:      utils.assert(err);
lib/program.js:      utils.waitForServerState(client, entity._id, 'stopped', function(err) {
lib/program.js:        utils.assert(err);
lib/program.js:        console.log(0);
lib/program.js:      });
lib/program.js:    });
lib/program.js:  });
lib/program.js:program
lib/program.js:  .command('_patch <item> <updates...>', null, {noHelp: true})
lib/program.js:  .description('coucou')
lib/program.js:  .action(function(item, _updates, options) {
lib/program.js:    var updates = {};
lib/program.js:    _.each(_updates, function(item) {
lib/program.js:      var entry = item.split(/=(.+)?/);
lib/program.js:      updates[entry[0]] = entry[1];
lib/program.js:    });
lib/program.js:    var client = utils.newApi(options);
lib/program.js:    var promises = [];
lib/program.js:    var once = function(item, cb) {
lib/program.js:      if (item._type) {
lib/program.js:        return [client.get('/' + item._type + '/' + item._id)];
lib/program.js:      }
lib/program.js:      return [
lib/program.js:        client.get('/servers/' + item._id),
lib/program.js:        client.get('/images/' + item._id),
lib/program.js:        client.get('/volumes/' + item._id),
lib/program.js:        client.get('/bootscripts/' + item._id),
lib/program.js:        client.get('/organizations/' + item._id),
lib/program.js:        client.get('/users/' + item._id),
lib/program.js:        client.get('/ips/' + item._id)
lib/program.js:      ];
lib/program.js:    };
lib/program.js:    utils.searchEntity({input: item}, function(err, entity) {
lib/program.js:      utils.assert(err);
lib/program.js:      promises = once(entity);
lib/program.js:      Q.allSettled(promises).then(
lib/program.js:        function(results) {
lib/program.js:          var entry = _.compact(_.pluck(_.pluck(results, 'value'), 'body'))[0];
lib/program.js:          var itemPath = results[0].value.request.path;
lib/program.js:          _.each(updates, function(newValue, key) {
lib/program.js:            var oldValue = utils.findKeyInDeepObject(entry, key);
lib/program.js:            if (oldValue) {
lib/program.js:              console.log('- ' + key + ': ' + oldValue + ' => ' + newValue);
lib/program.js:            } else {
lib/program.js:              console.log('- ' + key + ': (new value) ' + newValue);
lib/program.js:            }
lib/program.js:          });
lib/program.js:          client.patch(itemPath, updates).then(function(res) {
lib/program.js:            console.log(res.body.server.id);
lib/program.js:          }).catch(utils.panic);
lib/program.js:        }, utils.panic);
lib/program.js:    });
lib/program.js:  });
lib/program.js:module.exports = program;
lib/program.js:module.exports.run = function() {
lib/program.js:  utils.dbInit(function() {
lib/program.js:    program.parse(process.argv);
lib/program.js:    if (!process.argv.slice(2).length) {
lib/program.js:      program.outputHelp();
lib/program.js:    }
lib/program.js:  });
lib/program.js:};
lib/utils.js:var Api = require('scaleway'),
lib/utils.js:    Datastore = require('nedb'),
lib/utils.js:    Q = require('q'),
lib/utils.js:    Table = require('cli-table'),
lib/utils.js:    _ = require('lodash'),
lib/utils.js:    async = require('async'),
lib/utils.js:    attempt = require('attempt'),
lib/utils.js:    child_process = require('child_process'),
lib/utils.js:    debug = require('debug')('scaleway-cli:utils'),
lib/utils.js:    filesizeParser = require('filesize-parser'),
lib/utils.js:    portScanner = require('portscanner'),
lib/utils.js:    util = require('util'),
lib/utils.js:    validator = require('validator');
lib/utils.js:var db = module.exports.db = new Datastore({
lib/utils.js:  filename: '/tmp/scw.db',
lib/utils.js:  autoload: false
lib/utils.js:});
lib/utils.js:module.exports.dbInit = function(fn) {
lib/utils.js:  attempt(
lib/utils.js:    { retries: 15 },
lib/utils.js:    function(attempts) {
lib/utils.js:      db.loadDatabase(this);
lib/utils.js:    },
lib/utils.js:    function (err, results) {
lib/utils.js:      assert(err);
lib/utils.js:      fn();
lib/utils.js:    }
lib/utils.js:  );
lib/utils.js:};
lib/utils.js:var prepareEntity = function(entity, category) {
lib/utils.js:    entity._id = entity.id;
lib/utils.js:    entity._type = category;
lib/utils.js:    entity.creation_date = entity.creation_date || new Date(1970, 1, 1);
lib/utils.js:    return entity;
lib/utils.js:};
lib/utils.js:if (RegExp.prototype.toJSON === undefined) {
lib/utils.js:  RegExp.prototype.toJSON = RegExp.prototype.toString;
lib/utils.js:}
lib/utils.js:var inspect = function(name, obj) {
lib/utils.js:  debug(name, '\n' + JSON.stringify(obj, null, 4));
lib/utils.js:};
lib/utils.js:module.exports.saveEntity = function(entity, category) {
lib/utils.js:  entity = prepareEntity(entity, category);
lib/utils.js:  db.insert([entity], function(err, newDocs) {
lib/utils.js:    assert(err);
lib/utils.js:  });
lib/utils.js:};
lib/utils.js:module.exports.saveEntities = function(entities, category, fn) {
lib/utils.js:  entities = _.map(entities, function(entity) {
lib/utils.js:    return prepareEntity(entity, category);
lib/utils.js:  });
lib/utils.js:  db.remove(
lib/utils.js:    { _type: category },
lib/utils.js:    { multi: true },
lib/utils.js:    function(err, numRemoved) {
lib/utils.js:      debug('saveEntities: removed ' + numRemoved + ' items');
lib/utils.js:      assert(err);
lib/utils.js:      db.insert(entities, function(err, newDocs) {
lib/utils.js:        debug('saveEntities: inserted ' + newDocs.length + ' items');
lib/utils.js:        assert(err);
lib/utils.js:        if (fn) {
lib/utils.js:          fn();
lib/utils.js:        }
lib/utils.js:      });
lib/utils.js:    });
lib/utils.js:  return entities;
lib/utils.js:};
lib/utils.js:module.exports.executeQuery = function(query, cb) {
lib/utils.js:  db.find(query, function(err, rows) {
lib/utils.js:    cb(err, rows);
lib/utils.js:    return (err ? null : rows);
lib/utils.js:  });
lib/utils.js:};
lib/utils.js:module.exports.searchEntity = function(opts, cb) {
lib/utils.js:  if (!opts.input) {
lib/utils.js:    return cb(true, null);
lib/utils.js:  }
lib/utils.js:  opts.quiet = opts.quiet || false;
lib/utils.js:  opts.filters = opts.filters || {};
lib/utils.js:  if (opts._type !== undefined) {
lib/utils.js:    opts.filters._type = opts._type;
lib/utils.js:    delete opts._type;
lib/utils.js:  }
lib/utils.js:  inspect('searchEntity::input', opts);
lib/utils.js:  var queries = [
lib/utils.js:    _.assign({
lib/utils.js:      _id: new RegExp('^' + opts.input, 'i')
lib/utils.js:    }, _.clone(opts.filters || {}))
lib/utils.js:  ];
lib/utils.js:  var nameRegex = opts.input.replace(/[_-]/g, '.*');
lib/utils.js:  if (!opts.filters._type || opts.filters._type == 'servers') {
lib/utils.js:    queries.push(
lib/utils.js:      _.assign({
lib/utils.js:        name: new RegExp(nameRegex, 'i'),
lib/utils.js:        _type: 'servers'
lib/utils.js:      }, _.clone(opts.filters || {}))
lib/utils.js:    );
lib/utils.js:  }
lib/utils.js:  if (!opts.filters._type || opts.filters._type == 'images') {
lib/utils.js:    queries.push(
lib/utils.js:      _.assign({
lib/utils.js:        name: new RegExp(nameRegex, 'i'),
lib/utils.js:        _type: 'images'
lib/utils.js:      }, _.clone(opts.filters || {}))
lib/utils.js:    );
lib/utils.js:    if (opts.input.indexOf('user/') == 0) {
lib/utils.js:      queries.push(
lib/utils.js:        _.assign({
lib/utils.js:          name: new RegExp(nameRegex.replace(/^user\//, ''), 'i'),
lib/utils.js:          _type: 'images'
lib/utils.js:        }, _.clone(opts.filters || {}))
lib/utils.js:      );
lib/utils.js:    }
lib/utils.js:  }
lib/utils.js:  if (!opts.filters._type || opts.filters._type == 'bootscripts') {
lib/utils.js:    queries.push(
lib/utils.js:      _.assign({
lib/utils.js:        title: new RegExp(nameRegex, 'i'),
lib/utils.js:        _type: 'bootscripts'
lib/utils.js:      }, _.clone(opts.filters || {}))
lib/utils.js:    );
lib/utils.js:  }
lib/utils.js:  inspect('searchEntity::queries', queries);
lib/utils.js:  return async.concat(queries, module.exports.executeQuery, function(err, results) {
lib/utils.js:    if (err) {
lib/utils.js:      if (opts.quiet) { return cb(null, results); }
lib/utils.js:      return cb(err, results);
lib/utils.js:    }
lib/utils.js:    if (results.length === 1) {
lib/utils.js:      return cb(null, results[0]);
lib/utils.js:    } else if (results.length === 0) {
lib/utils.js:      if (validator.isUUID(opts.input)) {
lib/utils.js:        return cb(null, { _id: opts.input });
lib/utils.js:      } else {
lib/utils.js:        if (!opts.no_cache_update) {
lib/utils.js:          return module.exports.buildCache(opts, function(err) {
lib/utils.js:            assert(err);
lib/utils.js:            opts.no_cache_update = true;
lib/utils.js:            module.exports.searchEntity(opts, cb);
lib/utils.js:          });
lib/utils.js:        }
lib/utils.js:        if (opts.quiet) { return cb(null, results); }
lib/utils.js:        return cb('No such id for ' + opts.input, null);
lib/utils.js:      }
lib/utils.js:    } else {
lib/utils.js:      var output = 'too many candidates for ' + opts.input + ' (' + results.length + ')';
lib/utils.js:      _.forEach(results, function(result) {
lib/utils.js:        output += '\n- ' + result._id + ' - ' + result.name;
lib/utils.js:      });
lib/utils.js:      if (opts.quiet) { return cb(null, results); }
lib/utils.js:      return cb(output, results);
lib/utils.js:    }
lib/utils.js:  });
lib/utils.js:};
lib/utils.js:module.exports.buildCache = function(opts, fn) {
lib/utils.js:  var type = opts.filters._type;
lib/utils.js:  if (!type || !opts.client) {
lib/utils.js:    return fn();
lib/utils.js:  }
lib/utils.js:  switch (type) {
lib/utils.js:  case 'snapshots':
lib/utils.js:  case 'servers':
lib/utils.js:  case 'images':
lib/utils.js:  case 'volumes':
lib/utils.js:    opts.client.get('/' + type).then(function(res) {
lib/utils.js:      module.exports.saveEntities(res.body[type], type, fn);
lib/utils.js:    });
lib/utils.js:    break;
lib/utils.js:  default:
lib/utils.js:    fn();
lib/utils.js:    break;
lib/utils.js:  }
lib/utils.js:};
lib/utils.js:module.exports.waitForServerState = function(client, serverId, targetState, cb) {
lib/utils.js:  var latestState = 'unknown';
lib/utils.js:  var latestServer = null;
lib/utils.js:  async.whilst(
lib/utils.js:    function(a) {
lib/utils.js:      return latestState !== targetState;
lib/utils.js:    },
lib/utils.js:    function(whilstCb) {
lib/utils.js:      client.get('/servers/' + serverId)
lib/utils.js:        .then(function(res) {
lib/utils.js:          latestServer = res.body.server;
lib/utils.js:          latestState = res.body.server.state;
lib/utils.js:          if (latestState === targetState) {
lib/utils.js:            whilstCb(null, res.body.server);
lib/utils.js:          } else {
lib/utils.js:            setTimeout(whilstCb, 3000);
lib/utils.js:          }
lib/utils.js:        })
lib/utils.js:        .catch(panic);
lib/utils.js:    },
lib/utils.js:    function(err, server) {
lib/utils.js:      assert(err);
lib/utils.js:      cb(null, latestServer);
lib/utils.js:    });
lib/utils.js:};
lib/utils.js:module.exports.waitPortOpen = function(ip, port, cb) {
lib/utils.js:  var isPortOpen = false;
lib/utils.js:  async.until(
lib/utils.js:    function () { return isPortOpen; },
lib/utils.js:    function (loopCb) {
lib/utils.js:      portScanner.checkPortStatus(port, ip, function(err, statusOfPort) {
lib/utils.js:        debug('portscanner', port, ip, err, statusOfPort);
lib/utils.js:        if (statusOfPort === 'open') {
lib/utils.js:          isPortOpen = true;
lib/utils.js:          cb(err);
lib/utils.js:        } else {
lib/utils.js:          setTimeout(function() { loopCb(null); }, 3000);
lib/utils.js:        }
lib/utils.js:      });
lib/utils.js:    }, assert);
lib/utils.js:};
lib/utils.js:module.exports.searchEntities = function(opts, cb) {
lib/utils.js:  var promises = _.map(opts.inputs, function(input) {
lib/utils.js:    return {
lib/utils.js:      input: input,
lib/utils.js:      filters: opts.filters,
lib/utils.js:      quiet: opts.any,
lib/utils.js:      client: opts.client
lib/utils.js:    };
lib/utils.js:  });
lib/utils.js:  return async.map(promises, module.exports.searchEntity, cb);
lib/utils.js:};
lib/utils.js:var error = module.exports.error = function(msg) {
lib/utils.js:  if (msg && msg.options && msg.options.method && msg.options.url &&
lib/utils.js:      msg.statusCode && msg.error && msg.error.message) {
lib/utils.js:    debug('panic', msg);
lib/utils.js:    console.error('> ' + msg.options.method + ' ' + msg.options.url);
lib/utils.js:    console.error('< ' + msg.error.message + ' (' + msg.statusCode + ')');
lib/utils.js:    if (msg.error.fields) {
lib/utils.js:      _.forEach(msg.error.fields, function(value, key) {
lib/utils.js:        console.log(' - ' + key + ': ' + value.join('. '));
lib/utils.js:      });
lib/utils.js:    }
lib/utils.js:  } else {
lib/utils.js:    console.error(msg);
lib/utils.js:  }
lib/utils.js:};
lib/utils.js:var panic = module.exports.panic = function(msg) {
lib/utils.js:  error(msg);
lib/utils.js:  console.error('');
lib/utils.js:  console.error('   Hey ! this is probably a bug !');
lib/utils.js:  console.error('   Fresh beers will be waiting for you on our next meetup');
lib/utils.js:  console.error('                          if you report a new issue :) 🍻');
lib/utils.js:  console.error('');
lib/utils.js:  console.error('          https://github.com/moul/scaleway-cli-node/issues');
lib/utils.js:  console.error('');
lib/utils.js:  process.exit(-1);
lib/utils.js:};
lib/utils.js:var assert = module.exports.assert = function(check, err) {
lib/utils.js:  if (typeof(err) == 'undefined') {
lib/utils.js:    err = check;
lib/utils.js:  }
lib/utils.js:  if (check) {
lib/utils.js:    panic(err);
lib/utils.js:  }
lib/utils.js:};
lib/utils.js:module.exports.notImplementedAction = function() {
lib/utils.js:  console.error("scw: Not implemented");
lib/utils.js:};
lib/utils.js:module.exports.truncateRow = function(row, limits) {
lib/utils.js:  for (var idx in row) {
lib/utils.js:    if (limits[idx] !== -1) {
lib/utils.js:      row[idx] = row[idx].toString().substring(0, limits[idx]);
lib/utils.js:    }
lib/utils.js:  }
lib/utils.js:  return row;
lib/utils.js:};
lib/utils.js:module.exports.defaultConfigPath = function() {
lib/utils.js:  var home = process.env[(
lib/utils.js:    process.platform === 'win32' ?
lib/utils.js:      'USERPROFILE' :
lib/utils.js:      'HOME'
lib/utils.js:  )];
lib/utils.js:  return home + '/.scwrc';
lib/utils.js:};
lib/utils.js:module.exports.newTable = function(options) {
lib/utils.js:  options = options || {};
lib/utils.js:  options.chars = options.chars || {
lib/utils.js:    'top': '', 'top-mid': '', 'top-left': '', 'top-right': '',
lib/utils.js:    'bottom': '', 'bottom-mid': '', 'bottom-left': '', 'bottom-right': '',
lib/utils.js:    'left': '', 'left-mid': '', 'mid': '', 'mid-mid': '',
lib/utils.js:    'right': '', 'right-mid': '', 'middle': ' '
lib/utils.js:  };
lib/utils.js:  options.style = options.style || {
lib/utils.js:    // 'padding-left': 0, 'padding-right': 0
lib/utils.js:  };
lib/utils.js:  return new Table(options);
lib/utils.js:};
lib/utils.js:module.exports.wordify = function(str) {
lib/utils.js:  return str
lib/utils.js:    .replace(/[^a-zA-Z0-9-]/g, '_')
lib/utils.js:    .replace(/__+/g, '_')
lib/utils.js:    .replace(/^_/, '')
lib/utils.js:    .replace(/_$/, '');
lib/utils.js:};
lib/utils.js:module.exports.newApi = function(options) {
lib/utils.js:  var overrides = {};
lib/utils.js:  options = options || {};
lib/utils.js:  options.parent = options.parent || {};
lib/utils.js:  if (options.parent.apiEndpoint) {
lib/utils.js:    overrides.api_endpoint = options.parent.apiEndpoint;
lib/utils.js:  }
lib/utils.js:  if (options.parent.dryRun) {
lib/utils.js:    overrides.dry_run = options.parent.dryRun;
lib/utils.js:  }
lib/utils.js:  var config = module.exports.rc(overrides);
lib/utils.js:  return new Api(config);
lib/utils.js:};
lib/utils.js:module.exports.collect = function(val, memo) {
lib/utils.js:  memo.push(val);
lib/utils.js:  return memo;
lib/utils.js:};
lib/utils.js:module.exports.rc = function() {
lib/utils.js:  return require('scaleway/node_modules/rc')('scw', {
lib/utils.js:    api_endpoint: 'https://api.scaleway.com/',
lib/utils.js:    organization: null,
lib/utils.js:    token: null
lib/utils.js:  });
lib/utils.js:};
lib/utils.js:module.exports.getVersion = function(module) {
lib/utils.js:  return require(module + '/package.json').version;
lib/utils.js:};
lib/utils.js:module.exports.anonymizeUUID = function(uuid) {
lib/utils.js:  return uuid.replace(/^(.{4})(.{4})-(.{4})-(.{4})-(.{4})-(.{8})(.{4})$/, '$1-xxxx-$4-xxxx-xxxxxxxx$7');
lib/utils.js:};
lib/utils.js:module.exports.escapeShell = function(command) {
lib/utils.js:  if (typeof(command) !== 'string') {
lib/utils.js:    command = command.join(' ');
lib/utils.js:  }
lib/utils.js:  return '\'' + command.replace(/\'/g, "'\\''") + '\'';
lib/utils.js:};
lib/utils.js:module.exports.sshExec = function(ip, command, options, fn) {
lib/utils.js:  options = options || {};
lib/utils.js:  var args = [];
lib/utils.js:  if (!debug.enabled) {
lib/utils.js:    args.push('-q');
lib/utils.js:  }
lib/utils.js:  args = args.concat.apply(args, ['-l', 'root', ip, '/bin/sh', '-e']);
lib/utils.js:  if (options.verbose) {
lib/utils.js:    args.push('-x');
lib/utils.js:  }
lib/utils.js:  args.push('-c');
lib/utils.js:  args.push(module.exports.escapeShell(command));
lib/utils.js:  debug('spawn: ssh ' + args.join(' '));
lib/utils.js:  var spawn = child_process.spawn(
lib/utils.js:    'ssh',
lib/utils.js:    args,
lib/utils.js:    { stdio: 'inherit' }
lib/utils.js:  );
lib/utils.js:  if (fn) {
lib/utils.js:    spawn.on('close', function(code) {
lib/utils.js:      return fn(code);
lib/utils.js:    });
lib/utils.js:  }
lib/utils.js:  return spawn;
lib/utils.js:};
lib/utils.js:module.exports.createServer = function(client, options) {
lib/utils.js:  return client.createServer(options)
lib/utils.js:    .then(function (res) {
lib/utils.js:      module.exports.saveEntity(res.body.server, 'servers');
lib/utils.js:      console.log(res.body.server.id);
lib/utils.js:    })
lib/utils.js:    .catch(panic);
lib/utils.js:};
lib/utils.js:module.exports.getImageOrNewVolume = function(client, image, fn) {
lib/utils.js:  var ret;
lib/utils.js:  // Resolve image
lib/utils.js:  module.exports.searchEntity({input: image, _type: 'images'}, function(err, imageEntity) {
lib/utils.js:    if (err) {
lib/utils.js:      // err only means the image is not found.
lib/utils.js:      // when creating a server, if the image is not found we try to
lib/utils.js:      // create an image instead.
lib/utils.js:      var size;
lib/utils.js:      try {
lib/utils.js:        size = filesizeParser(image, {base: 10});
lib/utils.js:      } catch (e) {
lib/utils.js:        size = 0;
lib/utils.js:      }
lib/utils.js:      assert(!size, err);
lib/utils.js:      return client.post('/volumes', {
lib/utils.js:        organization: client.config.organization,
lib/utils.js:        size: parseInt(size),
lib/utils.js:        name: image,
lib/utils.js:        volume_type: 'l_ssd'
lib/utils.js:      }).then(function(results) {
lib/utils.js:        ret = {
lib/utils.js:          'volume': results.body.volume.id
lib/utils.js:        };
lib/utils.js:        fn(ret);
lib/utils.js:        return ret;
lib/utils.js:      }).catch(panic);
lib/utils.js:    } else {
lib/utils.js:      ret = {
lib/utils.js:        'image': imageEntity._id
lib/utils.js:      };
lib/utils.js:      fn(ret);
lib/utils.js:      return ret;
lib/utils.js:    }
lib/utils.js:  });
lib/utils.js:};
lib/utils.js:module.exports.panicTimeout = function(delay, name) {
lib/utils.js:  if (!delay) {
lib/utils.js:    return null;
lib/utils.js:  }
lib/utils.js:  return setTimeout(function() {
lib/utils.js:    panic(name + '... failed: Operation timed out.');
lib/utils.js:  }, delay * 1000);
lib/utils.js:};
lib/utils.js:module.exports.serverExec = function(ip, command, commandArgs, options, fn) {
lib/utils.js:  var args = [];
lib/utils.js:  if (!debug.enabled) {
lib/utils.js:    args.push('-q');
lib/utils.js:  }
lib/utils.js:  if (options.sshTimeout) {
lib/utils.js:    args = args.concat.apply(args, [
lib/utils.js:      '-o', 'ConnectTimeout=' + options.sshTimeout
lib/utils.js:    ], commandArgs);
lib/utils.js:  }
lib/utils.js:  args = args.concat.apply(args, [
lib/utils.js:    '-l', 'root',
lib/utils.js:    ip, '-t', '--', command], commandArgs);
lib/utils.js:  if (options.secure) {
lib/utils.js:    debug('Using secure SSH connection');
lib/utils.js:  } else {
lib/utils.js:    args = [].concat.apply([
lib/utils.js:      '-o', 'UserKnownHostsFile=/dev/null',
lib/utils.js:      '-o', 'StrictHostKeyChecking=no'
lib/utils.js:    ], args);
lib/utils.js:  }
lib/utils.js:  debug('spawn: ssh ' + args.join(' '));
lib/utils.js:  if (options.parent.dryRun) {
lib/utils.js:    console.log('ssh ' + args.join(' '));
lib/utils.js:    if (fn) {
lib/utils.js:      fn();
lib/utils.js:    }
lib/utils.js:  } else {
lib/utils.js:    var spawn = child_process.spawn(
lib/utils.js:      'ssh',
lib/utils.js:      args,
lib/utils.js:      { stdio: 'inherit' }
lib/utils.js:    );
lib/utils.js:    if (fn) {
lib/utils.js:      spawn.on('close', fn);
lib/utils.js:    }
lib/utils.js:  }
lib/utils.js:};
lib/utils.js:module.exports.findKeyInDeepObject = findKeyInDeepObject = function(obj, key) {
lib/utils.js:  if (_.has(obj, key)) {
lib/utils.js:    return obj[key];
lib/utils.js:  }
lib/utils.js:  return _.flatten(_.map(obj, function(v) {
lib/utils.js:    return typeof v == "object" ? findKeyInDeepObject(v, key) : [];
lib/utils.js:  }), true)[0];
lib/utils.js:};
test/all.js:"use strict";
test/all.js:var chai = require('chai'),
test/all.js:    debug = require('debug')('tests'),
test/all.js:    program = require('..'),
test/all.js:    stdout = require('test-console').stdout,
test/all.js:    util = require('util');
test/all.js:// Initialize chai.should()
test/all.js:chai.should();
test/all.js:var inspect = function(name, obj) {
test/all.js:  debug(name, util.inspect(obj, {showHidden: false, depth: null, colors: true}));
test/all.js:};
test/all.js:var run = function(command) {
test/all.js:  var args = [];
test/all.js:  args = args.concat.apply(['node', 'scw'], command);
test/all.js:  var inspect = stdout.inspect();
test/all.js:  program.parse(args);
test/all.js:  inspect.restore();
test/all.js:  return inspect.output.join('');
test/all.js:};
test/all.js:suite("[program]", function() {
test/all.js:  test('info', function() {
test/all.js:    var output = run(['info']);
test/all.js:    (output).should.contain('User: ' + process.env['USER']);
test/all.js:  });
test/all.js:  test('version', function() {
test/all.js:    var output = run(['version']);
test/all.js:    (output).should.contain('Client version: ' + require('../package.json').version);
test/all.js:    (output).should.contain('Client API version: ' + require('scaleway/package.json').version);
test/all.js:  });
test/all.js:});
.dockerignore:examples
.dockerignore:dist/
.dockerignore:.git
.dockerignore:*~
.dockerignore:*#
.dockerignore:.#*
.dockerignore:scw
.gopmfile:[deps]
.gopmfile:github.com/Sirupsen/logrus = 
.gopmfile:github.com/docker/docker = 
.gopmfile:github.com/scaleway/scaleway-cli = 
.gopmfile:[res]
.gopmfile:include = 
Makefile:# Go parameters
Makefile:GOENV ?=	GO15VENDOREXPERIMENT=1
Makefile:GO ?=		$(GOENV) go
Makefile:GODEP ?=	$(GOENV) godep
Makefile:GOBUILD ?=	$(GO) build
Makefile:GOCLEAN ?=	$(GO) clean
Makefile:GOINSTALL ?=	$(GO) install
Makefile:GOTEST ?=	$(GO) test
Makefile:GOFMT ?=	gofmt -w
Makefile:GODIR ?=	github.com/scaleway/scaleway-cli
Makefile:GOCOVER ?=	$(GOTEST) -covermode=count -v
Makefile:FPM_VERSION ?=	$(shell ./dist/scw-Darwin-i386 --version | sed 's/.*v\([0-9.]*\),.*/\1/g')
Makefile:FPM_DOCKER ?=	\
Makefile:	-it --rm \
Makefile:	-v $(PWD)/dist:/output \
Makefile:	-w /output \
Makefile:	tenzer/fpm fpm
Makefile:FPM_ARGS ?=	\
Makefile:	-C /input/ \
Makefile:	-s dir \
Makefile:	--name=scw \
Makefile:	--no-depends \
Makefile:	--version=$(FPM_VERSION) \
Makefile:	--license=mit \
Makefile:	-m "Scaleway <opensource@scaleway.com>"
Makefile:NAME =		scw
Makefile:SOURCES :=	$(shell find . -type f -name "*.go")
Makefile:REL_COMMANDS :=	$(subst $(GODIR),./,$(COMMANDS))
Makefile:REL_PACKAGES :=	$(subst $(GODIR),./,$(PACKAGES))
Makefile:VERSION =	$(shell cat .goxc.json | grep "PackageVersion" | egrep -o "([0-9]{1,}\.)+[0-9]{1,}")
Makefile:REV =		$(shell git rev-parse HEAD || git ls-remote https://github.com/scaleway/scaleway-cli  | grep -F $(VERSION) | head -n1 | awk '{print $$1}' || echo "nogit")
Makefile:TAG =		$(shell git describe --tags --always || echo $(VERSION) || echo "nogit")
Makefile:LDFLAGS = "-X github.com/scaleway/scaleway-cli/pkg/scwversion.GITCOMMIT=$(REV) \
Makefile:           -X github.com/scaleway/scaleway-cli/pkg/scwversion.VERSION=$(TAG)"
Makefile:BUILDER =	scaleway-cli-builder
Makefile:# Check go version
Makefile:GOVERSIONMAJOR = $(shell go version | grep -o '[1-9].[0-9]' | cut -d '.' -f1)
Makefile:GOVERSIONMINOR = $(shell go version | grep -o '[1-9].[0-9]' | cut -d '.' -f2)
Makefile:VERSION_GE_1_5 = $(shell [ $(GOVERSIONMAJOR) -gt 1 -o $(GOVERSIONMINOR) -ge 5 ] && echo true)
Makefile:ifneq ($(VERSION_GE_1_5),true)
Makefile:	$(error Bad go version, please install a version greater than or equal to 1.5)
Makefile:endif
Makefile:BUILD_LIST =		$(foreach int, $(COMMANDS), $(int)_build)
Makefile:CLEAN_LIST =		$(foreach int, $(COMMANDS) $(PACKAGES), $(int)_clean)
Makefile:INSTALL_LIST =		$(foreach int, $(COMMANDS), $(int)_install)
Makefile:IREF_LIST =		$(foreach int, $(COMMANDS) $(PACKAGES), $(int)_iref)
Makefile:TEST_LIST =		$(foreach int, $(COMMANDS) $(PACKAGES), $(int)_test)
Makefile:FMT_LIST =		$(foreach int, $(COMMANDS) $(PACKAGES), $(int)_fmt)
Makefile:COVERPROFILE_LIST =	$(foreach int, $(subst $(GODIR),./,$(PACKAGES)), $(int)/profile.out)
Makefile:.PHONY: $(CLEAN_LIST) $(TEST_LIST) $(FMT_LIST) $(INSTALL_LIST) $(BUILD_LIST) $(IREF_LIST)
Makefile:all: build
Makefile:build: $(BUILD_LIST)
Makefile:clean: $(CLEAN_LIST)
Makefile:install: $(INSTALL_LIST)
Makefile:test: $(TEST_LIST)
Makefile:iref: $(IREF_LIST)
Makefile:fmt: $(FMT_LIST)
Makefile:.git:
Makefile:	touch $@
Makefile:$(BUILD_LIST): %_build: %_fmt %_iref
Makefile:	$(GOBUILD) -ldflags $(LDFLAGS) -o $(NAME) $(subst $(GODIR),./,$*)
Makefile:	for file in $(shell find $(REL_COMMANDS) $(REL_PACKAGES) -depth 1 -name "*.go"); do $(GO) tool vet -all=true $$file; done
Makefile:$(CLEAN_LIST): %_clean:
Makefile:	$(GOCLEAN) $(subst $(GODIR),./,$*)
Makefile:$(INSTALL_LIST): %_install:
Makefile:	$(GOINSTALL) $(subst $(GODIR),./,$*)
Makefile:$(IREF_LIST): %_iref:
Makefile:	$(GOTEST) -ldflags $(LDFLAGS) -i $(subst $(GODIR),./,$*)
Makefile:$(TEST_LIST): %_test:
Makefile:	$(GOTEST) -ldflags $(LDFLAGS) -v $(subst $(GODIR),./,$*)
Makefile:$(FMT_LIST): %_fmt:
Makefile:	$(GOFMT) $(subst $(GODIR),./,$*)
Makefile:release-docker:
Makefile:	docker push scaleway/cli
Makefile:goxc:
Makefile:	rm -rf dist/$(shell cat .goxc.json| jq -r .PackageVersion)
Makefile:	mkdir -p dist/$(shell cat .goxc.json| jq -r .PackageVersion)
Makefile:	ln -s -f $(shell cat .goxc.json| jq -r .PackageVersion) dist/latest
Makefile:	goxc -build-ldflags $(LDFLAGS)
Makefile:	mv dist/latest/darwin_386/scw         dist/latest/scw-Darwin-i386
Makefile:	mv dist/latest/darwin_amd64/scw       dist/latest/scw-Darwin-amd64
Makefile:	mv dist/latest/freebsd_386/scw        dist/latest/scw-Freebsd-i386
Makefile:	mv dist/latest/freebsd_amd64/scw      dist/latest/scw-Freebsd-x86_64
Makefile:	mv dist/latest/freebsd_arm/scw        dist/latest/scw-Freebsd-arm
Makefile:	mv dist/latest/linux_386/scw          dist/latest/scw-Linux-i386
Makefile:	mv dist/latest/linux_amd64/scw        dist/latest/scw-Linux-x86_64
Makefile:	mv dist/latest/linux_arm/scw          dist/latest/scw-Linux-arm
Makefile:	mv dist/latest/netbsd_386/scw         dist/latest/scw-Netbsd-i386
Makefile:	mv dist/latest/netbsd_amd64/scw       dist/latest/scw-Netbsd-x86_64
Makefile:	mv dist/latest/netbsd_arm/scw         dist/latest/scw-Netbsd-arm
Makefile:	mv dist/latest/windows_386/scw.exe    dist/latest/scw-Windows-i386.exe
Makefile:	mv dist/latest/windows_amd64/scw.exe  dist/latest/scw-Windows-x86_64.exe
Makefile:	cp dist/latest/scw-Linux-arm dist/latest/scw-Linux-armv7l
Makefile:	@rmdir dist/latest/* || true
Makefile:	docker run --rm golang tar -cf - /etc/ssl > dist/latest/ssl.tar
Makefile:	docker build -t scaleway/cli dist
Makefile:	docker run scaleway/cli version
Makefile:	docker tag -f scaleway/cli:latest scaleway/cli:$(TAG)
Makefile:	@echo "Now you can run 'goxc publish-github', 'goxc bintray' and 'make release-docker'"
Makefile:packages:
Makefile:	rm -f dist/*.deb
Makefile:	docker run -v $(PWD)/dist/scw-Linux-x86_64:/input/scw $(FPM_DOCKER) $(FPM_ARGS) -t deb -a x86_64 ./
Makefile:	docker run -v $(PWD)/dist/scw-Linux-i386:/input/scw $(FPM_DOCKER) $(FPM_ARGS) -t deb -a i386 ./
Makefile:	docker run -v $(PWD)/dist/scw-Linux-arm:/input/scw $(FPM_DOCKER) $(FPM_ARGS) -t deb -a arm ./
Makefile:#publish_packages:
Makefile:#	docker run -v $(PWD)/dist moul/dput ppa:moul/scw dist/scw_$(FPM_VERSION)_arm.changes
Makefile:.PHONY: golint
Makefile:golint:
Makefile:	@$(GO) get github.com/golang/lint/golint
Makefile:.PHONY: gocyclo
Makefile:gocyclo:
Makefile:	go get github.com/fzipp/gocyclo
Makefile:.PHONY: godep-save
Makefile:godep-save:
Makefile:	go get github.com/tools/godep
Makefile:	$(GODEP) save $(PACKAGES) $(COMMANDS)
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	go get github.com/smartystreets/goconvey
Makefile:	goconvey -cover -port=9042 -workDir="$(realpath .)/pkg" -depth=-1
Makefile:.PHONY: travis_login
Makefile:travis_login:
Makefile:	@if [ "$(TRAVIS_SCALEWAY_TOKEN)" -a "$(TRAVIS_SCALEWAY_ORGANIZATION)" ]; then \
Makefile:	  echo '{"api_endpoint":"https://api.scaleway.com/","account_endpoint":"https://account.scaleway.com/","organization":"$(TRAVIS_SCALEWAY_ORGANIZATION)","token":"$(TRAVIS_SCALEWAY_TOKEN)"}' > ~/.scwrc && \
Makefile:	  chmod 600 ~/.scwrc; \
Makefile:	else \
Makefile:	  echo "Cannot login, credentials are missing"; \
Makefile:	fi
Makefile:.PHONY: cover
Makefile:cover: profile.out
Makefile:$(COVERPROFILE_LIST):: $(SOURCES)
Makefile:	rm -f $@
Makefile:	$(GOCOVER) -ldflags $(LDFLAGS) -coverpkg=./pkg/... -coverprofile=$@ ./$(dir $@)
Makefile:profile.out:: $(COVERPROFILE_LIST)
Makefile:	rm -f $@
Makefile:	echo "mode: set" > $@
Makefile:	cat ./pkg/*/profile.out | grep -v mode: | sort -r | awk '{if($$1 != last) {print $$0;last=$$1}}' >> $@
Makefile:.PHONY: travis_coveralls
Makefile:travis_coveralls:
Makefile:	if [ -f ~/.scwrc ]; then goveralls -covermode=count -service=travis-ci -v -coverprofile=profile.out; fi
Makefile:.PHONY: travis_cleanup
Makefile:travis_cleanup:
Makefile:	# FIXME: delete only resources created for this project
Makefile:	@if [ "$(TRAVIS_SCALEWAY_TOKEN)" -a "$(TRAVIS_SCALEWAY_ORGANIZATION)" ]; then \
Makefile:	  ./scw stop -t $(shell ./scw ps -q) || true; \
Makefile:	  ./scw rm $(shell ./scw ps -aq) || true; \
Makefile:	  ./scw rmi $(shell ./scw images -f organization=me -q) || true; \
Makefile:	fi
Makefile:.PHONY: show_version
Makefile:show_version:
Makefile:	./scw version
cmd/scw/main.go:// Copyright (C) 2015 Scaleway. All rights reserved.
cmd/scw/main.go:// Use of this source code is governed by a MIT-style
cmd/scw/main.go:// license that can be found in the LICENSE.md file.
cmd/scw/main.go:// Manage BareMetal Servers from Command Line (as easily as with Docker)
cmd/scw/main.go:// +build go1.5
cmd/scw/main.go:package main
cmd/scw/main.go:import (
cmd/scw/main.go:	"os"
cmd/scw/main.go:	"github.com/Sirupsen/logrus"
cmd/scw/main.go:	"github.com/scaleway/scaleway-cli/pkg/cli"
cmd/scw/main.go:)
cmd/scw/main.go:func main() {
cmd/scw/main.go:	ec, err := cli.Start(os.Args[1:], nil)
cmd/scw/main.go:	if err != nil {
cmd/scw/main.go:		logrus.Fatalf("%s", err)
cmd/scw/main.go:	}
cmd/scw/main.go:	os.Exit(ec)
cmd/scw/main.go:}
cmd/scw/main_unsupported.go:// +build !go1.5
cmd/scw/main_unsupported.go:package main
cmd/scw/main_unsupported.go:func error() {
cmd/scw/main_unsupported.go:	`Bad go version, please install a version greater than or equal to 1.5`
cmd/scw/main_unsupported.go:}
contrib/builder/homebrew/scw.rb:require "language/go"
contrib/builder/homebrew/scw.rb:class Scw < Formula
contrib/builder/homebrew/scw.rb:  desc "Manage BareMetal Servers from Command Line (as easily as with Docker)"
contrib/builder/homebrew/scw.rb:  homepage "https://github.com/scaleway/scaleway-cli"
contrib/builder/homebrew/scw.rb:  url "https://github.com/scaleway/scaleway-cli/archive/v1.6.0.tar.gz"
contrib/builder/homebrew/scw.rb:  sha256 "5772c03b6599644c84bf47aed7a3c1d080af2c87df0ef30d37cd4a991d72567f"
contrib/builder/homebrew/scw.rb:  head "https://github.com/scaleway/scaleway-cli.git"
contrib/builder/homebrew/scw.rb:  depends_on "go" => :build
contrib/builder/homebrew/scw.rb:  def install
contrib/builder/homebrew/scw.rb:    ENV["GOPATH"] = buildpath
contrib/builder/homebrew/scw.rb:    ENV["CGO_ENABLED"] = "0"
contrib/builder/homebrew/scw.rb:    ENV.prepend_create_path "PATH", buildpath/"bin"
contrib/builder/homebrew/scw.rb:    mkdir_p buildpath/"src/github.com/scaleway"
contrib/builder/homebrew/scw.rb:    ln_s buildpath, buildpath/"src/github.com/scaleway/scaleway-cli"
contrib/builder/homebrew/scw.rb:    Language::Go.stage_deps resources, buildpath/"src"
contrib/builder/homebrew/scw.rb:    system "make", "build"
contrib/builder/homebrew/scw.rb:    bin.install "scw"
contrib/builder/homebrew/scw.rb:    bash_completion.install "contrib/completion/bash/scw"
contrib/builder/homebrew/scw.rb:    zsh_completion.install "contrib/completion/zsh/_scw"
contrib/builder/homebrew/scw.rb:  end
contrib/builder/homebrew/scw.rb:  def caveats
contrib/builder/homebrew/scw.rb:    "Use `scw login` to set up the correct environment to use scaleway-cli."
contrib/builder/homebrew/scw.rb:  end
contrib/builder/homebrew/scw.rb:  test do
contrib/builder/homebrew/scw.rb:    output = shell_output(bin/"scw version")
contrib/builder/homebrew/scw.rb:    assert output.include? "OS/Arch (client): darwin/amd64"
contrib/builder/homebrew/scw.rb:  end
contrib/builder/homebrew/scw.rb:end
contrib/completion/bash/scw:#!/bin/bash
contrib/completion/bash/scw:#
contrib/completion/bash/scw:# bash completion file for core scw commands
contrib/completion/bash/scw:#
contrib/completion/bash/scw:# This script provides completion of:
contrib/completion/bash/scw:#  - commands and their options
contrib/completion/bash/scw:#  - server ids and names
contrib/completion/bash/scw:#  - image repos and tags
contrib/completion/bash/scw:#  - filepaths
contrib/completion/bash/scw:#
contrib/completion/bash/scw:# To enable the completions either:
contrib/completion/bash/scw:#  - place this file in /etc/bash_completion.d
contrib/completion/bash/scw:#  or
contrib/completion/bash/scw:#  - copy this file to e.g. ~/.scw-completion.sh and add the line
contrib/completion/bash/scw:#    below to your .bashrc after bash completion features are loaded
contrib/completion/bash/scw:#    . ~/.scw-completion.sh
contrib/completion/bash/scw:#
contrib/completion/bash/scw:# Note:
contrib/completion/bash/scw:# Currently, the completions will not work unless `scw login` were completed
contrib/completion/bash/scw:#
contrib/completion/bash/scw:# Note for developers:
contrib/completion/bash/scw:# Please arrange options sorted alphabetically by long name with the short
contrib/completion/bash/scw:# options immediately following their corresponding long form.
contrib/completion/bash/scw:# This order should be applied to lists, alternatives and code blocks.
contrib/completion/bash/scw:#
contrib/completion/bash/scw:# Inspired from https://github.com/docker/docker/blob/master/contrib/completion/bash/docker
contrib/completion/bash/scw:__scw_q() {
contrib/completion/bash/scw:    scw $@ 2>/dev/null
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_servers_all() {
contrib/completion/bash/scw:    local IFS=$'\n'
contrib/completion/bash/scw:    local servers=( $(__scw_q _completion servers-all) )
contrib/completion/bash/scw:    unset IFS
contrib/completion/bash/scw:    COMPREPLY=( $(compgen -W "${servers[*]}" -- "$cur") )
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_servers_running() {
contrib/completion/bash/scw:    __scw_servers_all
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_servers_stopped() {
contrib/completion/bash/scw:    __scw_servers_all
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_servers_pauseable() {
contrib/completion/bash/scw:    __scw_servers_all
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_servers_unpauseable() {
contrib/completion/bash/scw:    __scw_servers_all
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_server_names() {
contrib/completion/bash/scw:    __scw_servers_all
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_server_ids() {
contrib/completion/bash/scw:    __scw_servers_all
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_image_repos() {
contrib/completion/bash/scw:    local repos=( $(__scw_q _completion images-all) )
contrib/completion/bash/scw:    COMPREPLY=( $(compgen -W "$repos" -- "$cur") )
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_image_repos_and_tags() {
contrib/completion/bash/scw:    __scw_image_repos
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_image_repos_and_tags_and_ids() {
contrib/completion/bash/scw:    __scw_image_repos
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_servers_and_images() {
contrib/completion/bash/scw:    __scw_servers_all
contrib/completion/bash/scw:    local servers=( "${COMPREPLY[@]}" )
contrib/completion/bash/scw:    __scw_image_repos_and_tags_and_ids
contrib/completion/bash/scw:    COMPREPLY+=( "${servers[@]}" )
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_pos_first_nonflag() {
contrib/completion/bash/scw:	local argument_flags=$1
contrib/completion/bash/scw:	local counter=$cpos
contrib/completion/bash/scw:	while [ $counter -le $cword ]; do
contrib/completion/bash/scw:		if [ -n "$argument_flags" ] && eval "case '${words[$counter]}' in $argument_flags) true ;; *) false ;; esac"; then
contrib/completion/bash/scw:			(( counter++ ))
contrib/completion/bash/scw:		else
contrib/completion/bash/scw:			case "${words[$counter]}" in
contrib/completion/bash/scw:				-*)
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:				*)
contrib/completion/bash/scw:					break
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:			esac
contrib/completion/bash/scw:		fi
contrib/completion/bash/scw:		(( counter++ ))
contrib/completion/bash/scw:	done
contrib/completion/bash/scw:	echo $counter
contrib/completion/bash/scw:}
contrib/completion/bash/scw:# Transforms a multiline list of strings into a single line string
contrib/completion/bash/scw:# with the words separated by "|".
contrib/completion/bash/scw:# This is used to prepare arguments to __scw_pos_first_nonflag().
contrib/completion/bash/scw:__scw_to_alternatives() {
contrib/completion/bash/scw:	local parts=( $1 )
contrib/completion/bash/scw:	local IFS='|'
contrib/completion/bash/scw:	echo "${parts[*]}"
contrib/completion/bash/scw:}
contrib/completion/bash/scw:# Transforms a multiline list of options into an extglob pattern
contrib/completion/bash/scw:# suitable for use in case statements.
contrib/completion/bash/scw:__scw_to_extglob() {
contrib/completion/bash/scw:	local extglob=$( __scw_to_alternatives "$1" )
contrib/completion/bash/scw:	echo "@($extglob)"
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_resolve_hostname() {
contrib/completion/bash/scw:	command -v host >/dev/null 2>&1 || return
contrib/completion/bash/scw:	COMPREPLY=( $(host 2>/dev/null "${cur%:}" | awk '/has address/ {print $4}') )
contrib/completion/bash/scw:}
contrib/completion/bash/scw:__scw_capabilities() {
contrib/completion/bash/scw:	# The list of capabilities is defined in types.go, ALL was added manually.
contrib/completion/bash/scw:	COMPREPLY=( $( compgen -W "
contrib/completion/bash/scw:		ALL
contrib/completion/bash/scw:		AUDIT_CONTROL
contrib/completion/bash/scw:		AUDIT_WRITE
contrib/completion/bash/scw:		AUDIT_READ
contrib/completion/bash/scw:		BLOCK_SUSPEND
contrib/completion/bash/scw:		CHOWN
contrib/completion/bash/scw:		DAC_OVERRIDE
contrib/completion/bash/scw:		DAC_READ_SEARCH
contrib/completion/bash/scw:		FOWNER
contrib/completion/bash/scw:		FSETID
contrib/completion/bash/scw:		IPC_LOCK
contrib/completion/bash/scw:		IPC_OWNER
contrib/completion/bash/scw:		KILL
contrib/completion/bash/scw:		LEASE
contrib/completion/bash/scw:		LINUX_IMMUTABLE
contrib/completion/bash/scw:		MAC_ADMIN
contrib/completion/bash/scw:		MAC_OVERRIDE
contrib/completion/bash/scw:		MKNOD
contrib/completion/bash/scw:		NET_ADMIN
contrib/completion/bash/scw:		NET_BIND_SERVICE
contrib/completion/bash/scw:		NET_BROADCAST
contrib/completion/bash/scw:		NET_RAW
contrib/completion/bash/scw:		SETFCAP
contrib/completion/bash/scw:		SETGID
contrib/completion/bash/scw:		SETPCAP
contrib/completion/bash/scw:		SETUID
contrib/completion/bash/scw:		SYS_ADMIN
contrib/completion/bash/scw:		SYS_BOOT
contrib/completion/bash/scw:		SYS_CHROOT
contrib/completion/bash/scw:		SYSLOG
contrib/completion/bash/scw:		SYS_MODULE
contrib/completion/bash/scw:		SYS_NICE
contrib/completion/bash/scw:		SYS_PACCT
contrib/completion/bash/scw:		SYS_PTRACE
contrib/completion/bash/scw:		SYS_RAWIO
contrib/completion/bash/scw:		SYS_RESOURCE
contrib/completion/bash/scw:		SYS_TIME
contrib/completion/bash/scw:		SYS_TTY_CONFIG
contrib/completion/bash/scw:		WAKE_ALARM
contrib/completion/bash/scw:	" -- "$cur" ) )
contrib/completion/bash/scw:}
contrib/completion/bash/scw:# a selection of the available signals that is most likely of interest in the
contrib/completion/bash/scw:# context of scw servers.
contrib/completion/bash/scw:__scw_signals() {
contrib/completion/bash/scw:	local signals=(
contrib/completion/bash/scw:		SIGCONT
contrib/completion/bash/scw:		SIGHUP
contrib/completion/bash/scw:		SIGINT
contrib/completion/bash/scw:		SIGKILL
contrib/completion/bash/scw:		SIGQUIT
contrib/completion/bash/scw:		SIGSTOP
contrib/completion/bash/scw:		SIGTERM
contrib/completion/bash/scw:		SIGUSR1
contrib/completion/bash/scw:		SIGUSR2
contrib/completion/bash/scw:	)
contrib/completion/bash/scw:	COMPREPLY=( $( compgen -W "${signals[*]} ${signals[*]#SIG}" -- "$( echo $cur | tr '[:lower:]' '[:upper:]')" ) )
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_scw() {
contrib/completion/bash/scw:	local boolean_options="
contrib/completion/bash/scw:		--daemon -d
contrib/completion/bash/scw:		--debug -D
contrib/completion/bash/scw:		--help -h
contrib/completion/bash/scw:		--icc
contrib/completion/bash/scw:		--ip-forward
contrib/completion/bash/scw:		--ip-masq
contrib/completion/bash/scw:		--iptables
contrib/completion/bash/scw:		--ipv6
contrib/completion/bash/scw:		--selinux-enabled
contrib/completion/bash/scw:		--tls
contrib/completion/bash/scw:		--tlsverify
contrib/completion/bash/scw:		--userland-proxy=false
contrib/completion/bash/scw:		--version -v
contrib/completion/bash/scw:	"
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--exec-root|--graph|-g)
contrib/completion/bash/scw:			_filedir -d
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--log-driver)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "json-file syslog none" -- "$cur" ) )
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--log-level|-l)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "debug info warn error fatal" -- "$cur" ) )
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--pidfile|-p|--tlscacert|--tlscert|--tlskey)
contrib/completion/bash/scw:			_filedir
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--storage-driver|-s)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "aufs devicemapper btrfs overlay" -- "$(echo $cur | tr '[:upper:]' '[:lower:]')" ) )
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		$main_options_with_args_glob )
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "$boolean_options $main_options_with_args" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "${commands[*]} help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_attach() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help --no-stdin --sig-proxy" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter="$(__scw_pos_first_nonflag)"
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_servers_running
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_build() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--cgroup-parent|--cpuset-cpus|--cpuset-mems|--cpu-shares|-c|--cpu-period|--cpu-quota|--memory|-m|--memory-swap)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--file|-f)
contrib/completion/bash/scw:			_filedir
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--tag|-t)
contrib/completion/bash/scw:			__scw_image_repos_and_tags
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--cgroup-parent --cpuset-cpus --cpuset-mems --cpu-shares -c --cpu-period --cpu-quota --file -f --force-rm --help --memory -m --memory-swap --no-cache --pull --quiet -q --rm --tag -t" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter="$(__scw_pos_first_nonflag '--cgroup-parent|--cpuset-cpus|--cpuset-mems|--cpu-shares|-c|--cpu-period|--cpu-quota|--file|-f|--memory|-m|--memory-swap|--tag|-t')"
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				_filedir -d
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_commit() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--author|-a|--change|-c|--message|-m)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--author -a --change -c --help --message -m --pause -p" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag '--author|-a|--change|-c|--message|-m')
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_servers_all
contrib/completion/bash/scw:				return
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			(( counter++ ))
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_image_repos_and_tags
contrib/completion/bash/scw:				return
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_cp() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				case "$cur" in
contrib/completion/bash/scw:					*:)
contrib/completion/bash/scw:						return
contrib/completion/bash/scw:						;;
contrib/completion/bash/scw:					*)
contrib/completion/bash/scw:						__scw_servers_all
contrib/completion/bash/scw:						COMPREPLY=( $( compgen -W "${COMPREPLY[*]}" -S ':' ) )
contrib/completion/bash/scw:						compopt -o nospace
contrib/completion/bash/scw:						return
contrib/completion/bash/scw:						;;
contrib/completion/bash/scw:				esac
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			(( counter++ ))
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				_filedir -d
contrib/completion/bash/scw:				return
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_create() {
contrib/completion/bash/scw:	_scw_run
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_diff() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_servers_all
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_events() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--filter|-f)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -S = -W "server event image" -- "$cur" ) )
contrib/completion/bash/scw:			compopt -o nospace
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--since|--until)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	# "=" gets parsed to a word and assigned to either $cur or $prev depending on whether
contrib/completion/bash/scw:	# it is the last character or not. So we search for "xxx=" in the the last two words.
contrib/completion/bash/scw:	case "${words[$cword-2]}$prev=" in
contrib/completion/bash/scw:		*server=*)
contrib/completion/bash/scw:			cur="${cur#=}"
contrib/completion/bash/scw:			__scw_servers_all
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*event=*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "create destroy die export kill pause restart start stop unpause" -- "${cur#=}" ) )
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*image=*)
contrib/completion/bash/scw:			cur="${cur#=}"
contrib/completion/bash/scw:			__scw_image_repos_and_tags_and_ids
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--filter -f --help --since --until" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_exec() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--user|-u)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--detach -d --help --interactive -i -t --tty -u --user" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_servers_running
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_export() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_servers_all
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_help() {
contrib/completion/bash/scw:	local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:	if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:		COMPREPLY=( $( compgen -W "${commands[*]}" -- "$cur" ) )
contrib/completion/bash/scw:	fi
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_history() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help --no-trunc --quiet -q" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_image_repos_and_tags_and_ids
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_images() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--filter|-f)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "dangling=true label=" -- "$cur" ) )
contrib/completion/bash/scw:			if [ "$COMPREPLY" = "label=" ]; then
contrib/completion/bash/scw:				compopt -o nospace
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "${words[$cword-2]}$prev=" in
contrib/completion/bash/scw:		*dangling=*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "true false" -- "${cur#=}" ) )
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*label=*)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--all -a --digests --filter -f --help --no-trunc --quiet -q" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		=)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_image_repos
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_import() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				return
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			(( counter++ ))
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_image_repos_and_tags
contrib/completion/bash/scw:				return
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_info() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_inspect() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--format|-f)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--format -f --help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_servers_and_images
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_kill() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--signal|-s)
contrib/completion/bash/scw:			__scw_signals
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help --signal -s" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_servers_running
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_load() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--input|-i)
contrib/completion/bash/scw:			_filedir
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help --input -i" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_login() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--email|-e|--password|-p|--username|-u)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--email -e --help --password -p --username -u" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_logout() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_logs() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--since|--tail)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--follow -f --help --since --tail --timestamps -t" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag '--tail')
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_servers_all
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_pause() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_servers_pauseable
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_port() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_servers_all
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_ps() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--before|--since)
contrib/completion/bash/scw:			__scw_servers_all
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--filter|-f)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -S = -W "exited id label name status" -- "$cur" ) )
contrib/completion/bash/scw:			compopt -o nospace
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		-n)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "${words[$cword-2]}$prev=" in
contrib/completion/bash/scw:		*id=*)
contrib/completion/bash/scw:			cur="${cur#=}"
contrib/completion/bash/scw:			__scw_server_ids
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*name=*)
contrib/completion/bash/scw:			cur="${cur#=}"
contrib/completion/bash/scw:			__scw_server_names
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*status=*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "exited paused restarting running" -- "${cur#=}" ) )
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--all -a --before --filter -f --help --latest -l -n --no-trunc --quiet -q --size -s --since" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_pull() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--all-tags -a --help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				for arg in "${COMP_WORDS[@]}"; do
contrib/completion/bash/scw:					case "$arg" in
contrib/completion/bash/scw:						--all-tags|-a)
contrib/completion/bash/scw:							__scw_image_repos
contrib/completion/bash/scw:							return
contrib/completion/bash/scw:							;;
contrib/completion/bash/scw:					esac
contrib/completion/bash/scw:				done
contrib/completion/bash/scw:				__scw_image_repos_and_tags
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_push() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_image_repos_and_tags
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_rename() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_servers_all
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_restart() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--time|-t)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help --time -t" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_servers_all
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_rm() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--force -f --help --link -l --volumes -v" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			for arg in "${COMP_WORDS[@]}"; do
contrib/completion/bash/scw:				case "$arg" in
contrib/completion/bash/scw:					--force|-f)
contrib/completion/bash/scw:						__scw_servers_all
contrib/completion/bash/scw:						return
contrib/completion/bash/scw:						;;
contrib/completion/bash/scw:				esac
contrib/completion/bash/scw:			done
contrib/completion/bash/scw:			__scw_servers_stopped
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_rmi() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--force -f --help --no-prune" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_image_repos_and_tags_and_ids
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_run() {
contrib/completion/bash/scw:	local options_with_args="
contrib/completion/bash/scw:		--add-host
contrib/completion/bash/scw:		--blkio-weight
contrib/completion/bash/scw:		--attach -a
contrib/completion/bash/scw:		--cap-add
contrib/completion/bash/scw:		--cap-drop
contrib/completion/bash/scw:		--cgroup-parent
contrib/completion/bash/scw:		--cidfile
contrib/completion/bash/scw:		--cpuset
contrib/completion/bash/scw:		--cpu-period
contrib/completion/bash/scw:		--cpu-quota
contrib/completion/bash/scw:		--cpu-shares -c
contrib/completion/bash/scw:		--device
contrib/completion/bash/scw:		--dns
contrib/completion/bash/scw:		--dns-search
contrib/completion/bash/scw:		--entrypoint
contrib/completion/bash/scw:		--env -e
contrib/completion/bash/scw:		--env-file
contrib/completion/bash/scw:		--expose
contrib/completion/bash/scw:		--hostname -h
contrib/completion/bash/scw:		--ipc
contrib/completion/bash/scw:		--label -l
contrib/completion/bash/scw:		--label-file
contrib/completion/bash/scw:		--link
contrib/completion/bash/scw:		--log-driver
contrib/completion/bash/scw:		--lxc-conf
contrib/completion/bash/scw:		--mac-address
contrib/completion/bash/scw:		--memory -m
contrib/completion/bash/scw:		--memory-swap
contrib/completion/bash/scw:		--name
contrib/completion/bash/scw:		--net
contrib/completion/bash/scw:		--pid
contrib/completion/bash/scw:		--publish -p
contrib/completion/bash/scw:		--restart
contrib/completion/bash/scw:		--security-opt
contrib/completion/bash/scw:		--user -u
contrib/completion/bash/scw:		--ulimit
contrib/completion/bash/scw:		--uts
contrib/completion/bash/scw:		--volumes-from
contrib/completion/bash/scw:		--volume -v
contrib/completion/bash/scw:		--workdir -w
contrib/completion/bash/scw:	"
contrib/completion/bash/scw:	local all_options="$options_with_args
contrib/completion/bash/scw:		--help
contrib/completion/bash/scw:		--interactive -i
contrib/completion/bash/scw:		--privileged
contrib/completion/bash/scw:		--publish-all -P
contrib/completion/bash/scw:		--read-only
contrib/completion/bash/scw:		--tty -t
contrib/completion/bash/scw:	"
contrib/completion/bash/scw:	[ "$command" = "run" ] && all_options="$all_options
contrib/completion/bash/scw:		--detach -d
contrib/completion/bash/scw:		--rm
contrib/completion/bash/scw:		--sig-proxy
contrib/completion/bash/scw:	"
contrib/completion/bash/scw:	local options_with_args_glob=$(__scw_to_extglob "$options_with_args")
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--add-host)
contrib/completion/bash/scw:			case "$cur" in
contrib/completion/bash/scw:				*:)
contrib/completion/bash/scw:					__scw_resolve_hostname
contrib/completion/bash/scw:					return
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:			esac
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--attach|-a)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W 'stdin stdout stderr' -- "$cur" ) )
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--cap-add|--cap-drop)
contrib/completion/bash/scw:			__scw_capabilities
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--cidfile|--env-file|--label-file)
contrib/completion/bash/scw:			_filedir
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--device|--volume|-v)
contrib/completion/bash/scw:			case "$cur" in
contrib/completion/bash/scw:				*:*)
contrib/completion/bash/scw:					# TODO somehow do _filedir for stuff inside the image, if it's already specified (which is also somewhat difficult to determine)
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:				'')
contrib/completion/bash/scw:					COMPREPLY=( $( compgen -W '/' -- "$cur" ) )
contrib/completion/bash/scw:					compopt -o nospace
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:				/*)
contrib/completion/bash/scw:					_filedir
contrib/completion/bash/scw:					compopt -o nospace
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:			esac
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--env|-e)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -e -- "$cur" ) )
contrib/completion/bash/scw:			compopt -o nospace
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--ipc)
contrib/completion/bash/scw:			case "$cur" in
contrib/completion/bash/scw:				*:*)
contrib/completion/bash/scw:					cur="${cur#*:}"
contrib/completion/bash/scw:					__scw_servers_running
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:				*)
contrib/completion/bash/scw:					COMPREPLY=( $( compgen -W 'host server:' -- "$cur" ) )
contrib/completion/bash/scw:					if [ "$COMPREPLY" = "server:" ]; then
contrib/completion/bash/scw:						compopt -o nospace
contrib/completion/bash/scw:					fi
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:			esac
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--link)
contrib/completion/bash/scw:			case "$cur" in
contrib/completion/bash/scw:				*:*)
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:				*)
contrib/completion/bash/scw:					__scw_servers_running
contrib/completion/bash/scw:					COMPREPLY=( $( compgen -W "${COMPREPLY[*]}" -S ':' ) )
contrib/completion/bash/scw:					compopt -o nospace
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:			esac
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--log-driver)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "json-file syslog none" -- "$cur") )
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--net)
contrib/completion/bash/scw:			case "$cur" in
contrib/completion/bash/scw:				server:*)
contrib/completion/bash/scw:					local cur=${cur#*:}
contrib/completion/bash/scw:					__scw_servers_all
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:				*)
contrib/completion/bash/scw:					COMPREPLY=( $( compgen -W "bridge none server: host" -- "$cur") )
contrib/completion/bash/scw:					if [ "${COMPREPLY[*]}" = "server:" ] ; then
contrib/completion/bash/scw:						compopt -o nospace
contrib/completion/bash/scw:					fi
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:			esac
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--restart)
contrib/completion/bash/scw:			case "$cur" in
contrib/completion/bash/scw:				on-failure:*)
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:				*)
contrib/completion/bash/scw:					COMPREPLY=( $( compgen -W "no on-failure on-failure: always" -- "$cur") )
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:			esac
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--security-opt)
contrib/completion/bash/scw:			case "$cur" in
contrib/completion/bash/scw:				label:*:*)
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:				label:*)
contrib/completion/bash/scw:					local cur=${cur##*:}
contrib/completion/bash/scw:					COMPREPLY=( $( compgen -W "user: role: type: level: disable" -- "$cur") )
contrib/completion/bash/scw:					if [ "${COMPREPLY[*]}" != "disable" ] ; then
contrib/completion/bash/scw:						compopt -o nospace
contrib/completion/bash/scw:					fi
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:				*)
contrib/completion/bash/scw:					COMPREPLY=( $( compgen -W "label apparmor" -S ":" -- "$cur") )
contrib/completion/bash/scw:					compopt -o nospace
contrib/completion/bash/scw:					;;
contrib/completion/bash/scw:			esac
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		--volumes-from)
contrib/completion/bash/scw:			__scw_servers_all
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		$options_with_args_glob )
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "$all_options" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$( __scw_pos_first_nonflag $( __scw_to_alternatives "$options_with_args" ) )
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_image_repos_and_tags_and_ids
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_save() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--output|-o)
contrib/completion/bash/scw:			_filedir
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help --output -o" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_image_repos_and_tags_and_ids
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_search() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--stars|-s)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--automated --help --no-trunc --stars -s" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_start() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--attach -a --help --interactive -i" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_servers_stopped
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_stats() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--no-stream --help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_servers_running
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_stop() {
contrib/completion/bash/scw:	case "$prev" in
contrib/completion/bash/scw:		--time|-t)
contrib/completion/bash/scw:			return
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help --time -t" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_servers_running
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_tag() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--force -f --help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_image_repos_and_tags
contrib/completion/bash/scw:				return
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			(( counter++ ))
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_image_repos_and_tags
contrib/completion/bash/scw:				return
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_unpause() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_servers_unpauseable
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_top() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			local counter=$(__scw_pos_first_nonflag)
contrib/completion/bash/scw:			if [ $cword -eq $counter ]; then
contrib/completion/bash/scw:				__scw_servers_running
contrib/completion/bash/scw:			fi
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_version() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw_wait() {
contrib/completion/bash/scw:	case "$cur" in
contrib/completion/bash/scw:		-*)
contrib/completion/bash/scw:			COMPREPLY=( $( compgen -W "--help" -- "$cur" ) )
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:		*)
contrib/completion/bash/scw:			__scw_servers_all
contrib/completion/bash/scw:			;;
contrib/completion/bash/scw:	esac
contrib/completion/bash/scw:}
contrib/completion/bash/scw:_scw() {
contrib/completion/bash/scw:	local previous_extglob_setting=$(shopt -p extglob)
contrib/completion/bash/scw:	shopt -s extglob
contrib/completion/bash/scw:	local commands=(
contrib/completion/bash/scw:		attach
contrib/completion/bash/scw:#		build
contrib/completion/bash/scw:		commit
contrib/completion/bash/scw:		cp
contrib/completion/bash/scw:		create
contrib/completion/bash/scw:#		diff
contrib/completion/bash/scw:		events
contrib/completion/bash/scw:		exec
contrib/completion/bash/scw:#		export
contrib/completion/bash/scw:		history
contrib/completion/bash/scw:		images
contrib/completion/bash/scw:#		import
contrib/completion/bash/scw:		info
contrib/completion/bash/scw:		inspect
contrib/completion/bash/scw:		kill
contrib/completion/bash/scw:#		load
contrib/completion/bash/scw:		login
contrib/completion/bash/scw:#		logout
contrib/completion/bash/scw:		logs
contrib/completion/bash/scw:#		pause
contrib/completion/bash/scw:		port
contrib/completion/bash/scw:		ps
contrib/completion/bash/scw:#		pull
contrib/completion/bash/scw:#		push
contrib/completion/bash/scw:		rename
contrib/completion/bash/scw:		restart
contrib/completion/bash/scw:		rm
contrib/completion/bash/scw:		rmi
contrib/completion/bash/scw:		run
contrib/completion/bash/scw:#		save
contrib/completion/bash/scw:		search
contrib/completion/bash/scw:		start
contrib/completion/bash/scw:#		stats
contrib/completion/bash/scw:		stop
contrib/completion/bash/scw:		tag
contrib/completion/bash/scw:		top
contrib/completion/bash/scw:#		unpause
contrib/completion/bash/scw:		version
contrib/completion/bash/scw:		wait
contrib/completion/bash/scw:	)
contrib/completion/bash/scw:	local main_options_with_args="
contrib/completion/bash/scw:		--api-cors-header
contrib/completion/bash/scw:		--bip
contrib/completion/bash/scw:		--bridge -b
contrib/completion/bash/scw:		--default-gateway
contrib/completion/bash/scw:		--default-gateway-v6
contrib/completion/bash/scw:		--default-ulimit
contrib/completion/bash/scw:		--dns
contrib/completion/bash/scw:		--dns-search
contrib/completion/bash/scw:		--exec-driver -e
contrib/completion/bash/scw:		--exec-opt
contrib/completion/bash/scw:		--exec-root
contrib/completion/bash/scw:		--fixed-cidr
contrib/completion/bash/scw:		--fixed-cidr-v6
contrib/completion/bash/scw:		--graph -g
contrib/completion/bash/scw:		--group -G
contrib/completion/bash/scw:		--host -H
contrib/completion/bash/scw:		--insecure-registry
contrib/completion/bash/scw:		--ip
contrib/completion/bash/scw:		--label
contrib/completion/bash/scw:		--log-driver
contrib/completion/bash/scw:		--log-level -l
contrib/completion/bash/scw:		--mtu
contrib/completion/bash/scw:		--pidfile -p
contrib/completion/bash/scw:		--registry-mirror
contrib/completion/bash/scw:		--storage-driver -s
contrib/completion/bash/scw:		--storage-opt
contrib/completion/bash/scw:		--tlscacert
contrib/completion/bash/scw:		--tlscert
contrib/completion/bash/scw:		--tlskey
contrib/completion/bash/scw:	"
contrib/completion/bash/scw:	local main_options_with_args_glob=$(__scw_to_extglob "$main_options_with_args")
contrib/completion/bash/scw:	local host
contrib/completion/bash/scw:	COMPREPLY=()
contrib/completion/bash/scw:	local cur prev words cword
contrib/completion/bash/scw:	_get_comp_words_by_ref -n : cur prev words cword
contrib/completion/bash/scw:	local command='scw' cpos=0
contrib/completion/bash/scw:	local counter=1
contrib/completion/bash/scw:	while [ $counter -lt $cword ]; do
contrib/completion/bash/scw:		case "${words[$counter]}" in
contrib/completion/bash/scw:			# save host so that completion can use custom daemon
contrib/completion/bash/scw:			--host|-H)
contrib/completion/bash/scw:				(( counter++ ))
contrib/completion/bash/scw:				host="${words[$counter]}"
contrib/completion/bash/scw:				;;
contrib/completion/bash/scw:			$main_options_with_args_glob )
contrib/completion/bash/scw:				(( counter++ ))
contrib/completion/bash/scw:				;;
contrib/completion/bash/scw:			-*)
contrib/completion/bash/scw:				;;
contrib/completion/bash/scw:			=)
contrib/completion/bash/scw:				(( counter++ ))
contrib/completion/bash/scw:				;;
contrib/completion/bash/scw:			*)
contrib/completion/bash/scw:				command="${words[$counter]}"
contrib/completion/bash/scw:				cpos=$counter
contrib/completion/bash/scw:				(( cpos++ ))
contrib/completion/bash/scw:				break
contrib/completion/bash/scw:				;;
contrib/completion/bash/scw:		esac
contrib/completion/bash/scw:		(( counter++ ))
contrib/completion/bash/scw:	done
contrib/completion/bash/scw:	local completions_func=_scw_${command}
contrib/completion/bash/scw:	declare -F $completions_func >/dev/null && $completions_func
contrib/completion/bash/scw:	eval "$previous_extglob_setting"
contrib/completion/bash/scw:	return 0
contrib/completion/bash/scw:}
contrib/completion/bash/scw:complete -F _scw scw
contrib/completion/zsh/_scw:#compdef scw
contrib/completion/zsh/_scw:#
contrib/completion/zsh/_scw:# zsh completion for scw (http://scaleway.com)
contrib/completion/zsh/_scw:#
contrib/completion/zsh/_scw:# Inspired by https://github.com/felixr/docker-zsh-completion
contrib/completion/zsh/_scw:__scw_get_servers() {
contrib/completion/zsh/_scw:    local expl
contrib/completion/zsh/_scw:    declare -a servers
contrib/completion/zsh/_scw:    servers=(${(f)"$(_call_program commands scw _completion servers-names)"})
contrib/completion/zsh/_scw:    _describe -t servers "servers" servers
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_stoppedservers() {
contrib/completion/zsh/_scw:    __scw_get_servers
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_runningservers() {
contrib/completion/zsh/_scw:    __scw_get_servers
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_servers () {
contrib/completion/zsh/_scw:    __scw_get_servers
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_images () {
contrib/completion/zsh/_scw:    local expl
contrib/completion/zsh/_scw:    declare -a images
contrib/completion/zsh/_scw:    images=(${(f)"$(_call_program commands scw _completion images-names)"})
contrib/completion/zsh/_scw:    _describe -t images "images" images
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_images_and_snapshots () {
contrib/completion/zsh/_scw:    __scw_images
contrib/completion/zsh/_scw:    __scw_snapshots
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_snapshots () {
contrib/completion/zsh/_scw:    local expl
contrib/completion/zsh/_scw:    declare -a snapshots
contrib/completion/zsh/_scw:    snapshots=(${(f)"$(_call_program commands scw _completion --prefix snapshots-names)"})
contrib/completion/zsh/_scw:    _describe -t snapshots "snapshots" snapshots
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_bootscripts () {
contrib/completion/zsh/_scw:    local expl
contrib/completion/zsh/_scw:    declare -a bootscripts
contrib/completion/zsh/_scw:    bootscripts=(${(f)"$(_call_program commands scw _completion bootscripts-names)"})
contrib/completion/zsh/_scw:    _describe -t bootscripts "bootscripts" bootscripts
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_tags() {
contrib/completion/zsh/_scw:    __scw_images
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_repositories_with_tags() {
contrib/completion/zsh/_scw:    __scw_images
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_search() {
contrib/completion/zsh/_scw:    # declare -a scwsearch
contrib/completion/zsh/_scw:    local cache_policy
contrib/completion/zsh/_scw:    zstyle -s ":completion:${curcontext}:" cache-policy cache_policy
contrib/completion/zsh/_scw:    if [[ -z "$cache_policy" ]]; then
contrib/completion/zsh/_scw:        zstyle ":completion:${curcontext}:" cache-policy __scw_caching_policy
contrib/completion/zsh/_scw:    fi
contrib/completion/zsh/_scw:    local searchterm cachename
contrib/completion/zsh/_scw:    searchterm="${words[$CURRENT]%/}"
contrib/completion/zsh/_scw:    cachename=_scw-search-$searchterm
contrib/completion/zsh/_scw:    local expl
contrib/completion/zsh/_scw:    local -a result
contrib/completion/zsh/_scw:    if ( [[ ${(P)+cachename} -eq 0 ]] || _cache_invalid ${cachename#_} ) \
contrib/completion/zsh/_scw:        && ! _retrieve_cache ${cachename#_}; then
contrib/completion/zsh/_scw:        _message "Searching for ${searchterm}..."
contrib/completion/zsh/_scw:        result=(${${${(f)"$(_call_program commands scw search ${searchterm})"}%% *}[2,-1]})
contrib/completion/zsh/_scw:        _store_cache ${cachename#_} result
contrib/completion/zsh/_scw:    fi
contrib/completion/zsh/_scw:    _wanted scwsearch expl 'available images' compadd -a result
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_caching_policy()
contrib/completion/zsh/_scw:{
contrib/completion/zsh/_scw:  oldp=( "$1"(Nmh+1) )     # 1 hour
contrib/completion/zsh/_scw:  (( $#oldp ))
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_repositories () {
contrib/completion/zsh/_scw:    __scw_images
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_commands () {
contrib/completion/zsh/_scw:    # local -a  _scw_subcommands
contrib/completion/zsh/_scw:    local cache_policy
contrib/completion/zsh/_scw:    zstyle -s ":completion:${curcontext}:" cache-policy cache_policy
contrib/completion/zsh/_scw:    if [[ -z "$cache_policy" ]]; then
contrib/completion/zsh/_scw:        zstyle ":completion:${curcontext}:" cache-policy __scw_caching_policy
contrib/completion/zsh/_scw:    fi
contrib/completion/zsh/_scw:    if ( [[ ${+_scw_subcommands} -eq 0 ]] || _cache_invalid scw_subcommands) \
contrib/completion/zsh/_scw:        && ! _retrieve_cache scw_subcommands;
contrib/completion/zsh/_scw:    then
contrib/completion/zsh/_scw:        local -a lines
contrib/completion/zsh/_scw:        lines=(${(f)"$(_call_program commands scw 2>&1)"})
contrib/completion/zsh/_scw:        _scw_subcommands=(${${${lines[$((${lines[(i)Commands:]} + 1)),${lines[(I)    *]}]}## #}/ ##/:})
contrib/completion/zsh/_scw:        _scw_subcommands=($_scw_subcommands 'help:Show help for a command')
contrib/completion/zsh/_scw:        _store_cache scw_subcommands _scw_subcommands
contrib/completion/zsh/_scw:    fi
contrib/completion/zsh/_scw:    _describe -t scw-commands "scw command" _scw_subcommands
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:__scw_subcommand () {
contrib/completion/zsh/_scw:    local -a _command_args
contrib/completion/zsh/_scw:    case "$words[1]" in
contrib/completion/zsh/_scw:        (attach)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                '--no-stdin[Do not attach stdin]' \
contrib/completion/zsh/_scw:                ':servers:__scw_runningservers'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (commit)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                {-v,--volume=0}'[Volume slot]:volume: ' \
contrib/completion/zsh/_scw:                ':server:__scw_servers' \
contrib/completion/zsh/_scw:                ':repository:__scw_repositories_with_tags'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (cp)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                ':server:->server' \
contrib/completion/zsh/_scw:                ':hostpath:_files'
contrib/completion/zsh/_scw:            case $state in
contrib/completion/zsh/_scw:                (server)
contrib/completion/zsh/_scw:                    if compset -P '*:'; then
contrib/completion/zsh/_scw:                        _files
contrib/completion/zsh/_scw:                    else
contrib/completion/zsh/_scw:                        __scw_servers -qS ":"
contrib/completion/zsh/_scw:                    fi
contrib/completion/zsh/_scw:                    ;;
contrib/completion/zsh/_scw:            esac
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (exec)
contrib/completion/zsh/_scw:            local state ret
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                {-T,--timeout=0}'[Set timeout values to seconds]' \
contrib/completion/zsh/_scw:                {-w,--wait}'[Wait for SSH to be ready]' \
contrib/completion/zsh/_scw:                ':servers:__scw_runningservers' \
contrib/completion/zsh/_scw:                '*::command:->anycommand' && ret=0
contrib/completion/zsh/_scw:            case $state in
contrib/completion/zsh/_scw:                (anycommand)
contrib/completion/zsh/_scw:                    shift 1 words
contrib/completion/zsh/_scw:                    (( CURRENT-- ))
contrib/completion/zsh/_scw:                    _normal
contrib/completion/zsh/_scw:                    ;;
contrib/completion/zsh/_scw:            esac
contrib/completion/zsh/_scw:            return ret
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (history)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                '--no-trunc[Do not truncate output]' \
contrib/completion/zsh/_scw:                {-q,--quiet}'[Only show numeric IDs]' \
contrib/completion/zsh/_scw:                '*:images:__scw_images'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (images)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                {-a,--all}'[Show all images]' \
contrib/completion/zsh/_scw:                '--no-trunc[Do not truncate output]' \
contrib/completion/zsh/_scw:                {-q,--quiet}'[Only show numeric IDs]' \
contrib/completion/zsh/_scw:                ':repository:__scw_repositories'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (info)
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (inspect)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                {-f,--format=-}'[Format the output using the given go template]:template: ' \
contrib/completion/zsh/_scw:                '*:servers:__scw_servers'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (kill)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                '*:servers:__scw_runningservers'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (login)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                {-o,--organization=-}'[Organization]:organization: ' \
contrib/completion/zsh/_scw:                {-t,--token=-}'[Token]:token: ' \
contrib/completion/zsh/_scw:                ':server: '
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (logout)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                ':server: '
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (logs)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                '*:servers:__scw_servers'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (port)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                '1:servers:__scw_runningservers' \
contrib/completion/zsh/_scw:                '2:port:_ports'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (start)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                {-T,--timeout=0}'[Set timeout values to seconds]' \
contrib/completion/zsh/_scw:                {-w,--wait}'[Wait for SSH to be ready]' \
contrib/completion/zsh/_scw:                '*:servers:__scw_stoppedservers'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (rm)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                '*:servers:__scw_stoppedservers'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (rmi)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                '*:images:__scw_images'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (restart)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                '*:servers:__scw_runningservers'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (stop)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                {-t,--terminate}'[Stop and trash a server with its volumes]' \
contrib/completion/zsh/_scw:                {-w,--wait}'[Synchronous stop. Wait for server to be stopped]' \
contrib/completion/zsh/_scw:                '*:servers:__scw_runningservers'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (top)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                '1:servers:__scw_runningservers' \
contrib/completion/zsh/_scw:                '(-)*:: :->ps-arguments'
contrib/completion/zsh/_scw:            case $state in
contrib/completion/zsh/_scw:                (ps-arguments)
contrib/completion/zsh/_scw:                    _ps
contrib/completion/zsh/_scw:                    ;;
contrib/completion/zsh/_scw:            esac
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (ps)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                {-a,--all}'[Show all servers. Only running servers are shown by default]' \
contrib/completion/zsh/_scw:                {-l,--latest}'[Show only the latest created server]' \
contrib/completion/zsh/_scw:                '-n[Show n last created servers, include non-running one]:n:(1 5 10 25 50)' \
contrib/completion/zsh/_scw:                '--no-trunc[Do not truncate output]' \
contrib/completion/zsh/_scw:                {-q,--quiet}'[Only show numeric IDs]'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (tag)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                {-f,--force}'[force]'\
contrib/completion/zsh/_scw:                ':image:__scw_images'\
contrib/completion/zsh/_scw:                ':repository:__scw_repositories_with_tags'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (create|run)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                {-a,--attach}'[Attach to stdin, stdout or stderr]' \
contrib/completion/zsh/_scw:                '*'{-e,--environment=-}'[Set environment variables]:environment variable: ' \
contrib/completion/zsh/_scw:                '--name=-[Server name]:name: ' \
contrib/completion/zsh/_scw:                '--bootscript=-[Assign a bootscript]:bootscript:__scw_bootscripts ' \
contrib/completion/zsh/_scw:                '*-v[Bind mount a volume]:volume: '\
contrib/completion/zsh/_scw:                '(-):images:__scw_images_and_snapshots' \
contrib/completion/zsh/_scw:                '(-):command: _command_names -e' \
contrib/completion/zsh/_scw:                '*::arguments: _normal'
contrib/completion/zsh/_scw:            case $state in
contrib/completion/zsh/_scw:                (link)
contrib/completion/zsh/_scw:                    if compset -P '*:'; then
contrib/completion/zsh/_scw:                        _wanted alias expl 'Alias' compadd -E ""
contrib/completion/zsh/_scw:                    else
contrib/completion/zsh/_scw:                        __scw_runningservers -qS ":"
contrib/completion/zsh/_scw:                    fi
contrib/completion/zsh/_scw:                    ;;
contrib/completion/zsh/_scw:            esac
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (rename)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                ':old name:__scw_servers' \
contrib/completion/zsh/_scw:                ':new name: '
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (search)
contrib/completion/zsh/_scw:            _arguments \
contrib/completion/zsh/_scw:                '--no-trunc[Do not truncate output]' \
contrib/completion/zsh/_scw:                ':term: '
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (wait)
contrib/completion/zsh/_scw:            _arguments '*:servers:__scw_runningservers'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (help)
contrib/completion/zsh/_scw:            _arguments ':subcommand:__scw_commands'
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (*)
contrib/completion/zsh/_scw:            _message 'Unknown sub command'
contrib/completion/zsh/_scw:    esac
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:_scw () {
contrib/completion/zsh/_scw:    # Support for subservices, which allows for `compdef _scw scw-shell=_scw_servers`.
contrib/completion/zsh/_scw:    # Based on /usr/share/zsh/functions/Completion/Unix/_git without support for `ret`.
contrib/completion/zsh/_scw:    if [[ $service != scw ]]; then
contrib/completion/zsh/_scw:        _call_function - _$service
contrib/completion/zsh/_scw:        return
contrib/completion/zsh/_scw:    fi
contrib/completion/zsh/_scw:    local curcontext="$curcontext" state line
contrib/completion/zsh/_scw:    typeset -A opt_args
contrib/completion/zsh/_scw:    _arguments -C \
contrib/completion/zsh/_scw:      '-H[tcp://host:port to bind/connect to]:socket: ' \
contrib/completion/zsh/_scw:         '(-): :->command' \
contrib/completion/zsh/_scw:         '(-)*:: :->option-or-argument'
contrib/completion/zsh/_scw:    if (( CURRENT == 1 )); then
contrib/completion/zsh/_scw:    fi
contrib/completion/zsh/_scw:    case $state in
contrib/completion/zsh/_scw:        (command)
contrib/completion/zsh/_scw:            __scw_commands
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:        (option-or-argument)
contrib/completion/zsh/_scw:            curcontext=${curcontext%:*:*}:scw-$words[1]:
contrib/completion/zsh/_scw:            __scw_subcommand
contrib/completion/zsh/_scw:            ;;
contrib/completion/zsh/_scw:    esac
contrib/completion/zsh/_scw:}
contrib/completion/zsh/_scw:_scw "$@"
contrib/completion/zsh/_scw:# Local Variables:
contrib/completion/zsh/_scw:# mode: Shell-Script
contrib/completion/zsh/_scw:# sh-indentation: 4
contrib/completion/zsh/_scw:# indent-tabs-mode: nil
contrib/completion/zsh/_scw:# sh-basic-offset: 4
contrib/completion/zsh/_scw:# End:
contrib/completion/zsh/_scw:# vim: ft=zsh sw=4 ts=4 et
dist/.dockerignore:*.zip
dist/.dockerignore:*.tar.gz
dist/.dockerignore:*.deb
dist/.dockerignore:Dockerfile
dist/.dockerignore:.dockerignore
dist/Dockerfile:FROM scratch
dist/Dockerfile:MAINTAINER Scaleway <opensource@scaleway.com> (@scaleway)
dist/Dockerfile:ADD latest/ssl.tar /
dist/Dockerfile:COPY latest/scw-Linux-i386 /bin/scw
dist/Dockerfile:VOLUME /root/
dist/Dockerfile:ENTRYPOINT ["/bin/scw"]
downloads.tpl:---
downloads.tpl:layout: default
downloads.tpl:title: Downloads
downloads.tpl:---
downloads.tpl:NOTE: You can get latest version of scaleway-cli using `go get -u github.com/scaleway/scaleway-cli/cmd/scw`.
downloads.tpl:{{.AppName}} downloads (version {{.Version}})
downloads.tpl:{{range $k, $v := .Categories}}### {{$k}}
downloads.tpl:{{range $v}} * [{{.Text}}]({{.RelativeLink}})
downloads.tpl:{{end}}
downloads.tpl:{{end}}
downloads.tpl:---
downloads.tpl:{{.ExtraVars.footer}}
examples/create-image-from-docker.sh:#!/bin/bash
examples/create-image-from-docker.sh:set -e
examples/create-image-from-docker.sh:REPO="${1}"
examples/create-image-from-docker.sh:if [ -z "${1}" ]; then
examples/create-image-from-docker.sh:    echo "usage: $(basename ${0}) <repo>"
examples/create-image-from-docker.sh:    echo ""
examples/create-image-from-docker.sh:    echo "examples:"
examples/create-image-from-docker.sh:    echo "  - $(basename ${0}) armbuild/scw-app-docker:latest"
examples/create-image-from-docker.sh:    echo "  - VOLUME_SIZE=50GB $(basename ${0}) armbuild/scw-app-docker"
examples/create-image-from-docker.sh:    exit 1
examples/create-image-from-docker.sh:fi
examples/create-image-from-docker.sh:set -e
examples/create-image-from-docker.sh:NAME=$(basename "${REPO}")
examples/create-image-from-docker.sh:NAME=${NAME%.*}-$(date +%Y-%m-%d_%H:%M)
examples/create-image-from-docker.sh:VOLUME_SIZE=${VOLUME_SIZE:-50GB}
examples/create-image-from-docker.sh:echo "[+] REPO: ${REPO}"
examples/create-image-from-docker.sh:echo "[+] Target name: ${NAME}"
examples/create-image-from-docker.sh:echo "[+] Creating new server in rescue mode with a secondary volume..."
examples/create-image-from-docker.sh:SERVER=$(scw create --volume="${VOLUME_SIZE}" --name="image-writer-${NAME}" docker)
examples/create-image-from-docker.sh:echo "[+] Server created: ${SERVER}"
examples/create-image-from-docker.sh:echo "[+] Booting..."
examples/create-image-from-docker.sh:scw start --wait --timeout=600 "${SERVER}" >/dev/null
examples/create-image-from-docker.sh:#IP=$(scw inspect -f .server.public_ip.address "${SERVER}")
examples/create-image-from-docker.sh:#echo "[+] SSH is ready (${IP})"
examples/create-image-from-docker.sh:echo "[+] Server is booted"
examples/create-image-from-docker.sh:scw exec "${SERVER}" 'uname -a'
examples/create-image-from-docker.sh:echo "[+] Formating and mounting /dev/nbd1..."
examples/create-image-from-docker.sh:scw exec "${SERVER}" 'mkfs.ext4 /dev/nbd1 && mount /dev/nbd1 /mnt'
examples/create-image-from-docker.sh:echo "[+] /dev/nbd1 formatted in ext4 and mounted on /mnt"
examples/create-image-from-docker.sh:echo "[+] Download image"
examples/create-image-from-docker.sh:scw exec "${SERVER}" docker pull "${REPO}"
examples/create-image-from-docker.sh:echo "[+] Image downloaded"
examples/create-image-from-docker.sh:echo "[+] Export image to /dev/nbd1"
examples/create-image-from-docker.sh:scw exec "${SERVER}" docker run --name tmp --entrypoint /dontexists "${REPO}" 2>/dev/null || true
examples/create-image-from-docker.sh:scw exec "${SERVER}" 'docker export tmp > image.tar'
examples/create-image-from-docker.sh:scw exec "${SERVER}" tar -C /mnt -xf image.tar
examples/create-image-from-docker.sh:#scw exec "${SERVER}" rm -f image.tar
examples/create-image-from-docker.sh:scw exec "${SERVER}" rm -f /mnt/.dockerenv /mnt/.dockerinit
examples/create-image-from-docker.sh:scw exec "${SERVER}" chmod 1777 /mnt/tmp
examples/create-image-from-docker.sh:scw exec "${SERVER}" chmod 755 /mnt/etc /mnt/usr /mnt/usr/local /mnt/usr/sbin
examples/create-image-from-docker.sh:scw exec "${SERVER}" chmod 555 /mnt/sys
examples/create-image-from-docker.sh:scw exec "${SERVER}" chmod 700 /mnt/root
examples/create-image-from-docker.sh:scw exec "${SERVER}" mv /mnt/etc/hosts.default /mnt/etc/hosts || true
examples/create-image-from-docker.sh:scw exec "${SERVER}" sync
examples/create-image-from-docker.sh:echo "[+] Image exported"
examples/create-image-from-docker.sh:echo "[+] Stopping the server"
examples/create-image-from-docker.sh:scw stop "${SERVER}"
examples/create-image-from-docker.sh:scw wait "${SERVER}"
examples/create-image-from-docker.sh:echo "[+] Server stopped"
examples/create-image-from-docker.sh:echo "[+] Creating a snapshot of nbd1"
examples/create-image-from-docker.sh:SNAPSHOT=$(scw commit --volume=1 "${SERVER}" "${NAME}")
examples/create-image-from-docker.sh:echo "[+] Snapshot ${SNAPSHOT} created"
examples/create-image-from-docker.sh:echo "[+] Creating an image based of the snapshot"
examples/create-image-from-docker.sh:IMAGE=$(scw tag "${SNAPSHOT}" "${NAME}")
examples/create-image-from-docker.sh:echo "[+] Image created: ${IMAGE}"
examples/create-image-from-docker.sh:echo "[+] Deleting temporary server"
examples/create-image-from-docker.sh:scw rm "${SERVER}"
examples/create-image-from-docker.sh:echo "[+] Server deleted"
examples/create-image-from-http.sh:#!/bin/bash
examples/create-image-from-http.sh:set -e
examples/create-image-from-http.sh:URL="${1}"
examples/create-image-from-http.sh:if [ -z "${1}" ]; then
examples/create-image-from-http.sh:    echo "usage: $(basename ${0}) <url>"
examples/create-image-from-http.sh:    echo ""
examples/create-image-from-http.sh:    echo "examples:"
examples/create-image-from-http.sh:    echo "  - $(basename ${0}) http://test-images.fr-1.storage.online.net/scw-distrib-ubuntu-trusty.tar"
examples/create-image-from-http.sh:    echo "  - VOLUME_SIZE=50GB $(basename ${0}) http://test-images.fr-1.storage.online.net/scw-distrib-ubuntu-trusty.tar"
examples/create-image-from-http.sh:    exit 1
examples/create-image-from-http.sh:fi
examples/create-image-from-http.sh:NAME=$(basename "${URL}")
examples/create-image-from-http.sh:SNAPSHOT_NAME=${NAME%.*}-$(date +%Y-%m-%d_%H:%M)
examples/create-image-from-http.sh:IMAGE_NAME=${IMAGE_NAME:-$SNAPSHOT_NAME}
examples/create-image-from-http.sh:IMAGE_BOOTSCRIPT=${IMAGE_BOOTSCRIPT:stable}
examples/create-image-from-http.sh:VOLUME_SIZE=${VOLUME_SIZE:-50GB}
examples/create-image-from-http.sh:KEY=$(cat ~/.ssh/id_rsa.pub | awk '{ print $1" "$2 }' | tr ' ' '_')
examples/create-image-from-http.sh:echo "[+] URL of the tarball: ${URL}"
examples/create-image-from-http.sh:echo "[+] Target name: ${NAME}"
examples/create-image-from-http.sh:echo "[+] Creating new server in rescue mode with a secondary volume..."
examples/create-image-from-http.sh:SERVER=$(scw run -d --bootscript=rescue --volume="${VOLUME_SIZE}" --env="AUTHORIZED_KEY=${KEY}" --name="image-writer-${NAME}" 1GB)
examples/create-image-from-http.sh:echo "[+] Server created: ${SERVER}"
examples/create-image-from-http.sh:echo "[+] Booting..."
examples/create-image-from-http.sh:scw exec -w "${SERVER}" 'uname -a'
examples/create-image-from-http.sh:echo "[+] Server is booted"
examples/create-image-from-http.sh:if [ -n "${SCW_GATEWAY_HTTP_PROXY}" ]; then
examples/create-image-from-http.sh:    echo "[+] Configuring HTTP proxy"
examples/create-image-from-http.sh:    # scw exec "${SERVER}" "echo proxy=${SCW_GATEWAY_HTTP_PROY} >> .curlrc"
examples/create-image-from-http.sh:    (
examples/create-image-from-http.sh:        set +x
examples/create-image-from-http.sh:        scw exec "${SERVER}" "echo http_proxy = ${SCW_GATEWAY_HTTP_PROXY} >> .wgetrc" >/dev/null 2>/dev/null || (echo "Failed to configure HTTP proxy"; exit 1) || exit 1
examples/create-image-from-http.sh:    )
examples/create-image-from-http.sh:fi
examples/create-image-from-http.sh:echo "[+] Formating and mounting /dev/nbd1..."
examples/create-image-from-http.sh:scw exec "${SERVER}" 'mkfs.ext4 /dev/nbd1 && mount /dev/nbd1 /mnt'
examples/create-image-from-http.sh:echo "[+] /dev/nbd1 formatted in ext4 and mounted on /mnt"
examples/create-image-from-http.sh:echo "[+] Download tarball and write it to /dev/nbd1"
examples/create-image-from-http.sh:scw exec "${SERVER}" "wget -qO - ${URL} | tar -C /mnt/ -xf - && sync"
examples/create-image-from-http.sh:echo "[+] Tarball extracted on /dev/nbd1"
examples/create-image-from-http.sh:echo "[+] Stopping the server"
examples/create-image-from-http.sh:scw stop "${SERVER}" >/dev/null
examples/create-image-from-http.sh:scw wait "${SERVER}"
examples/create-image-from-http.sh:echo "[+] Server stopped"
examples/create-image-from-http.sh:echo "[+] Creating a snapshot of nbd1"
examples/create-image-from-http.sh:SNAPSHOT=$(scw commit --volume=1 "${SERVER}" "${SNAPSHOT_NAME}")
examples/create-image-from-http.sh:echo "[+] Snapshot ${SNAPSHOT} created"
examples/create-image-from-http.sh:echo "[+] Creating an image based of the snapshot"
examples/create-image-from-http.sh:if [ -n "${IMAGE_ARCH}" ]; then
examples/create-image-from-http.sh:    IMAGE=$(scw tag --arch="${IMAGE_ARCH}" --bootscript="${IMAGE_BOOTSCRIPT}" "${SNAPSHOT}" "${IMAGE_NAME}")
examples/create-image-from-http.sh:else
examples/create-image-from-http.sh:    IMAGE=$(scw tag --bootscript="${IMAGE_BOOTSCRIPT}" "${SNAPSHOT}" "${IMAGE_NAME}")
examples/create-image-from-http.sh:fi
examples/create-image-from-http.sh:echo "[+] Image created: ${IMAGE}"
examples/create-image-from-http.sh:echo "[+] Deleting temporary server"
examples/create-image-from-http.sh:scw rm "${SERVER}" >/dev/null
examples/create-image-from-http.sh:echo "[+] Server deleted"
examples/create-image-livecd.sh:#!/bin/bash
examples/create-image-livecd.sh:set -e
examples/create-image-livecd.sh:URL="${1}"
examples/create-image-livecd.sh:if [ -z "${1}" ]; then
examples/create-image-livecd.sh:    echo "usage: $(basename ${0}) <url>"
examples/create-image-livecd.sh:    echo ""
examples/create-image-livecd.sh:    echo "examples:"
examples/create-image-livecd.sh:    echo "  - $(basename ${0}) http://test-images.fr-1.storage.online.net/scw-distrib-ubuntu-trusty.tar"
examples/create-image-livecd.sh:    exit 1
examples/create-image-livecd.sh:fi
examples/create-image-livecd.sh:# FIXME: add usage
examples/create-image-livecd.sh:NAME=$(basename "${URL}")
examples/create-image-livecd.sh:NAME=${NAME%.*}
examples/create-image-livecd.sh:echo "[+] URL of the tarball: ${URL}" >&2
examples/create-image-livecd.sh:echo "[+] Target name: ${NAME}" >&2
examples/create-image-livecd.sh:echo "[+] Creating new server in live mode..." >&2
examples/create-image-livecd.sh:SERVER=$(
examples/create-image-livecd.sh:    scw create \
examples/create-image-livecd.sh:        --bootscript=stable \
examples/create-image-livecd.sh:        --name="[live] $NAME" \
examples/create-image-livecd.sh:        --env="boot=live rescue_image=${URL}" \
examples/create-image-livecd.sh:        50GB
examples/create-image-livecd.sh:      )
examples/create-image-livecd.sh:echo "[+] Server created: ${SERVER}" >&2
examples/create-image-livecd.sh:echo "[+] Booting..." >&2
examples/create-image-livecd.sh:scw start "${SERVER}" >/dev/null
examples/create-image-livecd.sh:echo "[+] Done" >&2
examples/create-image-livecd.sh:echo "${SERVER}"
examples/create-image-testing-server.sh:#!/bin/bash
examples/create-image-testing-server.sh:set -e
examples/create-image-testing-server.sh:URL="${1}"
examples/create-image-testing-server.sh:if [ -z "${1}" ]; then
examples/create-image-testing-server.sh:    echo "usage: $(basename ${0}) <url>"
examples/create-image-testing-server.sh:    echo ""
examples/create-image-testing-server.sh:    echo "examples:"
examples/create-image-testing-server.sh:    echo "  - $(basename ${0}) http://test-images.fr-1.storage.online.net/scw-distrib-ubuntu-trusty.tar"
examples/create-image-testing-server.sh:    echo "  - VOLUME=20GB $(basename ${0}) http://test-images.fr-1.storage.online.net/scw-distrib-ubuntu-trusty.tar"
examples/create-image-testing-server.sh:    exit 1
examples/create-image-testing-server.sh:fi
examples/create-image-testing-server.sh:# FIXME: add usage
examples/create-image-testing-server.sh:NAME=$(basename "${URL}")
examples/create-image-testing-server.sh:NAME=${NAME%.*}
examples/create-image-testing-server.sh:echo "[+] URL of the tarball: ${URL}"
examples/create-image-testing-server.sh:echo "[+] Target name: ${NAME}"
examples/create-image-testing-server.sh:echo "[+] Creating new server in rescue mode..."
examples/create-image-testing-server.sh:SERVER=$(
examples/create-image-testing-server.sh:    scw create \
examples/create-image-testing-server.sh:        --bootscript=rescue \
examples/create-image-testing-server.sh:        --name="[testing] $NAME" \
examples/create-image-testing-server.sh:        --env="boot=rescue rescue_image=${URL}" \
examples/create-image-testing-server.sh:        1GB
examples/create-image-testing-server.sh:      )
examples/create-image-testing-server.sh:echo "[+] Server created: ${SERVER}"
examples/create-image-testing-server.sh:echo "[+] Booting..."
examples/create-image-testing-server.sh:scw start "${SERVER}" >/dev/null
examples/create-image-testing-server.sh:echo "[+] Done"
examples/image-quick-checks.sh:#!/usr/bin/env bash
examples/image-quick-checks.sh:# I'm a script used to check some basic operations with images.
examples/image-quick-checks.sh:# Params
examples/image-quick-checks.sh:if [ $# -ne 1 ]; then
examples/image-quick-checks.sh:    echo "usage: $0 image-id"
examples/image-quick-checks.sh:    exit 1
examples/image-quick-checks.sh:fi
examples/image-quick-checks.sh:# Globals
examples/image-quick-checks.sh:IMAGE_UUID=$1
examples/image-quick-checks.sh:IMAGE_NAME=""
examples/image-quick-checks.sh:SERVER_UUID=""
examples/image-quick-checks.sh:SERVER_NAME=""
examples/image-quick-checks.sh:WORKDIR=$(mktemp -d 2>/dev/null || mktemp -d -t /tmp)
examples/image-quick-checks.sh:# Printing helpers
examples/image-quick-checks.sh:function _log_msg {
examples/image-quick-checks.sh:    echo -ne "${*}" >&2
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function einfo {
examples/image-quick-checks.sh:    _log_msg "\033[1;36m>>> \033[0m${*}\n"
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function echeck {
examples/image-quick-checks.sh:    einfo $@
examples/image-quick-checks.sh:    echo ""
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function esuccess {
examples/image-quick-checks.sh:    _log_msg "\033[1;32m>>> \033[0m${*}\n"
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function ewarn {
examples/image-quick-checks.sh:    _log_msg "\033[1;33m>>> \033[0m${*}\n"
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function eerror {
examples/image-quick-checks.sh:    _log_msg "\033[1;31m>>> ${*}\033[0m\n"
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function eedie_on_error {
examples/image-quick-checks.sh:    failed=$1
examples/image-quick-checks.sh:    if [ $failed -ne 0 ]
examples/image-quick-checks.sh:    then
examples/image-quick-checks.sh:	eerror $2
examples/image-quick-checks.sh:	cleanup
examples/image-quick-checks.sh:	exit 1
examples/image-quick-checks.sh:    fi
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:# Super helper to print server output to stdout
examples/image-quick-checks.sh:function watch_server {
examples/image-quick-checks.sh:    einfo "Attaching to server $SERVER_UUID"
examples/image-quick-checks.sh:    mkfifo ${WORKDIR}/stop_watching_server
examples/image-quick-checks.sh:    scw attach $SERVER_UUID 2>/dev/null &
examples/image-quick-checks.sh:    killme=$!
examples/image-quick-checks.sh:    sleep 5
examples/image-quick-checks.sh:    (
examples/image-quick-checks.sh:	cat ${WORKDIR}/stop_watching_server
examples/image-quick-checks.sh:	kill -9 $killme
examples/image-quick-checks.sh:	echo ""
examples/image-quick-checks.sh:    ) &>/dev/null &
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function stop_watching {
examples/image-quick-checks.sh:    echo "" > ${WORKDIR}/stop_watching_server
examples/image-quick-checks.sh:    rm -f ${WORKDIR}/stop_watching_server
examples/image-quick-checks.sh:    sleep 1
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:# Checks
examples/image-quick-checks.sh:function check_image {
examples/image-quick-checks.sh:    echeck "Checking image..."
examples/image-quick-checks.sh:    IMAGE_NAME=$(scw inspect -f '{{ .Name }}' $IMAGE_UUID 2> /dev/null)
examples/image-quick-checks.sh:    eedie_on_error $? "Unable to find image behind $IMAGE_UUID"
examples/image-quick-checks.sh:    esuccess "Image name is $IMAGE_NAME"
examples/image-quick-checks.sh:    SERVER_NAME="qa-image-$$"
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function check_create {
examples/image-quick-checks.sh:    echeck "Checking server creation with image..."
examples/image-quick-checks.sh:    SERVER_UUID=$(scw create --name "$SERVER_NAME" $IMAGE_UUID)
examples/image-quick-checks.sh:    eedie_on_error $? "Unable to create server with image $IMAGE_NAME"
examples/image-quick-checks.sh:    esuccess "Created server $SERVER_UUID with image $IMAGE_NAME"
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function check_boot {
examples/image-quick-checks.sh:    echeck "Checking server boot (can take up to 300 seconds)..."
examples/image-quick-checks.sh:    watch_server $SERVER_UUID
examples/image-quick-checks.sh:    scw start -w -T 300 $SERVER_UUID &> /dev/null
examples/image-quick-checks.sh:    eedie_on_error $? "Unable to boot server $SERVER_UUID"
examples/image-quick-checks.sh:    stop_watching
examples/image-quick-checks.sh:    esuccess "Server $SERVER_UUID properly boots"
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function check_hostname {
examples/image-quick-checks.sh:    echeck "Checking server hostname..."
examples/image-quick-checks.sh:    HOSTNAME=$(scw exec $SERVER_UUID hostname)
examples/image-quick-checks.sh:    eedie_on_error $? "Unable to fetch hostname from server $SERVER_UUID"
examples/image-quick-checks.sh:    if [ "$HOSTNAME" -ne "$SERVER_NAME" ]
examples/image-quick-checks.sh:    then
examples/image-quick-checks.sh:	ewarn "Server hostname is *NOT* properly set (expected=${SERVR_NAME}, found=${HOSTNAME})"
examples/image-quick-checks.sh:    else
examples/image-quick-checks.sh:	esuccess "Server hostname is properly set"
examples/image-quick-checks.sh:    fi
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:function check_reboot {
examples/image-quick-checks.sh:    echeck "Checking reboot..."
examples/image-quick-checks.sh:    watch_server
examples/image-quick-checks.sh:    scw exec $SERVER_UUID reboot &> /dev/null
examples/image-quick-checks.sh:    scw exec -T 300 -w $SERVER_UUID uptime
examples/image-quick-checks.sh:    stop_watching
examples/image-quick-checks.sh:    eedie_on_error $? "Unable to reboot server $SERVER_NAME"
examples/image-quick-checks.sh:    esuccess "Server $SERVER_NAME properly reboots"
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:# Cleanup
examples/image-quick-checks.sh:function cleanup {
examples/image-quick-checks.sh:    if [ "$SERVER_UUID" != "" ]
examples/image-quick-checks.sh:    then
examples/image-quick-checks.sh:	einfo "Cleaning up server $SERVER_UUID"
examples/image-quick-checks.sh:	scw stop -t $SERVER_UUID &> /dev/null
examples/image-quick-checks.sh:	scw rm $SERVER_UUID &> /dev/null
examples/image-quick-checks.sh:	SERVER_UUID=""
examples/image-quick-checks.sh:    fi
examples/image-quick-checks.sh:    stop_watching
examples/image-quick-checks.sh:    einfo "Cleaning up temporary directory $WORKDIR"
examples/image-quick-checks.sh:    rm -rf $WORKDIR
examples/image-quick-checks.sh:    kill -9 $(jobs -p)
examples/image-quick-checks.sh:    einfo "Killed all survivor processes"
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:# Main
examples/image-quick-checks.sh:function main {
examples/image-quick-checks.sh:    check_image
examples/image-quick-checks.sh:    check_create
examples/image-quick-checks.sh:    check_boot
examples/image-quick-checks.sh:    check_hostname
examples/image-quick-checks.sh:    check_reboot
examples/image-quick-checks.sh:    cleanup
examples/image-quick-checks.sh:}
examples/image-quick-checks.sh:main
examples/kernel-quick-checks.sh:#!/usr/bin/env bash
examples/kernel-quick-checks.sh:# I'm a script used to check the stability of new kernels.
examples/kernel-quick-checks.sh:#
examples/kernel-quick-checks.sh:# I spawn 16 servers, boot them, and perform several checks such as a
examples/kernel-quick-checks.sh:# local iperf, some IOs (parallel download of 5GO on a NBD mounted
examples/kernel-quick-checks.sh:# disk).
examples/kernel-quick-checks.sh:#
examples/kernel-quick-checks.sh:# I generate a Markdown report with results
examples/kernel-quick-checks.sh:# parameters
examples/kernel-quick-checks.sh:if [ $# -ne 1 ]; then
examples/kernel-quick-checks.sh:    echo "usage: $0 build-id"
examples/kernel-quick-checks.sh:    exit 1
examples/kernel-quick-checks.sh:fi
examples/kernel-quick-checks.sh:# globals
examples/kernel-quick-checks.sh:BUILD_ID=$1
examples/kernel-quick-checks.sh:WORKDIR=$(mktemp -d -t minibench)
examples/kernel-quick-checks.sh:NB_INSTANCES=16
examples/kernel-quick-checks.sh:INSTANCE_NAME='minibench-kernel'
examples/kernel-quick-checks.sh:# we expect the following in the environment
examples/kernel-quick-checks.sh:#
examples/kernel-quick-checks.sh:# - JENKINS_MIRROR
examples/kernel-quick-checks.sh:# - SANDBOX_DTB_UUID
examples/kernel-quick-checks.sh:if [ -f env.bash ]
examples/kernel-quick-checks.sh:then
examples/kernel-quick-checks.sh:    source env.bash
examples/kernel-quick-checks.sh:fi
examples/kernel-quick-checks.sh:# fetch kernel and publish to S3
examples/kernel-quick-checks.sh:function prepare {
examples/kernel-quick-checks.sh:    echo >&2 '[+] preparing kernel...'
examples/kernel-quick-checks.sh:    local kernel=$(wget "${JENKINS_MIRROR}/" -O /dev/stdout 2>/dev/null | sed -e 's/<a href="\([^"]*\)\/">.*/\1/' -e 'tx' -e 'd' -e ':x' | grep "^.*\-${BUILD_ID}$\|^.*\-${BUILD_ID}\-.*$")
examples/kernel-quick-checks.sh:    if [ -z "$kernel" ]; then
examples/kernel-quick-checks.sh:	echo "can't find $BUILD_ID on jenkins"
examples/kernel-quick-checks.sh:	exit 1
examples/kernel-quick-checks.sh:    fi
examples/kernel-quick-checks.sh:    wget "${JENKINS_MIRROR}/${kernel}/uImage" -O /tmp/uImage 2>/dev/null
examples/kernel-quick-checks.sh:    wget "${JENKINS_MIRROR}/${kernel}/dtbs/pimouss-computing.dtb" -O /tmp/dtb 2>/dev/null
examples/kernel-quick-checks.sh:    s3cmd put --acl-public /tmp/uImage s3://mxs/uImage-$kernel &>/dev/null
examples/kernel-quick-checks.sh:    s3cmd put --acl-public /tmp/dtb s3://mxs/dtb-$kernel &>/dev/null
examples/kernel-quick-checks.sh:    s3cmd put --acl-public /tmp/uImage s3://mxs/uImage-sandbox &>/dev/null
examples/kernel-quick-checks.sh:    s3cmd put --acl-public /tmp/dtb s3://mxs/dtb-sandbox &>/dev/null
examples/kernel-quick-checks.sh:    rm -f /tmp/uImage /tmp/dtb
examples/kernel-quick-checks.sh:}
examples/kernel-quick-checks.sh:# destroy all existing servers matching name
examples/kernel-quick-checks.sh:function cleanup {
examples/kernel-quick-checks.sh:    echo >&2 '[+] cleaning up existing servers...'
examples/kernel-quick-checks.sh:    for uuid in $(scw ps -a --no-trunc | tail -n +2 | awk '// { print $1, $NF; }' | grep "^.* ${INSTANCE_NAME}\-" | awk '// { print $1; }'); do
examples/kernel-quick-checks.sh:	scw stop -t $uuid
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    touch $WORKDIR/uuids.txt
examples/kernel-quick-checks.sh:    touch $WORKDIR/ips.txt
examples/kernel-quick-checks.sh:}
examples/kernel-quick-checks.sh:# create $NB_INSTANCES servers with a bootscript pointing to the prepared kernel
examples/kernel-quick-checks.sh:function boot {
examples/kernel-quick-checks.sh:    echo >&2 "[+] creating $NB_INSTANCES servers..."
examples/kernel-quick-checks.sh:    for i in $(eval echo {1..$NB_INSTANCES}); do
examples/kernel-quick-checks.sh:	scw create --bootscript $SANDBOX_DTB_UUID --volume 50G --name "$INSTANCE_NAME-$i" Ubuntu_Trusty_14_04_LTS >> $WORKDIR/uuids.txt
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    cat $WORKDIR/uuids.txt
examples/kernel-quick-checks.sh:    echo >&2 "[+] booting $NB_INSTANCES servers..."
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw start -s $uuid &
examples/kernel-quick-checks.sh:	sleep .5
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    wait `jobs -p`
examples/kernel-quick-checks.sh:    echo >&2 "[+] fetching IPs..."
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw inspect $uuid | grep address | awk '// { print $2; }' | tr -d '"' | awk '// { print $1; }' >> $WORKDIR/ips.txt
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:}
examples/kernel-quick-checks.sh:# run several tests and output a Markdown report
examples/kernel-quick-checks.sh:function report {
examples/kernel-quick-checks.sh:    # status
examples/kernel-quick-checks.sh:    echo >&2 "[+] report status"
examples/kernel-quick-checks.sh:    echo "## Status of instances"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    NB_INSTANCES_OK=$(wc -l $WORKDIR/ips.txt | awk '// { print $1; }')
examples/kernel-quick-checks.sh:    echo "- $NB_INSTANCES_OK / $NB_INSTANCES have correctly booted"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    # fping
examples/kernel-quick-checks.sh:    echo >&2 "[+] report fping"
examples/kernel-quick-checks.sh:    echo "## fping"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    fping $(cat $WORKDIR/ips.txt) | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    # uname -a
examples/kernel-quick-checks.sh:    echo >&2 "[+] report uname"
examples/kernel-quick-checks.sh:    echo "## uname"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw exec $uuid 'uname -a' | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    # iperf
examples/kernel-quick-checks.sh:    echo >&2 "[+] report iperf"
examples/kernel-quick-checks.sh:    echo "## iperf"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw exec $uuid 'iperf -s & sleep 5 ; iperf -c localhost' | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    # quick stability check
examples/kernel-quick-checks.sh:    echo >&2 "[+] report stability 1st pass"
examples/kernel-quick-checks.sh:    echo "## stability"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw exec $uuid 'find /usr -type f | xargs md5sum &> /tmp/a'
examples/kernel-quick-checks.sh:	scw exec $uuid 'find /usr -type f | xargs cat &> /tmp/megafile'
examples/kernel-quick-checks.sh:	scw exec $uuid 'for i in {1..5}; do wget --no-verbose --page-requisites http://ping.online.net/1000Mo.dat -O $i 2>/dev/null & done; wait $(jobs -p)' | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    echo >&2 "[+] report stability 2nd pass"
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw exec $uuid 'find /usr -type f | xargs md5sum &> /tmp/b'
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    echo >&2 "[+] report stability 3rd pass"
examples/kernel-quick-checks.sh:    for uuid in $(cat $WORKDIR/uuids.txt); do
examples/kernel-quick-checks.sh:	scw exec $uuid 'diff /tmp/a /tmp/b' | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    done
examples/kernel-quick-checks.sh:    echo >&2 "[+] report stability fping"
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:    fping $(cat $WORKDIR/ips.txt) | sed 's/\(.*\)/    \1/'
examples/kernel-quick-checks.sh:    echo ""
examples/kernel-quick-checks.sh:}
examples/kernel-quick-checks.sh:function main {
examples/kernel-quick-checks.sh:    prepare
examples/kernel-quick-checks.sh:    cleanup
examples/kernel-quick-checks.sh:    boot
examples/kernel-quick-checks.sh:    report > report-${BUILD_ID}.md
examples/kernel-quick-checks.sh:    echo >&2 "[+] report is at report-${BUILD_ID}.md"
examples/kernel-quick-checks.sh:    cleanup
examples/kernel-quick-checks.sh:}
examples/kernel-quick-checks.sh:main
examples/kernel-quick-checks.sh:rm -rf $WORKDIR
goversion.go:// +build go1.5
goversion.go:package goversion
goversion_unsupported.go:// +build !go1.5
goversion_unsupported.go:package goversion
goversion_unsupported.go:func error() {
goversion_unsupported.go:	`Bad go version, please install a version greater than or equal to 1.5`
goversion_unsupported.go:}
pkg/api/api.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/api/api.go:// Use of this source code is governed by a MIT-style
pkg/api/api.go:// license that can be found in the LICENSE.md file.
pkg/api/api.go:// Interact with Scaleway API
pkg/api/api.go:// Package api contains client and functions to interact with Scaleway API
pkg/api/api.go:package api
pkg/api/api.go:import (
pkg/api/api.go:	"bytes"
pkg/api/api.go:	"crypto/tls"
pkg/api/api.go:	"encoding/json"
pkg/api/api.go:	"errors"
pkg/api/api.go:	"fmt"
pkg/api/api.go:	"io/ioutil"
pkg/api/api.go:	"net"
pkg/api/api.go:	"net/http"
pkg/api/api.go:	"net/url"
pkg/api/api.go:	"os"
pkg/api/api.go:	"sort"
pkg/api/api.go:	"strings"
pkg/api/api.go:	"text/tabwriter"
pkg/api/api.go:	"text/template"
pkg/api/api.go:	"time"
pkg/api/api.go:	log "github.com/Sirupsen/logrus"
pkg/api/api.go:	"github.com/moul/anonuuid"
pkg/api/api.go:	"github.com/moul/http2curl"
pkg/api/api.go:)
pkg/api/api.go:// Default values
pkg/api/api.go:var (
pkg/api/api.go:	ComputeAPI  = "https://api.scaleway.com/"
pkg/api/api.go:	AccountAPI  = "https://account.scaleway.com/"
pkg/api/api.go:	MetadataAPI = "http://169.254.42.42/"
pkg/api/api.go:)
pkg/api/api.go:// ScalewayAPI is the interface used to communicate with the Scaleway API
pkg/api/api.go:type ScalewayAPI struct {
pkg/api/api.go:	// ComputeAPI is the endpoint to the Scaleway API
pkg/api/api.go:	ComputeAPI string
pkg/api/api.go:	// AccountAPI is the endpoint to the Scaleway Account API
pkg/api/api.go:	AccountAPI string
pkg/api/api.go:	// APIEndPoint or ACCOUNTEndPoint
pkg/api/api.go:	APIUrl string
pkg/api/api.go:	// Organization is the identifier of the Scaleway organization
pkg/api/api.go:	Organization string
pkg/api/api.go:	// Token is the authentication token for the Scaleway organization
pkg/api/api.go:	Token string
pkg/api/api.go:	verbose bool
pkg/api/api.go:	// Password is the authentication password
pkg/api/api.go:	password string
pkg/api/api.go:	// Cache is used to quickly resolve identifiers from names
pkg/api/api.go:	Cache *ScalewayCache
pkg/api/api.go:	client *http.Client
pkg/api/api.go:	// Used when switching from an API to another
pkg/api/api.go:	oldTransport *http.RoundTripper
pkg/api/api.go:	anonuuid     anonuuid.AnonUUID
pkg/api/api.go:	isMetadata   bool
pkg/api/api.go:}
pkg/api/api.go:// ScalewayAPIError represents a Scaleway API Error
pkg/api/api.go:type ScalewayAPIError struct {
pkg/api/api.go:	// Message is a human-friendly error message
pkg/api/api.go:	APIMessage string `json:"message,omitempty"`
pkg/api/api.go:	// Type is a string code that defines the kind of error
pkg/api/api.go:	Type string `json:"type,omitempty"`
pkg/api/api.go:	// Fields contains detail about validation error
pkg/api/api.go:	Fields map[string][]string `json:"fields,omitempty"`
pkg/api/api.go:	// StatusCode is the HTTP status code received
pkg/api/api.go:	StatusCode int `json:"-"`
pkg/api/api.go:	// Message
pkg/api/api.go:	Message string `json:"-"`
pkg/api/api.go:}
pkg/api/api.go:// Error returns a string representing the error
pkg/api/api.go:func (e ScalewayAPIError) Error() string {
pkg/api/api.go:	if e.Message != "" {
pkg/api/api.go:		return e.Message
pkg/api/api.go:	}
pkg/api/api.go:	if e.APIMessage != "" {
pkg/api/api.go:		return e.APIMessage
pkg/api/api.go:	}
pkg/api/api.go:	if e.StatusCode != 0 {
pkg/api/api.go:		return fmt.Sprintf("Invalid return code, got %d", e.StatusCode)
pkg/api/api.go:	}
pkg/api/api.go:	panic(e)
pkg/api/api.go:}
pkg/api/api.go:// Debug create a debug log entry with HTTP error informations
pkg/api/api.go:func (e ScalewayAPIError) Debug() {
pkg/api/api.go:	log.WithFields(log.Fields{
pkg/api/api.go:		"StatusCode": e.StatusCode,
pkg/api/api.go:		"Type":       e.Type,
pkg/api/api.go:		"Message":    e.Message,
pkg/api/api.go:	}).Debug(e.APIMessage)
pkg/api/api.go:	// error.Fields handling
pkg/api/api.go:	for k, v := range e.Fields {
pkg/api/api.go:		log.Debugf("  %-30s %s", fmt.Sprintf("%s: ", k), v)
pkg/api/api.go:	}
pkg/api/api.go:}
pkg/api/api.go:// ScalewayIPAddress represents a Scaleway IP address
pkg/api/api.go:type ScalewayIPAddress struct {
pkg/api/api.go:	// Identifier is a unique identifier for the IP address
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// IP is an IPv4 address
pkg/api/api.go:	IP string `json:"address,omitempty"`
pkg/api/api.go:	// Dynamic is a flag that defines an IP that change on each reboot
pkg/api/api.go:	Dynamic *bool `json:"dynamic,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayVolume represents a Scaleway Volume
pkg/api/api.go:type ScalewayVolume struct {
pkg/api/api.go:	// Identifier is a unique identifier for the volume
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// Size is the allocated size of the volume
pkg/api/api.go:	Size uint64 `json:"size,omitempty"`
pkg/api/api.go:	// CreationDate is the creation date of the volume
pkg/api/api.go:	CreationDate string `json:"creation_date,omitempty"`
pkg/api/api.go:	// ModificationDate is the date of the last modification of the volume
pkg/api/api.go:	ModificationDate string `json:"modification_date,omitempty"`
pkg/api/api.go:	// Organization is the organization owning the volume
pkg/api/api.go:	Organization string `json:"organization,omitempty"`
pkg/api/api.go:	// Name is the name of the volume
pkg/api/api.go:	Name string `json:"name,omitempty"`
pkg/api/api.go:	// Server is the server using this image
pkg/api/api.go:	Server *struct {
pkg/api/api.go:		Identifier string `json:"id,omitempty"`
pkg/api/api.go:		Name       string `json:"name,omitempty"`
pkg/api/api.go:	} `json:"server,omitempty"`
pkg/api/api.go:	// VolumeType is a Scaleway identifier for the kind of volume (default: l_ssd)
pkg/api/api.go:	VolumeType string `json:"volume_type,omitempty"`
pkg/api/api.go:	// ExportURI represents the url used by initrd/scripts to attach the volume
pkg/api/api.go:	ExportURI string `json:"export_uri,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayOneVolume represents the response of a GET /volumes/UUID API call
pkg/api/api.go:type ScalewayOneVolume struct {
pkg/api/api.go:	Volume ScalewayVolume `json:"volume,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayVolumes represents a group of Scaleway volumes
pkg/api/api.go:type ScalewayVolumes struct {
pkg/api/api.go:	// Volumes holds scaleway volumes of the response
pkg/api/api.go:	Volumes []ScalewayVolume `json:"volumes,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayVolumeDefinition represents a Scaleway C1 volume definition
pkg/api/api.go:type ScalewayVolumeDefinition struct {
pkg/api/api.go:	// Name is the user-defined name of the volume
pkg/api/api.go:	Name string `json:"name"`
pkg/api/api.go:	// Image is the image used by the volume
pkg/api/api.go:	Size uint64 `json:"size"`
pkg/api/api.go:	// Bootscript is the bootscript used by the volume
pkg/api/api.go:	Type string `json:"volume_type"`
pkg/api/api.go:	// Organization is the owner of the volume
pkg/api/api.go:	Organization string `json:"organization"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayVolumePutDefinition represents a Scaleway C1 volume with nullable fields (for PUT)
pkg/api/api.go:type ScalewayVolumePutDefinition struct {
pkg/api/api.go:	Identifier       *string `json:"id,omitempty"`
pkg/api/api.go:	Size             *uint64 `json:"size,omitempty"`
pkg/api/api.go:	CreationDate     *string `json:"creation_date,omitempty"`
pkg/api/api.go:	ModificationDate *string `json:"modification_date,omitempty"`
pkg/api/api.go:	Organization     *string `json:"organization,omitempty"`
pkg/api/api.go:	Name             *string `json:"name,omitempty"`
pkg/api/api.go:	Server           struct {
pkg/api/api.go:		Identifier *string `json:"id,omitempty"`
pkg/api/api.go:		Name       *string `json:"name,omitempty"`
pkg/api/api.go:	} `json:"server,omitempty"`
pkg/api/api.go:	VolumeType *string `json:"volume_type,omitempty"`
pkg/api/api.go:	ExportURI  *string `json:"export_uri,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayImage represents a Scaleway Image
pkg/api/api.go:type ScalewayImage struct {
pkg/api/api.go:	// Identifier is a unique identifier for the image
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// Name is a user-defined name for the image
pkg/api/api.go:	Name string `json:"name,omitempty"`
pkg/api/api.go:	// CreationDate is the creation date of the image
pkg/api/api.go:	CreationDate string `json:"creation_date,omitempty"`
pkg/api/api.go:	// ModificationDate is the date of the last modification of the image
pkg/api/api.go:	ModificationDate string `json:"modification_date,omitempty"`
pkg/api/api.go:	// RootVolume is the root volume bound to the image
pkg/api/api.go:	RootVolume ScalewayVolume `json:"root_volume,omitempty"`
pkg/api/api.go:	// Public is true for public images and false for user images
pkg/api/api.go:	Public bool `json:"public,omitempty"`
pkg/api/api.go:	// Bootscript is the bootscript bound to the image
pkg/api/api.go:	DefaultBootscript *ScalewayBootscript `json:"default_bootscript,omitempty"`
pkg/api/api.go:	// Organization is the owner of the image
pkg/api/api.go:	Organization string `json:"organization,omitempty"`
pkg/api/api.go:	// Arch is the architecture target of the image
pkg/api/api.go:	Arch string `json:"arch,omitempty"`
pkg/api/api.go:	// FIXME: extra_volumes
pkg/api/api.go:}
pkg/api/api.go:// ScalewayImageIdentifier represents a Scaleway Image Identifier
pkg/api/api.go:type ScalewayImageIdentifier struct {
pkg/api/api.go:	Identifier string
pkg/api/api.go:	Arch       string
pkg/api/api.go:	Region     string
pkg/api/api.go:	Owner      string
pkg/api/api.go:}
pkg/api/api.go:// ScalewayOneImage represents the response of a GET /images/UUID API call
pkg/api/api.go:type ScalewayOneImage struct {
pkg/api/api.go:	Image ScalewayImage `json:"image,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayImages represents a group of Scaleway images
pkg/api/api.go:type ScalewayImages struct {
pkg/api/api.go:	// Images holds scaleway images of the response
pkg/api/api.go:	Images []ScalewayImage `json:"images,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewaySnapshot represents a Scaleway Snapshot
pkg/api/api.go:type ScalewaySnapshot struct {
pkg/api/api.go:	// Identifier is a unique identifier for the snapshot
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// Name is a user-defined name for the snapshot
pkg/api/api.go:	Name string `json:"name,omitempty"`
pkg/api/api.go:	// CreationDate is the creation date of the snapshot
pkg/api/api.go:	CreationDate string `json:"creation_date,omitempty"`
pkg/api/api.go:	// ModificationDate is the date of the last modification of the snapshot
pkg/api/api.go:	ModificationDate string `json:"modification_date,omitempty"`
pkg/api/api.go:	// Size is the allocated size of the volume
pkg/api/api.go:	Size uint64 `json:"size,omitempty"`
pkg/api/api.go:	// Organization is the owner of the snapshot
pkg/api/api.go:	Organization string `json:"organization"`
pkg/api/api.go:	// State is the current state of the snapshot
pkg/api/api.go:	State string `json:"state"`
pkg/api/api.go:	// VolumeType is the kind of volume behind the snapshot
pkg/api/api.go:	VolumeType string `json:"volume_type"`
pkg/api/api.go:	// BaseVolume is the volume from which the snapshot inherits
pkg/api/api.go:	BaseVolume ScalewayVolume `json:"base_volume,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayOneSnapshot represents the response of a GET /snapshots/UUID API call
pkg/api/api.go:type ScalewayOneSnapshot struct {
pkg/api/api.go:	Snapshot ScalewaySnapshot `json:"snapshot,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewaySnapshots represents a group of Scaleway snapshots
pkg/api/api.go:type ScalewaySnapshots struct {
pkg/api/api.go:	// Snapshots holds scaleway snapshots of the response
pkg/api/api.go:	Snapshots []ScalewaySnapshot `json:"snapshots,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayBootCmdArgs represents the boot arguments of a bootscript
pkg/api/api.go:type ScalewayBootCmdArgs struct {
pkg/api/api.go:	// Identifier is the unique identifier of boot args
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// Value is the content of the cmd args
pkg/api/api.go:	Value string `json:"value,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayInitrd represents the initrd used by a bootscript
pkg/api/api.go:type ScalewayInitrd struct {
pkg/api/api.go:	// Identifier is the unique identifier of the initrd
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// Path is the path to the initrd used
pkg/api/api.go:	Path string `json:"path,omitempty"`
pkg/api/api.go:	// Title is the title of the initrd used
pkg/api/api.go:	Title string `json:"title,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayKernel represents a kernel used on C1 servers
pkg/api/api.go:type ScalewayKernel struct {
pkg/api/api.go:	// Identifier is the unique identifier of the kernel
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// DTB is the kernel DTB used by this kernel
pkg/api/api.go:	DTB string `json:"dtb"`
pkg/api/api.go:	// Path is the path to the kernel image
pkg/api/api.go:	Path string `json:"path,omitempty"`
pkg/api/api.go:	// Title is the title of the kernel
pkg/api/api.go:	Title string `json:"title,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayBootscript represents a Scaleway Bootscript
pkg/api/api.go:type ScalewayBootscript struct {
pkg/api/api.go:	// Arch is the architecture target of the bootscript
pkg/api/api.go:	Arch string `json:"architecture,omitempty"`
pkg/api/api.go:	// Organization is the owner of the bootscript
pkg/api/api.go:	Organization string `json:"organization,omitempty"`
pkg/api/api.go:	// Identifier is a unique identifier for the bootscript
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// Name is a user-defined name for the bootscript
pkg/api/api.go:	Title string `json:"title,omitempty"`
pkg/api/api.go:	// BootCmdArgs represents the arguments used to boot
pkg/api/api.go:	BootCmdArgs ScalewayBootCmdArgs `json:"bootcmdargs,omitempty"`
pkg/api/api.go:	// Initrd is the initrd used by this bootscript
pkg/api/api.go:	Initrd ScalewayInitrd `json:"initrd,omitempty"`
pkg/api/api.go:	// Kernel is the kernel associated to this server
pkg/api/api.go:	Kernel ScalewayKernel `json:"kernel,omitempty"`
pkg/api/api.go:	// Public is true for public bootscripts and false for user bootscripts
pkg/api/api.go:	Public bool `json:"public,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayOneBootscript represents the response of a GET /bootscripts/UUID API call
pkg/api/api.go:type ScalewayOneBootscript struct {
pkg/api/api.go:	Bootscript ScalewayBootscript `json:"bootscript,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayBootscripts represents a group of Scaleway bootscripts
pkg/api/api.go:type ScalewayBootscripts struct {
pkg/api/api.go:	// Bootscripts holds Scaleway bootscripts of the response
pkg/api/api.go:	Bootscripts []ScalewayBootscript `json:"bootscripts,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayTask represents a Scaleway Task
pkg/api/api.go:type ScalewayTask struct {
pkg/api/api.go:	// Identifier is a unique identifier for the task
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// StartDate is the start date of the task
pkg/api/api.go:	StartDate string `json:"started_at,omitempty"`
pkg/api/api.go:	// TerminationDate is the termination date of the task
pkg/api/api.go:	TerminationDate string `json:"terminated_at,omitempty"`
pkg/api/api.go:	HrefFrom string `json:"href_from,omitempty"`
pkg/api/api.go:	Description string `json:"description,omitempty"`
pkg/api/api.go:	Status string `json:"status,omitempty"`
pkg/api/api.go:	Progress int `json:"progress,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayOneTask represents the response of a GET /tasks/UUID API call
pkg/api/api.go:type ScalewayOneTask struct {
pkg/api/api.go:	Task ScalewayTask `json:"task,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayTasks represents a group of Scaleway tasks
pkg/api/api.go:type ScalewayTasks struct {
pkg/api/api.go:	// Tasks holds scaleway tasks of the response
pkg/api/api.go:	Tasks []ScalewayTask `json:"tasks,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewaySecurityGroupRule definition
pkg/api/api.go:type ScalewaySecurityGroupRule struct {
pkg/api/api.go:	Direction    string `json:"direction"`
pkg/api/api.go:	Protocol     string `json:"protocol"`
pkg/api/api.go:	IPRange      string `json:"ip_range"`
pkg/api/api.go:	DestPortFrom int    `json:"dest_port_from,omitempty"`
pkg/api/api.go:	Action       string `json:"action"`
pkg/api/api.go:	Postion      int    `json:"position"`
pkg/api/api.go:	DestPortTo   string `json:"dest_port_to"`
pkg/api/api.go:	Editable     bool   `json:"editable"`
pkg/api/api.go:	ID           string `json:"id"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayGetSecurityGroupRules represents the response of a GET /security_group/{groupID}/rules
pkg/api/api.go:type ScalewayGetSecurityGroupRules struct {
pkg/api/api.go:	Rules []ScalewaySecurityGroupRule `json:"rules"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayGetSecurityGroupRule represents the response of a GET /security_group/{groupID}/rules/{ruleID}
pkg/api/api.go:type ScalewayGetSecurityGroupRule struct {
pkg/api/api.go:	Rules ScalewaySecurityGroupRule `json:"rule"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayNewSecurityGroupRule definition POST/PUT request /security_group/{groupID}
pkg/api/api.go:type ScalewayNewSecurityGroupRule struct {
pkg/api/api.go:	Action       string `json:"action"`
pkg/api/api.go:	Direction    string `json:"direction"`
pkg/api/api.go:	IPRange      string `json:"ip_range"`
pkg/api/api.go:	Protocol     string `json:"protocol"`
pkg/api/api.go:	DestPortFrom int    `json:"dest_port_from,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewaySecurityGroups definition
pkg/api/api.go:type ScalewaySecurityGroups struct {
pkg/api/api.go:	Description           string                  `json:"description"`
pkg/api/api.go:	EnableDefaultSecurity bool                    `json:"enable_default_security"`
pkg/api/api.go:	ID                    string                  `json:"id"`
pkg/api/api.go:	Organization          string                  `json:"organization"`
pkg/api/api.go:	Name                  string                  `json:"name"`
pkg/api/api.go:	OrganizationDefault   bool                    `json:"organization_default"`
pkg/api/api.go:	Servers               []ScalewaySecurityGroup `json:"servers"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayGetSecurityGroups represents the response of a GET /security_groups/
pkg/api/api.go:type ScalewayGetSecurityGroups struct {
pkg/api/api.go:	SecurityGroups []ScalewaySecurityGroups `json:"security_groups"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayGetSecurityGroup represents the response of a GET /security_groups/{groupID}
pkg/api/api.go:type ScalewayGetSecurityGroup struct {
pkg/api/api.go:	SecurityGroups ScalewaySecurityGroups `json:"security_group"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayIPDefinition represents the IP's fields
pkg/api/api.go:type ScalewayIPDefinition struct {
pkg/api/api.go:	Organization string `json:"organization"`
pkg/api/api.go:	Reverse      string `json:"reverse"`
pkg/api/api.go:	ID           string `json:"id"`
pkg/api/api.go:	Server       struct {
pkg/api/api.go:		Identifier string `json:"id,omitempty"`
pkg/api/api.go:		Name       string `json:"name,omitempty"`
pkg/api/api.go:	} `json:"server,omitempty"`
pkg/api/api.go:	Address string `json:"address"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayGetIPS represents the response of a GET /ips/
pkg/api/api.go:type ScalewayGetIPS struct {
pkg/api/api.go:	IPS []ScalewayIPDefinition `json:"ips"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayGetIP represents the response of a GET /ips/{id_ip}
pkg/api/api.go:type ScalewayGetIP struct {
pkg/api/api.go:	IP ScalewayIPDefinition `json:"ip"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewaySecurityGroup represents a Scaleway security group
pkg/api/api.go:type ScalewaySecurityGroup struct {
pkg/api/api.go:	// Identifier is a unique identifier for the security group
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// Name is the user-defined name of the security group
pkg/api/api.go:	Name string `json:"name,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayNewSecurityGroup definition POST/PUT request /security_groups
pkg/api/api.go:type ScalewayNewSecurityGroup struct {
pkg/api/api.go:	Organization string `json:"organization"`
pkg/api/api.go:	Name         string `json:"name"`
pkg/api/api.go:	Description  string `json:"description"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayServer represents a Scaleway C1 server
pkg/api/api.go:type ScalewayServer struct {
pkg/api/api.go:	// Arch is the architecture target of the server
pkg/api/api.go:	Arch string `json:"arch,omitempty"`
pkg/api/api.go:	// Identifier is a unique identifier for the server
pkg/api/api.go:	Identifier string `json:"id,omitempty"`
pkg/api/api.go:	// Name is the user-defined name of the server
pkg/api/api.go:	Name string `json:"name,omitempty"`
pkg/api/api.go:	// CreationDate is the creation date of the server
pkg/api/api.go:	CreationDate string `json:"creation_date,omitempty"`
pkg/api/api.go:	// ModificationDate is the date of the last modification of the server
pkg/api/api.go:	ModificationDate string `json:"modification_date,omitempty"`
pkg/api/api.go:	// Image is the image used by the server
pkg/api/api.go:	Image ScalewayImage `json:"image,omitempty"`
pkg/api/api.go:	// DynamicIPRequired is a flag that defines a server with a dynamic ip address attached
pkg/api/api.go:	DynamicIPRequired *bool `json:"dynamic_ip_required,omitempty"`
pkg/api/api.go:	// PublicIP is the public IP address bound to the server
pkg/api/api.go:	PublicAddress ScalewayIPAddress `json:"public_ip,omitempty"`
pkg/api/api.go:	// State is the current status of the server
pkg/api/api.go:	State string `json:"state,omitempty"`
pkg/api/api.go:	// StateDetail is the detailed status of the server
pkg/api/api.go:	StateDetail string `json:"state_detail,omitempty"`
pkg/api/api.go:	// PrivateIP represents the private IPV4 attached to the server (changes on each boot)
pkg/api/api.go:	PrivateIP string `json:"private_ip,omitempty"`
pkg/api/api.go:	// Bootscript is the unique identifier of the selected bootscript
pkg/api/api.go:	Bootscript *ScalewayBootscript `json:"bootscript,omitempty"`
pkg/api/api.go:	// Hostname represents the ServerName in a format compatible with unix's hostname
pkg/api/api.go:	Hostname string `json:"hostname,omitempty"`
pkg/api/api.go:	// Tags represents user-defined tags
pkg/api/api.go:	Tags []string `json:"tags,omitempty"`
pkg/api/api.go:	// Volumes are the attached volumes
pkg/api/api.go:	Volumes map[string]ScalewayVolume `json:"volumes,omitempty"`
pkg/api/api.go:	// SecurityGroup is the selected security group object
pkg/api/api.go:	SecurityGroup ScalewaySecurityGroup `json:"security_group,omitempty"`
pkg/api/api.go:	// Organization is the owner of the server
pkg/api/api.go:	Organization string `json:"organization,omitempty"`
pkg/api/api.go:	// CommercialType is the commercial type of the server (i.e: C1)
pkg/api/api.go:	CommercialType string `json:"commercial_type,omitempty"`
pkg/api/api.go:	// Location of the server
pkg/api/api.go:	Location struct {
pkg/api/api.go:		Platform string `json:"platform_id,omitempty"`
pkg/api/api.go:		Chassis  string `json:"chassis_id,omitempty"`
pkg/api/api.go:		Blade    string `json:"blade_id,omitempty"`
pkg/api/api.go:		Node     string `json:"node_id,omitempty"`
pkg/api/api.go:	} `json:"location,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayServerPatchDefinition represents a Scaleway C1 server with nullable fields (for PATCH)
pkg/api/api.go:type ScalewayServerPatchDefinition struct {
pkg/api/api.go:	Arch              *string                    `json:"arch,omitempty"`
pkg/api/api.go:	Name              *string                    `json:"name,omitempty"`
pkg/api/api.go:	CreationDate      *string                    `json:"creation_date,omitempty"`
pkg/api/api.go:	ModificationDate  *string                    `json:"modification_date,omitempty"`
pkg/api/api.go:	Image             *ScalewayImage             `json:"image,omitempty"`
pkg/api/api.go:	DynamicIPRequired *bool                      `json:"dynamic_ip_required,omitempty"`
pkg/api/api.go:	PublicAddress     *ScalewayIPAddress         `json:"public_ip,omitempty"`
pkg/api/api.go:	State             *string                    `json:"state,omitempty"`
pkg/api/api.go:	StateDetail       *string                    `json:"state_detail,omitempty"`
pkg/api/api.go:	PrivateIP         *string                    `json:"private_ip,omitempty"`
pkg/api/api.go:	Bootscript        *ScalewayBootscript        `json:"bootscript,omitempty"`
pkg/api/api.go:	Hostname          *string                    `json:"hostname,omitempty"`
pkg/api/api.go:	Volumes           *map[string]ScalewayVolume `json:"volumes,omitempty"`
pkg/api/api.go:	SecurityGroup     *ScalewaySecurityGroup     `json:"security_group,omitempty"`
pkg/api/api.go:	Organization      *string                    `json:"organization,omitempty"`
pkg/api/api.go:	Tags              *[]string                  `json:"tags,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayServerDefinition represents a Scaleway C1 server with image definition
pkg/api/api.go:type ScalewayServerDefinition struct {
pkg/api/api.go:	// Name is the user-defined name of the server
pkg/api/api.go:	Name string `json:"name"`
pkg/api/api.go:	// Image is the image used by the server
pkg/api/api.go:	Image *string `json:"image,omitempty"`
pkg/api/api.go:	// Volumes are the attached volumes
pkg/api/api.go:	Volumes map[string]string `json:"volumes,omitempty"`
pkg/api/api.go:	// DynamicIPRequired is a flag that defines a server with a dynamic ip address attached
pkg/api/api.go:	DynamicIPRequired *bool `json:"dynamic_ip_required,omitempty"`
pkg/api/api.go:	// Bootscript is the bootscript used by the server
pkg/api/api.go:	Bootscript *string `json:"bootscript"`
pkg/api/api.go:	// Tags are the metadata tags attached to the server
pkg/api/api.go:	Tags []string `json:"tags,omitempty"`
pkg/api/api.go:	// Organization is the owner of the server
pkg/api/api.go:	Organization string `json:"organization"`
pkg/api/api.go:	// CommercialType is the commercial type of the server (i.e: C1)
pkg/api/api.go:	CommercialType string `json:"commercial_type"`
pkg/api/api.go:	PublicIP string `json:"public_ip,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayOneServer represents the response of a GET /servers/UUID API call
pkg/api/api.go:type ScalewayOneServer struct {
pkg/api/api.go:	Server ScalewayServer `json:"server,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayServers represents a group of Scaleway C1 servers
pkg/api/api.go:type ScalewayServers struct {
pkg/api/api.go:	// Servers holds scaleway servers of the response
pkg/api/api.go:	Servers []ScalewayServer `json:"servers,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayServerAction represents an action to perform on a Scaleway C1 server
pkg/api/api.go:type ScalewayServerAction struct {
pkg/api/api.go:	// Action is the name of the action to trigger
pkg/api/api.go:	Action string `json:"action,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewaySnapshotDefinition represents a Scaleway snapshot definition
pkg/api/api.go:type ScalewaySnapshotDefinition struct {
pkg/api/api.go:	VolumeIDentifier string `json:"volume_id"`
pkg/api/api.go:	Name             string `json:"name,omitempty"`
pkg/api/api.go:	Organization     string `json:"organization"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayImageDefinition represents a Scaleway image definition
pkg/api/api.go:type ScalewayImageDefinition struct {
pkg/api/api.go:	SnapshotIDentifier string  `json:"root_volume"`
pkg/api/api.go:	Name               string  `json:"name,omitempty"`
pkg/api/api.go:	Organization       string  `json:"organization"`
pkg/api/api.go:	Arch               string  `json:"arch"`
pkg/api/api.go:	DefaultBootscript  *string `json:"default_bootscript,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayRoleDefinition represents a Scaleway Token UserId Role
pkg/api/api.go:type ScalewayRoleDefinition struct {
pkg/api/api.go:	Organization ScalewayOrganizationDefinition `json:"organization,omitempty"`
pkg/api/api.go:	Role         string                         `json:"role,omitempty"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayTokenDefinition represents a Scaleway Token
pkg/api/api.go:type ScalewayTokenDefinition struct {
pkg/api/api.go:	UserID             string                 `json:"user_id"`
pkg/api/api.go:	Description        string                 `json:"description,omitempty"`
pkg/api/api.go:	Roles              ScalewayRoleDefinition `json:"roles"`
pkg/api/api.go:	Expires            string                 `json:"expires"`
pkg/api/api.go:	InheritsUsersPerms bool                   `json:"inherits_user_perms"`
pkg/api/api.go:	ID                 string                 `json:"id"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayTokensDefinition represents a Scaleway Tokens
pkg/api/api.go:type ScalewayTokensDefinition struct {
pkg/api/api.go:	Token ScalewayTokenDefinition `json:"token"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayContainerData represents a Scaleway container data (S3)
pkg/api/api.go:type ScalewayContainerData struct {
pkg/api/api.go:	LastModified string `json:"last_modified"`
pkg/api/api.go:	Name         string `json:"name"`
pkg/api/api.go:	Size         string `json:"size"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayGetContainerDatas represents a list of Scaleway containers data (S3)
pkg/api/api.go:type ScalewayGetContainerDatas struct {
pkg/api/api.go:	Container []ScalewayContainerData `json:"container"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayContainer represents a Scaleway container (S3)
pkg/api/api.go:type ScalewayContainer struct {
pkg/api/api.go:	ScalewayOrganizationDefinition `json:"organization"`
pkg/api/api.go:	Name                           string `json:"name"`
pkg/api/api.go:	Size                           string `json:"size"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayGetContainers represents a list of Scaleway containers (S3)
pkg/api/api.go:type ScalewayGetContainers struct {
pkg/api/api.go:	Containers []ScalewayContainer `json:"containers"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayConnectResponse represents the answer from POST /tokens
pkg/api/api.go:type ScalewayConnectResponse struct {
pkg/api/api.go:	Token ScalewayTokenDefinition `json:"token"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayConnect represents the data to connect
pkg/api/api.go:type ScalewayConnect struct {
pkg/api/api.go:	Email       string `json:"email"`
pkg/api/api.go:	Password    string `json:"password"`
pkg/api/api.go:	Description string `json:"description"`
pkg/api/api.go:	Expires     bool   `json:"expires"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayOrganizationDefinition represents a Scaleway Organization
pkg/api/api.go:type ScalewayOrganizationDefinition struct {
pkg/api/api.go:	ID    string                   `json:"id"`
pkg/api/api.go:	Name  string                   `json:"name"`
pkg/api/api.go:	Users []ScalewayUserDefinition `json:"users"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayOrganizationsDefinition represents a Scaleway Organizations
pkg/api/api.go:type ScalewayOrganizationsDefinition struct {
pkg/api/api.go:	Organizations []ScalewayOrganizationDefinition `json:"organizations"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayUserDefinition represents a Scaleway User
pkg/api/api.go:type ScalewayUserDefinition struct {
pkg/api/api.go:	Email         string                           `json:"email"`
pkg/api/api.go:	Firstname     string                           `json:"firstname"`
pkg/api/api.go:	Fullname      string                           `json:"fullname"`
pkg/api/api.go:	ID            string                           `json:"id"`
pkg/api/api.go:	Lastname      string                           `json:"lastname"`
pkg/api/api.go:	Organizations []ScalewayOrganizationDefinition `json:"organizations"`
pkg/api/api.go:	Roles         []ScalewayRoleDefinition         `json:"roles"`
pkg/api/api.go:	SSHPublicKeys []ScalewayKeyDefinition          `json:"ssh_public_keys"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayUsersDefinition represents the response of a GET /user
pkg/api/api.go:type ScalewayUsersDefinition struct {
pkg/api/api.go:	User ScalewayUserDefinition `json:"user"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayKeyDefinition represents a key
pkg/api/api.go:type ScalewayKeyDefinition struct {
pkg/api/api.go:	Key string `json:"key"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayUserPatchSSHKeyDefinition represents a User Patch
pkg/api/api.go:type ScalewayUserPatchSSHKeyDefinition struct {
pkg/api/api.go:	SSHPublicKeys []ScalewayKeyDefinition `json:"ssh_public_keys"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayDashboardResp represents a dashboard received from the API
pkg/api/api.go:type ScalewayDashboardResp struct {
pkg/api/api.go:	Dashboard ScalewayDashboard
pkg/api/api.go:}
pkg/api/api.go:// ScalewayDashboard represents a dashboard
pkg/api/api.go:type ScalewayDashboard struct {
pkg/api/api.go:	VolumesCount        int `json:"volumes_count"`
pkg/api/api.go:	RunningServersCount int `json:"running_servers_count"`
pkg/api/api.go:	ImagesCount         int `json:"images_count"`
pkg/api/api.go:	SnapshotsCount      int `json:"snapshots_count"`
pkg/api/api.go:	ServersCount        int `json:"servers_count"`
pkg/api/api.go:	IPsCount            int `json:"ips_count"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayPermissions represents the response of GET /permissions
pkg/api/api.go:type ScalewayPermissions map[string]ScalewayPermCategory
pkg/api/api.go:// ScalewayPermCategory represents ScalewayPermissions's fields
pkg/api/api.go:type ScalewayPermCategory map[string][]string
pkg/api/api.go:// ScalewayPermissionDefinition represents the permissions
pkg/api/api.go:type ScalewayPermissionDefinition struct {
pkg/api/api.go:	Permissions ScalewayPermissions `json:"permissions"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayUserdatas represents the response of a GET /user_data
pkg/api/api.go:type ScalewayUserdatas struct {
pkg/api/api.go:	UserData []string `json:"user_data"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayQuota represents a map of quota (name, value)
pkg/api/api.go:type ScalewayQuota map[string]int
pkg/api/api.go:// ScalewayGetQuotas represents the response of GET /organizations/{orga_id}/quotas
pkg/api/api.go:type ScalewayGetQuotas struct {
pkg/api/api.go:	Quotas ScalewayQuota `json:"quotas"`
pkg/api/api.go:}
pkg/api/api.go:// ScalewayUserdata represents []byte
pkg/api/api.go:type ScalewayUserdata []byte
pkg/api/api.go:// FuncMap used for json inspection
pkg/api/api.go:var FuncMap = template.FuncMap{
pkg/api/api.go:	"json": func(v interface{}) string {
pkg/api/api.go:		a, _ := json.Marshal(v)
pkg/api/api.go:		return string(a)
pkg/api/api.go:	},
pkg/api/api.go:}
pkg/api/api.go:// NewScalewayAPI creates a ready-to-use ScalewayAPI client
pkg/api/api.go:func NewScalewayAPI(apiEndPoint, accountEndPoint, organization, token string) (*ScalewayAPI, error) {
pkg/api/api.go:	cache, err := NewScalewayCache()
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	s := &ScalewayAPI{
pkg/api/api.go:		// exposed
pkg/api/api.go:		ComputeAPI:   apiEndPoint,
pkg/api/api.go:		AccountAPI:   accountEndPoint,
pkg/api/api.go:		APIUrl:       apiEndPoint,
pkg/api/api.go:		Organization: organization,
pkg/api/api.go:		Token:        token,
pkg/api/api.go:		Cache:        cache,
pkg/api/api.go:		verbose:      os.Getenv("SCW_VERBOSE_API") != "",
pkg/api/api.go:		password:     "",
pkg/api/api.go:		// internal
pkg/api/api.go:		anonuuid: *anonuuid.New(),
pkg/api/api.go:		client:   &http.Client{},
pkg/api/api.go:	}
pkg/api/api.go:	if os.Getenv("SCW_TLSVERIFY") == "0" {
pkg/api/api.go:		s.client.Transport = &http.Transport{
pkg/api/api.go:			TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
pkg/api/api.go:		}
pkg/api/api.go:	}
pkg/api/api.go:	return s, nil
pkg/api/api.go:}
pkg/api/api.go:// Sync flushes out the cache to the disk
pkg/api/api.go:func (s *ScalewayAPI) Sync() {
pkg/api/api.go:	s.Cache.Save()
pkg/api/api.go:}
pkg/api/api.go:// GetResponse returns an http.Response object for the requested resource
pkg/api/api.go:func (s *ScalewayAPI) GetResponse(resource string) (*http.Response, error) {
pkg/api/api.go:	uri := fmt.Sprintf("%s/%s", strings.TrimRight(s.APIUrl, "/"), resource)
pkg/api/api.go:	req, err := http.NewRequest("GET", uri, nil)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	req.Header.Set("X-Auth-Token", s.Token)
pkg/api/api.go:	req.Header.Set("Content-Type", "application/json")
pkg/api/api.go:	curl, err := http2curl.GetCurlCommand(req)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	if os.Getenv("SCW_SENSITIVE") != "1" {
pkg/api/api.go:		log.Debug(s.HideAPICredentials(curl.String()))
pkg/api/api.go:	} else {
pkg/api/api.go:		log.Debug(curl.String())
pkg/api/api.go:	}
pkg/api/api.go:	return s.client.Do(req)
pkg/api/api.go:}
pkg/api/api.go:// PostResponse returns an http.Response object for the updated resource
pkg/api/api.go:func (s *ScalewayAPI) PostResponse(resource string, data interface{}) (*http.Response, error) {
pkg/api/api.go:	uri := fmt.Sprintf("%s/%s", strings.TrimRight(s.APIUrl, "/"), resource)
pkg/api/api.go:	payload := new(bytes.Buffer)
pkg/api/api.go:	encoder := json.NewEncoder(payload)
pkg/api/api.go:	if err := encoder.Encode(data); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	req, err := http.NewRequest("POST", uri, payload)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	req.Header.Set("X-Auth-Token", s.Token)
pkg/api/api.go:	req.Header.Set("Content-Type", "application/json")
pkg/api/api.go:	curl, err := http2curl.GetCurlCommand(req)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	if os.Getenv("SCW_SENSITIVE") != "1" {
pkg/api/api.go:		log.Debug(s.HideAPICredentials(curl.String()))
pkg/api/api.go:	} else {
pkg/api/api.go:		log.Debug(curl.String())
pkg/api/api.go:	}
pkg/api/api.go:	return s.client.Do(req)
pkg/api/api.go:}
pkg/api/api.go:// PatchResponse returns an http.Response object for the updated resource
pkg/api/api.go:func (s *ScalewayAPI) PatchResponse(resource string, data interface{}) (*http.Response, error) {
pkg/api/api.go:	uri := fmt.Sprintf("%s/%s", strings.TrimRight(s.APIUrl, "/"), resource)
pkg/api/api.go:	payload := new(bytes.Buffer)
pkg/api/api.go:	encoder := json.NewEncoder(payload)
pkg/api/api.go:	if err := encoder.Encode(data); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	req, err := http.NewRequest("PATCH", uri, payload)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	req.Header.Set("X-Auth-Token", s.Token)
pkg/api/api.go:	req.Header.Set("Content-Type", "application/json")
pkg/api/api.go:	curl, err := http2curl.GetCurlCommand(req)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	if os.Getenv("SCW_SENSITIVE") != "1" {
pkg/api/api.go:		log.Debug(s.HideAPICredentials(curl.String()))
pkg/api/api.go:	} else {
pkg/api/api.go:		log.Debug(curl.String())
pkg/api/api.go:	}
pkg/api/api.go:	return s.client.Do(req)
pkg/api/api.go:}
pkg/api/api.go:// PutResponse returns an http.Response object for the updated resource
pkg/api/api.go:func (s *ScalewayAPI) PutResponse(resource string, data interface{}) (*http.Response, error) {
pkg/api/api.go:	uri := fmt.Sprintf("%s/%s", strings.TrimRight(s.APIUrl, "/"), resource)
pkg/api/api.go:	payload := new(bytes.Buffer)
pkg/api/api.go:	encoder := json.NewEncoder(payload)
pkg/api/api.go:	if err := encoder.Encode(data); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	req, err := http.NewRequest("PUT", uri, payload)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	req.Header.Set("X-Auth-Token", s.Token)
pkg/api/api.go:	req.Header.Set("Content-Type", "application/json")
pkg/api/api.go:	curl, err := http2curl.GetCurlCommand(req)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	if os.Getenv("SCW_SENSITIVE") != "1" {
pkg/api/api.go:		log.Debug(s.HideAPICredentials(curl.String()))
pkg/api/api.go:	} else {
pkg/api/api.go:		log.Debug(curl.String())
pkg/api/api.go:	}
pkg/api/api.go:	return s.client.Do(req)
pkg/api/api.go:}
pkg/api/api.go:// DeleteResponse returns an http.Response object for the deleted resource
pkg/api/api.go:func (s *ScalewayAPI) DeleteResponse(resource string) (*http.Response, error) {
pkg/api/api.go:	uri := fmt.Sprintf("%s/%s", strings.TrimRight(s.APIUrl, "/"), resource)
pkg/api/api.go:	req, err := http.NewRequest("DELETE", uri, nil)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	req.Header.Set("X-Auth-Token", s.Token)
pkg/api/api.go:	req.Header.Set("Content-Type", "application/json")
pkg/api/api.go:	curl, err := http2curl.GetCurlCommand(req)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	if os.Getenv("SCW_SENSITIVE") != "1" {
pkg/api/api.go:		log.Debug(s.HideAPICredentials(curl.String()))
pkg/api/api.go:	} else {
pkg/api/api.go:		log.Debug(curl.String())
pkg/api/api.go:	}
pkg/api/api.go:	return s.client.Do(req)
pkg/api/api.go:}
pkg/api/api.go:// handleHTTPError checks the statusCode and displays the error
pkg/api/api.go:func (s *ScalewayAPI) handleHTTPError(goodStatusCode []int, resp *http.Response) ([]byte, error) {
pkg/api/api.go:	body, err := ioutil.ReadAll(resp.Body)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	if resp.StatusCode >= 500 {
pkg/api/api.go:		return nil, errors.New(string(body))
pkg/api/api.go:	}
pkg/api/api.go:	good := false
pkg/api/api.go:	for _, code := range goodStatusCode {
pkg/api/api.go:		if code == resp.StatusCode {
pkg/api/api.go:			good = true
pkg/api/api.go:		}
pkg/api/api.go:	}
pkg/api/api.go:	if !good {
pkg/api/api.go:		var scwError ScalewayAPIError
pkg/api/api.go:		err := json.Unmarshal(body, &scwError)
pkg/api/api.go:		if err != nil {
pkg/api/api.go:			return nil, err
pkg/api/api.go:		}
pkg/api/api.go:		scwError.StatusCode = resp.StatusCode
pkg/api/api.go:		scwError.Debug()
pkg/api/api.go:		return nil, scwError
pkg/api/api.go:	}
pkg/api/api.go:	if s.verbose {
pkg/api/api.go:		var js bytes.Buffer
pkg/api/api.go:		err = json.Indent(&js, body, "", "  ")
pkg/api/api.go:		if err != nil {
pkg/api/api.go:			log.Debug(string(body))
pkg/api/api.go:		} else {
pkg/api/api.go:			log.Debug(js.String())
pkg/api/api.go:		}
pkg/api/api.go:	}
pkg/api/api.go:	return body, nil
pkg/api/api.go:}
pkg/api/api.go:// GetServers gets the list of servers from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetServers(all bool, limit int) (*[]ScalewayServer, error) {
pkg/api/api.go:	query := url.Values{}
pkg/api/api.go:	if !all {
pkg/api/api.go:		query.Set("state", "running")
pkg/api/api.go:	}
pkg/api/api.go:	if limit > 0 {
pkg/api/api.go:		// FIXME: wait for the API to be ready
pkg/api/api.go:		// query.Set("per_page", strconv.Itoa(limit))
pkg/api/api.go:	}
pkg/api/api.go:	if all && limit == 0 {
pkg/api/api.go:		s.Cache.ClearServers()
pkg/api/api.go:	}
pkg/api/api.go:	resp, err := s.GetResponse("servers?" + query.Encode())
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var servers ScalewayServers
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	if err = json.Unmarshal(body, &servers); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	for _, server := range servers.Servers {
pkg/api/api.go:		// FIXME region, arch, owner, title
pkg/api/api.go:		s.Cache.InsertServer(server.Identifier, "fr-1", server.Arch, server.Organization, server.Name)
pkg/api/api.go:	}
pkg/api/api.go:	// FIXME: when API limit is ready, remove the following code
pkg/api/api.go:	if limit > 0 && limit < len(servers.Servers) {
pkg/api/api.go:		servers.Servers = servers.Servers[0:limit]
pkg/api/api.go:	}
pkg/api/api.go:	return &servers.Servers, nil
pkg/api/api.go:}
pkg/api/api.go:// GetServer gets a server from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetServer(serverID string) (*ScalewayServer, error) {
pkg/api/api.go:	resp, err := s.GetResponse("servers/" + serverID)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var oneServer ScalewayOneServer
pkg/api/api.go:	if err = json.Unmarshal(body, &oneServer); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	// FIXME region, arch, owner, title
pkg/api/api.go:	s.Cache.InsertServer(oneServer.Server.Identifier, "fr-1", oneServer.Server.Arch, oneServer.Server.Organization, oneServer.Server.Name)
pkg/api/api.go:	return &oneServer.Server, nil
pkg/api/api.go:}
pkg/api/api.go:// PostServerAction posts an action on a server
pkg/api/api.go:func (s *ScalewayAPI) PostServerAction(serverID, action string) error {
pkg/api/api.go:	data := ScalewayServerAction{
pkg/api/api.go:		Action: action,
pkg/api/api.go:	}
pkg/api/api.go:	resp, err := s.PostResponse(fmt.Sprintf("servers/%s/action", serverID), data)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	_, err = s.handleHTTPError([]int{202}, resp)
pkg/api/api.go:	return err
pkg/api/api.go:}
pkg/api/api.go:// DeleteServer deletes a server
pkg/api/api.go:func (s *ScalewayAPI) DeleteServer(serverID string) error {
pkg/api/api.go:	defer s.Cache.RemoveServer(serverID)
pkg/api/api.go:	resp, err := s.DeleteResponse(fmt.Sprintf("servers/%s", serverID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	if _, err = s.handleHTTPError([]int{204}, resp); err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	return nil
pkg/api/api.go:}
pkg/api/api.go:// PostServer creates a new server
pkg/api/api.go:func (s *ScalewayAPI) PostServer(definition ScalewayServerDefinition) (string, error) {
pkg/api/api.go:	definition.Organization = s.Organization
pkg/api/api.go:	resp, err := s.PostResponse("servers", definition)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{201}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	var server ScalewayOneServer
pkg/api/api.go:	if err = json.Unmarshal(body, &server); err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	// FIXME region, arch, owner, title
pkg/api/api.go:	s.Cache.InsertServer(server.Server.Identifier, "fr-1", server.Server.Arch, server.Server.Organization, server.Server.Name)
pkg/api/api.go:	return server.Server.Identifier, nil
pkg/api/api.go:}
pkg/api/api.go:// PatchUserSSHKey updates a user
pkg/api/api.go:func (s *ScalewayAPI) PatchUserSSHKey(UserID string, definition ScalewayUserPatchSSHKeyDefinition) error {
pkg/api/api.go:	s.EnableAccountAPI()
pkg/api/api.go:	defer s.DisableAccountAPI()
pkg/api/api.go:	resp, err := s.PatchResponse(fmt.Sprintf("users/%s", UserID), definition)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	defer resp.Body.Close()
pkg/api/api.go:	if _, err := s.handleHTTPError([]int{200}, resp); err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	return nil
pkg/api/api.go:}
pkg/api/api.go:// PatchServer updates a server
pkg/api/api.go:func (s *ScalewayAPI) PatchServer(serverID string, definition ScalewayServerPatchDefinition) error {
pkg/api/api.go:	resp, err := s.PatchResponse(fmt.Sprintf("servers/%s", serverID), definition)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	if _, err := s.handleHTTPError([]int{200}, resp); err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	return nil
pkg/api/api.go:}
pkg/api/api.go:// PostSnapshot creates a new snapshot
pkg/api/api.go:func (s *ScalewayAPI) PostSnapshot(volumeID string, name string) (string, error) {
pkg/api/api.go:	definition := ScalewaySnapshotDefinition{
pkg/api/api.go:		VolumeIDentifier: volumeID,
pkg/api/api.go:		Name:             name,
pkg/api/api.go:		Organization:     s.Organization,
pkg/api/api.go:	}
pkg/api/api.go:	resp, err := s.PostResponse("snapshots", definition)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{201}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	var snapshot ScalewayOneSnapshot
pkg/api/api.go:	if err = json.Unmarshal(body, &snapshot); err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	// FIXME region, arch, owner, title
pkg/api/api.go:	s.Cache.InsertSnapshot(snapshot.Snapshot.Identifier, "fr-1", "", snapshot.Snapshot.Organization, snapshot.Snapshot.Name)
pkg/api/api.go:	return snapshot.Snapshot.Identifier, nil
pkg/api/api.go:}
pkg/api/api.go:// PostImage creates a new image
pkg/api/api.go:func (s *ScalewayAPI) PostImage(volumeID string, name string, bootscript string, arch string) (string, error) {
pkg/api/api.go:	definition := ScalewayImageDefinition{
pkg/api/api.go:		SnapshotIDentifier: volumeID,
pkg/api/api.go:		Name:               name,
pkg/api/api.go:		Organization:       s.Organization,
pkg/api/api.go:		Arch:               arch,
pkg/api/api.go:	}
pkg/api/api.go:	if bootscript != "" {
pkg/api/api.go:		definition.DefaultBootscript = &bootscript
pkg/api/api.go:	}
pkg/api/api.go:	resp, err := s.PostResponse("images", definition)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{201}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	var image ScalewayOneImage
pkg/api/api.go:	if err = json.Unmarshal(body, &image); err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	// FIXME region, arch, owner, title
pkg/api/api.go:	s.Cache.InsertImage(image.Image.Identifier, "fr-1", image.Image.Arch, image.Image.Organization, image.Image.Name)
pkg/api/api.go:	return image.Image.Identifier, nil
pkg/api/api.go:}
pkg/api/api.go:// PostVolume creates a new volume
pkg/api/api.go:func (s *ScalewayAPI) PostVolume(definition ScalewayVolumeDefinition) (string, error) {
pkg/api/api.go:	definition.Organization = s.Organization
pkg/api/api.go:	if definition.Type == "" {
pkg/api/api.go:		definition.Type = "l_ssd"
pkg/api/api.go:	}
pkg/api/api.go:	resp, err := s.PostResponse("volumes", definition)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{201}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	var volume ScalewayOneVolume
pkg/api/api.go:	if err = json.Unmarshal(body, &volume); err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	// FIXME: s.Cache.InsertVolume(volume.Volume.Identifier, volume.Volume.Name)
pkg/api/api.go:	return volume.Volume.Identifier, nil
pkg/api/api.go:}
pkg/api/api.go:// PutVolume updates a volume
pkg/api/api.go:func (s *ScalewayAPI) PutVolume(volumeID string, definition ScalewayVolumePutDefinition) error {
pkg/api/api.go:	resp, err := s.PutResponse(fmt.Sprintf("volumes/%s", volumeID), definition)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	_, err = s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	return err
pkg/api/api.go:}
pkg/api/api.go:// ResolveServer attempts to find a matching Identifier for the input string
pkg/api/api.go:func (s *ScalewayAPI) ResolveServer(needle string) (ScalewayResolverResults, error) {
pkg/api/api.go:	servers := s.Cache.LookUpServers(needle, true)
pkg/api/api.go:	if len(servers) == 0 {
pkg/api/api.go:		if _, err := s.GetServers(true, 0); err != nil {
pkg/api/api.go:			return nil, err
pkg/api/api.go:		}
pkg/api/api.go:		servers = s.Cache.LookUpServers(needle, true)
pkg/api/api.go:	}
pkg/api/api.go:	return servers, nil
pkg/api/api.go:}
pkg/api/api.go:// ResolveVolume attempts to find a matching Identifier for the input string
pkg/api/api.go:func (s *ScalewayAPI) ResolveVolume(needle string) (ScalewayResolverResults, error) {
pkg/api/api.go:	volumes := s.Cache.LookUpVolumes(needle, true)
pkg/api/api.go:	if len(volumes) == 0 {
pkg/api/api.go:		if _, err := s.GetVolumes(); err != nil {
pkg/api/api.go:			return nil, err
pkg/api/api.go:		}
pkg/api/api.go:		volumes = s.Cache.LookUpVolumes(needle, true)
pkg/api/api.go:	}
pkg/api/api.go:	return volumes, nil
pkg/api/api.go:}
pkg/api/api.go:// ResolveSnapshot attempts to find a matching Identifier for the input string
pkg/api/api.go:func (s *ScalewayAPI) ResolveSnapshot(needle string) (ScalewayResolverResults, error) {
pkg/api/api.go:	snapshots := s.Cache.LookUpSnapshots(needle, true)
pkg/api/api.go:	if len(snapshots) == 0 {
pkg/api/api.go:		if _, err := s.GetSnapshots(); err != nil {
pkg/api/api.go:			return nil, err
pkg/api/api.go:		}
pkg/api/api.go:		snapshots = s.Cache.LookUpSnapshots(needle, true)
pkg/api/api.go:	}
pkg/api/api.go:	return snapshots, nil
pkg/api/api.go:}
pkg/api/api.go:// ResolveImage attempts to find a matching Identifier for the input string
pkg/api/api.go:func (s *ScalewayAPI) ResolveImage(needle string) (ScalewayResolverResults, error) {
pkg/api/api.go:	images := s.Cache.LookUpImages(needle, true)
pkg/api/api.go:	if len(images) == 0 {
pkg/api/api.go:		if _, err := s.GetImages(); err != nil {
pkg/api/api.go:			return nil, err
pkg/api/api.go:		}
pkg/api/api.go:		images = s.Cache.LookUpImages(needle, true)
pkg/api/api.go:	}
pkg/api/api.go:	return images, nil
pkg/api/api.go:}
pkg/api/api.go:// ResolveBootscript attempts to find a matching Identifier for the input string
pkg/api/api.go:func (s *ScalewayAPI) ResolveBootscript(needle string) (ScalewayResolverResults, error) {
pkg/api/api.go:	bootscripts := s.Cache.LookUpBootscripts(needle, true)
pkg/api/api.go:	if len(bootscripts) == 0 {
pkg/api/api.go:		if _, err := s.GetBootscripts(); err != nil {
pkg/api/api.go:			return nil, err
pkg/api/api.go:		}
pkg/api/api.go:		bootscripts = s.Cache.LookUpBootscripts(needle, true)
pkg/api/api.go:	}
pkg/api/api.go:	return bootscripts, nil
pkg/api/api.go:}
pkg/api/api.go:// GetImages gets the list of images from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetImages() (*[]ScalewayImage, error) {
pkg/api/api.go:	query := url.Values{}
pkg/api/api.go:	s.Cache.ClearImages()
pkg/api/api.go:	resp, err := s.GetResponse("images?" + query.Encode())
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var images ScalewayImages
pkg/api/api.go:	if err = json.Unmarshal(body, &images); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	for _, image := range images.Images {
pkg/api/api.go:		// FIXME region, arch, owner, title
pkg/api/api.go:		s.Cache.InsertImage(image.Identifier, "fr-1", image.Arch, image.Organization, image.Name)
pkg/api/api.go:	}
pkg/api/api.go:	return &images.Images, nil
pkg/api/api.go:}
pkg/api/api.go:// GetImage gets an image from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetImage(imageID string) (*ScalewayImage, error) {
pkg/api/api.go:	resp, err := s.GetResponse("images/" + imageID)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var oneImage ScalewayOneImage
pkg/api/api.go:	if err = json.Unmarshal(body, &oneImage); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	// FIXME region, arch, owner, title
pkg/api/api.go:	s.Cache.InsertImage(oneImage.Image.Identifier, "fr-1", oneImage.Image.Arch, oneImage.Image.Organization, oneImage.Image.Name)
pkg/api/api.go:	return &oneImage.Image, nil
pkg/api/api.go:}
pkg/api/api.go:// DeleteImage deletes a image
pkg/api/api.go:func (s *ScalewayAPI) DeleteImage(imageID string) error {
pkg/api/api.go:	defer s.Cache.RemoveImage(imageID)
pkg/api/api.go:	resp, err := s.DeleteResponse(fmt.Sprintf("images/%s", imageID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	if _, err := s.handleHTTPError([]int{204}, resp); err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	return nil
pkg/api/api.go:}
pkg/api/api.go:// DeleteSnapshot deletes a snapshot
pkg/api/api.go:func (s *ScalewayAPI) DeleteSnapshot(snapshotID string) error {
pkg/api/api.go:	defer s.Cache.RemoveSnapshot(snapshotID)
pkg/api/api.go:	resp, err := s.DeleteResponse(fmt.Sprintf("snapshots/%s", snapshotID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	if _, err := s.handleHTTPError([]int{204}, resp); err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	return nil
pkg/api/api.go:}
pkg/api/api.go:// DeleteVolume deletes a volume
pkg/api/api.go:func (s *ScalewayAPI) DeleteVolume(volumeID string) error {
pkg/api/api.go:	defer s.Cache.RemoveVolume(volumeID)
pkg/api/api.go:	resp, err := s.DeleteResponse(fmt.Sprintf("volumes/%s", volumeID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	if _, err := s.handleHTTPError([]int{204}, resp); err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	return nil
pkg/api/api.go:}
pkg/api/api.go:// GetSnapshots gets the list of snapshots from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetSnapshots() (*[]ScalewaySnapshot, error) {
pkg/api/api.go:	query := url.Values{}
pkg/api/api.go:	s.Cache.ClearSnapshots()
pkg/api/api.go:	resp, err := s.GetResponse("snapshots?" + query.Encode())
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var snapshots ScalewaySnapshots
pkg/api/api.go:	if err = json.Unmarshal(body, &snapshots); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	for _, snapshot := range snapshots.Snapshots {
pkg/api/api.go:		// FIXME region, arch, owner, title
pkg/api/api.go:		s.Cache.InsertSnapshot(snapshot.Identifier, "fr-1", "", snapshot.Organization, snapshot.Name)
pkg/api/api.go:	}
pkg/api/api.go:	return &snapshots.Snapshots, nil
pkg/api/api.go:}
pkg/api/api.go:// GetSnapshot gets a snapshot from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetSnapshot(snapshotID string) (*ScalewaySnapshot, error) {
pkg/api/api.go:	resp, err := s.GetResponse("snapshots/" + snapshotID)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var oneSnapshot ScalewayOneSnapshot
pkg/api/api.go:	if err = json.Unmarshal(body, &oneSnapshot); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	// FIXME region, arch, owner, title
pkg/api/api.go:	s.Cache.InsertSnapshot(oneSnapshot.Snapshot.Identifier, "fr-1", "", oneSnapshot.Snapshot.Organization, oneSnapshot.Snapshot.Name)
pkg/api/api.go:	return &oneSnapshot.Snapshot, nil
pkg/api/api.go:}
pkg/api/api.go:// GetVolumes gets the list of volumes from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetVolumes() (*[]ScalewayVolume, error) {
pkg/api/api.go:	query := url.Values{}
pkg/api/api.go:	s.Cache.ClearVolumes()
pkg/api/api.go:	resp, err := s.GetResponse("volumes?" + query.Encode())
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var volumes ScalewayVolumes
pkg/api/api.go:	if err = json.Unmarshal(body, &volumes); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	for _, volume := range volumes.Volumes {
pkg/api/api.go:		// FIXME region, arch, owner, title
pkg/api/api.go:		s.Cache.InsertVolume(volume.Identifier, "fr-1", "", volume.Organization, volume.Name)
pkg/api/api.go:	}
pkg/api/api.go:	return &volumes.Volumes, nil
pkg/api/api.go:}
pkg/api/api.go:// GetVolume gets a volume from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetVolume(volumeID string) (*ScalewayVolume, error) {
pkg/api/api.go:	resp, err := s.GetResponse("volumes/" + volumeID)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var oneVolume ScalewayOneVolume
pkg/api/api.go:	if err = json.Unmarshal(body, &oneVolume); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	// FIXME region, arch, owner, title
pkg/api/api.go:	s.Cache.InsertVolume(oneVolume.Volume.Identifier, "fr-1", "", oneVolume.Volume.Organization, oneVolume.Volume.Name)
pkg/api/api.go:	return &oneVolume.Volume, nil
pkg/api/api.go:}
pkg/api/api.go:// GetBootscripts gets the list of bootscripts from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetBootscripts() (*[]ScalewayBootscript, error) {
pkg/api/api.go:	query := url.Values{}
pkg/api/api.go:	s.Cache.ClearBootscripts()
pkg/api/api.go:	resp, err := s.GetResponse("bootscripts?" + query.Encode())
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var bootscripts ScalewayBootscripts
pkg/api/api.go:	if err = json.Unmarshal(body, &bootscripts); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	for _, bootscript := range bootscripts.Bootscripts {
pkg/api/api.go:		// FIXME region, arch, owner, title
pkg/api/api.go:		s.Cache.InsertBootscript(bootscript.Identifier, "fr-1", bootscript.Arch, bootscript.Organization, bootscript.Title)
pkg/api/api.go:	}
pkg/api/api.go:	return &bootscripts.Bootscripts, nil
pkg/api/api.go:}
pkg/api/api.go:// GetBootscript gets a bootscript from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetBootscript(bootscriptID string) (*ScalewayBootscript, error) {
pkg/api/api.go:	resp, err := s.GetResponse("bootscripts/" + bootscriptID)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var oneBootscript ScalewayOneBootscript
pkg/api/api.go:	if err = json.Unmarshal(body, &oneBootscript); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	// FIXME region, arch, owner, title
pkg/api/api.go:	s.Cache.InsertBootscript(oneBootscript.Bootscript.Identifier, "fr-1", oneBootscript.Bootscript.Arch, oneBootscript.Bootscript.Organization, oneBootscript.Bootscript.Title)
pkg/api/api.go:	return &oneBootscript.Bootscript, nil
pkg/api/api.go:}
pkg/api/api.go:// GetUserdatas gets list of userdata for a server
pkg/api/api.go:func (s *ScalewayAPI) GetUserdatas(serverID string) (*ScalewayUserdatas, error) {
pkg/api/api.go:	var url string
pkg/api/api.go:	if s.isMetadata {
pkg/api/api.go:		url = "/user_data"
pkg/api/api.go:	} else {
pkg/api/api.go:		url = fmt.Sprintf("servers/%s/user_data", serverID)
pkg/api/api.go:	}
pkg/api/api.go:	resp, err := s.GetResponse(url)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var userdatas ScalewayUserdatas
pkg/api/api.go:	if err = json.Unmarshal(body, &userdatas); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &userdatas, nil
pkg/api/api.go:}
pkg/api/api.go:func (s *ScalewayUserdata) String() string {
pkg/api/api.go:	return string(*s)
pkg/api/api.go:}
pkg/api/api.go:// GetUserdata gets a specific userdata for a server
pkg/api/api.go:func (s *ScalewayAPI) GetUserdata(serverID string, key string) (*ScalewayUserdata, error) {
pkg/api/api.go:	var data ScalewayUserdata
pkg/api/api.go:	var err error
pkg/api/api.go:	var url string
pkg/api/api.go:	if s.isMetadata {
pkg/api/api.go:		url = fmt.Sprintf("/user_data/%s", key)
pkg/api/api.go:	} else {
pkg/api/api.go:		url = fmt.Sprintf("servers/%s/user_data/%s", serverID, key)
pkg/api/api.go:	}
pkg/api/api.go:	resp, err := s.GetResponse(url)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	if resp.StatusCode != 200 {
pkg/api/api.go:		return nil, fmt.Errorf("no such user_data %q (%d)", key, resp.StatusCode)
pkg/api/api.go:	}
pkg/api/api.go:	data, err = ioutil.ReadAll(resp.Body)
pkg/api/api.go:	return &data, err
pkg/api/api.go:}
pkg/api/api.go:// PatchUserdata sets a user data
pkg/api/api.go:func (s *ScalewayAPI) PatchUserdata(serverID string, key string, value []byte) error {
pkg/api/api.go:	var resource string
pkg/api/api.go:	if s.isMetadata {
pkg/api/api.go:		resource = fmt.Sprintf("/user_data/%s", key)
pkg/api/api.go:	} else {
pkg/api/api.go:		resource = fmt.Sprintf("servers/%s/user_data/%s", serverID, key)
pkg/api/api.go:	}
pkg/api/api.go:	uri := fmt.Sprintf("%s/%s", strings.TrimRight(s.APIUrl, "/"), resource)
pkg/api/api.go:	payload := new(bytes.Buffer)
pkg/api/api.go:	payload.Write(value)
pkg/api/api.go:	req, err := http.NewRequest("PATCH", uri, payload)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	req.Header.Set("X-Auth-Token", s.Token)
pkg/api/api.go:	req.Header.Set("Content-Type", "text/plain")
pkg/api/api.go:	curl, err := http2curl.GetCurlCommand(req)
pkg/api/api.go:	if os.Getenv("SCW_SENSITIVE") != "1" {
pkg/api/api.go:		log.Debug(s.HideAPICredentials(curl.String()))
pkg/api/api.go:	} else {
pkg/api/api.go:		log.Debug(curl.String())
pkg/api/api.go:	}
pkg/api/api.go:	resp, err := s.client.Do(req)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	if resp.StatusCode == 204 {
pkg/api/api.go:		return nil
pkg/api/api.go:	}
pkg/api/api.go:	return fmt.Errorf("cannot set user_data (%d)", resp.StatusCode)
pkg/api/api.go:}
pkg/api/api.go:// DeleteUserdata deletes a server user_data
pkg/api/api.go:func (s *ScalewayAPI) DeleteUserdata(serverID string, key string) error {
pkg/api/api.go:	var url string
pkg/api/api.go:	if s.isMetadata {
pkg/api/api.go:		url = fmt.Sprintf("/user_data/%s", key)
pkg/api/api.go:	} else {
pkg/api/api.go:		url = fmt.Sprintf("servers/%s/user_data/%s", serverID, key)
pkg/api/api.go:	}
pkg/api/api.go:	resp, err := s.DeleteResponse(url)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	_, err = s.handleHTTPError([]int{204}, resp)
pkg/api/api.go:	return err
pkg/api/api.go:}
pkg/api/api.go:// GetTasks get the list of tasks from the ScalewayAPI
pkg/api/api.go:func (s *ScalewayAPI) GetTasks() (*[]ScalewayTask, error) {
pkg/api/api.go:	query := url.Values{}
pkg/api/api.go:	resp, err := s.GetResponse("tasks?" + query.Encode())
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var tasks ScalewayTasks
pkg/api/api.go:	if err = json.Unmarshal(body, &tasks); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &tasks.Tasks, nil
pkg/api/api.go:}
pkg/api/api.go:// CheckCredentials performs a dummy check to ensure we can contact the API
pkg/api/api.go:func (s *ScalewayAPI) CheckCredentials() error {
pkg/api/api.go:	s.EnableAccountAPI()
pkg/api/api.go:	defer s.DisableAccountAPI()
pkg/api/api.go:	query := url.Values{}
pkg/api/api.go:	query.Set("token_id", s.Token)
pkg/api/api.go:	resp, err := s.GetResponse("tokens?" + query.Encode())
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	if _, err := s.handleHTTPError([]int{200}, resp); err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	return nil
pkg/api/api.go:}
pkg/api/api.go:// GetUserID returns the userID
pkg/api/api.go:func (s *ScalewayAPI) GetUserID() (string, error) {
pkg/api/api.go:	s.EnableAccountAPI()
pkg/api/api.go:	defer s.DisableAccountAPI()
pkg/api/api.go:	resp, err := s.GetResponse(fmt.Sprintf("tokens/%s", s.Token))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	var token ScalewayTokensDefinition
pkg/api/api.go:	if err = json.Unmarshal(body, &token); err != nil {
pkg/api/api.go:		return "", err
pkg/api/api.go:	}
pkg/api/api.go:	return token.Token.UserID, nil
pkg/api/api.go:}
pkg/api/api.go:// GetOrganization returns Organization
pkg/api/api.go:func (s *ScalewayAPI) GetOrganization() (*ScalewayOrganizationsDefinition, error) {
pkg/api/api.go:	s.EnableAccountAPI()
pkg/api/api.go:	defer s.DisableAccountAPI()
pkg/api/api.go:	resp, err := s.GetResponse("organizations")
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var data ScalewayOrganizationsDefinition
pkg/api/api.go:	if err = json.Unmarshal(body, &data); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &data, nil
pkg/api/api.go:}
pkg/api/api.go:// GetUser returns the user
pkg/api/api.go:func (s *ScalewayAPI) GetUser() (*ScalewayUserDefinition, error) {
pkg/api/api.go:	userID, err := s.GetUserID()
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	s.EnableAccountAPI()
pkg/api/api.go:	defer s.DisableAccountAPI()
pkg/api/api.go:	resp, err := s.GetResponse(fmt.Sprintf("users/%s", userID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var user ScalewayUsersDefinition
pkg/api/api.go:	if err = json.Unmarshal(body, &user); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &user.User, nil
pkg/api/api.go:}
pkg/api/api.go:// GetPermissions returns the permissions
pkg/api/api.go:func (s *ScalewayAPI) GetPermissions() (*ScalewayPermissionDefinition, error) {
pkg/api/api.go:	s.EnableAccountAPI()
pkg/api/api.go:	defer s.DisableAccountAPI()
pkg/api/api.go:	resp, err := s.GetResponse(fmt.Sprintf("tokens/%s/permissions", s.Token))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var permissions ScalewayPermissionDefinition
pkg/api/api.go:	if err = json.Unmarshal(body, &permissions); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &permissions, nil
pkg/api/api.go:}
pkg/api/api.go:// GetDashboard returns the dashboard
pkg/api/api.go:func (s *ScalewayAPI) GetDashboard() (*ScalewayDashboard, error) {
pkg/api/api.go:	resp, err := s.GetResponse("dashboard")
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var dashboard ScalewayDashboardResp
pkg/api/api.go:	if err = json.Unmarshal(body, &dashboard); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &dashboard.Dashboard, nil
pkg/api/api.go:}
pkg/api/api.go:// GetServerID returns exactly one server matching
pkg/api/api.go:func (s *ScalewayAPI) GetServerID(needle string) (string, error) {
pkg/api/api.go:	// Parses optional type prefix, i.e: "server:name" -> "name"
pkg/api/api.go:	_, needle = parseNeedle(needle)
pkg/api/api.go:	servers, err := s.ResolveServer(needle)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", fmt.Errorf("Unable to resolve server %s: %s", needle, err)
pkg/api/api.go:	}
pkg/api/api.go:	if len(servers) == 1 {
pkg/api/api.go:		return servers[0].Identifier, nil
pkg/api/api.go:	}
pkg/api/api.go:	if len(servers) == 0 {
pkg/api/api.go:		return "", fmt.Errorf("No such server: %s", needle)
pkg/api/api.go:	}
pkg/api/api.go:	return "", showResolverResults(needle, servers)
pkg/api/api.go:}
pkg/api/api.go:func showResolverResults(needle string, results ScalewayResolverResults) error {
pkg/api/api.go:	arch := ""
pkg/api/api.go:	w := tabwriter.NewWriter(os.Stderr, 20, 1, 3, ' ', 0)
pkg/api/api.go:	defer w.Flush()
pkg/api/api.go:	sort.Sort(results)
pkg/api/api.go:	for _, result := range results {
pkg/api/api.go:		arch = result.Arch
pkg/api/api.go:		if arch == "" {
pkg/api/api.go:			arch = "n/a"
pkg/api/api.go:		}
pkg/api/api.go:		fmt.Fprintf(w, "- %s\t%s\t%s\t%s\n", result.TruncIdentifier(), result.CodeName(), result.Name, arch)
pkg/api/api.go:	}
pkg/api/api.go:	return fmt.Errorf("Too many candidates for %s (%d)", needle, len(results))
pkg/api/api.go:}
pkg/api/api.go:// GetVolumeID returns exactly one volume matching
pkg/api/api.go:func (s *ScalewayAPI) GetVolumeID(needle string) (string, error) {
pkg/api/api.go:	// Parses optional type prefix, i.e: "volume:name" -> "name"
pkg/api/api.go:	_, needle = parseNeedle(needle)
pkg/api/api.go:	volumes, err := s.ResolveVolume(needle)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", fmt.Errorf("Unable to resolve volume %s: %s", needle, err)
pkg/api/api.go:	}
pkg/api/api.go:	if len(volumes) == 1 {
pkg/api/api.go:		return volumes[0].Identifier, nil
pkg/api/api.go:	}
pkg/api/api.go:	if len(volumes) == 0 {
pkg/api/api.go:		return "", fmt.Errorf("No such volume: %s", needle)
pkg/api/api.go:	}
pkg/api/api.go:	return "", showResolverResults(needle, volumes)
pkg/api/api.go:}
pkg/api/api.go:// GetSnapshotID returns exactly one snapshot matching
pkg/api/api.go:func (s *ScalewayAPI) GetSnapshotID(needle string) (string, error) {
pkg/api/api.go:	// Parses optional type prefix, i.e: "snapshot:name" -> "name"
pkg/api/api.go:	_, needle = parseNeedle(needle)
pkg/api/api.go:	snapshots, err := s.ResolveSnapshot(needle)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", fmt.Errorf("Unable to resolve snapshot %s: %s", needle, err)
pkg/api/api.go:	}
pkg/api/api.go:	if len(snapshots) == 1 {
pkg/api/api.go:		return snapshots[0].Identifier, nil
pkg/api/api.go:	}
pkg/api/api.go:	if len(snapshots) == 0 {
pkg/api/api.go:		return "", fmt.Errorf("No such snapshot: %s", needle)
pkg/api/api.go:	}
pkg/api/api.go:	return "", showResolverResults(needle, snapshots)
pkg/api/api.go:}
pkg/api/api.go:// GetImageID returns exactly one image matching
pkg/api/api.go:func (s *ScalewayAPI) GetImageID(needle string) (*ScalewayImageIdentifier, error) {
pkg/api/api.go:	// Parses optional type prefix, i.e: "image:name" -> "name"
pkg/api/api.go:	_, needle = parseNeedle(needle)
pkg/api/api.go:	images, err := s.ResolveImage(needle)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, fmt.Errorf("Unable to resolve image %s: %s", needle, err)
pkg/api/api.go:	}
pkg/api/api.go:	if len(images) == 1 {
pkg/api/api.go:		return &ScalewayImageIdentifier{
pkg/api/api.go:			Identifier: images[0].Identifier,
pkg/api/api.go:			Arch:       images[0].Arch,
pkg/api/api.go:			// FIXME region, owner hardcoded
pkg/api/api.go:			Region: "fr-1",
pkg/api/api.go:			Owner:  "",
pkg/api/api.go:		}, nil
pkg/api/api.go:	}
pkg/api/api.go:	if len(images) == 0 {
pkg/api/api.go:		return nil, fmt.Errorf("No such image: %s", needle)
pkg/api/api.go:	}
pkg/api/api.go:	return nil, showResolverResults(needle, images)
pkg/api/api.go:}
pkg/api/api.go:// GetSecurityGroups returns a ScalewaySecurityGroups
pkg/api/api.go:func (s *ScalewayAPI) GetSecurityGroups() (*ScalewayGetSecurityGroups, error) {
pkg/api/api.go:	resp, err := s.GetResponse("security_groups")
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var securityGroups ScalewayGetSecurityGroups
pkg/api/api.go:	if err = json.Unmarshal(body, &securityGroups); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &securityGroups, nil
pkg/api/api.go:}
pkg/api/api.go:// GetSecurityGroupRules returns a ScalewaySecurityGroupRules
pkg/api/api.go:func (s *ScalewayAPI) GetSecurityGroupRules(groupID string) (*ScalewayGetSecurityGroupRules, error) {
pkg/api/api.go:	resp, err := s.GetResponse(fmt.Sprintf("security_groups/%s/rules", groupID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var securityGroupRules ScalewayGetSecurityGroupRules
pkg/api/api.go:	if err = json.Unmarshal(body, &securityGroupRules); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &securityGroupRules, nil
pkg/api/api.go:}
pkg/api/api.go:// GetASecurityGroupRule returns a ScalewaySecurityGroupRule
pkg/api/api.go:func (s *ScalewayAPI) GetASecurityGroupRule(groupID string, rulesID string) (*ScalewayGetSecurityGroupRule, error) {
pkg/api/api.go:	resp, err := s.GetResponse(fmt.Sprintf("security_groups/%s/rules/%s", groupID, rulesID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var securityGroupRules ScalewayGetSecurityGroupRule
pkg/api/api.go:	if err = json.Unmarshal(body, &securityGroupRules); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &securityGroupRules, nil
pkg/api/api.go:}
pkg/api/api.go:// GetASecurityGroup returns a ScalewaySecurityGroup
pkg/api/api.go:func (s *ScalewayAPI) GetASecurityGroup(groupsID string) (*ScalewayGetSecurityGroup, error) {
pkg/api/api.go:	resp, err := s.GetResponse(fmt.Sprintf("security_groups/%s", groupsID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var securityGroups ScalewayGetSecurityGroup
pkg/api/api.go:	if err = json.Unmarshal(body, &securityGroups); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &securityGroups, nil
pkg/api/api.go:}
pkg/api/api.go:// PostSecurityGroup posts a group on a server
pkg/api/api.go:func (s *ScalewayAPI) PostSecurityGroup(group ScalewayNewSecurityGroup) error {
pkg/api/api.go:	resp, err := s.PostResponse("security_groups", group)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	_, err = s.handleHTTPError([]int{201}, resp)
pkg/api/api.go:	return err
pkg/api/api.go:}
pkg/api/api.go:// PostSecurityGroupRule posts a rule on a server
pkg/api/api.go:func (s *ScalewayAPI) PostSecurityGroupRule(SecurityGroupID string, rules ScalewayNewSecurityGroupRule) error {
pkg/api/api.go:	resp, err := s.PostResponse(fmt.Sprintf("security_groups/%s/rules", SecurityGroupID), rules)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	_, err = s.handleHTTPError([]int{201}, resp)
pkg/api/api.go:	return err
pkg/api/api.go:}
pkg/api/api.go:// DeleteSecurityGroup deletes a SecurityGroup
pkg/api/api.go:func (s *ScalewayAPI) DeleteSecurityGroup(securityGroupID string) error {
pkg/api/api.go:	resp, err := s.DeleteResponse(fmt.Sprintf("security_groups/%s", securityGroupID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	_, err = s.handleHTTPError([]int{204}, resp)
pkg/api/api.go:	return err
pkg/api/api.go:}
pkg/api/api.go:// PutSecurityGroup updates a SecurityGroup
pkg/api/api.go:func (s *ScalewayAPI) PutSecurityGroup(group ScalewayNewSecurityGroup, securityGroupID string) error {
pkg/api/api.go:	resp, err := s.PutResponse(fmt.Sprintf("security_groups/%s", securityGroupID), group)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	_, err = s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	return err
pkg/api/api.go:}
pkg/api/api.go:// PutSecurityGroupRule updates a SecurityGroupRule
pkg/api/api.go:func (s *ScalewayAPI) PutSecurityGroupRule(rules ScalewayNewSecurityGroupRule, securityGroupID, RuleID string) error {
pkg/api/api.go:	resp, err := s.PutResponse(fmt.Sprintf("security_groups/%s/rules/%s", securityGroupID, RuleID), rules)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	_, err = s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	return err
pkg/api/api.go:}
pkg/api/api.go:// DeleteSecurityGroupRule deletes a SecurityGroupRule
pkg/api/api.go:func (s *ScalewayAPI) DeleteSecurityGroupRule(SecurityGroupID, RuleID string) error {
pkg/api/api.go:	resp, err := s.DeleteResponse(fmt.Sprintf("security_groups/%s/rules/%s", SecurityGroupID, RuleID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	_, err = s.handleHTTPError([]int{204}, resp)
pkg/api/api.go:	return err
pkg/api/api.go:}
pkg/api/api.go:// GetContainers returns a ScalewayGetContainers
pkg/api/api.go:func (s *ScalewayAPI) GetContainers() (*ScalewayGetContainers, error) {
pkg/api/api.go:	resp, err := s.GetResponse("containers")
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var containers ScalewayGetContainers
pkg/api/api.go:	if err = json.Unmarshal(body, &containers); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &containers, nil
pkg/api/api.go:}
pkg/api/api.go:// GetContainerDatas returns a ScalewayGetContainerDatas
pkg/api/api.go:func (s *ScalewayAPI) GetContainerDatas(container string) (*ScalewayGetContainerDatas, error) {
pkg/api/api.go:	resp, err := s.GetResponse(fmt.Sprintf("containers/%s", container))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var datas ScalewayGetContainerDatas
pkg/api/api.go:	if err = json.Unmarshal(body, &datas); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &datas, nil
pkg/api/api.go:}
pkg/api/api.go:// GetIPS returns a ScalewayGetIPS
pkg/api/api.go:func (s *ScalewayAPI) GetIPS() (*ScalewayGetIPS, error) {
pkg/api/api.go:	resp, err := s.GetResponse("ips")
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var ips ScalewayGetIPS
pkg/api/api.go:	if err = json.Unmarshal(body, &ips); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &ips, nil
pkg/api/api.go:}
pkg/api/api.go:// NewIP returns a new IP
pkg/api/api.go:func (s *ScalewayAPI) NewIP() (*ScalewayGetIP, error) {
pkg/api/api.go:	var orga struct {
pkg/api/api.go:		Organization string `json:"organization"`
pkg/api/api.go:	}
pkg/api/api.go:	orga.Organization = s.Organization
pkg/api/api.go:	resp, err := s.PostResponse("ips", orga)
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{201}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var ip ScalewayGetIP
pkg/api/api.go:	if err = json.Unmarshal(body, &ip); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &ip, nil
pkg/api/api.go:}
pkg/api/api.go:// AttachIP attachs an IP to a server
pkg/api/api.go:func (s *ScalewayAPI) AttachIP(ipID, serverID string) error {
pkg/api/api.go:	var update struct {
pkg/api/api.go:		Address      string  `json:"address"`
pkg/api/api.go:		ID           string  `json:"id"`
pkg/api/api.go:		Reverse      *string `json:"reverse"`
pkg/api/api.go:		Organization string  `json:"organization"`
pkg/api/api.go:		Server       string  `json:"server"`
pkg/api/api.go:	}
pkg/api/api.go:	ip, err := s.GetIP(ipID)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	update.Address = ip.IP.Address
pkg/api/api.go:	update.ID = ip.IP.ID
pkg/api/api.go:	update.Organization = ip.IP.Organization
pkg/api/api.go:	update.Server = serverID
pkg/api/api.go:	resp, err := s.PutResponse(fmt.Sprintf("ips/%s", ipID), update)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	_, err = s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	return err
pkg/api/api.go:}
pkg/api/api.go:// DeleteIP deletes an IP
pkg/api/api.go:func (s *ScalewayAPI) DeleteIP(ipID string) error {
pkg/api/api.go:	resp, err := s.DeleteResponse(fmt.Sprintf("ips/%s", ipID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	if _, err := s.handleHTTPError([]int{204}, resp); err != nil {
pkg/api/api.go:		return err
pkg/api/api.go:	}
pkg/api/api.go:	return nil
pkg/api/api.go:}
pkg/api/api.go:// GetIP returns a ScalewayGetIP
pkg/api/api.go:func (s *ScalewayAPI) GetIP(ipID string) (*ScalewayGetIP, error) {
pkg/api/api.go:	resp, err := s.GetResponse(fmt.Sprintf("ips/%s", ipID))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var ip ScalewayGetIP
pkg/api/api.go:	if err = json.Unmarshal(body, &ip); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &ip, nil
pkg/api/api.go:}
pkg/api/api.go:// GetQuotas returns a ScalewayGetQuotas
pkg/api/api.go:func (s *ScalewayAPI) GetQuotas() (*ScalewayGetQuotas, error) {
pkg/api/api.go:	s.EnableAccountAPI()
pkg/api/api.go:	defer s.DisableAccountAPI()
pkg/api/api.go:	resp, err := s.GetResponse(fmt.Sprintf("organizations/%s/quotas", s.Organization))
pkg/api/api.go:	if resp != nil {
pkg/api/api.go:		defer resp.Body.Close()
pkg/api/api.go:	}
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	body, err := s.handleHTTPError([]int{200}, resp)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	var quotas ScalewayGetQuotas
pkg/api/api.go:	if err = json.Unmarshal(body, &quotas); err != nil {
pkg/api/api.go:		return nil, err
pkg/api/api.go:	}
pkg/api/api.go:	return &quotas, nil
pkg/api/api.go:}
pkg/api/api.go:// GetBootscriptID returns exactly one bootscript matching
pkg/api/api.go:func (s *ScalewayAPI) GetBootscriptID(needle, arch string) (string, error) {
pkg/api/api.go:	// Parses optional type prefix, i.e: "bootscript:name" -> "name"
pkg/api/api.go:	_, needle = parseNeedle(needle)
pkg/api/api.go:	bootscripts, err := s.ResolveBootscript(needle)
pkg/api/api.go:	if err != nil {
pkg/api/api.go:		return "", fmt.Errorf("Unable to resolve bootscript %s: %s", needle, err)
pkg/api/api.go:	}
pkg/api/api.go:	bootscripts.FilterByArch(arch)
pkg/api/api.go:	if len(bootscripts) == 1 {
pkg/api/api.go:		return bootscripts[0].Identifier, nil
pkg/api/api.go:	}
pkg/api/api.go:	if len(bootscripts) == 0 {
pkg/api/api.go:		return "", fmt.Errorf("No such bootscript: %s", needle)
pkg/api/api.go:	}
pkg/api/api.go:	return "", showResolverResults(needle, bootscripts)
pkg/api/api.go:}
pkg/api/api.go:// HideAPICredentials removes API credentials from a string
pkg/api/api.go:func (s *ScalewayAPI) HideAPICredentials(input string) string {
pkg/api/api.go:	output := input
pkg/api/api.go:	if s.Token != "" {
pkg/api/api.go:		output = strings.Replace(output, s.Token, s.anonuuid.FakeUUID(s.Token), -1)
pkg/api/api.go:	}
pkg/api/api.go:	if s.Organization != "" {
pkg/api/api.go:		output = strings.Replace(output, s.Organization, s.anonuuid.FakeUUID(s.Organization), -1)
pkg/api/api.go:	}
pkg/api/api.go:	if s.password != "" {
pkg/api/api.go:		output = strings.Replace(output, s.password, "XX-XX-XX-XX", -1)
pkg/api/api.go:	}
pkg/api/api.go:	return output
pkg/api/api.go:}
pkg/api/api.go:// EnableAccountAPI enable accountAPI
pkg/api/api.go:func (s *ScalewayAPI) EnableAccountAPI() {
pkg/api/api.go:	s.APIUrl = s.AccountAPI
pkg/api/api.go:}
pkg/api/api.go:// DisableAccountAPI disable accountAPI
pkg/api/api.go:func (s *ScalewayAPI) DisableAccountAPI() {
pkg/api/api.go:	s.APIUrl = s.ComputeAPI
pkg/api/api.go:}
pkg/api/api.go:func rootNetDial(network, addr string) (net.Conn, error) {
pkg/api/api.go:	dialer := net.Dialer{
pkg/api/api.go:		Timeout:   10 * time.Second,
pkg/api/api.go:		KeepAlive: 10 * time.Second,
pkg/api/api.go:	}
pkg/api/api.go:	// bruteforce privileged ports
pkg/api/api.go:	var localAddr net.Addr
pkg/api/api.go:	var err error
pkg/api/api.go:	for port := 1; port <= 1024; port++ {
pkg/api/api.go:		localAddr, err = net.ResolveTCPAddr("tcp", fmt.Sprintf(":%d", port))
pkg/api/api.go:		// this should never happen
pkg/api/api.go:		if err != nil {
pkg/api/api.go:			return nil, err
pkg/api/api.go:		}
pkg/api/api.go:		dialer.LocalAddr = localAddr
pkg/api/api.go:		conn, err := dialer.Dial(network, addr)
pkg/api/api.go:		// if err is nil, dialer.Dial succeed, so let's go
pkg/api/api.go:		// else, err != nil, but we don't care
pkg/api/api.go:		if err == nil {
pkg/api/api.go:			return conn, nil
pkg/api/api.go:		}
pkg/api/api.go:	}
pkg/api/api.go:	// if here, all privileged ports were tried without success
pkg/api/api.go:	return nil, fmt.Errorf("bind: permission denied, are you root ?")
pkg/api/api.go:}
pkg/api/api.go:// EnableMetadataAPI enable metadataAPI
pkg/api/api.go:func (s *ScalewayAPI) EnableMetadataAPI() {
pkg/api/api.go:	s.APIUrl = MetadataAPI
pkg/api/api.go:	if os.Getenv("SCW_METADATA_URL") != "" {
pkg/api/api.go:		s.APIUrl = os.Getenv("SCW_METADATA_URL")
pkg/api/api.go:	}
pkg/api/api.go:	s.oldTransport = &s.client.Transport
pkg/api/api.go:	s.client.Transport = &http.Transport{
pkg/api/api.go:		Dial: rootNetDial,
pkg/api/api.go:	}
pkg/api/api.go:	s.isMetadata = true
pkg/api/api.go:}
pkg/api/api.go:// DisableMetadataAPI disable metadataAPI
pkg/api/api.go:func (s *ScalewayAPI) DisableMetadataAPI() {
pkg/api/api.go:	s.APIUrl = s.ComputeAPI
pkg/api/api.go:	s.client.Transport = *s.oldTransport
pkg/api/api.go:	s.isMetadata = false
pkg/api/api.go:}
pkg/api/api.go:// SetPassword register the password
pkg/api/api.go:func (s *ScalewayAPI) SetPassword(password string) {
pkg/api/api.go:	s.password = password
pkg/api/api.go:}
pkg/api/api_test.go:package api
pkg/api/api_test.go:import (
pkg/api/api_test.go:	"testing"
pkg/api/api_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/api/api_test.go:)
pkg/api/api_test.go:func TestNewScalewayAPI(t *testing.T) {
pkg/api/api_test.go:	Convey("Testing NewScalewayAPI()", t, func() {
pkg/api/api_test.go:		api, err := NewScalewayAPI("http://api-endpoint.com", "http://account-endpoint.com", "my-organization", "my-token")
pkg/api/api_test.go:		So(err, ShouldBeNil)
pkg/api/api_test.go:		So(api, ShouldNotBeNil)
pkg/api/api_test.go:		So(api.ComputeAPI, ShouldEqual, "http://api-endpoint.com")
pkg/api/api_test.go:		So(api.AccountAPI, ShouldEqual, "http://account-endpoint.com")
pkg/api/api_test.go:		So(api.Token, ShouldEqual, "my-token")
pkg/api/api_test.go:		So(api.Organization, ShouldEqual, "my-organization")
pkg/api/api_test.go:		So(api.Cache, ShouldNotBeNil)
pkg/api/api_test.go:		So(api.client, ShouldNotBeNil)
pkg/api/api_test.go:		So(api.anonuuid, ShouldNotBeNil)
pkg/api/api_test.go:	})
pkg/api/api_test.go:}
pkg/api/cache.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/api/cache.go:// Use of this source code is governed by a MIT-style
pkg/api/cache.go:// license that can be found in the LICENSE.md file.
pkg/api/cache.go:package api
pkg/api/cache.go:import (
pkg/api/cache.go:	"encoding/json"
pkg/api/cache.go:	"fmt"
pkg/api/cache.go:	"io/ioutil"
pkg/api/cache.go:	"os"
pkg/api/cache.go:	"path/filepath"
pkg/api/cache.go:	"regexp"
pkg/api/cache.go:	"strings"
pkg/api/cache.go:	"sync"
pkg/api/cache.go:	"github.com/Sirupsen/logrus"
pkg/api/cache.go:	"github.com/moul/anonuuid"
pkg/api/cache.go:	"github.com/renstrom/fuzzysearch/fuzzy"
pkg/api/cache.go:)
pkg/api/cache.go:const (
pkg/api/cache.go:	// CacheRegion permits to access at the region field
pkg/api/cache.go:	CacheRegion = iota
pkg/api/cache.go:	// CacheArch permits to access at the arch field
pkg/api/cache.go:	CacheArch
pkg/api/cache.go:	// CacheOwner permits to access at the owner field
pkg/api/cache.go:	CacheOwner
pkg/api/cache.go:	// CacheTitle permits to access at the title field
pkg/api/cache.go:	CacheTitle
pkg/api/cache.go:	// CacheMaxfield is used to determine the size of array
pkg/api/cache.go:	CacheMaxfield
pkg/api/cache.go:)
pkg/api/cache.go:// ScalewayCache is used not to query the API to resolve full identifiers
pkg/api/cache.go:type ScalewayCache struct {
pkg/api/cache.go:	// Images contains names of Scaleway images indexed by identifier
pkg/api/cache.go:	Images map[string][CacheMaxfield]string `json:"images"`
pkg/api/cache.go:	// Snapshots contains names of Scaleway snapshots indexed by identifier
pkg/api/cache.go:	Snapshots map[string][CacheMaxfield]string `json:"snapshots"`
pkg/api/cache.go:	// Volumes contains names of Scaleway volumes indexed by identifier
pkg/api/cache.go:	Volumes map[string][CacheMaxfield]string `json:"volumes"`
pkg/api/cache.go:	// Bootscripts contains names of Scaleway bootscripts indexed by identifier
pkg/api/cache.go:	Bootscripts map[string][CacheMaxfield]string `json:"bootscripts"`
pkg/api/cache.go:	// Servers contains names of Scaleway C1 servers indexed by identifier
pkg/api/cache.go:	Servers map[string][CacheMaxfield]string `json:"servers"`
pkg/api/cache.go:	// Path is the path to the cache file
pkg/api/cache.go:	Path string `json:"-"`
pkg/api/cache.go:	// Modified tells if the cache needs to be overwritten or not
pkg/api/cache.go:	Modified bool `json:"-"`
pkg/api/cache.go:	// Lock allows ScalewayCache to be used concurrently
pkg/api/cache.go:	Lock sync.Mutex `json:"-"`
pkg/api/cache.go:}
pkg/api/cache.go:const (
pkg/api/cache.go:	// IdentifierUnknown is used when we don't know explicitely the type key of the object (used for nil comparison)
pkg/api/cache.go:	IdentifierUnknown = 1 << iota
pkg/api/cache.go:	// IdentifierServer is the type key of cached server objects
pkg/api/cache.go:	IdentifierServer
pkg/api/cache.go:	// IdentifierImage is the type key of cached image objects
pkg/api/cache.go:	IdentifierImage
pkg/api/cache.go:	// IdentifierSnapshot is the type key of cached snapshot objects
pkg/api/cache.go:	IdentifierSnapshot
pkg/api/cache.go:	// IdentifierBootscript is the type key of cached bootscript objects
pkg/api/cache.go:	IdentifierBootscript
pkg/api/cache.go:	// IdentifierVolume is the type key of cached volume objects
pkg/api/cache.go:	IdentifierVolume
pkg/api/cache.go:)
pkg/api/cache.go:// ScalewayResolverResult is a structure containing human-readable information
pkg/api/cache.go:// about resolver results. This structure is used to display the user choices.
pkg/api/cache.go:type ScalewayResolverResult struct {
pkg/api/cache.go:	Identifier string
pkg/api/cache.go:	Type       int
pkg/api/cache.go:	Name       string
pkg/api/cache.go:	Arch       string
pkg/api/cache.go:	Needle     string
pkg/api/cache.go:	RankMatch  int
pkg/api/cache.go:}
pkg/api/cache.go:// ScalewayResolverResults is a list of `ScalewayResolverResult`
pkg/api/cache.go:type ScalewayResolverResults []ScalewayResolverResult
pkg/api/cache.go:// NewScalewayResolverResult returns a new ScalewayResolverResult
pkg/api/cache.go:func NewScalewayResolverResult(Identifier, Name, Arch string, Type int) ScalewayResolverResult {
pkg/api/cache.go:	return ScalewayResolverResult{
pkg/api/cache.go:		Identifier: Identifier,
pkg/api/cache.go:		Type:       Type,
pkg/api/cache.go:		Name:       Name,
pkg/api/cache.go:		Arch:       Arch,
pkg/api/cache.go:	}
pkg/api/cache.go:}
pkg/api/cache.go:func (s ScalewayResolverResults) Len() int {
pkg/api/cache.go:	return len(s)
pkg/api/cache.go:}
pkg/api/cache.go:func (s ScalewayResolverResults) Swap(i, j int) {
pkg/api/cache.go:	s[i], s[j] = s[j], s[i]
pkg/api/cache.go:}
pkg/api/cache.go:func (s ScalewayResolverResults) Less(i, j int) bool {
pkg/api/cache.go:	return s[i].RankMatch < s[j].RankMatch
pkg/api/cache.go:}
pkg/api/cache.go:// TruncIdentifier returns first 8 characters of an Identifier (UUID)
pkg/api/cache.go:func (s *ScalewayResolverResult) TruncIdentifier() string {
pkg/api/cache.go:	return s.Identifier[:8]
pkg/api/cache.go:}
pkg/api/cache.go:func identifierTypeName(kind int) string {
pkg/api/cache.go:	switch kind {
pkg/api/cache.go:	case IdentifierServer:
pkg/api/cache.go:		return "Server"
pkg/api/cache.go:	case IdentifierImage:
pkg/api/cache.go:		return "Image"
pkg/api/cache.go:	case IdentifierSnapshot:
pkg/api/cache.go:		return "Snapshot"
pkg/api/cache.go:	case IdentifierVolume:
pkg/api/cache.go:		return "Volume"
pkg/api/cache.go:	case IdentifierBootscript:
pkg/api/cache.go:		return "Bootscript"
pkg/api/cache.go:	}
pkg/api/cache.go:	return ""
pkg/api/cache.go:}
pkg/api/cache.go:// CodeName returns a full resource name with typed prefix
pkg/api/cache.go:func (s *ScalewayResolverResult) CodeName() string {
pkg/api/cache.go:	name := strings.ToLower(s.Name)
pkg/api/cache.go:	name = regexp.MustCompile(`[^a-z0-9-]`).ReplaceAllString(name, "-")
pkg/api/cache.go:	name = regexp.MustCompile(`--+`).ReplaceAllString(name, "-")
pkg/api/cache.go:	name = strings.Trim(name, "-")
pkg/api/cache.go:	return fmt.Sprintf("%s:%s", strings.ToLower(identifierTypeName(s.Type)), name)
pkg/api/cache.go:}
pkg/api/cache.go:// FilterByArch deletes the elements which not match with arch
pkg/api/cache.go:func (s *ScalewayResolverResults) FilterByArch(arch string) {
pkg/api/cache.go:REDO:
pkg/api/cache.go:	for i := range *s {
pkg/api/cache.go:		if (*s)[i].Arch != arch {
pkg/api/cache.go:			(*s)[i] = (*s)[len(*s)-1]
pkg/api/cache.go:			*s = (*s)[:len(*s)-1]
pkg/api/cache.go:			goto REDO
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:}
pkg/api/cache.go:// NewScalewayCache loads a per-user cache
pkg/api/cache.go:func NewScalewayCache() (*ScalewayCache, error) {
pkg/api/cache.go:	homeDir := os.Getenv("HOME") // *nix
pkg/api/cache.go:	if homeDir == "" {           // Windows
pkg/api/cache.go:		homeDir = os.Getenv("USERPROFILE")
pkg/api/cache.go:	}
pkg/api/cache.go:	if homeDir == "" {
pkg/api/cache.go:		homeDir = "/tmp"
pkg/api/cache.go:	}
pkg/api/cache.go:	cachePath := filepath.Join(homeDir, ".scw-cache.db")
pkg/api/cache.go:	_, err := os.Stat(cachePath)
pkg/api/cache.go:	if os.IsNotExist(err) {
pkg/api/cache.go:		return &ScalewayCache{
pkg/api/cache.go:			Images:      make(map[string][CacheMaxfield]string),
pkg/api/cache.go:			Snapshots:   make(map[string][CacheMaxfield]string),
pkg/api/cache.go:			Volumes:     make(map[string][CacheMaxfield]string),
pkg/api/cache.go:			Bootscripts: make(map[string][CacheMaxfield]string),
pkg/api/cache.go:			Servers:     make(map[string][CacheMaxfield]string),
pkg/api/cache.go:			Path:        cachePath,
pkg/api/cache.go:		}, nil
pkg/api/cache.go:	} else if err != nil {
pkg/api/cache.go:		return nil, err
pkg/api/cache.go:	}
pkg/api/cache.go:	file, err := ioutil.ReadFile(cachePath)
pkg/api/cache.go:	if err != nil {
pkg/api/cache.go:		return nil, err
pkg/api/cache.go:	}
pkg/api/cache.go:	var cache ScalewayCache
pkg/api/cache.go:	cache.Path = cachePath
pkg/api/cache.go:	err = json.Unmarshal(file, &cache)
pkg/api/cache.go:	if err != nil {
pkg/api/cache.go:		// fix compatibility with older version
pkg/api/cache.go:		if err = os.Remove(cachePath); err != nil {
pkg/api/cache.go:			return nil, err
pkg/api/cache.go:		}
pkg/api/cache.go:		return &ScalewayCache{
pkg/api/cache.go:			Images:      make(map[string][CacheMaxfield]string),
pkg/api/cache.go:			Snapshots:   make(map[string][CacheMaxfield]string),
pkg/api/cache.go:			Volumes:     make(map[string][CacheMaxfield]string),
pkg/api/cache.go:			Bootscripts: make(map[string][CacheMaxfield]string),
pkg/api/cache.go:			Servers:     make(map[string][CacheMaxfield]string),
pkg/api/cache.go:			Path:        cachePath,
pkg/api/cache.go:		}, nil
pkg/api/cache.go:	}
pkg/api/cache.go:	if cache.Images == nil {
pkg/api/cache.go:		cache.Images = make(map[string][CacheMaxfield]string)
pkg/api/cache.go:	}
pkg/api/cache.go:	if cache.Snapshots == nil {
pkg/api/cache.go:		cache.Snapshots = make(map[string][CacheMaxfield]string)
pkg/api/cache.go:	}
pkg/api/cache.go:	if cache.Volumes == nil {
pkg/api/cache.go:		cache.Volumes = make(map[string][CacheMaxfield]string)
pkg/api/cache.go:	}
pkg/api/cache.go:	if cache.Servers == nil {
pkg/api/cache.go:		cache.Servers = make(map[string][CacheMaxfield]string)
pkg/api/cache.go:	}
pkg/api/cache.go:	if cache.Bootscripts == nil {
pkg/api/cache.go:		cache.Bootscripts = make(map[string][CacheMaxfield]string)
pkg/api/cache.go:	}
pkg/api/cache.go:	return &cache, nil
pkg/api/cache.go:}
pkg/api/cache.go:// Flush flushes the cache database
pkg/api/cache.go:func (c *ScalewayCache) Flush() error {
pkg/api/cache.go:	return os.Remove(c.Path)
pkg/api/cache.go:}
pkg/api/cache.go:// Save atomically overwrites the current cache database
pkg/api/cache.go:func (c *ScalewayCache) Save() error {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	logrus.Debugf("Writing cache file to disk")
pkg/api/cache.go:	if c.Modified {
pkg/api/cache.go:		file, err := ioutil.TempFile(filepath.Dir(c.Path), filepath.Base(c.Path))
pkg/api/cache.go:		if err != nil {
pkg/api/cache.go:			return err
pkg/api/cache.go:		}
pkg/api/cache.go:		defer file.Close()
pkg/api/cache.go:		encoder := json.NewEncoder(file)
pkg/api/cache.go:		err = encoder.Encode(*c)
pkg/api/cache.go:		if err != nil {
pkg/api/cache.go:			os.Remove(file.Name())
pkg/api/cache.go:			return err
pkg/api/cache.go:		}
pkg/api/cache.go:		if err := os.Rename(file.Name(), c.Path); err != nil {
pkg/api/cache.go:			os.Remove(file.Name())
pkg/api/cache.go:			return err
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	return nil
pkg/api/cache.go:}
pkg/api/cache.go:// ComputeRankMatch fills `ScalewayResolverResult.RankMatch` with its `fuzzy` score
pkg/api/cache.go:func (s *ScalewayResolverResult) ComputeRankMatch(needle string) {
pkg/api/cache.go:	s.Needle = needle
pkg/api/cache.go:	s.RankMatch = fuzzy.RankMatch(needle, s.Name)
pkg/api/cache.go:}
pkg/api/cache.go:// LookUpImages attempts to return identifiers matching a pattern
pkg/api/cache.go:func (c *ScalewayCache) LookUpImages(needle string, acceptUUID bool) ScalewayResolverResults {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	var res ScalewayResolverResults
pkg/api/cache.go:	var exactMatches ScalewayResolverResults
pkg/api/cache.go:	if acceptUUID && anonuuid.IsUUID(needle) == nil {
pkg/api/cache.go:		if fields, ok := c.Images[needle]; ok {
pkg/api/cache.go:			entry := NewScalewayResolverResult(needle, fields[CacheTitle], fields[CacheArch], IdentifierImage)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			res = append(res, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	needle = regexp.MustCompile(`^user/`).ReplaceAllString(needle, "")
pkg/api/cache.go:	// FIXME: if 'user/' is in needle, only watch for a user image
pkg/api/cache.go:	nameRegex := regexp.MustCompile(`(?i)` + regexp.MustCompile(`[_-]`).ReplaceAllString(needle, ".*"))
pkg/api/cache.go:	for identifier, fields := range c.Images {
pkg/api/cache.go:		if fields[CacheTitle] == needle {
pkg/api/cache.go:			entry := NewScalewayResolverResult(identifier, fields[CacheTitle], fields[CacheArch], IdentifierImage)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			exactMatches = append(exactMatches, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:		if strings.HasPrefix(identifier, needle) || nameRegex.MatchString(fields[CacheTitle]) {
pkg/api/cache.go:			entry := NewScalewayResolverResult(identifier, fields[CacheTitle], fields[CacheArch], IdentifierImage)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			res = append(res, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	if len(exactMatches) == 1 {
pkg/api/cache.go:		return exactMatches
pkg/api/cache.go:	}
pkg/api/cache.go:	return removeDuplicatesResults(res)
pkg/api/cache.go:}
pkg/api/cache.go:// LookUpSnapshots attempts to return identifiers matching a pattern
pkg/api/cache.go:func (c *ScalewayCache) LookUpSnapshots(needle string, acceptUUID bool) ScalewayResolverResults {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	var res ScalewayResolverResults
pkg/api/cache.go:	var exactMatches ScalewayResolverResults
pkg/api/cache.go:	if acceptUUID && anonuuid.IsUUID(needle) == nil {
pkg/api/cache.go:		if fields, ok := c.Snapshots[needle]; ok {
pkg/api/cache.go:			entry := NewScalewayResolverResult(needle, fields[CacheTitle], fields[CacheArch], IdentifierSnapshot)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			res = append(res, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	needle = regexp.MustCompile(`^user/`).ReplaceAllString(needle, "")
pkg/api/cache.go:	nameRegex := regexp.MustCompile(`(?i)` + regexp.MustCompile(`[_-]`).ReplaceAllString(needle, ".*"))
pkg/api/cache.go:	for identifier, fields := range c.Snapshots {
pkg/api/cache.go:		if fields[CacheTitle] == needle {
pkg/api/cache.go:			entry := NewScalewayResolverResult(identifier, fields[CacheTitle], fields[CacheArch], IdentifierSnapshot)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			exactMatches = append(exactMatches, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:		if strings.HasPrefix(identifier, needle) || nameRegex.MatchString(fields[CacheTitle]) {
pkg/api/cache.go:			entry := NewScalewayResolverResult(identifier, fields[CacheTitle], fields[CacheArch], IdentifierSnapshot)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			res = append(res, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	if len(exactMatches) == 1 {
pkg/api/cache.go:		return exactMatches
pkg/api/cache.go:	}
pkg/api/cache.go:	return removeDuplicatesResults(res)
pkg/api/cache.go:}
pkg/api/cache.go:// LookUpVolumes attempts to return identifiers matching a pattern
pkg/api/cache.go:func (c *ScalewayCache) LookUpVolumes(needle string, acceptUUID bool) ScalewayResolverResults {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	var res ScalewayResolverResults
pkg/api/cache.go:	var exactMatches ScalewayResolverResults
pkg/api/cache.go:	if acceptUUID && anonuuid.IsUUID(needle) == nil {
pkg/api/cache.go:		if fields, ok := c.Volumes[needle]; ok {
pkg/api/cache.go:			entry := NewScalewayResolverResult(needle, fields[CacheTitle], fields[CacheArch], IdentifierVolume)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			res = append(res, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	nameRegex := regexp.MustCompile(`(?i)` + regexp.MustCompile(`[_-]`).ReplaceAllString(needle, ".*"))
pkg/api/cache.go:	for identifier, fields := range c.Volumes {
pkg/api/cache.go:		if fields[CacheTitle] == needle {
pkg/api/cache.go:			entry := NewScalewayResolverResult(needle, fields[CacheTitle], fields[CacheArch], IdentifierVolume)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			exactMatches = append(exactMatches, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:		if strings.HasPrefix(identifier, needle) || nameRegex.MatchString(fields[CacheTitle]) {
pkg/api/cache.go:			entry := NewScalewayResolverResult(needle, fields[CacheTitle], fields[CacheArch], IdentifierVolume)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			res = append(res, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	if len(exactMatches) == 1 {
pkg/api/cache.go:		return exactMatches
pkg/api/cache.go:	}
pkg/api/cache.go:	return removeDuplicatesResults(res)
pkg/api/cache.go:}
pkg/api/cache.go:// LookUpBootscripts attempts to return identifiers matching a pattern
pkg/api/cache.go:func (c *ScalewayCache) LookUpBootscripts(needle string, acceptUUID bool) ScalewayResolverResults {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	var res ScalewayResolverResults
pkg/api/cache.go:	var exactMatches ScalewayResolverResults
pkg/api/cache.go:	if acceptUUID && anonuuid.IsUUID(needle) == nil {
pkg/api/cache.go:		if fields, ok := c.Bootscripts[needle]; ok {
pkg/api/cache.go:			entry := NewScalewayResolverResult(needle, fields[CacheTitle], fields[CacheArch], IdentifierBootscript)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			res = append(res, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	nameRegex := regexp.MustCompile(`(?i)` + regexp.MustCompile(`[_-]`).ReplaceAllString(needle, ".*"))
pkg/api/cache.go:	for identifier, fields := range c.Bootscripts {
pkg/api/cache.go:		if fields[CacheTitle] == needle {
pkg/api/cache.go:			entry := NewScalewayResolverResult(identifier, fields[CacheTitle], fields[CacheArch], IdentifierBootscript)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			exactMatches = append(exactMatches, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:		if strings.HasPrefix(identifier, needle) || nameRegex.MatchString(fields[CacheTitle]) {
pkg/api/cache.go:			entry := NewScalewayResolverResult(identifier, fields[CacheTitle], fields[CacheArch], IdentifierBootscript)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			res = append(res, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	if len(exactMatches) == 1 {
pkg/api/cache.go:		return exactMatches
pkg/api/cache.go:	}
pkg/api/cache.go:	return removeDuplicatesResults(res)
pkg/api/cache.go:}
pkg/api/cache.go:// LookUpServers attempts to return identifiers matching a pattern
pkg/api/cache.go:func (c *ScalewayCache) LookUpServers(needle string, acceptUUID bool) ScalewayResolverResults {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	var res ScalewayResolverResults
pkg/api/cache.go:	var exactMatches ScalewayResolverResults
pkg/api/cache.go:	if acceptUUID && anonuuid.IsUUID(needle) == nil {
pkg/api/cache.go:		if fields, ok := c.Servers[needle]; ok {
pkg/api/cache.go:			entry := NewScalewayResolverResult(needle, fields[CacheTitle], fields[CacheArch], IdentifierServer)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			res = append(res, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	nameRegex := regexp.MustCompile(`(?i)` + regexp.MustCompile(`[_-]`).ReplaceAllString(needle, ".*"))
pkg/api/cache.go:	for identifier, fields := range c.Servers {
pkg/api/cache.go:		if fields[CacheTitle] == needle {
pkg/api/cache.go:			entry := NewScalewayResolverResult(identifier, fields[CacheTitle], fields[CacheArch], IdentifierServer)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			exactMatches = append(exactMatches, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:		if strings.HasPrefix(identifier, needle) || nameRegex.MatchString(fields[CacheTitle]) {
pkg/api/cache.go:			entry := NewScalewayResolverResult(identifier, fields[CacheTitle], fields[CacheArch], IdentifierServer)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			res = append(res, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	if len(exactMatches) == 1 {
pkg/api/cache.go:		return exactMatches
pkg/api/cache.go:	}
pkg/api/cache.go:	return removeDuplicatesResults(res)
pkg/api/cache.go:}
pkg/api/cache.go:// removeDuplicatesResults transforms an array into a unique array
pkg/api/cache.go:func removeDuplicatesResults(elements ScalewayResolverResults) ScalewayResolverResults {
pkg/api/cache.go:	encountered := map[string]ScalewayResolverResult{}
pkg/api/cache.go:	// Create a map of all unique elements.
pkg/api/cache.go:	for v := range elements {
pkg/api/cache.go:		encountered[elements[v].Identifier] = elements[v]
pkg/api/cache.go:	}
pkg/api/cache.go:	// Place all keys from the map into a slice.
pkg/api/cache.go:	results := ScalewayResolverResults{}
pkg/api/cache.go:	for _, result := range encountered {
pkg/api/cache.go:		results = append(results, result)
pkg/api/cache.go:	}
pkg/api/cache.go:	return results
pkg/api/cache.go:}
pkg/api/cache.go:// parseNeedle parses a user needle and try to extract a forced object type
pkg/api/cache.go:// i.e:
pkg/api/cache.go://   - server:blah-blah -> kind=server, needle=blah-blah
pkg/api/cache.go://   - blah-blah -> kind="", needle=blah-blah
pkg/api/cache.go://   - not-existing-type:blah-blah
pkg/api/cache.go:func parseNeedle(input string) (identifierType int, needle string) {
pkg/api/cache.go:	parts := strings.Split(input, ":")
pkg/api/cache.go:	if len(parts) == 2 {
pkg/api/cache.go:		switch parts[0] {
pkg/api/cache.go:		case "server":
pkg/api/cache.go:			return IdentifierServer, parts[1]
pkg/api/cache.go:		case "image":
pkg/api/cache.go:			return IdentifierImage, parts[1]
pkg/api/cache.go:		case "snapshot":
pkg/api/cache.go:			return IdentifierSnapshot, parts[1]
pkg/api/cache.go:		case "bootscript":
pkg/api/cache.go:			return IdentifierBootscript, parts[1]
pkg/api/cache.go:		case "volume":
pkg/api/cache.go:			return IdentifierVolume, parts[1]
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	return IdentifierUnknown, input
pkg/api/cache.go:}
pkg/api/cache.go:// LookUpIdentifiers attempts to return identifiers matching a pattern
pkg/api/cache.go:func (c *ScalewayCache) LookUpIdentifiers(needle string) ScalewayResolverResults {
pkg/api/cache.go:	results := ScalewayResolverResults{}
pkg/api/cache.go:	identifierType, needle := parseNeedle(needle)
pkg/api/cache.go:	if identifierType&(IdentifierUnknown|IdentifierServer) > 0 {
pkg/api/cache.go:		for _, result := range c.LookUpServers(needle, false) {
pkg/api/cache.go:			entry := NewScalewayResolverResult(result.Identifier, result.Name, result.Arch, IdentifierServer)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			results = append(results, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	if identifierType&(IdentifierUnknown|IdentifierImage) > 0 {
pkg/api/cache.go:		for _, result := range c.LookUpImages(needle, false) {
pkg/api/cache.go:			entry := NewScalewayResolverResult(result.Identifier, result.Name, result.Arch, IdentifierImage)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			results = append(results, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	if identifierType&(IdentifierUnknown|IdentifierSnapshot) > 0 {
pkg/api/cache.go:		for _, result := range c.LookUpSnapshots(needle, false) {
pkg/api/cache.go:			entry := NewScalewayResolverResult(result.Identifier, result.Name, result.Arch, IdentifierSnapshot)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			results = append(results, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	if identifierType&(IdentifierUnknown|IdentifierVolume) > 0 {
pkg/api/cache.go:		for _, result := range c.LookUpVolumes(needle, false) {
pkg/api/cache.go:			entry := NewScalewayResolverResult(result.Identifier, result.Name, result.Arch, IdentifierVolume)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			results = append(results, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	if identifierType&(IdentifierUnknown|IdentifierBootscript) > 0 {
pkg/api/cache.go:		for _, result := range c.LookUpBootscripts(needle, false) {
pkg/api/cache.go:			entry := NewScalewayResolverResult(result.Identifier, result.Name, result.Arch, IdentifierBootscript)
pkg/api/cache.go:			entry.ComputeRankMatch(needle)
pkg/api/cache.go:			results = append(results, entry)
pkg/api/cache.go:		}
pkg/api/cache.go:	}
pkg/api/cache.go:	return results
pkg/api/cache.go:}
pkg/api/cache.go:// InsertServer registers a server in the cache
pkg/api/cache.go:func (c *ScalewayCache) InsertServer(identifier, region, arch, owner, name string) {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	fields, exists := c.Servers[identifier]
pkg/api/cache.go:	if !exists || fields[CacheTitle] != name {
pkg/api/cache.go:		c.Servers[identifier] = [CacheMaxfield]string{region, arch, owner, name}
pkg/api/cache.go:		c.Modified = true
pkg/api/cache.go:	}
pkg/api/cache.go:}
pkg/api/cache.go:// RemoveServer removes a server from the cache
pkg/api/cache.go:func (c *ScalewayCache) RemoveServer(identifier string) {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	delete(c.Servers, identifier)
pkg/api/cache.go:	c.Modified = true
pkg/api/cache.go:}
pkg/api/cache.go:// ClearServers removes all servers from the cache
pkg/api/cache.go:func (c *ScalewayCache) ClearServers() {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	c.Servers = make(map[string][CacheMaxfield]string)
pkg/api/cache.go:	c.Modified = true
pkg/api/cache.go:}
pkg/api/cache.go:// InsertImage registers an image in the cache
pkg/api/cache.go:func (c *ScalewayCache) InsertImage(identifier, region, arch, owner, name string) {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	fields, exists := c.Images[identifier]
pkg/api/cache.go:	if !exists || fields[CacheTitle] != name {
pkg/api/cache.go:		c.Images[identifier] = [CacheMaxfield]string{region, arch, owner, name}
pkg/api/cache.go:		c.Modified = true
pkg/api/cache.go:	}
pkg/api/cache.go:}
pkg/api/cache.go:// RemoveImage removes a server from the cache
pkg/api/cache.go:func (c *ScalewayCache) RemoveImage(identifier string) {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	delete(c.Images, identifier)
pkg/api/cache.go:	c.Modified = true
pkg/api/cache.go:}
pkg/api/cache.go:// ClearImages removes all images from the cache
pkg/api/cache.go:func (c *ScalewayCache) ClearImages() {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	c.Images = make(map[string][CacheMaxfield]string)
pkg/api/cache.go:	c.Modified = true
pkg/api/cache.go:}
pkg/api/cache.go:// InsertSnapshot registers an snapshot in the cache
pkg/api/cache.go:func (c *ScalewayCache) InsertSnapshot(identifier, region, arch, owner, name string) {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	fields, exists := c.Snapshots[identifier]
pkg/api/cache.go:	if !exists || fields[CacheTitle] != name {
pkg/api/cache.go:		c.Snapshots[identifier] = [CacheMaxfield]string{region, arch, owner, name}
pkg/api/cache.go:		c.Modified = true
pkg/api/cache.go:	}
pkg/api/cache.go:}
pkg/api/cache.go:// RemoveSnapshot removes a server from the cache
pkg/api/cache.go:func (c *ScalewayCache) RemoveSnapshot(identifier string) {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	delete(c.Snapshots, identifier)
pkg/api/cache.go:	c.Modified = true
pkg/api/cache.go:}
pkg/api/cache.go:// ClearSnapshots removes all snapshots from the cache
pkg/api/cache.go:func (c *ScalewayCache) ClearSnapshots() {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	c.Snapshots = make(map[string][CacheMaxfield]string)
pkg/api/cache.go:	c.Modified = true
pkg/api/cache.go:}
pkg/api/cache.go:// InsertVolume registers an volume in the cache
pkg/api/cache.go:func (c *ScalewayCache) InsertVolume(identifier, region, arch, owner, name string) {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	fields, exists := c.Volumes[identifier]
pkg/api/cache.go:	if !exists || fields[CacheTitle] != name {
pkg/api/cache.go:		c.Volumes[identifier] = [CacheMaxfield]string{region, arch, owner, name}
pkg/api/cache.go:		c.Modified = true
pkg/api/cache.go:	}
pkg/api/cache.go:}
pkg/api/cache.go:// RemoveVolume removes a server from the cache
pkg/api/cache.go:func (c *ScalewayCache) RemoveVolume(identifier string) {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	delete(c.Volumes, identifier)
pkg/api/cache.go:	c.Modified = true
pkg/api/cache.go:}
pkg/api/cache.go:// ClearVolumes removes all volumes from the cache
pkg/api/cache.go:func (c *ScalewayCache) ClearVolumes() {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	c.Volumes = make(map[string][CacheMaxfield]string)
pkg/api/cache.go:	c.Modified = true
pkg/api/cache.go:}
pkg/api/cache.go:// InsertBootscript registers an bootscript in the cache
pkg/api/cache.go:func (c *ScalewayCache) InsertBootscript(identifier, region, arch, owner, name string) {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	fields, exists := c.Bootscripts[identifier]
pkg/api/cache.go:	if !exists || fields[CacheTitle] != name {
pkg/api/cache.go:		c.Bootscripts[identifier] = [CacheMaxfield]string{region, arch, owner, name}
pkg/api/cache.go:		c.Modified = true
pkg/api/cache.go:	}
pkg/api/cache.go:}
pkg/api/cache.go:// RemoveBootscript removes a bootscript from the cache
pkg/api/cache.go:func (c *ScalewayCache) RemoveBootscript(identifier string) {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	delete(c.Bootscripts, identifier)
pkg/api/cache.go:	c.Modified = true
pkg/api/cache.go:}
pkg/api/cache.go:// ClearBootscripts removes all bootscripts from the cache
pkg/api/cache.go:func (c *ScalewayCache) ClearBootscripts() {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	c.Bootscripts = make(map[string][CacheMaxfield]string)
pkg/api/cache.go:	c.Modified = true
pkg/api/cache.go:}
pkg/api/cache.go:// GetNbServers returns the number of servers in the cache
pkg/api/cache.go:func (c *ScalewayCache) GetNbServers() int {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	return len(c.Servers)
pkg/api/cache.go:}
pkg/api/cache.go:// GetNbImages returns the number of images in the cache
pkg/api/cache.go:func (c *ScalewayCache) GetNbImages() int {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	return len(c.Images)
pkg/api/cache.go:}
pkg/api/cache.go:// GetNbSnapshots returns the number of snapshots in the cache
pkg/api/cache.go:func (c *ScalewayCache) GetNbSnapshots() int {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	return len(c.Snapshots)
pkg/api/cache.go:}
pkg/api/cache.go:// GetNbVolumes returns the number of volumes in the cache
pkg/api/cache.go:func (c *ScalewayCache) GetNbVolumes() int {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	return len(c.Volumes)
pkg/api/cache.go:}
pkg/api/cache.go:// GetNbBootscripts returns the number of bootscripts in the cache
pkg/api/cache.go:func (c *ScalewayCache) GetNbBootscripts() int {
pkg/api/cache.go:	c.Lock.Lock()
pkg/api/cache.go:	defer c.Lock.Unlock()
pkg/api/cache.go:	return len(c.Bootscripts)
pkg/api/cache.go:}
pkg/api/helpers.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/api/helpers.go:// Use of this source code is governed by a MIT-style
pkg/api/helpers.go:// license that can be found in the LICENSE.md file.
pkg/api/helpers.go:package api
pkg/api/helpers.go:import (
pkg/api/helpers.go:	"fmt"
pkg/api/helpers.go:	"os"
pkg/api/helpers.go:	"sort"
pkg/api/helpers.go:	"strings"
pkg/api/helpers.go:	"sync"
pkg/api/helpers.go:	"time"
pkg/api/helpers.go:	"github.com/Sirupsen/logrus"
pkg/api/helpers.go:	log "github.com/Sirupsen/logrus"
pkg/api/helpers.go:	"github.com/docker/docker/pkg/namesgenerator"
pkg/api/helpers.go:	"github.com/dustin/go-humanize"
pkg/api/helpers.go:	"github.com/moul/anonuuid"
pkg/api/helpers.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/api/helpers.go:)
pkg/api/helpers.go:// ScalewayResolvedIdentifier represents a list of matching identifier for a specifier pattern
pkg/api/helpers.go:type ScalewayResolvedIdentifier struct {
pkg/api/helpers.go:	// Identifiers holds matching identifiers
pkg/api/helpers.go:	Identifiers ScalewayResolverResults
pkg/api/helpers.go:	// Needle is the criteria used to lookup identifiers
pkg/api/helpers.go:	Needle string
pkg/api/helpers.go:}
pkg/api/helpers.go:// ScalewayImageInterface is an interface to multiple Scaleway items
pkg/api/helpers.go:type ScalewayImageInterface struct {
pkg/api/helpers.go:	CreationDate time.Time
pkg/api/helpers.go:	Identifier   string
pkg/api/helpers.go:	Name         string
pkg/api/helpers.go:	Tag          string
pkg/api/helpers.go:	VirtualSize  float64
pkg/api/helpers.go:	Public       bool
pkg/api/helpers.go:	Type         string
pkg/api/helpers.go:	Organization string
pkg/api/helpers.go:	Arch         string
pkg/api/helpers.go:	Region       string
pkg/api/helpers.go:}
pkg/api/helpers.go:// ResolveGateway tries to resolve a server public ip address, else returns the input string, i.e. IPv4, hostname
pkg/api/helpers.go:func ResolveGateway(api *ScalewayAPI, gateway string) (string, error) {
pkg/api/helpers.go:	if gateway == "" {
pkg/api/helpers.go:		return "", nil
pkg/api/helpers.go:	}
pkg/api/helpers.go:	// Parses optional type prefix, i.e: "server:name" -> "name"
pkg/api/helpers.go:	_, gateway = parseNeedle(gateway)
pkg/api/helpers.go:	servers, err := api.ResolveServer(gateway)
pkg/api/helpers.go:	if err != nil {
pkg/api/helpers.go:		return "", err
pkg/api/helpers.go:	}
pkg/api/helpers.go:	if len(servers) == 0 {
pkg/api/helpers.go:		return gateway, nil
pkg/api/helpers.go:	}
pkg/api/helpers.go:	if len(servers) > 1 {
pkg/api/helpers.go:		return "", showResolverResults(gateway, servers)
pkg/api/helpers.go:	}
pkg/api/helpers.go:	// if len(servers) == 1 {
pkg/api/helpers.go:	server, err := api.GetServer(servers[0].Identifier)
pkg/api/helpers.go:	if err != nil {
pkg/api/helpers.go:		return "", err
pkg/api/helpers.go:	}
pkg/api/helpers.go:	return server.PublicAddress.IP, nil
pkg/api/helpers.go:}
pkg/api/helpers.go:// CreateVolumeFromHumanSize creates a volume on the API with a human readable size
pkg/api/helpers.go:func CreateVolumeFromHumanSize(api *ScalewayAPI, size string) (*string, error) {
pkg/api/helpers.go:	bytes, err := humanize.ParseBytes(size)
pkg/api/helpers.go:	if err != nil {
pkg/api/helpers.go:		return nil, err
pkg/api/helpers.go:	}
pkg/api/helpers.go:	var newVolume ScalewayVolumeDefinition
pkg/api/helpers.go:	newVolume.Name = size
pkg/api/helpers.go:	newVolume.Size = bytes
pkg/api/helpers.go:	newVolume.Type = "l_ssd"
pkg/api/helpers.go:	volumeID, err := api.PostVolume(newVolume)
pkg/api/helpers.go:	if err != nil {
pkg/api/helpers.go:		return nil, err
pkg/api/helpers.go:	}
pkg/api/helpers.go:	return &volumeID, nil
pkg/api/helpers.go:}
pkg/api/helpers.go:// fillIdentifierCache fills the cache by fetching from the API
pkg/api/helpers.go:func fillIdentifierCache(api *ScalewayAPI, identifierType int) {
pkg/api/helpers.go:	log.Debugf("Filling the cache")
pkg/api/helpers.go:	var wg sync.WaitGroup
pkg/api/helpers.go:	wg.Add(5)
pkg/api/helpers.go:	go func() {
pkg/api/helpers.go:		if identifierType&(IdentifierUnknown|IdentifierServer) > 0 {
pkg/api/helpers.go:			api.GetServers(true, 0)
pkg/api/helpers.go:		}
pkg/api/helpers.go:		wg.Done()
pkg/api/helpers.go:	}()
pkg/api/helpers.go:	go func() {
pkg/api/helpers.go:		if identifierType&(IdentifierUnknown|IdentifierImage) > 0 {
pkg/api/helpers.go:			api.GetImages()
pkg/api/helpers.go:		}
pkg/api/helpers.go:		wg.Done()
pkg/api/helpers.go:	}()
pkg/api/helpers.go:	go func() {
pkg/api/helpers.go:		if identifierType&(IdentifierUnknown|IdentifierSnapshot) > 0 {
pkg/api/helpers.go:			api.GetSnapshots()
pkg/api/helpers.go:		}
pkg/api/helpers.go:		wg.Done()
pkg/api/helpers.go:	}()
pkg/api/helpers.go:	go func() {
pkg/api/helpers.go:		if identifierType&(IdentifierUnknown|IdentifierVolume) > 0 {
pkg/api/helpers.go:			api.GetVolumes()
pkg/api/helpers.go:		}
pkg/api/helpers.go:		wg.Done()
pkg/api/helpers.go:	}()
pkg/api/helpers.go:	go func() {
pkg/api/helpers.go:		if identifierType&(IdentifierUnknown|IdentifierBootscript) > 0 {
pkg/api/helpers.go:			api.GetBootscripts()
pkg/api/helpers.go:		}
pkg/api/helpers.go:		wg.Done()
pkg/api/helpers.go:	}()
pkg/api/helpers.go:	wg.Wait()
pkg/api/helpers.go:}
pkg/api/helpers.go:// GetIdentifier returns a an identifier if the resolved needles only match one element, else, it exists the program
pkg/api/helpers.go:func GetIdentifier(api *ScalewayAPI, needle string) (*ScalewayResolverResult, error) {
pkg/api/helpers.go:	idents := ResolveIdentifier(api, needle)
pkg/api/helpers.go:	if len(idents) == 1 {
pkg/api/helpers.go:		return &idents[0], nil
pkg/api/helpers.go:	}
pkg/api/helpers.go:	if len(idents) == 0 {
pkg/api/helpers.go:		return nil, fmt.Errorf("No such identifier: %s", needle)
pkg/api/helpers.go:	}
pkg/api/helpers.go:	sort.Sort(idents)
pkg/api/helpers.go:	for _, identifier := range idents {
pkg/api/helpers.go:		// FIXME: also print the name
pkg/api/helpers.go:		fmt.Fprintf(os.Stderr, "- %s\n", identifier.Identifier)
pkg/api/helpers.go:	}
pkg/api/helpers.go:	return nil, fmt.Errorf("Too many candidates for %s (%d)", needle, len(idents))
pkg/api/helpers.go:}
pkg/api/helpers.go:// ResolveIdentifier resolves needle provided by the user
pkg/api/helpers.go:func ResolveIdentifier(api *ScalewayAPI, needle string) ScalewayResolverResults {
pkg/api/helpers.go:	idents := api.Cache.LookUpIdentifiers(needle)
pkg/api/helpers.go:	if len(idents) > 0 {
pkg/api/helpers.go:		return idents
pkg/api/helpers.go:	}
pkg/api/helpers.go:	identifierType, _ := parseNeedle(needle)
pkg/api/helpers.go:	fillIdentifierCache(api, identifierType)
pkg/api/helpers.go:	idents = api.Cache.LookUpIdentifiers(needle)
pkg/api/helpers.go:	return idents
pkg/api/helpers.go:}
pkg/api/helpers.go:// ResolveIdentifiers resolves needles provided by the user
pkg/api/helpers.go:func ResolveIdentifiers(api *ScalewayAPI, needles []string, out chan ScalewayResolvedIdentifier) {
pkg/api/helpers.go:	// first attempt, only lookup from the cache
pkg/api/helpers.go:	var unresolved []string
pkg/api/helpers.go:	for _, needle := range needles {
pkg/api/helpers.go:		idents := api.Cache.LookUpIdentifiers(needle)
pkg/api/helpers.go:		if len(idents) == 0 {
pkg/api/helpers.go:			unresolved = append(unresolved, needle)
pkg/api/helpers.go:		} else {
pkg/api/helpers.go:			out <- ScalewayResolvedIdentifier{
pkg/api/helpers.go:				Identifiers: idents,
pkg/api/helpers.go:				Needle:      needle,
pkg/api/helpers.go:			}
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	// fill the cache by fetching from the API and resolve missing identifiers
pkg/api/helpers.go:	if len(unresolved) > 0 {
pkg/api/helpers.go:		// compute identifierType:
pkg/api/helpers.go:		//   if identifierType is the same for every unresolved needle,
pkg/api/helpers.go:		//   we use it directly, else, we choose IdentifierUnknown to
pkg/api/helpers.go:		//   fulfill every types of cache
pkg/api/helpers.go:		identifierType, _ := parseNeedle(unresolved[0])
pkg/api/helpers.go:		for _, needle := range unresolved {
pkg/api/helpers.go:			newIdentifierType, _ := parseNeedle(needle)
pkg/api/helpers.go:			if identifierType != newIdentifierType {
pkg/api/helpers.go:				identifierType = IdentifierUnknown
pkg/api/helpers.go:				break
pkg/api/helpers.go:			}
pkg/api/helpers.go:		}
pkg/api/helpers.go:		// fill all the cache
pkg/api/helpers.go:		fillIdentifierCache(api, identifierType)
pkg/api/helpers.go:		// lookup again in the cache
pkg/api/helpers.go:		for _, needle := range unresolved {
pkg/api/helpers.go:			idents := api.Cache.LookUpIdentifiers(needle)
pkg/api/helpers.go:			out <- ScalewayResolvedIdentifier{
pkg/api/helpers.go:				Identifiers: idents,
pkg/api/helpers.go:				Needle:      needle,
pkg/api/helpers.go:			}
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	close(out)
pkg/api/helpers.go:}
pkg/api/helpers.go:// InspectIdentifierResult is returned by `InspectIdentifiers` and contains the inspected `Object` with its `Type`
pkg/api/helpers.go:type InspectIdentifierResult struct {
pkg/api/helpers.go:	Type   int
pkg/api/helpers.go:	Object interface{}
pkg/api/helpers.go:}
pkg/api/helpers.go:// InspectIdentifiers inspects identifiers concurrently
pkg/api/helpers.go:func InspectIdentifiers(api *ScalewayAPI, ci chan ScalewayResolvedIdentifier, cj chan InspectIdentifierResult) {
pkg/api/helpers.go:	var wg sync.WaitGroup
pkg/api/helpers.go:	for {
pkg/api/helpers.go:		idents, ok := <-ci
pkg/api/helpers.go:		if !ok {
pkg/api/helpers.go:			break
pkg/api/helpers.go:		}
pkg/api/helpers.go:		if len(idents.Identifiers) != 1 {
pkg/api/helpers.go:			if len(idents.Identifiers) == 0 {
pkg/api/helpers.go:				log.Errorf("Unable to resolve identifier %s", idents.Needle)
pkg/api/helpers.go:			} else {
pkg/api/helpers.go:				logrus.Fatal(showResolverResults(idents.Needle, idents.Identifiers))
pkg/api/helpers.go:			}
pkg/api/helpers.go:		} else {
pkg/api/helpers.go:			ident := idents.Identifiers[0]
pkg/api/helpers.go:			wg.Add(1)
pkg/api/helpers.go:			go func() {
pkg/api/helpers.go:				if ident.Type == IdentifierServer {
pkg/api/helpers.go:					server, err := api.GetServer(ident.Identifier)
pkg/api/helpers.go:					if err == nil {
pkg/api/helpers.go:						cj <- InspectIdentifierResult{
pkg/api/helpers.go:							Type:   ident.Type,
pkg/api/helpers.go:							Object: server,
pkg/api/helpers.go:						}
pkg/api/helpers.go:					}
pkg/api/helpers.go:				} else if ident.Type == IdentifierImage {
pkg/api/helpers.go:					image, err := api.GetImage(ident.Identifier)
pkg/api/helpers.go:					if err == nil {
pkg/api/helpers.go:						cj <- InspectIdentifierResult{
pkg/api/helpers.go:							Type:   ident.Type,
pkg/api/helpers.go:							Object: image,
pkg/api/helpers.go:						}
pkg/api/helpers.go:					}
pkg/api/helpers.go:				} else if ident.Type == IdentifierSnapshot {
pkg/api/helpers.go:					snap, err := api.GetSnapshot(ident.Identifier)
pkg/api/helpers.go:					if err == nil {
pkg/api/helpers.go:						cj <- InspectIdentifierResult{
pkg/api/helpers.go:							Type:   ident.Type,
pkg/api/helpers.go:							Object: snap,
pkg/api/helpers.go:						}
pkg/api/helpers.go:					}
pkg/api/helpers.go:				} else if ident.Type == IdentifierVolume {
pkg/api/helpers.go:					volume, err := api.GetVolume(ident.Identifier)
pkg/api/helpers.go:					if err == nil {
pkg/api/helpers.go:						cj <- InspectIdentifierResult{
pkg/api/helpers.go:							Type:   ident.Type,
pkg/api/helpers.go:							Object: volume,
pkg/api/helpers.go:						}
pkg/api/helpers.go:					}
pkg/api/helpers.go:				} else if ident.Type == IdentifierBootscript {
pkg/api/helpers.go:					bootscript, err := api.GetBootscript(ident.Identifier)
pkg/api/helpers.go:					if err == nil {
pkg/api/helpers.go:						cj <- InspectIdentifierResult{
pkg/api/helpers.go:							Type:   ident.Type,
pkg/api/helpers.go:							Object: bootscript,
pkg/api/helpers.go:						}
pkg/api/helpers.go:					}
pkg/api/helpers.go:				}
pkg/api/helpers.go:				wg.Done()
pkg/api/helpers.go:			}()
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	wg.Wait()
pkg/api/helpers.go:	close(cj)
pkg/api/helpers.go:}
pkg/api/helpers.go:// ConfigCreateServer represents the options sent to CreateServer and defining a server
pkg/api/helpers.go:type ConfigCreateServer struct {
pkg/api/helpers.go:	ImageName         string
pkg/api/helpers.go:	Name              string
pkg/api/helpers.go:	Bootscript        string
pkg/api/helpers.go:	Env               string
pkg/api/helpers.go:	AdditionalVolumes string
pkg/api/helpers.go:	DynamicIPRequired bool
pkg/api/helpers.go:	IP                string
pkg/api/helpers.go:	CommercialType    string
pkg/api/helpers.go:}
pkg/api/helpers.go:// CreateServer creates a server using API based on typical server fields
pkg/api/helpers.go:func CreateServer(api *ScalewayAPI, c *ConfigCreateServer) (string, error) {
pkg/api/helpers.go:	if c.CommercialType == "" {
pkg/api/helpers.go:		c.CommercialType = os.Getenv("SCW_COMMERCIAL_TYPE")
pkg/api/helpers.go:		if c.CommercialType == "" {
pkg/api/helpers.go:			c.CommercialType = "C1"
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	if c.Name == "" {
pkg/api/helpers.go:		c.Name = strings.Replace(namesgenerator.GetRandomName(0), "_", "-", -1)
pkg/api/helpers.go:	}
pkg/api/helpers.go:	var server ScalewayServerDefinition
pkg/api/helpers.go:	server.CommercialType = c.CommercialType
pkg/api/helpers.go:	server.Volumes = make(map[string]string)
pkg/api/helpers.go:	server.DynamicIPRequired = &c.DynamicIPRequired
pkg/api/helpers.go:	if c.IP != "" {
pkg/api/helpers.go:		if anonuuid.IsUUID(c.IP) == nil {
pkg/api/helpers.go:			server.PublicIP = c.IP
pkg/api/helpers.go:		} else {
pkg/api/helpers.go:			ips, err := api.GetIPS()
pkg/api/helpers.go:			if err != nil {
pkg/api/helpers.go:				return "", err
pkg/api/helpers.go:			}
pkg/api/helpers.go:			for _, ip := range ips.IPS {
pkg/api/helpers.go:				if ip.Address == c.IP {
pkg/api/helpers.go:					server.PublicIP = ip.ID
pkg/api/helpers.go:					break
pkg/api/helpers.go:				}
pkg/api/helpers.go:			}
pkg/api/helpers.go:			if server.PublicIP == "" {
pkg/api/helpers.go:				return "", fmt.Errorf("IP address %v not found", c.IP)
pkg/api/helpers.go:			}
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	server.Tags = []string{}
pkg/api/helpers.go:	if c.Env != "" {
pkg/api/helpers.go:		server.Tags = strings.Split(c.Env, " ")
pkg/api/helpers.go:	}
pkg/api/helpers.go:	if c.AdditionalVolumes != "" {
pkg/api/helpers.go:		volumes := strings.Split(c.AdditionalVolumes, " ")
pkg/api/helpers.go:		for i := range volumes {
pkg/api/helpers.go:			volumeID, err := CreateVolumeFromHumanSize(api, volumes[i])
pkg/api/helpers.go:			if err != nil {
pkg/api/helpers.go:				return "", err
pkg/api/helpers.go:			}
pkg/api/helpers.go:			volumeIDx := fmt.Sprintf("%d", i+1)
pkg/api/helpers.go:			server.Volumes[volumeIDx] = *volumeID
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	// FIXME build images only on ARM ?
pkg/api/helpers.go:	imageIdentifier := &ScalewayImageIdentifier{
pkg/api/helpers.go:		Arch:   "arm",
pkg/api/helpers.go:		Region: "fr-1",
pkg/api/helpers.go:	}
pkg/api/helpers.go:	server.Name = c.Name
pkg/api/helpers.go:	inheritingVolume := false
pkg/api/helpers.go:	_, err := humanize.ParseBytes(c.ImageName)
pkg/api/helpers.go:	if err == nil {
pkg/api/helpers.go:		// Create a new root volume
pkg/api/helpers.go:		volumeID, err := CreateVolumeFromHumanSize(api, c.ImageName)
pkg/api/helpers.go:		if err != nil {
pkg/api/helpers.go:			return "", err
pkg/api/helpers.go:		}
pkg/api/helpers.go:		server.Volumes["0"] = *volumeID
pkg/api/helpers.go:	} else {
pkg/api/helpers.go:		// Use an existing image
pkg/api/helpers.go:		// FIXME: handle snapshots
pkg/api/helpers.go:		inheritingVolume = true
pkg/api/helpers.go:		imageIdentifier, err = api.GetImageID(c.ImageName)
pkg/api/helpers.go:		if err != nil {
pkg/api/helpers.go:			return "", err
pkg/api/helpers.go:		}
pkg/api/helpers.go:		if imageIdentifier.Identifier != "" {
pkg/api/helpers.go:			server.Image = &imageIdentifier.Identifier
pkg/api/helpers.go:		} else {
pkg/api/helpers.go:			snapshotID, err := api.GetSnapshotID(c.ImageName)
pkg/api/helpers.go:			if err != nil {
pkg/api/helpers.go:				return "", err
pkg/api/helpers.go:			}
pkg/api/helpers.go:			snapshot, err := api.GetSnapshot(snapshotID)
pkg/api/helpers.go:			if err != nil {
pkg/api/helpers.go:				return "", err
pkg/api/helpers.go:			}
pkg/api/helpers.go:			if snapshot.BaseVolume.Identifier == "" {
pkg/api/helpers.go:				return "", fmt.Errorf("snapshot %v does not have base volume", snapshot.Name)
pkg/api/helpers.go:			}
pkg/api/helpers.go:			server.Volumes["0"] = snapshot.BaseVolume.Identifier
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	if c.Bootscript != "" {
pkg/api/helpers.go:		bootscript, err := api.GetBootscriptID(c.Bootscript, imageIdentifier.Arch)
pkg/api/helpers.go:		if err != nil {
pkg/api/helpers.go:			return "", err
pkg/api/helpers.go:		}
pkg/api/helpers.go:		server.Bootscript = &bootscript
pkg/api/helpers.go:	}
pkg/api/helpers.go:	serverID, err := api.PostServer(server)
pkg/api/helpers.go:	if err != nil {
pkg/api/helpers.go:		return "", err
pkg/api/helpers.go:	}
pkg/api/helpers.go:	// For inherited volumes, we prefix the name with server hostname
pkg/api/helpers.go:	if inheritingVolume {
pkg/api/helpers.go:		createdServer, err := api.GetServer(serverID)
pkg/api/helpers.go:		if err != nil {
pkg/api/helpers.go:			return "", err
pkg/api/helpers.go:		}
pkg/api/helpers.go:		currentVolume := createdServer.Volumes["0"]
pkg/api/helpers.go:		var volumePayload ScalewayVolumePutDefinition
pkg/api/helpers.go:		newName := fmt.Sprintf("%s-%s", createdServer.Hostname, currentVolume.Name)
pkg/api/helpers.go:		volumePayload.Name = &newName
pkg/api/helpers.go:		volumePayload.CreationDate = &currentVolume.CreationDate
pkg/api/helpers.go:		volumePayload.Organization = &currentVolume.Organization
pkg/api/helpers.go:		volumePayload.Server.Identifier = &currentVolume.Server.Identifier
pkg/api/helpers.go:		volumePayload.Server.Name = &currentVolume.Server.Name
pkg/api/helpers.go:		volumePayload.Identifier = &currentVolume.Identifier
pkg/api/helpers.go:		volumePayload.Size = &currentVolume.Size
pkg/api/helpers.go:		volumePayload.ModificationDate = &currentVolume.ModificationDate
pkg/api/helpers.go:		volumePayload.ExportURI = &currentVolume.ExportURI
pkg/api/helpers.go:		volumePayload.VolumeType = &currentVolume.VolumeType
pkg/api/helpers.go:		err = api.PutVolume(currentVolume.Identifier, volumePayload)
pkg/api/helpers.go:		if err != nil {
pkg/api/helpers.go:			return "", err
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	return serverID, nil
pkg/api/helpers.go:}
pkg/api/helpers.go:// WaitForServerState asks API in a loop until a server matches a wanted state
pkg/api/helpers.go:func WaitForServerState(api *ScalewayAPI, serverID string, targetState string) (*ScalewayServer, error) {
pkg/api/helpers.go:	var server *ScalewayServer
pkg/api/helpers.go:	var err error
pkg/api/helpers.go:	var currentState string
pkg/api/helpers.go:	for {
pkg/api/helpers.go:		server, err = api.GetServer(serverID)
pkg/api/helpers.go:		if err != nil {
pkg/api/helpers.go:			return nil, err
pkg/api/helpers.go:		}
pkg/api/helpers.go:		if currentState != server.State {
pkg/api/helpers.go:			log.Infof("Server changed state to '%s'", server.State)
pkg/api/helpers.go:			currentState = server.State
pkg/api/helpers.go:		}
pkg/api/helpers.go:		if server.State == targetState {
pkg/api/helpers.go:			break
pkg/api/helpers.go:		}
pkg/api/helpers.go:		time.Sleep(1 * time.Second)
pkg/api/helpers.go:	}
pkg/api/helpers.go:	return server, nil
pkg/api/helpers.go:}
pkg/api/helpers.go:// WaitForServerReady wait for a server state to be running, then wait for the SSH port to be available
pkg/api/helpers.go:func WaitForServerReady(api *ScalewayAPI, serverID string, gateway string) (*ScalewayServer, error) {
pkg/api/helpers.go:	promise := make(chan bool)
pkg/api/helpers.go:	var server *ScalewayServer
pkg/api/helpers.go:	var err error
pkg/api/helpers.go:	var currentState string
pkg/api/helpers.go:	go func() {
pkg/api/helpers.go:		defer close(promise)
pkg/api/helpers.go:		for {
pkg/api/helpers.go:			server, err = api.GetServer(serverID)
pkg/api/helpers.go:			if err != nil {
pkg/api/helpers.go:				promise <- false
pkg/api/helpers.go:				return
pkg/api/helpers.go:			}
pkg/api/helpers.go:			if currentState != server.State {
pkg/api/helpers.go:				log.Infof("Server changed state to '%s'", server.State)
pkg/api/helpers.go:				currentState = server.State
pkg/api/helpers.go:			}
pkg/api/helpers.go:			if server.State == "running" {
pkg/api/helpers.go:				break
pkg/api/helpers.go:			}
pkg/api/helpers.go:			if server.State == "stopped" {
pkg/api/helpers.go:				err = fmt.Errorf("The server has been stopped")
pkg/api/helpers.go:				promise <- false
pkg/api/helpers.go:				return
pkg/api/helpers.go:			}
pkg/api/helpers.go:			time.Sleep(1 * time.Second)
pkg/api/helpers.go:		}
pkg/api/helpers.go:		if gateway == "" {
pkg/api/helpers.go:			log.Debugf("Waiting for server SSH port")
pkg/api/helpers.go:			dest := fmt.Sprintf("%s:22", server.PublicAddress.IP)
pkg/api/helpers.go:			err = utils.WaitForTCPPortOpen(dest)
pkg/api/helpers.go:			if err != nil {
pkg/api/helpers.go:				promise <- false
pkg/api/helpers.go:				return
pkg/api/helpers.go:			}
pkg/api/helpers.go:		} else {
pkg/api/helpers.go:			log.Debugf("Waiting for gateway SSH port")
pkg/api/helpers.go:			dest := fmt.Sprintf("%s:22", gateway)
pkg/api/helpers.go:			err = utils.WaitForTCPPortOpen(dest)
pkg/api/helpers.go:			if err != nil {
pkg/api/helpers.go:				promise <- false
pkg/api/helpers.go:				return
pkg/api/helpers.go:			}
pkg/api/helpers.go:			log.Debugf("Waiting 30 more seconds, for SSH to be ready")
pkg/api/helpers.go:			time.Sleep(30 * time.Second)
pkg/api/helpers.go:			// FIXME: check for SSH port through the gateway
pkg/api/helpers.go:		}
pkg/api/helpers.go:		promise <- true
pkg/api/helpers.go:	}()
pkg/api/helpers.go:	loop := 0
pkg/api/helpers.go:	for {
pkg/api/helpers.go:		select {
pkg/api/helpers.go:		case done := <-promise:
pkg/api/helpers.go:			utils.LogQuiet("\r \r")
pkg/api/helpers.go:			if done == false {
pkg/api/helpers.go:				return nil, err
pkg/api/helpers.go:			}
pkg/api/helpers.go:			return server, nil
pkg/api/helpers.go:		case <-time.After(time.Millisecond * 100):
pkg/api/helpers.go:			utils.LogQuiet(fmt.Sprintf("\r%c\r", "-\\|/"[loop%4]))
pkg/api/helpers.go:			loop = loop + 1
pkg/api/helpers.go:			if loop == 5 {
pkg/api/helpers.go:				loop = 0
pkg/api/helpers.go:			}
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:}
pkg/api/helpers.go:// WaitForServerStopped wait for a server state to be stopped
pkg/api/helpers.go:func WaitForServerStopped(api *ScalewayAPI, serverID string) (*ScalewayServer, error) {
pkg/api/helpers.go:	server, err := WaitForServerState(api, serverID, "stopped")
pkg/api/helpers.go:	if err != nil {
pkg/api/helpers.go:		return nil, err
pkg/api/helpers.go:	}
pkg/api/helpers.go:	return server, nil
pkg/api/helpers.go:}
pkg/api/helpers.go:// ByCreationDate sorts images by CreationDate field
pkg/api/helpers.go:type ByCreationDate []ScalewayImageInterface
pkg/api/helpers.go:func (a ByCreationDate) Len() int           { return len(a) }
pkg/api/helpers.go:func (a ByCreationDate) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }
pkg/api/helpers.go:func (a ByCreationDate) Less(i, j int) bool { return a[j].CreationDate.Before(a[i].CreationDate) }
pkg/api/helpers.go:// StartServer start a server based on its needle, can optionaly block while server is booting
pkg/api/helpers.go:func StartServer(api *ScalewayAPI, needle string, wait bool) error {
pkg/api/helpers.go:	server, err := api.GetServerID(needle)
pkg/api/helpers.go:	if err != nil {
pkg/api/helpers.go:		return err
pkg/api/helpers.go:	}
pkg/api/helpers.go:	if err = api.PostServerAction(server, "poweron"); err != nil {
pkg/api/helpers.go:		if err.Error() == "server should be stopped" {
pkg/api/helpers.go:			return fmt.Errorf("server %s is already started: %v", server, err)
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	if wait {
pkg/api/helpers.go:		_, err = WaitForServerReady(api, server, "")
pkg/api/helpers.go:		if err != nil {
pkg/api/helpers.go:			return fmt.Errorf("failed to wait for server %s to be ready, %v", needle, err)
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	return nil
pkg/api/helpers.go:}
pkg/api/helpers.go:// StartServerOnce wraps StartServer for golang channel
pkg/api/helpers.go:func StartServerOnce(api *ScalewayAPI, needle string, wait bool, successChan chan bool, errChan chan error) {
pkg/api/helpers.go:	err := StartServer(api, needle, wait)
pkg/api/helpers.go:	if err != nil {
pkg/api/helpers.go:		errChan <- err
pkg/api/helpers.go:		return
pkg/api/helpers.go:	}
pkg/api/helpers.go:	fmt.Println(needle)
pkg/api/helpers.go:	successChan <- true
pkg/api/helpers.go:}
pkg/api/helpers.go:// DeleteServerSafe tries to delete a server using multiple ways
pkg/api/helpers.go:func (a *ScalewayAPI) DeleteServerSafe(serverID string) error {
pkg/api/helpers.go:	// FIXME: also delete attached volumes and ip address
pkg/api/helpers.go:	// FIXME: call delete and stop -t in parallel to speed up process
pkg/api/helpers.go:	err := a.DeleteServer(serverID)
pkg/api/helpers.go:	if err == nil {
pkg/api/helpers.go:		logrus.Infof("Server '%s' successfuly deleted", serverID)
pkg/api/helpers.go:		return nil
pkg/api/helpers.go:	}
pkg/api/helpers.go:	err = a.PostServerAction(serverID, "terminate")
pkg/api/helpers.go:	if err == nil {
pkg/api/helpers.go:		logrus.Infof("Server '%s' successfuly terminated", serverID)
pkg/api/helpers.go:		return nil
pkg/api/helpers.go:	}
pkg/api/helpers.go:	// FIXME: retry in a loop until timeout or Control+C
pkg/api/helpers.go:	logrus.Errorf("Failed to delete server %s", serverID)
pkg/api/helpers.go:	logrus.Errorf("Try to run 'scw rm -f %s' later", serverID)
pkg/api/helpers.go:	return err
pkg/api/helpers.go:}
pkg/api/helpers.go:// GetSSHFingerprintFromServer returns an array which containts ssh-host-fingerprints
pkg/api/helpers.go:func (a *ScalewayAPI) GetSSHFingerprintFromServer(serverID string) []string {
pkg/api/helpers.go:	ret := []string{}
pkg/api/helpers.go:	if value, err := a.GetUserdata(serverID, "ssh-host-fingerprints"); err == nil {
pkg/api/helpers.go:		PublicKeys := strings.Split(string(*value), "\n")
pkg/api/helpers.go:		for i := range PublicKeys {
pkg/api/helpers.go:			if fingerprint, err := utils.SSHGetFingerprint([]byte(PublicKeys[i])); err == nil {
pkg/api/helpers.go:				ret = append(ret, fingerprint)
pkg/api/helpers.go:			}
pkg/api/helpers.go:		}
pkg/api/helpers.go:	}
pkg/api/helpers.go:	return ret
pkg/api/helpers.go:}
pkg/cli/cmd_attach.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_attach.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_attach.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_attach.go:package cli
pkg/cli/cmd_attach.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_attach.go:var cmdAttach = &Command{
pkg/cli/cmd_attach.go:	Exec:        runAttach,
pkg/cli/cmd_attach.go:	UsageLine:   "attach [OPTIONS] SERVER",
pkg/cli/cmd_attach.go:	Description: "Attach to a server serial console",
pkg/cli/cmd_attach.go:	Help:        "Attach to a running server serial console.",
pkg/cli/cmd_attach.go:	Examples: `
pkg/cli/cmd_attach.go:    $ scw attach my-running-server
pkg/cli/cmd_attach.go:    $ scw attach $(scw start my-stopped-server)
pkg/cli/cmd_attach.go:    $ scw attach $(scw start $(scw create ubuntu-vivid))
pkg/cli/cmd_attach.go:`,
pkg/cli/cmd_attach.go:}
pkg/cli/cmd_attach.go:func init() {
pkg/cli/cmd_attach.go:	cmdAttach.Flag.BoolVar(&attachHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_attach.go:	cmdAttach.Flag.BoolVar(&attachNoStdin, []string{"-no-stdin"}, false, "Do not attach stdin")
pkg/cli/cmd_attach.go:}
pkg/cli/cmd_attach.go:// Flags
pkg/cli/cmd_attach.go:var attachHelp bool    // -h, --help flag
pkg/cli/cmd_attach.go:var attachNoStdin bool // --no-stdin flag
pkg/cli/cmd_attach.go:func runAttach(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_attach.go:	if attachHelp {
pkg/cli/cmd_attach.go:		return cmd.PrintUsage()
pkg/cli/cmd_attach.go:	}
pkg/cli/cmd_attach.go:	if len(rawArgs) != 1 {
pkg/cli/cmd_attach.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_attach.go:	}
pkg/cli/cmd_attach.go:	args := commands.AttachArgs{
pkg/cli/cmd_attach.go:		NoStdin: attachNoStdin,
pkg/cli/cmd_attach.go:		Server:  rawArgs[0],
pkg/cli/cmd_attach.go:	}
pkg/cli/cmd_attach.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_attach.go:	return commands.RunAttach(ctx, args)
pkg/cli/cmd_attach.go:}
pkg/cli/cmd_commit.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_commit.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_commit.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_commit.go:package cli
pkg/cli/cmd_commit.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_commit.go:var cmdCommit = &Command{
pkg/cli/cmd_commit.go:	Exec:        runCommit,
pkg/cli/cmd_commit.go:	UsageLine:   "commit [OPTIONS] SERVER [NAME]",
pkg/cli/cmd_commit.go:	Description: "Create a new snapshot from a server's volume",
pkg/cli/cmd_commit.go:	Help:        "Create a new snapshot from a server's volume.",
pkg/cli/cmd_commit.go:	Examples: `
pkg/cli/cmd_commit.go:    $ scw commit my-stopped-server
pkg/cli/cmd_commit.go:    $ scw commit -v 1 my-stopped-server
pkg/cli/cmd_commit.go:`,
pkg/cli/cmd_commit.go:}
pkg/cli/cmd_commit.go:func init() {
pkg/cli/cmd_commit.go:	cmdCommit.Flag.IntVar(&commitVolume, []string{"v", "-volume"}, 0, "Volume slot")
pkg/cli/cmd_commit.go:	cmdCommit.Flag.BoolVar(&commitHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_commit.go:}
pkg/cli/cmd_commit.go:// Flags
pkg/cli/cmd_commit.go:var commitVolume int // -v, --volume flag
pkg/cli/cmd_commit.go:var commitHelp bool  // -h, --help flag
pkg/cli/cmd_commit.go:func runCommit(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_commit.go:	if commitHelp {
pkg/cli/cmd_commit.go:		return cmd.PrintUsage()
pkg/cli/cmd_commit.go:	}
pkg/cli/cmd_commit.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_commit.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_commit.go:	}
pkg/cli/cmd_commit.go:	args := commands.CommitArgs{
pkg/cli/cmd_commit.go:		Volume: commitVolume,
pkg/cli/cmd_commit.go:		Server: rawArgs[0],
pkg/cli/cmd_commit.go:		Name:   "",
pkg/cli/cmd_commit.go:	}
pkg/cli/cmd_commit.go:	if len(rawArgs) > 1 {
pkg/cli/cmd_commit.go:		args.Name = rawArgs[1]
pkg/cli/cmd_commit.go:	}
pkg/cli/cmd_commit.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_commit.go:	return commands.RunCommit(ctx, args)
pkg/cli/cmd_commit.go:}
pkg/cli/cmd_cp.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_cp.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_cp.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_cp.go:package cli
pkg/cli/cmd_cp.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_cp.go:var cmdCp = &Command{
pkg/cli/cmd_cp.go:	Exec:        runCp,
pkg/cli/cmd_cp.go:	UsageLine:   "cp [OPTIONS] SERVER:PATH|HOSTPATH|- SERVER:PATH|HOSTPATH|-",
pkg/cli/cmd_cp.go:	Description: "Copy files/folders from a PATH on the server to a HOSTDIR on the host",
pkg/cli/cmd_cp.go:	Help:        "Copy files/folders from a PATH on the server to a HOSTDIR on the host\nrunning the command. Use '-' to write the data as a tar file to STDOUT.",
pkg/cli/cmd_cp.go:	Examples: `
pkg/cli/cmd_cp.go:    $ scw cp path/to/my/local/file myserver:path
pkg/cli/cmd_cp.go:    $ scw cp --gateway=myotherserver path/to/my/local/file myserver:path
pkg/cli/cmd_cp.go:    $ scw cp myserver:path/to/file path/to/my/local/dir
pkg/cli/cmd_cp.go:    $ scw cp myserver:path/to/file myserver2:path/to/dir
pkg/cli/cmd_cp.go:    $ scw cp myserver:path/to/file - > myserver-pathtofile-backup.tar
pkg/cli/cmd_cp.go:    $ scw cp myserver:path/to/file - | tar -tvf -
pkg/cli/cmd_cp.go:    $ scw cp path/to/my/local/dir  myserver:path
pkg/cli/cmd_cp.go:    $ scw cp myserver:path/to/dir  path/to/my/local/dir
pkg/cli/cmd_cp.go:    $ scw cp myserver:path/to/dir  myserver2:path/to/dir
pkg/cli/cmd_cp.go:    $ scw cp myserver:path/to/dir  - > myserver-pathtodir-backup.tar
pkg/cli/cmd_cp.go:    $ scw cp myserver:path/to/dir  - | tar -tvf -
pkg/cli/cmd_cp.go:    $ cat archive.tar | scw cp - myserver:/path
pkg/cli/cmd_cp.go:    $ tar -cvf - . | scw cp - myserver:path
pkg/cli/cmd_cp.go:`,
pkg/cli/cmd_cp.go:}
pkg/cli/cmd_cp.go:func init() {
pkg/cli/cmd_cp.go:	cmdCp.Flag.BoolVar(&cpHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_cp.go:	cmdCp.Flag.StringVar(&cpGateway, []string{"g", "-gateway"}, "", "Use a SSH gateway")
pkg/cli/cmd_cp.go:}
pkg/cli/cmd_cp.go:// Flags
pkg/cli/cmd_cp.go:var cpHelp bool      // -h, --help flag
pkg/cli/cmd_cp.go:var cpGateway string // -g, --gateway flag
pkg/cli/cmd_cp.go:func runCp(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_cp.go:	if cpHelp {
pkg/cli/cmd_cp.go:		return cmd.PrintUsage()
pkg/cli/cmd_cp.go:	}
pkg/cli/cmd_cp.go:	if len(rawArgs) != 2 {
pkg/cli/cmd_cp.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_cp.go:	}
pkg/cli/cmd_cp.go:	args := commands.CpArgs{
pkg/cli/cmd_cp.go:		Gateway:     cpGateway,
pkg/cli/cmd_cp.go:		Source:      rawArgs[0],
pkg/cli/cmd_cp.go:		Destination: rawArgs[1],
pkg/cli/cmd_cp.go:	}
pkg/cli/cmd_cp.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_cp.go:	return commands.RunCp(ctx, args)
pkg/cli/cmd_cp.go:}
pkg/cli/cmd_create.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_create.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_create.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_create.go:package cli
pkg/cli/cmd_create.go:import (
pkg/cli/cmd_create.go:	"strings"
pkg/cli/cmd_create.go:	"github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_create.go:)
pkg/cli/cmd_create.go:var cmdCreate = &Command{
pkg/cli/cmd_create.go:	Exec:        runCreate,
pkg/cli/cmd_create.go:	UsageLine:   "create [OPTIONS] IMAGE",
pkg/cli/cmd_create.go:	Description: "Create a new server but do not start it",
pkg/cli/cmd_create.go:	Help:        "Create a new server but do not start it.",
pkg/cli/cmd_create.go:	Examples: `
pkg/cli/cmd_create.go:    $ scw create docker
pkg/cli/cmd_create.go:    $ scw create 10GB
pkg/cli/cmd_create.go:    $ scw create --bootscript=3.2.34 --env="boot=live rescue_image=http://j.mp/scaleway-ubuntu-trusty-tarball" 50GB
pkg/cli/cmd_create.go:    $ scw inspect $(scw create 1GB --bootscript=rescue --volume=50GB)
pkg/cli/cmd_create.go:    $ scw create $(scw tag my-snapshot my-image)
pkg/cli/cmd_create.go:    $ scw create --tmp-ssh-key 10GB
pkg/cli/cmd_create.go:`,
pkg/cli/cmd_create.go:}
pkg/cli/cmd_create.go:func init() {
pkg/cli/cmd_create.go:	cmdCreate.Flag.StringVar(&createName, []string{"-name"}, "", "Assign a name")
pkg/cli/cmd_create.go:	cmdCreate.Flag.StringVar(&createBootscript, []string{"-bootscript"}, "", "Assign a bootscript")
pkg/cli/cmd_create.go:	cmdCreate.Flag.StringVar(&createEnv, []string{"e", "-env"}, "", "Provide metadata tags passed to initrd (i.e., boot=resue INITRD_DEBUG=1)")
pkg/cli/cmd_create.go:	cmdCreate.Flag.StringVar(&createVolume, []string{"v", "-volume"}, "", "Attach additional volume (i.e., 50G)")
pkg/cli/cmd_create.go:	cmdCreate.Flag.StringVar(&createIPAddress, []string{"-ip-address"}, "", "Assign an IP")
pkg/cli/cmd_create.go:	cmdCreate.Flag.BoolVar(&createHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_create.go:	cmdCreate.Flag.BoolVar(&createTmpSSHKey, []string{"-tmp-ssh-key"}, false, "Access your server without uploading your SSH key to your account")
pkg/cli/cmd_create.go:}
pkg/cli/cmd_create.go:// Flags
pkg/cli/cmd_create.go:var createName string       // --name flag
pkg/cli/cmd_create.go:var createBootscript string // --bootscript flag
pkg/cli/cmd_create.go:var createEnv string        // -e, --env flag
pkg/cli/cmd_create.go:var createVolume string     // -v, --volume flag
pkg/cli/cmd_create.go:var createHelp bool         // -h, --help flag
pkg/cli/cmd_create.go:var createTmpSSHKey bool    // --tmp-ssh-key flag
pkg/cli/cmd_create.go:var createIPAddress string  // --ip-address flag
pkg/cli/cmd_create.go:func runCreate(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_create.go:	if createHelp {
pkg/cli/cmd_create.go:		return cmd.PrintUsage()
pkg/cli/cmd_create.go:	}
pkg/cli/cmd_create.go:	if len(rawArgs) != 1 {
pkg/cli/cmd_create.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_create.go:	}
pkg/cli/cmd_create.go:	args := commands.CreateArgs{
pkg/cli/cmd_create.go:		Name:       createName,
pkg/cli/cmd_create.go:		Bootscript: createBootscript,
pkg/cli/cmd_create.go:		Image:      rawArgs[0],
pkg/cli/cmd_create.go:		TmpSSHKey:  createTmpSSHKey,
pkg/cli/cmd_create.go:		IP:         createIPAddress,
pkg/cli/cmd_create.go:	}
pkg/cli/cmd_create.go:	if len(createEnv) > 0 {
pkg/cli/cmd_create.go:		args.Tags = strings.Split(createEnv, " ")
pkg/cli/cmd_create.go:	}
pkg/cli/cmd_create.go:	if len(createVolume) > 0 {
pkg/cli/cmd_create.go:		args.Volumes = strings.Split(createVolume, " ")
pkg/cli/cmd_create.go:	}
pkg/cli/cmd_create.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_create.go:	return commands.RunCreate(ctx, args)
pkg/cli/cmd_create.go:}
pkg/cli/cmd_events.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_events.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_events.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_events.go:package cli
pkg/cli/cmd_events.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_events.go:var cmdEvents = &Command{
pkg/cli/cmd_events.go:	Exec:        runEvents,
pkg/cli/cmd_events.go:	UsageLine:   "events [OPTIONS]",
pkg/cli/cmd_events.go:	Description: "Get real time events from the API",
pkg/cli/cmd_events.go:	Help:        "Get real time events from the API.",
pkg/cli/cmd_events.go:}
pkg/cli/cmd_events.go:func init() {
pkg/cli/cmd_events.go:	cmdEvents.Flag.BoolVar(&eventsHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_events.go:}
pkg/cli/cmd_events.go:// Flags
pkg/cli/cmd_events.go:var eventsHelp bool // -h, --help flag
pkg/cli/cmd_events.go:func runEvents(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_events.go:	if eventsHelp {
pkg/cli/cmd_events.go:		return cmd.PrintUsage()
pkg/cli/cmd_events.go:	}
pkg/cli/cmd_events.go:	if len(rawArgs) != 0 {
pkg/cli/cmd_events.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_events.go:	}
pkg/cli/cmd_events.go:	args := commands.EventsArgs{}
pkg/cli/cmd_events.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_events.go:	return commands.RunEvents(ctx, args)
pkg/cli/cmd_events.go:}
pkg/cli/cmd_exec.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_exec.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_exec.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_exec.go:package cli
pkg/cli/cmd_exec.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_exec.go:var cmdExec = &Command{
pkg/cli/cmd_exec.go:	Exec:        runExec,
pkg/cli/cmd_exec.go:	UsageLine:   "exec [OPTIONS] SERVER [COMMAND] [ARGS...]",
pkg/cli/cmd_exec.go:	Description: "Run a command on a running server",
pkg/cli/cmd_exec.go:	Help:        "Run a command on a running server.",
pkg/cli/cmd_exec.go:	Examples: `
pkg/cli/cmd_exec.go:    $ scw exec myserver
pkg/cli/cmd_exec.go:    $ scw exec myserver bash
pkg/cli/cmd_exec.go:    $ scw exec --gateway=myotherserver myserver bash
pkg/cli/cmd_exec.go:    $ scw exec myserver 'tmux a -t joe || tmux new -s joe || bash'
pkg/cli/cmd_exec.go:    $ exec_secure=1 scw exec myserver bash
pkg/cli/cmd_exec.go:    $ scw exec -w $(scw start $(scw create ubuntu-trusty)) bash
pkg/cli/cmd_exec.go:    $ scw exec $(scw start -w $(scw create ubuntu-trusty)) bash
pkg/cli/cmd_exec.go:    $ scw exec myserver tmux new -d sleep 10
pkg/cli/cmd_exec.go:    $ scw exec myserver ls -la | grep password
pkg/cli/cmd_exec.go:    $ cat local-file | scw exec myserver 'cat > remote/path'
pkg/cli/cmd_exec.go:`,
pkg/cli/cmd_exec.go:}
pkg/cli/cmd_exec.go:func init() {
pkg/cli/cmd_exec.go:	cmdExec.Flag.BoolVar(&execHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_exec.go:	cmdExec.Flag.Float64Var(&execTimeout, []string{"T", "-timeout"}, 0, "Set timeout values to seconds")
pkg/cli/cmd_exec.go:	cmdExec.Flag.BoolVar(&execW, []string{"w", "-wait"}, false, "Wait for SSH to be ready")
pkg/cli/cmd_exec.go:	cmdExec.Flag.StringVar(&execGateway, []string{"g", "-gateway"}, "", "Use a SSH gateway")
pkg/cli/cmd_exec.go:}
pkg/cli/cmd_exec.go:// Flags
pkg/cli/cmd_exec.go:var execW bool          // -w, --wait flag
pkg/cli/cmd_exec.go:var execTimeout float64 // -T flag
pkg/cli/cmd_exec.go:var execHelp bool       // -h, --help flag
pkg/cli/cmd_exec.go:var execGateway string  // -g, --gateway flag
pkg/cli/cmd_exec.go:func runExec(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_exec.go:	if execHelp {
pkg/cli/cmd_exec.go:		return cmd.PrintUsage()
pkg/cli/cmd_exec.go:	}
pkg/cli/cmd_exec.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_exec.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_exec.go:	}
pkg/cli/cmd_exec.go:	args := commands.ExecArgs{
pkg/cli/cmd_exec.go:		Timeout: execTimeout,
pkg/cli/cmd_exec.go:		Wait:    execW,
pkg/cli/cmd_exec.go:		Gateway: execGateway,
pkg/cli/cmd_exec.go:		Server:  rawArgs[0],
pkg/cli/cmd_exec.go:		Command: rawArgs[1:],
pkg/cli/cmd_exec.go:	}
pkg/cli/cmd_exec.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_exec.go:	return commands.RunExec(ctx, args)
pkg/cli/cmd_exec.go:}
pkg/cli/cmd_help.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_help.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_help.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_help.go:package cli
pkg/cli/cmd_help.go:import (
pkg/cli/cmd_help.go:	"fmt"
pkg/cli/cmd_help.go:	"text/template"
pkg/cli/cmd_help.go:)
pkg/cli/cmd_help.go:// CmdHelp is the 'scw help' command
pkg/cli/cmd_help.go:var CmdHelp = &Command{
pkg/cli/cmd_help.go:	Exec:        nil,
pkg/cli/cmd_help.go:	UsageLine:   "help [COMMAND]",
pkg/cli/cmd_help.go:	Description: "help of the scw command line",
pkg/cli/cmd_help.go:	Help: `
pkg/cli/cmd_help.go:Help prints help information about scw and its commands.
pkg/cli/cmd_help.go:By default, help lists available commands with a short description.
pkg/cli/cmd_help.go:When invoked with a command name, it prints the usage and the help of
pkg/cli/cmd_help.go:the command.
pkg/cli/cmd_help.go:`,
pkg/cli/cmd_help.go:}
pkg/cli/cmd_help.go:func init() {
pkg/cli/cmd_help.go:	// break dependency loop
pkg/cli/cmd_help.go:	CmdHelp.Exec = runHelp
pkg/cli/cmd_help.go:	CmdHelp.Flag.BoolVar(&helpHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_help.go:}
pkg/cli/cmd_help.go:// Flags
pkg/cli/cmd_help.go:var helpHelp bool // -h, --help flag
pkg/cli/cmd_help.go:var helpTemplate = `Usage: scw [OPTIONS] COMMAND [arg...]
pkg/cli/cmd_help.go:Interact with Scaleway from the command line.
pkg/cli/cmd_help.go:Options:
pkg/cli/cmd_help.go: -h, --help=false             Print usage
pkg/cli/cmd_help.go: -D, --debug=false            Enable debug mode
pkg/cli/cmd_help.go: -V, --verbose=false          Enable verbose mode
pkg/cli/cmd_help.go: -q, --quiet=false            Enable quiet mode
pkg/cli/cmd_help.go: --api-endpoint=APIEndPoint   Set the API endpoint
pkg/cli/cmd_help.go: --sensitive=false            Show sensitive data in outputs, i.e. API Token/Organization
pkg/cli/cmd_help.go: -v, --version=false          Print version information and quit
pkg/cli/cmd_help.go:Commands:
pkg/cli/cmd_help.go:{{range .}}{{if not .Hidden}}    {{.Name | printf "%-9s"}} {{.Description}}
pkg/cli/cmd_help.go:{{end}}{{end}}
pkg/cli/cmd_help.go:Run 'scw COMMAND --help' for more information on a command.
pkg/cli/cmd_help.go:`
pkg/cli/cmd_help.go:func runHelp(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_help.go:	if waitHelp {
pkg/cli/cmd_help.go:		return cmd.PrintUsage()
pkg/cli/cmd_help.go:	}
pkg/cli/cmd_help.go:	if len(rawArgs) > 1 {
pkg/cli/cmd_help.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_help.go:	}
pkg/cli/cmd_help.go:	if len(rawArgs) == 1 {
pkg/cli/cmd_help.go:		name := rawArgs[0]
pkg/cli/cmd_help.go:		for _, command := range Commands {
pkg/cli/cmd_help.go:			if command.Name() == name {
pkg/cli/cmd_help.go:				return command.PrintUsage()
pkg/cli/cmd_help.go:			}
pkg/cli/cmd_help.go:		}
pkg/cli/cmd_help.go:		return fmt.Errorf("Unknown help topic `%s`.  Run 'scw help'.", name)
pkg/cli/cmd_help.go:	}
pkg/cli/cmd_help.go:	t := template.New("top")
pkg/cli/cmd_help.go:	template.Must(t.Parse(helpTemplate))
pkg/cli/cmd_help.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_help.go:	return t.Execute(ctx.Stdout, Commands)
pkg/cli/cmd_help.go:}
pkg/cli/cmd_history.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_history.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_history.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_history.go:package cli
pkg/cli/cmd_history.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_history.go:var cmdHistory = &Command{
pkg/cli/cmd_history.go:	Exec:        runHistory,
pkg/cli/cmd_history.go:	UsageLine:   "history [OPTIONS] IMAGE",
pkg/cli/cmd_history.go:	Description: "Show the history of an image",
pkg/cli/cmd_history.go:	Help:        "Show the history of an image.",
pkg/cli/cmd_history.go:}
pkg/cli/cmd_history.go:func init() {
pkg/cli/cmd_history.go:	cmdHistory.Flag.BoolVar(&historyNoTrunc, []string{"-no-trunc"}, false, "Don't truncate output")
pkg/cli/cmd_history.go:	cmdHistory.Flag.BoolVar(&historyQuiet, []string{"q", "-quiet"}, false, "Only show numeric IDs")
pkg/cli/cmd_history.go:	cmdHistory.Flag.BoolVar(&historyHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_history.go:}
pkg/cli/cmd_history.go:// Flags
pkg/cli/cmd_history.go:var historyNoTrunc bool // --no-trunc flag
pkg/cli/cmd_history.go:var historyQuiet bool   // -q, --quiet flag
pkg/cli/cmd_history.go:var historyHelp bool    // -h, --help flag
pkg/cli/cmd_history.go:func runHistory(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_history.go:	if historyHelp {
pkg/cli/cmd_history.go:		return cmd.PrintUsage()
pkg/cli/cmd_history.go:	}
pkg/cli/cmd_history.go:	if len(rawArgs) != 1 {
pkg/cli/cmd_history.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_history.go:	}
pkg/cli/cmd_history.go:	args := commands.HistoryArgs{
pkg/cli/cmd_history.go:		Quiet:   historyQuiet,
pkg/cli/cmd_history.go:		NoTrunc: historyNoTrunc,
pkg/cli/cmd_history.go:		Image:   rawArgs[0],
pkg/cli/cmd_history.go:	}
pkg/cli/cmd_history.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_history.go:	return commands.RunHistory(ctx, args)
pkg/cli/cmd_history.go:}
pkg/cli/cmd_images.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_images.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_images.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_images.go:package cli
pkg/cli/cmd_images.go:import (
pkg/cli/cmd_images.go:	"strings"
pkg/cli/cmd_images.go:	"github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_images.go:	"github.com/Sirupsen/logrus"
pkg/cli/cmd_images.go:)
pkg/cli/cmd_images.go:var cmdImages = &Command{
pkg/cli/cmd_images.go:	Exec:        runImages,
pkg/cli/cmd_images.go:	UsageLine:   "images [OPTIONS]",
pkg/cli/cmd_images.go:	Description: "List images",
pkg/cli/cmd_images.go:	Help:        "List images.",
pkg/cli/cmd_images.go:	Examples: `
pkg/cli/cmd_images.go:    $ scw images
pkg/cli/cmd_images.go:    $ scw images -a
pkg/cli/cmd_images.go:    $ scw images -q
pkg/cli/cmd_images.go:    $ scw images --no-trunc
pkg/cli/cmd_images.go:    $ scw images -f organization=me
pkg/cli/cmd_images.go:    $ scw images -f organization=official-distribs
pkg/cli/cmd_images.go:    $ scw images -f organization=official-apps
pkg/cli/cmd_images.go:    $ scw images -f organization=UUIDOFORGANIZATION
pkg/cli/cmd_images.go:    $ scw images -f name=ubuntu
pkg/cli/cmd_images.go:    $ scw images -f type=image
pkg/cli/cmd_images.go:    $ scw images -f type=bootscript
pkg/cli/cmd_images.go:    $ scw images -f type=snapshot
pkg/cli/cmd_images.go:    $ scw images -f type=volume
pkg/cli/cmd_images.go:    $ scw images -f public=true
pkg/cli/cmd_images.go:    $ scw images -f public=false
pkg/cli/cmd_images.go:    $ scw images -f "organization=me type=volume" -q
pkg/cli/cmd_images.go:`,
pkg/cli/cmd_images.go:}
pkg/cli/cmd_images.go:func init() {
pkg/cli/cmd_images.go:	cmdImages.Flag.BoolVar(&imagesA, []string{"a", "-all"}, false, "Show all iamges")
pkg/cli/cmd_images.go:	cmdImages.Flag.BoolVar(&imagesNoTrunc, []string{"-no-trunc"}, false, "Don't truncate output")
pkg/cli/cmd_images.go:	cmdImages.Flag.BoolVar(&imagesQ, []string{"q", "-quiet"}, false, "Only show numeric IDs")
pkg/cli/cmd_images.go:	cmdImages.Flag.BoolVar(&imagesHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_images.go:	cmdImages.Flag.StringVar(&imagesFilters, []string{"f", "-filter"}, "", "Filter output based on conditions provided")
pkg/cli/cmd_images.go:}
pkg/cli/cmd_images.go:// Flags
pkg/cli/cmd_images.go:var imagesA bool         // -a flag
pkg/cli/cmd_images.go:var imagesQ bool         // -q flag
pkg/cli/cmd_images.go:var imagesNoTrunc bool   // -no-trunc flag
pkg/cli/cmd_images.go:var imagesHelp bool      // -h, --help flag
pkg/cli/cmd_images.go:var imagesFilters string // -f, --filters
pkg/cli/cmd_images.go:func runImages(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_images.go:	if imagesHelp {
pkg/cli/cmd_images.go:		return cmd.PrintUsage()
pkg/cli/cmd_images.go:	}
pkg/cli/cmd_images.go:	if len(rawArgs) != 0 {
pkg/cli/cmd_images.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_images.go:	}
pkg/cli/cmd_images.go:	args := commands.ImagesArgs{
pkg/cli/cmd_images.go:		All:     imagesA,
pkg/cli/cmd_images.go:		Quiet:   imagesQ,
pkg/cli/cmd_images.go:		NoTrunc: imagesNoTrunc,
pkg/cli/cmd_images.go:		Filters: make(map[string]string, 0),
pkg/cli/cmd_images.go:	}
pkg/cli/cmd_images.go:	if imagesFilters != "" {
pkg/cli/cmd_images.go:		for _, filter := range strings.Split(imagesFilters, " ") {
pkg/cli/cmd_images.go:			parts := strings.SplitN(filter, "=", 2)
pkg/cli/cmd_images.go:			if len(parts) != 2 {
pkg/cli/cmd_images.go:				logrus.Warnf("Invalid filter '%s', should be in the form 'key=value'", filter)
pkg/cli/cmd_images.go:				continue
pkg/cli/cmd_images.go:			}
pkg/cli/cmd_images.go:			if _, ok := args.Filters[parts[0]]; ok {
pkg/cli/cmd_images.go:				logrus.Warnf("Duplicated filter: %q", parts[0])
pkg/cli/cmd_images.go:			} else {
pkg/cli/cmd_images.go:				args.Filters[parts[0]] = parts[1]
pkg/cli/cmd_images.go:			}
pkg/cli/cmd_images.go:		}
pkg/cli/cmd_images.go:	}
pkg/cli/cmd_images.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_images.go:	return commands.RunImages(ctx, args)
pkg/cli/cmd_images.go:}
pkg/cli/cmd_info.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_info.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_info.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_info.go:package cli
pkg/cli/cmd_info.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_info.go:var cmdInfo = &Command{
pkg/cli/cmd_info.go:	Exec:        runInfo,
pkg/cli/cmd_info.go:	UsageLine:   "info [OPTIONS]",
pkg/cli/cmd_info.go:	Description: "Display system-wide information",
pkg/cli/cmd_info.go:	Help:        "Display system-wide information.",
pkg/cli/cmd_info.go:}
pkg/cli/cmd_info.go:func init() {
pkg/cli/cmd_info.go:	cmdInfo.Flag.BoolVar(&infoHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_info.go:}
pkg/cli/cmd_info.go:// Flags
pkg/cli/cmd_info.go:var infoHelp bool // -h, --help flag
pkg/cli/cmd_info.go:func runInfo(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_info.go:	if infoHelp {
pkg/cli/cmd_info.go:		return cmd.PrintUsage()
pkg/cli/cmd_info.go:	}
pkg/cli/cmd_info.go:	if len(rawArgs) != 0 {
pkg/cli/cmd_info.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_info.go:	}
pkg/cli/cmd_info.go:	args := commands.InfoArgs{}
pkg/cli/cmd_info.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_info.go:	return commands.RunInfo(ctx, args)
pkg/cli/cmd_info.go:}
pkg/cli/cmd_inspect.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_inspect.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_inspect.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_inspect.go:package cli
pkg/cli/cmd_inspect.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_inspect.go:var cmdInspect = &Command{
pkg/cli/cmd_inspect.go:	Exec:        runInspect,
pkg/cli/cmd_inspect.go:	UsageLine:   "inspect [OPTIONS] IDENTIFIER [IDENTIFIER...]",
pkg/cli/cmd_inspect.go:	Description: "Return low-level information on a server, image, snapshot, volume or bootscript",
pkg/cli/cmd_inspect.go:	Help:        "Return low-level information on a server, image, snapshot, volume or bootscript.",
pkg/cli/cmd_inspect.go:	Examples: `
pkg/cli/cmd_inspect.go:    $ scw inspect my-server
pkg/cli/cmd_inspect.go:    $ scw inspect server:my-server
pkg/cli/cmd_inspect.go:    $ scw inspect --browser my-server
pkg/cli/cmd_inspect.go:    $ scw inspect a-public-image
pkg/cli/cmd_inspect.go:    $ scw inspect image:a-public-image
pkg/cli/cmd_inspect.go:    $ scw inspect my-snapshot
pkg/cli/cmd_inspect.go:    $ scw inspect snapshot:my-snapshot
pkg/cli/cmd_inspect.go:    $ scw inspect my-volume
pkg/cli/cmd_inspect.go:    $ scw inspect volume:my-volume
pkg/cli/cmd_inspect.go:    $ scw inspect my-image
pkg/cli/cmd_inspect.go:    $ scw inspect image:my-image
pkg/cli/cmd_inspect.go:    $ scw inspect my-server | jq '.[0].public_ip.address'
pkg/cli/cmd_inspect.go:    $ scw inspect $(scw inspect my-image | jq '.[0].root_volume.id')
pkg/cli/cmd_inspect.go:    $ scw inspect -f "{{ .PublicAddress.IP }}" my-server
pkg/cli/cmd_inspect.go:    $ scw --sensitive inspect my-server
pkg/cli/cmd_inspect.go:`,
pkg/cli/cmd_inspect.go:}
pkg/cli/cmd_inspect.go:func init() {
pkg/cli/cmd_inspect.go:	cmdInspect.Flag.BoolVar(&inspectHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_inspect.go:	cmdInspect.Flag.StringVar(&inspectFormat, []string{"f", "-format"}, "", "Format the output using the given go template")
pkg/cli/cmd_inspect.go:	cmdInspect.Flag.BoolVar(&inspectBrowser, []string{"b", "-browser"}, false, "Inspect object in browser")
pkg/cli/cmd_inspect.go:}
pkg/cli/cmd_inspect.go:// Flags
pkg/cli/cmd_inspect.go:var inspectFormat string // -f, --format flag
pkg/cli/cmd_inspect.go:var inspectBrowser bool  // -b, --browser flag
pkg/cli/cmd_inspect.go:var inspectHelp bool     // -h, --help flag
pkg/cli/cmd_inspect.go:func runInspect(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_inspect.go:	if inspectHelp {
pkg/cli/cmd_inspect.go:		return cmd.PrintUsage()
pkg/cli/cmd_inspect.go:	}
pkg/cli/cmd_inspect.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_inspect.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_inspect.go:	}
pkg/cli/cmd_inspect.go:	args := commands.InspectArgs{
pkg/cli/cmd_inspect.go:		Format:      inspectFormat,
pkg/cli/cmd_inspect.go:		Browser:     inspectBrowser,
pkg/cli/cmd_inspect.go:		Identifiers: rawArgs,
pkg/cli/cmd_inspect.go:	}
pkg/cli/cmd_inspect.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_inspect.go:	return commands.RunInspect(ctx, args)
pkg/cli/cmd_inspect.go:}
pkg/cli/cmd_kill.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_kill.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_kill.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_kill.go:package cli
pkg/cli/cmd_kill.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_kill.go:var cmdKill = &Command{
pkg/cli/cmd_kill.go:	Exec:        runKill,
pkg/cli/cmd_kill.go:	UsageLine:   "kill [OPTIONS] SERVER",
pkg/cli/cmd_kill.go:	Description: "Kill a running server",
pkg/cli/cmd_kill.go:	Help:        "Kill a running server.",
pkg/cli/cmd_kill.go:}
pkg/cli/cmd_kill.go:func init() {
pkg/cli/cmd_kill.go:	cmdKill.Flag.BoolVar(&killHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_kill.go:	cmdKill.Flag.StringVar(&killGateway, []string{"g", "-gateway"}, "", "Use a SSH gateway")
pkg/cli/cmd_kill.go:	// FIXME: add --signal option
pkg/cli/cmd_kill.go:}
pkg/cli/cmd_kill.go:// Flags
pkg/cli/cmd_kill.go:var killHelp bool      // -h, --help flag
pkg/cli/cmd_kill.go:var killGateway string // -g, --gateway flag
pkg/cli/cmd_kill.go:func runKill(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_kill.go:	if killHelp {
pkg/cli/cmd_kill.go:		return cmd.PrintUsage()
pkg/cli/cmd_kill.go:	}
pkg/cli/cmd_kill.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_kill.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_kill.go:	}
pkg/cli/cmd_kill.go:	args := commands.KillArgs{
pkg/cli/cmd_kill.go:		Gateway: killGateway,
pkg/cli/cmd_kill.go:		Server:  rawArgs[0],
pkg/cli/cmd_kill.go:	}
pkg/cli/cmd_kill.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_kill.go:	return commands.RunKill(ctx, args)
pkg/cli/cmd_kill.go:}
pkg/cli/cmd_login.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_login.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_login.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_login.go:package cli
pkg/cli/cmd_login.go:import (
pkg/cli/cmd_login.go:	"fmt"
pkg/cli/cmd_login.go:	"github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_login.go:)
pkg/cli/cmd_login.go:var cmdLogin = &Command{
pkg/cli/cmd_login.go:	Exec:        runLogin,
pkg/cli/cmd_login.go:	UsageLine:   "login [OPTIONS]",
pkg/cli/cmd_login.go:	Description: "Log in to Scaleway API",
pkg/cli/cmd_login.go:	Help: `Generates a configuration file in '/home/$USER/.scwrc'
pkg/cli/cmd_login.go:containing credentials used to interact with the Scaleway API. This
pkg/cli/cmd_login.go:configuration file is automatically used by the 'scw' commands.
pkg/cli/cmd_login.go:You can get your credentials on https://cloud.scaleway.com/#/credentials
pkg/cli/cmd_login.go:`,
pkg/cli/cmd_login.go:}
pkg/cli/cmd_login.go:func init() {
pkg/cli/cmd_login.go:	cmdLogin.Flag.StringVar(&organization, []string{"o", "-organization"}, "", "Organization")
pkg/cli/cmd_login.go:	cmdLogin.Flag.StringVar(&token, []string{"t", "-token"}, "", "Token")
pkg/cli/cmd_login.go:	cmdLogin.Flag.BoolVar(&loginHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_login.go:	cmdLogin.Flag.BoolVar(&loginSkipSSHKey, []string{"s", "-skip-ssh-key"}, false, "Don't ask to upload an SSH Key")
pkg/cli/cmd_login.go:}
pkg/cli/cmd_login.go:// FLags
pkg/cli/cmd_login.go:var organization string  // -o flag
pkg/cli/cmd_login.go:var token string         // -t flag
pkg/cli/cmd_login.go:var loginHelp bool       // -h, --help flag
pkg/cli/cmd_login.go:var loginSkipSSHKey bool // -s, --skip-ssh-key flag
pkg/cli/cmd_login.go:func runLogin(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_login.go:	if loginHelp {
pkg/cli/cmd_login.go:		return cmd.PrintUsage()
pkg/cli/cmd_login.go:	}
pkg/cli/cmd_login.go:	if len(rawArgs) != 0 {
pkg/cli/cmd_login.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_login.go:	}
pkg/cli/cmd_login.go:	if (organization != "" || token != "") && (organization == "" || token == "") {
pkg/cli/cmd_login.go:		return fmt.Errorf("you must define organization AND token")
pkg/cli/cmd_login.go:	}
pkg/cli/cmd_login.go:	args := commands.LoginArgs{
pkg/cli/cmd_login.go:		Organization: organization,
pkg/cli/cmd_login.go:		Token:        token,
pkg/cli/cmd_login.go:		SkipSSHKey:   loginSkipSSHKey,
pkg/cli/cmd_login.go:	}
pkg/cli/cmd_login.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_login.go:	return commands.RunLogin(ctx, args)
pkg/cli/cmd_login.go:}
pkg/cli/cmd_logout.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_logout.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_logout.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_logout.go:package cli
pkg/cli/cmd_logout.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_logout.go:var cmdLogout = &Command{
pkg/cli/cmd_logout.go:	Exec:        runLogout,
pkg/cli/cmd_logout.go:	UsageLine:   "logout [OPTIONS]",
pkg/cli/cmd_logout.go:	Description: "Log out from the Scaleway API",
pkg/cli/cmd_logout.go:	Help:        "Log out from the Scaleway API.",
pkg/cli/cmd_logout.go:}
pkg/cli/cmd_logout.go:func init() {
pkg/cli/cmd_logout.go:	cmdLogout.Flag.BoolVar(&logoutHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_logout.go:}
pkg/cli/cmd_logout.go:// FLags
pkg/cli/cmd_logout.go:var logoutHelp bool // -h, --help flag
pkg/cli/cmd_logout.go:func runLogout(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_logout.go:	if logoutHelp {
pkg/cli/cmd_logout.go:		return cmd.PrintUsage()
pkg/cli/cmd_logout.go:	}
pkg/cli/cmd_logout.go:	if len(rawArgs) != 0 {
pkg/cli/cmd_logout.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_logout.go:	}
pkg/cli/cmd_logout.go:	args := commands.LogoutArgs{}
pkg/cli/cmd_logout.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_logout.go:	return commands.RunLogout(ctx, args)
pkg/cli/cmd_logout.go:}
pkg/cli/cmd_logs.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_logs.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_logs.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_logs.go:package cli
pkg/cli/cmd_logs.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_logs.go:var cmdLogs = &Command{
pkg/cli/cmd_logs.go:	Exec:        runLogs,
pkg/cli/cmd_logs.go:	UsageLine:   "logs [OPTIONS] SERVER",
pkg/cli/cmd_logs.go:	Description: "Fetch the logs of a server",
pkg/cli/cmd_logs.go:	Help:        "Fetch the logs of a server.",
pkg/cli/cmd_logs.go:}
pkg/cli/cmd_logs.go:func init() {
pkg/cli/cmd_logs.go:	cmdLogs.Flag.BoolVar(&logsHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_logs.go:	cmdLogs.Flag.StringVar(&logsGateway, []string{"g", "-gateway"}, "", "Use a SSH gateway")
pkg/cli/cmd_logs.go:}
pkg/cli/cmd_logs.go:// FLags
pkg/cli/cmd_logs.go:var logsHelp bool      // -h, --help flag
pkg/cli/cmd_logs.go:var logsGateway string // -g, --gateway flag
pkg/cli/cmd_logs.go:func runLogs(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_logs.go:	if logsHelp {
pkg/cli/cmd_logs.go:		return cmd.PrintUsage()
pkg/cli/cmd_logs.go:	}
pkg/cli/cmd_logs.go:	if len(rawArgs) != 1 {
pkg/cli/cmd_logs.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_logs.go:	}
pkg/cli/cmd_logs.go:	args := commands.LogsArgs{
pkg/cli/cmd_logs.go:		Gateway: logsGateway,
pkg/cli/cmd_logs.go:		Server:  rawArgs[0],
pkg/cli/cmd_logs.go:	}
pkg/cli/cmd_logs.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_logs.go:	return commands.RunLogs(ctx, args)
pkg/cli/cmd_logs.go:}
pkg/cli/cmd_port.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_port.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_port.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_port.go:package cli
pkg/cli/cmd_port.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_port.go:var cmdPort = &Command{
pkg/cli/cmd_port.go:	Exec:        runPort,
pkg/cli/cmd_port.go:	UsageLine:   "port [OPTIONS] SERVER [PRIVATE_PORT[/PROTO]]",
pkg/cli/cmd_port.go:	Description: "Lookup the public-facing port that is NAT-ed to PRIVATE_PORT",
pkg/cli/cmd_port.go:	Help:        "List port mappings for the SERVER, or lookup the public-facing port that is NAT-ed to the PRIVATE_PORT",
pkg/cli/cmd_port.go:}
pkg/cli/cmd_port.go:func init() {
pkg/cli/cmd_port.go:	cmdPort.Flag.BoolVar(&portHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_port.go:	cmdPort.Flag.StringVar(&portGateway, []string{"g", "-gateway"}, "", "Use a SSH gateway")
pkg/cli/cmd_port.go:}
pkg/cli/cmd_port.go:// FLags
pkg/cli/cmd_port.go:var portHelp bool      // -h, --help flag
pkg/cli/cmd_port.go:var portGateway string // -g, --gateway flag
pkg/cli/cmd_port.go:func runPort(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_port.go:	if portHelp {
pkg/cli/cmd_port.go:		return cmd.PrintUsage()
pkg/cli/cmd_port.go:	}
pkg/cli/cmd_port.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_port.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_port.go:	}
pkg/cli/cmd_port.go:	args := commands.PortArgs{
pkg/cli/cmd_port.go:		Gateway: portGateway,
pkg/cli/cmd_port.go:		Server:  rawArgs[0],
pkg/cli/cmd_port.go:	}
pkg/cli/cmd_port.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_port.go:	return commands.RunPort(ctx, args)
pkg/cli/cmd_port.go:}
pkg/cli/cmd_ps.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_ps.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_ps.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_ps.go:package cli
pkg/cli/cmd_ps.go:import (
pkg/cli/cmd_ps.go:	"strings"
pkg/cli/cmd_ps.go:	"github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_ps.go:	"github.com/Sirupsen/logrus"
pkg/cli/cmd_ps.go:)
pkg/cli/cmd_ps.go:var cmdPs = &Command{
pkg/cli/cmd_ps.go:	Exec:        runPs,
pkg/cli/cmd_ps.go:	UsageLine:   "ps [OPTIONS]",
pkg/cli/cmd_ps.go:	Description: "List servers",
pkg/cli/cmd_ps.go:	Help:        "List servers. By default, only running servers are displayed.",
pkg/cli/cmd_ps.go:	Examples: `
pkg/cli/cmd_ps.go:    $ scw ps
pkg/cli/cmd_ps.go:    $ scw ps -a
pkg/cli/cmd_ps.go:    $ scw ps -l
pkg/cli/cmd_ps.go:    $ scw ps -n=10
pkg/cli/cmd_ps.go:    $ scw ps -q
pkg/cli/cmd_ps.go:    $ scw ps --no-trunc
pkg/cli/cmd_ps.go:    $ scw ps -f state=booted
pkg/cli/cmd_ps.go:    $ scw ps -f state=running
pkg/cli/cmd_ps.go:    $ scw ps -f state=stopped
pkg/cli/cmd_ps.go:    $ scw ps -f ip=212.47.229.26
pkg/cli/cmd_ps.go:    $ scw ps -f tags=prod
pkg/cli/cmd_ps.go:    $ scw ps -f tags=boot=live
pkg/cli/cmd_ps.go:    $ scw ps -f image=docker
pkg/cli/cmd_ps.go:    $ scw ps -f image=alpine
pkg/cli/cmd_ps.go:    $ scw ps -f image=UUIDOFIMAGE
pkg/cli/cmd_ps.go:    $ scw ps -f "state=booted image=docker tags=prod"
pkg/cli/cmd_ps.go:`,
pkg/cli/cmd_ps.go:}
pkg/cli/cmd_ps.go:func init() {
pkg/cli/cmd_ps.go:	cmdPs.Flag.BoolVar(&psA, []string{"a", "-all"}, false, "Show all servers. Only running servers are shown by default")
pkg/cli/cmd_ps.go:	cmdPs.Flag.BoolVar(&psL, []string{"l", "-latest"}, false, "Show only the latest created server, include non-running ones")
pkg/cli/cmd_ps.go:	cmdPs.Flag.IntVar(&psN, []string{"n"}, 0, "Show n last created servers, include non-running ones")
pkg/cli/cmd_ps.go:	cmdPs.Flag.BoolVar(&psNoTrunc, []string{"-no-trunc"}, false, "Don't truncate output")
pkg/cli/cmd_ps.go:	cmdPs.Flag.BoolVar(&psQ, []string{"q", "-quiet"}, false, "Only display numeric IDs")
pkg/cli/cmd_ps.go:	cmdPs.Flag.BoolVar(&psHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_ps.go:	cmdPs.Flag.StringVar(&psFilters, []string{"f", "-filter"}, "", "Filter output based on conditions provided")
pkg/cli/cmd_ps.go:}
pkg/cli/cmd_ps.go:// Flags
pkg/cli/cmd_ps.go:var psA bool         // -a flag
pkg/cli/cmd_ps.go:var psL bool         // -l flag
pkg/cli/cmd_ps.go:var psQ bool         // -q flag
pkg/cli/cmd_ps.go:var psNoTrunc bool   // -no-trunc flag
pkg/cli/cmd_ps.go:var psN int          // -n flag
pkg/cli/cmd_ps.go:var psHelp bool      // -h, --help flag
pkg/cli/cmd_ps.go:var psFilters string // -f, --filter flag
pkg/cli/cmd_ps.go:func runPs(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_ps.go:	if psHelp {
pkg/cli/cmd_ps.go:		return cmd.PrintUsage()
pkg/cli/cmd_ps.go:	}
pkg/cli/cmd_ps.go:	if len(rawArgs) != 0 {
pkg/cli/cmd_ps.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_ps.go:	}
pkg/cli/cmd_ps.go:	args := commands.PsArgs{
pkg/cli/cmd_ps.go:		All:     psA,
pkg/cli/cmd_ps.go:		Latest:  psL,
pkg/cli/cmd_ps.go:		Quiet:   psQ,
pkg/cli/cmd_ps.go:		NoTrunc: psNoTrunc,
pkg/cli/cmd_ps.go:		NLast:   psN,
pkg/cli/cmd_ps.go:		Filters: make(map[string]string, 0),
pkg/cli/cmd_ps.go:	}
pkg/cli/cmd_ps.go:	if psFilters != "" {
pkg/cli/cmd_ps.go:		for _, filter := range strings.Split(psFilters, " ") {
pkg/cli/cmd_ps.go:			parts := strings.SplitN(filter, "=", 2)
pkg/cli/cmd_ps.go:			if len(parts) != 2 {
pkg/cli/cmd_ps.go:				logrus.Warnf("Invalid filter '%s', should be in the form 'key=value'", filter)
pkg/cli/cmd_ps.go:				continue
pkg/cli/cmd_ps.go:			}
pkg/cli/cmd_ps.go:			if _, ok := args.Filters[parts[0]]; ok {
pkg/cli/cmd_ps.go:				logrus.Warnf("Duplicated filter: %q", parts[0])
pkg/cli/cmd_ps.go:			} else {
pkg/cli/cmd_ps.go:				args.Filters[parts[0]] = parts[1]
pkg/cli/cmd_ps.go:			}
pkg/cli/cmd_ps.go:		}
pkg/cli/cmd_ps.go:	}
pkg/cli/cmd_ps.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_ps.go:	return commands.RunPs(ctx, args)
pkg/cli/cmd_ps.go:}
pkg/cli/cmd_rename.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_rename.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_rename.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_rename.go:package cli
pkg/cli/cmd_rename.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_rename.go:var cmdRename = &Command{
pkg/cli/cmd_rename.go:	Exec:        runRename,
pkg/cli/cmd_rename.go:	UsageLine:   "rename [OPTIONS] SERVER NEW_NAME",
pkg/cli/cmd_rename.go:	Description: "Rename a server",
pkg/cli/cmd_rename.go:	Help:        "Rename a server.",
pkg/cli/cmd_rename.go:}
pkg/cli/cmd_rename.go:func init() {
pkg/cli/cmd_rename.go:	cmdRename.Flag.BoolVar(&renameHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_rename.go:}
pkg/cli/cmd_rename.go:// Flags
pkg/cli/cmd_rename.go:var renameHelp bool // -h, --help flag
pkg/cli/cmd_rename.go:func runRename(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_rename.go:	if renameHelp {
pkg/cli/cmd_rename.go:		return cmd.PrintUsage()
pkg/cli/cmd_rename.go:	}
pkg/cli/cmd_rename.go:	if len(rawArgs) != 2 {
pkg/cli/cmd_rename.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_rename.go:	}
pkg/cli/cmd_rename.go:	args := commands.RenameArgs{
pkg/cli/cmd_rename.go:		Server:  rawArgs[0],
pkg/cli/cmd_rename.go:		NewName: rawArgs[1],
pkg/cli/cmd_rename.go:	}
pkg/cli/cmd_rename.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_rename.go:	return commands.RunRename(ctx, args)
pkg/cli/cmd_rename.go:}
pkg/cli/cmd_restart.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_restart.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_restart.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_restart.go:package cli
pkg/cli/cmd_restart.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_restart.go:var cmdRestart = &Command{
pkg/cli/cmd_restart.go:	Exec:        runRestart,
pkg/cli/cmd_restart.go:	UsageLine:   "restart [OPTIONS] SERVER [SERVER...]",
pkg/cli/cmd_restart.go:	Description: "Restart a running server",
pkg/cli/cmd_restart.go:	Help:        "Restart a running server.",
pkg/cli/cmd_restart.go:}
pkg/cli/cmd_restart.go:func init() {
pkg/cli/cmd_restart.go:	cmdRestart.Flag.BoolVar(&restartW, []string{"w", "-wait"}, false, "Synchronous restart. Wait for SSH to be ready")
pkg/cli/cmd_restart.go:	cmdRestart.Flag.Float64Var(&restartTimeout, []string{"T", "-timeout"}, 0, "Set timeout values to seconds")
pkg/cli/cmd_restart.go:	cmdRestart.Flag.BoolVar(&restartHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_restart.go:}
pkg/cli/cmd_restart.go:// Flags
pkg/cli/cmd_restart.go:var restartW bool          // -w flag
pkg/cli/cmd_restart.go:var restartTimeout float64 // -T flag
pkg/cli/cmd_restart.go:var restartHelp bool       // -h, --help flag
pkg/cli/cmd_restart.go:func runRestart(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_restart.go:	if restartHelp {
pkg/cli/cmd_restart.go:		return cmd.PrintUsage()
pkg/cli/cmd_restart.go:	}
pkg/cli/cmd_restart.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_restart.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_restart.go:	}
pkg/cli/cmd_restart.go:	args := commands.RestartArgs{
pkg/cli/cmd_restart.go:		Timeout: restartTimeout,
pkg/cli/cmd_restart.go:		Wait:    restartW,
pkg/cli/cmd_restart.go:		Servers: rawArgs,
pkg/cli/cmd_restart.go:	}
pkg/cli/cmd_restart.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_restart.go:	return commands.RunRestart(ctx, args)
pkg/cli/cmd_restart.go:}
pkg/cli/cmd_rm.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_rm.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_rm.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_rm.go:package cli
pkg/cli/cmd_rm.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_rm.go:var cmdRm = &Command{
pkg/cli/cmd_rm.go:	Exec:        runRm,
pkg/cli/cmd_rm.go:	UsageLine:   "rm [OPTIONS] SERVER [SERVER...]",
pkg/cli/cmd_rm.go:	Description: "Remove one or more servers",
pkg/cli/cmd_rm.go:	Help:        "Remove one or more servers.",
pkg/cli/cmd_rm.go:	Examples: `
pkg/cli/cmd_rm.go:    $ scw rm myserver
pkg/cli/cmd_rm.go:    $ scw rm -f myserver
pkg/cli/cmd_rm.go:    $ scw rm my-stopped-server my-second-stopped-server
pkg/cli/cmd_rm.go:    $ scw rm $(scw ps -q)
pkg/cli/cmd_rm.go:    $ scw rm $(scw ps | grep mysql | awk '{print $1}')
pkg/cli/cmd_rm.go:`,
pkg/cli/cmd_rm.go:}
pkg/cli/cmd_rm.go:func init() {
pkg/cli/cmd_rm.go:	cmdRm.Flag.BoolVar(&rmHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_rm.go:	cmdRm.Flag.BoolVar(&rmForce, []string{"f", "-force"}, false, "Force the removal of a server")
pkg/cli/cmd_rm.go:}
pkg/cli/cmd_rm.go:// Flags
pkg/cli/cmd_rm.go:var rmHelp bool  // -h, --help flag
pkg/cli/cmd_rm.go:var rmForce bool // -f, --force flag
pkg/cli/cmd_rm.go:func runRm(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_rm.go:	if rmHelp {
pkg/cli/cmd_rm.go:		return cmd.PrintUsage()
pkg/cli/cmd_rm.go:	}
pkg/cli/cmd_rm.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_rm.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_rm.go:	}
pkg/cli/cmd_rm.go:	args := commands.RmArgs{
pkg/cli/cmd_rm.go:		Servers: rawArgs,
pkg/cli/cmd_rm.go:		Force:   rmForce,
pkg/cli/cmd_rm.go:	}
pkg/cli/cmd_rm.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_rm.go:	return commands.RunRm(ctx, args)
pkg/cli/cmd_rm.go:}
pkg/cli/cmd_rmi.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_rmi.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_rmi.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_rmi.go:package cli
pkg/cli/cmd_rmi.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_rmi.go:var cmdRmi = &Command{
pkg/cli/cmd_rmi.go:	Exec:        runRmi,
pkg/cli/cmd_rmi.go:	UsageLine:   "rmi [OPTIONS] IDENTIFIER [IDENTIFIER...]",
pkg/cli/cmd_rmi.go:	Description: "Remove one or more image(s)/volume(s)/snapshot(s)",
pkg/cli/cmd_rmi.go:	Help:        "Remove one or more image(s)/volume(s)/snapshot(s)",
pkg/cli/cmd_rmi.go:	Examples: `
pkg/cli/cmd_rmi.go:    $ scw rmi myimage
pkg/cli/cmd_rmi.go:    $ scw rmi mysnapshot
pkg/cli/cmd_rmi.go:    $ scw rmi myvolume
pkg/cli/cmd_rmi.go:    $ scw rmi $(scw images -q)
pkg/cli/cmd_rmi.go:`,
pkg/cli/cmd_rmi.go:}
pkg/cli/cmd_rmi.go:func init() {
pkg/cli/cmd_rmi.go:	cmdRmi.Flag.BoolVar(&rmiHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_rmi.go:}
pkg/cli/cmd_rmi.go:// Flags
pkg/cli/cmd_rmi.go:var rmiHelp bool // -h, --help flag
pkg/cli/cmd_rmi.go:func runRmi(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_rmi.go:	if rmiHelp {
pkg/cli/cmd_rmi.go:		return cmd.PrintUsage()
pkg/cli/cmd_rmi.go:	}
pkg/cli/cmd_rmi.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_rmi.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_rmi.go:	}
pkg/cli/cmd_rmi.go:	args := commands.RmiArgs{
pkg/cli/cmd_rmi.go:		Identifier: rawArgs,
pkg/cli/cmd_rmi.go:	}
pkg/cli/cmd_rmi.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_rmi.go:	return commands.RunRmi(ctx, args)
pkg/cli/cmd_rmi.go:}
pkg/cli/cmd_run.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_run.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_run.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_run.go:package cli
pkg/cli/cmd_run.go:import (
pkg/cli/cmd_run.go:	"fmt"
pkg/cli/cmd_run.go:	"strings"
pkg/cli/cmd_run.go:	"github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_run.go:)
pkg/cli/cmd_run.go:var cmdRun = &Command{
pkg/cli/cmd_run.go:	Exec:        runRun,
pkg/cli/cmd_run.go:	UsageLine:   "run [OPTIONS] IMAGE [COMMAND] [ARG...]",
pkg/cli/cmd_run.go:	Description: "Run a command in a new server",
pkg/cli/cmd_run.go:	Help:        "Run a command in a new server.",
pkg/cli/cmd_run.go:	Examples: `
pkg/cli/cmd_run.go:    $ scw run ubuntu-trusty
pkg/cli/cmd_run.go:    $ scw run --rm ubuntu-trusty
pkg/cli/cmd_run.go:    $ scw run -a --rm ubuntu-trusty
pkg/cli/cmd_run.go:    $ scw run --gateway=myotherserver ubuntu-trusty
pkg/cli/cmd_run.go:    $ scw run ubuntu-trusty bash
pkg/cli/cmd_run.go:    $ scw run --name=mydocker docker docker run moul/nyancat:armhf
pkg/cli/cmd_run.go:    $ scw run --bootscript=3.2.34 --env="boot=live rescue_image=http://j.mp/scaleway-ubuntu-trusty-tarball" 50GB bash
pkg/cli/cmd_run.go:    $ scw run --attach alpine
pkg/cli/cmd_run.go:    $ scw run --detach alpine
pkg/cli/cmd_run.go:    $ scw run --tmp-ssh-key alpine
pkg/cli/cmd_run.go:    $ scw run --userdata="FOO=BAR FILE=@/tmp/file" alpine
pkg/cli/cmd_run.go:`,
pkg/cli/cmd_run.go:}
pkg/cli/cmd_run.go:func init() {
pkg/cli/cmd_run.go:	cmdRun.Flag.StringVar(&runCreateName, []string{"-name"}, "", "Assign a name")
pkg/cli/cmd_run.go:	cmdRun.Flag.StringVar(&runCreateBootscript, []string{"-bootscript"}, "", "Assign a bootscript")
pkg/cli/cmd_run.go:	cmdRun.Flag.StringVar(&runCreateEnv, []string{"e", "-env"}, "", "Provide metadata tags passed to initrd (i.e., boot=rescue INITRD_DEBUG=1)")
pkg/cli/cmd_run.go:	cmdRun.Flag.StringVar(&runCreateVolume, []string{"v", "-volume"}, "", "Attach additional volume (i.e., 50G)")
pkg/cli/cmd_run.go:	cmdRun.Flag.BoolVar(&runHelpFlag, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_run.go:	cmdRun.Flag.Int64Var(&runTimeout, []string{"T", "-timeout"}, 0, "Set timeout value to seconds")
pkg/cli/cmd_run.go:	cmdRun.Flag.StringVar(&runIPAddress, []string{"-ip-address"}, "", "Assign an IP")
pkg/cli/cmd_run.go:	cmdRun.Flag.BoolVar(&runAttachFlag, []string{"a", "-attach"}, false, "Attach to serial console")
pkg/cli/cmd_run.go:	cmdRun.Flag.BoolVar(&runDetachFlag, []string{"d", "-detach"}, false, "Run server in background and print server ID")
pkg/cli/cmd_run.go:	cmdRun.Flag.StringVar(&runGateway, []string{"g", "-gateway"}, "", "Use a SSH gateway")
pkg/cli/cmd_run.go:	cmdRun.Flag.StringVar(&runUserdatas, []string{"u", "-userdata"}, "", "Start a server with userdata predefined")
pkg/cli/cmd_run.go:	cmdRun.Flag.BoolVar(&runAutoRemove, []string{"-rm"}, false, "Automatically remove the server when it exits")
pkg/cli/cmd_run.go:	cmdRun.Flag.BoolVar(&runTmpSSHKey, []string{"-tmp-ssh-key"}, false, "Access your server without uploading your SSH key to your account")
pkg/cli/cmd_run.go:	cmdRun.Flag.BoolVar(&runShowBoot, []string{"-show-boot"}, false, "Allows to show the boot")
pkg/cli/cmd_run.go:	// FIXME: handle start --timeout
pkg/cli/cmd_run.go:}
pkg/cli/cmd_run.go:// Flags
pkg/cli/cmd_run.go:var runCreateName string       // --name flag
pkg/cli/cmd_run.go:var runAutoRemove bool         // --rm flag
pkg/cli/cmd_run.go:var runCreateBootscript string // --bootscript flag
pkg/cli/cmd_run.go:var runCreateEnv string        // -e, --env flag
pkg/cli/cmd_run.go:var runCreateVolume string     // -v, --volume flag
pkg/cli/cmd_run.go:var runIPAddress string        // --ip-address flag
pkg/cli/cmd_run.go:var runHelpFlag bool           // -h, --help flag
pkg/cli/cmd_run.go:var runAttachFlag bool         // -a, --attach flag
pkg/cli/cmd_run.go:var runDetachFlag bool         // -d, --detach flag
pkg/cli/cmd_run.go:var runGateway string          // -g, --gateway flag
pkg/cli/cmd_run.go:var runUserdatas string        // -u, --userdata flag
pkg/cli/cmd_run.go:var runTmpSSHKey bool          // --tmp-ssh-key flag
pkg/cli/cmd_run.go:var runShowBoot bool           // --show-boot flag
pkg/cli/cmd_run.go:var runTimeout int64           // --timeout flag
pkg/cli/cmd_run.go:func runRun(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_run.go:	if runHelpFlag {
pkg/cli/cmd_run.go:		return cmd.PrintUsage()
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_run.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	if runAttachFlag && len(rawArgs) > 1 {
pkg/cli/cmd_run.go:		return fmt.Errorf("conflicting options: -a and COMMAND")
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	if runAttachFlag && runDetachFlag {
pkg/cli/cmd_run.go:		return fmt.Errorf("conflicting options: -a and -d")
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	if runAttachFlag && runShowBoot {
pkg/cli/cmd_run.go:		return fmt.Errorf("conflicting options: -a and --show-boot")
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	if runShowBoot && len(rawArgs) > 1 {
pkg/cli/cmd_run.go:		return fmt.Errorf("conflicting options: --show-boot and COMMAND")
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	if runShowBoot && runDetachFlag {
pkg/cli/cmd_run.go:		return fmt.Errorf("conflicting options: --show-boot and -d")
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	if runDetachFlag && len(rawArgs) > 1 {
pkg/cli/cmd_run.go:		return fmt.Errorf("conflicting options: -d and COMMAND")
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	if runAutoRemove && runDetachFlag {
pkg/cli/cmd_run.go:		return fmt.Errorf("conflicting options: --detach and --rm")
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	args := commands.RunArgs{
pkg/cli/cmd_run.go:		Attach:     runAttachFlag,
pkg/cli/cmd_run.go:		Bootscript: runCreateBootscript,
pkg/cli/cmd_run.go:		Command:    rawArgs[1:],
pkg/cli/cmd_run.go:		Detach:     runDetachFlag,
pkg/cli/cmd_run.go:		Gateway:    runGateway,
pkg/cli/cmd_run.go:		Image:      rawArgs[0],
pkg/cli/cmd_run.go:		Name:       runCreateName,
pkg/cli/cmd_run.go:		AutoRemove: runAutoRemove,
pkg/cli/cmd_run.go:		TmpSSHKey:  runTmpSSHKey,
pkg/cli/cmd_run.go:		ShowBoot:   runShowBoot,
pkg/cli/cmd_run.go:		IP:         runIPAddress,
pkg/cli/cmd_run.go:		Timeout:    runTimeout,
pkg/cli/cmd_run.go:		Userdata:   runUserdatas,
pkg/cli/cmd_run.go:		// FIXME: DynamicIPRequired
pkg/cli/cmd_run.go:		// FIXME: Timeout
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	if len(runCreateEnv) > 0 {
pkg/cli/cmd_run.go:		args.Tags = strings.Split(runCreateEnv, " ")
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	if len(runCreateVolume) > 0 {
pkg/cli/cmd_run.go:		args.Volumes = strings.Split(runCreateVolume, " ")
pkg/cli/cmd_run.go:	}
pkg/cli/cmd_run.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_run.go:	return commands.Run(ctx, args)
pkg/cli/cmd_run.go:}
pkg/cli/cmd_search.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_search.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_search.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_search.go:package cli
pkg/cli/cmd_search.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_search.go:var cmdSearch = &Command{
pkg/cli/cmd_search.go:	Exec:        runSearch,
pkg/cli/cmd_search.go:	UsageLine:   "search [OPTIONS] TERM",
pkg/cli/cmd_search.go:	Description: "Search the Scaleway Hub for images",
pkg/cli/cmd_search.go:	Help:        "Search the Scaleway Hub for images.",
pkg/cli/cmd_search.go:}
pkg/cli/cmd_search.go:func init() {
pkg/cli/cmd_search.go:	cmdSearch.Flag.BoolVar(&searchNoTrunc, []string{"-no-trunc"}, false, "Don't truncate output")
pkg/cli/cmd_search.go:	cmdSearch.Flag.BoolVar(&searchHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_search.go:}
pkg/cli/cmd_search.go:// Flags
pkg/cli/cmd_search.go:var searchNoTrunc bool // --no-trunc flag
pkg/cli/cmd_search.go:var searchHelp bool    // -h, --help flag
pkg/cli/cmd_search.go:func runSearch(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_search.go:	if searchHelp {
pkg/cli/cmd_search.go:		return cmd.PrintUsage()
pkg/cli/cmd_search.go:	}
pkg/cli/cmd_search.go:	if len(rawArgs) != 1 {
pkg/cli/cmd_search.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_search.go:	}
pkg/cli/cmd_search.go:	args := commands.SearchArgs{
pkg/cli/cmd_search.go:		Term:    rawArgs[0],
pkg/cli/cmd_search.go:		NoTrunc: searchNoTrunc,
pkg/cli/cmd_search.go:	}
pkg/cli/cmd_search.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_search.go:	return commands.RunSearch(ctx, args)
pkg/cli/cmd_search.go:}
pkg/cli/cmd_start.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_start.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_start.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_start.go:package cli
pkg/cli/cmd_start.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_start.go:var cmdStart = &Command{
pkg/cli/cmd_start.go:	Exec:        runStart,
pkg/cli/cmd_start.go:	UsageLine:   "start [OPTIONS] SERVER [SERVER...]",
pkg/cli/cmd_start.go:	Description: "Start a stopped server",
pkg/cli/cmd_start.go:	Help:        "Start a stopped server.",
pkg/cli/cmd_start.go:}
pkg/cli/cmd_start.go:func init() {
pkg/cli/cmd_start.go:	cmdStart.Flag.BoolVar(&startW, []string{"w", "-wait"}, false, "Synchronous start. Wait for SSH to be ready")
pkg/cli/cmd_start.go:	cmdStart.Flag.Float64Var(&startTimeout, []string{"T", "-timeout"}, 0, "Set timeout values to seconds")
pkg/cli/cmd_start.go:	cmdStart.Flag.BoolVar(&startHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_start.go:}
pkg/cli/cmd_start.go:// Flags
pkg/cli/cmd_start.go:var startW bool          // -w flag
pkg/cli/cmd_start.go:var startTimeout float64 // -T flag
pkg/cli/cmd_start.go:var startHelp bool       // -h, --help flag
pkg/cli/cmd_start.go:func runStart(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_start.go:	if startHelp {
pkg/cli/cmd_start.go:		return cmd.PrintUsage()
pkg/cli/cmd_start.go:	}
pkg/cli/cmd_start.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_start.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_start.go:	}
pkg/cli/cmd_start.go:	args := commands.StartArgs{
pkg/cli/cmd_start.go:		Servers: rawArgs,
pkg/cli/cmd_start.go:		Timeout: startTimeout,
pkg/cli/cmd_start.go:		Wait:    startW,
pkg/cli/cmd_start.go:	}
pkg/cli/cmd_start.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_start.go:	return commands.RunStart(ctx, args)
pkg/cli/cmd_start.go:}
pkg/cli/cmd_stop.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_stop.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_stop.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_stop.go:package cli
pkg/cli/cmd_stop.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_stop.go:var cmdStop = &Command{
pkg/cli/cmd_stop.go:	Exec:        runStop,
pkg/cli/cmd_stop.go:	UsageLine:   "stop [OPTIONS] SERVER [SERVER...]",
pkg/cli/cmd_stop.go:	Description: "Stop a running server",
pkg/cli/cmd_stop.go:	Help:        "Stop a running server.",
pkg/cli/cmd_stop.go:	Examples: `
pkg/cli/cmd_stop.go:    $ scw stop my-running-server my-second-running-server
pkg/cli/cmd_stop.go:    $ scw stop -t my-running-server my-second-running-server
pkg/cli/cmd_stop.go:    $ scw stop $(scw ps -q)
pkg/cli/cmd_stop.go:    $ scw stop $(scw ps | grep mysql | awk '{print $1}')
pkg/cli/cmd_stop.go:    $ scw stop server && stop wait server
pkg/cli/cmd_stop.go:    $ scw stop -w server
pkg/cli/cmd_stop.go:`,
pkg/cli/cmd_stop.go:}
pkg/cli/cmd_stop.go:func init() {
pkg/cli/cmd_stop.go:	cmdStop.Flag.BoolVar(&stopT, []string{"t", "-terminate"}, false, "Stop and trash a server with its volumes")
pkg/cli/cmd_stop.go:	cmdStop.Flag.BoolVar(&stopHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_stop.go:	cmdStop.Flag.BoolVar(&stopW, []string{"w", "-wait"}, false, "Synchronous stop. Wait for SSH to be ready")
pkg/cli/cmd_stop.go:}
pkg/cli/cmd_stop.go:// Flags
pkg/cli/cmd_stop.go:var stopT bool    // -t flag
pkg/cli/cmd_stop.go:var stopHelp bool // -h, --help flag
pkg/cli/cmd_stop.go:var stopW bool    // -w, --wait flat
pkg/cli/cmd_stop.go:func runStop(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_stop.go:	if stopHelp {
pkg/cli/cmd_stop.go:		return cmd.PrintUsage()
pkg/cli/cmd_stop.go:	}
pkg/cli/cmd_stop.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_stop.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_stop.go:	}
pkg/cli/cmd_stop.go:	args := commands.StopArgs{
pkg/cli/cmd_stop.go:		Terminate: stopT,
pkg/cli/cmd_stop.go:		Wait:      stopW,
pkg/cli/cmd_stop.go:		Servers:   rawArgs,
pkg/cli/cmd_stop.go:	}
pkg/cli/cmd_stop.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_stop.go:	return commands.RunStop(ctx, args)
pkg/cli/cmd_stop.go:}
pkg/cli/cmd_tag.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_tag.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_tag.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_tag.go:package cli
pkg/cli/cmd_tag.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_tag.go:var cmdTag = &Command{
pkg/cli/cmd_tag.go:	Exec:        runTag,
pkg/cli/cmd_tag.go:	UsageLine:   "tag [OPTIONS] SNAPSHOT NAME",
pkg/cli/cmd_tag.go:	Description: "Tag a snapshot into an image",
pkg/cli/cmd_tag.go:	Help:        "Tag a snapshot into an image.",
pkg/cli/cmd_tag.go:}
pkg/cli/cmd_tag.go:func init() {
pkg/cli/cmd_tag.go:	cmdTag.Flag.BoolVar(&tagHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_tag.go:	cmdTag.Flag.StringVar(&tagBootscript, []string{"-bootscript"}, "", "Assign bootscript")
pkg/cli/cmd_tag.go:	cmdTag.Flag.StringVar(&tagArch, []string{"-arch"}, "arm", "Image architecture")
pkg/cli/cmd_tag.go:}
pkg/cli/cmd_tag.go:// Flags
pkg/cli/cmd_tag.go:var tagHelp bool         // -h, --help flag
pkg/cli/cmd_tag.go:var tagBootscript string // --bootscript flag
pkg/cli/cmd_tag.go:var tagArch string       // --arch flag
pkg/cli/cmd_tag.go:func runTag(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_tag.go:	if tagHelp {
pkg/cli/cmd_tag.go:		return cmd.PrintUsage()
pkg/cli/cmd_tag.go:	}
pkg/cli/cmd_tag.go:	if len(rawArgs) != 2 {
pkg/cli/cmd_tag.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_tag.go:	}
pkg/cli/cmd_tag.go:	args := commands.TagArgs{
pkg/cli/cmd_tag.go:		Snapshot:   rawArgs[0],
pkg/cli/cmd_tag.go:		Name:       rawArgs[1],
pkg/cli/cmd_tag.go:		Bootscript: tagBootscript,
pkg/cli/cmd_tag.go:		Arch:       tagArch,
pkg/cli/cmd_tag.go:	}
pkg/cli/cmd_tag.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_tag.go:	return commands.RunTag(ctx, args)
pkg/cli/cmd_tag.go:}
pkg/cli/cmd_top.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_top.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_top.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_top.go:package cli
pkg/cli/cmd_top.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_top.go:var cmdTop = &Command{
pkg/cli/cmd_top.go:	Exec:        runTop,
pkg/cli/cmd_top.go:	UsageLine:   "top [OPTIONS] SERVER", // FIXME: add ps options
pkg/cli/cmd_top.go:	Description: "Lookup the running processes of a server",
pkg/cli/cmd_top.go:	Help:        "Lookup the running processes of a server.",
pkg/cli/cmd_top.go:}
pkg/cli/cmd_top.go:func init() {
pkg/cli/cmd_top.go:	cmdTop.Flag.BoolVar(&topHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_top.go:	cmdTop.Flag.StringVar(&topGateway, []string{"g", "-gateway"}, "", "Use a SSH gateway")
pkg/cli/cmd_top.go:}
pkg/cli/cmd_top.go:// Flags
pkg/cli/cmd_top.go:var topHelp bool      // -h, --help flag
pkg/cli/cmd_top.go:var topGateway string // -g, --gateway flag
pkg/cli/cmd_top.go:func runTop(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_top.go:	if topHelp {
pkg/cli/cmd_top.go:		return cmd.PrintUsage()
pkg/cli/cmd_top.go:	}
pkg/cli/cmd_top.go:	if len(rawArgs) != 1 {
pkg/cli/cmd_top.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_top.go:	}
pkg/cli/cmd_top.go:	args := commands.TopArgs{
pkg/cli/cmd_top.go:		Gateway: topGateway,
pkg/cli/cmd_top.go:		Server:  rawArgs[0],
pkg/cli/cmd_top.go:	}
pkg/cli/cmd_top.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_top.go:	return commands.RunTop(ctx, args)
pkg/cli/cmd_top.go:}
pkg/cli/cmd_version.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_version.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_version.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_version.go:package cli
pkg/cli/cmd_version.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_version.go:var cmdVersion = &Command{
pkg/cli/cmd_version.go:	Exec:        runVersion,
pkg/cli/cmd_version.go:	UsageLine:   "version [OPTIONS]",
pkg/cli/cmd_version.go:	Description: "Show the version information",
pkg/cli/cmd_version.go:	Help:        "Show the version information.",
pkg/cli/cmd_version.go:}
pkg/cli/cmd_version.go:func init() {
pkg/cli/cmd_version.go:	cmdVersion.Flag.BoolVar(&versionHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_version.go:}
pkg/cli/cmd_version.go:// Flags
pkg/cli/cmd_version.go:var versionHelp bool // -h, --help flag
pkg/cli/cmd_version.go:func runVersion(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_version.go:	if versionHelp {
pkg/cli/cmd_version.go:		return cmd.PrintUsage()
pkg/cli/cmd_version.go:	}
pkg/cli/cmd_version.go:	if len(rawArgs) != 0 {
pkg/cli/cmd_version.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_version.go:	}
pkg/cli/cmd_version.go:	args := commands.VersionArgs{}
pkg/cli/cmd_version.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_version.go:	return commands.Version(ctx, args)
pkg/cli/cmd_version.go:}
pkg/cli/cmd_wait.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/cmd_wait.go:// Use of this source code is governed by a MIT-style
pkg/cli/cmd_wait.go:// license that can be found in the LICENSE.md file.
pkg/cli/cmd_wait.go:package cli
pkg/cli/cmd_wait.go:import "github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/cmd_wait.go:var cmdWait = &Command{
pkg/cli/cmd_wait.go:	Exec:        runWait,
pkg/cli/cmd_wait.go:	UsageLine:   "wait [OPTIONS] SERVER [SERVER...]",
pkg/cli/cmd_wait.go:	Description: "Block until a server stops",
pkg/cli/cmd_wait.go:	Help:        "Block until a server stops.",
pkg/cli/cmd_wait.go:}
pkg/cli/cmd_wait.go:func init() {
pkg/cli/cmd_wait.go:	cmdWait.Flag.BoolVar(&waitHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/cmd_wait.go:}
pkg/cli/cmd_wait.go:// Flags
pkg/cli/cmd_wait.go:var waitHelp bool // -h, --help flag
pkg/cli/cmd_wait.go:func runWait(cmd *Command, rawArgs []string) error {
pkg/cli/cmd_wait.go:	if waitHelp {
pkg/cli/cmd_wait.go:		return cmd.PrintUsage()
pkg/cli/cmd_wait.go:	}
pkg/cli/cmd_wait.go:	if len(rawArgs) < 1 {
pkg/cli/cmd_wait.go:		return cmd.PrintShortUsage()
pkg/cli/cmd_wait.go:	}
pkg/cli/cmd_wait.go:	args := commands.WaitArgs{
pkg/cli/cmd_wait.go:		Servers: rawArgs,
pkg/cli/cmd_wait.go:	}
pkg/cli/cmd_wait.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/cmd_wait.go:	return commands.RunWait(ctx, args)
pkg/cli/cmd_wait.go:}
pkg/cli/command.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/command.go:// Use of this source code is governed by a MIT-style
pkg/cli/command.go:// license that can be found in the LICENSE.md file.
pkg/cli/command.go:package cli
pkg/cli/command.go:// Command is a Scaleway command
pkg/cli/command.go:import (
pkg/cli/command.go:	"bytes"
pkg/cli/command.go:	"errors"
pkg/cli/command.go:	"fmt"
pkg/cli/command.go:	"os"
pkg/cli/command.go:	"strings"
pkg/cli/command.go:	"text/template"
pkg/cli/command.go:	flag "github.com/docker/docker/pkg/mflag"
pkg/cli/command.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/cli/command.go:	"github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/command.go:)
pkg/cli/command.go:// errors
pkg/cli/command.go:var (
pkg/cli/command.go:	ErrExitFailure = errors.New("exit 1")
pkg/cli/command.go:	ErrExitSuccess = errors.New("exit 0")
pkg/cli/command.go:)
pkg/cli/command.go:// Command contains everything needed by the cli main loop to calls the workflow, display help and usage, and the context
pkg/cli/command.go:type Command struct {
pkg/cli/command.go:	// Exec executes the command
pkg/cli/command.go:	Exec func(cmd *Command, args []string) error
pkg/cli/command.go:	// Usage is the one-line usage message.
pkg/cli/command.go:	UsageLine string
pkg/cli/command.go:	// Description is the description of the command
pkg/cli/command.go:	Description string
pkg/cli/command.go:	// Help is the full description of the command
pkg/cli/command.go:	Help string
pkg/cli/command.go:	// Examples are some examples of the command
pkg/cli/command.go:	Examples string
pkg/cli/command.go:	// Flag is a set of flags specific to this command.
pkg/cli/command.go:	Flag flag.FlagSet
pkg/cli/command.go:	// Hidden is a flat to hide command from global help commands listing
pkg/cli/command.go:	Hidden bool
pkg/cli/command.go:	// API is the interface used to communicate with Scaleway's API
pkg/cli/command.go:	API *api.ScalewayAPI
pkg/cli/command.go:	streams *commands.Streams
pkg/cli/command.go:}
pkg/cli/command.go:// GetContext returns a standard context, with real stdin, stdout, stderr, a configured API and raw arguments
pkg/cli/command.go:func (c *Command) GetContext(rawArgs []string) commands.CommandContext {
pkg/cli/command.go:	ctx := commands.CommandContext{
pkg/cli/command.go:		Env:     os.Environ(),
pkg/cli/command.go:		RawArgs: rawArgs,
pkg/cli/command.go:		API:     c.API,
pkg/cli/command.go:	}
pkg/cli/command.go:	if c.streams != nil {
pkg/cli/command.go:		ctx.Streams = *c.streams
pkg/cli/command.go:	} else {
pkg/cli/command.go:		ctx.Streams = commands.Streams{
pkg/cli/command.go:			Stdin:  os.Stdin,
pkg/cli/command.go:			Stdout: os.Stdout,
pkg/cli/command.go:			Stderr: os.Stderr,
pkg/cli/command.go:		}
pkg/cli/command.go:	}
pkg/cli/command.go:	return ctx
pkg/cli/command.go:}
pkg/cli/command.go:// Streams returns command streams with default os streams if unset
pkg/cli/command.go:func (c *Command) Streams() *commands.Streams {
pkg/cli/command.go:	if c.streams != nil {
pkg/cli/command.go:		return c.streams
pkg/cli/command.go:	}
pkg/cli/command.go:	return &commands.Streams{
pkg/cli/command.go:		Stdin:  os.Stdin,
pkg/cli/command.go:		Stdout: os.Stdout,
pkg/cli/command.go:		Stderr: os.Stderr,
pkg/cli/command.go:	}
pkg/cli/command.go:}
pkg/cli/command.go:// Name returns the command's name
pkg/cli/command.go:func (c *Command) Name() string {
pkg/cli/command.go:	name := c.UsageLine
pkg/cli/command.go:	i := strings.Index(name, " ")
pkg/cli/command.go:	if i >= 0 {
pkg/cli/command.go:		name = name[:i]
pkg/cli/command.go:	}
pkg/cli/command.go:	return name
pkg/cli/command.go:}
pkg/cli/command.go:// PrintUsage prints a full command usage
pkg/cli/command.go:func (c *Command) PrintUsage() error {
pkg/cli/command.go:	helpMessage, err := commandHelpMessage(c)
pkg/cli/command.go:	if err != nil {
pkg/cli/command.go:		return err
pkg/cli/command.go:	}
pkg/cli/command.go:	fmt.Fprintf(c.Streams().Stdout, "%s\n", helpMessage)
pkg/cli/command.go:	return ErrExitFailure
pkg/cli/command.go:}
pkg/cli/command.go:// PrintShortUsage prints a short command usage
pkg/cli/command.go:func (c *Command) PrintShortUsage() error {
pkg/cli/command.go:	fmt.Fprintf(c.Streams().Stderr, "usage: scw %s. See 'scw %s --help'.\n", c.UsageLine, c.Name())
pkg/cli/command.go:	return ErrExitFailure
pkg/cli/command.go:}
pkg/cli/command.go:// Options returns a string describing options of the command
pkg/cli/command.go:func (c *Command) Options() string {
pkg/cli/command.go:	var options string
pkg/cli/command.go:	visitor := func(flag *flag.Flag) {
pkg/cli/command.go:		name := strings.Join(flag.Names, ", -")
pkg/cli/command.go:		var optionUsage string
pkg/cli/command.go:		if flag.DefValue == "" {
pkg/cli/command.go:			optionUsage = fmt.Sprintf("%s=\"\"", name)
pkg/cli/command.go:		} else {
pkg/cli/command.go:			optionUsage = fmt.Sprintf("%s=%s", name, flag.DefValue)
pkg/cli/command.go:		}
pkg/cli/command.go:		options += fmt.Sprintf("  -%-20s %s\n", optionUsage, flag.Usage)
pkg/cli/command.go:	}
pkg/cli/command.go:	c.Flag.VisitAll(visitor)
pkg/cli/command.go:	if len(options) == 0 {
pkg/cli/command.go:		return ""
pkg/cli/command.go:	}
pkg/cli/command.go:	return fmt.Sprintf("Options:\n\n%s", options)
pkg/cli/command.go:}
pkg/cli/command.go:// ExamplesHelp returns a string describing examples of the command
pkg/cli/command.go:func (c *Command) ExamplesHelp() string {
pkg/cli/command.go:	if c.Examples == "" {
pkg/cli/command.go:		return ""
pkg/cli/command.go:	}
pkg/cli/command.go:	return fmt.Sprintf("Examples:\n\n%s", strings.Trim(c.Examples, "\n"))
pkg/cli/command.go:}
pkg/cli/command.go:var fullHelpTemplate = `
pkg/cli/command.go:Usage: scw {{.UsageLine}}
pkg/cli/command.go:{{.Help}}
pkg/cli/command.go:{{.Options}}
pkg/cli/command.go:{{.ExamplesHelp}}
pkg/cli/command.go:`
pkg/cli/command.go:func commandHelpMessage(cmd *Command) (string, error) {
pkg/cli/command.go:	t := template.New("full")
pkg/cli/command.go:	template.Must(t.Parse(fullHelpTemplate))
pkg/cli/command.go:	var output bytes.Buffer
pkg/cli/command.go:	err := t.Execute(&output, cmd)
pkg/cli/command.go:	if err != nil {
pkg/cli/command.go:		return "", err
pkg/cli/command.go:	}
pkg/cli/command.go:	return strings.Trim(output.String(), "\n"), nil
pkg/cli/command.go:}
pkg/cli/command_test.go:package cli
pkg/cli/command_test.go:import (
pkg/cli/command_test.go:	"testing"
pkg/cli/command_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/cli/command_test.go:)
pkg/cli/command_test.go:func TestCommand_Name(t *testing.T) {
pkg/cli/command_test.go:	Convey("Testing Command.Name()", t, func() {
pkg/cli/command_test.go:		command := Command{
pkg/cli/command_test.go:			UsageLine: "top [OPTIONS] SERVER",
pkg/cli/command_test.go:		}
pkg/cli/command_test.go:		So(command.Name(), ShouldEqual, "top")
pkg/cli/command_test.go:		command = Command{
pkg/cli/command_test.go:			UsageLine: "top",
pkg/cli/command_test.go:		}
pkg/cli/command_test.go:		So(command.Name(), ShouldEqual, "top")
pkg/cli/command_test.go:	})
pkg/cli/command_test.go:}
pkg/cli/commands.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/commands.go:// Use of this source code is governed by a MIT-style
pkg/cli/commands.go:// license that can be found in the LICENSE.md file.
pkg/cli/commands.go:// Docker-style commands to manage BareMetal servers
pkg/cli/commands.go:// Package cli contains CLI commands
pkg/cli/commands.go:package cli
pkg/cli/commands.go:// Commands is the list of enabled CLI commands
pkg/cli/commands.go:var Commands = []*Command{
pkg/cli/commands.go:	CmdHelp,
pkg/cli/commands.go:	cmdAttach,
pkg/cli/commands.go:	cmdCommit,
pkg/cli/commands.go:	cmdCp,
pkg/cli/commands.go:	cmdCreate,
pkg/cli/commands.go:	cmdEvents,
pkg/cli/commands.go:	cmdExec,
pkg/cli/commands.go:	cmdHistory,
pkg/cli/commands.go:	cmdImages,
pkg/cli/commands.go:	cmdInfo,
pkg/cli/commands.go:	cmdInspect,
pkg/cli/commands.go:	cmdKill,
pkg/cli/commands.go:	cmdLogin,
pkg/cli/commands.go:	cmdLogout,
pkg/cli/commands.go:	cmdLogs,
pkg/cli/commands.go:	cmdPort,
pkg/cli/commands.go:	cmdPs,
pkg/cli/commands.go:	cmdRename,
pkg/cli/commands.go:	cmdRestart,
pkg/cli/commands.go:	cmdRm,
pkg/cli/commands.go:	cmdRmi,
pkg/cli/commands.go:	cmdRun,
pkg/cli/commands.go:	cmdSearch,
pkg/cli/commands.go:	cmdStart,
pkg/cli/commands.go:	cmdStop,
pkg/cli/commands.go:	cmdTag,
pkg/cli/commands.go:	cmdTop,
pkg/cli/commands.go:	cmdUserdata,
pkg/cli/commands.go:	cmdVersion,
pkg/cli/commands.go:	cmdWait,
pkg/cli/commands.go:	cmdBilling,
pkg/cli/commands.go:	cmdCompletion,
pkg/cli/commands.go:	cmdFlushCache,
pkg/cli/commands.go:	cmdPatch,
pkg/cli/commands.go:	cmdSecurityGroups,
pkg/cli/commands.go:	cmdIPS,
pkg/cli/commands.go:	cmdCS,
pkg/cli/commands.go:}
pkg/cli/flags.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/flags.go:// Use of this source code is governed by a MIT-style
pkg/cli/flags.go:// license that can be found in the LICENSE.md file.
pkg/cli/flags.go:package cli
pkg/cli/flags.go:import "fmt"
pkg/cli/flags.go:// CommandListOpts holds a list of parameters
pkg/cli/flags.go:type CommandListOpts struct {
pkg/cli/flags.go:	Values *[]string
pkg/cli/flags.go:}
pkg/cli/flags.go:// NewListOpts create an empty CommandListOpts
pkg/cli/flags.go:func NewListOpts() CommandListOpts {
pkg/cli/flags.go:	var values []string
pkg/cli/flags.go:	return CommandListOpts{
pkg/cli/flags.go:		Values: &values,
pkg/cli/flags.go:	}
pkg/cli/flags.go:}
pkg/cli/flags.go:// String returns a string representation of a CommandListOpts object
pkg/cli/flags.go:func (opts *CommandListOpts) String() string {
pkg/cli/flags.go:	return fmt.Sprintf("%v", []string((*opts.Values)))
pkg/cli/flags.go:}
pkg/cli/flags.go:// Set appends a new value to a CommandListOpts
pkg/cli/flags.go:func (opts *CommandListOpts) Set(value string) error {
pkg/cli/flags.go:	(*opts.Values) = append((*opts.Values), value)
pkg/cli/flags.go:	return nil
pkg/cli/flags.go:}
pkg/cli/main.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/main.go:// Use of this source code is governed by a MIT-style
pkg/cli/main.go:// license that can be found in the LICENSE.md file.
pkg/cli/main.go:package cli
pkg/cli/main.go:import (
pkg/cli/main.go:	"fmt"
pkg/cli/main.go:	"io/ioutil"
pkg/cli/main.go:	"os"
pkg/cli/main.go:	"github.com/Sirupsen/logrus"
pkg/cli/main.go:	flag "github.com/docker/docker/pkg/mflag"
pkg/cli/main.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/cli/main.go:	"github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/main.go:	"github.com/scaleway/scaleway-cli/pkg/config"
pkg/cli/main.go:	"github.com/scaleway/scaleway-cli/pkg/scwversion"
pkg/cli/main.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/cli/main.go:)
pkg/cli/main.go:// global options
pkg/cli/main.go:var (
pkg/cli/main.go:	flAPIEndPoint *string
pkg/cli/main.go:	flDebug       = flag.Bool([]string{"D", "-debug"}, false, "Enable debug mode")
pkg/cli/main.go:	flVerbose     = flag.Bool([]string{"V", "-verbose"}, false, "Enable verbose mode")
pkg/cli/main.go:	flVersion     = flag.Bool([]string{"v", "-version"}, false, "Print version information and quit")
pkg/cli/main.go:	flQuiet       = flag.Bool([]string{"q", "-quiet"}, false, "Enable quiet mode")
pkg/cli/main.go:	flSensitive   = flag.Bool([]string{"-sensitive"}, false, "Show sensitive data in outputs, i.e. API Token/Organization")
pkg/cli/main.go:)
pkg/cli/main.go:// Start is the entrypoint
pkg/cli/main.go:func Start(rawArgs []string, streams *commands.Streams) (int, error) {
pkg/cli/main.go:	if streams == nil {
pkg/cli/main.go:		streams = &commands.Streams{
pkg/cli/main.go:			Stdin:  os.Stdin,
pkg/cli/main.go:			Stdout: os.Stdout,
pkg/cli/main.go:			Stderr: os.Stderr,
pkg/cli/main.go:		}
pkg/cli/main.go:	}
pkg/cli/main.go:	flag.CommandLine.Parse(rawArgs)
pkg/cli/main.go:	config, cfgErr := config.GetConfig()
pkg/cli/main.go:	if cfgErr != nil && !os.IsNotExist(cfgErr) {
pkg/cli/main.go:		return 1, fmt.Errorf("unable to open .scwrc config file: %v", cfgErr)
pkg/cli/main.go:	}
pkg/cli/main.go:	if config != nil {
pkg/cli/main.go:		defaultComputeAPI := os.Getenv("scaleway_api_endpoint")
pkg/cli/main.go:		if defaultComputeAPI == "" {
pkg/cli/main.go:			defaultComputeAPI = config.ComputeAPI
pkg/cli/main.go:		}
pkg/cli/main.go:		if flAPIEndPoint == nil {
pkg/cli/main.go:			flAPIEndPoint = flag.String([]string{"-api-endpoint"}, defaultComputeAPI, "Set the API endpoint")
pkg/cli/main.go:		}
pkg/cli/main.go:	}
pkg/cli/main.go:	if *flVersion {
pkg/cli/main.go:		fmt.Fprintf(streams.Stderr, "scw version %s, build %s\n", scwversion.VERSION, scwversion.GITCOMMIT)
pkg/cli/main.go:		return 0, nil
pkg/cli/main.go:	}
pkg/cli/main.go:	if flAPIEndPoint != nil {
pkg/cli/main.go:		os.Setenv("scaleway_api_endpoint", *flAPIEndPoint)
pkg/cli/main.go:	}
pkg/cli/main.go:	if *flSensitive {
pkg/cli/main.go:		os.Setenv("SCW_SENSITIVE", "1")
pkg/cli/main.go:	}
pkg/cli/main.go:	if *flDebug {
pkg/cli/main.go:		os.Setenv("DEBUG", "1")
pkg/cli/main.go:	}
pkg/cli/main.go:	utils.Quiet(*flQuiet)
pkg/cli/main.go:	initLogging(os.Getenv("DEBUG") != "", *flVerbose, streams)
pkg/cli/main.go:	args := flag.Args()
pkg/cli/main.go:	if len(args) < 1 {
pkg/cli/main.go:		CmdHelp.Exec(CmdHelp, []string{})
pkg/cli/main.go:		return 1, nil
pkg/cli/main.go:	}
pkg/cli/main.go:	name := args[0]
pkg/cli/main.go:	args = args[1:]
pkg/cli/main.go:	// Apply default values
pkg/cli/main.go:	for _, cmd := range Commands {
pkg/cli/main.go:		cmd.streams = streams
pkg/cli/main.go:	}
pkg/cli/main.go:	for _, cmd := range Commands {
pkg/cli/main.go:		if cmd.Name() == name {
pkg/cli/main.go:			cmd.Flag.SetOutput(ioutil.Discard)
pkg/cli/main.go:			err := cmd.Flag.Parse(args)
pkg/cli/main.go:			if err != nil {
pkg/cli/main.go:				return 1, fmt.Errorf("usage: scw %s", cmd.UsageLine)
pkg/cli/main.go:			}
pkg/cli/main.go:			switch cmd.Name() {
pkg/cli/main.go:			case "login", "help", "version":
pkg/cli/main.go:				// commands that don't need API
pkg/cli/main.go:			case "_userdata":
pkg/cli/main.go:				// commands that may need API
pkg/cli/main.go:				api, _ := getScalewayAPI()
pkg/cli/main.go:				cmd.API = api
pkg/cli/main.go:			default:
pkg/cli/main.go:				// commands that do need API
pkg/cli/main.go:				if cfgErr != nil {
pkg/cli/main.go:					if name != "login" && config == nil {
pkg/cli/main.go:						logrus.Debugf("cfgErr: %v", cfgErr)
pkg/cli/main.go:						fmt.Fprintf(streams.Stderr, "You need to login first: 'scw login'\n")
pkg/cli/main.go:						return 1, nil
pkg/cli/main.go:					}
pkg/cli/main.go:				}
pkg/cli/main.go:				api, err := getScalewayAPI()
pkg/cli/main.go:				if err != nil {
pkg/cli/main.go:					return 1, fmt.Errorf("unable to initialize scw api: %s", err)
pkg/cli/main.go:				}
pkg/cli/main.go:				cmd.API = api
pkg/cli/main.go:			}
pkg/cli/main.go:			err = cmd.Exec(cmd, cmd.Flag.Args())
pkg/cli/main.go:			switch err {
pkg/cli/main.go:			case nil:
pkg/cli/main.go:			case ErrExitFailure:
pkg/cli/main.go:				return 1, nil
pkg/cli/main.go:			case ErrExitSuccess:
pkg/cli/main.go:				return 0, nil
pkg/cli/main.go:			default:
pkg/cli/main.go:				return 1, fmt.Errorf("cannot execute '%s': %v", cmd.Name(), err)
pkg/cli/main.go:			}
pkg/cli/main.go:			if cmd.API != nil {
pkg/cli/main.go:				cmd.API.Sync()
pkg/cli/main.go:			}
pkg/cli/main.go:			return 0, nil
pkg/cli/main.go:		}
pkg/cli/main.go:	}
pkg/cli/main.go:	return 1, fmt.Errorf("scw: unknown subcommand %s\nRun 'scw help' for usage", name)
pkg/cli/main.go:}
pkg/cli/main.go:// getScalewayAPI returns a ScalewayAPI using the user config file
pkg/cli/main.go:func getScalewayAPI() (*api.ScalewayAPI, error) {
pkg/cli/main.go:	// We already get config globally, but whis way we can get explicit error when trying to create a ScalewayAPI object
pkg/cli/main.go:	config, err := config.GetConfig()
pkg/cli/main.go:	if err != nil {
pkg/cli/main.go:		return nil, err
pkg/cli/main.go:	}
pkg/cli/main.go:	return api.NewScalewayAPI(os.Getenv("scaleway_api_endpoint"), config.AccountAPI, config.Organization, config.Token)
pkg/cli/main.go:}
pkg/cli/main.go:func initLogging(debug bool, verbose bool, streams *commands.Streams) {
pkg/cli/main.go:	logrus.SetOutput(streams.Stderr)
pkg/cli/main.go:	if debug {
pkg/cli/main.go:		logrus.SetLevel(logrus.DebugLevel)
pkg/cli/main.go:	} else if verbose {
pkg/cli/main.go:		logrus.SetLevel(logrus.InfoLevel)
pkg/cli/main.go:	} else {
pkg/cli/main.go:		logrus.SetLevel(logrus.WarnLevel)
pkg/cli/main.go:	}
pkg/cli/main.go:}
pkg/cli/main_test.go:package cli
pkg/cli/main_test.go:import (
pkg/cli/main_test.go:	"bytes"
pkg/cli/main_test.go:	"fmt"
pkg/cli/main_test.go:	"os"
pkg/cli/main_test.go:	"os/exec"
pkg/cli/main_test.go:	"testing"
pkg/cli/main_test.go:	"github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/main_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/cli/main_test.go:)
pkg/cli/main_test.go:func testHelpOutput(out string, err string) {
pkg/cli/main_test.go:	// headers & footers
pkg/cli/main_test.go:	So(out, ShouldContainSubstring, "Usage: scw [OPTIONS] COMMAND [arg...]")
pkg/cli/main_test.go:	So(out, ShouldContainSubstring, "Interact with Scaleway from the command line.")
pkg/cli/main_test.go:	So(out, ShouldContainSubstring, "Run 'scw COMMAND --help' for more information on a command.")
pkg/cli/main_test.go:	// options
pkg/cli/main_test.go:	So(out, ShouldContainSubstring, "Options:")
pkg/cli/main_test.go:	for _, option := range publicOptions {
pkg/cli/main_test.go:		So(out, ShouldContainSubstring, " "+option)
pkg/cli/main_test.go:	}
pkg/cli/main_test.go:	// public commands
pkg/cli/main_test.go:	So(out, ShouldContainSubstring, "Commands:")
pkg/cli/main_test.go:	for _, command := range publicCommands {
pkg/cli/main_test.go:		So(out, ShouldContainSubstring, "    "+command)
pkg/cli/main_test.go:	}
pkg/cli/main_test.go:	// secret commands
pkg/cli/main_test.go:	for _, command := range secretCommands {
pkg/cli/main_test.go:		So(out, ShouldNotContainSubstring, "    "+command)
pkg/cli/main_test.go:	}
pkg/cli/main_test.go:	// :lipstick:
pkg/cli/main_test.go:	/*
pkg/cli/main_test.go:		for _, line := range strings.Split(out, "\n") {
pkg/cli/main_test.go:			So(line, shouldFitInTerminal)
pkg/cli/main_test.go:		}
pkg/cli/main_test.go:	*/
pkg/cli/main_test.go:	// FIXME: count amount of options/commands, and panic if amount is different
pkg/cli/main_test.go:	// Testing stderr
pkg/cli/main_test.go:	So(err, ShouldEqual, "")
pkg/cli/main_test.go:}
pkg/cli/main_test.go:func testHelpCommandOutput(command string, out string, err string) {
pkg/cli/main_test.go:	// Header
pkg/cli/main_test.go:	So(out, ShouldContainSubstring, fmt.Sprintf("Usage: scw %s", command))
pkg/cli/main_test.go:	// FIXME: test description
pkg/cli/main_test.go:	// FIXME: test parameters
pkg/cli/main_test.go:	// Options
pkg/cli/main_test.go:	So(out, ShouldContainSubstring, "Options:")
pkg/cli/main_test.go:	So(out, ShouldContainSubstring, " -h, --help=false")
pkg/cli/main_test.go:	// FIXME: test other options
pkg/cli/main_test.go:	// Examples
pkg/cli/main_test.go:	// FIXME: todo
pkg/cli/main_test.go:	//So(out, ShouldContainSubstring, "Examples:")
pkg/cli/main_test.go:	// :lipstick:
pkg/cli/main_test.go:	/*
pkg/cli/main_test.go:		for _, line := range strings.Split(out, "\n") {
pkg/cli/main_test.go:			So(line, shouldFitInTerminal)
pkg/cli/main_test.go:		}
pkg/cli/main_test.go:	*/
pkg/cli/main_test.go:}
pkg/cli/main_test.go:func TestHelp(t *testing.T) {
pkg/cli/main_test.go:	Convey("Testing golang' `start(\"help\", ...)`", t, func() {
pkg/cli/main_test.go:		Convey("start(\"help\")", func() {
pkg/cli/main_test.go:			stdout := bytes.Buffer{}
pkg/cli/main_test.go:			stderr := bytes.Buffer{}
pkg/cli/main_test.go:			streams := commands.Streams{
pkg/cli/main_test.go:				Stdin:  os.Stdin,
pkg/cli/main_test.go:				Stdout: &stdout,
pkg/cli/main_test.go:				Stderr: &stderr,
pkg/cli/main_test.go:			}
pkg/cli/main_test.go:			ec, err := Start([]string{"help"}, &streams)
pkg/cli/main_test.go:			So(ec, ShouldEqual, 0)
pkg/cli/main_test.go:			So(err, ShouldBeNil)
pkg/cli/main_test.go:			testHelpOutput(stdout.String(), stderr.String())
pkg/cli/main_test.go:		})
pkg/cli/main_test.go:		cmds := append(publicCommands, secretCommands...)
pkg/cli/main_test.go:		for _, command := range cmds {
pkg/cli/main_test.go:			// FIXME: test 'start(COMMAND, "--help")'
pkg/cli/main_test.go:			if command == "help" {
pkg/cli/main_test.go:				continue
pkg/cli/main_test.go:			}
pkg/cli/main_test.go:			Convey(fmt.Sprintf("start(\"help\", \"%s\")", command), func() {
pkg/cli/main_test.go:				stdout := bytes.Buffer{}
pkg/cli/main_test.go:				stderr := bytes.Buffer{}
pkg/cli/main_test.go:				streams := commands.Streams{
pkg/cli/main_test.go:					Stdin:  os.Stdin,
pkg/cli/main_test.go:					Stdout: &stdout,
pkg/cli/main_test.go:					Stderr: &stderr,
pkg/cli/main_test.go:				}
pkg/cli/main_test.go:				ec, err := Start([]string{"help", command}, &streams)
pkg/cli/main_test.go:				So(ec, ShouldEqual, 1)
pkg/cli/main_test.go:				So(err, ShouldBeNil)
pkg/cli/main_test.go:				testHelpCommandOutput(command, stdout.String(), stderr.String())
pkg/cli/main_test.go:				// secondary help usage
pkg/cli/main_test.go:				// FIXME: should check for 'scw login' first
pkg/cli/main_test.go:				/*
pkg/cli/main_test.go:					if command != "help" {
pkg/cli/main_test.go:						// FIXME: this should works for "help" too
pkg/cli/main_test.go:						secondaryStdout := bytes.Buffer{}
pkg/cli/main_test.go:						secondaryStderr := bytes.Buffer{}
pkg/cli/main_test.go:						secondaryStreams := commands.Streams{
pkg/cli/main_test.go:							Stdin:  os.Stdin,
pkg/cli/main_test.go:							Stdout: &secondaryStdout,
pkg/cli/main_test.go:							Stderr: &secondaryStderr,
pkg/cli/main_test.go:						}
pkg/cli/main_test.go:						secondEc, secondErr := Start([]string{command, "--help"}, &secondaryStreams)
pkg/cli/main_test.go:						So(ec, ShouldEqual, secondEc)
pkg/cli/main_test.go:						//So(outStdout, ShouldEqual, secondOut)
pkg/cli/main_test.go:						So(fmt.Sprintf("%v", err), ShouldEqual, fmt.Sprintf("%v", secondErr))
pkg/cli/main_test.go:					}
pkg/cli/main_test.go:				*/
pkg/cli/main_test.go:			})
pkg/cli/main_test.go:		}
pkg/cli/main_test.go:	})
pkg/cli/main_test.go:	Convey("Testing shell' `scw help`", t, func() {
pkg/cli/main_test.go:		Convey("scw help", func() {
pkg/cli/main_test.go:			cmd := exec.Command(scwcli, "help")
pkg/cli/main_test.go:			out, ec, err := runCommandWithOutput(cmd)
pkg/cli/main_test.go:			stderr := "" // FIXME: get real stderr
pkg/cli/main_test.go:			// exit code
pkg/cli/main_test.go:			So(ec, ShouldEqual, 0)
pkg/cli/main_test.go:			So(err, ShouldBeNil)
pkg/cli/main_test.go:			// streams
pkg/cli/main_test.go:			testHelpOutput(out, stderr)
pkg/cli/main_test.go:		})
pkg/cli/main_test.go:		cmds := append(publicCommands, secretCommands...)
pkg/cli/main_test.go:		for _, command := range cmds {
pkg/cli/main_test.go:			// FIXME: test 'scw COMMAND --help'
pkg/cli/main_test.go:			Convey(fmt.Sprintf("scw help %s", command), func() {
pkg/cli/main_test.go:				cmd := exec.Command(scwcli, "help", command)
pkg/cli/main_test.go:				out, ec, err := runCommandWithOutput(cmd)
pkg/cli/main_test.go:				stderr := "" // FIXME: get real stderr
pkg/cli/main_test.go:				// exit code
pkg/cli/main_test.go:				So(ec, ShouldEqual, 1)
pkg/cli/main_test.go:				So(fmt.Sprintf("%s", err), ShouldEqual, "exit status 1")
pkg/cli/main_test.go:				// streams
pkg/cli/main_test.go:				testHelpCommandOutput(command, out, stderr)
pkg/cli/main_test.go:				// secondary help usage
pkg/cli/main_test.go:				// FIXME: should check for 'scw login' first
pkg/cli/main_test.go:				/*
pkg/cli/main_test.go:					if command != "help" {
pkg/cli/main_test.go:						// FIXME: this should works for "help" too
pkg/cli/main_test.go:						secondCmd := exec.Command(scwcli, command, "--help")
pkg/cli/main_test.go:						secondOut, secondEc, secondErr := runCommandWithOutput(secondCmd)
pkg/cli/main_test.go:						So(out, ShouldEqual, secondOut)
pkg/cli/main_test.go:						So(ec, ShouldEqual, secondEc)
pkg/cli/main_test.go:						So(fmt.Sprintf("%v", err), ShouldEqual, fmt.Sprintf("%v", secondErr))
pkg/cli/main_test.go:					}
pkg/cli/main_test.go:				*/
pkg/cli/main_test.go:			})
pkg/cli/main_test.go:		}
pkg/cli/main_test.go:		Convey("Unknown command", func() {
pkg/cli/main_test.go:			cmd := exec.Command(scwcli, "boogie")
pkg/cli/main_test.go:			out, ec, err := runCommandWithOutput(cmd)
pkg/cli/main_test.go:			So(out, ShouldContainSubstring, "scw: unknown subcommand boogie")
pkg/cli/main_test.go:			So(ec, ShouldEqual, 1)
pkg/cli/main_test.go:			So(fmt.Sprintf("%s", err), ShouldEqual, "exit status 1")
pkg/cli/main_test.go:		})
pkg/cli/main_test.go:	})
pkg/cli/main_test.go:}
pkg/cli/run_test.go:package cli
pkg/cli/run_test.go:import (
pkg/cli/run_test.go:	"fmt"
pkg/cli/run_test.go:	"testing"
pkg/cli/run_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/cli/run_test.go:)
pkg/cli/run_test.go:func TestRunRun(t *testing.T) {
pkg/cli/run_test.go:	Convey("Testing runRun", t, func() {
pkg/cli/run_test.go:		cmdRun.Flag.Parse([]string{"-a", "-d"})
pkg/cli/run_test.go:		rawArgs := []string{"my-server"}
pkg/cli/run_test.go:		So(runRun(cmdRun, rawArgs), ShouldResemble, fmt.Errorf("conflicting options: -a and -d"))
pkg/cli/run_test.go:		runAttachFlag = false
pkg/cli/run_test.go:		runDetachFlag = false
pkg/cli/run_test.go:		cmdRun.Flag.Parse([]string{"-a"})
pkg/cli/run_test.go:		rawArgs = []string{"my-server", "my-command"}
pkg/cli/run_test.go:		So(runRun(cmdRun, rawArgs), ShouldResemble, fmt.Errorf("conflicting options: -a and COMMAND"))
pkg/cli/run_test.go:		runAttachFlag = false
pkg/cli/run_test.go:		cmdRun.Flag.Parse([]string{"-d"})
pkg/cli/run_test.go:		rawArgs = []string{"my-server", "my-command"}
pkg/cli/run_test.go:		So(runRun(cmdRun, rawArgs), ShouldResemble, fmt.Errorf("conflicting options: -d and COMMAND"))
pkg/cli/run_test.go:		runDetachFlag = false
pkg/cli/run_test.go:		cmdRun.Flag.Parse([]string{"-d", "--rm"})
pkg/cli/run_test.go:		rawArgs = []string{"my-server"}
pkg/cli/run_test.go:		So(runRun(cmdRun, rawArgs), ShouldResemble, fmt.Errorf("conflicting options: --detach and --rm"))
pkg/cli/run_test.go:	})
pkg/cli/run_test.go:}
pkg/cli/test.go:package cli
pkg/cli/test.go:import (
pkg/cli/test.go:	"fmt"
pkg/cli/test.go:	"os/exec"
pkg/cli/test.go:	"syscall"
pkg/cli/test.go:)
pkg/cli/test.go:var (
pkg/cli/test.go:	scwcli         = "../../scw"
pkg/cli/test.go:	publicCommands = []string{
pkg/cli/test.go:		"help", "attach", "commit", "cp", "create",
pkg/cli/test.go:		"events", "exec", "history", "images", "info",
pkg/cli/test.go:		"inspect", "kill", "login", "logout", "logs",
pkg/cli/test.go:		"port", "ps", "rename", "restart", "rm", "rmi",
pkg/cli/test.go:		"run", "search", "start", "stop", "tag", "top",
pkg/cli/test.go:		"version", "wait",
pkg/cli/test.go:	}
pkg/cli/test.go:	secretCommands = []string{
pkg/cli/test.go:		"_patch", "_completion", "_flush-cache", "_userdata", "_billing",
pkg/cli/test.go:	}
pkg/cli/test.go:	publicOptions = []string{
pkg/cli/test.go:		"-h, --help=false",
pkg/cli/test.go:		"-D, --debug=false",
pkg/cli/test.go:		"-V, --verbose=false",
pkg/cli/test.go:		"-q, --quiet=false",
pkg/cli/test.go:		"--api-endpoint=APIEndPoint",
pkg/cli/test.go:		"--sensitive=false",
pkg/cli/test.go:		"-v, --version=false",
pkg/cli/test.go:	}
pkg/cli/test.go:)
pkg/cli/test.go:func shouldFitInTerminal(actual interface{}, expected ...interface{}) string {
pkg/cli/test.go:	if len(actual.(string)) < 80 {
pkg/cli/test.go:		return ""
pkg/cli/test.go:	}
pkg/cli/test.go:	return fmt.Sprintf("len(%q)\n -> %d chars (> 80 chars)", actual, len(actual.(string)))
pkg/cli/test.go:}
pkg/cli/test.go:func getExitCode(err error) (int, error) {
pkg/cli/test.go:	exitCode := 0
pkg/cli/test.go:	if exiterr, ok := err.(*exec.ExitError); ok {
pkg/cli/test.go:		if procExit, ok := exiterr.Sys().(syscall.WaitStatus); ok {
pkg/cli/test.go:			return procExit.ExitStatus(), nil
pkg/cli/test.go:		}
pkg/cli/test.go:	}
pkg/cli/test.go:	return exitCode, fmt.Errorf("failed to get exit code")
pkg/cli/test.go:}
pkg/cli/test.go:func processExitCode(err error) (exitCode int) {
pkg/cli/test.go:	if err != nil {
pkg/cli/test.go:		var exiterr error
pkg/cli/test.go:		if exitCode, exiterr = getExitCode(err); exiterr != nil {
pkg/cli/test.go:			// TODO: Fix this so we check the error's text.
pkg/cli/test.go:			// we've failed to retrieve exit code, so we set it to 127
pkg/cli/test.go:			exitCode = 127
pkg/cli/test.go:		}
pkg/cli/test.go:	}
pkg/cli/test.go:	return
pkg/cli/test.go:}
pkg/cli/test.go:func runCommandWithOutput(cmd *exec.Cmd) (output string, exitCode int, err error) {
pkg/cli/test.go:	exitCode = 0
pkg/cli/test.go:	out, err := cmd.CombinedOutput()
pkg/cli/test.go:	exitCode = processExitCode(err)
pkg/cli/test.go:	output = string(out)
pkg/cli/test.go:	return
pkg/cli/test.go:}
pkg/cli/x_billing.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/x_billing.go:// Use of this source code is governed by a MIT-style
pkg/cli/x_billing.go:// license that can be found in the LICENSE.md file.
pkg/cli/x_billing.go:package cli
pkg/cli/x_billing.go:import (
pkg/cli/x_billing.go:	"fmt"
pkg/cli/x_billing.go:	"math/big"
pkg/cli/x_billing.go:	"text/tabwriter"
pkg/cli/x_billing.go:	"time"
pkg/cli/x_billing.go:	"github.com/Sirupsen/logrus"
pkg/cli/x_billing.go:	"github.com/docker/go-units"
pkg/cli/x_billing.go:	"github.com/scaleway/scaleway-cli/pkg/commands"
pkg/cli/x_billing.go:	"github.com/scaleway/scaleway-cli/pkg/pricing"
pkg/cli/x_billing.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/cli/x_billing.go:)
pkg/cli/x_billing.go:var cmdBilling = &Command{
pkg/cli/x_billing.go:	Exec:        runBilling,
pkg/cli/x_billing.go:	UsageLine:   "_billing [OPTIONS]",
pkg/cli/x_billing.go:	Description: "",
pkg/cli/x_billing.go:	Hidden:      true,
pkg/cli/x_billing.go:	Help:        "Get resources billing estimation",
pkg/cli/x_billing.go:}
pkg/cli/x_billing.go:func init() {
pkg/cli/x_billing.go:	cmdBilling.Flag.BoolVar(&billingHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/x_billing.go:	cmdBilling.Flag.BoolVar(&billingNoTrunc, []string{"-no-trunc"}, false, "Don't truncate output")
pkg/cli/x_billing.go:}
pkg/cli/x_billing.go:// BillingArgs are flags for the `RunBilling` function
pkg/cli/x_billing.go:type BillingArgs struct {
pkg/cli/x_billing.go:	NoTrunc bool
pkg/cli/x_billing.go:}
pkg/cli/x_billing.go:// Flags
pkg/cli/x_billing.go:var billingHelp bool    // -h, --help flag
pkg/cli/x_billing.go:var billingNoTrunc bool // --no-trunc flag
pkg/cli/x_billing.go:func runBilling(cmd *Command, rawArgs []string) error {
pkg/cli/x_billing.go:	if billingHelp {
pkg/cli/x_billing.go:		return cmd.PrintUsage()
pkg/cli/x_billing.go:	}
pkg/cli/x_billing.go:	if len(rawArgs) > 0 {
pkg/cli/x_billing.go:		return cmd.PrintShortUsage()
pkg/cli/x_billing.go:	}
pkg/cli/x_billing.go:	// cli parsing
pkg/cli/x_billing.go:	args := commands.PsArgs{
pkg/cli/x_billing.go:		NoTrunc: billingNoTrunc,
pkg/cli/x_billing.go:	}
pkg/cli/x_billing.go:	ctx := cmd.GetContext(rawArgs)
pkg/cli/x_billing.go:	logrus.Warn("")
pkg/cli/x_billing.go:	logrus.Warn("Warning: 'scw _billing' is a work-in-progress price estimation tool")
pkg/cli/x_billing.go:	logrus.Warn("For real usage, visit https://cloud.scaleway.com/#/billing")
pkg/cli/x_billing.go:	logrus.Warn("")
pkg/cli/x_billing.go:	// table
pkg/cli/x_billing.go:	w := tabwriter.NewWriter(ctx.Stdout, 20, 1, 3, ' ', 0)
pkg/cli/x_billing.go:	defer w.Flush()
pkg/cli/x_billing.go:	fmt.Fprintf(w, "ID\tNAME\tSTARTED\tMONTH PRICE\n")
pkg/cli/x_billing.go:	// servers
pkg/cli/x_billing.go:	servers, err := cmd.API.GetServers(true, 0)
pkg/cli/x_billing.go:	if err != nil {
pkg/cli/x_billing.go:		return err
pkg/cli/x_billing.go:	}
pkg/cli/x_billing.go:	totalMonthPrice := new(big.Rat)
pkg/cli/x_billing.go:	for _, server := range *servers {
pkg/cli/x_billing.go:		if server.State != "running" {
pkg/cli/x_billing.go:			continue
pkg/cli/x_billing.go:		}
pkg/cli/x_billing.go:		shortID := utils.TruncIf(server.Identifier, 8, !args.NoTrunc)
pkg/cli/x_billing.go:		shortName := utils.TruncIf(utils.Wordify(server.Name), 25, !args.NoTrunc)
pkg/cli/x_billing.go:		modificationTime, _ := time.Parse("2006-01-02T15:04:05.000000+00:00", server.ModificationDate)
pkg/cli/x_billing.go:		modificationAgo := time.Now().UTC().Sub(modificationTime)
pkg/cli/x_billing.go:		shortModificationDate := units.HumanDuration(modificationAgo)
pkg/cli/x_billing.go:		usage := pricing.NewUsageByPath("/compute/c1/run")
pkg/cli/x_billing.go:		usage.SetStartEnd(modificationTime, time.Now().UTC())
pkg/cli/x_billing.go:		totalMonthPrice = totalMonthPrice.Add(totalMonthPrice, usage.Total())
pkg/cli/x_billing.go:		fmt.Fprintf(w, "server/%s\t%s\t%s\t%s\n", shortID, shortName, shortModificationDate, usage.TotalString())
pkg/cli/x_billing.go:	}
pkg/cli/x_billing.go:	fmt.Fprintf(w, "TOTAL\t\t\t%s\n", pricing.PriceString(totalMonthPrice, "EUR"))
pkg/cli/x_billing.go:	return nil
pkg/cli/x_billing.go:}
pkg/cli/x_completion.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/x_completion.go:// Use of this source code is governed by a MIT-style
pkg/cli/x_completion.go:// license that can be found in the LICENSE.md file.
pkg/cli/x_completion.go:package cli
pkg/cli/x_completion.go:import (
pkg/cli/x_completion.go:	"fmt"
pkg/cli/x_completion.go:	"sort"
pkg/cli/x_completion.go:	"strings"
pkg/cli/x_completion.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/cli/x_completion.go:	utils "github.com/scaleway/scaleway-cli/pkg/utils"
pkg/cli/x_completion.go:)
pkg/cli/x_completion.go:var cmdCompletion = &Command{
pkg/cli/x_completion.go:	Exec:        runCompletion,
pkg/cli/x_completion.go:	UsageLine:   "_completion [OPTIONS] CATEGORY",
pkg/cli/x_completion.go:	Description: "Completion helper",
pkg/cli/x_completion.go:	Help:        "Completion helper.",
pkg/cli/x_completion.go:	Hidden:      true,
pkg/cli/x_completion.go:	Examples: `
pkg/cli/x_completion.go:    $ scw _completion servers-all
pkg/cli/x_completion.go:    $ scw _completion images-all
pkg/cli/x_completion.go:    $ scw _completion snapshots-all
pkg/cli/x_completion.go:    $ scw _completion volumes-all
pkg/cli/x_completion.go:    $ scw _completion bootscripts-all
pkg/cli/x_completion.go:    $ scw _completion servers-names
pkg/cli/x_completion.go:    $ scw _completion images-names
pkg/cli/x_completion.go:    $ scw _completion snapshots-names
pkg/cli/x_completion.go:    $ scw _completion volumes-names
pkg/cli/x_completion.go:    $ scw _completion bootscripts-names
pkg/cli/x_completion.go:`,
pkg/cli/x_completion.go:}
pkg/cli/x_completion.go:func init() {
pkg/cli/x_completion.go:	cmdCompletion.Flag.BoolVar(&completionHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/x_completion.go:	cmdCompletion.Flag.BoolVar(&completionPrefix, []string{"-prefix"}, false, "Prefix entries")
pkg/cli/x_completion.go:}
pkg/cli/x_completion.go:// Flags
pkg/cli/x_completion.go:var completionHelp bool   // -h, --help flag
pkg/cli/x_completion.go:var completionPrefix bool // --prefix flag
pkg/cli/x_completion.go:func wordifyName(name string, kind string) string {
pkg/cli/x_completion.go:	ret := ""
pkg/cli/x_completion.go:	if completionPrefix {
pkg/cli/x_completion.go:		ret += kind + "\\:"
pkg/cli/x_completion.go:	}
pkg/cli/x_completion.go:	ret += utils.Wordify(name)
pkg/cli/x_completion.go:	return ret
pkg/cli/x_completion.go:}
pkg/cli/x_completion.go:func runCompletion(cmd *Command, args []string) error {
pkg/cli/x_completion.go:	if completionHelp {
pkg/cli/x_completion.go:		return cmd.PrintUsage()
pkg/cli/x_completion.go:	}
pkg/cli/x_completion.go:	if len(args) != 1 {
pkg/cli/x_completion.go:		return cmd.PrintShortUsage()
pkg/cli/x_completion.go:	}
pkg/cli/x_completion.go:	category := args[0]
pkg/cli/x_completion.go:	elements := []string{}
pkg/cli/x_completion.go:	switch category {
pkg/cli/x_completion.go:	case "servers-all":
pkg/cli/x_completion.go:		for identifier, fields := range cmd.API.Cache.Servers {
pkg/cli/x_completion.go:			elements = append(elements, identifier, wordifyName(fields[api.CacheTitle], "server"))
pkg/cli/x_completion.go:		}
pkg/cli/x_completion.go:	case "servers-names":
pkg/cli/x_completion.go:		for _, fields := range cmd.API.Cache.Servers {
pkg/cli/x_completion.go:			elements = append(elements, wordifyName(fields[api.CacheTitle], "server"))
pkg/cli/x_completion.go:		}
pkg/cli/x_completion.go:	case "images-all":
pkg/cli/x_completion.go:		for identifier, fields := range cmd.API.Cache.Images {
pkg/cli/x_completion.go:			elements = append(elements, identifier, wordifyName(fields[api.CacheTitle], "image"))
pkg/cli/x_completion.go:		}
pkg/cli/x_completion.go:	case "images-names":
pkg/cli/x_completion.go:		for _, fields := range cmd.API.Cache.Images {
pkg/cli/x_completion.go:			elements = append(elements, wordifyName(fields[api.CacheTitle], "image"))
pkg/cli/x_completion.go:		}
pkg/cli/x_completion.go:	case "volumes-all":
pkg/cli/x_completion.go:		for identifier, fields := range cmd.API.Cache.Volumes {
pkg/cli/x_completion.go:			elements = append(elements, identifier, wordifyName(fields[api.CacheTitle], "volume"))
pkg/cli/x_completion.go:		}
pkg/cli/x_completion.go:	case "volumes-names":
pkg/cli/x_completion.go:		for _, fields := range cmd.API.Cache.Volumes {
pkg/cli/x_completion.go:			elements = append(elements, wordifyName(fields[api.CacheTitle], "volume"))
pkg/cli/x_completion.go:		}
pkg/cli/x_completion.go:	case "snapshots-all":
pkg/cli/x_completion.go:		for identifier, fields := range cmd.API.Cache.Snapshots {
pkg/cli/x_completion.go:			elements = append(elements, identifier, wordifyName(fields[api.CacheTitle], "snapshot"))
pkg/cli/x_completion.go:		}
pkg/cli/x_completion.go:	case "snapshots-names":
pkg/cli/x_completion.go:		for _, fields := range cmd.API.Cache.Snapshots {
pkg/cli/x_completion.go:			elements = append(elements, wordifyName(fields[api.CacheTitle], "snapshot"))
pkg/cli/x_completion.go:		}
pkg/cli/x_completion.go:	case "bootscripts-all":
pkg/cli/x_completion.go:		for identifier, fields := range cmd.API.Cache.Bootscripts {
pkg/cli/x_completion.go:			elements = append(elements, identifier, wordifyName(fields[api.CacheTitle], "bootscript"))
pkg/cli/x_completion.go:		}
pkg/cli/x_completion.go:	case "bootscripts-names":
pkg/cli/x_completion.go:		for _, fields := range cmd.API.Cache.Bootscripts {
pkg/cli/x_completion.go:			elements = append(elements, wordifyName(fields[api.CacheTitle], "bootscript"))
pkg/cli/x_completion.go:		}
pkg/cli/x_completion.go:	default:
pkg/cli/x_completion.go:		return fmt.Errorf("Unhandled category of completion: %s", category)
pkg/cli/x_completion.go:	}
pkg/cli/x_completion.go:	sort.Strings(elements)
pkg/cli/x_completion.go:	fmt.Println(strings.Join(utils.RemoveDuplicates(elements), "\n"))
pkg/cli/x_completion.go:	return nil
pkg/cli/x_completion.go:}
pkg/cli/x_cs.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/x_cs.go:// Use of this source code is governed by a MIT-style
pkg/cli/x_cs.go:// license that can be found in the LICENSE.md file.
pkg/cli/x_cs.go:package cli
pkg/cli/x_cs.go:import (
pkg/cli/x_cs.go:	"fmt"
pkg/cli/x_cs.go:	"strconv"
pkg/cli/x_cs.go:	"strings"
pkg/cli/x_cs.go:	"time"
pkg/cli/x_cs.go:	"github.com/dustin/go-humanize"
pkg/cli/x_cs.go:)
pkg/cli/x_cs.go:var cmdCS = &Command{
pkg/cli/x_cs.go:	Exec:        runCS,
pkg/cli/x_cs.go:	UsageLine:   "_cs [CONTAINER_NAME]",
pkg/cli/x_cs.go:	Description: "",
pkg/cli/x_cs.go:	Hidden:      true,
pkg/cli/x_cs.go:	Help:        "List containers / datas",
pkg/cli/x_cs.go:	Examples: `
pkg/cli/x_cs.go:    $ scw _cs
pkg/cli/x_cs.go:    $ scw _cs containerName
pkg/cli/x_cs.go:`,
pkg/cli/x_cs.go:}
pkg/cli/x_cs.go:func init() {
pkg/cli/x_cs.go:	cmdCS.Flag.BoolVar(&csHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/x_cs.go:}
pkg/cli/x_cs.go:// Flags
pkg/cli/x_cs.go:var csHelp bool // -h, --help flag
pkg/cli/x_cs.go:func runCS(cmd *Command, args []string) error {
pkg/cli/x_cs.go:	if csHelp {
pkg/cli/x_cs.go:		return cmd.PrintUsage()
pkg/cli/x_cs.go:	}
pkg/cli/x_cs.go:	if len(args) > 1 {
pkg/cli/x_cs.go:		return cmd.PrintShortUsage()
pkg/cli/x_cs.go:	}
pkg/cli/x_cs.go:	if len(args) == 0 {
pkg/cli/x_cs.go:		containers, err := cmd.API.GetContainers()
pkg/cli/x_cs.go:		if err != nil {
pkg/cli/x_cs.go:			return fmt.Errorf("Unable to get your containers: %v", err)
pkg/cli/x_cs.go:		}
pkg/cli/x_cs.go:		for _, container := range containers.Containers {
pkg/cli/x_cs.go:			fmt.Fprintf(cmd.Streams().Stdout, "s3://%s\n", container.Name)
pkg/cli/x_cs.go:		}
pkg/cli/x_cs.go:		return nil
pkg/cli/x_cs.go:	}
pkg/cli/x_cs.go:	container := strings.Replace(args[0], "s3://", "", 1)
pkg/cli/x_cs.go:	datas, err := cmd.API.GetContainerDatas(container)
pkg/cli/x_cs.go:	if err != nil {
pkg/cli/x_cs.go:		return fmt.Errorf("Unable to get your data from %s: %v", container, err)
pkg/cli/x_cs.go:	}
pkg/cli/x_cs.go:	for _, data := range datas.Container {
pkg/cli/x_cs.go:		t, err := time.Parse(time.RFC3339, data.LastModified)
pkg/cli/x_cs.go:		if err != nil {
pkg/cli/x_cs.go:			return err
pkg/cli/x_cs.go:		}
pkg/cli/x_cs.go:		year, month, day := t.Date()
pkg/cli/x_cs.go:		hour, minute, _ := t.Clock()
pkg/cli/x_cs.go:		size, err := strconv.Atoi(data.Size)
pkg/cli/x_cs.go:		if err != nil {
pkg/cli/x_cs.go:			return err
pkg/cli/x_cs.go:		}
pkg/cli/x_cs.go:		fmt.Fprintf(cmd.Streams().Stdout, "%-4d-%02d-%02d %02d:%02d %8s s3://%s/%s\n", year, month, day, hour, minute, humanize.Bytes(uint64(size)), container, data.Name)
pkg/cli/x_cs.go:	}
pkg/cli/x_cs.go:	return nil
pkg/cli/x_cs.go:}
pkg/cli/x_flushcache.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/x_flushcache.go:// Use of this source code is governed by a MIT-style
pkg/cli/x_flushcache.go:// license that can be found in the LICENSE.md file.
pkg/cli/x_flushcache.go:package cli
pkg/cli/x_flushcache.go:import "fmt"
pkg/cli/x_flushcache.go:var cmdFlushCache = &Command{
pkg/cli/x_flushcache.go:	Exec:        runFlushCache,
pkg/cli/x_flushcache.go:	UsageLine:   "_flush-cache [OPTIONS]",
pkg/cli/x_flushcache.go:	Description: "",
pkg/cli/x_flushcache.go:	Hidden:      true,
pkg/cli/x_flushcache.go:	Help:        "Flush cache",
pkg/cli/x_flushcache.go:}
pkg/cli/x_flushcache.go:func init() {
pkg/cli/x_flushcache.go:	cmdFlushCache.Flag.BoolVar(&flushCacheHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/x_flushcache.go:}
pkg/cli/x_flushcache.go:// Flags
pkg/cli/x_flushcache.go:var flushCacheHelp bool // -h, --help flag
pkg/cli/x_flushcache.go:func runFlushCache(cmd *Command, args []string) error {
pkg/cli/x_flushcache.go:	if flushCacheHelp {
pkg/cli/x_flushcache.go:		return cmd.PrintUsage()
pkg/cli/x_flushcache.go:	}
pkg/cli/x_flushcache.go:	if len(args) > 0 {
pkg/cli/x_flushcache.go:		return cmd.PrintShortUsage()
pkg/cli/x_flushcache.go:	}
pkg/cli/x_flushcache.go:	err := cmd.API.Cache.Flush()
pkg/cli/x_flushcache.go:	if err != nil {
pkg/cli/x_flushcache.go:		return fmt.Errorf("Failed to flush the cache")
pkg/cli/x_flushcache.go:	}
pkg/cli/x_flushcache.go:	fmt.Println("Cache flushed")
pkg/cli/x_flushcache.go:	return nil
pkg/cli/x_flushcache.go:}
pkg/cli/x_ips.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/x_ips.go:// Use of this source code is governed by a MIT-style
pkg/cli/x_ips.go:// license that can be found in the LICENSE.md file.
pkg/cli/x_ips.go:package cli
pkg/cli/x_ips.go:var cmdIPS = &Command{
pkg/cli/x_ips.go:	Exec:      runIPS,
pkg/cli/x_ips.go:	UsageLine: "_ips [--new|--attach|--delete] [IP_ID [SERVER_ID]]",
pkg/cli/x_ips.go:	Description: "Interacts with your IPs",
pkg/cli/x_ips.go:	Hidden:      true,
pkg/cli/x_ips.go:	Help:        "Interacts with your IPs",
pkg/cli/x_ips.go:	Examples: `
pkg/cli/x_ips.go:    $ scw _ips
pkg/cli/x_ips.go:    $ scw _ips IP_ID
pkg/cli/x_ips.go:    $ scw _ips --new
pkg/cli/x_ips.go:    $ scw _ips --attach IP_ID SERVER_ID
pkg/cli/x_ips.go:    $ scw _ips --delete IP_ID
pkg/cli/x_ips.go:`,
pkg/cli/x_ips.go:}
pkg/cli/x_ips.go:func init() {
pkg/cli/x_ips.go:	cmdIPS.Flag.BoolVar(&ipHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/x_ips.go:	cmdIPS.Flag.BoolVar(&ipNew, []string{"n", "-new"}, false, "Add a new IP")
pkg/cli/x_ips.go:	cmdIPS.Flag.BoolVar(&ipAttach, []string{"a", "-attach"}, false, "Attach an IP to a server")
pkg/cli/x_ips.go:	cmdIPS.Flag.StringVar(&ipDelete, []string{"d", "-delete"}, "", "Detele an IP")
pkg/cli/x_ips.go:}
pkg/cli/x_ips.go:var ipHelp bool     // -h, --help flag
pkg/cli/x_ips.go:var ipNew bool      // -n, --new flag
pkg/cli/x_ips.go:var ipAttach bool   // -a, --attach flag
pkg/cli/x_ips.go:var ipDelete string // -d, --delete flag
pkg/cli/x_ips.go:func runIPS(cmd *Command, args []string) error {
pkg/cli/x_ips.go:	if ipHelp {
pkg/cli/x_ips.go:		return cmd.PrintUsage()
pkg/cli/x_ips.go:	}
pkg/cli/x_ips.go:	if ipNew {
pkg/cli/x_ips.go:		ip, err := cmd.API.NewIP()
pkg/cli/x_ips.go:		if err != nil {
pkg/cli/x_ips.go:			return err
pkg/cli/x_ips.go:		}
pkg/cli/x_ips.go:		printRawMode(cmd.Streams().Stdout, ip)
pkg/cli/x_ips.go:		return nil
pkg/cli/x_ips.go:	}
pkg/cli/x_ips.go:	if ipDelete != "" {
pkg/cli/x_ips.go:		return cmd.API.DeleteIP(ipDelete)
pkg/cli/x_ips.go:	}
pkg/cli/x_ips.go:	if ipAttach {
pkg/cli/x_ips.go:		if len(args) != 2 {
pkg/cli/x_ips.go:			return cmd.PrintShortUsage()
pkg/cli/x_ips.go:		}
pkg/cli/x_ips.go:		return cmd.API.AttachIP(args[0], args[1])
pkg/cli/x_ips.go:	}
pkg/cli/x_ips.go:	if len(args) == 1 {
pkg/cli/x_ips.go:		ip, err := cmd.API.GetIP(args[0])
pkg/cli/x_ips.go:		if err != nil {
pkg/cli/x_ips.go:			return err
pkg/cli/x_ips.go:		}
pkg/cli/x_ips.go:		printRawMode(cmd.Streams().Stdout, *ip)
pkg/cli/x_ips.go:		return nil
pkg/cli/x_ips.go:	}
pkg/cli/x_ips.go:	ips, err := cmd.API.GetIPS()
pkg/cli/x_ips.go:	if err != nil {
pkg/cli/x_ips.go:		return err
pkg/cli/x_ips.go:	}
pkg/cli/x_ips.go:	printRawMode(cmd.Streams().Stdout, *ips)
pkg/cli/x_ips.go:	return nil
pkg/cli/x_ips.go:}
pkg/cli/x_patch.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/x_patch.go:// Use of this source code is governed by a MIT-style
pkg/cli/x_patch.go:// license that can be found in the LICENSE.md file.
pkg/cli/x_patch.go:package cli
pkg/cli/x_patch.go:import (
pkg/cli/x_patch.go:	"fmt"
pkg/cli/x_patch.go:	"strings"
pkg/cli/x_patch.go:	log "github.com/Sirupsen/logrus"
pkg/cli/x_patch.go:	api "github.com/scaleway/scaleway-cli/pkg/api"
pkg/cli/x_patch.go:)
pkg/cli/x_patch.go:var cmdPatch = &Command{
pkg/cli/x_patch.go:	Exec:        runPatch,
pkg/cli/x_patch.go:	UsageLine:   "_patch [OPTIONS] IDENTIFIER FIELD=VALUE",
pkg/cli/x_patch.go:	Description: "",
pkg/cli/x_patch.go:	Hidden:      true,
pkg/cli/x_patch.go:	Help:        "PATCH an object on the API",
pkg/cli/x_patch.go:	Examples: `
pkg/cli/x_patch.go:    $ scw _patch myserver state_detail=booted
pkg/cli/x_patch.go:    $ scw _patch server:myserver state_detail=booted
pkg/cli/x_patch.go:`,
pkg/cli/x_patch.go:}
pkg/cli/x_patch.go:func init() {
pkg/cli/x_patch.go:	cmdPatch.Flag.BoolVar(&patchHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/x_patch.go:}
pkg/cli/x_patch.go:// Flags
pkg/cli/x_patch.go:var patchHelp bool // -h, --help flag
pkg/cli/x_patch.go:func runPatch(cmd *Command, args []string) error {
pkg/cli/x_patch.go:	if patchHelp {
pkg/cli/x_patch.go:		return cmd.PrintUsage()
pkg/cli/x_patch.go:	}
pkg/cli/x_patch.go:	if len(args) != 2 {
pkg/cli/x_patch.go:		return cmd.PrintShortUsage()
pkg/cli/x_patch.go:	}
pkg/cli/x_patch.go:	// Parsing FIELD=VALUE
pkg/cli/x_patch.go:	updateParts := strings.SplitN(args[1], "=", 2)
pkg/cli/x_patch.go:	if len(updateParts) != 2 {
pkg/cli/x_patch.go:		return cmd.PrintShortUsage()
pkg/cli/x_patch.go:	}
pkg/cli/x_patch.go:	fieldName := updateParts[0]
pkg/cli/x_patch.go:	newValue := updateParts[1]
pkg/cli/x_patch.go:	changes := 0
pkg/cli/x_patch.go:	ident, err := api.GetIdentifier(cmd.API, args[0])
pkg/cli/x_patch.go:	if err != nil {
pkg/cli/x_patch.go:		return err
pkg/cli/x_patch.go:	}
pkg/cli/x_patch.go:	switch ident.Type {
pkg/cli/x_patch.go:	case api.IdentifierServer:
pkg/cli/x_patch.go:		currentServer, err := cmd.API.GetServer(ident.Identifier)
pkg/cli/x_patch.go:		if err != nil {
pkg/cli/x_patch.go:			return fmt.Errorf("Cannot get server %s: %v", ident.Identifier, err)
pkg/cli/x_patch.go:		}
pkg/cli/x_patch.go:		var payload api.ScalewayServerPatchDefinition
pkg/cli/x_patch.go:		switch fieldName {
pkg/cli/x_patch.go:		case "state_detail":
pkg/cli/x_patch.go:			log.Debugf("%s=%s  =>  %s=%s", fieldName, currentServer.StateDetail, fieldName, newValue)
pkg/cli/x_patch.go:			if currentServer.StateDetail != newValue {
pkg/cli/x_patch.go:				changes++
pkg/cli/x_patch.go:				payload.StateDetail = &newValue
pkg/cli/x_patch.go:			}
pkg/cli/x_patch.go:		case "name":
pkg/cli/x_patch.go:			log.Warnf("To rename a server, Use 'scw rename'")
pkg/cli/x_patch.go:			log.Debugf("%s=%s  =>  %s=%s", fieldName, currentServer.StateDetail, fieldName, newValue)
pkg/cli/x_patch.go:			if currentServer.Name != newValue {
pkg/cli/x_patch.go:				changes++
pkg/cli/x_patch.go:				payload.Name = &newValue
pkg/cli/x_patch.go:			}
pkg/cli/x_patch.go:		case "bootscript":
pkg/cli/x_patch.go:			log.Debugf("%s=%s  =>  %s=%s", fieldName, currentServer.Bootscript.Identifier, fieldName, newValue)
pkg/cli/x_patch.go:			if currentServer.Bootscript.Identifier != newValue {
pkg/cli/x_patch.go:				changes++
pkg/cli/x_patch.go:				payload.Bootscript.Identifier = newValue
pkg/cli/x_patch.go:			}
pkg/cli/x_patch.go:		case "security_group":
pkg/cli/x_patch.go:			log.Debugf("%s=%s  =>  %s=%s", fieldName, currentServer.SecurityGroup.Identifier, fieldName, newValue)
pkg/cli/x_patch.go:			if currentServer.SecurityGroup.Identifier != newValue {
pkg/cli/x_patch.go:				changes++
pkg/cli/x_patch.go:				payload.SecurityGroup.Identifier = newValue
pkg/cli/x_patch.go:			}
pkg/cli/x_patch.go:		case "tags":
pkg/cli/x_patch.go:			newTags := strings.Split(newValue, " ")
pkg/cli/x_patch.go:			log.Debugf("%s=%s  =>  %s=%s", fieldName, currentServer.Tags, fieldName, newTags)
pkg/cli/x_patch.go:			// fixme test equality with reflect.DeepEqual ?
pkg/cli/x_patch.go:			changes++
pkg/cli/x_patch.go:			payload.Tags = &newTags
pkg/cli/x_patch.go:		default:
pkg/cli/x_patch.go:			return fmt.Errorf("'_patch server %s=' not implemented", fieldName)
pkg/cli/x_patch.go:		}
pkg/cli/x_patch.go:		// FIXME: volumes, tags, dynamic_ip_required
pkg/cli/x_patch.go:		if changes > 0 {
pkg/cli/x_patch.go:			log.Debugf("updating server: %d change(s)", changes)
pkg/cli/x_patch.go:			err = cmd.API.PatchServer(ident.Identifier, payload)
pkg/cli/x_patch.go:		} else {
pkg/cli/x_patch.go:			log.Debugf("no changes, not updating server")
pkg/cli/x_patch.go:		}
pkg/cli/x_patch.go:		if err != nil {
pkg/cli/x_patch.go:			return fmt.Errorf("Cannot update server: %v", err)
pkg/cli/x_patch.go:		}
pkg/cli/x_patch.go:	default:
pkg/cli/x_patch.go:		return fmt.Errorf("_patch not implemented for this kind of object")
pkg/cli/x_patch.go:	}
pkg/cli/x_patch.go:	fmt.Println(ident.Identifier)
pkg/cli/x_patch.go:	return nil
pkg/cli/x_patch.go:}
pkg/cli/x_security-groups.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/x_security-groups.go:// Use of this source code is governed by a MIT-style
pkg/cli/x_security-groups.go:// license that can be found in the LICENSE.md file.
pkg/cli/x_security-groups.go:package cli
pkg/cli/x_security-groups.go:import (
pkg/cli/x_security-groups.go:	"encoding/json"
pkg/cli/x_security-groups.go:	"fmt"
pkg/cli/x_security-groups.go:	"io"
pkg/cli/x_security-groups.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/cli/x_security-groups.go:)
pkg/cli/x_security-groups.go:var cmdSecurityGroups = &Command{
pkg/cli/x_security-groups.go:	Exec:        runSecurityGroups,
pkg/cli/x_security-groups.go:	UsageLine:   "_security-groups OPTIONS [ARGS]",
pkg/cli/x_security-groups.go:	Description: "Interacts with security-groups",
pkg/cli/x_security-groups.go:	Hidden:      true,
pkg/cli/x_security-groups.go:	Help:        "Interacts with security-groups",
pkg/cli/x_security-groups.go:	Examples: `
pkg/cli/x_security-groups.go:	SGID = SecurityGroupID
pkg/cli/x_security-groups.go:	ACTION = "{\"action\":"string", \"direction\": \"string\", \"ip_range\": \"string\", \"protocol\": \"string\", \"dest_port_from\": \"int\"}"
pkg/cli/x_security-groups.go:	$ scw _security-groups list-groups
pkg/cli/x_security-groups.go:	$ scw _security-groups show-group SGID
pkg/cli/x_security-groups.go:	$ scw _security-groups new-group --name=NAME --desc=DESC
pkg/cli/x_security-groups.go:	$ scw _security-groups update-group SGID --name=NAME --desc=DESC
pkg/cli/x_security-groups.go:	$ scw _security-groups delete-group SGID
pkg/cli/x_security-groups.go:	$ scw _security-groups list-rules SGID
pkg/cli/x_security-groups.go:	$ scw _security-groups show-rule SGID RULEID
pkg/cli/x_security-groups.go:	$ scw _security-gruops delete-rule SGID RULEID
pkg/cli/x_security-groups.go:	$ scw _security-groups new-rule SGID ACTION
pkg/cli/x_security-groups.go:	$ scw _security-gruops update-rule SGID RULEID ACTION`,
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:// "show-rule"
pkg/cli/x_security-groups.go:func init() {
pkg/cli/x_security-groups.go:	cmdSecurityGroups.Flag.BoolVar(&securityGroupsHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/x_security-groups.go:	cmdSecurityGroups.Flag.StringVar(&securityGroupsName, []string{"n", "-name"}, "", "SecurityGroup's name")
pkg/cli/x_security-groups.go:	cmdSecurityGroups.Flag.StringVar(&securityGroupsDesc, []string{"d", "-description"}, "", "SecurityGroup's description")
pkg/cli/x_security-groups.go:	subCmdSecurityGroup = map[string]func(cmd *Command, args []string) error{
pkg/cli/x_security-groups.go:		"list-groups":  listSecurityGroup,
pkg/cli/x_security-groups.go:		"new-group":    newSecurityGroup,
pkg/cli/x_security-groups.go:		"update-group": updateSecurityGroup,
pkg/cli/x_security-groups.go:		"delete-group": deleteSecurityGroup,
pkg/cli/x_security-groups.go:		"show-group":   showSecurityGroup,
pkg/cli/x_security-groups.go:		"list-rules":   listSecurityGroupRule,
pkg/cli/x_security-groups.go:		"new-rule":     newSecurityGroupRule,
pkg/cli/x_security-groups.go:		"update-rule":  updateSecurityGroupRule,
pkg/cli/x_security-groups.go:		"delete-rule":  deleteSecurityGroupRule,
pkg/cli/x_security-groups.go:		"show-rule":    showSecurityGroupRule,
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:// Flags
pkg/cli/x_security-groups.go:var securityGroupsHelp bool   // -h, --help flag
pkg/cli/x_security-groups.go:var securityGroupsName string // -n, --name flag
pkg/cli/x_security-groups.go:var securityGroupsDesc string // -d, --description flag
pkg/cli/x_security-groups.go:// SubCommand
pkg/cli/x_security-groups.go:var subCmdSecurityGroup map[string]func(cmd *Command, args []string) error
pkg/cli/x_security-groups.go:type rulesDefinition struct {
pkg/cli/x_security-groups.go:	Action       string `json:"action"`
pkg/cli/x_security-groups.go:	Direction    string `json:"direction"`
pkg/cli/x_security-groups.go:	IPRange      string `json:"ip_range"`
pkg/cli/x_security-groups.go:	Protocol     string `json:"protocol"`
pkg/cli/x_security-groups.go:	DestPortFrom *int   `json:"dest_port_from,omitempty"`
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func printRawMode(out io.Writer, data interface{}) error {
pkg/cli/x_security-groups.go:	js, err := json.MarshalIndent(data, "", "  ")
pkg/cli/x_security-groups.go:	if err != nil {
pkg/cli/x_security-groups.go:		return fmt.Errorf("Unable to parse the data: %v", err)
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	fmt.Fprintf(out, "%s\n", string(js))
pkg/cli/x_security-groups.go:	return nil
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func newSecurityGroup(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	fmt.Println(securityGroupsDesc)
pkg/cli/x_security-groups.go:	fmt.Println(securityGroupsName)
pkg/cli/x_security-groups.go:	if securityGroupsName == "" || securityGroupsDesc == "" {
pkg/cli/x_security-groups.go:		return cmd.PrintShortUsage()
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return cmd.API.PostSecurityGroup(api.ScalewayNewSecurityGroup{
pkg/cli/x_security-groups.go:		Organization: cmd.API.Organization,
pkg/cli/x_security-groups.go:		Name:         securityGroupsName,
pkg/cli/x_security-groups.go:		Description:  securityGroupsDesc,
pkg/cli/x_security-groups.go:	})
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func updateSecurityGroup(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	fmt.Println(args)
pkg/cli/x_security-groups.go:	if securityGroupsName == "" || securityGroupsDesc == "" || len(args) != 1 {
pkg/cli/x_security-groups.go:		return cmd.PrintShortUsage()
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return cmd.API.PutSecurityGroup(api.ScalewayNewSecurityGroup{
pkg/cli/x_security-groups.go:		Organization: cmd.API.Organization,
pkg/cli/x_security-groups.go:		Name:         securityGroupsName,
pkg/cli/x_security-groups.go:		Description:  securityGroupsDesc,
pkg/cli/x_security-groups.go:	}, args[0])
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func deleteSecurityGroup(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	if len(args) != 1 {
pkg/cli/x_security-groups.go:		return cmd.PrintShortUsage()
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return cmd.API.DeleteSecurityGroup(args[0])
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func showSecurityGroup(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	if len(args) != 1 {
pkg/cli/x_security-groups.go:		return cmd.PrintShortUsage()
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	securityGroups, err := cmd.API.GetASecurityGroup(args[0])
pkg/cli/x_security-groups.go:	if err != nil {
pkg/cli/x_security-groups.go:		return err
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return printRawMode(cmd.Streams().Stdout, *securityGroups)
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func listSecurityGroup(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	securityGroups, err := cmd.API.GetSecurityGroups()
pkg/cli/x_security-groups.go:	if err != nil {
pkg/cli/x_security-groups.go:		return err
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return printRawMode(cmd.Streams().Stdout, *securityGroups)
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func listSecurityGroupRule(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	if len(args) != 1 {
pkg/cli/x_security-groups.go:		return cmd.PrintShortUsage()
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	GetSecurityGroupRules, err := cmd.API.GetSecurityGroupRules(args[0])
pkg/cli/x_security-groups.go:	if err != nil {
pkg/cli/x_security-groups.go:		return err
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return printRawMode(cmd.Streams().Stdout, *GetSecurityGroupRules)
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func newSecurityGroupRule(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	var rule rulesDefinition
pkg/cli/x_security-groups.go:	var content api.ScalewayNewSecurityGroupRule
pkg/cli/x_security-groups.go:	if len(args) != 2 {
pkg/cli/x_security-groups.go:		return cmd.PrintShortUsage()
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	if err := json.Unmarshal([]byte(args[1]), &rule); err != nil {
pkg/cli/x_security-groups.go:		return err
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	content.Action = rule.Action
pkg/cli/x_security-groups.go:	content.Direction = rule.Direction
pkg/cli/x_security-groups.go:	content.IPRange = rule.IPRange
pkg/cli/x_security-groups.go:	content.Protocol = rule.Protocol
pkg/cli/x_security-groups.go:	if rule.DestPortFrom != nil {
pkg/cli/x_security-groups.go:		content.DestPortFrom = *rule.DestPortFrom
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return cmd.API.PostSecurityGroupRule(args[0], content)
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func updateSecurityGroupRule(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	var rule rulesDefinition
pkg/cli/x_security-groups.go:	var content api.ScalewayNewSecurityGroupRule
pkg/cli/x_security-groups.go:	if len(args) != 3 {
pkg/cli/x_security-groups.go:		return cmd.PrintShortUsage()
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	if err := json.Unmarshal([]byte(args[2]), &rule); err != nil {
pkg/cli/x_security-groups.go:		return err
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	content.Action = rule.Action
pkg/cli/x_security-groups.go:	content.Direction = rule.Direction
pkg/cli/x_security-groups.go:	content.IPRange = rule.IPRange
pkg/cli/x_security-groups.go:	content.Protocol = rule.Protocol
pkg/cli/x_security-groups.go:	if rule.DestPortFrom != nil {
pkg/cli/x_security-groups.go:		content.DestPortFrom = *rule.DestPortFrom
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return cmd.API.PutSecurityGroupRule(content, args[0], args[1])
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func showSecurityGroupRule(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	if len(args) != 2 {
pkg/cli/x_security-groups.go:		return cmd.PrintShortUsage()
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	GroupRuleID, err := cmd.API.GetASecurityGroupRule(args[0], args[1])
pkg/cli/x_security-groups.go:	if err != nil {
pkg/cli/x_security-groups.go:		return err
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return printRawMode(cmd.Streams().Stdout, *GroupRuleID)
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func deleteSecurityGroupRule(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	if len(args) != 2 {
pkg/cli/x_security-groups.go:		return cmd.PrintShortUsage()
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return cmd.API.DeleteSecurityGroupRule(args[0], args[1])
pkg/cli/x_security-groups.go:}
pkg/cli/x_security-groups.go:func runSecurityGroups(cmd *Command, args []string) error {
pkg/cli/x_security-groups.go:	if securityGroupsHelp || len(args) == 0 {
pkg/cli/x_security-groups.go:		return cmd.PrintUsage()
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	cmd.Flag.Parse(args[1:])
pkg/cli/x_security-groups.go:	if function, ok := subCmdSecurityGroup[args[0]]; ok {
pkg/cli/x_security-groups.go:		return function(cmd, cmd.Flag.Args())
pkg/cli/x_security-groups.go:	}
pkg/cli/x_security-groups.go:	return fmt.Errorf("subcommand not found: %s", args[0])
pkg/cli/x_security-groups.go:}
pkg/cli/x_userdata.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/cli/x_userdata.go:// Use of this source code is governed by a MIT-style
pkg/cli/x_userdata.go:// license that can be found in the LICENSE.md file.
pkg/cli/x_userdata.go:package cli
pkg/cli/x_userdata.go:import (
pkg/cli/x_userdata.go:	"fmt"
pkg/cli/x_userdata.go:	"io/ioutil"
pkg/cli/x_userdata.go:	"strings"
pkg/cli/x_userdata.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/cli/x_userdata.go:)
pkg/cli/x_userdata.go:var cmdUserdata = &Command{
pkg/cli/x_userdata.go:	Exec:        runUserdata,
pkg/cli/x_userdata.go:	UsageLine:   "_userdata [OPTIONS] SERVER [FIELD[=VALUE]]",
pkg/cli/x_userdata.go:	Description: "",
pkg/cli/x_userdata.go:	Hidden:      true,
pkg/cli/x_userdata.go:	Help:        "List, read and write and delete server's userdata",
pkg/cli/x_userdata.go:	Examples: `
pkg/cli/x_userdata.go:    $ scw _userdata myserver
pkg/cli/x_userdata.go:    $ scw _userdata myserver key
pkg/cli/x_userdata.go:    $ scw _userdata myserver key=value
pkg/cli/x_userdata.go:    $ scw _userdata myserver key=""
pkg/cli/x_userdata.go:`,
pkg/cli/x_userdata.go:}
pkg/cli/x_userdata.go:func init() {
pkg/cli/x_userdata.go:	cmdUserdata.Flag.BoolVar(&userdataHelp, []string{"h", "-help"}, false, "Print usage")
pkg/cli/x_userdata.go:}
pkg/cli/x_userdata.go:// Flags
pkg/cli/x_userdata.go:var userdataHelp bool // -h, --help flag
pkg/cli/x_userdata.go:func runUserdata(cmd *Command, args []string) error {
pkg/cli/x_userdata.go:	if userdataHelp {
pkg/cli/x_userdata.go:		return cmd.PrintUsage()
pkg/cli/x_userdata.go:	}
pkg/cli/x_userdata.go:	if len(args) < 1 {
pkg/cli/x_userdata.go:		return cmd.PrintShortUsage()
pkg/cli/x_userdata.go:	}
pkg/cli/x_userdata.go:	ctx := cmd.GetContext(args)
pkg/cli/x_userdata.go:	var API *api.ScalewayAPI
pkg/cli/x_userdata.go:	var err error
pkg/cli/x_userdata.go:	var serverID string
pkg/cli/x_userdata.go:	if args[0] == "local" {
pkg/cli/x_userdata.go:		API, err = api.NewScalewayAPI("", "", "", "")
pkg/cli/x_userdata.go:		if err != nil {
pkg/cli/x_userdata.go:			return err
pkg/cli/x_userdata.go:		}
pkg/cli/x_userdata.go:		API.EnableMetadataAPI()
pkg/cli/x_userdata.go:	} else {
pkg/cli/x_userdata.go:		if ctx.API == nil {
pkg/cli/x_userdata.go:			return fmt.Errorf("You need to login first: 'scw login'")
pkg/cli/x_userdata.go:		}
pkg/cli/x_userdata.go:		serverID, err = ctx.API.GetServerID(args[0])
pkg/cli/x_userdata.go:		if err != nil {
pkg/cli/x_userdata.go:			return err
pkg/cli/x_userdata.go:		}
pkg/cli/x_userdata.go:		API = ctx.API
pkg/cli/x_userdata.go:	}
pkg/cli/x_userdata.go:	switch len(args) {
pkg/cli/x_userdata.go:	case 1:
pkg/cli/x_userdata.go:		// List userdata
pkg/cli/x_userdata.go:		res, err := API.GetUserdatas(serverID)
pkg/cli/x_userdata.go:		if err != nil {
pkg/cli/x_userdata.go:			return err
pkg/cli/x_userdata.go:		}
pkg/cli/x_userdata.go:		for _, key := range res.UserData {
pkg/cli/x_userdata.go:			fmt.Fprintln(ctx.Stdout, key)
pkg/cli/x_userdata.go:		}
pkg/cli/x_userdata.go:	default:
pkg/cli/x_userdata.go:		parts := strings.Split(args[1], "=")
pkg/cli/x_userdata.go:		key := parts[0]
pkg/cli/x_userdata.go:		switch len(parts) {
pkg/cli/x_userdata.go:		case 1:
pkg/cli/x_userdata.go:			// Get userdatas
pkg/cli/x_userdata.go:			res, err := API.GetUserdata(serverID, key)
pkg/cli/x_userdata.go:			if err != nil {
pkg/cli/x_userdata.go:				return err
pkg/cli/x_userdata.go:			}
pkg/cli/x_userdata.go:			fmt.Fprintf(ctx.Stdout, "%s\n", res.String())
pkg/cli/x_userdata.go:		default:
pkg/cli/x_userdata.go:			value := parts[1]
pkg/cli/x_userdata.go:			if value != "" {
pkg/cli/x_userdata.go:				var data []byte
pkg/cli/x_userdata.go:				// Set userdata
pkg/cli/x_userdata.go:				if value[0] == '@' {
pkg/cli/x_userdata.go:					data, err = ioutil.ReadFile(value[1:])
pkg/cli/x_userdata.go:					if err != nil {
pkg/cli/x_userdata.go:						return err
pkg/cli/x_userdata.go:					}
pkg/cli/x_userdata.go:				} else {
pkg/cli/x_userdata.go:					data = []byte(value)
pkg/cli/x_userdata.go:				}
pkg/cli/x_userdata.go:				err := API.PatchUserdata(serverID, key, data)
pkg/cli/x_userdata.go:				if err != nil {
pkg/cli/x_userdata.go:					return err
pkg/cli/x_userdata.go:				}
pkg/cli/x_userdata.go:				fmt.Fprintln(ctx.Stdout, key)
pkg/cli/x_userdata.go:			} else {
pkg/cli/x_userdata.go:				// Delete userdata
pkg/cli/x_userdata.go:				err := API.DeleteUserdata(serverID, key)
pkg/cli/x_userdata.go:				if err != nil {
pkg/cli/x_userdata.go:					return err
pkg/cli/x_userdata.go:				}
pkg/cli/x_userdata.go:			}
pkg/cli/x_userdata.go:		}
pkg/cli/x_userdata.go:	}
pkg/cli/x_userdata.go:	return nil
pkg/cli/x_userdata.go:}
pkg/commands/attach.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/attach.go:// Use of this source code is governed by a MIT-style
pkg/commands/attach.go:// license that can be found in the LICENSE.md file.
pkg/commands/attach.go:package commands
pkg/commands/attach.go:import "github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/attach.go:// AttachArgs are flags for the `RunAttach` function
pkg/commands/attach.go:type AttachArgs struct {
pkg/commands/attach.go:	NoStdin bool
pkg/commands/attach.go:	Server  string
pkg/commands/attach.go:}
pkg/commands/attach.go:// RunAttach is the handler for 'scw attach'
pkg/commands/attach.go:func RunAttach(ctx CommandContext, args AttachArgs) error {
pkg/commands/attach.go:	serverID, err := ctx.API.GetServerID(args.Server)
pkg/commands/attach.go:	if err != nil {
pkg/commands/attach.go:		return err
pkg/commands/attach.go:	}
pkg/commands/attach.go:	_, done, err := utils.AttachToSerial(serverID, ctx.API.Token)
pkg/commands/attach.go:	if err != nil {
pkg/commands/attach.go:		return err
pkg/commands/attach.go:	}
pkg/commands/attach.go:	<-done
pkg/commands/attach.go:	return nil
pkg/commands/attach.go:}
pkg/commands/command.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/command.go:// Use of this source code is governed by a MIT-style
pkg/commands/command.go:// license that can be found in the LICENSE.md file.
pkg/commands/command.go:// Package commands contains the workflows behind each commands of the CLI (run, attach, start, exec, commit, ...)
pkg/commands/command.go:package commands
pkg/commands/command.go:import (
pkg/commands/command.go:	"io"
pkg/commands/command.go:	"os"
pkg/commands/command.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/command.go:)
pkg/commands/command.go:// Streams is used to redirects the streams
pkg/commands/command.go:type Streams struct {
pkg/commands/command.go:	Stdin  io.Reader
pkg/commands/command.go:	Stdout io.Writer
pkg/commands/command.go:	Stderr io.Writer
pkg/commands/command.go:}
pkg/commands/command.go:// CommandContext is passed to all commands and contains streams, environment, api and arguments
pkg/commands/command.go:type CommandContext struct {
pkg/commands/command.go:	Streams
pkg/commands/command.go:	Env     []string
pkg/commands/command.go:	RawArgs []string
pkg/commands/command.go:	API     *api.ScalewayAPI
pkg/commands/command.go:}
pkg/commands/command.go:// Getenv returns the equivalent of os.Getenv for the CommandContext.Env
pkg/commands/command.go:func (c *CommandContext) Getenv(key string) string {
pkg/commands/command.go:	// FIXME: parse c.Env instead
pkg/commands/command.go:	return os.Getenv(key)
pkg/commands/command.go:}
pkg/commands/command_test.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/command_test.go:// Use of this source code is governed by a MIT-style
pkg/commands/command_test.go:// license that can be found in the LICENSE.md file.
pkg/commands/command_test.go:// Golang structs for scw commands
pkg/commands/command_test.go:package commands
pkg/commands/command_test.go:import (
pkg/commands/command_test.go:	"fmt"
pkg/commands/command_test.go:	"os"
pkg/commands/command_test.go:	"testing"
pkg/commands/command_test.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/command_test.go:	"github.com/stretchr/testify/assert"
pkg/commands/command_test.go:)
pkg/commands/command_test.go:func testCommandContext() CommandContext {
pkg/commands/command_test.go:	apiClient, err := api.NewScalewayAPI("https://example.org/", "https://example.org/", "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx", "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx")
pkg/commands/command_test.go:	if err != nil {
pkg/commands/command_test.go:		panic(err)
pkg/commands/command_test.go:	}
pkg/commands/command_test.go:	ctx := CommandContext{
pkg/commands/command_test.go:		Streams: Streams{
pkg/commands/command_test.go:			Stdin:  os.Stdin,
pkg/commands/command_test.go:			Stdout: os.Stdout,
pkg/commands/command_test.go:			Stderr: os.Stderr,
pkg/commands/command_test.go:		},
pkg/commands/command_test.go:		Env: []string{
pkg/commands/command_test.go:			"HOME" + os.Getenv("HOME"),
pkg/commands/command_test.go:		},
pkg/commands/command_test.go:		RawArgs: []string{},
pkg/commands/command_test.go:		API:     apiClient,
pkg/commands/command_test.go:	}
pkg/commands/command_test.go:	return ctx
pkg/commands/command_test.go:}
pkg/commands/command_test.go:func ExampleCommandContext() {
pkg/commands/command_test.go:	apiClient, err := api.NewScalewayAPI("https://example.org/", "https://example.org/", "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx", "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx")
pkg/commands/command_test.go:	if err != nil {
pkg/commands/command_test.go:		panic(err)
pkg/commands/command_test.go:	}
pkg/commands/command_test.go:	ctx := CommandContext{
pkg/commands/command_test.go:		Streams: Streams{
pkg/commands/command_test.go:			Stdin:  os.Stdin,
pkg/commands/command_test.go:			Stdout: os.Stdout,
pkg/commands/command_test.go:			Stderr: os.Stderr,
pkg/commands/command_test.go:		},
pkg/commands/command_test.go:		Env: []string{
pkg/commands/command_test.go:			"HOME" + os.Getenv("HOME"),
pkg/commands/command_test.go:		},
pkg/commands/command_test.go:		RawArgs: []string{},
pkg/commands/command_test.go:		API:     apiClient,
pkg/commands/command_test.go:	}
pkg/commands/command_test.go:	// Do stuff
pkg/commands/command_test.go:	fmt.Println(ctx)
pkg/commands/command_test.go:}
pkg/commands/command_test.go:func TestCommandContext_Getenv(t *testing.T) {
pkg/commands/command_test.go:	ctx := testCommandContext()
pkg/commands/command_test.go:	assert.Equal(t, ctx.Getenv("HOME"), os.Getenv("HOME"))
pkg/commands/command_test.go:	assert.Equal(t, ctx.Getenv("DONTEXISTS"), "")
pkg/commands/command_test.go:}
pkg/commands/commit.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/commit.go:// Use of this source code is governed by a MIT-style
pkg/commands/commit.go:// license that can be found in the LICENSE.md file.
pkg/commands/commit.go:package commands
pkg/commands/commit.go:import (
pkg/commands/commit.go:	"fmt"
pkg/commands/commit.go:)
pkg/commands/commit.go:// CommitArgs are flags for the `RunCommit` function
pkg/commands/commit.go:type CommitArgs struct {
pkg/commands/commit.go:	Volume int
pkg/commands/commit.go:	Server string
pkg/commands/commit.go:	Name   string
pkg/commands/commit.go:}
pkg/commands/commit.go:// RunCommit is the handler for 'scw commit'
pkg/commands/commit.go:func RunCommit(ctx CommandContext, args CommitArgs) error {
pkg/commands/commit.go:	serverID, err := ctx.API.GetServerID(args.Server)
pkg/commands/commit.go:	if err != nil {
pkg/commands/commit.go:		return err
pkg/commands/commit.go:	}
pkg/commands/commit.go:	server, err := ctx.API.GetServer(serverID)
pkg/commands/commit.go:	if err != nil {
pkg/commands/commit.go:		return fmt.Errorf("Cannot fetch server: %v", err)
pkg/commands/commit.go:	}
pkg/commands/commit.go:	var volume = server.Volumes[fmt.Sprintf("%d", args.Volume)]
pkg/commands/commit.go:	var name string
pkg/commands/commit.go:	if args.Name != "" {
pkg/commands/commit.go:		name = args.Name
pkg/commands/commit.go:	} else {
pkg/commands/commit.go:		name = volume.Name + "-snapshot"
pkg/commands/commit.go:	}
pkg/commands/commit.go:	snapshot, err := ctx.API.PostSnapshot(volume.Identifier, name)
pkg/commands/commit.go:	if err != nil {
pkg/commands/commit.go:		return fmt.Errorf("Cannot create snapshot: %v", err)
pkg/commands/commit.go:	}
pkg/commands/commit.go:	fmt.Fprintln(ctx.Stdout, snapshot)
pkg/commands/commit.go:	return nil
pkg/commands/commit.go:}
pkg/commands/cp.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/cp.go:// Use of this source code is governed by a MIT-style
pkg/commands/cp.go:// license that can be found in the LICENSE.md file.
pkg/commands/cp.go:package commands
pkg/commands/cp.go:import (
pkg/commands/cp.go:	"fmt"
pkg/commands/cp.go:	"io"
pkg/commands/cp.go:	"os"
pkg/commands/cp.go:	"os/exec"
pkg/commands/cp.go:	"path/filepath"
pkg/commands/cp.go:	"strings"
pkg/commands/cp.go:	"github.com/Sirupsen/logrus"
pkg/commands/cp.go:	"github.com/docker/docker/pkg/archive"
pkg/commands/cp.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/cp.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/cp.go:)
pkg/commands/cp.go:// CpArgs are arguments passed to `RunCp`
pkg/commands/cp.go:type CpArgs struct {
pkg/commands/cp.go:	Gateway     string
pkg/commands/cp.go:	Source      string
pkg/commands/cp.go:	Destination string
pkg/commands/cp.go:}
pkg/commands/cp.go:// RunCp is the handler for 'scw cp'
pkg/commands/cp.go:func RunCp(ctx CommandContext, args CpArgs) error {
pkg/commands/cp.go:	if strings.Count(args.Source, ":") > 1 || strings.Count(args.Destination, ":") > 1 {
pkg/commands/cp.go:		return fmt.Errorf("bad usage, see 'scw help cp'")
pkg/commands/cp.go:	}
pkg/commands/cp.go:	sourceStream, err := TarFromSource(ctx, args.Source, args.Gateway)
pkg/commands/cp.go:	if err != nil {
pkg/commands/cp.go:		return fmt.Errorf("cannot tar from source '%s': %v", args.Source, err)
pkg/commands/cp.go:	}
pkg/commands/cp.go:	err = UntarToDest(ctx, sourceStream, args.Destination, args.Gateway)
pkg/commands/cp.go:	if err != nil {
pkg/commands/cp.go:		return fmt.Errorf("cannot untar to destination '%s': %v", args.Destination, err)
pkg/commands/cp.go:	}
pkg/commands/cp.go:	return nil
pkg/commands/cp.go:}
pkg/commands/cp.go:// TarFromSource creates a stream buffer with the tarballed content of the user source
pkg/commands/cp.go:func TarFromSource(ctx CommandContext, source string, gateway string) (*io.ReadCloser, error) {
pkg/commands/cp.go:	var tarOutputStream io.ReadCloser
pkg/commands/cp.go:	// source is a server address + path (scp-like uri)
pkg/commands/cp.go:	if strings.Index(source, ":") > -1 {
pkg/commands/cp.go:		logrus.Debugf("Creating a tarball remotely and streaming it using SSH")
pkg/commands/cp.go:		serverParts := strings.Split(source, ":")
pkg/commands/cp.go:		if len(serverParts) != 2 {
pkg/commands/cp.go:			return nil, fmt.Errorf("invalid source uri, see 'scw cp -h' for usage")
pkg/commands/cp.go:		}
pkg/commands/cp.go:		serverID, err := ctx.API.GetServerID(serverParts[0])
pkg/commands/cp.go:		if err != nil {
pkg/commands/cp.go:			return nil, err
pkg/commands/cp.go:		}
pkg/commands/cp.go:		server, err := ctx.API.GetServer(serverID)
pkg/commands/cp.go:		if err != nil {
pkg/commands/cp.go:			return nil, err
pkg/commands/cp.go:		}
pkg/commands/cp.go:		dir, base := utils.PathToTARPathparts(serverParts[1])
pkg/commands/cp.go:		logrus.Debugf("Equivalent to 'scp root@%s:%s/%s ...'", server.PublicAddress.IP, dir, base)
pkg/commands/cp.go:		// remoteCommand is executed on the remote server
pkg/commands/cp.go:		// it streams a tarball raw content
pkg/commands/cp.go:		remoteCommand := []string{"tar"}
pkg/commands/cp.go:		remoteCommand = append(remoteCommand, "-C", dir)
pkg/commands/cp.go:		if ctx.Getenv("DEBUG") == "1" {
pkg/commands/cp.go:			remoteCommand = append(remoteCommand, "-v")
pkg/commands/cp.go:		}
pkg/commands/cp.go:		remoteCommand = append(remoteCommand, "-cf", "-")
pkg/commands/cp.go:		remoteCommand = append(remoteCommand, base)
pkg/commands/cp.go:		// Resolve gateway
pkg/commands/cp.go:		if gateway == "" {
pkg/commands/cp.go:			gateway = ctx.Getenv("SCW_GATEWAY")
pkg/commands/cp.go:		}
pkg/commands/cp.go:		var gateway string
pkg/commands/cp.go:		if gateway == serverID || gateway == serverParts[0] {
pkg/commands/cp.go:			gateway = ""
pkg/commands/cp.go:		} else {
pkg/commands/cp.go:			gateway, err = api.ResolveGateway(ctx.API, gateway)
pkg/commands/cp.go:			if err != nil {
pkg/commands/cp.go:				return nil, fmt.Errorf("cannot resolve Gateway '%s': %v", gateway, err)
pkg/commands/cp.go:			}
pkg/commands/cp.go:		}
pkg/commands/cp.go:		// execCmd contains the ssh connection + the remoteCommand
pkg/commands/cp.go:		sshCommand := utils.NewSSHExecCmd(server.PublicAddress.IP, server.PrivateIP, false, remoteCommand, gateway)
pkg/commands/cp.go:		logrus.Debugf("Executing: %s", sshCommand)
pkg/commands/cp.go:		spawnSrc := exec.Command("ssh", sshCommand.Slice()[1:]...)
pkg/commands/cp.go:		tarOutputStream, err = spawnSrc.StdoutPipe()
pkg/commands/cp.go:		if err != nil {
pkg/commands/cp.go:			return nil, err
pkg/commands/cp.go:		}
pkg/commands/cp.go:		tarErrorStream, err := spawnSrc.StderrPipe()
pkg/commands/cp.go:		if err != nil {
pkg/commands/cp.go:			return nil, err
pkg/commands/cp.go:		}
pkg/commands/cp.go:		defer tarErrorStream.Close()
pkg/commands/cp.go:		io.Copy(ctx.Stderr, tarErrorStream)
pkg/commands/cp.go:		err = spawnSrc.Start()
pkg/commands/cp.go:		if err != nil {
pkg/commands/cp.go:			return nil, err
pkg/commands/cp.go:		}
pkg/commands/cp.go:		defer spawnSrc.Wait()
pkg/commands/cp.go:		return &tarOutputStream, nil
pkg/commands/cp.go:	}
pkg/commands/cp.go:	// source is stdin
pkg/commands/cp.go:	if source == "-" {
pkg/commands/cp.go:		logrus.Debugf("Streaming tarball from stdin")
pkg/commands/cp.go:		// FIXME: should be ctx.Stdin
pkg/commands/cp.go:		tarOutputStream = os.Stdin
pkg/commands/cp.go:		return &tarOutputStream, nil
pkg/commands/cp.go:	}
pkg/commands/cp.go:	// source is a path on localhost
pkg/commands/cp.go:	logrus.Debugf("Taring local path %s", source)
pkg/commands/cp.go:	path, err := filepath.Abs(source)
pkg/commands/cp.go:	if err != nil {
pkg/commands/cp.go:		return nil, err
pkg/commands/cp.go:	}
pkg/commands/cp.go:	path, err = filepath.EvalSymlinks(path)
pkg/commands/cp.go:	if err != nil {
pkg/commands/cp.go:		return nil, err
pkg/commands/cp.go:	}
pkg/commands/cp.go:	logrus.Debugf("Real local path is %s", path)
pkg/commands/cp.go:	dir, base := utils.PathToTARPathparts(path)
pkg/commands/cp.go:	tarOutputStream, err = archive.TarWithOptions(dir, &archive.TarOptions{
pkg/commands/cp.go:		Compression:  archive.Uncompressed,
pkg/commands/cp.go:		IncludeFiles: []string{base},
pkg/commands/cp.go:	})
pkg/commands/cp.go:	if err != nil {
pkg/commands/cp.go:		return nil, err
pkg/commands/cp.go:	}
pkg/commands/cp.go:	return &tarOutputStream, nil
pkg/commands/cp.go:}
pkg/commands/cp.go:// UntarToDest writes to user destination the streamed tarball in input
pkg/commands/cp.go:func UntarToDest(ctx CommandContext, sourceStream *io.ReadCloser, destination string, gateway string) error {
pkg/commands/cp.go:	// destination is a server address + path (scp-like uri)
pkg/commands/cp.go:	if strings.Index(destination, ":") > -1 {
pkg/commands/cp.go:		logrus.Debugf("Streaming using ssh and untaring remotely")
pkg/commands/cp.go:		serverParts := strings.Split(destination, ":")
pkg/commands/cp.go:		if len(serverParts) != 2 {
pkg/commands/cp.go:			return fmt.Errorf("invalid destination uri, see 'scw cp -h' for usage")
pkg/commands/cp.go:		}
pkg/commands/cp.go:		serverID, err := ctx.API.GetServerID(serverParts[0])
pkg/commands/cp.go:		if err != nil {
pkg/commands/cp.go:			return err
pkg/commands/cp.go:		}
pkg/commands/cp.go:		server, err := ctx.API.GetServer(serverID)
pkg/commands/cp.go:		if err != nil {
pkg/commands/cp.go:			return err
pkg/commands/cp.go:		}
pkg/commands/cp.go:		// remoteCommand is executed on the remote server
pkg/commands/cp.go:		// it streams a tarball raw content
pkg/commands/cp.go:		remoteCommand := []string{"tar"}
pkg/commands/cp.go:		remoteCommand = append(remoteCommand, "-C", serverParts[1])
pkg/commands/cp.go:		if ctx.Getenv("DEBUG") == "1" {
pkg/commands/cp.go:			remoteCommand = append(remoteCommand, "-v")
pkg/commands/cp.go:		}
pkg/commands/cp.go:		remoteCommand = append(remoteCommand, "-xf", "-")
pkg/commands/cp.go:		// Resolve gateway
pkg/commands/cp.go:		if gateway == "" {
pkg/commands/cp.go:			gateway = ctx.Getenv("SCW_GATEWAY")
pkg/commands/cp.go:		}
pkg/commands/cp.go:		var gateway string
pkg/commands/cp.go:		if gateway == serverID || gateway == serverParts[0] {
pkg/commands/cp.go:			gateway = ""
pkg/commands/cp.go:		} else {
pkg/commands/cp.go:			gateway, err = api.ResolveGateway(ctx.API, gateway)
pkg/commands/cp.go:			if err != nil {
pkg/commands/cp.go:				return fmt.Errorf("cannot resolve Gateway '%s': %v", gateway, err)
pkg/commands/cp.go:			}
pkg/commands/cp.go:		}
pkg/commands/cp.go:		// execCmd contains the ssh connection + the remoteCommand
pkg/commands/cp.go:		sshCommand := utils.NewSSHExecCmd(server.PublicAddress.IP, server.PrivateIP, false, remoteCommand, gateway)
pkg/commands/cp.go:		logrus.Debugf("Executing: %s", sshCommand)
pkg/commands/cp.go:		spawnDst := exec.Command("ssh", sshCommand.Slice()[1:]...)
pkg/commands/cp.go:		untarInputStream, err := spawnDst.StdinPipe()
pkg/commands/cp.go:		if err != nil {
pkg/commands/cp.go:			return err
pkg/commands/cp.go:		}
pkg/commands/cp.go:		defer untarInputStream.Close()
pkg/commands/cp.go:		// spawnDst.Stderr = ctx.Stderr
pkg/commands/cp.go:		// spawnDst.Stdout = ctx.Stdout
pkg/commands/cp.go:		err = spawnDst.Start()
pkg/commands/cp.go:		if err != nil {
pkg/commands/cp.go:			return err
pkg/commands/cp.go:		}
pkg/commands/cp.go:		_, err = io.Copy(untarInputStream, *sourceStream)
pkg/commands/cp.go:		return err
pkg/commands/cp.go:	}
pkg/commands/cp.go:	// destination is stdout
pkg/commands/cp.go:	if destination == "-" { // stdout
pkg/commands/cp.go:		logrus.Debugf("Writing sourceStream(%v) to ctx.Stdout(%v)", sourceStream, ctx.Stdout)
pkg/commands/cp.go:		_, err := io.Copy(ctx.Stdout, *sourceStream)
pkg/commands/cp.go:		return err
pkg/commands/cp.go:	}
pkg/commands/cp.go:	// destination is a path on localhost
pkg/commands/cp.go:	logrus.Debugf("Untaring to local path: %s", destination)
pkg/commands/cp.go:	err := archive.Untar(*sourceStream, destination, &archive.TarOptions{NoLchown: true})
pkg/commands/cp.go:	return err
pkg/commands/cp.go:}
pkg/commands/create.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/create.go:// Use of this source code is governed by a MIT-style
pkg/commands/create.go:// license that can be found in the LICENSE.md file.
pkg/commands/create.go:package commands
pkg/commands/create.go:import (
pkg/commands/create.go:	"fmt"
pkg/commands/create.go:	"strings"
pkg/commands/create.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/create.go:)
pkg/commands/create.go:// CreateArgs are arguments passed to `RunCreate`
pkg/commands/create.go:type CreateArgs struct {
pkg/commands/create.go:	Name       string
pkg/commands/create.go:	Bootscript string
pkg/commands/create.go:	Tags       []string
pkg/commands/create.go:	Volumes    []string
pkg/commands/create.go:	Image      string
pkg/commands/create.go:	TmpSSHKey  bool
pkg/commands/create.go:	IP         string
pkg/commands/create.go:}
pkg/commands/create.go:// RunCreate is the handler for 'scw create'
pkg/commands/create.go:func RunCreate(ctx CommandContext, args CreateArgs) error {
pkg/commands/create.go:	if args.TmpSSHKey {
pkg/commands/create.go:		err := AddSSHKeyToTags(ctx, &args.Tags, args.Image)
pkg/commands/create.go:		if err != nil {
pkg/commands/create.go:			return err
pkg/commands/create.go:		}
pkg/commands/create.go:	}
pkg/commands/create.go:	env := strings.Join(args.Tags, " ")
pkg/commands/create.go:	volume := strings.Join(args.Volumes, " ")
pkg/commands/create.go:	serverID, err := api.CreateServer(ctx.API, &api.ConfigCreateServer{
pkg/commands/create.go:		ImageName:         args.Image,
pkg/commands/create.go:		Name:              args.Name,
pkg/commands/create.go:		Bootscript:        args.Bootscript,
pkg/commands/create.go:		Env:               env,
pkg/commands/create.go:		AdditionalVolumes: volume,
pkg/commands/create.go:		DynamicIPRequired: args.IP == "",
pkg/commands/create.go:		IP:                args.IP,
pkg/commands/create.go:	})
pkg/commands/create.go:	if err != nil {
pkg/commands/create.go:		return err
pkg/commands/create.go:	}
pkg/commands/create.go:	fmt.Fprintln(ctx.Stdout, serverID)
pkg/commands/create.go:	return nil
pkg/commands/create.go:}
pkg/commands/create_test.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/create_test.go:// Use of this source code is governed by a MIT-style
pkg/commands/create_test.go:// license that can be found in the LICENSE.md file.
pkg/commands/create_test.go:package commands
pkg/commands/create_test.go:import (
pkg/commands/create_test.go:	"strings"
pkg/commands/create_test.go:	"testing"
pkg/commands/create_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/commands/create_test.go:)
pkg/commands/create_test.go:func ExampleRunCreate() {
pkg/commands/create_test.go:	ctx := testCommandContext()
pkg/commands/create_test.go:	args := CreateArgs{}
pkg/commands/create_test.go:	RunCreate(ctx, args)
pkg/commands/create_test.go:}
pkg/commands/create_test.go:func ExampleRunCreate_complex() {
pkg/commands/create_test.go:	ctx := testCommandContext()
pkg/commands/create_test.go:	args := CreateArgs{
pkg/commands/create_test.go:		Name:       "test",
pkg/commands/create_test.go:		Bootscript: "rescue",
pkg/commands/create_test.go:		Tags:       []string{"tag1", "tag2"},
pkg/commands/create_test.go:		Volumes:    []string{},
pkg/commands/create_test.go:		Image:      "ubuntu-vivid",
pkg/commands/create_test.go:		TmpSSHKey:  false,
pkg/commands/create_test.go:	}
pkg/commands/create_test.go:	RunCreate(ctx, args)
pkg/commands/create_test.go:}
pkg/commands/create_test.go:func TestRunCreate_realAPI(t *testing.T) {
pkg/commands/create_test.go:	createdUUIDs := []string{}
pkg/commands/create_test.go:	ctx := RealAPIContext()
pkg/commands/create_test.go:	if ctx == nil {
pkg/commands/create_test.go:		t.Skip()
pkg/commands/create_test.go:	}
pkg/commands/create_test.go:	// FIXME: test empty settings
pkg/commands/create_test.go:	// FIXME: test cache duplicates
pkg/commands/create_test.go:	// FIXME: test TmpSSHKey
pkg/commands/create_test.go:	// FIXME: test Volumes
pkg/commands/create_test.go:	// FIXME: test Tags
pkg/commands/create_test.go:	// FIXME: test Bootscript
pkg/commands/create_test.go:	Convey("Testing RunCreate() on real API", t, func() {
pkg/commands/create_test.go:		// Error when image is empty !
pkg/commands/create_test.go:		/*
pkg/commands/create_test.go:			Convey("no options", func() {
pkg/commands/create_test.go:				args := CreateArgs{}
pkg/commands/create_test.go:				err := RunCreate(*ctx, args)
pkg/commands/create_test.go:				So(err, ShouldBeNil)
pkg/commands/create_test.go:				stderr := ctx.Stderr.(*bytes.Buffer).String()
pkg/commands/create_test.go:				stdout := ctx.Stdout.(*bytes.Buffer).String()
pkg/commands/create_test.go:				fmt.Println(stderr)
pkg/commands/create_test.go:				fmt.Println(stdout)
pkg/commands/create_test.go:			})
pkg/commands/create_test.go:		*/
pkg/commands/create_test.go:		Convey("--name=unittest-create-standard ubuntu-vivid", func() {
pkg/commands/create_test.go:			args := CreateArgs{
pkg/commands/create_test.go:				Name:  "unittest-create-standard",
pkg/commands/create_test.go:				Image: "ubuntu-vivid",
pkg/commands/create_test.go:			}
pkg/commands/create_test.go:			scopedCtx, scopedStdout, scopedStderr := getScopedCtx(ctx)
pkg/commands/create_test.go:			err := RunCreate(*scopedCtx, args)
pkg/commands/create_test.go:			So(err, ShouldBeNil)
pkg/commands/create_test.go:			So(scopedStderr.String(), ShouldBeEmpty)
pkg/commands/create_test.go:			uuid := strings.TrimSpace(scopedStdout.String())
pkg/commands/create_test.go:			So(uuid, shouldBeAnUUID)
pkg/commands/create_test.go:			createdUUIDs = append(createdUUIDs, uuid)
pkg/commands/create_test.go:		})
pkg/commands/create_test.go:		Reset(func() {
pkg/commands/create_test.go:			if len(createdUUIDs) > 0 {
pkg/commands/create_test.go:				rmCtx, rmStdout, rmStderr := getScopedCtx(ctx)
pkg/commands/create_test.go:				rmErr := RunRm(*rmCtx, RmArgs{Servers: createdUUIDs})
pkg/commands/create_test.go:				So(rmErr, ShouldBeNil)
pkg/commands/create_test.go:				So(rmStderr.String(), ShouldBeEmpty)
pkg/commands/create_test.go:				removedUUIDs := strings.Split(strings.TrimSpace(rmStdout.String()), "\n")
pkg/commands/create_test.go:				So(removedUUIDs, ShouldResemble, createdUUIDs)
pkg/commands/create_test.go:				createdUUIDs = createdUUIDs[:0]
pkg/commands/create_test.go:			}
pkg/commands/create_test.go:		})
pkg/commands/create_test.go:	})
pkg/commands/create_test.go:}
pkg/commands/events.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/events.go:// Use of this source code is governed by a MIT-style
pkg/commands/events.go:// license that can be found in the LICENSE.md file.
pkg/commands/events.go:package commands
pkg/commands/events.go:import (
pkg/commands/events.go:	"fmt"
pkg/commands/events.go:	"time"
pkg/commands/events.go:	"github.com/docker/go-units"
pkg/commands/events.go:)
pkg/commands/events.go:// EventsArgs are arguments passed to `RunEvents`
pkg/commands/events.go:type EventsArgs struct{}
pkg/commands/events.go:// RunEvents is the handler for 'scw events'
pkg/commands/events.go:func RunEvents(ctx CommandContext, args EventsArgs) error {
pkg/commands/events.go:	events, err := ctx.API.GetTasks()
pkg/commands/events.go:	if err != nil {
pkg/commands/events.go:		return fmt.Errorf("unable to fetch tasks from the Scaleway API: %v", err)
pkg/commands/events.go:	}
pkg/commands/events.go:	for _, event := range *events {
pkg/commands/events.go:		startedAt, err := time.Parse("2006-01-02T15:04:05.000000+00:00", event.StartDate)
pkg/commands/events.go:		if err != nil {
pkg/commands/events.go:			return fmt.Errorf("unable to parse started date from the Scaleway API: %v", err)
pkg/commands/events.go:		}
pkg/commands/events.go:		terminatedAt := ""
pkg/commands/events.go:		if event.TerminationDate != "" {
pkg/commands/events.go:			terminatedAtTime, err := time.Parse("2006-01-02T15:04:05.000000+00:00", event.TerminationDate)
pkg/commands/events.go:			if err != nil {
pkg/commands/events.go:				return fmt.Errorf("unable to parse terminated date from the Scaleway API: %v", err)
pkg/commands/events.go:			}
pkg/commands/events.go:			terminatedAt = units.HumanDuration(time.Now().UTC().Sub(terminatedAtTime))
pkg/commands/events.go:		}
pkg/commands/events.go:		fmt.Fprintf(ctx.Stdout, "%s %s: %s (%s %d) %s\n", startedAt, event.HrefFrom, event.Description, event.Status, event.Progress, terminatedAt)
pkg/commands/events.go:	}
pkg/commands/events.go:	return nil
pkg/commands/events.go:}
pkg/commands/exec.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/exec.go:// Use of this source code is governed by a MIT-style
pkg/commands/exec.go:// license that can be found in the LICENSE.md file.
pkg/commands/exec.go:package commands
pkg/commands/exec.go:import (
pkg/commands/exec.go:	"fmt"
pkg/commands/exec.go:	"time"
pkg/commands/exec.go:	log "github.com/Sirupsen/logrus"
pkg/commands/exec.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/exec.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/exec.go:)
pkg/commands/exec.go:// ExecArgs are flags for the `RunExec` function
pkg/commands/exec.go:type ExecArgs struct {
pkg/commands/exec.go:	Timeout float64
pkg/commands/exec.go:	Wait    bool
pkg/commands/exec.go:	Gateway string
pkg/commands/exec.go:	Server  string
pkg/commands/exec.go:	Command []string
pkg/commands/exec.go:}
pkg/commands/exec.go:// RunExec is the handler for 'scw exec'
pkg/commands/exec.go:func RunExec(ctx CommandContext, args ExecArgs) error {
pkg/commands/exec.go:	var fingerprints []string
pkg/commands/exec.go:	done := make(chan struct{})
pkg/commands/exec.go:	serverID, err := ctx.API.GetServerID(args.Server)
pkg/commands/exec.go:	if err != nil {
pkg/commands/exec.go:		return err
pkg/commands/exec.go:	}
pkg/commands/exec.go:	go func() {
pkg/commands/exec.go:		fingerprints = ctx.API.GetSSHFingerprintFromServer(serverID)
pkg/commands/exec.go:		close(done)
pkg/commands/exec.go:	}()
pkg/commands/exec.go:	// Resolve gateway
pkg/commands/exec.go:	if args.Gateway == "" {
pkg/commands/exec.go:		args.Gateway = ctx.Getenv("SCW_GATEWAY")
pkg/commands/exec.go:	}
pkg/commands/exec.go:	var gateway string
pkg/commands/exec.go:	if args.Gateway == serverID || args.Gateway == args.Server {
pkg/commands/exec.go:		log.Debugf("The server and the gateway are the same host, using direct access to the server")
pkg/commands/exec.go:		gateway = ""
pkg/commands/exec.go:	} else {
pkg/commands/exec.go:		gateway, err = api.ResolveGateway(ctx.API, args.Gateway)
pkg/commands/exec.go:		if err != nil {
pkg/commands/exec.go:			return fmt.Errorf("Cannot resolve Gateway '%s': %v", args.Gateway, err)
pkg/commands/exec.go:		}
pkg/commands/exec.go:		if gateway != "" {
pkg/commands/exec.go:			log.Debugf("The server will be accessed using the gateway '%s' as a SSH relay", gateway)
pkg/commands/exec.go:		}
pkg/commands/exec.go:	}
pkg/commands/exec.go:	var server *api.ScalewayServer
pkg/commands/exec.go:	if args.Wait {
pkg/commands/exec.go:		// --wait
pkg/commands/exec.go:		log.Debugf("Waiting for server to be ready")
pkg/commands/exec.go:		server, err = api.WaitForServerReady(ctx.API, serverID, gateway)
pkg/commands/exec.go:		if err != nil {
pkg/commands/exec.go:			return fmt.Errorf("Failed to wait for server to be ready, %v", err)
pkg/commands/exec.go:		}
pkg/commands/exec.go:	} else {
pkg/commands/exec.go:		// no --wait
pkg/commands/exec.go:		log.Debugf("scw won't wait for the server to be ready, if it is not, the command will fail")
pkg/commands/exec.go:		server, err = ctx.API.GetServer(serverID)
pkg/commands/exec.go:		if err != nil {
pkg/commands/exec.go:			return fmt.Errorf("Failed to get server information for %s: %v", serverID, err)
pkg/commands/exec.go:		}
pkg/commands/exec.go:	}
pkg/commands/exec.go:	if server.PublicAddress.IP == "" && gateway == "" {
pkg/commands/exec.go:		log.Warn(`Your host has no public IP address, you should use '--gateway', see 'scw help exec'`)
pkg/commands/exec.go:	}
pkg/commands/exec.go:	// --timeout
pkg/commands/exec.go:	if args.Timeout > 0 {
pkg/commands/exec.go:		log.Debugf("Setting up a global timeout of %d seconds", args.Timeout)
pkg/commands/exec.go:		// FIXME: avoid use of log.Fatalf here
pkg/commands/exec.go:		go func() {
pkg/commands/exec.go:			time.Sleep(time.Duration(args.Timeout*1000) * time.Millisecond)
pkg/commands/exec.go:			log.Fatalf("Operation timed out")
pkg/commands/exec.go:		}()
pkg/commands/exec.go:	}
pkg/commands/exec.go:	<-done
pkg/commands/exec.go:	if len(fingerprints) > 0 {
pkg/commands/exec.go:		for i := range fingerprints {
pkg/commands/exec.go:			fmt.Fprintf(ctx.Stdout, "%s\n", fingerprints[i])
pkg/commands/exec.go:		}
pkg/commands/exec.go:	}
pkg/commands/exec.go:	if err = utils.SSHExec(server.PublicAddress.IP, server.PrivateIP, args.Command, !args.Wait, gateway); err != nil {
pkg/commands/exec.go:		return fmt.Errorf("Failed to run the command: %v", err)
pkg/commands/exec.go:	}
pkg/commands/exec.go:	log.Debugf("Command successfuly executed")
pkg/commands/exec.go:	return nil
pkg/commands/exec.go:}
pkg/commands/help.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/help.go:// Use of this source code is governed by a MIT-style
pkg/commands/help.go:// license that can be found in the LICENSE.md file.
pkg/commands/help.go:package commands
pkg/commands/help.go:// nothing here
pkg/commands/history.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/history.go:// Use of this source code is governed by a MIT-style
pkg/commands/history.go:// license that can be found in the LICENSE.md file.
pkg/commands/history.go:package commands
pkg/commands/history.go:import (
pkg/commands/history.go:	"fmt"
pkg/commands/history.go:	"text/tabwriter"
pkg/commands/history.go:	"time"
pkg/commands/history.go:	"github.com/docker/go-units"
pkg/commands/history.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/history.go:)
pkg/commands/history.go:// HistoryArgs are flags for the `RunHistory` function
pkg/commands/history.go:type HistoryArgs struct {
pkg/commands/history.go:	NoTrunc bool
pkg/commands/history.go:	Quiet   bool
pkg/commands/history.go:	Image   string
pkg/commands/history.go:}
pkg/commands/history.go:// RunHistory is the handler for 'scw history'
pkg/commands/history.go:func RunHistory(ctx CommandContext, args HistoryArgs) error {
pkg/commands/history.go:	imageID, err := ctx.API.GetImageID(args.Image)
pkg/commands/history.go:	if err != nil {
pkg/commands/history.go:		return err
pkg/commands/history.go:	}
pkg/commands/history.go:	image, err := ctx.API.GetImage(imageID.Identifier)
pkg/commands/history.go:	if err != nil {
pkg/commands/history.go:		return fmt.Errorf("cannot get image %s: %v", imageID.Identifier, err)
pkg/commands/history.go:	}
pkg/commands/history.go:	if args.Quiet {
pkg/commands/history.go:		fmt.Fprintln(ctx.Stdout, imageID.Identifier)
pkg/commands/history.go:		return nil
pkg/commands/history.go:	}
pkg/commands/history.go:	w := tabwriter.NewWriter(ctx.Stdout, 10, 1, 3, ' ', 0)
pkg/commands/history.go:	defer w.Flush()
pkg/commands/history.go:	fmt.Fprintf(w, "IMAGE\tCREATED\tCREATED BY\tSIZE\n")
pkg/commands/history.go:	identifier := utils.TruncIf(image.Identifier, 8, !args.NoTrunc)
pkg/commands/history.go:	creationDate, err := time.Parse("2006-01-02T15:04:05.000000+00:00", image.CreationDate)
pkg/commands/history.go:	if err != nil {
pkg/commands/history.go:		return fmt.Errorf("unable to parse creation date from the Scaleway API: %v", err)
pkg/commands/history.go:	}
pkg/commands/history.go:	creationDateStr := units.HumanDuration(time.Now().UTC().Sub(creationDate))
pkg/commands/history.go:	volumeName := utils.TruncIf(image.RootVolume.Name, 25, !args.NoTrunc)
pkg/commands/history.go:	size := units.HumanSize(float64(image.RootVolume.Size))
pkg/commands/history.go:	fmt.Fprintf(w, "%s\t%s\t%s\t%s\n", identifier, creationDateStr, volumeName, size)
pkg/commands/history.go:	return nil
pkg/commands/history.go:}
pkg/commands/history_test.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/history_test.go:// Use of this source code is governed by a MIT-style
pkg/commands/history_test.go:// license that can be found in the LICENSE.md file.
pkg/commands/history_test.go:package commands
pkg/commands/history_test.go:import (
pkg/commands/history_test.go:	"fmt"
pkg/commands/history_test.go:	"strings"
pkg/commands/history_test.go:	"testing"
pkg/commands/history_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/commands/history_test.go:)
pkg/commands/history_test.go:func ExampleRunHistory() {
pkg/commands/history_test.go:	ctx := testCommandContext()
pkg/commands/history_test.go:	args := HistoryArgs{}
pkg/commands/history_test.go:	RunHistory(ctx, args)
pkg/commands/history_test.go:}
pkg/commands/history_test.go:func ExampleRunHistory_complex() {
pkg/commands/history_test.go:	ctx := testCommandContext()
pkg/commands/history_test.go:	args := HistoryArgs{
pkg/commands/history_test.go:		NoTrunc: false,
pkg/commands/history_test.go:		Quiet:   false,
pkg/commands/history_test.go:		Image:   "",
pkg/commands/history_test.go:	}
pkg/commands/history_test.go:	RunHistory(ctx, args)
pkg/commands/history_test.go:}
pkg/commands/history_test.go:func TestRunHistory_realAPI(t *testing.T) {
pkg/commands/history_test.go:	ctx := RealAPIContext()
pkg/commands/history_test.go:	if ctx == nil {
pkg/commands/history_test.go:		t.Skip()
pkg/commands/history_test.go:	}
pkg/commands/history_test.go:	Convey("Testing RunHistory() on real API", t, func() {
pkg/commands/history_test.go:		Convey("ubuntu-vivid", func() {
pkg/commands/history_test.go:			args := HistoryArgs{
pkg/commands/history_test.go:				NoTrunc: false,
pkg/commands/history_test.go:				Quiet:   false,
pkg/commands/history_test.go:				Image:   "ubuntu-vivid",
pkg/commands/history_test.go:			}
pkg/commands/history_test.go:			scopedCtx, scopedStdout, scopedStderr := getScopedCtx(ctx)
pkg/commands/history_test.go:			err := RunHistory(*scopedCtx, args)
pkg/commands/history_test.go:			So(err, ShouldBeNil)
pkg/commands/history_test.go:			So(scopedStderr.String(), ShouldBeEmpty)
pkg/commands/history_test.go:			lines := strings.Split(scopedStdout.String(), "\n")
pkg/commands/history_test.go:			So(len(lines), ShouldBeGreaterThan, 0)
pkg/commands/history_test.go:			firstLine := lines[0]
pkg/commands/history_test.go:			colNames := strings.Fields(firstLine)
pkg/commands/history_test.go:			So(colNames, ShouldResemble, []string{"IMAGE", "CREATED", "CREATED", "BY", "SIZE"})
pkg/commands/history_test.go:			fmt.Println(scopedStdout.String())
pkg/commands/history_test.go:		})
pkg/commands/history_test.go:		// FIXME: test invalid image
pkg/commands/history_test.go:		// FIXME: test image with duplicates cache
pkg/commands/history_test.go:		// FIXME: test quiet
pkg/commands/history_test.go:		// FIXME: test no-trunc
pkg/commands/history_test.go:	})
pkg/commands/history_test.go:}
pkg/commands/images.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/images.go:// Use of this source code is governed by a MIT-style
pkg/commands/images.go:// license that can be found in the LICENSE.md file.
pkg/commands/images.go:package commands
pkg/commands/images.go:import (
pkg/commands/images.go:	"fmt"
pkg/commands/images.go:	"sort"
pkg/commands/images.go:	"strings"
pkg/commands/images.go:	"sync"
pkg/commands/images.go:	"text/tabwriter"
pkg/commands/images.go:	"time"
pkg/commands/images.go:	"github.com/Sirupsen/logrus"
pkg/commands/images.go:	"github.com/docker/go-units"
pkg/commands/images.go:	"github.com/renstrom/fuzzysearch/fuzzy"
pkg/commands/images.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/images.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/images.go:)
pkg/commands/images.go:// ImagesArgs are flags for the `RunImages` function
pkg/commands/images.go:type ImagesArgs struct {
pkg/commands/images.go:	All     bool
pkg/commands/images.go:	NoTrunc bool
pkg/commands/images.go:	Quiet   bool
pkg/commands/images.go:	Filters map[string]string
pkg/commands/images.go:}
pkg/commands/images.go:// RunImages is the handler for 'scw images'
pkg/commands/images.go:func RunImages(ctx CommandContext, args ImagesArgs) error {
pkg/commands/images.go:	wg := sync.WaitGroup{}
pkg/commands/images.go:	chEntries := make(chan api.ScalewayImageInterface)
pkg/commands/images.go:	errChan := make(chan error, 10)
pkg/commands/images.go:	var entries = []api.ScalewayImageInterface{}
pkg/commands/images.go:	filterType := args.Filters["type"]
pkg/commands/images.go:	if filterType == "" || filterType == "image" {
pkg/commands/images.go:		wg.Add(1)
pkg/commands/images.go:		go func() {
pkg/commands/images.go:			defer wg.Done()
pkg/commands/images.go:			images, err := ctx.API.GetImages()
pkg/commands/images.go:			if err != nil {
pkg/commands/images.go:				errChan <- fmt.Errorf("unable to fetch images from the Scaleway API: %v", err)
pkg/commands/images.go:				return
pkg/commands/images.go:			}
pkg/commands/images.go:			for _, val := range *images {
pkg/commands/images.go:				creationDate, err := time.Parse("2006-01-02T15:04:05.000000+00:00", val.CreationDate)
pkg/commands/images.go:				if err != nil {
pkg/commands/images.go:					errChan <- fmt.Errorf("unable to parse creation date from the Scaleway API: %v", err)
pkg/commands/images.go:					return
pkg/commands/images.go:				}
pkg/commands/images.go:				chEntries <- api.ScalewayImageInterface{
pkg/commands/images.go:					Type:         "image",
pkg/commands/images.go:					CreationDate: creationDate,
pkg/commands/images.go:					Identifier:   val.Identifier,
pkg/commands/images.go:					Name:         val.Name,
pkg/commands/images.go:					Public:       val.Public,
pkg/commands/images.go:					Tag:          "latest",
pkg/commands/images.go:					VirtualSize:  float64(val.RootVolume.Size),
pkg/commands/images.go:					Organization: val.Organization,
pkg/commands/images.go:					// FIXME the region should not be hardcoded
pkg/commands/images.go:					Region: "fr-1",
pkg/commands/images.go:					Arch:   val.Arch,
pkg/commands/images.go:				}
pkg/commands/images.go:			}
pkg/commands/images.go:		}()
pkg/commands/images.go:	}
pkg/commands/images.go:	if args.All || filterType != "" {
pkg/commands/images.go:		if filterType == "" || filterType == "snapshot" {
pkg/commands/images.go:			wg.Add(1)
pkg/commands/images.go:			go func() {
pkg/commands/images.go:				defer wg.Done()
pkg/commands/images.go:				snapshots, err := ctx.API.GetSnapshots()
pkg/commands/images.go:				if err != nil {
pkg/commands/images.go:					errChan <- fmt.Errorf("unable to fetch snapshots from the Scaleway API: %v", err)
pkg/commands/images.go:					return
pkg/commands/images.go:				}
pkg/commands/images.go:				for _, val := range *snapshots {
pkg/commands/images.go:					creationDate, err := time.Parse("2006-01-02T15:04:05.000000+00:00", val.CreationDate)
pkg/commands/images.go:					if err != nil {
pkg/commands/images.go:						errChan <- fmt.Errorf("unable to parse creation date from the Scaleway API: %v", err)
pkg/commands/images.go:						return
pkg/commands/images.go:					}
pkg/commands/images.go:					chEntries <- api.ScalewayImageInterface{
pkg/commands/images.go:						Type:         "snapshot",
pkg/commands/images.go:						CreationDate: creationDate,
pkg/commands/images.go:						Identifier:   val.Identifier,
pkg/commands/images.go:						Name:         val.Name,
pkg/commands/images.go:						Tag:          "<snapshot>",
pkg/commands/images.go:						VirtualSize:  float64(val.Size),
pkg/commands/images.go:						Public:       false,
pkg/commands/images.go:						Organization: val.Organization,
pkg/commands/images.go:						// FIXME the region should not be hardcoded
pkg/commands/images.go:						Region: "fr-1",
pkg/commands/images.go:					}
pkg/commands/images.go:				}
pkg/commands/images.go:			}()
pkg/commands/images.go:		}
pkg/commands/images.go:		if filterType == "" || filterType == "bootscript" {
pkg/commands/images.go:			wg.Add(1)
pkg/commands/images.go:			go func() {
pkg/commands/images.go:				defer wg.Done()
pkg/commands/images.go:				bootscripts, err := ctx.API.GetBootscripts()
pkg/commands/images.go:				if err != nil {
pkg/commands/images.go:					errChan <- fmt.Errorf("unable to fetch bootscripts from the Scaleway API: %v", err)
pkg/commands/images.go:					return
pkg/commands/images.go:				}
pkg/commands/images.go:				for _, val := range *bootscripts {
pkg/commands/images.go:					chEntries <- api.ScalewayImageInterface{
pkg/commands/images.go:						Type:       "bootscript",
pkg/commands/images.go:						Identifier: val.Identifier,
pkg/commands/images.go:						Name:       val.Title,
pkg/commands/images.go:						Tag:        "<bootscript>",
pkg/commands/images.go:						Public:     false,
pkg/commands/images.go:						// FIXME the region should not be hardcoded
pkg/commands/images.go:						Region: "fr-1",
pkg/commands/images.go:						Arch:   val.Arch,
pkg/commands/images.go:					}
pkg/commands/images.go:				}
pkg/commands/images.go:			}()
pkg/commands/images.go:		}
pkg/commands/images.go:		if filterType == "" || filterType == "volume" {
pkg/commands/images.go:			wg.Add(1)
pkg/commands/images.go:			go func() {
pkg/commands/images.go:				defer wg.Done()
pkg/commands/images.go:				volumes, err := ctx.API.GetVolumes()
pkg/commands/images.go:				if err != nil {
pkg/commands/images.go:					errChan <- fmt.Errorf("unable to fetch volumes from the Scaleway API: %v", err)
pkg/commands/images.go:					return
pkg/commands/images.go:				}
pkg/commands/images.go:				for _, val := range *volumes {
pkg/commands/images.go:					creationDate, err := time.Parse("2006-01-02T15:04:05.000000+00:00", val.CreationDate)
pkg/commands/images.go:					if err != nil {
pkg/commands/images.go:						errChan <- fmt.Errorf("unable to parse creation date from the Scaleway API: %v", err)
pkg/commands/images.go:						return
pkg/commands/images.go:					}
pkg/commands/images.go:					chEntries <- api.ScalewayImageInterface{
pkg/commands/images.go:						Type:         "volume",
pkg/commands/images.go:						CreationDate: creationDate,
pkg/commands/images.go:						Identifier:   val.Identifier,
pkg/commands/images.go:						Name:         val.Name,
pkg/commands/images.go:						Tag:          "<volume>",
pkg/commands/images.go:						VirtualSize:  float64(val.Size),
pkg/commands/images.go:						Public:       false,
pkg/commands/images.go:						Organization: val.Organization,
pkg/commands/images.go:						// FIXME the region should not be hardcoded
pkg/commands/images.go:						Region: "fr-1",
pkg/commands/images.go:					}
pkg/commands/images.go:				}
pkg/commands/images.go:			}()
pkg/commands/images.go:		}
pkg/commands/images.go:	}
pkg/commands/images.go:	go func() {
pkg/commands/images.go:		wg.Wait()
pkg/commands/images.go:		close(chEntries)
pkg/commands/images.go:	}()
pkg/commands/images.go:	for {
pkg/commands/images.go:		if entry, ok := <-chEntries; !ok {
pkg/commands/images.go:			break
pkg/commands/images.go:		} else {
pkg/commands/images.go:			entries = append(entries, entry)
pkg/commands/images.go:		}
pkg/commands/images.go:	}
pkg/commands/images.go:	select {
pkg/commands/images.go:	case err := <-errChan:
pkg/commands/images.go:		return err
pkg/commands/images.go:	default:
pkg/commands/images.go:		break
pkg/commands/images.go:	}
pkg/commands/images.go:	for key, value := range args.Filters {
pkg/commands/images.go:		switch key {
pkg/commands/images.go:		case "organization", "type", "name", "public":
pkg/commands/images.go:			continue
pkg/commands/images.go:		default:
pkg/commands/images.go:			logrus.Warnf("Unknown filter: '%s=%s'", key, value)
pkg/commands/images.go:		}
pkg/commands/images.go:	}
pkg/commands/images.go:	w := tabwriter.NewWriter(ctx.Stdout, 20, 1, 3, ' ', 0)
pkg/commands/images.go:	defer w.Flush()
pkg/commands/images.go:	if !args.Quiet {
pkg/commands/images.go:		fmt.Fprintf(w, "REPOSITORY\tTAG\tIMAGE ID\tCREATED\tVIRTUAL SIZE\tREGION\tARCH\n")
pkg/commands/images.go:	}
pkg/commands/images.go:	sort.Sort(api.ByCreationDate(entries))
pkg/commands/images.go:	for _, image := range entries {
pkg/commands/images.go:		for key, value := range args.Filters {
pkg/commands/images.go:			switch key {
pkg/commands/images.go:			case "type":
pkg/commands/images.go:				if value != image.Type {
pkg/commands/images.go:					goto skipimage
pkg/commands/images.go:				}
pkg/commands/images.go:			case "organization":
pkg/commands/images.go:				switch value {
pkg/commands/images.go:				case "me":
pkg/commands/images.go:					value = ctx.API.Organization
pkg/commands/images.go:				case "official-distribs":
pkg/commands/images.go:					value = "a283af0b-d13e-42e1-a43f-855ffbf281ab"
pkg/commands/images.go:				case "official-apps":
pkg/commands/images.go:					value = "c3884e19-7a3e-4b69-9db8-50e7f902aafc"
pkg/commands/images.go:				}
pkg/commands/images.go:				if image.Organization != value {
pkg/commands/images.go:					goto skipimage
pkg/commands/images.go:				}
pkg/commands/images.go:			case "name":
pkg/commands/images.go:				if fuzzy.RankMatch(strings.ToLower(value), strings.ToLower(image.Name)) == -1 {
pkg/commands/images.go:					goto skipimage
pkg/commands/images.go:				}
pkg/commands/images.go:			case "public":
pkg/commands/images.go:				if (value == "true" && !image.Public) || (value == "false" && image.Public) {
pkg/commands/images.go:					goto skipimage
pkg/commands/images.go:				}
pkg/commands/images.go:			}
pkg/commands/images.go:		}
pkg/commands/images.go:		if args.Quiet {
pkg/commands/images.go:			fmt.Fprintf(ctx.Stdout, "%s\n", image.Identifier)
pkg/commands/images.go:		} else {
pkg/commands/images.go:			tag := image.Tag
pkg/commands/images.go:			shortID := utils.TruncIf(image.Identifier, 8, !args.NoTrunc)
pkg/commands/images.go:			name := utils.Wordify(image.Name)
pkg/commands/images.go:			if !image.Public && image.Type == "image" {
pkg/commands/images.go:				name = "user/" + name
pkg/commands/images.go:			}
pkg/commands/images.go:			shortName := utils.TruncIf(name, 25, !args.NoTrunc)
pkg/commands/images.go:			var creationDate, virtualSize string
pkg/commands/images.go:			if image.CreationDate.IsZero() {
pkg/commands/images.go:				creationDate = "n/a"
pkg/commands/images.go:			} else {
pkg/commands/images.go:				creationDate = units.HumanDuration(time.Now().UTC().Sub(image.CreationDate))
pkg/commands/images.go:			}
pkg/commands/images.go:			if image.VirtualSize == 0 {
pkg/commands/images.go:				virtualSize = "n/a"
pkg/commands/images.go:			} else {
pkg/commands/images.go:				virtualSize = units.HumanSize(image.VirtualSize)
pkg/commands/images.go:			}
pkg/commands/images.go:			if image.Arch == "" {
pkg/commands/images.go:				image.Arch = "n/a"
pkg/commands/images.go:			}
pkg/commands/images.go:			fmt.Fprintf(w, "%s\t%s\t%s\t%s\t%s\t%s\t%s\n", shortName, tag, shortID, creationDate, virtualSize, image.Region, image.Arch)
pkg/commands/images.go:		}
pkg/commands/images.go:	skipimage:
pkg/commands/images.go:		continue
pkg/commands/images.go:	}
pkg/commands/images.go:	return nil
pkg/commands/images.go:}
pkg/commands/images_test.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/images_test.go:// Use of this source code is governed by a MIT-style
pkg/commands/images_test.go:// license that can be found in the LICENSE.md file.
pkg/commands/images_test.go:package commands
pkg/commands/images_test.go:import (
pkg/commands/images_test.go:	"strings"
pkg/commands/images_test.go:	"testing"
pkg/commands/images_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/commands/images_test.go:)
pkg/commands/images_test.go:func ExampleRunImages() {
pkg/commands/images_test.go:	ctx := testCommandContext()
pkg/commands/images_test.go:	args := ImagesArgs{}
pkg/commands/images_test.go:	RunImages(ctx, args)
pkg/commands/images_test.go:}
pkg/commands/images_test.go:func ExampleRunImages_complex() {
pkg/commands/images_test.go:	ctx := testCommandContext()
pkg/commands/images_test.go:	args := ImagesArgs{
pkg/commands/images_test.go:		All:     false,
pkg/commands/images_test.go:		NoTrunc: false,
pkg/commands/images_test.go:		Quiet:   false,
pkg/commands/images_test.go:	}
pkg/commands/images_test.go:	RunImages(ctx, args)
pkg/commands/images_test.go:}
pkg/commands/images_test.go:func ExampleRunImages_quiet() {
pkg/commands/images_test.go:	ctx := testCommandContext()
pkg/commands/images_test.go:	args := ImagesArgs{
pkg/commands/images_test.go:		All:     false,
pkg/commands/images_test.go:		NoTrunc: false,
pkg/commands/images_test.go:		Quiet:   true,
pkg/commands/images_test.go:	}
pkg/commands/images_test.go:	RunImages(ctx, args)
pkg/commands/images_test.go:}
pkg/commands/images_test.go:func ExampleRunImages_all() {
pkg/commands/images_test.go:	ctx := testCommandContext()
pkg/commands/images_test.go:	args := ImagesArgs{
pkg/commands/images_test.go:		All:     true,
pkg/commands/images_test.go:		NoTrunc: false,
pkg/commands/images_test.go:		Quiet:   false,
pkg/commands/images_test.go:	}
pkg/commands/images_test.go:	RunImages(ctx, args)
pkg/commands/images_test.go:}
pkg/commands/images_test.go:func ExampleRunImages_notrunc() {
pkg/commands/images_test.go:	ctx := testCommandContext()
pkg/commands/images_test.go:	args := ImagesArgs{
pkg/commands/images_test.go:		All:     false,
pkg/commands/images_test.go:		NoTrunc: true,
pkg/commands/images_test.go:		Quiet:   false,
pkg/commands/images_test.go:	}
pkg/commands/images_test.go:	RunImages(ctx, args)
pkg/commands/images_test.go:}
pkg/commands/images_test.go:func TestRunImages_realAPI(t *testing.T) {
pkg/commands/images_test.go:	ctx := RealAPIContext()
pkg/commands/images_test.go:	if ctx == nil {
pkg/commands/images_test.go:		t.Skip()
pkg/commands/images_test.go:	}
pkg/commands/images_test.go:	Convey("Testing RunImages() on real API", t, func() {
pkg/commands/images_test.go:		Convey("no options", func() {
pkg/commands/images_test.go:			args := ImagesArgs{
pkg/commands/images_test.go:				All:     false,
pkg/commands/images_test.go:				NoTrunc: false,
pkg/commands/images_test.go:				Quiet:   false,
pkg/commands/images_test.go:			}
pkg/commands/images_test.go:			scopedCtx, scopedStdout, scopedStderr := getScopedCtx(ctx)
pkg/commands/images_test.go:			err := RunImages(*scopedCtx, args)
pkg/commands/images_test.go:			So(err, ShouldBeNil)
pkg/commands/images_test.go:			So(scopedStderr.String(), ShouldBeEmpty)
pkg/commands/images_test.go:			lines := strings.Split(scopedStdout.String(), "\n")
pkg/commands/images_test.go:			So(len(lines), ShouldBeGreaterThan, 0)
pkg/commands/images_test.go:			firstLine := lines[0]
pkg/commands/images_test.go:			colNames := strings.Fields(firstLine)
pkg/commands/images_test.go:			So(colNames, ShouldResemble, []string{"REPOSITORY", "TAG", "IMAGE", "ID", "CREATED", "VIRTUAL", "SIZE", "REGION", "ARCH"})
pkg/commands/images_test.go:			// FIXME: test public images
pkg/commands/images_test.go:		})
pkg/commands/images_test.go:		Convey("--all", func() {
pkg/commands/images_test.go:			args := ImagesArgs{
pkg/commands/images_test.go:				All:     true,
pkg/commands/images_test.go:				NoTrunc: false,
pkg/commands/images_test.go:				Quiet:   false,
pkg/commands/images_test.go:			}
pkg/commands/images_test.go:			scopedCtx, scopedStdout, scopedStderr := getScopedCtx(ctx)
pkg/commands/images_test.go:			err := RunImages(*scopedCtx, args)
pkg/commands/images_test.go:			So(err, ShouldBeNil)
pkg/commands/images_test.go:			So(scopedStderr.String(), ShouldBeEmpty)
pkg/commands/images_test.go:			lines := strings.Split(scopedStdout.String(), "\n")
pkg/commands/images_test.go:			So(len(lines), ShouldBeGreaterThan, 0)
pkg/commands/images_test.go:			firstLine := lines[0]
pkg/commands/images_test.go:			colNames := strings.Fields(firstLine)
pkg/commands/images_test.go:			So(colNames, ShouldResemble, []string{"REPOSITORY", "TAG", "IMAGE", "ID", "CREATED", "VIRTUAL", "SIZE", "REGION", "ARCH"})
pkg/commands/images_test.go:			// FIXME: test public images
pkg/commands/images_test.go:			// FIXME: test bootscripts
pkg/commands/images_test.go:			// FIXME: test snapshots
pkg/commands/images_test.go:		})
pkg/commands/images_test.go:		Convey("--quiet", func() {
pkg/commands/images_test.go:			args := ImagesArgs{
pkg/commands/images_test.go:				All:     false,
pkg/commands/images_test.go:				NoTrunc: false,
pkg/commands/images_test.go:				Quiet:   true,
pkg/commands/images_test.go:			}
pkg/commands/images_test.go:			scopedCtx, scopedStdout, scopedStderr := getScopedCtx(ctx)
pkg/commands/images_test.go:			err := RunImages(*scopedCtx, args)
pkg/commands/images_test.go:			So(err, ShouldBeNil)
pkg/commands/images_test.go:			So(scopedStderr.String(), ShouldBeEmpty)
pkg/commands/images_test.go:			lines := strings.Split(scopedStdout.String(), "\n")
pkg/commands/images_test.go:			// So(len(lines), ShouldBeGreaterThan, 0)
pkg/commands/images_test.go:			if len(lines) > 0 {
pkg/commands/images_test.go:				firstLine := lines[0]
pkg/commands/images_test.go:				colNames := strings.Fields(firstLine)
pkg/commands/images_test.go:				So(colNames, ShouldNotResemble, []string{"REPOSITORY", "TAG", "IMAGE", "ID", "CREATED", "VIRTUAL", "SIZE"})
pkg/commands/images_test.go:				// FIXME: test public images
pkg/commands/images_test.go:				// FIXME: test bootscripts
pkg/commands/images_test.go:				// FIXME: test snapshots
pkg/commands/images_test.go:			}
pkg/commands/images_test.go:		})
pkg/commands/images_test.go:	})
pkg/commands/images_test.go:}
pkg/commands/info.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/info.go:// Use of this source code is governed by a MIT-style
pkg/commands/info.go:// license that can be found in the LICENSE.md file.
pkg/commands/info.go:package commands
pkg/commands/info.go:import (
pkg/commands/info.go:	"fmt"
pkg/commands/info.go:	"os"
pkg/commands/info.go:	"runtime"
pkg/commands/info.go:	"github.com/kardianos/osext"
pkg/commands/info.go:	"github.com/scaleway/scaleway-cli/pkg/config"
pkg/commands/info.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/info.go:)
pkg/commands/info.go:// InfoArgs are flags for the `RunInfo` function
pkg/commands/info.go:type InfoArgs struct{}
pkg/commands/info.go:// RunInfo is the handler for 'scw info'
pkg/commands/info.go:func RunInfo(ctx CommandContext, args InfoArgs) error {
pkg/commands/info.go:	// FIXME: fmt.Fprintf(ctx.Stdout, "Servers: %s\n", "quantity")
pkg/commands/info.go:	// FIXME: fmt.Fprintf(ctx.Stdout, "Images: %s\n", "quantity")
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "Debug mode (client):\t%v\n", ctx.Getenv("DEBUG") != "")
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "Organization:\t\t%s\n", ctx.API.Organization)
pkg/commands/info.go:	// FIXME: add partially-masked token
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "API Endpoint:\t\t%s\n", ctx.Getenv("scaleway_api_endpoint"))
pkg/commands/info.go:	configPath, _ := config.GetConfigFilePath()
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "RC file:\t\t%s\n", configPath)
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "User:\t\t\t%s\n", ctx.Getenv("USER"))
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "CPUs:\t\t\t%d\n", runtime.NumCPU())
pkg/commands/info.go:	hostname, _ := os.Hostname()
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "Hostname:\t\t%s\n", hostname)
pkg/commands/info.go:	cliPath, _ := osext.Executable()
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "CLI Path:\t\t%s\n", cliPath)
pkg/commands/info.go:	fmt.Fprintln(ctx.Stdout, "")
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "Cache:\t\t\t%s\n", ctx.API.Cache.Path)
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Servers:\t\t%d\n", ctx.API.Cache.GetNbServers())
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Images:\t\t%d\n", ctx.API.Cache.GetNbImages())
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Snapshots:\t\t%d\n", ctx.API.Cache.GetNbSnapshots())
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Volumes:\t\t%d\n", ctx.API.Cache.GetNbVolumes())
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Bootscripts:\t\t%d\n", ctx.API.Cache.GetNbBootscripts())
pkg/commands/info.go:	user, err := ctx.API.GetUser()
pkg/commands/info.go:	if err != nil {
pkg/commands/info.go:		return fmt.Errorf("Unable to get your SSH Keys")
pkg/commands/info.go:	}
pkg/commands/info.go:	if len(user.SSHPublicKeys) == 0 {
pkg/commands/info.go:		fmt.Fprintln(ctx.Stdout, "You have no ssh keys")
pkg/commands/info.go:	} else {
pkg/commands/info.go:		fmt.Fprintln(ctx.Stdout, "")
pkg/commands/info.go:		fmt.Fprintln(ctx.Stdout, "SSH Keys:")
pkg/commands/info.go:		for id, key := range user.SSHPublicKeys {
pkg/commands/info.go:			fingerprint, err := utils.SSHGetFingerprint([]byte(key.Key))
pkg/commands/info.go:			if err != nil {
pkg/commands/info.go:				return err
pkg/commands/info.go:			}
pkg/commands/info.go:			fmt.Fprintf(ctx.Stdout, "  [%d] %s\n", id, fingerprint)
pkg/commands/info.go:		}
pkg/commands/info.go:		fmt.Fprintf(ctx.Stdout, "\n")
pkg/commands/info.go:	}
pkg/commands/info.go:	dashboard, err := ctx.API.GetDashboard()
pkg/commands/info.go:	if err != nil {
pkg/commands/info.go:		return fmt.Errorf("Unable to get your dashboard")
pkg/commands/info.go:	}
pkg/commands/info.go:	fmt.Fprintln(ctx.Stdout, "Dashboard:")
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Volumes:\t\t%d\n", dashboard.VolumesCount)
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Running servers:\t%d\n", dashboard.RunningServersCount)
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Images:\t\t%d\n", dashboard.ImagesCount)
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Snapshots:\t\t%d\n", dashboard.SnapshotsCount)
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Servers:\t\t%d\n", dashboard.ServersCount)
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "  Ips:\t\t\t%d\n", dashboard.IPsCount)
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "\n")
pkg/commands/info.go:	permissions, err := ctx.API.GetPermissions()
pkg/commands/info.go:	if err != nil {
pkg/commands/info.go:		return fmt.Errorf("Unable to get your permisssions")
pkg/commands/info.go:	}
pkg/commands/info.go:	fmt.Fprintln(ctx.Stdout, "Permissions:")
pkg/commands/info.go:	for _, service := range permissions.Permissions {
pkg/commands/info.go:		for key, serviceName := range service {
pkg/commands/info.go:			fmt.Fprintf(ctx.Stdout, "  %s\n", key)
pkg/commands/info.go:			for _, perm := range serviceName {
pkg/commands/info.go:				fmt.Fprintf(ctx.Stdout, "    %s\n", perm)
pkg/commands/info.go:			}
pkg/commands/info.go:		}
pkg/commands/info.go:	}
pkg/commands/info.go:	fmt.Fprintf(ctx.Stdout, "\n")
pkg/commands/info.go:	quotas, err := ctx.API.GetQuotas()
pkg/commands/info.go:	if err != nil {
pkg/commands/info.go:		return fmt.Errorf("Unable to get your quotas")
pkg/commands/info.go:	}
pkg/commands/info.go:	fmt.Fprintln(ctx.Stdout, "Quotas:")
pkg/commands/info.go:	for key, value := range quotas.Quotas {
pkg/commands/info.go:		fmt.Fprintf(ctx.Stdout, "  %-20s: %d\n", key, value)
pkg/commands/info.go:	}
pkg/commands/info.go:	return nil
pkg/commands/info.go:}
pkg/commands/inspect.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/inspect.go:// Use of this source code is governed by a MIT-style
pkg/commands/inspect.go:// license that can be found in the LICENSE.md file.
pkg/commands/inspect.go:package commands
pkg/commands/inspect.go:import (
pkg/commands/inspect.go:	"encoding/json"
pkg/commands/inspect.go:	"fmt"
pkg/commands/inspect.go:	"text/template"
pkg/commands/inspect.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/inspect.go:	"github.com/Sirupsen/logrus"
pkg/commands/inspect.go:	"github.com/skratchdot/open-golang/open"
pkg/commands/inspect.go:)
pkg/commands/inspect.go:// InspectArgs are flags for the `RunInspect` function
pkg/commands/inspect.go:type InspectArgs struct {
pkg/commands/inspect.go:	Format      string
pkg/commands/inspect.go:	Browser     bool
pkg/commands/inspect.go:	Identifiers []string
pkg/commands/inspect.go:}
pkg/commands/inspect.go:// RunInspect is the handler for 'scw inspect'
pkg/commands/inspect.go:func RunInspect(ctx CommandContext, args InspectArgs) error {
pkg/commands/inspect.go:	nbInspected := 0
pkg/commands/inspect.go:	ci := make(chan api.ScalewayResolvedIdentifier)
pkg/commands/inspect.go:	cj := make(chan api.InspectIdentifierResult)
pkg/commands/inspect.go:	go api.ResolveIdentifiers(ctx.API, args.Identifiers, ci)
pkg/commands/inspect.go:	go api.InspectIdentifiers(ctx.API, ci, cj)
pkg/commands/inspect.go:	if args.Browser {
pkg/commands/inspect.go:		// --browser will open links in the browser
pkg/commands/inspect.go:		for {
pkg/commands/inspect.go:			data, isOpen := <-cj
pkg/commands/inspect.go:			if !isOpen {
pkg/commands/inspect.go:				break
pkg/commands/inspect.go:			}
pkg/commands/inspect.go:			switch data.Type {
pkg/commands/inspect.go:			case api.IdentifierServer:
pkg/commands/inspect.go:				err := open.Start(fmt.Sprintf("https://cloud.scaleway.com/#/servers/%s", data.Object.(*api.ScalewayServer).Identifier))
pkg/commands/inspect.go:				if err != nil {
pkg/commands/inspect.go:					return fmt.Errorf("cannot open browser: %v", err)
pkg/commands/inspect.go:				}
pkg/commands/inspect.go:				nbInspected++
pkg/commands/inspect.go:			case api.IdentifierImage:
pkg/commands/inspect.go:				err := open.Start(fmt.Sprintf("https://cloud.scaleway.com/#/images/%s", data.Object.(*api.ScalewayImage).Identifier))
pkg/commands/inspect.go:				if err != nil {
pkg/commands/inspect.go:					return fmt.Errorf("cannot open browser: %v", err)
pkg/commands/inspect.go:				}
pkg/commands/inspect.go:				nbInspected++
pkg/commands/inspect.go:			case api.IdentifierVolume:
pkg/commands/inspect.go:				err := open.Start(fmt.Sprintf("https://cloud.scaleway.com/#/volumes/%s", data.Object.(*api.ScalewayVolume).Identifier))
pkg/commands/inspect.go:				if err != nil {
pkg/commands/inspect.go:					return fmt.Errorf("cannot open browser: %v", err)
pkg/commands/inspect.go:				}
pkg/commands/inspect.go:				nbInspected++
pkg/commands/inspect.go:			case api.IdentifierSnapshot:
pkg/commands/inspect.go:				logrus.Errorf("Cannot use '--browser' option for snapshots")
pkg/commands/inspect.go:			case api.IdentifierBootscript:
pkg/commands/inspect.go:				logrus.Errorf("Cannot use '--browser' option for bootscripts")
pkg/commands/inspect.go:			}
pkg/commands/inspect.go:		}
pkg/commands/inspect.go:	} else {
pkg/commands/inspect.go:		// without --browser option, inspect will print object info to the terminal
pkg/commands/inspect.go:		res := "["
pkg/commands/inspect.go:		for {
pkg/commands/inspect.go:			data, isOpen := <-cj
pkg/commands/inspect.go:			if !isOpen {
pkg/commands/inspect.go:				break
pkg/commands/inspect.go:			}
pkg/commands/inspect.go:			if args.Format == "" {
pkg/commands/inspect.go:				dataB, err := json.MarshalIndent(data.Object, "", "  ")
pkg/commands/inspect.go:				if err == nil {
pkg/commands/inspect.go:					if nbInspected != 0 {
pkg/commands/inspect.go:						res += ",\n"
pkg/commands/inspect.go:					}
pkg/commands/inspect.go:					res += string(dataB)
pkg/commands/inspect.go:					nbInspected++
pkg/commands/inspect.go:				}
pkg/commands/inspect.go:			} else {
pkg/commands/inspect.go:				tmpl, err := template.New("").Funcs(api.FuncMap).Parse(args.Format)
pkg/commands/inspect.go:				if err != nil {
pkg/commands/inspect.go:					return fmt.Errorf("format parsing error: %v", err)
pkg/commands/inspect.go:				}
pkg/commands/inspect.go:				err = tmpl.Execute(ctx.Stdout, data.Object)
pkg/commands/inspect.go:				if err != nil {
pkg/commands/inspect.go:					return fmt.Errorf("format execution error: %v", err)
pkg/commands/inspect.go:				}
pkg/commands/inspect.go:				fmt.Fprint(ctx.Stdout, "\n")
pkg/commands/inspect.go:				nbInspected++
pkg/commands/inspect.go:			}
pkg/commands/inspect.go:		}
pkg/commands/inspect.go:		res += "]"
pkg/commands/inspect.go:		if args.Format == "" {
pkg/commands/inspect.go:			if ctx.Getenv("SCW_SENSITIVE") != "1" {
pkg/commands/inspect.go:				res = ctx.API.HideAPICredentials(res)
pkg/commands/inspect.go:			}
pkg/commands/inspect.go:			fmt.Fprintln(ctx.Stdout, res)
pkg/commands/inspect.go:		}
pkg/commands/inspect.go:	}
pkg/commands/inspect.go:	if len(args.Identifiers) != nbInspected {
pkg/commands/inspect.go:		return fmt.Errorf("at least 1 item failed to be inspected")
pkg/commands/inspect.go:	}
pkg/commands/inspect.go:	return nil
pkg/commands/inspect.go:}
pkg/commands/inspect_test.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/inspect_test.go:// Use of this source code is governed by a MIT-style
pkg/commands/inspect_test.go:// license that can be found in the LICENSE.md file.
pkg/commands/inspect_test.go:package commands
pkg/commands/inspect_test.go:import (
pkg/commands/inspect_test.go:	"encoding/json"
pkg/commands/inspect_test.go:	"fmt"
pkg/commands/inspect_test.go:	"strings"
pkg/commands/inspect_test.go:	"testing"
pkg/commands/inspect_test.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/inspect_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/commands/inspect_test.go:)
pkg/commands/inspect_test.go:func ExampleRunInspect() {
pkg/commands/inspect_test.go:	ctx := testCommandContext()
pkg/commands/inspect_test.go:	args := InspectArgs{}
pkg/commands/inspect_test.go:	RunInspect(ctx, args)
pkg/commands/inspect_test.go:}
pkg/commands/inspect_test.go:func ExampleRunInspect_complex() {
pkg/commands/inspect_test.go:	ctx := testCommandContext()
pkg/commands/inspect_test.go:	args := InspectArgs{
pkg/commands/inspect_test.go:		Format:      "",
pkg/commands/inspect_test.go:		Browser:     false,
pkg/commands/inspect_test.go:		Identifiers: []string{},
pkg/commands/inspect_test.go:	}
pkg/commands/inspect_test.go:	RunInspect(ctx, args)
pkg/commands/inspect_test.go:}
pkg/commands/inspect_test.go:func TestRunInspect_realAPI(t *testing.T) {
pkg/commands/inspect_test.go:	ctx := RealAPIContext()
pkg/commands/inspect_test.go:	if ctx == nil {
pkg/commands/inspect_test.go:		t.Skip()
pkg/commands/inspect_test.go:	}
pkg/commands/inspect_test.go:	Convey("Testing RunInspect() on real API", t, func() {
pkg/commands/inspect_test.go:		Convey("image:ubuntu-vivid", func() {
pkg/commands/inspect_test.go:			args := InspectArgs{
pkg/commands/inspect_test.go:				Format:      "",
pkg/commands/inspect_test.go:				Browser:     false,
pkg/commands/inspect_test.go:				Identifiers: []string{"image:ubuntu-vivid"},
pkg/commands/inspect_test.go:			}
pkg/commands/inspect_test.go:			scopedCtx, scopedStdout, scopedStderr := getScopedCtx(ctx)
pkg/commands/inspect_test.go:			err := RunInspect(*scopedCtx, args)
pkg/commands/inspect_test.go:			So(err, ShouldBeNil)
pkg/commands/inspect_test.go:			So(scopedStderr.String(), ShouldBeEmpty)
pkg/commands/inspect_test.go:			fmt.Println(scopedStdout)
pkg/commands/inspect_test.go:			var results []api.ScalewayImage
pkg/commands/inspect_test.go:			err = json.Unmarshal(scopedStdout.Bytes(), &results)
pkg/commands/inspect_test.go:			So(err, ShouldBeNil)
pkg/commands/inspect_test.go:			So(len(results), ShouldEqual, 1)
pkg/commands/inspect_test.go:			So(strings.ToLower(results[0].Name), ShouldContainSubstring, "ubuntu")
pkg/commands/inspect_test.go:			So(strings.ToLower(results[0].Name), ShouldContainSubstring, "vivid")
pkg/commands/inspect_test.go:			Convey("-f \"{{.Identifier}}\" image:ubuntu-vivid", func() {
pkg/commands/inspect_test.go:				args := InspectArgs{
pkg/commands/inspect_test.go:					Format:      "{{.Identifier}}",
pkg/commands/inspect_test.go:					Browser:     false,
pkg/commands/inspect_test.go:					Identifiers: []string{"image:ubuntu-vivid"},
pkg/commands/inspect_test.go:				}
pkg/commands/inspect_test.go:				scopedCtx, scopedStdout, scopedStderr := getScopedCtx(ctx)
pkg/commands/inspect_test.go:				err := RunInspect(*scopedCtx, args)
pkg/commands/inspect_test.go:				So(err, ShouldBeNil)
pkg/commands/inspect_test.go:				So(scopedStderr.String(), ShouldBeEmpty)
pkg/commands/inspect_test.go:				uuid := strings.TrimSpace(scopedStdout.String())
pkg/commands/inspect_test.go:				So(results[0].Identifier, ShouldEqual, uuid)
pkg/commands/inspect_test.go:			})
pkg/commands/inspect_test.go:		})
pkg/commands/inspect_test.go:	})
pkg/commands/inspect_test.go:}
pkg/commands/kill.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/kill.go:// Use of this source code is governed by a MIT-style
pkg/commands/kill.go:// license that can be found in the LICENSE.md file.
pkg/commands/kill.go:package commands
pkg/commands/kill.go:import (
pkg/commands/kill.go:	"fmt"
pkg/commands/kill.go:	"os/exec"
pkg/commands/kill.go:	"github.com/Sirupsen/logrus"
pkg/commands/kill.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/kill.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/kill.go:)
pkg/commands/kill.go:// KillArgs are flags for the `RunKill` function
pkg/commands/kill.go:type KillArgs struct {
pkg/commands/kill.go:	Gateway string
pkg/commands/kill.go:	Server  string
pkg/commands/kill.go:}
pkg/commands/kill.go:// RunKill is the handler for 'scw kill'
pkg/commands/kill.go:func RunKill(ctx CommandContext, args KillArgs) error {
pkg/commands/kill.go:	serverID, err := ctx.API.GetServerID(args.Server)
pkg/commands/kill.go:	if err != nil {
pkg/commands/kill.go:		return err
pkg/commands/kill.go:	}
pkg/commands/kill.go:	command := "halt"
pkg/commands/kill.go:	server, err := ctx.API.GetServer(serverID)
pkg/commands/kill.go:	if err != nil {
pkg/commands/kill.go:		return fmt.Errorf("failed to get server information for %s: %v", serverID, err)
pkg/commands/kill.go:	}
pkg/commands/kill.go:	// Resolve gateway
pkg/commands/kill.go:	if args.Gateway == "" {
pkg/commands/kill.go:		args.Gateway = ctx.Getenv("SCW_GATEWAY")
pkg/commands/kill.go:	}
pkg/commands/kill.go:	var gateway string
pkg/commands/kill.go:	if args.Gateway == serverID || args.Gateway == args.Server {
pkg/commands/kill.go:		gateway = ""
pkg/commands/kill.go:	} else {
pkg/commands/kill.go:		gateway, err = api.ResolveGateway(ctx.API, args.Gateway)
pkg/commands/kill.go:		if err != nil {
pkg/commands/kill.go:			return fmt.Errorf("cannot resolve Gateway '%s': %v", args.Gateway, err)
pkg/commands/kill.go:		}
pkg/commands/kill.go:	}
pkg/commands/kill.go:	sshCommand := utils.NewSSHExecCmd(server.PublicAddress.IP, server.PrivateIP, true, []string{command}, gateway)
pkg/commands/kill.go:	logrus.Debugf("Executing: %s", sshCommand)
pkg/commands/kill.go:	spawn := exec.Command("ssh", sshCommand.Slice()[1:]...)
pkg/commands/kill.go:	spawn.Stdout = ctx.Stdout
pkg/commands/kill.go:	spawn.Stdin = ctx.Stdin
pkg/commands/kill.go:	spawn.Stderr = ctx.Stderr
pkg/commands/kill.go:	return spawn.Run()
pkg/commands/kill.go:}
pkg/commands/login.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/login.go:// Use of this source code is governed by a MIT-style
pkg/commands/login.go:// license that can be found in the LICENSE.md file.
pkg/commands/login.go:package commands
pkg/commands/login.go:import (
pkg/commands/login.go:	"bufio"
pkg/commands/login.go:	"encoding/json"
pkg/commands/login.go:	"fmt"
pkg/commands/login.go:	"io/ioutil"
pkg/commands/login.go:	"os"
pkg/commands/login.go:	"path/filepath"
pkg/commands/login.go:	"strconv"
pkg/commands/login.go:	"strings"
pkg/commands/login.go:	"github.com/Sirupsen/logrus"
pkg/commands/login.go:	"golang.org/x/crypto/ssh/terminal"
pkg/commands/login.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/login.go:	"github.com/scaleway/scaleway-cli/pkg/config"
pkg/commands/login.go:)
pkg/commands/login.go:// LoginArgs are arguments passed to `RunLogin`
pkg/commands/login.go:type LoginArgs struct {
pkg/commands/login.go:	Organization string
pkg/commands/login.go:	Token        string
pkg/commands/login.go:	SSHKey       string
pkg/commands/login.go:	SkipSSHKey   bool
pkg/commands/login.go:}
pkg/commands/login.go:// selectKey allows to choice a key in ~/.ssh
pkg/commands/login.go:func selectKey(args *LoginArgs) error {
pkg/commands/login.go:	fmt.Println("Do you want to upload an SSH key ?")
pkg/commands/login.go:	home, err := config.GetHomeDir()
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return err
pkg/commands/login.go:	}
pkg/commands/login.go:	dir := filepath.Join(home, ".ssh")
pkg/commands/login.go:	files, err := ioutil.ReadDir(dir)
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return fmt.Errorf("Unable to open your ~/.ssh: %v", err)
pkg/commands/login.go:	}
pkg/commands/login.go:	var pubs []string
pkg/commands/login.go:	for i := range files {
pkg/commands/login.go:		if filepath.Ext(files[i].Name()) == ".pub" {
pkg/commands/login.go:			pubs = append(pubs, files[i].Name())
pkg/commands/login.go:		}
pkg/commands/login.go:	}
pkg/commands/login.go:	if len(pubs) == 0 {
pkg/commands/login.go:		return nil
pkg/commands/login.go:	}
pkg/commands/login.go:	fmt.Println("[0] I don't want to upload a key !")
pkg/commands/login.go:	for i := range pubs {
pkg/commands/login.go:		fmt.Printf("[%d] %s\n", i+1, pubs[i])
pkg/commands/login.go:	}
pkg/commands/login.go:	for {
pkg/commands/login.go:		if err := promptUser("Which [id]: ", &args.SSHKey, true); err != nil {
pkg/commands/login.go:			return err
pkg/commands/login.go:		}
pkg/commands/login.go:		id, err := strconv.ParseUint(strings.TrimSpace(args.SSHKey), 10, 32)
pkg/commands/login.go:		if err != nil {
pkg/commands/login.go:			fmt.Println(err)
pkg/commands/login.go:			continue
pkg/commands/login.go:		}
pkg/commands/login.go:		if int(id) > len(pubs) {
pkg/commands/login.go:			fmt.Println("Out of range id must be lower than", len(pubs))
pkg/commands/login.go:			continue
pkg/commands/login.go:		}
pkg/commands/login.go:		args.SSHKey = ""
pkg/commands/login.go:		if id == 0 {
pkg/commands/login.go:			break
pkg/commands/login.go:		}
pkg/commands/login.go:		buff, err := ioutil.ReadFile(filepath.Join(dir, pubs[id-1]))
pkg/commands/login.go:		if err != nil {
pkg/commands/login.go:			return fmt.Errorf("Unable to open your key: %v", err)
pkg/commands/login.go:		}
pkg/commands/login.go:		args.SSHKey = string(buff[:len(buff)])
pkg/commands/login.go:		break
pkg/commands/login.go:	}
pkg/commands/login.go:	return nil
pkg/commands/login.go:}
pkg/commands/login.go:func getToken(connect api.ScalewayConnect) (string, error) {
pkg/commands/login.go:	FakeConnection, err := api.NewScalewayAPI(api.ComputeAPI, api.AccountAPI, "", "")
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return "", fmt.Errorf("Unable to create a fake ScalewayAPI: %s", err)
pkg/commands/login.go:	}
pkg/commands/login.go:	FakeConnection.EnableAccountAPI()
pkg/commands/login.go:	FakeConnection.SetPassword(connect.Password)
pkg/commands/login.go:	resp, err := FakeConnection.PostResponse("tokens", connect)
pkg/commands/login.go:	if resp != nil {
pkg/commands/login.go:		defer resp.Body.Close()
pkg/commands/login.go:	}
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return "", fmt.Errorf("unable to connect %v", err)
pkg/commands/login.go:	}
pkg/commands/login.go:	// Succeed POST code
pkg/commands/login.go:	if resp.StatusCode != 201 {
pkg/commands/login.go:		return "", fmt.Errorf("[%d] maybe your email or your password is not valid", resp.StatusCode)
pkg/commands/login.go:	}
pkg/commands/login.go:	var data api.ScalewayConnectResponse
pkg/commands/login.go:	decoder := json.NewDecoder(resp.Body)
pkg/commands/login.go:	err = decoder.Decode(&data)
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return "", err
pkg/commands/login.go:	}
pkg/commands/login.go:	return data.Token.ID, nil
pkg/commands/login.go:}
pkg/commands/login.go:func getOrganization(token string, email string) (string, error) {
pkg/commands/login.go:	FakeConnection, err := api.NewScalewayAPI(api.ComputeAPI, api.AccountAPI, "", token)
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return "", fmt.Errorf("Unable to create a fake ScalewayAPI: %s", err)
pkg/commands/login.go:	}
pkg/commands/login.go:	data, err := FakeConnection.GetOrganization()
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return "", err
pkg/commands/login.go:	}
pkg/commands/login.go:	orgaID := ""
pkg/commands/login.go:	for _, orga := range data.Organizations {
pkg/commands/login.go:		for _, user := range orga.Users {
pkg/commands/login.go:			if user.Email == email {
pkg/commands/login.go:				for i := range user.Organizations {
pkg/commands/login.go:					if user.Organizations[i].Name != "OCS" {
pkg/commands/login.go:						orgaID = user.Organizations[i].ID
pkg/commands/login.go:						goto exit
pkg/commands/login.go:					}
pkg/commands/login.go:				}
pkg/commands/login.go:			}
pkg/commands/login.go:		}
pkg/commands/login.go:	}
pkg/commands/login.go:	if orgaID == "" {
pkg/commands/login.go:		return "", fmt.Errorf("Unable to find your organization")
pkg/commands/login.go:	}
pkg/commands/login.go:exit:
pkg/commands/login.go:	return orgaID, nil
pkg/commands/login.go:}
pkg/commands/login.go:func connectAPI() (string, string, error) {
pkg/commands/login.go:	email := ""
pkg/commands/login.go:	password := ""
pkg/commands/login.go:	orga := ""
pkg/commands/login.go:	token := ""
pkg/commands/login.go:	hostname, err := os.Hostname()
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return "", "", fmt.Errorf("unable to get your Hostname %v", err)
pkg/commands/login.go:	}
pkg/commands/login.go:	if err := promptUser("Login (cloud.scaleway.com): ", &email, true); err != nil {
pkg/commands/login.go:		return "", "", err
pkg/commands/login.go:	}
pkg/commands/login.go:	if err := promptUser("Password: ", &password, false); err != nil {
pkg/commands/login.go:		return "", "", err
pkg/commands/login.go:	}
pkg/commands/login.go:	connect := api.ScalewayConnect{
pkg/commands/login.go:		Email:       strings.Trim(email, "\n"),
pkg/commands/login.go:		Password:    strings.Trim(password, "\n"),
pkg/commands/login.go:		Expires:     false,
pkg/commands/login.go:		Description: strings.Join([]string{"scw", hostname}, "-"),
pkg/commands/login.go:	}
pkg/commands/login.go:	token, err = getToken(connect)
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return "", "", err
pkg/commands/login.go:	}
pkg/commands/login.go:	orga, err = getOrganization(token, connect.Email)
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return "", "", err
pkg/commands/login.go:	}
pkg/commands/login.go:	return orga, token, nil
pkg/commands/login.go:}
pkg/commands/login.go:// uploadSSHKeys uploads an SSH Key
pkg/commands/login.go:func uploadSSHKeys(apiConnection *api.ScalewayAPI, newKey string) {
pkg/commands/login.go:	user, err := apiConnection.GetUser()
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		logrus.Errorf("Unable to contact ScalewayAPI: %s", err)
pkg/commands/login.go:	} else {
pkg/commands/login.go:		user.SSHPublicKeys = append(user.SSHPublicKeys, api.ScalewayKeyDefinition{Key: strings.Trim(newKey, "\n")})
pkg/commands/login.go:		SSHKeys := api.ScalewayUserPatchSSHKeyDefinition{
pkg/commands/login.go:			SSHPublicKeys: user.SSHPublicKeys,
pkg/commands/login.go:		}
pkg/commands/login.go:		userID, err := apiConnection.GetUserID()
pkg/commands/login.go:		if err != nil {
pkg/commands/login.go:			logrus.Errorf("Unable to get userID: %s", err)
pkg/commands/login.go:		} else {
pkg/commands/login.go:			if err = apiConnection.PatchUserSSHKey(userID, SSHKeys); err != nil {
pkg/commands/login.go:				logrus.Errorf("Unable to patch SSHkey: %v", err)
pkg/commands/login.go:			}
pkg/commands/login.go:		}
pkg/commands/login.go:	}
pkg/commands/login.go:}
pkg/commands/login.go:// RunLogin is the handler for 'scw login'
pkg/commands/login.go:func RunLogin(ctx CommandContext, args LoginArgs) error {
pkg/commands/login.go:	if args.Organization == "" || args.Token == "" {
pkg/commands/login.go:		var err error
pkg/commands/login.go:		args.Organization, args.Token, err = connectAPI()
pkg/commands/login.go:		if err != nil {
pkg/commands/login.go:			return err
pkg/commands/login.go:		}
pkg/commands/login.go:	}
pkg/commands/login.go:	cfg := &config.Config{
pkg/commands/login.go:		ComputeAPI:   api.ComputeAPI,
pkg/commands/login.go:		AccountAPI:   api.AccountAPI,
pkg/commands/login.go:		Organization: strings.Trim(args.Organization, "\n"),
pkg/commands/login.go:		Token:        strings.Trim(args.Token, "\n"),
pkg/commands/login.go:	}
pkg/commands/login.go:	apiConnection, err := api.NewScalewayAPI(cfg.ComputeAPI, cfg.AccountAPI, cfg.Organization, cfg.Token)
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return fmt.Errorf("Unable to create ScalewayAPI: %s", err)
pkg/commands/login.go:	}
pkg/commands/login.go:	err = apiConnection.CheckCredentials()
pkg/commands/login.go:	if err != nil {
pkg/commands/login.go:		return fmt.Errorf("Unable to contact ScalewayAPI: %s", err)
pkg/commands/login.go:	}
pkg/commands/login.go:	if !args.SkipSSHKey {
pkg/commands/login.go:		if err := selectKey(&args); err != nil {
pkg/commands/login.go:			logrus.Errorf("Unable to select a key: %v", err)
pkg/commands/login.go:		} else {
pkg/commands/login.go:			if args.SSHKey != "" {
pkg/commands/login.go:				uploadSSHKeys(apiConnection, args.SSHKey)
pkg/commands/login.go:			}
pkg/commands/login.go:		}
pkg/commands/login.go:	}
pkg/commands/login.go:	return cfg.Save()
pkg/commands/login.go:}
pkg/commands/login.go:func promptUser(prompt string, output *string, echo bool) error {
pkg/commands/login.go:	// FIXME: should use stdin/stdout from command context
pkg/commands/login.go:	fmt.Fprintf(os.Stdout, prompt)
pkg/commands/login.go:	os.Stdout.Sync()
pkg/commands/login.go:	if !echo {
pkg/commands/login.go:		b, err := terminal.ReadPassword(int(os.Stdin.Fd()))
pkg/commands/login.go:		if err != nil {
pkg/commands/login.go:			return fmt.Errorf("Unable to prompt for password: %s", err)
pkg/commands/login.go:		}
pkg/commands/login.go:		*output = string(b)
pkg/commands/login.go:		fmt.Fprintf(os.Stdout, "\n")
pkg/commands/login.go:	} else {
pkg/commands/login.go:		reader := bufio.NewReader(os.Stdin)
pkg/commands/login.go:		*output, _ = reader.ReadString('\n')
pkg/commands/login.go:	}
pkg/commands/login.go:	return nil
pkg/commands/login.go:}
pkg/commands/logout.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/logout.go:// Use of this source code is governed by a MIT-style
pkg/commands/logout.go:// license that can be found in the LICENSE.md file.
pkg/commands/logout.go:package commands
pkg/commands/logout.go:import (
pkg/commands/logout.go:	"fmt"
pkg/commands/logout.go:	"os"
pkg/commands/logout.go:	"github.com/scaleway/scaleway-cli/pkg/config"
pkg/commands/logout.go:)
pkg/commands/logout.go:// LogoutArgs are flags for the `RunLogout` function
pkg/commands/logout.go:type LogoutArgs struct{}
pkg/commands/logout.go:// RunLogout is the handler for 'scw logout'
pkg/commands/logout.go:func RunLogout(ctx CommandContext, args LogoutArgs) error {
pkg/commands/logout.go:	// FIXME: ask if we need to remove the local ssh key on the account
pkg/commands/logout.go:	scwrcPath, err := config.GetConfigFilePath()
pkg/commands/logout.go:	if err != nil {
pkg/commands/logout.go:		return fmt.Errorf("unable to get scwrc config file path: %v", err)
pkg/commands/logout.go:	}
pkg/commands/logout.go:	if _, err = os.Stat(scwrcPath); err == nil {
pkg/commands/logout.go:		err = os.Remove(scwrcPath)
pkg/commands/logout.go:		if err != nil {
pkg/commands/logout.go:			return fmt.Errorf("unable to remove scwrc config file: %v", err)
pkg/commands/logout.go:		}
pkg/commands/logout.go:	}
pkg/commands/logout.go:	return nil
pkg/commands/logout.go:}
pkg/commands/logs.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/logs.go:// Use of this source code is governed by a MIT-style
pkg/commands/logs.go:// license that can be found in the LICENSE.md file.
pkg/commands/logs.go:package commands
pkg/commands/logs.go:import (
pkg/commands/logs.go:	"fmt"
pkg/commands/logs.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/logs.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/logs.go:)
pkg/commands/logs.go:// LogsArgs are flags for the `RunLogs` function
pkg/commands/logs.go:type LogsArgs struct {
pkg/commands/logs.go:	Gateway string
pkg/commands/logs.go:	Server  string
pkg/commands/logs.go:}
pkg/commands/logs.go:// RunLogs is the handler for 'scw logs'
pkg/commands/logs.go:func RunLogs(ctx CommandContext, args LogsArgs) error {
pkg/commands/logs.go:	serverID, err := ctx.API.GetServerID(args.Server)
pkg/commands/logs.go:	if err != nil {
pkg/commands/logs.go:		return err
pkg/commands/logs.go:	}
pkg/commands/logs.go:	server, err := ctx.API.GetServer(serverID)
pkg/commands/logs.go:	if err != nil {
pkg/commands/logs.go:		return fmt.Errorf("failed to get server information for %s: %v", serverID, err)
pkg/commands/logs.go:	}
pkg/commands/logs.go:	// FIXME: switch to serial history when API is ready
pkg/commands/logs.go:	// Resolve gateway
pkg/commands/logs.go:	if args.Gateway == "" {
pkg/commands/logs.go:		args.Gateway = ctx.Getenv("SCW_GATEWAY")
pkg/commands/logs.go:	}
pkg/commands/logs.go:	var gateway string
pkg/commands/logs.go:	if args.Gateway == serverID || args.Gateway == args.Server {
pkg/commands/logs.go:		gateway = ""
pkg/commands/logs.go:	} else {
pkg/commands/logs.go:		gateway, err = api.ResolveGateway(ctx.API, args.Gateway)
pkg/commands/logs.go:		if err != nil {
pkg/commands/logs.go:			return fmt.Errorf("cannot resolve Gateway '%s': %v", args.Gateway, err)
pkg/commands/logs.go:		}
pkg/commands/logs.go:	}
pkg/commands/logs.go:	command := []string{"dmesg"}
pkg/commands/logs.go:	err = utils.SSHExec(server.PublicAddress.IP, server.PrivateIP, command, true, gateway)
pkg/commands/logs.go:	if err != nil {
pkg/commands/logs.go:		return fmt.Errorf("command execution failed: %v", err)
pkg/commands/logs.go:	}
pkg/commands/logs.go:	return nil
pkg/commands/logs.go:}
pkg/commands/port.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/port.go:// Use of this source code is governed by a MIT-style
pkg/commands/port.go:// license that can be found in the LICENSE.md file.
pkg/commands/port.go:package commands
pkg/commands/port.go:import (
pkg/commands/port.go:	"fmt"
pkg/commands/port.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/port.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/port.go:)
pkg/commands/port.go:// PortArgs are flags for the `RunPort` function
pkg/commands/port.go:type PortArgs struct {
pkg/commands/port.go:	Gateway string
pkg/commands/port.go:	Server  string
pkg/commands/port.go:}
pkg/commands/port.go:// RunPort is the handler for 'scw port'
pkg/commands/port.go:func RunPort(ctx CommandContext, args PortArgs) error {
pkg/commands/port.go:	serverID, err := ctx.API.GetServerID(args.Server)
pkg/commands/port.go:	if err != nil {
pkg/commands/port.go:		return err
pkg/commands/port.go:	}
pkg/commands/port.go:	server, err := ctx.API.GetServer(serverID)
pkg/commands/port.go:	if err != nil {
pkg/commands/port.go:		return fmt.Errorf("failed to get server information for %s: %v", serverID, err)
pkg/commands/port.go:	}
pkg/commands/port.go:	// Resolve gateway
pkg/commands/port.go:	if args.Gateway == "" {
pkg/commands/port.go:		args.Gateway = ctx.Getenv("SCW_GATEWAY")
pkg/commands/port.go:	}
pkg/commands/port.go:	var gateway string
pkg/commands/port.go:	if args.Gateway == serverID || args.Gateway == args.Server {
pkg/commands/port.go:		gateway = ""
pkg/commands/port.go:	} else {
pkg/commands/port.go:		gateway, err = api.ResolveGateway(ctx.API, args.Gateway)
pkg/commands/port.go:		if err != nil {
pkg/commands/port.go:			return fmt.Errorf("cannot resolve Gateway '%s': %v", args.Gateway, err)
pkg/commands/port.go:		}
pkg/commands/port.go:	}
pkg/commands/port.go:	command := []string{"netstat -lutn 2>/dev/null | grep LISTEN"}
pkg/commands/port.go:	err = utils.SSHExec(server.PublicAddress.IP, server.PrivateIP, command, true, gateway)
pkg/commands/port.go:	if err != nil {
pkg/commands/port.go:		return fmt.Errorf("command execution failed: %v", err)
pkg/commands/port.go:	}
pkg/commands/port.go:	return nil
pkg/commands/port.go:}
pkg/commands/ps.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/ps.go:// Use of this source code is governed by a MIT-style
pkg/commands/ps.go:// license that can be found in the LICENSE.md file.
pkg/commands/ps.go:package commands
pkg/commands/ps.go:import (
pkg/commands/ps.go:	"fmt"
pkg/commands/ps.go:	"strings"
pkg/commands/ps.go:	"text/tabwriter"
pkg/commands/ps.go:	"time"
pkg/commands/ps.go:	"github.com/Sirupsen/logrus"
pkg/commands/ps.go:	"github.com/docker/go-units"
pkg/commands/ps.go:	"github.com/renstrom/fuzzysearch/fuzzy"
pkg/commands/ps.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/ps.go:)
pkg/commands/ps.go:// PsArgs are flags for the `RunPs` function
pkg/commands/ps.go:type PsArgs struct {
pkg/commands/ps.go:	All     bool
pkg/commands/ps.go:	Latest  bool
pkg/commands/ps.go:	NLast   int
pkg/commands/ps.go:	NoTrunc bool
pkg/commands/ps.go:	Quiet   bool
pkg/commands/ps.go:	Filters map[string]string
pkg/commands/ps.go:}
pkg/commands/ps.go:// RunPs is the handler for 'scw ps'
pkg/commands/ps.go:func RunPs(ctx CommandContext, args PsArgs) error {
pkg/commands/ps.go:	limit := args.NLast
pkg/commands/ps.go:	if args.Latest {
pkg/commands/ps.go:		limit = 1
pkg/commands/ps.go:	}
pkg/commands/ps.go:	filterState := args.Filters["state"]
pkg/commands/ps.go:	// FIXME: if filter state is defined, try to optimize the query
pkg/commands/ps.go:	all := args.All || args.NLast > 0 || args.Latest || filterState != ""
pkg/commands/ps.go:	servers, err := ctx.API.GetServers(all, limit)
pkg/commands/ps.go:	if err != nil {
pkg/commands/ps.go:		return fmt.Errorf("Unable to fetch servers from the Scaleway API: %v", err)
pkg/commands/ps.go:	}
pkg/commands/ps.go:	for key, value := range args.Filters {
pkg/commands/ps.go:		switch key {
pkg/commands/ps.go:		case "state", "name", "tags", "image", "ip":
pkg/commands/ps.go:			continue
pkg/commands/ps.go:		default:
pkg/commands/ps.go:			logrus.Warnf("Unknown filter: '%s=%s'", key, value)
pkg/commands/ps.go:		}
pkg/commands/ps.go:	}
pkg/commands/ps.go:	w := tabwriter.NewWriter(ctx.Stdout, 20, 1, 3, ' ', 0)
pkg/commands/ps.go:	defer w.Flush()
pkg/commands/ps.go:	if !args.Quiet {
pkg/commands/ps.go:		fmt.Fprintf(w, "SERVER ID\tIMAGE\tCOMMAND\tCREATED\tSTATUS\tPORTS\tNAME\n")
pkg/commands/ps.go:	}
pkg/commands/ps.go:	for _, server := range *servers {
pkg/commands/ps.go:		// filtering
pkg/commands/ps.go:		for key, value := range args.Filters {
pkg/commands/ps.go:			switch key {
pkg/commands/ps.go:			case "state":
pkg/commands/ps.go:				if value != server.State {
pkg/commands/ps.go:					goto skipServer
pkg/commands/ps.go:				}
pkg/commands/ps.go:			case "name":
pkg/commands/ps.go:				if fuzzy.RankMatch(strings.ToLower(value), strings.ToLower(server.Name)) == -1 {
pkg/commands/ps.go:					goto skipServer
pkg/commands/ps.go:				}
pkg/commands/ps.go:			case "tags":
pkg/commands/ps.go:				found := false
pkg/commands/ps.go:				for _, tag := range server.Tags {
pkg/commands/ps.go:					if tag == value {
pkg/commands/ps.go:						found = true
pkg/commands/ps.go:						continue
pkg/commands/ps.go:					}
pkg/commands/ps.go:				}
pkg/commands/ps.go:				if !found {
pkg/commands/ps.go:					goto skipServer
pkg/commands/ps.go:				}
pkg/commands/ps.go:			case "image":
pkg/commands/ps.go:				imageID, err := ctx.API.GetImageID(value)
pkg/commands/ps.go:				if err != nil {
pkg/commands/ps.go:					goto skipServer
pkg/commands/ps.go:				}
pkg/commands/ps.go:				if imageID.Identifier != server.Image.Identifier {
pkg/commands/ps.go:					goto skipServer
pkg/commands/ps.go:				}
pkg/commands/ps.go:			case "ip":
pkg/commands/ps.go:				if value != server.PublicAddress.IP {
pkg/commands/ps.go:					goto skipServer
pkg/commands/ps.go:				}
pkg/commands/ps.go:			}
pkg/commands/ps.go:		}
pkg/commands/ps.go:		if args.Quiet {
pkg/commands/ps.go:			fmt.Fprintf(w, "%s\n", server.Identifier)
pkg/commands/ps.go:		} else {
pkg/commands/ps.go:			shortID := utils.TruncIf(server.Identifier, 8, !args.NoTrunc)
pkg/commands/ps.go:			shortImage := utils.TruncIf(utils.Wordify(server.Image.Name), 25, !args.NoTrunc)
pkg/commands/ps.go:			shortName := utils.TruncIf(utils.Wordify(server.Name), 25, !args.NoTrunc)
pkg/commands/ps.go:			creationTime, _ := time.Parse("2006-01-02T15:04:05.000000+00:00", server.CreationDate)
pkg/commands/ps.go:			shortCreationDate := units.HumanDuration(time.Now().UTC().Sub(creationTime))
pkg/commands/ps.go:			port := server.PublicAddress.IP
pkg/commands/ps.go:			fmt.Fprintf(w, "%s\t%s\t\t%s\t%s\t%s\t%s\n", shortID, shortImage, shortCreationDate, server.State, port, shortName)
pkg/commands/ps.go:		}
pkg/commands/ps.go:	skipServer:
pkg/commands/ps.go:		continue
pkg/commands/ps.go:	}
pkg/commands/ps.go:	return nil
pkg/commands/ps.go:}
pkg/commands/rename.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/rename.go:// Use of this source code is governed by a MIT-style
pkg/commands/rename.go:// license that can be found in the LICENSE.md file.
pkg/commands/rename.go:package commands
pkg/commands/rename.go:import (
pkg/commands/rename.go:	"fmt"
pkg/commands/rename.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/rename.go:)
pkg/commands/rename.go:// RenameArgs are flags for the `RunRename` function
pkg/commands/rename.go:type RenameArgs struct {
pkg/commands/rename.go:	Server  string
pkg/commands/rename.go:	NewName string
pkg/commands/rename.go:}
pkg/commands/rename.go:// RunRename is the handler for 'scw rename'
pkg/commands/rename.go:func RunRename(ctx CommandContext, args RenameArgs) error {
pkg/commands/rename.go:	serverID, err := ctx.API.GetServerID(args.Server)
pkg/commands/rename.go:	if err != nil {
pkg/commands/rename.go:		return err
pkg/commands/rename.go:	}
pkg/commands/rename.go:	var server api.ScalewayServerPatchDefinition
pkg/commands/rename.go:	server.Name = &args.NewName
pkg/commands/rename.go:	if err = ctx.API.PatchServer(serverID, server); err != nil {
pkg/commands/rename.go:		return fmt.Errorf("cannot rename server: %v", err)
pkg/commands/rename.go:	}
pkg/commands/rename.go:	// FIXME region, arch, owner, title
pkg/commands/rename.go:	ctx.API.Cache.InsertServer(serverID, "fr-1", *server.Arch, *server.Organization, *server.Name)
pkg/commands/rename.go:	return nil
pkg/commands/rename.go:}
pkg/commands/restart.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/restart.go:// Use of this source code is governed by a MIT-style
pkg/commands/restart.go:// license that can be found in the LICENSE.md file.
pkg/commands/restart.go:package commands
pkg/commands/restart.go:import (
pkg/commands/restart.go:	"fmt"
pkg/commands/restart.go:	"sync"
pkg/commands/restart.go:	"time"
pkg/commands/restart.go:	"github.com/Sirupsen/logrus"
pkg/commands/restart.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/restart.go:)
pkg/commands/restart.go:// RestartArgs are flags for the `RunRestart` function
pkg/commands/restart.go:type RestartArgs struct {
pkg/commands/restart.go:	Wait    bool
pkg/commands/restart.go:	Timeout float64
pkg/commands/restart.go:	Servers []string
pkg/commands/restart.go:}
pkg/commands/restart.go:// restartIdentifiers resolves server IDs, restarts, and waits for them to be ready (-w)
pkg/commands/restart.go:func restartIdentifiers(ctx CommandContext, wait bool, servers []string, cr chan string) {
pkg/commands/restart.go:	var wg sync.WaitGroup
pkg/commands/restart.go:	for _, needle := range servers {
pkg/commands/restart.go:		wg.Add(1)
pkg/commands/restart.go:		go func(needle string) {
pkg/commands/restart.go:			res := ""
pkg/commands/restart.go:			defer wg.Done()
pkg/commands/restart.go:			server, err := ctx.API.GetServerID(needle)
pkg/commands/restart.go:			if err != nil {
pkg/commands/restart.go:				logrus.Error(err)
pkg/commands/restart.go:			} else {
pkg/commands/restart.go:				res = server
pkg/commands/restart.go:				err := ctx.API.PostServerAction(server, "reboot")
pkg/commands/restart.go:				if err != nil {
pkg/commands/restart.go:					if err.Error() != "server is being stopped or rebooted" {
pkg/commands/restart.go:						logrus.Errorf("failed to restart server %s: %s", server, err)
pkg/commands/restart.go:					}
pkg/commands/restart.go:					res = ""
pkg/commands/restart.go:				} else {
pkg/commands/restart.go:					if wait {
pkg/commands/restart.go:						// FIXME: handle gateway
pkg/commands/restart.go:						api.WaitForServerReady(ctx.API, server, "")
pkg/commands/restart.go:					}
pkg/commands/restart.go:				}
pkg/commands/restart.go:			}
pkg/commands/restart.go:			cr <- res
pkg/commands/restart.go:		}(needle)
pkg/commands/restart.go:	}
pkg/commands/restart.go:	wg.Wait()
pkg/commands/restart.go:	close(cr)
pkg/commands/restart.go:}
pkg/commands/restart.go:// RunRestart is the handler for 'scw restart'
pkg/commands/restart.go:func RunRestart(ctx CommandContext, args RestartArgs) error {
pkg/commands/restart.go:	if args.Wait && args.Timeout > 0 {
pkg/commands/restart.go:		go func() {
pkg/commands/restart.go:			time.Sleep(time.Duration(args.Timeout*1000) * time.Millisecond)
pkg/commands/restart.go:			// FIXME: avoid use of fatalf
pkg/commands/restart.go:			logrus.Fatalf("Operation timed out")
pkg/commands/restart.go:		}()
pkg/commands/restart.go:	}
pkg/commands/restart.go:	cr := make(chan string)
pkg/commands/restart.go:	go restartIdentifiers(ctx, args.Wait, args.Servers, cr)
pkg/commands/restart.go:	done := false
pkg/commands/restart.go:	hasError := false
pkg/commands/restart.go:	for !done {
pkg/commands/restart.go:		select {
pkg/commands/restart.go:		case uuid, more := <-cr:
pkg/commands/restart.go:			if !more {
pkg/commands/restart.go:				done = true
pkg/commands/restart.go:				break
pkg/commands/restart.go:			}
pkg/commands/restart.go:			if len(uuid) > 0 {
pkg/commands/restart.go:				fmt.Fprintln(ctx.Stdout, uuid)
pkg/commands/restart.go:			} else {
pkg/commands/restart.go:				hasError = true
pkg/commands/restart.go:			}
pkg/commands/restart.go:		}
pkg/commands/restart.go:	}
pkg/commands/restart.go:	if hasError {
pkg/commands/restart.go:		return fmt.Errorf("at least 1 server failed to restart")
pkg/commands/restart.go:	}
pkg/commands/restart.go:	return nil
pkg/commands/restart.go:}
pkg/commands/rm.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/rm.go:// Use of this source code is governed by a MIT-style
pkg/commands/rm.go:// license that can be found in the LICENSE.md file.
pkg/commands/rm.go:package commands
pkg/commands/rm.go:import (
pkg/commands/rm.go:	"fmt"
pkg/commands/rm.go:	"github.com/Sirupsen/logrus"
pkg/commands/rm.go:)
pkg/commands/rm.go:// RmArgs are flags for the `RunRm` function
pkg/commands/rm.go:type RmArgs struct {
pkg/commands/rm.go:	Servers []string
pkg/commands/rm.go:	Force   bool
pkg/commands/rm.go:}
pkg/commands/rm.go:// RunRm is the handler for 'scw rm'
pkg/commands/rm.go:func RunRm(ctx CommandContext, args RmArgs) error {
pkg/commands/rm.go:	hasError := false
pkg/commands/rm.go:	for _, needle := range args.Servers {
pkg/commands/rm.go:		server, err := ctx.API.GetServerID(needle)
pkg/commands/rm.go:		if err != nil {
pkg/commands/rm.go:			return err
pkg/commands/rm.go:		}
pkg/commands/rm.go:		if args.Force {
pkg/commands/rm.go:			err = ctx.API.DeleteServerSafe(server)
pkg/commands/rm.go:		} else {
pkg/commands/rm.go:			err = ctx.API.DeleteServer(server)
pkg/commands/rm.go:		}
pkg/commands/rm.go:		if err != nil {
pkg/commands/rm.go:			logrus.Errorf("failed to delete server %s: %s", server, err)
pkg/commands/rm.go:			hasError = true
pkg/commands/rm.go:		} else {
pkg/commands/rm.go:			fmt.Fprintln(ctx.Stdout, needle)
pkg/commands/rm.go:		}
pkg/commands/rm.go:	}
pkg/commands/rm.go:	if hasError {
pkg/commands/rm.go:		return fmt.Errorf("at least 1 server failed to be removed")
pkg/commands/rm.go:	}
pkg/commands/rm.go:	return nil
pkg/commands/rm.go:}
pkg/commands/rmi.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/rmi.go:// Use of this source code is governed by a MIT-style
pkg/commands/rmi.go:// license that can be found in the LICENSE.md file.
pkg/commands/rmi.go:package commands
pkg/commands/rmi.go:import (
pkg/commands/rmi.go:	"fmt"
pkg/commands/rmi.go:	"github.com/Sirupsen/logrus"
pkg/commands/rmi.go:)
pkg/commands/rmi.go:// RmiArgs are flags for the `RunRmi` function
pkg/commands/rmi.go:type RmiArgs struct {
pkg/commands/rmi.go:	Identifier []string // images/volumes/snapshots
pkg/commands/rmi.go:}
pkg/commands/rmi.go:// RunRmi is the handler for 'scw rmi'
pkg/commands/rmi.go:func RunRmi(ctx CommandContext, args RmiArgs) error {
pkg/commands/rmi.go:	hasError := false
pkg/commands/rmi.go:	for _, needle := range args.Identifier {
pkg/commands/rmi.go:		if image, err := ctx.API.GetImageID(needle); err == nil {
pkg/commands/rmi.go:			if err = ctx.API.DeleteImage(image.Identifier); err != nil {
pkg/commands/rmi.go:				logrus.Errorf("failed to delete image %s: %s", image.Identifier, err)
pkg/commands/rmi.go:				hasError = true
pkg/commands/rmi.go:			} else {
pkg/commands/rmi.go:				fmt.Fprintln(ctx.Stdout, needle)
pkg/commands/rmi.go:			}
pkg/commands/rmi.go:			continue
pkg/commands/rmi.go:		}
pkg/commands/rmi.go:		if snapshotID, err := ctx.API.GetSnapshotID(needle); err == nil {
pkg/commands/rmi.go:			if err = ctx.API.DeleteSnapshot(snapshotID); err != nil {
pkg/commands/rmi.go:				logrus.Errorf("failed to delete snapshot %s: %s", snapshotID, err)
pkg/commands/rmi.go:				hasError = true
pkg/commands/rmi.go:			} else {
pkg/commands/rmi.go:				fmt.Fprintln(ctx.Stdout, needle)
pkg/commands/rmi.go:			}
pkg/commands/rmi.go:			continue
pkg/commands/rmi.go:		}
pkg/commands/rmi.go:		if volumeID, err := ctx.API.GetVolumeID(needle); err == nil {
pkg/commands/rmi.go:			if err = ctx.API.DeleteVolume(volumeID); err != nil {
pkg/commands/rmi.go:				logrus.Errorf("failed to delete volume %s: %s", volumeID, err)
pkg/commands/rmi.go:				hasError = true
pkg/commands/rmi.go:			} else {
pkg/commands/rmi.go:				fmt.Fprintln(ctx.Stdout, needle)
pkg/commands/rmi.go:			}
pkg/commands/rmi.go:			continue
pkg/commands/rmi.go:		}
pkg/commands/rmi.go:		hasError = true
pkg/commands/rmi.go:	}
pkg/commands/rmi.go:	if hasError {
pkg/commands/rmi.go:		return fmt.Errorf("at least 1 image/snapshot/volume failed to be removed")
pkg/commands/rmi.go:	}
pkg/commands/rmi.go:	return nil
pkg/commands/rmi.go:}
pkg/commands/run.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/run.go:// Use of this source code is governed by a MIT-style
pkg/commands/run.go:// license that can be found in the LICENSE.md file.
pkg/commands/run.go:package commands
pkg/commands/run.go:import (
pkg/commands/run.go:	"fmt"
pkg/commands/run.go:	"io/ioutil"
pkg/commands/run.go:	"os"
pkg/commands/run.go:	"path/filepath"
pkg/commands/run.go:	"strings"
pkg/commands/run.go:	"time"
pkg/commands/run.go:	"github.com/Sirupsen/logrus"
pkg/commands/run.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/run.go:	"github.com/scaleway/scaleway-cli/pkg/config"
pkg/commands/run.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/run.go:)
pkg/commands/run.go:// RunArgs are flags for the `Run` function
pkg/commands/run.go:type RunArgs struct {
pkg/commands/run.go:	Attach     bool
pkg/commands/run.go:	Bootscript string
pkg/commands/run.go:	Command    []string
pkg/commands/run.go:	Detach     bool
pkg/commands/run.go:	Gateway    string
pkg/commands/run.go:	Image      string
pkg/commands/run.go:	Name       string
pkg/commands/run.go:	IP         string
pkg/commands/run.go:	Tags       []string
pkg/commands/run.go:	Volumes    []string
pkg/commands/run.go:	AutoRemove bool
pkg/commands/run.go:	TmpSSHKey  bool
pkg/commands/run.go:	ShowBoot   bool
pkg/commands/run.go:	Timeout    int64
pkg/commands/run.go:	Userdata   string
pkg/commands/run.go:	// DynamicIPRequired
pkg/commands/run.go:	// Timeout
pkg/commands/run.go:}
pkg/commands/run.go:// AddSSHKeyToTags adds the ssh key in the tags
pkg/commands/run.go:func AddSSHKeyToTags(ctx CommandContext, tags *[]string, image string) error {
pkg/commands/run.go:	home, err := config.GetHomeDir()
pkg/commands/run.go:	if err != nil {
pkg/commands/run.go:		return fmt.Errorf("unable to find your home %v", err)
pkg/commands/run.go:	}
pkg/commands/run.go:	idRsa := filepath.Join(home, ".ssh", "id_rsa")
pkg/commands/run.go:	if _, err := os.Stat(idRsa); err != nil {
pkg/commands/run.go:		if os.IsNotExist(err) {
pkg/commands/run.go:			logrus.Warnln("Unable to find your ~/.ssh/id_rsa")
pkg/commands/run.go:			logrus.Warnln("Run 'ssh-keygen -t rsa'")
pkg/commands/run.go:			return nil
pkg/commands/run.go:		}
pkg/commands/run.go:	}
pkg/commands/run.go:	idRsa = strings.Join([]string{idRsa, ".pub"}, "")
pkg/commands/run.go:	data, err := ioutil.ReadFile(idRsa)
pkg/commands/run.go:	if err != nil {
pkg/commands/run.go:		return fmt.Errorf("failed to read %v", err)
pkg/commands/run.go:	}
pkg/commands/run.go:	data[7] = '_'
pkg/commands/run.go:	for i := range data {
pkg/commands/run.go:		if data[i] == ' ' {
pkg/commands/run.go:			data = data[:i]
pkg/commands/run.go:			break
pkg/commands/run.go:		}
pkg/commands/run.go:	}
pkg/commands/run.go:	*tags = append(*tags, strings.Join([]string{"AUTHORIZED_KEY", string(data[:len(data)])}, "="))
pkg/commands/run.go:	return nil
pkg/commands/run.go:}
pkg/commands/run.go:func addUserData(ctx CommandContext, userdatas []string, serverID string) {
pkg/commands/run.go:	for i := range userdatas {
pkg/commands/run.go:		keyValue := strings.Split(userdatas[i], "=")
pkg/commands/run.go:		if len(keyValue) != 2 {
pkg/commands/run.go:			logrus.Warn("Bad format: ", userdatas[i])
pkg/commands/run.go:			continue
pkg/commands/run.go:		}
pkg/commands/run.go:		var data []byte
pkg/commands/run.go:		var err error
pkg/commands/run.go:		// Set userdata
pkg/commands/run.go:		if keyValue[1][0] == '@' {
pkg/commands/run.go:			data, err = ioutil.ReadFile(keyValue[1][1:])
pkg/commands/run.go:			if err != nil {
pkg/commands/run.go:				logrus.Warn("ReadFile: ", err)
pkg/commands/run.go:				continue
pkg/commands/run.go:			}
pkg/commands/run.go:		} else {
pkg/commands/run.go:			data = []byte(keyValue[1])
pkg/commands/run.go:		}
pkg/commands/run.go:		if err = ctx.API.PatchUserdata(serverID, keyValue[0], data); err != nil {
pkg/commands/run.go:			logrus.Warn("PatchUserdata: ", err)
pkg/commands/run.go:			continue
pkg/commands/run.go:		}
pkg/commands/run.go:	}
pkg/commands/run.go:}
pkg/commands/run.go:func runShowBoot(ctx CommandContext, args RunArgs, serverID string, closeTimeout chan struct{}, timeoutExit chan struct{}) error {
pkg/commands/run.go:	// Attach to server serial
pkg/commands/run.go:	logrus.Info("Attaching to server console ...")
pkg/commands/run.go:	gottycli, done, err := utils.AttachToSerial(serverID, ctx.API.Token)
pkg/commands/run.go:	if err != nil {
pkg/commands/run.go:		close(closeTimeout)
pkg/commands/run.go:		return fmt.Errorf("cannot attach to server serial: %v", err)
pkg/commands/run.go:	}
pkg/commands/run.go:	utils.Quiet(true)
pkg/commands/run.go:	notif, gateway, err := waitSSHConnection(ctx, args, serverID)
pkg/commands/run.go:	if err != nil {
pkg/commands/run.go:		close(closeTimeout)
pkg/commands/run.go:		gottycli.ExitLoop()
pkg/commands/run.go:		<-done
pkg/commands/run.go:		return err
pkg/commands/run.go:	}
pkg/commands/run.go:	select {
pkg/commands/run.go:	case <-timeoutExit:
pkg/commands/run.go:		gottycli.ExitLoop()
pkg/commands/run.go:		<-done
pkg/commands/run.go:		utils.Quiet(false)
pkg/commands/run.go:		return fmt.Errorf("Operation timed out")
pkg/commands/run.go:	case sshConnection := <-notif:
pkg/commands/run.go:		close(closeTimeout)
pkg/commands/run.go:		gottycli.ExitLoop()
pkg/commands/run.go:		<-done
pkg/commands/run.go:		utils.Quiet(false)
pkg/commands/run.go:		if sshConnection.err != nil {
pkg/commands/run.go:			return sshConnection.err
pkg/commands/run.go:		}
pkg/commands/run.go:		if fingerprints := ctx.API.GetSSHFingerprintFromServer(serverID); len(fingerprints) > 0 {
pkg/commands/run.go:			for i := range fingerprints {
pkg/commands/run.go:				fmt.Fprintf(ctx.Stdout, "%s\n", fingerprints[i])
pkg/commands/run.go:			}
pkg/commands/run.go:		}
pkg/commands/run.go:		server := sshConnection.server
pkg/commands/run.go:		logrus.Info("Connecting to server ...")
pkg/commands/run.go:		if err = utils.SSHExec(server.PublicAddress.IP, server.PrivateIP, []string{}, false, gateway); err != nil {
pkg/commands/run.go:			return fmt.Errorf("Connection to server failed: %v", err)
pkg/commands/run.go:		}
pkg/commands/run.go:	}
pkg/commands/run.go:	return nil
pkg/commands/run.go:}
pkg/commands/run.go:// Run is the handler for 'scw run'
pkg/commands/run.go:func Run(ctx CommandContext, args RunArgs) error {
pkg/commands/run.go:	if args.Gateway == "" {
pkg/commands/run.go:		args.Gateway = ctx.Getenv("SCW_GATEWAY")
pkg/commands/run.go:	}
pkg/commands/run.go:	if args.TmpSSHKey {
pkg/commands/run.go:		err := AddSSHKeyToTags(ctx, &args.Tags, args.Image)
pkg/commands/run.go:		if err != nil {
pkg/commands/run.go:			return err
pkg/commands/run.go:		}
pkg/commands/run.go:	}
pkg/commands/run.go:	env := strings.Join(args.Tags, " ")
pkg/commands/run.go:	volume := strings.Join(args.Volumes, " ")
pkg/commands/run.go:	// create IMAGE
pkg/commands/run.go:	logrus.Info("Server creation ...")
pkg/commands/run.go:	serverID, err := api.CreateServer(ctx.API, &api.ConfigCreateServer{
pkg/commands/run.go:		ImageName:         args.Image,
pkg/commands/run.go:		Name:              args.Name,
pkg/commands/run.go:		Bootscript:        args.Bootscript,
pkg/commands/run.go:		Env:               env,
pkg/commands/run.go:		AdditionalVolumes: volume,
pkg/commands/run.go:		DynamicIPRequired: args.Gateway == "",
pkg/commands/run.go:		IP:                args.IP,
pkg/commands/run.go:	})
pkg/commands/run.go:	if err != nil {
pkg/commands/run.go:		return fmt.Errorf("failed to create server: %v", err)
pkg/commands/run.go:	}
pkg/commands/run.go:	logrus.Infof("Server created: %s", serverID)
pkg/commands/run.go:	if args.AutoRemove {
pkg/commands/run.go:		defer ctx.API.DeleteServerSafe(serverID)
pkg/commands/run.go:	}
pkg/commands/run.go:	// start SERVER
pkg/commands/run.go:	logrus.Info("Server start requested ...")
pkg/commands/run.go:	if err = api.StartServer(ctx.API, serverID, false); err != nil {
pkg/commands/run.go:		return fmt.Errorf("failed to start server %s: %v", serverID, err)
pkg/commands/run.go:	}
pkg/commands/run.go:	logrus.Info("Server is starting, this may take up to a minute ...")
pkg/commands/run.go:	if args.Userdata != "" {
pkg/commands/run.go:		addUserData(ctx, strings.Split(args.Userdata, " "), serverID)
pkg/commands/run.go:	}
pkg/commands/run.go:	// Sync cache on disk
pkg/commands/run.go:	ctx.API.Sync()
pkg/commands/run.go:	if args.Detach {
pkg/commands/run.go:		fmt.Fprintln(ctx.Stdout, serverID)
pkg/commands/run.go:		return nil
pkg/commands/run.go:	}
pkg/commands/run.go:	closeTimeout := make(chan struct{})
pkg/commands/run.go:	timeoutExit := make(chan struct{})
pkg/commands/run.go:	if args.Timeout > 0 {
pkg/commands/run.go:		go func() {
pkg/commands/run.go:			select {
pkg/commands/run.go:			case <-time.After(time.Duration(args.Timeout) * time.Second):
pkg/commands/run.go:				close(timeoutExit)
pkg/commands/run.go:			case <-closeTimeout:
pkg/commands/run.go:				break
pkg/commands/run.go:			}
pkg/commands/run.go:		}()
pkg/commands/run.go:	}
pkg/commands/run.go:	if args.ShowBoot {
pkg/commands/run.go:		return runShowBoot(ctx, args, serverID, closeTimeout, timeoutExit)
pkg/commands/run.go:	} else if args.Attach {
pkg/commands/run.go:		// Attach to server serial
pkg/commands/run.go:		logrus.Info("Attaching to server console ...")
pkg/commands/run.go:		gottycli, done, err := utils.AttachToSerial(serverID, ctx.API.Token)
pkg/commands/run.go:		close(closeTimeout)
pkg/commands/run.go:		if err != nil {
pkg/commands/run.go:			return fmt.Errorf("cannot attach to server serial: %v", err)
pkg/commands/run.go:		}
pkg/commands/run.go:		<-done
pkg/commands/run.go:		gottycli.Close()
pkg/commands/run.go:	} else {
pkg/commands/run.go:		notif, gateway, err := waitSSHConnection(ctx, args, serverID)
pkg/commands/run.go:		if err != nil {
pkg/commands/run.go:			close(closeTimeout)
pkg/commands/run.go:			return err
pkg/commands/run.go:		}
pkg/commands/run.go:		select {
pkg/commands/run.go:		case <-timeoutExit:
pkg/commands/run.go:			return fmt.Errorf("Operation timed out")
pkg/commands/run.go:		case sshConnection := <-notif:
pkg/commands/run.go:			close(closeTimeout)
pkg/commands/run.go:			if sshConnection.err != nil {
pkg/commands/run.go:				return sshConnection.err
pkg/commands/run.go:			}
pkg/commands/run.go:			if fingerprints := ctx.API.GetSSHFingerprintFromServer(serverID); len(fingerprints) > 0 {
pkg/commands/run.go:				for i := range fingerprints {
pkg/commands/run.go:					fmt.Fprintf(ctx.Stdout, "%s\n", fingerprints[i])
pkg/commands/run.go:				}
pkg/commands/run.go:			}
pkg/commands/run.go:			server := sshConnection.server
pkg/commands/run.go:			// exec -w SERVER COMMAND ARGS...
pkg/commands/run.go:			if len(args.Command) < 1 {
pkg/commands/run.go:				logrus.Info("Connecting to server ...")
pkg/commands/run.go:				if err = utils.SSHExec(server.PublicAddress.IP, server.PrivateIP, []string{}, false, gateway); err != nil {
pkg/commands/run.go:					return fmt.Errorf("Connection to server failed: %v", err)
pkg/commands/run.go:				}
pkg/commands/run.go:			} else {
pkg/commands/run.go:				logrus.Infof("Executing command: %s ...", args.Command)
pkg/commands/run.go:				if err = utils.SSHExec(server.PublicAddress.IP, server.PrivateIP, args.Command, false, gateway); err != nil {
pkg/commands/run.go:					return fmt.Errorf("command execution failed: %v", err)
pkg/commands/run.go:				}
pkg/commands/run.go:				logrus.Info("Command successfuly executed")
pkg/commands/run.go:			}
pkg/commands/run.go:		}
pkg/commands/run.go:	}
pkg/commands/run.go:	return nil
pkg/commands/run.go:}
pkg/commands/run.go:type notifSSHConnection struct {
pkg/commands/run.go:	server *api.ScalewayServer
pkg/commands/run.go:	err    error
pkg/commands/run.go:}
pkg/commands/run.go:func waitSSHConnection(ctx CommandContext, args RunArgs, serverID string) (chan notifSSHConnection, string, error) {
pkg/commands/run.go:	notif := make(chan notifSSHConnection)
pkg/commands/run.go:	// Resolve gateway
pkg/commands/run.go:	gateway, err := api.ResolveGateway(ctx.API, args.Gateway)
pkg/commands/run.go:	if err != nil {
pkg/commands/run.go:		return nil, "", fmt.Errorf("cannot resolve Gateway '%s': %v", args.Gateway, err)
pkg/commands/run.go:	}
pkg/commands/run.go:	// waiting for server to be ready
pkg/commands/run.go:	logrus.Debug("Waiting for server to be ready")
pkg/commands/run.go:	// We wait for 30 seconds, which is the minimal amount of time needed by a server to boot
pkg/commands/run.go:	go func() {
pkg/commands/run.go:		server, err := api.WaitForServerReady(ctx.API, serverID, gateway)
pkg/commands/run.go:		if err != nil {
pkg/commands/run.go:			notif <- notifSSHConnection{
pkg/commands/run.go:				err: fmt.Errorf("cannot get access to server %s: %v", serverID, err),
pkg/commands/run.go:			}
pkg/commands/run.go:			return
pkg/commands/run.go:		}
pkg/commands/run.go:		logrus.Debugf("SSH server is available: %s:22", server.PublicAddress.IP)
pkg/commands/run.go:		logrus.Info("Server is ready !")
pkg/commands/run.go:		notif <- notifSSHConnection{
pkg/commands/run.go:			server: server,
pkg/commands/run.go:		}
pkg/commands/run.go:	}()
pkg/commands/run.go:	return notif, gateway, nil
pkg/commands/run.go:}
pkg/commands/run_test.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/run_test.go:// Use of this source code is governed by a MIT-style
pkg/commands/run_test.go:// license that can be found in the LICENSE.md file.
pkg/commands/run_test.go:package commands
pkg/commands/run_test.go:func ExampleRun() {
pkg/commands/run_test.go:	ctx := testCommandContext()
pkg/commands/run_test.go:	args := RunArgs{
pkg/commands/run_test.go:		Image: "ubuntu-trusuty",
pkg/commands/run_test.go:	}
pkg/commands/run_test.go:	Run(ctx, args)
pkg/commands/run_test.go:}
pkg/commands/run_test.go:func ExampleRun_complex() {
pkg/commands/run_test.go:	ctx := testCommandContext()
pkg/commands/run_test.go:	args := RunArgs{
pkg/commands/run_test.go:		Attach:     false,
pkg/commands/run_test.go:		Bootscript: "rescue",
pkg/commands/run_test.go:		Command:    []string{"ls", "-la"},
pkg/commands/run_test.go:		Detach:     false,
pkg/commands/run_test.go:		Gateway:    "my-gateway",
pkg/commands/run_test.go:		Image:      "ubuntu-trusty",
pkg/commands/run_test.go:		Name:       "my-test-server",
pkg/commands/run_test.go:		Tags:       []string{"testing", "fake"},
pkg/commands/run_test.go:		Volumes:    []string{"50G", "1G"},
pkg/commands/run_test.go:	}
pkg/commands/run_test.go:	Run(ctx, args)
pkg/commands/run_test.go:}
pkg/commands/search.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/search.go:// Use of this source code is governed by a MIT-style
pkg/commands/search.go:// license that can be found in the LICENSE.md file.
pkg/commands/search.go:package commands
pkg/commands/search.go:import (
pkg/commands/search.go:	"fmt"
pkg/commands/search.go:	"strings"
pkg/commands/search.go:	"text/tabwriter"
pkg/commands/search.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/search.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/search.go:	"github.com/renstrom/fuzzysearch/fuzzy"
pkg/commands/search.go:)
pkg/commands/search.go:// SearchArgs are flags for the `RunSearch` function
pkg/commands/search.go:type SearchArgs struct {
pkg/commands/search.go:	Term    string
pkg/commands/search.go:	NoTrunc bool
pkg/commands/search.go:}
pkg/commands/search.go:// RunSearch is the handler for 'scw search'
pkg/commands/search.go:func RunSearch(ctx CommandContext, args SearchArgs) error {
pkg/commands/search.go:	// FIXME: parallelize API calls
pkg/commands/search.go:	term := strings.ToLower(args.Term)
pkg/commands/search.go:	w := tabwriter.NewWriter(ctx.Stdout, 10, 1, 3, ' ', 0)
pkg/commands/search.go:	defer w.Flush()
pkg/commands/search.go:	fmt.Fprintf(w, "NAME\tDESCRIPTION\tSTARS\tOFFICIAL\tAUTOMATED\n")
pkg/commands/search.go:	var entries = []api.ScalewayImageInterface{}
pkg/commands/search.go:	images, err := ctx.API.GetImages()
pkg/commands/search.go:	if err != nil {
pkg/commands/search.go:		return fmt.Errorf("unable to fetch images from the Scaleway API: %v", err)
pkg/commands/search.go:	}
pkg/commands/search.go:	for _, val := range *images {
pkg/commands/search.go:		if fuzzy.Match(term, strings.ToLower(val.Name)) {
pkg/commands/search.go:			entries = append(entries, api.ScalewayImageInterface{
pkg/commands/search.go:				Type:   "image",
pkg/commands/search.go:				Name:   val.Name,
pkg/commands/search.go:				Public: val.Public,
pkg/commands/search.go:			})
pkg/commands/search.go:		}
pkg/commands/search.go:	}
pkg/commands/search.go:	snapshots, err := ctx.API.GetSnapshots()
pkg/commands/search.go:	if err != nil {
pkg/commands/search.go:		return fmt.Errorf("unable to fetch snapshots from the Scaleway API: %v", err)
pkg/commands/search.go:	}
pkg/commands/search.go:	for _, val := range *snapshots {
pkg/commands/search.go:		if fuzzy.Match(term, strings.ToLower(val.Name)) {
pkg/commands/search.go:			entries = append(entries, api.ScalewayImageInterface{
pkg/commands/search.go:				Type:   "snapshot",
pkg/commands/search.go:				Name:   val.Name,
pkg/commands/search.go:				Public: false,
pkg/commands/search.go:			})
pkg/commands/search.go:		}
pkg/commands/search.go:	}
pkg/commands/search.go:	for _, image := range entries {
pkg/commands/search.go:		// name field
pkg/commands/search.go:		name := utils.TruncIf(utils.Wordify(image.Name), 45, !args.NoTrunc)
pkg/commands/search.go:		// description field
pkg/commands/search.go:		var description string
pkg/commands/search.go:		switch image.Type {
pkg/commands/search.go:		case "image":
pkg/commands/search.go:			if image.Public {
pkg/commands/search.go:				description = "public image"
pkg/commands/search.go:			} else {
pkg/commands/search.go:				description = "user image"
pkg/commands/search.go:			}
pkg/commands/search.go:		case "snapshot":
pkg/commands/search.go:			description = "user snapshot"
pkg/commands/search.go:		}
pkg/commands/search.go:		description = utils.TruncIf(utils.Wordify(description), 45, !args.NoTrunc)
pkg/commands/search.go:		// official field
pkg/commands/search.go:		var official string
pkg/commands/search.go:		if image.Public {
pkg/commands/search.go:			official = "[OK]"
pkg/commands/search.go:		} else {
pkg/commands/search.go:			official = ""
pkg/commands/search.go:		}
pkg/commands/search.go:		fmt.Fprintf(w, "%s\t%s\t%d\t%s\t%s\n", name, description, 0, official, "")
pkg/commands/search.go:	}
pkg/commands/search.go:	return nil
pkg/commands/search.go:}
pkg/commands/search_test.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/search_test.go:// Use of this source code is governed by a MIT-style
pkg/commands/search_test.go:// license that can be found in the LICENSE.md file.
pkg/commands/search_test.go:package commands
pkg/commands/search_test.go:import (
pkg/commands/search_test.go:	"strings"
pkg/commands/search_test.go:	"testing"
pkg/commands/search_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/commands/search_test.go:)
pkg/commands/search_test.go:func ExampleRunSearch() {
pkg/commands/search_test.go:	ctx := testCommandContext()
pkg/commands/search_test.go:	args := SearchArgs{}
pkg/commands/search_test.go:	RunSearch(ctx, args)
pkg/commands/search_test.go:}
pkg/commands/search_test.go:func ExampleRunSearch_complex() {
pkg/commands/search_test.go:	ctx := testCommandContext()
pkg/commands/search_test.go:	args := SearchArgs{
pkg/commands/search_test.go:		Term:    "",
pkg/commands/search_test.go:		NoTrunc: false,
pkg/commands/search_test.go:	}
pkg/commands/search_test.go:	RunSearch(ctx, args)
pkg/commands/search_test.go:}
pkg/commands/search_test.go:func TestRunSearch_realAPI(t *testing.T) {
pkg/commands/search_test.go:	ctx := RealAPIContext()
pkg/commands/search_test.go:	if ctx == nil {
pkg/commands/search_test.go:		t.Skip()
pkg/commands/search_test.go:	}
pkg/commands/search_test.go:	Convey("Testing RunSearch() on real API", t, func() {
pkg/commands/search_test.go:		Convey("ubuntu", func() {
pkg/commands/search_test.go:			args := SearchArgs{
pkg/commands/search_test.go:				Term:    "ubuntu",
pkg/commands/search_test.go:				NoTrunc: false,
pkg/commands/search_test.go:			}
pkg/commands/search_test.go:			scopedCtx, scopedStdout, scopedStderr := getScopedCtx(ctx)
pkg/commands/search_test.go:			err := RunSearch(*scopedCtx, args)
pkg/commands/search_test.go:			So(err, ShouldBeNil)
pkg/commands/search_test.go:			So(scopedStderr.String(), ShouldBeEmpty)
pkg/commands/search_test.go:			lines := strings.Split(scopedStdout.String(), "\n")
pkg/commands/search_test.go:			So(len(lines), ShouldBeGreaterThan, 0)
pkg/commands/search_test.go:			firstLine := lines[0]
pkg/commands/search_test.go:			colNames := strings.Fields(firstLine)
pkg/commands/search_test.go:			So(colNames, ShouldResemble, []string{"NAME", "DESCRIPTION", "STARS", "OFFICIAL", "AUTOMATED"})
pkg/commands/search_test.go:		})
pkg/commands/search_test.go:		// FIXME: test invalid word
pkg/commands/search_test.go:		// FIXME: test no-trunc
pkg/commands/search_test.go:	})
pkg/commands/search_test.go:}
pkg/commands/start.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/start.go:// Use of this source code is governed by a MIT-style
pkg/commands/start.go:// license that can be found in the LICENSE.md file.
pkg/commands/start.go:package commands
pkg/commands/start.go:import (
pkg/commands/start.go:	"fmt"
pkg/commands/start.go:	"time"
pkg/commands/start.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/start.go:	"github.com/Sirupsen/logrus"
pkg/commands/start.go:)
pkg/commands/start.go:// StartArgs are flags for the `RunStart` function
pkg/commands/start.go:type StartArgs struct {
pkg/commands/start.go:	Servers []string
pkg/commands/start.go:	Wait    bool
pkg/commands/start.go:	Timeout float64
pkg/commands/start.go:}
pkg/commands/start.go:// RunStart is the handler for 'scw start'
pkg/commands/start.go:func RunStart(ctx CommandContext, args StartArgs) error {
pkg/commands/start.go:	hasError := false
pkg/commands/start.go:	errChan := make(chan error)
pkg/commands/start.go:	successChan := make(chan bool)
pkg/commands/start.go:	remainingItems := len(args.Servers)
pkg/commands/start.go:	for _, needle := range args.Servers {
pkg/commands/start.go:		go api.StartServerOnce(ctx.API, needle, args.Wait, successChan, errChan)
pkg/commands/start.go:	}
pkg/commands/start.go:	if args.Timeout > 0 {
pkg/commands/start.go:		go func() {
pkg/commands/start.go:			time.Sleep(time.Duration(args.Timeout*1000) * time.Millisecond)
pkg/commands/start.go:			// FIXME: avoid use of fatalf
pkg/commands/start.go:			logrus.Fatalf("Operation timed out")
pkg/commands/start.go:		}()
pkg/commands/start.go:	}
pkg/commands/start.go:	for {
pkg/commands/start.go:		select {
pkg/commands/start.go:		case _ = <-successChan:
pkg/commands/start.go:			remainingItems--
pkg/commands/start.go:		case err := <-errChan:
pkg/commands/start.go:			logrus.Errorf(fmt.Sprintf("%s", err))
pkg/commands/start.go:			remainingItems--
pkg/commands/start.go:			hasError = true
pkg/commands/start.go:		}
pkg/commands/start.go:		if remainingItems == 0 {
pkg/commands/start.go:			break
pkg/commands/start.go:		}
pkg/commands/start.go:	}
pkg/commands/start.go:	if hasError {
pkg/commands/start.go:		return fmt.Errorf("at least 1 server failed to start")
pkg/commands/start.go:	}
pkg/commands/start.go:	return nil
pkg/commands/start.go:}
pkg/commands/stop.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/stop.go:// Use of this source code is governed by a MIT-style
pkg/commands/stop.go:// license that can be found in the LICENSE.md file.
pkg/commands/stop.go:package commands
pkg/commands/stop.go:import (
pkg/commands/stop.go:	"fmt"
pkg/commands/stop.go:	"time"
pkg/commands/stop.go:	"github.com/Sirupsen/logrus"
pkg/commands/stop.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/stop.go:)
pkg/commands/stop.go:// StopArgs are flags for the `RunStop` function
pkg/commands/stop.go:type StopArgs struct {
pkg/commands/stop.go:	Terminate bool
pkg/commands/stop.go:	Wait      bool
pkg/commands/stop.go:	Servers   []string
pkg/commands/stop.go:}
pkg/commands/stop.go:// RunStop is the handler for 'scw stop'
pkg/commands/stop.go:func RunStop(ctx CommandContext, args StopArgs) error {
pkg/commands/stop.go:	// FIXME: parallelize stop when stopping multiple servers
pkg/commands/stop.go:	hasError := false
pkg/commands/stop.go:	for _, needle := range args.Servers {
pkg/commands/stop.go:		serverID, err := ctx.API.GetServerID(needle)
pkg/commands/stop.go:		if err != nil {
pkg/commands/stop.go:			return err
pkg/commands/stop.go:		}
pkg/commands/stop.go:		action := "poweroff"
pkg/commands/stop.go:		if args.Terminate {
pkg/commands/stop.go:			action = "terminate"
pkg/commands/stop.go:		}
pkg/commands/stop.go:		if err = ctx.API.PostServerAction(serverID, action); err != nil {
pkg/commands/stop.go:			if err.Error() != "server should be running" && err.Error() != "server is being stopped or rebooted" {
pkg/commands/stop.go:				logrus.Warningf("failed to stop server %s: %s", serverID, err)
pkg/commands/stop.go:				hasError = true
pkg/commands/stop.go:			}
pkg/commands/stop.go:		} else {
pkg/commands/stop.go:			if args.Wait {
pkg/commands/stop.go:				// We wait for 10 seconds which is the minimal amount of time needed for a server to stop
pkg/commands/stop.go:				time.Sleep(10 * time.Second)
pkg/commands/stop.go:				if _, err = api.WaitForServerStopped(ctx.API, serverID); err != nil {
pkg/commands/stop.go:					logrus.Errorf("failed to wait for server %s: %v", serverID, err)
pkg/commands/stop.go:					hasError = true
pkg/commands/stop.go:				}
pkg/commands/stop.go:			}
pkg/commands/stop.go:			if args.Terminate {
pkg/commands/stop.go:				ctx.API.Cache.RemoveServer(serverID)
pkg/commands/stop.go:			}
pkg/commands/stop.go:			fmt.Fprintln(ctx.Stdout, needle)
pkg/commands/stop.go:		}
pkg/commands/stop.go:	}
pkg/commands/stop.go:	if hasError {
pkg/commands/stop.go:		return fmt.Errorf("at least 1 server failed to be stopped")
pkg/commands/stop.go:	}
pkg/commands/stop.go:	return nil
pkg/commands/stop.go:}
pkg/commands/tag.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/tag.go:// Use of this source code is governed by a MIT-style
pkg/commands/tag.go:// license that can be found in the LICENSE.md file.
pkg/commands/tag.go:package commands
pkg/commands/tag.go:import "fmt"
pkg/commands/tag.go:// TagArgs are flags for the `RunTag` function
pkg/commands/tag.go:type TagArgs struct {
pkg/commands/tag.go:	Snapshot   string
pkg/commands/tag.go:	Bootscript string
pkg/commands/tag.go:	Name       string
pkg/commands/tag.go:	Arch       string
pkg/commands/tag.go:}
pkg/commands/tag.go:// RunTag is the handler for 'scw tag'
pkg/commands/tag.go:func RunTag(ctx CommandContext, args TagArgs) error {
pkg/commands/tag.go:	snapshotID, err := ctx.API.GetSnapshotID(args.Snapshot)
pkg/commands/tag.go:	if err != nil {
pkg/commands/tag.go:		return err
pkg/commands/tag.go:	}
pkg/commands/tag.go:	snapshot, err := ctx.API.GetSnapshot(snapshotID)
pkg/commands/tag.go:	if err != nil {
pkg/commands/tag.go:		return fmt.Errorf("cannot fetch snapshot: %v", err)
pkg/commands/tag.go:	}
pkg/commands/tag.go:	bootscriptID := ""
pkg/commands/tag.go:	if args.Bootscript != "" {
pkg/commands/tag.go:		bootscriptID, err = ctx.API.GetBootscriptID(args.Bootscript, args.Arch)
pkg/commands/tag.go:		if err != nil {
pkg/commands/tag.go:			return err
pkg/commands/tag.go:		}
pkg/commands/tag.go:	}
pkg/commands/tag.go:	image, err := ctx.API.PostImage(snapshot.Identifier, args.Name, bootscriptID, args.Arch)
pkg/commands/tag.go:	if err != nil {
pkg/commands/tag.go:		return fmt.Errorf("cannot create image: %v", err)
pkg/commands/tag.go:	}
pkg/commands/tag.go:	fmt.Fprintln(ctx.Stdout, image)
pkg/commands/tag.go:	return nil
pkg/commands/tag.go:}
pkg/commands/test.go:package commands
pkg/commands/test.go:import (
pkg/commands/test.go:	"bytes"
pkg/commands/test.go:	"fmt"
pkg/commands/test.go:	"os"
pkg/commands/test.go:	"strings"
pkg/commands/test.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/test.go:	"github.com/scaleway/scaleway-cli/pkg/config"
pkg/commands/test.go:	"github.com/Sirupsen/logrus"
pkg/commands/test.go:	"github.com/moul/anonuuid"
pkg/commands/test.go:)
pkg/commands/test.go:func shouldBeAnUUID(actual interface{}, expected ...interface{}) string {
pkg/commands/test.go:	input := actual.(string)
pkg/commands/test.go:	input = strings.TrimSpace(input)
pkg/commands/test.go:	if err := anonuuid.IsUUID(input); err != nil {
pkg/commands/test.go:		return fmt.Sprintf("%q should be an UUID", actual)
pkg/commands/test.go:	}
pkg/commands/test.go:	return ""
pkg/commands/test.go:}
pkg/commands/test.go:func getScopedCtx(sessionCtx *CommandContext) (*CommandContext, *bytes.Buffer, *bytes.Buffer) {
pkg/commands/test.go:	stdout := bytes.Buffer{}
pkg/commands/test.go:	stderr := bytes.Buffer{}
pkg/commands/test.go:	var newCtx CommandContext
pkg/commands/test.go:	newCtx = *sessionCtx
pkg/commands/test.go:	newCtx.Stdout = &stdout
pkg/commands/test.go:	newCtx.Stderr = &stderr
pkg/commands/test.go:	return &newCtx, &stdout, &stderr
pkg/commands/test.go:}
pkg/commands/test.go:// RealAPIContext returns a CommandContext with a configured API
pkg/commands/test.go:func RealAPIContext() *CommandContext {
pkg/commands/test.go:	config, err := config.GetConfig()
pkg/commands/test.go:	if err != nil {
pkg/commands/test.go:		logrus.Warnf("RealAPIContext: failed to call config.GetConfig(): %v", err)
pkg/commands/test.go:		return nil
pkg/commands/test.go:	}
pkg/commands/test.go:	apiClient, err := api.NewScalewayAPI(config.ComputeAPI, config.AccountAPI, config.Organization, config.Token)
pkg/commands/test.go:	if err != nil {
pkg/commands/test.go:		logrus.Warnf("RealAPIContext: failed to call api.NewScalewayAPI(): %v", err)
pkg/commands/test.go:		return nil
pkg/commands/test.go:	}
pkg/commands/test.go:	stdout := bytes.Buffer{}
pkg/commands/test.go:	stderr := bytes.Buffer{}
pkg/commands/test.go:	ctx := CommandContext{
pkg/commands/test.go:		Streams: Streams{
pkg/commands/test.go:			Stdin:  os.Stdin,
pkg/commands/test.go:			Stdout: &stdout,
pkg/commands/test.go:			Stderr: &stderr,
pkg/commands/test.go:		},
pkg/commands/test.go:		Env: []string{
pkg/commands/test.go:			"HOME" + os.Getenv("HOME"),
pkg/commands/test.go:		},
pkg/commands/test.go:		RawArgs: []string{},
pkg/commands/test.go:		API:     apiClient,
pkg/commands/test.go:	}
pkg/commands/test.go:	return &ctx
pkg/commands/test.go:}
pkg/commands/top.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/top.go:// Use of this source code is governed by a MIT-style
pkg/commands/top.go:// license that can be found in the LICENSE.md file.
pkg/commands/top.go:package commands
pkg/commands/top.go:import (
pkg/commands/top.go:	"fmt"
pkg/commands/top.go:	"os/exec"
pkg/commands/top.go:	"github.com/Sirupsen/logrus"
pkg/commands/top.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/top.go:	"github.com/scaleway/scaleway-cli/pkg/utils"
pkg/commands/top.go:)
pkg/commands/top.go:// TopArgs are flags for the `RunTop` function
pkg/commands/top.go:type TopArgs struct {
pkg/commands/top.go:	Server  string
pkg/commands/top.go:	Gateway string
pkg/commands/top.go:}
pkg/commands/top.go:// RunTop is the handler for 'scw top'
pkg/commands/top.go:func RunTop(ctx CommandContext, args TopArgs) error {
pkg/commands/top.go:	serverID, err := ctx.API.GetServerID(args.Server)
pkg/commands/top.go:	if err != nil {
pkg/commands/top.go:		return err
pkg/commands/top.go:	}
pkg/commands/top.go:	command := "ps"
pkg/commands/top.go:	server, err := ctx.API.GetServer(serverID)
pkg/commands/top.go:	if err != nil {
pkg/commands/top.go:		return fmt.Errorf("failed to get server information for %s: %v", serverID, err)
pkg/commands/top.go:	}
pkg/commands/top.go:	// Resolve gateway
pkg/commands/top.go:	if args.Gateway == "" {
pkg/commands/top.go:		args.Gateway = ctx.Getenv("SCW_GATEWAY")
pkg/commands/top.go:	}
pkg/commands/top.go:	var gateway string
pkg/commands/top.go:	if args.Gateway == serverID || args.Gateway == args.Server {
pkg/commands/top.go:		gateway = ""
pkg/commands/top.go:	} else {
pkg/commands/top.go:		gateway, err = api.ResolveGateway(ctx.API, args.Gateway)
pkg/commands/top.go:		if err != nil {
pkg/commands/top.go:			return fmt.Errorf("cannot resolve Gateway '%s': %v", args.Gateway, err)
pkg/commands/top.go:		}
pkg/commands/top.go:	}
pkg/commands/top.go:	sshCommand := utils.NewSSHExecCmd(server.PublicAddress.IP, server.PrivateIP, true, []string{command}, gateway)
pkg/commands/top.go:	logrus.Debugf("Executing: %s", sshCommand)
pkg/commands/top.go:	out, err := exec.Command("ssh", sshCommand.Slice()[1:]...).CombinedOutput()
pkg/commands/top.go:	if err == nil {
pkg/commands/top.go:		fmt.Fprintf(ctx.Stdout, "%s", out)
pkg/commands/top.go:	}
pkg/commands/top.go:	return err
pkg/commands/top.go:}
pkg/commands/version.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/version.go:// Use of this source code is governed by a MIT-style
pkg/commands/version.go:// license that can be found in the LICENSE.md file.
pkg/commands/version.go:package commands
pkg/commands/version.go:import (
pkg/commands/version.go:	"fmt"
pkg/commands/version.go:	"runtime"
pkg/commands/version.go:	"github.com/scaleway/scaleway-cli/pkg/scwversion"
pkg/commands/version.go:)
pkg/commands/version.go:// VersionArgs are flags for the `RunVersion` function
pkg/commands/version.go:type VersionArgs struct{}
pkg/commands/version.go:// Version is the handler for 'scw version'
pkg/commands/version.go:func Version(ctx CommandContext, args VersionArgs) error {
pkg/commands/version.go:	fmt.Fprintf(ctx.Stdout, "Client version: %s\n", scwversion.VERSION)
pkg/commands/version.go:	fmt.Fprintf(ctx.Stdout, "Go version (client): %s\n", runtime.Version())
pkg/commands/version.go:	fmt.Fprintf(ctx.Stdout, "Git commit (client): %s\n", scwversion.GITCOMMIT)
pkg/commands/version.go:	fmt.Fprintf(ctx.Stdout, "OS/Arch (client): %s/%s\n", runtime.GOOS, runtime.GOARCH)
pkg/commands/version.go:	// FIXME: API version information
pkg/commands/version.go:	return nil
pkg/commands/version.go:}
pkg/commands/version_test.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/version_test.go:// Use of this source code is governed by a MIT-style
pkg/commands/version_test.go:// license that can be found in the LICENSE.md file.
pkg/commands/version_test.go:package commands
pkg/commands/version_test.go:import (
pkg/commands/version_test.go:	"bytes"
pkg/commands/version_test.go:	"testing"
pkg/commands/version_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/commands/version_test.go:)
pkg/commands/version_test.go:func TestVersion(t *testing.T) {
pkg/commands/version_test.go:	Convey("Testing Version()", t, func() {
pkg/commands/version_test.go:		ctx := testCommandContext()
pkg/commands/version_test.go:		var buf bytes.Buffer
pkg/commands/version_test.go:		ctx.Stdout = &buf
pkg/commands/version_test.go:		args := VersionArgs{}
pkg/commands/version_test.go:		err := Version(ctx, args)
pkg/commands/version_test.go:		So(err, ShouldBeNil)
pkg/commands/version_test.go:		So(buf.String(), ShouldContainSubstring, "Client version: ")
pkg/commands/version_test.go:		So(buf.String(), ShouldContainSubstring, "Go version (client): ")
pkg/commands/version_test.go:		So(buf.String(), ShouldContainSubstring, "Git commit (client): ")
pkg/commands/version_test.go:		So(buf.String(), ShouldContainSubstring, "OS/Arch (client): ")
pkg/commands/version_test.go:	})
pkg/commands/version_test.go:}
pkg/commands/version_test.go:func ExampleVersion() {
pkg/commands/version_test.go:	ctx := testCommandContext()
pkg/commands/version_test.go:	args := VersionArgs{}
pkg/commands/version_test.go:	Version(ctx, args)
pkg/commands/version_test.go:}
pkg/commands/wait.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/commands/wait.go:// Use of this source code is governed by a MIT-style
pkg/commands/wait.go:// license that can be found in the LICENSE.md file.
pkg/commands/wait.go:package commands
pkg/commands/wait.go:import (
pkg/commands/wait.go:	"fmt"
pkg/commands/wait.go:	"github.com/Sirupsen/logrus"
pkg/commands/wait.go:	"github.com/scaleway/scaleway-cli/pkg/api"
pkg/commands/wait.go:)
pkg/commands/wait.go:// WaitArgs are flags for the `RunWait` function
pkg/commands/wait.go:type WaitArgs struct {
pkg/commands/wait.go:	Servers []string
pkg/commands/wait.go:}
pkg/commands/wait.go:// RunWait is the handler for 'scw wait'
pkg/commands/wait.go:func RunWait(ctx CommandContext, args WaitArgs) error {
pkg/commands/wait.go:	hasError := false
pkg/commands/wait.go:	for _, needle := range args.Servers {
pkg/commands/wait.go:		serverIdentifier, err := ctx.API.GetServerID(needle)
pkg/commands/wait.go:		if err != nil {
pkg/commands/wait.go:			logrus.Error(err)
pkg/commands/wait.go:			hasError = true
pkg/commands/wait.go:		} else {
pkg/commands/wait.go:			if _, err := api.WaitForServerStopped(ctx.API, serverIdentifier); err != nil {
pkg/commands/wait.go:				logrus.Errorf("failed to wait for server %s: %v", serverIdentifier, err)
pkg/commands/wait.go:				hasError = true
pkg/commands/wait.go:			}
pkg/commands/wait.go:		}
pkg/commands/wait.go:	}
pkg/commands/wait.go:	if hasError {
pkg/commands/wait.go:		return fmt.Errorf("at least 1 server failed to be stopped")
pkg/commands/wait.go:	}
pkg/commands/wait.go:	return nil
pkg/commands/wait.go:}
pkg/config/config.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/config/config.go:// Use of this source code is governed by a MIT-style
pkg/config/config.go:// license that can be found in the LICENSE.md file.
pkg/config/config.go:// Package config contains helpers to manage '~/.scwrc'
pkg/config/config.go:package config
pkg/config/config.go:import (
pkg/config/config.go:	"encoding/json"
pkg/config/config.go:	"errors"
pkg/config/config.go:	"fmt"
pkg/config/config.go:	"io/ioutil"
pkg/config/config.go:	"os"
pkg/config/config.go:	"path/filepath"
pkg/config/config.go:)
pkg/config/config.go:// Config is a Scaleway CLI configuration file
pkg/config/config.go:type Config struct {
pkg/config/config.go:	// ComputeAPI is the endpoint to the Scaleway API
pkg/config/config.go:	ComputeAPI string `json:"api_endpoint"`
pkg/config/config.go:	// AccountAPI is the endpoint to the Scaleway Account API
pkg/config/config.go:	AccountAPI string `json:"account_endpoint"`
pkg/config/config.go:	// Organization is the identifier of the Scaleway orgnization
pkg/config/config.go:	Organization string `json:"organization"`
pkg/config/config.go:	// Token is the authentication token for the Scaleway organization
pkg/config/config.go:	Token string `json:"token"`
pkg/config/config.go:}
pkg/config/config.go:// Save write the config file
pkg/config/config.go:func (c *Config) Save() error {
pkg/config/config.go:	scwrcPath, err := GetConfigFilePath()
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return fmt.Errorf("Unable to get scwrc config file path: %s", err)
pkg/config/config.go:	}
pkg/config/config.go:	scwrc, err := os.OpenFile(scwrcPath, os.O_CREATE|os.O_TRUNC|os.O_RDWR, 0600)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return fmt.Errorf("Unable to create scwrc config file: %s", err)
pkg/config/config.go:	}
pkg/config/config.go:	defer scwrc.Close()
pkg/config/config.go:	encoder := json.NewEncoder(scwrc)
pkg/config/config.go:	err = encoder.Encode(c)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return fmt.Errorf("Unable to encode scw config file: %s", err)
pkg/config/config.go:	}
pkg/config/config.go:	return nil
pkg/config/config.go:}
pkg/config/config.go:// GetConfig returns the Scaleway CLI config file for the current user
pkg/config/config.go:func GetConfig() (*Config, error) {
pkg/config/config.go:	scwrcPath, err := GetConfigFilePath()
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return nil, err
pkg/config/config.go:	}
pkg/config/config.go:	stat, err := os.Stat(scwrcPath)
pkg/config/config.go:	// we don't care if it fails, the user just won't see the warning
pkg/config/config.go:	if err == nil {
pkg/config/config.go:		mode := stat.Mode()
pkg/config/config.go:		if mode&0066 != 0 {
pkg/config/config.go:			return nil, fmt.Errorf("permissions %#o for .scwrc are too open", mode)
pkg/config/config.go:		}
pkg/config/config.go:	}
pkg/config/config.go:	file, err := ioutil.ReadFile(scwrcPath)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return nil, err
pkg/config/config.go:	}
pkg/config/config.go:	var config Config
pkg/config/config.go:	err = json.Unmarshal(file, &config)
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return nil, err
pkg/config/config.go:	}
pkg/config/config.go:	// check if he has an old scwrc version
pkg/config/config.go:	if config.AccountAPI == "" {
pkg/config/config.go:		config.AccountAPI = "https://account.scaleway.com"
pkg/config/config.go:		config.Save()
pkg/config/config.go:	}
pkg/config/config.go:	if os.Getenv("scaleway_api_endpoint") == "" {
pkg/config/config.go:		os.Setenv("scaleway_api_endpoint", config.ComputeAPI)
pkg/config/config.go:	}
pkg/config/config.go:	return &config, nil
pkg/config/config.go:}
pkg/config/config.go:// GetConfigFilePath returns the path to the Scaleway CLI config file
pkg/config/config.go:func GetConfigFilePath() (string, error) {
pkg/config/config.go:	path, err := GetHomeDir()
pkg/config/config.go:	if err != nil {
pkg/config/config.go:		return "", err
pkg/config/config.go:	}
pkg/config/config.go:	return filepath.Join(path, ".scwrc"), nil
pkg/config/config.go:}
pkg/config/config.go:// GetHomeDir returns the path to your home
pkg/config/config.go:func GetHomeDir() (string, error) {
pkg/config/config.go:	homeDir := os.Getenv("HOME") // *nix
pkg/config/config.go:	if homeDir == "" {           // Windows
pkg/config/config.go:		homeDir = os.Getenv("USERPROFILE")
pkg/config/config.go:	}
pkg/config/config.go:	if homeDir == "" {
pkg/config/config.go:		return "", errors.New("user home directory not found")
pkg/config/config.go:	}
pkg/config/config.go:	return homeDir, nil
pkg/config/config.go:}
pkg/config/config_test.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/config/config_test.go:// Use of this source code is governed by a MIT-style
pkg/config/config_test.go:// license that can be found in the LICENSE.md file.
pkg/config/config_test.go:package config
pkg/config/config_test.go:import (
pkg/config/config_test.go:	"strings"
pkg/config/config_test.go:	"testing"
pkg/config/config_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/config/config_test.go:)
pkg/config/config_test.go:func TestGetConfigFilePath(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing GetConfigFilePath()", t, func() {
pkg/config/config_test.go:		configPath, err := GetConfigFilePath()
pkg/config/config_test.go:		So(err, ShouldBeNil)
pkg/config/config_test.go:		So(configPath, ShouldNotEqual, "")
pkg/config/config_test.go:		homedir, err := GetHomeDir()
pkg/config/config_test.go:		So(err, ShouldBeNil)
pkg/config/config_test.go:		So(strings.Contains(configPath, homedir), ShouldBeTrue)
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/config/config_test.go:func TestGetHomeDir(t *testing.T) {
pkg/config/config_test.go:	Convey("Testing GetHomeDir()", t, func() {
pkg/config/config_test.go:		homedir, err := GetHomeDir()
pkg/config/config_test.go:		So(err, ShouldBeNil)
pkg/config/config_test.go:		So(homedir, ShouldNotEqual, "")
pkg/config/config_test.go:	})
pkg/config/config_test.go:}
pkg/pricing/basket.go:package pricing
pkg/pricing/basket.go:import (
pkg/pricing/basket.go:	"math/big"
pkg/pricing/basket.go:	"time"
pkg/pricing/basket.go:)
pkg/pricing/basket.go:// Basket represents a billing basket
pkg/pricing/basket.go:type Basket []Usage
pkg/pricing/basket.go:// NewBasket return a new instance of Basket
pkg/pricing/basket.go:func NewBasket() *Basket {
pkg/pricing/basket.go:	return &Basket{}
pkg/pricing/basket.go:}
pkg/pricing/basket.go:// Add adds an Usage to a Basket
pkg/pricing/basket.go:func (b *Basket) Add(usage Usage) error {
pkg/pricing/basket.go:	*b = append(*b, usage)
pkg/pricing/basket.go:	return nil
pkg/pricing/basket.go:}
pkg/pricing/basket.go:// Length returns the amount of Usages in a Basket
pkg/pricing/basket.go:func (b *Basket) Length() int {
pkg/pricing/basket.go:	return len(*b)
pkg/pricing/basket.go:}
pkg/pricing/basket.go:// SetDuration sets the duration for each Usages of a Basket
pkg/pricing/basket.go:func (b *Basket) SetDuration(duration time.Duration) error {
pkg/pricing/basket.go:	var err error
pkg/pricing/basket.go:	for i, usage := range *b {
pkg/pricing/basket.go:		err = usage.SetDuration(duration)
pkg/pricing/basket.go:		if err != nil {
pkg/pricing/basket.go:			return err
pkg/pricing/basket.go:		}
pkg/pricing/basket.go:		(*b)[i] = usage
pkg/pricing/basket.go:	}
pkg/pricing/basket.go:	return nil
pkg/pricing/basket.go:}
pkg/pricing/basket.go:// Total computes the Usage.Total() of all the Usages of a Basket
pkg/pricing/basket.go:func (b *Basket) Total() *big.Rat {
pkg/pricing/basket.go:	total := new(big.Rat)
pkg/pricing/basket.go:	for _, usage := range *b {
pkg/pricing/basket.go:		total = total.Add(total, usage.Total())
pkg/pricing/basket.go:	}
pkg/pricing/basket.go:	return total
pkg/pricing/basket.go:}
pkg/pricing/basket_test.go:package pricing
pkg/pricing/basket_test.go:import (
pkg/pricing/basket_test.go:	"math/big"
pkg/pricing/basket_test.go:	"testing"
pkg/pricing/basket_test.go:	"time"
pkg/pricing/basket_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/pricing/basket_test.go:)
pkg/pricing/basket_test.go:func TestNewBasket(t *testing.T) {
pkg/pricing/basket_test.go:	Convey("Testing NewBasket()", t, func() {
pkg/pricing/basket_test.go:		basket := NewBasket()
pkg/pricing/basket_test.go:		So(basket, ShouldNotBeNil)
pkg/pricing/basket_test.go:		So(basket.Length(), ShouldEqual, 0)
pkg/pricing/basket_test.go:	})
pkg/pricing/basket_test.go:}
pkg/pricing/basket_test.go:func TestBasket_Add(t *testing.T) {
pkg/pricing/basket_test.go:	Convey("Testing Basket.Add", t, FailureContinues, func() {
pkg/pricing/basket_test.go:		basket := NewBasket()
pkg/pricing/basket_test.go:		So(basket, ShouldNotBeNil)
pkg/pricing/basket_test.go:		So(basket.Length(), ShouldEqual, 0)
pkg/pricing/basket_test.go:		err := basket.Add(NewUsageByPathWithQuantity("/compute/c1/run", big.NewRat(1, 1)))
pkg/pricing/basket_test.go:		So(err, ShouldBeNil)
pkg/pricing/basket_test.go:		So(basket.Length(), ShouldEqual, 1)
pkg/pricing/basket_test.go:		err = basket.Add(NewUsageByPathWithQuantity("/compute/c1/run", big.NewRat(42, 1)))
pkg/pricing/basket_test.go:		So(err, ShouldBeNil)
pkg/pricing/basket_test.go:		So(basket.Length(), ShouldEqual, 2)
pkg/pricing/basket_test.go:		err = basket.Add(NewUsageByPathWithQuantity("/compute/c1/run", big.NewRat(600, 1)))
pkg/pricing/basket_test.go:		So(err, ShouldBeNil)
pkg/pricing/basket_test.go:		So(basket.Length(), ShouldEqual, 3)
pkg/pricing/basket_test.go:	})
pkg/pricing/basket_test.go:}
pkg/pricing/basket_test.go:func TestBasket_Total(t *testing.T) {
pkg/pricing/basket_test.go:	Convey("Testing Basket.Total", t, FailureContinues, func() {
pkg/pricing/basket_test.go:		Convey("3 compute instances", func() {
pkg/pricing/basket_test.go:			basket := NewBasket()
pkg/pricing/basket_test.go:			So(basket, ShouldNotBeNil)
pkg/pricing/basket_test.go:			So(basket.Total(), ShouldEqualBigRat, ratZero)
pkg/pricing/basket_test.go:			err := basket.Add(NewUsageByPathWithQuantity("/compute/c1/run", big.NewRat(1, 1)))
pkg/pricing/basket_test.go:			So(err, ShouldBeNil)
pkg/pricing/basket_test.go:			So(basket.Total(), ShouldEqualBigRat, big.NewRat(2, 1000)) // 0.002
pkg/pricing/basket_test.go:			err = basket.Add(NewUsageByPathWithQuantity("/compute/c1/run", big.NewRat(42, 1)))
pkg/pricing/basket_test.go:			So(err, ShouldBeNil)
pkg/pricing/basket_test.go:			So(basket.Total(), ShouldEqualBigRat, big.NewRat(4, 1000)) // 0.004
pkg/pricing/basket_test.go:			err = basket.Add(NewUsageByPathWithQuantity("/compute/c1/run", big.NewRat(600, 1)))
pkg/pricing/basket_test.go:			So(err, ShouldBeNil)
pkg/pricing/basket_test.go:			So(basket.Total(), ShouldEqualBigRat, big.NewRat(24, 1000)) // 0.024
pkg/pricing/basket_test.go:		})
pkg/pricing/basket_test.go:		Convey("1 compute instance with 2 volumes and 1 ip", func() {
pkg/pricing/basket_test.go:			basket := NewBasket()
pkg/pricing/basket_test.go:			basket.Add(NewUsageByPath("/compute/c1/run"))
pkg/pricing/basket_test.go:			basket.Add(NewUsageByPath("/ip/dynamic"))
pkg/pricing/basket_test.go:			basket.Add(NewUsageByPath("/storage/local/ssd/storage"))
pkg/pricing/basket_test.go:			basket.Add(NewUsageByPath("/storage/local/ssd/storage"))
pkg/pricing/basket_test.go:			So(basket.Length(), ShouldEqual, 4)
pkg/pricing/basket_test.go:			basket.SetDuration(1 * time.Minute)
pkg/pricing/basket_test.go:			So(basket.Total(), ShouldEqualBigRat, big.NewRat(8, 1000)) // 0.008
pkg/pricing/basket_test.go:			basket.SetDuration(1 * time.Hour)
pkg/pricing/basket_test.go:			So(basket.Total(), ShouldEqualBigRat, big.NewRat(8, 1000)) // 0.008
pkg/pricing/basket_test.go:			basket.SetDuration(2 * time.Hour)
pkg/pricing/basket_test.go:			So(basket.Total(), ShouldEqualBigRat, big.NewRat(12, 1000)) // 0.012
pkg/pricing/basket_test.go:			basket.SetDuration(2 * 24 * time.Hour)
pkg/pricing/basket_test.go:			So(basket.Total(), ShouldEqualBigRat, big.NewRat(196, 1000)) // 0.196
pkg/pricing/basket_test.go:			basket.SetDuration(30 * 24 * time.Hour)
pkg/pricing/basket_test.go:			So(basket.Total(), ShouldEqualBigRat, big.NewRat(2050, 1000)) // 2.05
pkg/pricing/basket_test.go:			// FIXME: this test is false, the capacity is per month
pkg/pricing/basket_test.go:			basket.SetDuration(365 * 24 * time.Hour)
pkg/pricing/basket_test.go:			So(basket.Total(), ShouldEqualBigRat, big.NewRat(2694, 1000)) // 2.694
pkg/pricing/basket_test.go:		})
pkg/pricing/basket_test.go:	})
pkg/pricing/basket_test.go:}
pkg/pricing/pricing.go:package pricing
pkg/pricing/pricing.go:import (
pkg/pricing/pricing.go:	"math/big"
pkg/pricing/pricing.go:	"time"
pkg/pricing/pricing.go:)
pkg/pricing/pricing.go:// Object represents a Pricing item definition
pkg/pricing/pricing.go:type Object struct {
pkg/pricing/pricing.go:	Path             string
pkg/pricing/pricing.go:	Identifier       string
pkg/pricing/pricing.go:	Currency         string
pkg/pricing/pricing.go:	UsageUnit        string
pkg/pricing/pricing.go:	UnitPrice        *big.Rat
pkg/pricing/pricing.go:	UnitQuantity     *big.Rat
pkg/pricing/pricing.go:	UnitPriceCap     *big.Rat
pkg/pricing/pricing.go:	UsageGranularity time.Duration
pkg/pricing/pricing.go:}
pkg/pricing/pricing.go:// List represents a list of Object
pkg/pricing/pricing.go:type List []Object
pkg/pricing/pricing.go:// CurrentPricing tries to be up-to-date with the real pricing
pkg/pricing/pricing.go:// we cannot guarantee of these values since we hardcode values for now
pkg/pricing/pricing.go:// later, we should be able to call a dedicated pricing API
pkg/pricing/pricing.go:var CurrentPricing List
pkg/pricing/pricing.go:func init() {
pkg/pricing/pricing.go:	CurrentPricing = List{
pkg/pricing/pricing.go:		{
pkg/pricing/pricing.go:			Path:             "/compute/c1/run",
pkg/pricing/pricing.go:			Identifier:       "aaaaaaaa-aaaa-4aaa-8aaa-111111111112",
pkg/pricing/pricing.go:			Currency:         "EUR",
pkg/pricing/pricing.go:			UnitPrice:        big.NewRat(2, 1000),     // 0.002
pkg/pricing/pricing.go:			UnitQuantity:     big.NewRat(60000, 1000), // 60
pkg/pricing/pricing.go:			UnitPriceCap:     big.NewRat(1000, 1000),  // 1
pkg/pricing/pricing.go:			UsageGranularity: time.Minute,
pkg/pricing/pricing.go:		},
pkg/pricing/pricing.go:		{
pkg/pricing/pricing.go:			Path:             "/ip/dynamic",
pkg/pricing/pricing.go:			Identifier:       "467116bf-4631-49fb-905b-e07701c21111",
pkg/pricing/pricing.go:			Currency:         "EUR",
pkg/pricing/pricing.go:			UnitPrice:        big.NewRat(2, 1000),     // 0.002
pkg/pricing/pricing.go:			UnitQuantity:     big.NewRat(60000, 1000), // 60
pkg/pricing/pricing.go:			UnitPriceCap:     big.NewRat(990, 1000),   // 0.99
pkg/pricing/pricing.go:			UsageGranularity: time.Minute,
pkg/pricing/pricing.go:		},
pkg/pricing/pricing.go:		{
pkg/pricing/pricing.go:			Path:             "/ip/reserved",
pkg/pricing/pricing.go:			Identifier:       "467116bf-4631-49fb-905b-e07701c22222",
pkg/pricing/pricing.go:			Currency:         "EUR",
pkg/pricing/pricing.go:			UnitPrice:        big.NewRat(2, 1000),     // 0.002
pkg/pricing/pricing.go:			UnitQuantity:     big.NewRat(60000, 1000), // 60
pkg/pricing/pricing.go:			UnitPriceCap:     big.NewRat(990, 1000),   // 0.99
pkg/pricing/pricing.go:			UsageGranularity: time.Minute,
pkg/pricing/pricing.go:		},
pkg/pricing/pricing.go:		{
pkg/pricing/pricing.go:			Path:             "/storage/local/ssd/storage",
pkg/pricing/pricing.go:			Identifier:       "bbbbbbbb-bbbb-4bbb-8bbb-111111111144",
pkg/pricing/pricing.go:			Currency:         "EUR",
pkg/pricing/pricing.go:			UnitPrice:        big.NewRat(2, 1000),     // 0.002
pkg/pricing/pricing.go:			UnitQuantity:     big.NewRat(50000, 1000), // 50
pkg/pricing/pricing.go:			UnitPriceCap:     big.NewRat(1000, 1000),  // 1
pkg/pricing/pricing.go:			UsageGranularity: time.Hour,
pkg/pricing/pricing.go:		},
pkg/pricing/pricing.go:	}
pkg/pricing/pricing.go:}
pkg/pricing/pricing.go:// GetByPath returns an object matching a path
pkg/pricing/pricing.go:func (pl *List) GetByPath(path string) *Object {
pkg/pricing/pricing.go:	for _, object := range *pl {
pkg/pricing/pricing.go:		if object.Path == path {
pkg/pricing/pricing.go:			return &object
pkg/pricing/pricing.go:		}
pkg/pricing/pricing.go:	}
pkg/pricing/pricing.go:	return nil
pkg/pricing/pricing.go:}
pkg/pricing/pricing.go:// GetByIdentifier returns an object matching a identifier
pkg/pricing/pricing.go:func (pl *List) GetByIdentifier(identifier string) *Object {
pkg/pricing/pricing.go:	for _, object := range *pl {
pkg/pricing/pricing.go:		if object.Identifier == identifier {
pkg/pricing/pricing.go:			return &object
pkg/pricing/pricing.go:		}
pkg/pricing/pricing.go:	}
pkg/pricing/pricing.go:	return nil
pkg/pricing/pricing.go:}
pkg/pricing/pricing_test.go:package pricing
pkg/pricing/pricing_test.go:import (
pkg/pricing/pricing_test.go:	"testing"
pkg/pricing/pricing_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/pricing/pricing_test.go:)
pkg/pricing/pricing_test.go:func TestGetByPath(t *testing.T) {
pkg/pricing/pricing_test.go:	Convey("Testing GetByPath", t, func() {
pkg/pricing/pricing_test.go:		object := CurrentPricing.GetByPath("/compute/c1/run")
pkg/pricing/pricing_test.go:		So(object, ShouldNotBeNil)
pkg/pricing/pricing_test.go:		So(object.Path, ShouldEqual, "/compute/c1/run")
pkg/pricing/pricing_test.go:		object = CurrentPricing.GetByPath("/ip/dynamic")
pkg/pricing/pricing_test.go:		So(object, ShouldNotBeNil)
pkg/pricing/pricing_test.go:		So(object.Path, ShouldEqual, "/ip/dynamic")
pkg/pricing/pricing_test.go:		object = CurrentPricing.GetByPath("/dontexists")
pkg/pricing/pricing_test.go:		So(object, ShouldBeNil)
pkg/pricing/pricing_test.go:	})
pkg/pricing/pricing_test.go:}
pkg/pricing/pricing_test.go:func TestGetByIdentifier(t *testing.T) {
pkg/pricing/pricing_test.go:	Convey("Testing GetByIdentifier", t, func() {
pkg/pricing/pricing_test.go:		object := CurrentPricing.GetByIdentifier("aaaaaaaa-aaaa-4aaa-8aaa-111111111112")
pkg/pricing/pricing_test.go:		So(object, ShouldNotBeNil)
pkg/pricing/pricing_test.go:		So(object.Path, ShouldEqual, "/compute/c1/run")
pkg/pricing/pricing_test.go:		object = CurrentPricing.GetByIdentifier("dontexists")
pkg/pricing/pricing_test.go:		So(object, ShouldBeNil)
pkg/pricing/pricing_test.go:	})
pkg/pricing/pricing_test.go:}
pkg/pricing/usage.go:package pricing
pkg/pricing/usage.go:import (
pkg/pricing/usage.go:	"math/big"
pkg/pricing/usage.go:	"time"
pkg/pricing/usage.go:)
pkg/pricing/usage.go:// Usage represents a billing usage
pkg/pricing/usage.go:type Usage struct {
pkg/pricing/usage.go:	Object   *Object
pkg/pricing/usage.go:	Quantity *big.Rat
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// NewUsageByPath returns a new Usage with defaults fetched from a path
pkg/pricing/usage.go:func NewUsageByPath(objectPath string) Usage {
pkg/pricing/usage.go:	return NewUsageByPathWithQuantity(objectPath, ratZero)
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// NewUsageByPathWithQuantity returns a NewUsageByPath with a specific quantity
pkg/pricing/usage.go:func NewUsageByPathWithQuantity(objectPath string, quantity *big.Rat) Usage {
pkg/pricing/usage.go:	return NewUsageWithQuantity(CurrentPricing.GetByPath(objectPath), quantity)
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// NewUsageWithQuantity returns a new Usage with quantity
pkg/pricing/usage.go:func NewUsageWithQuantity(object *Object, quantity *big.Rat) Usage {
pkg/pricing/usage.go:	return Usage{
pkg/pricing/usage.go:		Object:   object,
pkg/pricing/usage.go:		Quantity: quantity,
pkg/pricing/usage.go:	}
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// NewUsage returns a new Usage
pkg/pricing/usage.go:func NewUsage(object *Object) Usage {
pkg/pricing/usage.go:	return NewUsageWithQuantity(object, ratZero)
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// SetQuantity sets the quantity of an Usage
pkg/pricing/usage.go:func (u *Usage) SetQuantity(quantity *big.Rat) error {
pkg/pricing/usage.go:	u.Quantity = ratMax(quantity, ratZero)
pkg/pricing/usage.go:	return nil
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// SetDuration sets the duration of an Usage
pkg/pricing/usage.go:func (u *Usage) SetDuration(duration time.Duration) error {
pkg/pricing/usage.go:	minutes := new(big.Rat).SetFloat64(duration.Minutes())
pkg/pricing/usage.go:	factor := new(big.Rat).SetInt64((u.Object.UsageGranularity / time.Minute).Nanoseconds())
pkg/pricing/usage.go:	quantity := new(big.Rat).Quo(minutes, factor)
pkg/pricing/usage.go:	ceil := new(big.Rat).SetInt(ratCeil(quantity))
pkg/pricing/usage.go:	return u.SetQuantity(ceil)
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// SetStartEnd sets the start date and the end date of an Usage
pkg/pricing/usage.go:func (u *Usage) SetStartEnd(start, end time.Time) error {
pkg/pricing/usage.go:	roundedStart := start.Round(u.Object.UsageGranularity)
pkg/pricing/usage.go:	if roundedStart.After(start) {
pkg/pricing/usage.go:		roundedStart = roundedStart.Add(-u.Object.UsageGranularity)
pkg/pricing/usage.go:	}
pkg/pricing/usage.go:	roundedEnd := end.Round(u.Object.UsageGranularity)
pkg/pricing/usage.go:	if roundedEnd.Before(end) {
pkg/pricing/usage.go:		roundedEnd = roundedEnd.Add(u.Object.UsageGranularity)
pkg/pricing/usage.go:	}
pkg/pricing/usage.go:	return u.SetDuration(roundedEnd.Sub(roundedStart))
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// BillableQuantity returns the billable quantity of an Usage
pkg/pricing/usage.go:func (u *Usage) BillableQuantity() *big.Rat {
pkg/pricing/usage.go:	if u.Quantity.Cmp(ratZero) < 1 {
pkg/pricing/usage.go:		return big.NewRat(0, 1)
pkg/pricing/usage.go:	}
pkg/pricing/usage.go:	//return math.Ceil(u.Quantity/u.Object.UnitQuantity) * u.Object.UnitQuantity
pkg/pricing/usage.go:	quantityQuotient := new(big.Rat).Quo(u.Quantity, u.Object.UnitQuantity)
pkg/pricing/usage.go:	ceil := new(big.Rat).SetInt(ratCeil(quantityQuotient))
pkg/pricing/usage.go:	return new(big.Rat).Mul(ceil, u.Object.UnitQuantity)
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// LostQuantity returns the lost quantity of an Usage
pkg/pricing/usage.go:func (u *Usage) LostQuantity() *big.Rat {
pkg/pricing/usage.go:	//return u.BillableQuantity() - math.Max(u.Quantity, 0)
pkg/pricing/usage.go:	return new(big.Rat).Sub(u.BillableQuantity(), ratMax(u.Quantity, ratZero))
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// Total returns the total of an Usage
pkg/pricing/usage.go:func (u *Usage) Total() *big.Rat {
pkg/pricing/usage.go:	//return math.Min(u.Object.UnitPrice * u.BillableQuantity(), u.Object.UnitPriceCap)
pkg/pricing/usage.go:	total := new(big.Rat).Mul(u.BillableQuantity(), u.Object.UnitPrice)
pkg/pricing/usage.go:	total = total.Quo(total, u.Object.UnitQuantity)
pkg/pricing/usage.go:	return ratMin(total, u.Object.UnitPriceCap)
pkg/pricing/usage.go:}
pkg/pricing/usage.go:// TotalString returns a string representing the total price of an Usage + its currency
pkg/pricing/usage.go:func (u *Usage) TotalString() string {
pkg/pricing/usage.go:	return PriceString(u.Total(), u.Object.Currency)
pkg/pricing/usage.go:}
pkg/pricing/usage_test.go:package pricing
pkg/pricing/usage_test.go:import (
pkg/pricing/usage_test.go:	"math/big"
pkg/pricing/usage_test.go:	"testing"
pkg/pricing/usage_test.go:	"time"
pkg/pricing/usage_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/pricing/usage_test.go:)
pkg/pricing/usage_test.go:func TestNewUsageByPathWithQuantity(t *testing.T) {
pkg/pricing/usage_test.go:	Convey("Testing NewUsageByPathWithQuantity()", t, func() {
pkg/pricing/usage_test.go:		usage := NewUsageByPathWithQuantity("/compute/c1/run", big.NewRat(1, 1))
pkg/pricing/usage_test.go:		So(usage.Object.Path, ShouldEqual, "/compute/c1/run")
pkg/pricing/usage_test.go:		So(usage.Quantity, ShouldEqualBigRat, big.NewRat(1, 1))
pkg/pricing/usage_test.go:	})
pkg/pricing/usage_test.go:}
pkg/pricing/usage_test.go:func TestNewUsageByPath(t *testing.T) {
pkg/pricing/usage_test.go:	Convey("Testing NewUsageByPath()", t, func() {
pkg/pricing/usage_test.go:		usage := NewUsageByPath("/compute/c1/run")
pkg/pricing/usage_test.go:		So(usage.Object.Path, ShouldEqual, "/compute/c1/run")
pkg/pricing/usage_test.go:		So(usage.Quantity, ShouldEqualBigRat, ratZero)
pkg/pricing/usage_test.go:	})
pkg/pricing/usage_test.go:}
pkg/pricing/usage_test.go:func TestNewUsageWithQuantity(t *testing.T) {
pkg/pricing/usage_test.go:	Convey("Testing NewUsageWithQuantity()", t, func() {
pkg/pricing/usage_test.go:		object := CurrentPricing.GetByPath("/compute/c1/run")
pkg/pricing/usage_test.go:		usage := NewUsageWithQuantity(object, big.NewRat(1, 1))
pkg/pricing/usage_test.go:		So(usage.Object.Path, ShouldEqual, "/compute/c1/run")
pkg/pricing/usage_test.go:		So(usage.Quantity, ShouldEqualBigRat, big.NewRat(1, 1))
pkg/pricing/usage_test.go:	})
pkg/pricing/usage_test.go:}
pkg/pricing/usage_test.go:func TestUsage_SetStartEnd(t *testing.T) {
pkg/pricing/usage_test.go:	Convey("Testing Usage.SetStartEnd()", t, func() {
pkg/pricing/usage_test.go:		object := Object{
pkg/pricing/usage_test.go:			UsageGranularity: time.Minute,
pkg/pricing/usage_test.go:		}
pkg/pricing/usage_test.go:		usage := NewUsage(&object)
pkg/pricing/usage_test.go:		layout := "2006-Jan-02 15:04:05"
pkg/pricing/usage_test.go:		start, err := time.Parse(layout, "2015-Jan-25 13:15:42")
pkg/pricing/usage_test.go:		So(err, ShouldBeNil)
pkg/pricing/usage_test.go:		end, err := time.Parse(layout, "2015-Jan-25 13:16:10")
pkg/pricing/usage_test.go:		So(err, ShouldBeNil)
pkg/pricing/usage_test.go:		err = usage.SetStartEnd(start, end)
pkg/pricing/usage_test.go:		So(err, ShouldBeNil)
pkg/pricing/usage_test.go:		So(usage.Quantity, ShouldEqualBigRat, big.NewRat(2, 1))
pkg/pricing/usage_test.go:	})
pkg/pricing/usage_test.go:}
pkg/pricing/usage_test.go:func TestUsage_SetDuration(t *testing.T) {
pkg/pricing/usage_test.go:	Convey("Testing Usage.SetDuration()", t, FailureContinues, func() {
pkg/pricing/usage_test.go:		Convey("UsageGranularity=time.Minute", func() {
pkg/pricing/usage_test.go:			object := Object{
pkg/pricing/usage_test.go:				UsageGranularity: time.Minute,
pkg/pricing/usage_test.go:			}
pkg/pricing/usage_test.go:			usage := NewUsage(&object)
pkg/pricing/usage_test.go:			err := usage.SetDuration(time.Minute * 10)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(10, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(time.Minute + time.Second)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(2, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(0 * time.Minute)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(-1 * time.Minute)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(10*time.Hour + 5*time.Minute + 10*time.Second)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(60*10+5+1, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(10 * time.Nanosecond)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(1, 1))
pkg/pricing/usage_test.go:		})
pkg/pricing/usage_test.go:		Convey("UsageGranularity=time.Hour", func() {
pkg/pricing/usage_test.go:			object := Object{
pkg/pricing/usage_test.go:				UsageGranularity: time.Hour,
pkg/pricing/usage_test.go:			}
pkg/pricing/usage_test.go:			usage := NewUsage(&object)
pkg/pricing/usage_test.go:			err := usage.SetDuration(time.Minute * 10)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(1, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(time.Minute + time.Second)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(1, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(0 * time.Minute)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(-1 * time.Minute)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(10*time.Hour + 5*time.Minute + 10*time.Second)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(11, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(10 * time.Nanosecond)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(1, 1))
pkg/pricing/usage_test.go:		})
pkg/pricing/usage_test.go:		Convey("UsageGranularity=time.Hour*24", func() {
pkg/pricing/usage_test.go:			object := Object{
pkg/pricing/usage_test.go:				UsageGranularity: time.Hour * 24,
pkg/pricing/usage_test.go:			}
pkg/pricing/usage_test.go:			usage := NewUsage(&object)
pkg/pricing/usage_test.go:			err := usage.SetDuration(time.Minute * 10)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(1, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(time.Minute + time.Second)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(1, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(0 * time.Minute)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(-1 * time.Minute)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(10*time.Hour + 5*time.Minute + 10*time.Second)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(1, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(3*24*time.Hour + 1*time.Minute)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(4, 1))
pkg/pricing/usage_test.go:			err = usage.SetDuration(10 * time.Nanosecond)
pkg/pricing/usage_test.go:			So(err, ShouldBeNil)
pkg/pricing/usage_test.go:			So(usage.Quantity, ShouldEqualBigRat, big.NewRat(1, 1))
pkg/pricing/usage_test.go:		})
pkg/pricing/usage_test.go:	})
pkg/pricing/usage_test.go:}
pkg/pricing/usage_test.go:func TestUsage_BillableQuantity(t *testing.T) {
pkg/pricing/usage_test.go:	Convey("Testing Usage.BillableQuantity()", t, FailureContinues, func() {
pkg/pricing/usage_test.go:		object := &Object{
pkg/pricing/usage_test.go:			UnitQuantity: big.NewRat(60, 1),
pkg/pricing/usage_test.go:		}
pkg/pricing/usage_test.go:		usage := NewUsageWithQuantity(object, big.NewRat(-1, 1))
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(-1000, 1))
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(1, 1))
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(60, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(59, 1))
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(60, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(599999, 10000)) // 59.9999
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(60, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(60, 1))
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(60, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(6000001, 100000)) // 60.00001
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(60*2, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(61, 1))
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(60*2, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(119, 1))
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(60*2, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(121, 1))
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(60*3, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(1000, 1))
pkg/pricing/usage_test.go:		So(usage.BillableQuantity(), ShouldEqualBigRat, big.NewRat(60*17, 1))
pkg/pricing/usage_test.go:	})
pkg/pricing/usage_test.go:}
pkg/pricing/usage_test.go:func TestUsage_LostQuantity(t *testing.T) {
pkg/pricing/usage_test.go:	Convey("Testing Usage.LostQuantity()", t, FailureContinues, func() {
pkg/pricing/usage_test.go:		object := &Object{
pkg/pricing/usage_test.go:			UnitQuantity: big.NewRat(60, 1),
pkg/pricing/usage_test.go:		}
pkg/pricing/usage_test.go:		usage := NewUsageWithQuantity(object, big.NewRat(-1, 1))
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(-1000, 1))
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(1, 1))
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(60-1, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(59, 1))
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(60-59, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(599999, 10000)) // 59.9999
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, new(big.Rat).Sub(big.NewRat(60, 1), big.NewRat(599999, 10000)))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(60, 1))
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(6000001, 100000)) // 60.00001
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(6000000*2-6000001, 100000))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(61, 1))
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(60*2-61, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(119, 1))
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(60*2-119, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(121, 1))
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(60*3-121, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(object, big.NewRat(1000, 1))
pkg/pricing/usage_test.go:		So(usage.LostQuantity(), ShouldEqualBigRat, big.NewRat(60*17-1000, 1))
pkg/pricing/usage_test.go:	})
pkg/pricing/usage_test.go:}
pkg/pricing/usage_test.go:func TestUsage_Total(t *testing.T) {
pkg/pricing/usage_test.go:	Convey("Testing Usage.Total()", t, FailureContinues, func() {
pkg/pricing/usage_test.go:		object := Object{
pkg/pricing/usage_test.go:			UnitQuantity: big.NewRat(60, 1),
pkg/pricing/usage_test.go:			UnitPrice:    big.NewRat(12, 1000), // 0.012
pkg/pricing/usage_test.go:			UnitPriceCap: big.NewRat(6, 1),
pkg/pricing/usage_test.go:		}
pkg/pricing/usage_test.go:		usage := NewUsageWithQuantity(&object, big.NewRat(-1, 1))
pkg/pricing/usage_test.go:		So(usage.Total(), ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(&object, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		So(usage.Total(), ShouldEqualBigRat, big.NewRat(0, 1))
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(&object, big.NewRat(1, 1))
pkg/pricing/usage_test.go:		So(usage.Total(), ShouldEqualBigRat, big.NewRat(12, 1000)) // 0.012
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(&object, big.NewRat(61, 1))
pkg/pricing/usage_test.go:		So(usage.Total(), ShouldEqualBigRat, big.NewRat(24, 1000)) // 0.024
pkg/pricing/usage_test.go:		usage = NewUsageWithQuantity(&object, big.NewRat(1000, 1))
pkg/pricing/usage_test.go:		So(usage.Total(), ShouldEqualBigRat, big.NewRat(204, 1000)) // 0.204
pkg/pricing/usage_test.go:	})
pkg/pricing/usage_test.go:}
pkg/pricing/utils.go:package pricing
pkg/pricing/utils.go:import (
pkg/pricing/utils.go:	"fmt"
pkg/pricing/utils.go:	"math/big"
pkg/pricing/utils.go:	"github.com/dustin/go-humanize"
pkg/pricing/utils.go:)
pkg/pricing/utils.go:var (
pkg/pricing/utils.go:	intZero = big.NewInt(0)
pkg/pricing/utils.go:	intOne  = big.NewInt(1)
pkg/pricing/utils.go:	ratZero = big.NewRat(0, 1)
pkg/pricing/utils.go:	ratOne  = big.NewRat(1, 1)
pkg/pricing/utils.go:)
pkg/pricing/utils.go:// Returns a new big.Int set to the ceiling of x.
pkg/pricing/utils.go:func ratCeil(x *big.Rat) *big.Int {
pkg/pricing/utils.go:	z := new(big.Int)
pkg/pricing/utils.go:	m := new(big.Int)
pkg/pricing/utils.go:	z.DivMod(x.Num(), x.Denom(), m)
pkg/pricing/utils.go:	if m.Cmp(intZero) == 1 {
pkg/pricing/utils.go:		z.Add(z, intOne)
pkg/pricing/utils.go:	}
pkg/pricing/utils.go:	return z
pkg/pricing/utils.go:}
pkg/pricing/utils.go:// Returns a new big.Rat set to maximum of x and y
pkg/pricing/utils.go:func ratMax(x, y *big.Rat) *big.Rat {
pkg/pricing/utils.go:	if x.Cmp(y) < 1 {
pkg/pricing/utils.go:		return y
pkg/pricing/utils.go:	}
pkg/pricing/utils.go:	return x
pkg/pricing/utils.go:}
pkg/pricing/utils.go:// Returns a new big.Rat set to minimum of x and y
pkg/pricing/utils.go:func ratMin(x, y *big.Rat) *big.Rat {
pkg/pricing/utils.go:	if x.Cmp(y) > 0 {
pkg/pricing/utils.go:		return y
pkg/pricing/utils.go:	}
pkg/pricing/utils.go:	return x
pkg/pricing/utils.go:}
pkg/pricing/utils.go:// PriceString returns a human reprensetation of a price with a currency
pkg/pricing/utils.go:func PriceString(price *big.Rat, currency string) string {
pkg/pricing/utils.go:	floatVal, _ := price.Float64()
pkg/pricing/utils.go:	return fmt.Sprintf("%s %s", humanize.Ftoa(floatVal), currency)
pkg/pricing/utils.go:}
pkg/pricing/utils_test.go:package pricing
pkg/pricing/utils_test.go:import (
pkg/pricing/utils_test.go:	"fmt"
pkg/pricing/utils_test.go:	"math/big"
pkg/pricing/utils_test.go:)
pkg/pricing/utils_test.go:func ShouldEqualBigRat(actual interface{}, expected ...interface{}) string {
pkg/pricing/utils_test.go:	actualRat := actual.(*big.Rat)
pkg/pricing/utils_test.go:	expectRat := expected[0].(*big.Rat)
pkg/pricing/utils_test.go:	cmp := actualRat.Cmp(expectRat)
pkg/pricing/utils_test.go:	if cmp == 0 {
pkg/pricing/utils_test.go:		return ""
pkg/pricing/utils_test.go:	}
pkg/pricing/utils_test.go:	output := fmt.Sprintf("big.Rat are not matching: %q != %q\n", actualRat, expectRat)
pkg/pricing/utils_test.go:	actualFloat64, _ := actualRat.Float64()
pkg/pricing/utils_test.go:	expectFloat64, _ := expectRat.Float64()
pkg/pricing/utils_test.go:	output += fmt.Sprintf("                          %f != %f", actualFloat64, expectFloat64)
pkg/pricing/utils_test.go:	return output
pkg/pricing/utils_test.go:}
pkg/scwversion/version.go:package scwversion
pkg/scwversion/version.go:var (
pkg/scwversion/version.go:	// VERSION represents the semver version of the package, it is configured at build time
pkg/scwversion/version.go:	VERSION string
pkg/scwversion/version.go:	// GITCOMMIT represents the git commit hash of the package, it is configured at build time
pkg/scwversion/version.go:	GITCOMMIT string
pkg/scwversion/version.go:)
pkg/scwversion/version_test.go:package scwversion
pkg/scwversion/version_test.go:import (
pkg/scwversion/version_test.go:	"testing"
pkg/scwversion/version_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/scwversion/version_test.go:)
pkg/scwversion/version_test.go:func TestInit(t *testing.T) {
pkg/scwversion/version_test.go:	Convey("Testing init()", t, func() {
pkg/scwversion/version_test.go:		So(VERSION, ShouldNotEqual, "")
pkg/scwversion/version_test.go:		So(GITCOMMIT, ShouldNotEqual, "")
pkg/scwversion/version_test.go:	})
pkg/scwversion/version_test.go:}
pkg/sshcommand/sshcommand.go:package sshcommand
pkg/sshcommand/sshcommand.go:import (
pkg/sshcommand/sshcommand.go:	"fmt"
pkg/sshcommand/sshcommand.go:	"strings"
pkg/sshcommand/sshcommand.go:)
pkg/sshcommand/sshcommand.go:// Command contains settings to build a ssh command
pkg/sshcommand/sshcommand.go:type Command struct {
pkg/sshcommand/sshcommand.go:	Host                string
pkg/sshcommand/sshcommand.go:	Port                int
pkg/sshcommand/sshcommand.go:	User                string
pkg/sshcommand/sshcommand.go:	SkipHostKeyChecking bool
pkg/sshcommand/sshcommand.go:	Quiet               bool
pkg/sshcommand/sshcommand.go:	SSHOptions          []string
pkg/sshcommand/sshcommand.go:	Gateway             *Command
pkg/sshcommand/sshcommand.go:	AllocateTTY         bool
pkg/sshcommand/sshcommand.go:	Command             []string
pkg/sshcommand/sshcommand.go:	Debug               bool
pkg/sshcommand/sshcommand.go:	NoEscapeCommand     bool
pkg/sshcommand/sshcommand.go:	isGateway bool
pkg/sshcommand/sshcommand.go:}
pkg/sshcommand/sshcommand.go:// New returns a minimal Command
pkg/sshcommand/sshcommand.go:func New(host string) *Command {
pkg/sshcommand/sshcommand.go:	return &Command{
pkg/sshcommand/sshcommand.go:		Host: host,
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:}
pkg/sshcommand/sshcommand.go:func (c *Command) applyDefaults() {
pkg/sshcommand/sshcommand.go:	if strings.Contains(c.Host, "@") {
pkg/sshcommand/sshcommand.go:		parts := strings.Split(c.Host, "@")
pkg/sshcommand/sshcommand.go:		c.User = parts[0]
pkg/sshcommand/sshcommand.go:		c.Host = parts[1]
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:	if c.Port == 0 {
pkg/sshcommand/sshcommand.go:		c.Port = 22
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:	if c.isGateway {
pkg/sshcommand/sshcommand.go:		c.SSHOptions = []string{"-W", "%h:%p"}
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:}
pkg/sshcommand/sshcommand.go:// Slice returns an execve compatible slice of arguments
pkg/sshcommand/sshcommand.go:func (c *Command) Slice() []string {
pkg/sshcommand/sshcommand.go:	c.applyDefaults()
pkg/sshcommand/sshcommand.go:	slice := []string{}
pkg/sshcommand/sshcommand.go:	slice = append(slice, "ssh")
pkg/sshcommand/sshcommand.go:	if c.Quiet {
pkg/sshcommand/sshcommand.go:		slice = append(slice, "-q")
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:	if c.SkipHostKeyChecking {
pkg/sshcommand/sshcommand.go:		slice = append(slice, "-o", "UserKnownHostsFile=/dev/null", "-o", "StrictHostKeyChecking=no")
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:	if len(c.SSHOptions) > 0 {
pkg/sshcommand/sshcommand.go:		slice = append(slice, c.SSHOptions...)
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:	if c.Gateway != nil {
pkg/sshcommand/sshcommand.go:		c.Gateway.isGateway = true
pkg/sshcommand/sshcommand.go:		slice = append(slice, "-o", "ProxyCommand="+c.Gateway.String())
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:	if c.User != "" {
pkg/sshcommand/sshcommand.go:		slice = append(slice, "-l", c.User)
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:	slice = append(slice, c.Host)
pkg/sshcommand/sshcommand.go:	if c.AllocateTTY {
pkg/sshcommand/sshcommand.go:		slice = append(slice, "-t", "-t")
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:	if len(c.Command) > 0 {
pkg/sshcommand/sshcommand.go:		slice = append(slice, "--", "/bin/sh", "-e")
pkg/sshcommand/sshcommand.go:		if c.Debug {
pkg/sshcommand/sshcommand.go:			slice = append(slice, "-x")
pkg/sshcommand/sshcommand.go:		}
pkg/sshcommand/sshcommand.go:		slice = append(slice, "-c")
pkg/sshcommand/sshcommand.go:		var escapedCommand []string
pkg/sshcommand/sshcommand.go:		if c.NoEscapeCommand {
pkg/sshcommand/sshcommand.go:			escapedCommand = c.Command
pkg/sshcommand/sshcommand.go:		} else {
pkg/sshcommand/sshcommand.go:			escapedCommand = []string{}
pkg/sshcommand/sshcommand.go:			for _, part := range c.Command {
pkg/sshcommand/sshcommand.go:				escapedCommand = append(escapedCommand, fmt.Sprintf("%q", part))
pkg/sshcommand/sshcommand.go:			}
pkg/sshcommand/sshcommand.go:		}
pkg/sshcommand/sshcommand.go:		slice = append(slice, fmt.Sprintf("%q", strings.Join(escapedCommand, " ")))
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:	return slice
pkg/sshcommand/sshcommand.go:}
pkg/sshcommand/sshcommand.go:// String returns a copy-pasteable command, useful for debugging
pkg/sshcommand/sshcommand.go:func (c *Command) String() string {
pkg/sshcommand/sshcommand.go:	slice := c.Slice()
pkg/sshcommand/sshcommand.go:	for i := range slice {
pkg/sshcommand/sshcommand.go:		quoted := fmt.Sprintf("%q", slice[i])
pkg/sshcommand/sshcommand.go:		if strings.Contains(slice[i], " ") || len(quoted) != len(slice[i])+2 {
pkg/sshcommand/sshcommand.go:			slice[i] = quoted
pkg/sshcommand/sshcommand.go:		}
pkg/sshcommand/sshcommand.go:	}
pkg/sshcommand/sshcommand.go:	return strings.Join(slice, " ")
pkg/sshcommand/sshcommand.go:}
pkg/sshcommand/sshcommand_test.go:package sshcommand
pkg/sshcommand/sshcommand_test.go:import (
pkg/sshcommand/sshcommand_test.go:	"fmt"
pkg/sshcommand/sshcommand_test.go:	"testing"
pkg/sshcommand/sshcommand_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/sshcommand/sshcommand_test.go:)
pkg/sshcommand/sshcommand_test.go:func ExampleCommand() {
pkg/sshcommand/sshcommand_test.go:	cmd := Command{
pkg/sshcommand/sshcommand_test.go:		Host: "1.2.3.4",
pkg/sshcommand/sshcommand_test.go:	}
pkg/sshcommand/sshcommand_test.go:	// Do stuff
pkg/sshcommand/sshcommand_test.go:	fmt.Println(cmd)
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_options() {
pkg/sshcommand/sshcommand_test.go:	cmd := Command{
pkg/sshcommand/sshcommand_test.go:		SkipHostKeyChecking: true,
pkg/sshcommand/sshcommand_test.go:		Host:                "1.2.3.4",
pkg/sshcommand/sshcommand_test.go:		Quiet:               true,
pkg/sshcommand/sshcommand_test.go:		AllocateTTY:         true,
pkg/sshcommand/sshcommand_test.go:		Command:             []string{"echo", "hello world"},
pkg/sshcommand/sshcommand_test.go:		Debug:               true,
pkg/sshcommand/sshcommand_test.go:	}
pkg/sshcommand/sshcommand_test.go:	// Do stuff
pkg/sshcommand/sshcommand_test.go:	fmt.Println(cmd)
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_complex() {
pkg/sshcommand/sshcommand_test.go:	cmd := Command{
pkg/sshcommand/sshcommand_test.go:		SkipHostKeyChecking: true,
pkg/sshcommand/sshcommand_test.go:		Host:                "1.2.3.4",
pkg/sshcommand/sshcommand_test.go:		Quiet:               true,
pkg/sshcommand/sshcommand_test.go:		AllocateTTY:         true,
pkg/sshcommand/sshcommand_test.go:		Command:             []string{"echo", "hello world"},
pkg/sshcommand/sshcommand_test.go:		Gateway: &Command{
pkg/sshcommand/sshcommand_test.go:			Host:        "5.6.7.8",
pkg/sshcommand/sshcommand_test.go:			User:        "toor",
pkg/sshcommand/sshcommand_test.go:			Quiet:       true,
pkg/sshcommand/sshcommand_test.go:			AllocateTTY: true,
pkg/sshcommand/sshcommand_test.go:		},
pkg/sshcommand/sshcommand_test.go:	}
pkg/sshcommand/sshcommand_test.go:	// Do stuff
pkg/sshcommand/sshcommand_test.go:	fmt.Println(cmd)
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_gateway() {
pkg/sshcommand/sshcommand_test.go:	cmd := Command{
pkg/sshcommand/sshcommand_test.go:		Host:    "1.2.3.4",
pkg/sshcommand/sshcommand_test.go:		Gateway: New("5.6.7.8"),
pkg/sshcommand/sshcommand_test.go:	}
pkg/sshcommand/sshcommand_test.go:	// Do stuff
pkg/sshcommand/sshcommand_test.go:	fmt.Println(cmd)
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleNew() {
pkg/sshcommand/sshcommand_test.go:	cmd := New("1.2.3.4")
pkg/sshcommand/sshcommand_test.go:	// Do stuff
pkg/sshcommand/sshcommand_test.go:	fmt.Println(cmd)
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_String() {
pkg/sshcommand/sshcommand_test.go:	fmt.Println(New("1.2.3.4").String())
pkg/sshcommand/sshcommand_test.go:	// Output: ssh 1.2.3.4
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_String_options() {
pkg/sshcommand/sshcommand_test.go:	command := Command{
pkg/sshcommand/sshcommand_test.go:		SkipHostKeyChecking: true,
pkg/sshcommand/sshcommand_test.go:		Host:                "1.2.3.4",
pkg/sshcommand/sshcommand_test.go:		Quiet:               true,
pkg/sshcommand/sshcommand_test.go:		AllocateTTY:         true,
pkg/sshcommand/sshcommand_test.go:		Command:             []string{"echo", "hello world"},
pkg/sshcommand/sshcommand_test.go:		Debug:               true,
pkg/sshcommand/sshcommand_test.go:	}
pkg/sshcommand/sshcommand_test.go:	fmt.Println(command.String())
pkg/sshcommand/sshcommand_test.go:	// Output:
pkg/sshcommand/sshcommand_test.go:	// ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no 1.2.3.4 -t -t -- /bin/sh -e -x -c "\"\\\"echo\\\" \\\"hello world\\\"\""
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_String_complex() {
pkg/sshcommand/sshcommand_test.go:	command := Command{
pkg/sshcommand/sshcommand_test.go:		SkipHostKeyChecking: true,
pkg/sshcommand/sshcommand_test.go:		Host:                "1.2.3.4",
pkg/sshcommand/sshcommand_test.go:		Quiet:               true,
pkg/sshcommand/sshcommand_test.go:		AllocateTTY:         true,
pkg/sshcommand/sshcommand_test.go:		Command:             []string{"echo", "hello world"},
pkg/sshcommand/sshcommand_test.go:		Gateway: &Command{
pkg/sshcommand/sshcommand_test.go:			SkipHostKeyChecking: true,
pkg/sshcommand/sshcommand_test.go:			Host:                "5.6.7.8",
pkg/sshcommand/sshcommand_test.go:			User:                "toor",
pkg/sshcommand/sshcommand_test.go:			Quiet:               true,
pkg/sshcommand/sshcommand_test.go:			AllocateTTY:         true,
pkg/sshcommand/sshcommand_test.go:		},
pkg/sshcommand/sshcommand_test.go:	}
pkg/sshcommand/sshcommand_test.go:	fmt.Println(command.String())
pkg/sshcommand/sshcommand_test.go:	// Output:
pkg/sshcommand/sshcommand_test.go:	// ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "ProxyCommand=ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -W %h:%p -l toor 5.6.7.8 -t -t" 1.2.3.4 -t -t -- /bin/sh -e -c "\"\\\"echo\\\" \\\"hello world\\\"\""
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_Slice() {
pkg/sshcommand/sshcommand_test.go:	fmt.Println(New("1.2.3.4").Slice())
pkg/sshcommand/sshcommand_test.go:	// Output: [ssh 1.2.3.4]
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_Slice_user() {
pkg/sshcommand/sshcommand_test.go:	fmt.Println(New("root@1.2.3.4").Slice())
pkg/sshcommand/sshcommand_test.go:	// Output: [ssh -l root 1.2.3.4]
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_Slice_options() {
pkg/sshcommand/sshcommand_test.go:	command := Command{
pkg/sshcommand/sshcommand_test.go:		SkipHostKeyChecking: true,
pkg/sshcommand/sshcommand_test.go:		Host:                "1.2.3.4",
pkg/sshcommand/sshcommand_test.go:		Quiet:               true,
pkg/sshcommand/sshcommand_test.go:		AllocateTTY:         true,
pkg/sshcommand/sshcommand_test.go:		Command:             []string{"echo", "hello world"},
pkg/sshcommand/sshcommand_test.go:		Debug:               true,
pkg/sshcommand/sshcommand_test.go:		User:                "root",
pkg/sshcommand/sshcommand_test.go:	}
pkg/sshcommand/sshcommand_test.go:	fmt.Printf("%q\n", command.Slice())
pkg/sshcommand/sshcommand_test.go:	// Output:
pkg/sshcommand/sshcommand_test.go:	// ["ssh" "-q" "-o" "UserKnownHostsFile=/dev/null" "-o" "StrictHostKeyChecking=no" "-l" "root" "1.2.3.4" "-t" "-t" "--" "/bin/sh" "-e" "-x" "-c" "\"\\\"echo\\\" \\\"hello world\\\"\""]
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_Slice_gateway() {
pkg/sshcommand/sshcommand_test.go:	command := Command{
pkg/sshcommand/sshcommand_test.go:		Host:    "1.2.3.4",
pkg/sshcommand/sshcommand_test.go:		Gateway: New("5.6.7.8"),
pkg/sshcommand/sshcommand_test.go:	}
pkg/sshcommand/sshcommand_test.go:	fmt.Printf("%q\n", command.Slice())
pkg/sshcommand/sshcommand_test.go:	// Output:
pkg/sshcommand/sshcommand_test.go:	// ["ssh" "-o" "ProxyCommand=ssh -W %h:%p 5.6.7.8" "1.2.3.4"]
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func ExampleCommand_Slice_complex() {
pkg/sshcommand/sshcommand_test.go:	command := Command{
pkg/sshcommand/sshcommand_test.go:		SkipHostKeyChecking: true,
pkg/sshcommand/sshcommand_test.go:		Host:                "1.2.3.4",
pkg/sshcommand/sshcommand_test.go:		Quiet:               true,
pkg/sshcommand/sshcommand_test.go:		AllocateTTY:         true,
pkg/sshcommand/sshcommand_test.go:		Command:             []string{"echo", "hello world"},
pkg/sshcommand/sshcommand_test.go:		NoEscapeCommand:     true,
pkg/sshcommand/sshcommand_test.go:		Gateway: &Command{
pkg/sshcommand/sshcommand_test.go:			SkipHostKeyChecking: true,
pkg/sshcommand/sshcommand_test.go:			Host:                "5.6.7.8",
pkg/sshcommand/sshcommand_test.go:			User:                "toor",
pkg/sshcommand/sshcommand_test.go:			Quiet:               true,
pkg/sshcommand/sshcommand_test.go:			AllocateTTY:         true,
pkg/sshcommand/sshcommand_test.go:		},
pkg/sshcommand/sshcommand_test.go:	}
pkg/sshcommand/sshcommand_test.go:	fmt.Printf("%q\n", command.Slice())
pkg/sshcommand/sshcommand_test.go:	// Output:
pkg/sshcommand/sshcommand_test.go:	// ["ssh" "-q" "-o" "UserKnownHostsFile=/dev/null" "-o" "StrictHostKeyChecking=no" "-o" "ProxyCommand=ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -W %h:%p -l toor 5.6.7.8 -t -t" "1.2.3.4" "-t" "-t" "--" "/bin/sh" "-e" "-c" "\"echo hello world\""]
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func TestCommand_defaults(t *testing.T) {
pkg/sshcommand/sshcommand_test.go:	Convey("Testing Command{} default values", t, func() {
pkg/sshcommand/sshcommand_test.go:		command := Command{}
pkg/sshcommand/sshcommand_test.go:		So(command.Host, ShouldEqual, "")
pkg/sshcommand/sshcommand_test.go:		So(command.Port, ShouldEqual, 0)
pkg/sshcommand/sshcommand_test.go:		So(command.User, ShouldEqual, "")
pkg/sshcommand/sshcommand_test.go:		So(command.SkipHostKeyChecking, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:		So(command.Quiet, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:		So(len(command.SSHOptions), ShouldEqual, 0)
pkg/sshcommand/sshcommand_test.go:		So(command.Gateway, ShouldEqual, nil)
pkg/sshcommand/sshcommand_test.go:		So(command.AllocateTTY, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:		So(len(command.Command), ShouldEqual, 0)
pkg/sshcommand/sshcommand_test.go:		So(command.Debug, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:		So(command.NoEscapeCommand, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:		So(command.isGateway, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:	})
pkg/sshcommand/sshcommand_test.go:}
pkg/sshcommand/sshcommand_test.go:func TestCommand_applyDefaults(t *testing.T) {
pkg/sshcommand/sshcommand_test.go:	Convey("Testing Command.applyDefaults()", t, func() {
pkg/sshcommand/sshcommand_test.go:		Convey("On a Command{}", func() {
pkg/sshcommand/sshcommand_test.go:			command := Command{}
pkg/sshcommand/sshcommand_test.go:			command.applyDefaults()
pkg/sshcommand/sshcommand_test.go:			So(command.Host, ShouldEqual, "")
pkg/sshcommand/sshcommand_test.go:			So(command.Port, ShouldEqual, 22)
pkg/sshcommand/sshcommand_test.go:			So(command.User, ShouldEqual, "")
pkg/sshcommand/sshcommand_test.go:			So(command.SkipHostKeyChecking, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(command.Quiet, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(len(command.SSHOptions), ShouldEqual, 0)
pkg/sshcommand/sshcommand_test.go:			So(command.Gateway, ShouldEqual, nil)
pkg/sshcommand/sshcommand_test.go:			So(command.AllocateTTY, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(len(command.Command), ShouldEqual, 0)
pkg/sshcommand/sshcommand_test.go:			So(command.Debug, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(command.NoEscapeCommand, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(command.isGateway, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:		})
pkg/sshcommand/sshcommand_test.go:		Convey("On a New(\"example.com\")", func() {
pkg/sshcommand/sshcommand_test.go:			command := New("example.com")
pkg/sshcommand/sshcommand_test.go:			command.applyDefaults()
pkg/sshcommand/sshcommand_test.go:			So(command.Host, ShouldEqual, "example.com")
pkg/sshcommand/sshcommand_test.go:			So(command.Port, ShouldEqual, 22)
pkg/sshcommand/sshcommand_test.go:			So(command.User, ShouldEqual, "")
pkg/sshcommand/sshcommand_test.go:			So(command.SkipHostKeyChecking, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(command.Quiet, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(len(command.SSHOptions), ShouldEqual, 0)
pkg/sshcommand/sshcommand_test.go:			So(command.Gateway, ShouldEqual, nil)
pkg/sshcommand/sshcommand_test.go:			So(command.AllocateTTY, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(len(command.Command), ShouldEqual, 0)
pkg/sshcommand/sshcommand_test.go:			So(command.Debug, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(command.NoEscapeCommand, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(command.isGateway, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:		})
pkg/sshcommand/sshcommand_test.go:		Convey("On a New(\"toto@example.com\")", func() {
pkg/sshcommand/sshcommand_test.go:			command := New("toto@example.com")
pkg/sshcommand/sshcommand_test.go:			command.applyDefaults()
pkg/sshcommand/sshcommand_test.go:			So(command.Host, ShouldEqual, "example.com")
pkg/sshcommand/sshcommand_test.go:			So(command.Port, ShouldEqual, 22)
pkg/sshcommand/sshcommand_test.go:			So(command.User, ShouldEqual, "toto")
pkg/sshcommand/sshcommand_test.go:			So(command.SkipHostKeyChecking, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(command.Quiet, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(len(command.SSHOptions), ShouldEqual, 0)
pkg/sshcommand/sshcommand_test.go:			So(command.Gateway, ShouldEqual, nil)
pkg/sshcommand/sshcommand_test.go:			So(command.AllocateTTY, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(len(command.Command), ShouldEqual, 0)
pkg/sshcommand/sshcommand_test.go:			So(command.Debug, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(command.NoEscapeCommand, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:			So(command.isGateway, ShouldEqual, false)
pkg/sshcommand/sshcommand_test.go:		})
pkg/sshcommand/sshcommand_test.go:	})
pkg/sshcommand/sshcommand_test.go:}
pkg/utils/quiet.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/utils/quiet.go:// Use of this source code is governed by a MIT-style
pkg/utils/quiet.go:// license that can be found in the LICENSE.md file.
pkg/utils/quiet.go:// Package utils contains logquiet
pkg/utils/quiet.go:package utils
pkg/utils/quiet.go:import (
pkg/utils/quiet.go:	"fmt"
pkg/utils/quiet.go:	"os"
pkg/utils/quiet.go:)
pkg/utils/quiet.go:// LogQuietStruct is a struct to store information about quiet state
pkg/utils/quiet.go:type LogQuietStruct struct {
pkg/utils/quiet.go:	quiet bool
pkg/utils/quiet.go:}
pkg/utils/quiet.go:var instanceQuiet LogQuietStruct
pkg/utils/quiet.go:// Quiet enable or disable quiet
pkg/utils/quiet.go:func Quiet(option bool) {
pkg/utils/quiet.go:	instanceQuiet.quiet = option
pkg/utils/quiet.go:}
pkg/utils/quiet.go:// LogQuiet Displays info if quiet is activated
pkg/utils/quiet.go:func LogQuiet(str string) {
pkg/utils/quiet.go:	if instanceQuiet.quiet == false {
pkg/utils/quiet.go:		fmt.Fprintf(os.Stderr, "%s", str)
pkg/utils/quiet.go:	}
pkg/utils/quiet.go:}
pkg/utils/utils.go:// Copyright (C) 2015 Scaleway. All rights reserved.
pkg/utils/utils.go:// Use of this source code is governed by a MIT-style
pkg/utils/utils.go:// license that can be found in the LICENSE.md file.
pkg/utils/utils.go:// scw helpers
pkg/utils/utils.go:// Package utils contains helpers
pkg/utils/utils.go:package utils
pkg/utils/utils.go:import (
pkg/utils/utils.go:	"crypto/md5"
pkg/utils/utils.go:	"errors"
pkg/utils/utils.go:	"fmt"
pkg/utils/utils.go:	"io"
pkg/utils/utils.go:	"net"
pkg/utils/utils.go:	"os"
pkg/utils/utils.go:	"os/exec"
pkg/utils/utils.go:	"path"
pkg/utils/utils.go:	"path/filepath"
pkg/utils/utils.go:	"reflect"
pkg/utils/utils.go:	"regexp"
pkg/utils/utils.go:	"strings"
pkg/utils/utils.go:	"time"
pkg/utils/utils.go:	"golang.org/x/crypto/ssh"
pkg/utils/utils.go:	"github.com/Sirupsen/logrus"
pkg/utils/utils.go:	log "github.com/Sirupsen/logrus"
pkg/utils/utils.go:	"github.com/moul/gotty-client"
pkg/utils/utils.go:	"github.com/scaleway/scaleway-cli/pkg/sshcommand"
pkg/utils/utils.go:)
pkg/utils/utils.go:// SpawnRedirection is used to redirects the fluxes
pkg/utils/utils.go:type SpawnRedirection struct {
pkg/utils/utils.go:	Stdin  io.Reader
pkg/utils/utils.go:	Stdout io.Writer
pkg/utils/utils.go:	Stderr io.Writer
pkg/utils/utils.go:}
pkg/utils/utils.go:// SSHExec executes a command over SSH and redirects file-descriptors
pkg/utils/utils.go:func SSHExec(publicIPAddress string, privateIPAddress string, command []string, checkConnection bool, gateway string) error {
pkg/utils/utils.go:	gatewayUser := "root"
pkg/utils/utils.go:	gatewayIPAddress := gateway
pkg/utils/utils.go:	if strings.Contains(gateway, "@") {
pkg/utils/utils.go:		parts := strings.Split(gatewayIPAddress, "@")
pkg/utils/utils.go:		gatewayUser = parts[0]
pkg/utils/utils.go:		gatewayIPAddress = parts[1]
pkg/utils/utils.go:		gateway = gatewayUser + "@" + gatewayIPAddress
pkg/utils/utils.go:	}
pkg/utils/utils.go:	if publicIPAddress == "" && gatewayIPAddress == "" {
pkg/utils/utils.go:		return errors.New("server does not have public IP")
pkg/utils/utils.go:	}
pkg/utils/utils.go:	if privateIPAddress == "" && gatewayIPAddress != "" {
pkg/utils/utils.go:		return errors.New("server does not have private IP")
pkg/utils/utils.go:	}
pkg/utils/utils.go:	if checkConnection {
pkg/utils/utils.go:		useGateway := gatewayIPAddress != ""
pkg/utils/utils.go:		if useGateway && !IsTCPPortOpen(fmt.Sprintf("%s:22", gatewayIPAddress)) {
pkg/utils/utils.go:			return errors.New("gateway is not available, try again later")
pkg/utils/utils.go:		}
pkg/utils/utils.go:		if !useGateway && !IsTCPPortOpen(fmt.Sprintf("%s:22", publicIPAddress)) {
pkg/utils/utils.go:			return errors.New("server is not ready, try again later")
pkg/utils/utils.go:		}
pkg/utils/utils.go:	}
pkg/utils/utils.go:	sshCommand := NewSSHExecCmd(publicIPAddress, privateIPAddress, true, command, gateway)
pkg/utils/utils.go:	log.Debugf("Executing: %s", sshCommand)
pkg/utils/utils.go:	spawn := exec.Command("ssh", sshCommand.Slice()[1:]...)
pkg/utils/utils.go:	spawn.Stdout = os.Stdout
pkg/utils/utils.go:	spawn.Stdin = os.Stdin
pkg/utils/utils.go:	spawn.Stderr = os.Stderr
pkg/utils/utils.go:	return spawn.Run()
pkg/utils/utils.go:}
pkg/utils/utils.go:// NewSSHExecCmd computes execve compatible arguments to run a command via ssh
pkg/utils/utils.go:func NewSSHExecCmd(publicIPAddress string, privateIPAddress string, allocateTTY bool, command []string, gatewayIPAddress string) *sshcommand.Command {
pkg/utils/utils.go:	quiet := os.Getenv("DEBUG") != "1"
pkg/utils/utils.go:	secureExec := os.Getenv("exec_secure") == "1"
pkg/utils/utils.go:	sshCommand := &sshcommand.Command{
pkg/utils/utils.go:		AllocateTTY:         true,
pkg/utils/utils.go:		Command:             command,
pkg/utils/utils.go:		Host:                publicIPAddress,
pkg/utils/utils.go:		Quiet:               quiet,
pkg/utils/utils.go:		SkipHostKeyChecking: !secureExec,
pkg/utils/utils.go:		User:                "root",
pkg/utils/utils.go:		NoEscapeCommand:     true,
pkg/utils/utils.go:	}
pkg/utils/utils.go:	if gatewayIPAddress != "" {
pkg/utils/utils.go:		sshCommand.Host = privateIPAddress
pkg/utils/utils.go:		sshCommand.Gateway = &sshcommand.Command{
pkg/utils/utils.go:			Host:                gatewayIPAddress,
pkg/utils/utils.go:			SkipHostKeyChecking: !secureExec,
pkg/utils/utils.go:			AllocateTTY:         true,
pkg/utils/utils.go:			Quiet:               quiet,
pkg/utils/utils.go:			User:                "root",
pkg/utils/utils.go:		}
pkg/utils/utils.go:	}
pkg/utils/utils.go:	return sshCommand
pkg/utils/utils.go:}
pkg/utils/utils.go:// GeneratingAnSSHKey generates an SSH key
pkg/utils/utils.go:func GeneratingAnSSHKey(cfg SpawnRedirection, path string, name string) (string, error) {
pkg/utils/utils.go:	args := []string{
pkg/utils/utils.go:		"-t",
pkg/utils/utils.go:		"rsa",
pkg/utils/utils.go:		"-b",
pkg/utils/utils.go:		"4096",
pkg/utils/utils.go:		"-f",
pkg/utils/utils.go:		filepath.Join(path, name),
pkg/utils/utils.go:		"-N",
pkg/utils/utils.go:		"",
pkg/utils/utils.go:		"-C",
pkg/utils/utils.go:		"",
pkg/utils/utils.go:	}
pkg/utils/utils.go:	log.Infof("Executing commands %v", args)
pkg/utils/utils.go:	spawn := exec.Command("ssh-keygen", args...)
pkg/utils/utils.go:	spawn.Stdout = cfg.Stdout
pkg/utils/utils.go:	spawn.Stdin = cfg.Stdin
pkg/utils/utils.go:	spawn.Stderr = cfg.Stderr
pkg/utils/utils.go:	return args[5], spawn.Run()
pkg/utils/utils.go:}
pkg/utils/utils.go:// WaitForTCPPortOpen calls IsTCPPortOpen in a loop
pkg/utils/utils.go:func WaitForTCPPortOpen(dest string) error {
pkg/utils/utils.go:	for {
pkg/utils/utils.go:		if IsTCPPortOpen(dest) {
pkg/utils/utils.go:			break
pkg/utils/utils.go:		}
pkg/utils/utils.go:		time.Sleep(1 * time.Second)
pkg/utils/utils.go:	}
pkg/utils/utils.go:	return nil
pkg/utils/utils.go:}
pkg/utils/utils.go:// IsTCPPortOpen returns true if a TCP communication with "host:port" can be initialized
pkg/utils/utils.go:func IsTCPPortOpen(dest string) bool {
pkg/utils/utils.go:	conn, err := net.DialTimeout("tcp", dest, time.Duration(2000)*time.Millisecond)
pkg/utils/utils.go:	if err == nil {
pkg/utils/utils.go:		defer conn.Close()
pkg/utils/utils.go:	}
pkg/utils/utils.go:	return err == nil
pkg/utils/utils.go:}
pkg/utils/utils.go:// TruncIf ensures the input string does not exceed max size if cond is met
pkg/utils/utils.go:func TruncIf(str string, max int, cond bool) string {
pkg/utils/utils.go:	if cond && len(str) > max {
pkg/utils/utils.go:		return str[:max]
pkg/utils/utils.go:	}
pkg/utils/utils.go:	return str
pkg/utils/utils.go:}
pkg/utils/utils.go:// Wordify convert complex name to a single word without special shell characters
pkg/utils/utils.go:func Wordify(str string) string {
pkg/utils/utils.go:	str = regexp.MustCompile(`[^a-zA-Z0-9-]`).ReplaceAllString(str, "_")
pkg/utils/utils.go:	str = regexp.MustCompile(`__+`).ReplaceAllString(str, "_")
pkg/utils/utils.go:	str = strings.Trim(str, "_")
pkg/utils/utils.go:	return str
pkg/utils/utils.go:}
pkg/utils/utils.go:// PathToTARPathparts returns the two parts of a unix path
pkg/utils/utils.go:func PathToTARPathparts(fullPath string) (string, string) {
pkg/utils/utils.go:	fullPath = strings.TrimRight(fullPath, "/")
pkg/utils/utils.go:	return path.Dir(fullPath), path.Base(fullPath)
pkg/utils/utils.go:}
pkg/utils/utils.go:// RemoveDuplicates transforms an array into a unique array
pkg/utils/utils.go:func RemoveDuplicates(elements []string) []string {
pkg/utils/utils.go:	encountered := map[string]bool{}
pkg/utils/utils.go:	// Create a map of all unique elements.
pkg/utils/utils.go:	for v := range elements {
pkg/utils/utils.go:		encountered[elements[v]] = true
pkg/utils/utils.go:	}
pkg/utils/utils.go:	// Place all keys from the map into a slice.
pkg/utils/utils.go:	result := []string{}
pkg/utils/utils.go:	for key := range encountered {
pkg/utils/utils.go:		result = append(result, key)
pkg/utils/utils.go:	}
pkg/utils/utils.go:	return result
pkg/utils/utils.go:}
pkg/utils/utils.go:// AttachToSerial tries to connect to server serial using 'gotty-client' and fallback with a help message
pkg/utils/utils.go:func AttachToSerial(serverID string, apiToken string) (*gottyclient.Client, chan bool, error) {
pkg/utils/utils.go:	gottyURL := os.Getenv("SCW_GOTTY_URL")
pkg/utils/utils.go:	if gottyURL == "" {
pkg/utils/utils.go:		gottyURL = "https://tty.scaleway.com/v2/"
pkg/utils/utils.go:	}
pkg/utils/utils.go:	URL := fmt.Sprintf("%s?arg=%s&arg=%s", gottyURL, apiToken, serverID)
pkg/utils/utils.go:	logrus.Debug("Connection to ", URL)
pkg/utils/utils.go:	gottycli, err := gottyclient.NewClient(URL)
pkg/utils/utils.go:	if err != nil {
pkg/utils/utils.go:		return nil, nil, err
pkg/utils/utils.go:	}
pkg/utils/utils.go:	if os.Getenv("SCW_TLSVERIFY") == "0" {
pkg/utils/utils.go:		gottycli.SkipTLSVerify = true
pkg/utils/utils.go:	}
pkg/utils/utils.go:	if err = gottycli.Connect(); err != nil {
pkg/utils/utils.go:		return nil, nil, err
pkg/utils/utils.go:	}
pkg/utils/utils.go:	done := make(chan bool)
pkg/utils/utils.go:	fmt.Println("You are connected, type 'Ctrl+q' to quit.")
pkg/utils/utils.go:	go func() {
pkg/utils/utils.go:		gottycli.Loop()
pkg/utils/utils.go:		gottycli.Close()
pkg/utils/utils.go:		done <- true
pkg/utils/utils.go:	}()
pkg/utils/utils.go:	return gottycli, done, nil
pkg/utils/utils.go:}
pkg/utils/utils.go:func rfc4716hex(data []byte) string {
pkg/utils/utils.go:	fingerprint := ""
pkg/utils/utils.go:	for i := 0; i < len(data); i++ {
pkg/utils/utils.go:		fingerprint = fmt.Sprintf("%s%0.2x", fingerprint, data[i])
pkg/utils/utils.go:		if i != len(data)-1 {
pkg/utils/utils.go:			fingerprint = fingerprint + ":"
pkg/utils/utils.go:		}
pkg/utils/utils.go:	}
pkg/utils/utils.go:	return fingerprint
pkg/utils/utils.go:}
pkg/utils/utils.go:// SSHGetFingerprint returns the fingerprint of an SSH key
pkg/utils/utils.go:func SSHGetFingerprint(key []byte) (string, error) {
pkg/utils/utils.go:	publicKey, comment, _, _, err := ssh.ParseAuthorizedKey(key)
pkg/utils/utils.go:	if err != nil {
pkg/utils/utils.go:		return "", err
pkg/utils/utils.go:	}
pkg/utils/utils.go:	switch reflect.TypeOf(publicKey).String() {
pkg/utils/utils.go:	case "*ssh.rsaPublicKey", "*ssh.dsaPublicKey", "*ssh.ecdsaPublicKey":
pkg/utils/utils.go:		md5sum := md5.Sum(publicKey.Marshal())
pkg/utils/utils.go:		return publicKey.Type() + " " + rfc4716hex(md5sum[:]) + " " + comment, nil
pkg/utils/utils.go:	default:
pkg/utils/utils.go:		return "", errors.New("Can't handle this key")
pkg/utils/utils.go:	}
pkg/utils/utils.go:}
pkg/utils/utils_test.go:package utils
pkg/utils/utils_test.go:import (
pkg/utils/utils_test.go:	"io/ioutil"
pkg/utils/utils_test.go:	"os"
pkg/utils/utils_test.go:	"path/filepath"
pkg/utils/utils_test.go:	"sort"
pkg/utils/utils_test.go:	"testing"
pkg/utils/utils_test.go:	. "github.com/smartystreets/goconvey/convey"
pkg/utils/utils_test.go:)
pkg/utils/utils_test.go:func TestWordify(t *testing.T) {
pkg/utils/utils_test.go:	Convey("Testing Wordify()", t, func() {
pkg/utils/utils_test.go:		So(Wordify("Hello World 42 !!"), ShouldEqual, "Hello_World_42")
pkg/utils/utils_test.go:		So(Wordify("  Hello   World   42   !!  "), ShouldEqual, "Hello_World_42")
pkg/utils/utils_test.go:		So(Wordify("Hello_World_42"), ShouldEqual, "Hello_World_42")
pkg/utils/utils_test.go:		So(Wordify(""), ShouldEqual, "")
pkg/utils/utils_test.go:	})
pkg/utils/utils_test.go:}
pkg/utils/utils_test.go:func TestTruncIf(t *testing.T) {
pkg/utils/utils_test.go:	Convey("Testing TruncIf()", t, func() {
pkg/utils/utils_test.go:		So(TruncIf("Hello World", 5, false), ShouldEqual, "Hello World")
pkg/utils/utils_test.go:		So(TruncIf("Hello World", 5, true), ShouldEqual, "Hello")
pkg/utils/utils_test.go:		So(TruncIf("Hello World", 50, false), ShouldEqual, "Hello World")
pkg/utils/utils_test.go:		So(TruncIf("Hello World", 50, true), ShouldEqual, "Hello World")
pkg/utils/utils_test.go:	})
pkg/utils/utils_test.go:}
pkg/utils/utils_test.go:func TestPathToTARPathparts(t *testing.T) {
pkg/utils/utils_test.go:	Convey("Testing PathToTARPathparts()", t, func() {
pkg/utils/utils_test.go:		dir, base := PathToTARPathparts("/etc/passwd")
pkg/utils/utils_test.go:		So([]string{"/etc", "passwd"}, ShouldResemble, []string{dir, base})
pkg/utils/utils_test.go:		dir, base = PathToTARPathparts("/etc")
pkg/utils/utils_test.go:		So([]string{"/", "etc"}, ShouldResemble, []string{dir, base})
pkg/utils/utils_test.go:		dir, base = PathToTARPathparts("/etc/")
pkg/utils/utils_test.go:		So([]string{"/", "etc"}, ShouldResemble, []string{dir, base})
pkg/utils/utils_test.go:		dir, base = PathToTARPathparts("/long/path/to/file")
pkg/utils/utils_test.go:		So([]string{"/long/path/to", "file"}, ShouldResemble, []string{dir, base})
pkg/utils/utils_test.go:		dir, base = PathToTARPathparts("/long/path/to/dir/")
pkg/utils/utils_test.go:		So([]string{"/long/path/to", "dir"}, ShouldResemble, []string{dir, base})
pkg/utils/utils_test.go:	})
pkg/utils/utils_test.go:}
pkg/utils/utils_test.go:func TestRemoveDuplicates(t *testing.T) {
pkg/utils/utils_test.go:	Convey("Testing RemoveDuplicates()", t, func() {
pkg/utils/utils_test.go:		slice := RemoveDuplicates([]string{"a", "b", "c", "a"})
pkg/utils/utils_test.go:		sort.Strings(slice)
pkg/utils/utils_test.go:		So(slice, ShouldResemble, []string{"a", "b", "c"})
pkg/utils/utils_test.go:		slice = RemoveDuplicates([]string{"a", "b", "c", "a"})
pkg/utils/utils_test.go:		sort.Strings(slice)
pkg/utils/utils_test.go:		So(slice, ShouldResemble, []string{"a", "b", "c"})
pkg/utils/utils_test.go:		slice = RemoveDuplicates([]string{"a", "b", "c", "a", "a", "b", "d"})
pkg/utils/utils_test.go:		sort.Strings(slice)
pkg/utils/utils_test.go:		So(slice, ShouldResemble, []string{"a", "b", "c", "d"})
pkg/utils/utils_test.go:		slice = RemoveDuplicates([]string{"a", "b", "c", "a", ""})
pkg/utils/utils_test.go:		sort.Strings(slice)
pkg/utils/utils_test.go:		So(slice, ShouldResemble, []string{"", "a", "b", "c"})
pkg/utils/utils_test.go:	})
pkg/utils/utils_test.go:}
pkg/utils/utils_test.go:func TestGeneratingAnSSHKey(t *testing.T) {
pkg/utils/utils_test.go:	Convey("Testing GeneratingAnSSHKey()", t, func() {
pkg/utils/utils_test.go:		streams := SpawnRedirection{
pkg/utils/utils_test.go:			Stdout: os.Stdout,
pkg/utils/utils_test.go:			Stderr: os.Stderr,
pkg/utils/utils_test.go:			Stdin:  os.Stdin,
pkg/utils/utils_test.go:		}
pkg/utils/utils_test.go:		tmpDir, err := ioutil.TempDir("/tmp", "scaleway-test")
pkg/utils/utils_test.go:		So(err, ShouldBeNil)
pkg/utils/utils_test.go:		tmpFile, err := ioutil.TempFile(tmpDir, "ssh-key")
pkg/utils/utils_test.go:		So(err, ShouldBeNil)
pkg/utils/utils_test.go:		err = os.Remove(tmpFile.Name())
pkg/utils/utils_test.go:		So(err, ShouldBeNil)
pkg/utils/utils_test.go:		filePath, err := GeneratingAnSSHKey(streams, tmpDir, filepath.Base(tmpFile.Name()))
pkg/utils/utils_test.go:		So(err, ShouldBeNil)
pkg/utils/utils_test.go:		So(filePath, ShouldEqual, tmpFile.Name())
pkg/utils/utils_test.go:		os.Remove(tmpFile.Name())
pkg/utils/utils_test.go:	})
pkg/utils/utils_test.go:}
Makefile:GOENV ?=	GO15VENDOREXPERIMENT=1
Makefile:GODEP ?=	$(GOENV) godep
Makefile:GO ?=		$(GOENV) go
Makefile:SOURCES :=	$(shell find . -name "*.go")
Makefile:PORT ?=		8080
Makefile:all: build
Makefile:.PHONY: build
Makefile:build: moul-showcase
Makefile:.PHONY: test
Makefile:test:
Makefile:	$(GO) get github.com/tools/godep
Makefile:	$(GODEP) restore
Makefile:	$(GO) get -t .
Makefile:	$(GO) test -v .
Makefile:.PHONY: godep-save
Makefile:godep-save:
Makefile:	$(GO) get github.com/tools/godep
Makefile:.PHONY: godep-update
Makefile:godep-update:
Makefile:	rm -rf vendor Godeps
Makefile:	mv Godeps/_workspace/src vendor
Makefile:	rm -rf Godeps/_workspace
Makefile:.PHONY: cover
Makefile:cover:
Makefile:	rm -f profile.out
Makefile:	$(GO) test -covermode=count -coverpkg=. -coverprofile=profile.out
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	$(GO) get github.com/smartysteets/goconvey
Makefile:	goconvey -cover -port=9032 -workDir="$(shell realpath .)" -depth=-1
Makefile:.PHONY: clean
Makefile:clean:
Makefile:	rm -rf moul-showcase
Makefile:moul-showcase: $(SOURCES)
Makefile:	$(GO) build -o $@ ./cmd/$@
Makefile:.PHONY: goapp_serve
Makefile:goapp_serve:
Makefile:	goapp serve ./appspot/app.yaml
Makefile:.PHONY: goapp_deploy
Makefile:goapp_deploy:
Makefile:	goapp deploy -application moul-showcase ./appspot/app.yaml
Makefile:heroku_deploy:
Makefile:	git remote add heroku https://git.heroku.com/moul-showcase.git || true
Makefile:	git push heroku master
Makefile:dokku_deploy:
Makefile:	git remote add dokku dokku@dokku.m.42.am:moul-showcase || true
Makefile:	git push dokku master
Makefile:.PHONY: gin
Makefile:gin:
Makefile:	$(GO) get ./...
Makefile:	$(GO) get github.com/codegangsta/gin
Makefile:	cd ./cmd/moul-showcase; $(GOENV) gin --immediate --port=$(PORT) server
Procfile:web: moul-showcase server
anonuuid.go:package moulshowcase
anonuuid.go:import (
anonuuid.go:	"bufio"
anonuuid.go:	"io"
anonuuid.go:	"net/url"
anonuuid.go:	"github.com/gorilla/schema"
anonuuid.go:	"github.com/moul/anonuuid"
anonuuid.go:)
anonuuid.go:func init() {
anonuuid.go:	RegisterAction("anonuuid", AnonuuidAction)
anonuuid.go:}
anonuuid.go:func AnonuuidAction(qs string, stdin io.Reader) (*ActionResponse, error) {
anonuuid.go:	// Define arguments
anonuuid.go:	var opts struct {
anonuuid.go:		Hexspeak      bool   `schema:"hexspeak"`
anonuuid.go:		Random        bool   `schema:"random"`
anonuuid.go:		Prefix        string `schema:"prefix"`
anonuuid.go:		Suffix        string `schema:"suffix"`
anonuuid.go:		KeepBeginning bool   `schema:"keep-beginning"`
anonuuid.go:		KeepEnd       bool   `schema:"keep-end"`
anonuuid.go:	}
anonuuid.go:	// FIXME: handle --help
anonuuid.go:	// Set defaults
anonuuid.go:	opts.Random = true
anonuuid.go:	// Parse query
anonuuid.go:	m, err := url.ParseQuery(qs)
anonuuid.go:	if err != nil {
anonuuid.go:		return nil, err
anonuuid.go:	}
anonuuid.go:	if len(m) > 0 {
anonuuid.go:		// FIXME: if in web mode -> redirect to have options demo in the URL
anonuuid.go:		decoder := schema.NewDecoder()
anonuuid.go:		if err := decoder.Decode(&opts, m); err != nil {
anonuuid.go:			return nil, err
anonuuid.go:		}
anonuuid.go:	}
anonuuid.go:	// FIXME: validate input (max size etc)
anonuuid.go:	// Create anonuuid
anonuuid.go:	encoder := anonuuid.New()
anonuuid.go:	encoder.Hexspeak = opts.Hexspeak
anonuuid.go:	encoder.Random = opts.Random
anonuuid.go:	encoder.Prefix = opts.Prefix
anonuuid.go:	encoder.Suffix = opts.Suffix
anonuuid.go:	encoder.KeepBeginning = opts.KeepBeginning
anonuuid.go:	encoder.KeepEnd = opts.KeepEnd
anonuuid.go:	scanner := bufio.NewScanner(stdin)
anonuuid.go:	output := ""
anonuuid.go:	for scanner.Scan() {
anonuuid.go:		line := scanner.Text()
anonuuid.go:		output += encoder.Sanitize(line) + "\n"
anonuuid.go:	}
anonuuid.go:	return PlainResponse(output), nil
anonuuid.go:}
appspot/app.go:package moulasaservice
appspot/app.go:import (
appspot/app.go:	"encoding/json"
appspot/app.go:	"fmt"
appspot/app.go:	"net/http"
appspot/app.go:	"net/url"
appspot/app.go:	"strings"
appspot/app.go:	"github.com/moul/showcase"
appspot/app.go:)
appspot/app.go:func init() {
appspot/app.go:	http.HandleFunc("/", indexHandler)
appspot/app.go:	for name := range moulshowcase.Actions() {
appspot/app.go:		http.HandleFunc(fmt.Sprintf("/%s", name), actionHandler)
appspot/app.go:	}
appspot/app.go:}
appspot/app.go:func indexHandler(w http.ResponseWriter, r *http.Request) {
appspot/app.go:	w.Header().Set("Content-Type", "application/json; charset=utf-8")
appspot/app.go:	var payload struct {
appspot/app.go:		Services []string `json:"services"`
appspot/app.go:	}
appspot/app.go:	payload.Services = make([]string, 0)
appspot/app.go:	for action := range moulshowcase.Actions() {
appspot/app.go:		payload.Services = append(payload.Services, fmt.Sprintf("/%s", action))
appspot/app.go:	}
appspot/app.go:	enc := json.NewEncoder(w)
appspot/app.go:	if err := enc.Encode(payload); err != nil {
appspot/app.go:		http.Error(w, fmt.Sprintf("json encode error: %v\n", err), 500)
appspot/app.go:	}
appspot/app.go:}
appspot/app.go:func actionHandler(w http.ResponseWriter, r *http.Request) {
appspot/app.go:	path := strings.TrimLeft(r.URL.Path, "/")
appspot/app.go:	if fn, found := moulshowcase.Actions()[path]; found {
appspot/app.go:		// parse CLI arguments
appspot/app.go:		u, err := url.Parse(r.URL.String())
appspot/app.go:		if err != nil {
appspot/app.go:			http.Error(w, fmt.Sprintf("failed to parse url %q: %v", r.URL.String(), err), 500)
appspot/app.go:		}
appspot/app.go:		// call action
appspot/app.go:		ret, err := fn(u.RawQuery, r.Body)
appspot/app.go:		// render result
appspot/app.go:		if err != nil {
appspot/app.go:			http.Error(w, fmt.Sprintf("service error: %v\n", err), 500)
appspot/app.go:		} else {
appspot/app.go:			switch ret.ContentType {
appspot/app.go:			case "application/json":
appspot/app.go:				w.Header().Set("Content-Type", "application/json; charset=utf-8")
appspot/app.go:				enc := json.NewEncoder(w)
appspot/app.go:				if err := enc.Encode(&(ret.Body)); err != nil {
appspot/app.go:					http.Error(w, fmt.Sprintf("json encode error: %v\n", err), 500)
appspot/app.go:				}
appspot/app.go:			case "text/plain":
appspot/app.go:				w.Header().Set("Content-Type", "text/plain; charset=utf-8")
appspot/app.go:				fmt.Fprintf(w, "%s", ret.Body)
appspot/app.go:			}
appspot/app.go:		}
appspot/app.go:	} else {
appspot/app.go:		http.NotFound(w, r)
appspot/app.go:	}
appspot/app.go:}
appspot/app.yaml:application: moulshowcase
appspot/app.yaml:version: 1
appspot/app.yaml:runtime: go
appspot/app.yaml:api_version: go1
appspot/app.yaml:handlers:
appspot/app.yaml:- url: /.*
appspot/app.yaml:  script: _go_app
bafelbish.go:package moulshowcase
bafelbish.go:import (
bafelbish.go:	"bytes"
bafelbish.go:	"io"
bafelbish.go:	"net/url"
bafelbish.go:	"github.com/gorilla/schema"
bafelbish.go:	"github.com/moul/bafelbish"
bafelbish.go:)
bafelbish.go:func init() {
bafelbish.go:	RegisterAction("bafelbish", BafelbishAction)
bafelbish.go:}
bafelbish.go:func BafelbishAction(qs string, stdin io.Reader) (*ActionResponse, error) {
bafelbish.go:	// Define arguments
bafelbish.go:	var opts struct {
bafelbish.go:		InputFormat  string `schema:"input-format"`
bafelbish.go:		OutputFormat string `schema:"output-format"`
bafelbish.go:	}
bafelbish.go:	// FIXME: handle --help
bafelbish.go:	// Set defaults
bafelbish.go:	opts.InputFormat = "json"
bafelbish.go:	opts.OutputFormat = "json"
bafelbish.go:	// Parse query
bafelbish.go:	m, err := url.ParseQuery(qs)
bafelbish.go:	if err != nil {
bafelbish.go:		return nil, err
bafelbish.go:	}
bafelbish.go:	if len(m) > 0 {
bafelbish.go:		// FIXME: if in web mode -> redirect to have options demo in the URL
bafelbish.go:		decoder := schema.NewDecoder()
bafelbish.go:		if err := decoder.Decode(&opts, m); err != nil {
bafelbish.go:			return nil, err
bafelbish.go:		}
bafelbish.go:	}
bafelbish.go:	// FIXME: validate input (max size etc)
bafelbish.go:	// Create bafelbish
bafelbish.go:	encoder := bafelbish.NewFish()
bafelbish.go:	encoder.SetInputFormat(opts.InputFormat)
bafelbish.go:	encoder.SetOutputFormat(opts.OutputFormat)
bafelbish.go:	var b bytes.Buffer
bafelbish.go:	if err := encoder.Parse(stdin, &b); err != nil {
bafelbish.go:		return nil, err
bafelbish.go:	}
bafelbish.go:	return PlainResponse(b.String()), nil
bafelbish.go:}
cmd/moul-showcase/main.go:package main
cmd/moul-showcase/main.go:import (
cmd/moul-showcase/main.go:	"encoding/json"
cmd/moul-showcase/main.go:	"fmt"
cmd/moul-showcase/main.go:	"net/url"
cmd/moul-showcase/main.go:	"os"
cmd/moul-showcase/main.go:	"strings"
cmd/moul-showcase/main.go:	"github.com/Sirupsen/logrus"
cmd/moul-showcase/main.go:	"github.com/codegangsta/cli"
cmd/moul-showcase/main.go:	"github.com/gin-gonic/gin"
cmd/moul-showcase/main.go:	"github.com/moul/showcase"
cmd/moul-showcase/main.go:)
cmd/moul-showcase/main.go:func main() {
cmd/moul-showcase/main.go:	app := cli.NewApp()
cmd/moul-showcase/main.go:	app.Name = "moul-showcase"
cmd/moul-showcase/main.go:	app.Usage = "moul's showcase"
cmd/moul-showcase/main.go:	app.Commands = []cli.Command{}
cmd/moul-showcase/main.go:	for action := range moulshowcase.Actions() {
cmd/moul-showcase/main.go:		command := cli.Command{
cmd/moul-showcase/main.go:			Name:   action,
cmd/moul-showcase/main.go:			Action: CliActionCallback,
cmd/moul-showcase/main.go:		}
cmd/moul-showcase/main.go:		app.Commands = append(app.Commands, command)
cmd/moul-showcase/main.go:	}
cmd/moul-showcase/main.go:	app.Commands = append(app.Commands, cli.Command{
cmd/moul-showcase/main.go:		Name:        "server",
cmd/moul-showcase/main.go:		Description: "Run as a webserver",
cmd/moul-showcase/main.go:		Action:      Daemon,
cmd/moul-showcase/main.go:	})
cmd/moul-showcase/main.go:	app.Run(os.Args)
cmd/moul-showcase/main.go:}
cmd/moul-showcase/main.go:func CliActionCallback(c *cli.Context) {
cmd/moul-showcase/main.go:	action := c.Command.Name
cmd/moul-showcase/main.go:	// parse CLI arguments
cmd/moul-showcase/main.go:	args := []string{}
cmd/moul-showcase/main.go:	for _, arg := range c.Args() {
cmd/moul-showcase/main.go:		if arg[:2] == "--" {
cmd/moul-showcase/main.go:			args = append(args, arg[2:])
cmd/moul-showcase/main.go:		} else {
cmd/moul-showcase/main.go:			args = append(args, fmt.Sprintf("arg=%s", arg))
cmd/moul-showcase/main.go:		}
cmd/moul-showcase/main.go:	}
cmd/moul-showcase/main.go:	qs := strings.Join(args, "&")
cmd/moul-showcase/main.go:	// call action
cmd/moul-showcase/main.go:	ret, err := moulshowcase.Actions()[action](qs, os.Stdin)
cmd/moul-showcase/main.go:	if err != nil {
cmd/moul-showcase/main.go:		logrus.Fatalf("Failed to execute %q: %v", action, err)
cmd/moul-showcase/main.go:	}
cmd/moul-showcase/main.go:	// render result
cmd/moul-showcase/main.go:	switch ret.ContentType {
cmd/moul-showcase/main.go:	case "application/json":
cmd/moul-showcase/main.go:		out, err := json.MarshalIndent(ret.Body, "", "  ")
cmd/moul-showcase/main.go:		if err != nil {
cmd/moul-showcase/main.go:			logrus.Fatalf("Failed to marshal json: %v", err)
cmd/moul-showcase/main.go:		}
cmd/moul-showcase/main.go:		fmt.Printf("%s\n", out)
cmd/moul-showcase/main.go:		return
cmd/moul-showcase/main.go:	case "text/plain":
cmd/moul-showcase/main.go:		fmt.Printf("%s", ret.Body)
cmd/moul-showcase/main.go:	default:
cmd/moul-showcase/main.go:		logrus.Fatalf("Unhandled Content-Type: %q", ret.ContentType)
cmd/moul-showcase/main.go:	}
cmd/moul-showcase/main.go:}
cmd/moul-showcase/main.go:func Daemon(c *cli.Context) {
cmd/moul-showcase/main.go:	r := gin.Default()
cmd/moul-showcase/main.go:	r.GET("/", func(c *gin.Context) {
cmd/moul-showcase/main.go:		services := []string{}
cmd/moul-showcase/main.go:		for action := range moulshowcase.Actions() {
cmd/moul-showcase/main.go:			services = append(services, fmt.Sprintf("/%s", action))
cmd/moul-showcase/main.go:		}
cmd/moul-showcase/main.go:		c.JSON(200, gin.H{
cmd/moul-showcase/main.go:			"services": services,
cmd/moul-showcase/main.go:		})
cmd/moul-showcase/main.go:	})
cmd/moul-showcase/main.go:	for action, fn := range moulshowcase.Actions() {
cmd/moul-showcase/main.go:		func(action string, fn moulshowcase.Action) {
cmd/moul-showcase/main.go:			callback := func(c *gin.Context) {
cmd/moul-showcase/main.go:				u, err := url.Parse(c.Request.URL.String())
cmd/moul-showcase/main.go:				if err != nil {
cmd/moul-showcase/main.go:					c.String(500, fmt.Sprintf("failed to parse url %q: %v", c.Request.URL.String(), err))
cmd/moul-showcase/main.go:				}
cmd/moul-showcase/main.go:				ret, err := fn(u.RawQuery, c.Request.Body)
cmd/moul-showcase/main.go:				if err != nil {
cmd/moul-showcase/main.go:					c.JSON(500, gin.H{
cmd/moul-showcase/main.go:						"err": err,
cmd/moul-showcase/main.go:					})
cmd/moul-showcase/main.go:					return
cmd/moul-showcase/main.go:				}
cmd/moul-showcase/main.go:				switch ret.ContentType {
cmd/moul-showcase/main.go:				case "application/json":
cmd/moul-showcase/main.go:					c.JSON(200, ret.Body)
cmd/moul-showcase/main.go:					return
cmd/moul-showcase/main.go:				case "text/plain":
cmd/moul-showcase/main.go:					c.String(200, fmt.Sprintf("%s", ret.Body))
cmd/moul-showcase/main.go:					return
cmd/moul-showcase/main.go:				default:
cmd/moul-showcase/main.go:					logrus.Fatalf("Unhandled Content-Type: %q", ret.ContentType)
cmd/moul-showcase/main.go:				}
cmd/moul-showcase/main.go:			}
cmd/moul-showcase/main.go:			r.GET(fmt.Sprintf("/%s", action), callback)
cmd/moul-showcase/main.go:			r.POST(fmt.Sprintf("/%s", action), callback)
cmd/moul-showcase/main.go:			//r.PUT(fmt.Sprintf("/%s", action), callback)
cmd/moul-showcase/main.go:			//r.PATCH(fmt.Sprintf("/%s", action), callback)
cmd/moul-showcase/main.go:			//r.DELETE(fmt.Sprintf("/%s", action), callback)
cmd/moul-showcase/main.go:		}(action, fn)
cmd/moul-showcase/main.go:	}
cmd/moul-showcase/main.go:	port := "8080"
cmd/moul-showcase/main.go:	if os.Getenv("PORT") != "" {
cmd/moul-showcase/main.go:		port = os.Getenv("PORT")
cmd/moul-showcase/main.go:	}
cmd/moul-showcase/main.go:	r.Run(fmt.Sprintf(":%s", port))
cmd/moul-showcase/main.go:}
einsteinriddle.go:package moulshowcase
einsteinriddle.go:import (
einsteinriddle.go:	"fmt"
einsteinriddle.go:	"io"
einsteinriddle.go:	"net/url"
einsteinriddle.go:	"strings"
einsteinriddle.go:	"github.com/gorilla/schema"
einsteinriddle.go:	"github.com/moul/einstein-riddle-generator"
einsteinriddle.go:)
einsteinriddle.go:func init() {
einsteinriddle.go:	RegisterAction("einstein-riddle", EinsteinriddleAction)
einsteinriddle.go:}
einsteinriddle.go:func EinsteinriddleAction(qs string, stdin io.Reader) (*ActionResponse, error) {
einsteinriddle.go:	// Define arguments
einsteinriddle.go:	var opts struct {
einsteinriddle.go:		Size int `schema:"size"`
einsteinriddle.go:	}
einsteinriddle.go:	// FIXME: handle --help
einsteinriddle.go:	// Set defaults
einsteinriddle.go:	opts.Size = 0
einsteinriddle.go:	// Parse query
einsteinriddle.go:	m, err := url.ParseQuery(qs)
einsteinriddle.go:	if err != nil {
einsteinriddle.go:		return nil, err
einsteinriddle.go:	}
einsteinriddle.go:	if len(m) > 0 {
einsteinriddle.go:		// FIXME: if in web mode -> redirect to have options demo in the URL
einsteinriddle.go:		decoder := schema.NewDecoder()
einsteinriddle.go:		if err := decoder.Decode(&opts, m); err != nil {
einsteinriddle.go:			return nil, err
einsteinriddle.go:		}
einsteinriddle.go:	}
einsteinriddle.go:	// FIXME: validate input (max size etc)
einsteinriddle.go:	// Create einsteinriddle
einsteinriddle.go:	/*
einsteinriddle.go:		if opts.Srand > 0 {
einsteinriddle.go:			rand.Seed(opts.Srand)
einsteinriddle.go:		}
einsteinriddle.go:	*/
einsteinriddle.go:	options := einsteinriddle.Options{
einsteinriddle.go:		Size: opts.Size,
einsteinriddle.go:	}
einsteinriddle.go:	riddle := einsteinriddle.NewGenerator(options)
einsteinriddle.go:	if err := riddle.Shazam(); err != nil {
einsteinriddle.go:		return nil, err
einsteinriddle.go:	}
einsteinriddle.go:	lines := []string{}
einsteinriddle.go:	lines = append(lines, "Facts:")
einsteinriddle.go:	for _, group := range riddle.Pickeds {
einsteinriddle.go:		lines = append(lines, fmt.Sprintf("- %s", riddle.GroupString(group)))
einsteinriddle.go:	}
einsteinriddle.go:	lines = append(lines, "Questions:")
einsteinriddle.go:	for _, item := range riddle.Missings() {
einsteinriddle.go:		lines = append(lines, fmt.Sprintf("- Where is %s ?", item.Name()))
einsteinriddle.go:	}
einsteinriddle.go:	return PlainResponse(strings.Join(lines, "\n")), nil
einsteinriddle.go:}
millipede.go:package moulshowcase
millipede.go:import (
millipede.go:	"io"
millipede.go:	"net/url"
millipede.go:	"github.com/getmillipede/millipede-go"
millipede.go:	"github.com/gorilla/schema"
millipede.go:)
millipede.go:func init() {
millipede.go:	RegisterAction("millipede", MillipedeAction)
millipede.go:}
millipede.go:func MillipedeAction(qs string, stdin io.Reader) (*ActionResponse, error) {
millipede.go:	// Define arguments
millipede.go:	var opts struct {
millipede.go:		Size     uint64 `schema:"size"`
millipede.go:		Curve    uint64 `schema:"curve"`
millipede.go:		Width    uint64 `schema:"width"`
millipede.go:		Steps    uint64 `schema:"steps"`
millipede.go:		Skin     string `schema:"skin"`
millipede.go:		Reverse  bool   `schema:"reverse"`
millipede.go:		Zalgo    bool   `schema:"zalgo"`
millipede.go:		Opposite bool   `schema:"opposite"`
millipede.go:	}
millipede.go:	// FIXME: handle --help
millipede.go:	// Set defaults
millipede.go:	opts.Size = 0
millipede.go:	opts.Curve = 0
millipede.go:	opts.Width = 0
millipede.go:	opts.Steps = 0
millipede.go:	opts.Skin = ""
millipede.go:	opts.Reverse = false
millipede.go:	opts.Zalgo = false
millipede.go:	opts.Opposite = false
millipede.go:	// Parse query
millipede.go:	m, err := url.ParseQuery(qs)
millipede.go:	if err != nil {
millipede.go:		return nil, err
millipede.go:	}
millipede.go:	if len(m) > 0 {
millipede.go:		// FIXME: if in web mode -> redirect to have options demo in the URL
millipede.go:		decoder := schema.NewDecoder()
millipede.go:		if err := decoder.Decode(&opts, m); err != nil {
millipede.go:			return nil, err
millipede.go:		}
millipede.go:	}
millipede.go:	// FIXME: validate input (max size etc)
millipede.go:	// Create millipede
millipede.go:	creature := millipede.New()
millipede.go:	if opts.Size > 0 {
millipede.go:		creature.Size = opts.Size
millipede.go:	}
millipede.go:	if opts.Curve > 0 {
millipede.go:		creature.Curve = opts.Curve
millipede.go:	}
millipede.go:	if opts.Width > 0 {
millipede.go:		creature.Width = opts.Width
millipede.go:	}
millipede.go:	if opts.Steps > 0 {
millipede.go:		creature.Steps = opts.Steps
millipede.go:	}
millipede.go:	if opts.Skin != "" {
millipede.go:		creature.Skin = opts.Skin
millipede.go:	}
millipede.go:	creature.Reverse = opts.Reverse
millipede.go:	creature.Zalgo = opts.Zalgo
millipede.go:	creature.Opposite = opts.Opposite
millipede.go:	return PlainResponse(creature.String()), nil
millipede.go:}
no-ansi.go:package moulshowcase
no-ansi.go:import (
no-ansi.go:	"bufio"
no-ansi.go:	"fmt"
no-ansi.go:	"io"
no-ansi.go:	"github.com/moul/no-ansi"
no-ansi.go:)
no-ansi.go:func init() {
no-ansi.go:	RegisterAction("no-ansi", NoansiAction)
no-ansi.go:}
no-ansi.go:func NoansiAction(qs string, stdin io.Reader) (*ActionResponse, error) {
no-ansi.go:	// Create noansi
no-ansi.go:	scanner := bufio.NewScanner(stdin)
no-ansi.go:	output := ""
no-ansi.go:	for scanner.Scan() {
no-ansi.go:		line := scanner.Text()
no-ansi.go:		result, err := noansi.NoAnsiString(line)
no-ansi.go:		if err != nil {
no-ansi.go:			output += fmt.Sprintf("Error: %v\n", err)
no-ansi.go:		} else {
no-ansi.go:			output += result + "\n"
no-ansi.go:		}
no-ansi.go:	}
no-ansi.go:	return PlainResponse(output), nil
no-ansi.go:}
sapin.go:package moulshowcase
sapin.go:import (
sapin.go:	"fmt"
sapin.go:	"io"
sapin.go:	"net/url"
sapin.go:	"github.com/gorilla/schema"
sapin.go:	"github.com/moul/sapin"
sapin.go:)
sapin.go:func init() {
sapin.go:	RegisterAction("sapin", SapinAction)
sapin.go:}
sapin.go:func SapinAction(qs string, stdin io.Reader) (*ActionResponse, error) {
sapin.go:	// Define arguments
sapin.go:	var opts struct {
sapin.go:		Size     int  `schema:"size"`
sapin.go:		Balls    int  `schema:"balls"`
sapin.go:		Garlands int  `schema:"garlands"`
sapin.go:		Star     bool `schema:"star"`
sapin.go:		Emoji    bool `schema:"emoji"`
sapin.go:		Color    bool `schema:"color"`
sapin.go:		Presents bool `schema:"presents"`
sapin.go:	}
sapin.go:	// FIXME: handle --help
sapin.go:	// Set defaults
sapin.go:	opts.Size = 5
sapin.go:	opts.Color = true
sapin.go:	opts.Balls = 4
sapin.go:	opts.Star = true
sapin.go:	opts.Emoji = false
sapin.go:	opts.Presents = true
sapin.go:	opts.Garlands = 5
sapin.go:	// Parse query
sapin.go:	m, err := url.ParseQuery(qs)
sapin.go:	if err != nil {
sapin.go:		return nil, err
sapin.go:	}
sapin.go:	if len(m) > 0 {
sapin.go:		// FIXME: if in web mode -> redirect to have options demo in the URL
sapin.go:		decoder := schema.NewDecoder()
sapin.go:		if err := decoder.Decode(&opts, m); err != nil {
sapin.go:			return nil, err
sapin.go:		}
sapin.go:	}
sapin.go:	// FIXME: validate input (max size etc)
sapin.go:	// Create sapin
sapin.go:	sapin := sapin.NewSapin(opts.Size)
sapin.go:	// Apply options
sapin.go:	if opts.Star {
sapin.go:		sapin.AddStar()
sapin.go:	}
sapin.go:	sapin.AddBalls(opts.Balls)
sapin.go:	sapin.AddGarlands(opts.Garlands)
sapin.go:	if opts.Emoji {
sapin.go:		sapin.Emojize()
sapin.go:	}
sapin.go:	if opts.Color {
sapin.go:		// FIXME: handle HTML - see old sapin for example
sapin.go:		sapin.Colorize()
sapin.go:	}
sapin.go:	if opts.Presents {
sapin.go:		sapin.AddPresents()
sapin.go:	}
sapin.go:	return PlainResponse(fmt.Sprintf("%s", sapin)), nil
sapin.go:}
shikaku.go:package moulshowcase
shikaku.go:import (
shikaku.go:	"io"
shikaku.go:	"math/rand"
shikaku.go:	"net/url"
shikaku.go:	"strings"
shikaku.go:	"github.com/gorilla/schema"
shikaku.go:	"github.com/moul/shikaku"
shikaku.go:)
shikaku.go:func init() {
shikaku.go:	RegisterAction("shikaku", ShikakuAction)
shikaku.go:}
shikaku.go:func ShikakuAction(qs string, stdin io.Reader) (*ActionResponse, error) {
shikaku.go:	// Define arguments
shikaku.go:	var opts struct {
shikaku.go:		Width  int `schema:"width"`
shikaku.go:		Height int `schema:"height"`
shikaku.go:		Blocks int `schema:"blocks"`
shikaku.go:		DrawMap         bool  `schema:"draw-map"`
shikaku.go:		DrawSolution    bool  `schema:"draw-solution"`
shikaku.go:		NoMachineOutput bool  `schema:"no-machine-output"`
shikaku.go:		Srand           int64 `schema:"srand"`
shikaku.go:	}
shikaku.go:	// FIXME: handle --help
shikaku.go:	// Set defaults
shikaku.go:	opts.Width = 8
shikaku.go:	opts.Height = 8
shikaku.go:	opts.Blocks = 10
shikaku.go:	opts.DrawMap = true
shikaku.go:	opts.DrawSolution = true
shikaku.go:	opts.NoMachineOutput = false
shikaku.go:	opts.Srand = 0
shikaku.go:	// Parse query
shikaku.go:	m, err := url.ParseQuery(qs)
shikaku.go:	if err != nil {
shikaku.go:		return nil, err
shikaku.go:	}
shikaku.go:	if len(m) > 0 {
shikaku.go:		// FIXME: if in web mode -> redirect to have options demo in the URL
shikaku.go:		decoder := schema.NewDecoder()
shikaku.go:		if err := decoder.Decode(&opts, m); err != nil {
shikaku.go:			return nil, err
shikaku.go:		}
shikaku.go:	}
shikaku.go:	// FIXME: validate input (max size etc)
shikaku.go:	// Create shikaku
shikaku.go:	if opts.Srand > 0 {
shikaku.go:		rand.Seed(opts.Srand)
shikaku.go:	}
shikaku.go:	shikakuMap := shikaku.NewShikakuMap(opts.Width, opts.Height, 0, 0)
shikaku.go:	if err := shikakuMap.GenerateBlocks(opts.Blocks); err != nil {
shikaku.go:		return nil, err
shikaku.go:	}
shikaku.go:	outputs := []string{}
shikaku.go:	if !opts.NoMachineOutput {
shikaku.go:		outputs = append(outputs, shikakuMap.String())
shikaku.go:	}
shikaku.go:	if opts.DrawMap {
shikaku.go:		outputs = append(outputs, shikakuMap.DrawMap())
shikaku.go:	}
shikaku.go:	if opts.DrawSolution {
shikaku.go:		outputs = append(outputs, shikakuMap.DrawSolution())
shikaku.go:	}
shikaku.go:	return PlainResponse(strings.Join(outputs, "\n\n")), nil
shikaku.go:}
showcase.go:package moulshowcase
showcase.go:import "io"
showcase.go:var ActionsMap map[string]Action
showcase.go:type Action func(string, io.Reader) (*ActionResponse, error)
showcase.go:func RegisterAction(name string, action Action) {
showcase.go:	if ActionsMap == nil {
showcase.go:		ActionsMap = make(map[string]Action)
showcase.go:	}
showcase.go:	ActionsMap[name] = action
showcase.go:}
showcase.go:func Actions() map[string]Action {
showcase.go:	return ActionsMap
showcase.go:}
showcase.go:type ActionResponse struct {
showcase.go:	Body        interface{}
showcase.go:	IsJson      bool
showcase.go:	ContentType string
showcase.go:}
showcase.go:func PlainResponse(body interface{}) *ActionResponse {
showcase.go:	return &ActionResponse{
showcase.go:		Body:        body,
showcase.go:		ContentType: "text/plain",
showcase.go:		IsJson:      false,
showcase.go:	}
showcase.go:}
showcase_test.go:package moulshowcase
showcase_test.go:import (
showcase_test.go:	"testing"
showcase_test.go:	. "github.com/smartystreets/goconvey/convey"
showcase_test.go:)
showcase_test.go:func Test(t *testing.T) {
showcase_test.go:	Convey("Testing package", t, func() {
showcase_test.go:		// RegisterAction
showcase_test.go:		// PlainResponse
showcase_test.go:		So(len(Actions()) > 0, ShouldBeTrue)
showcase_test.go:	})
showcase_test.go:}
sshkeys.go:package moulshowcase
sshkeys.go:import (
sshkeys.go:	"bufio"
sshkeys.go:	"fmt"
sshkeys.go:	"io"
sshkeys.go:	"github.com/moul/go-sshkeys"
sshkeys.go:)
sshkeys.go:func init() {
sshkeys.go:	RegisterAction("sshkeys", SshkeysAction)
sshkeys.go:}
sshkeys.go:func SshkeysAction(qs string, stdin io.Reader) (*ActionResponse, error) {
sshkeys.go:	scanner := bufio.NewScanner(stdin)
sshkeys.go:	output := ""
sshkeys.go:	for scanner.Scan() {
sshkeys.go:		line := scanner.Text()
sshkeys.go:		key, err := sshkeys.NewSSHKey([]byte(line))
sshkeys.go:		if err != nil {
sshkeys.go:			output += fmt.Sprintf("%v\n", err)
sshkeys.go:		} else {
sshkeys.go:			output += key.Hash() + "\n"
sshkeys.go:		}
sshkeys.go:	}
sshkeys.go:	return PlainResponse(output), nil
sshkeys.go:}
Makefile:# Project-specific variables
Makefile:BINARIES ?=	sockethub
Makefile:CONVEY_PORT ?=	9042
Makefile:EXTRA_DEPS ?=	cmd/sockethub/bindata.go
Makefile:# Common variables
Makefile:SOURCES :=	$(shell find . -type f -name "*.go")
Makefile:GOENV ?=	GO15VENDOREXPERIMENT=1
Makefile:GO ?=		$(GOENV) go
Makefile:GODEP ?=	$(GOENV) godep
Makefile:USER ?=		$(shell whoami)
Makefile:all:	build
Makefile:.PHONY: build
Makefile:build:	$(BINARIES)
Makefile:	go-bindata-assetfs $<
Makefile:	mv bindata_assetfs.go $@
Makefile:$(BINARIES):	$(SOURCES) $(EXTRA_DEPS)
Makefile:	$(GO) build -o $@ ./cmd/$@
Makefile:.PHONY: test
Makefile:test:
Makefile:	$(GO) get -t .
Makefile:	$(GO) test -v .
Makefile:.PHONY: godep-save
Makefile:godep-save:
Makefile:	$(GODEP) save $(PACKAGES) $(COMMANDS)
Makefile:.PHONY: clean
Makefile:clean:
Makefile:	rm -f $(BINARIES)
Makefile:.PHONY: re
Makefile:re:	clean all
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	$(GO) get github.com/smartystreets/goconvey
Makefile:	goconvey -cover -port=$(CONVEY_PORT) -workDir="$(realpath .)" -depth=1
Makefile:.PHONY:	cover
Makefile:cover:	profile.out
Makefile:profile.out:	$(SOURCES)
Makefile:	rm -f $@
Makefile:	$(GO) test -covermode=count -coverpkg=. -coverprofile=$@ .
Makefile:.PHONY: docker-build
Makefile:docker-build:
Makefile:	go get github.com/laher/goxc
Makefile:	rm -rf contrib/docker/linux_386
Makefile:	for binary in $(BINARIES); do                                             \
Makefile:	  goxc -bc="linux,386" -d . -pv contrib/docker -n $$binary xc;            \
Makefile:	  mv contrib/docker/linux_386/$$binary contrib/docker/entrypoint;         \
Makefile:	  docker build -t $(USER)/$$binary contrib/docker;                        \
Makefile:	  docker run -it --rm $(USER)/$$binary || true;                           \
Makefile:	  docker inspect --type=image --format="{{ .Id }}" moul/$$binary || true; \
Makefile:	  echo "Now you can run 'docker push $(USER)/$$binary'";                  \
Makefile:	done
Makefile:.PHONY: dokku_deploy
Makefile:dokku_deploy:
Makefile:	git remote add dokku dokku@dokku.m.42.am:sockethub || true
Makefile:	git push dokku master
Procfile:web: sockethub
cmd/sockethub/bindata.go:// Code generated by go-bindata.
cmd/sockethub/bindata.go:// sources:
cmd/sockethub/bindata.go:// DO NOT EDIT!
cmd/sockethub/bindata.go:package main
cmd/sockethub/bindata.go:import (
cmd/sockethub/bindata.go:	"github.com/elazarl/go-bindata-assetfs"
cmd/sockethub/bindata.go:	"bytes"
cmd/sockethub/bindata.go:	"compress/gzip"
cmd/sockethub/bindata.go:	"fmt"
cmd/sockethub/bindata.go:	"io"
cmd/sockethub/bindata.go:	"strings"
cmd/sockethub/bindata.go:	"os"
cmd/sockethub/bindata.go:	"time"
cmd/sockethub/bindata.go:	"io/ioutil"
cmd/sockethub/bindata.go:	"path/filepath"
cmd/sockethub/bindata.go:)
cmd/sockethub/bindata.go:func bindataRead(data []byte, name string) ([]byte, error) {
cmd/sockethub/bindata.go:	gz, err := gzip.NewReader(bytes.NewBuffer(data))
cmd/sockethub/bindata.go:	if err != nil {
cmd/sockethub/bindata.go:		return nil, fmt.Errorf("Read %q: %v", name, err)
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	var buf bytes.Buffer
cmd/sockethub/bindata.go:	_, err = io.Copy(&buf, gz)
cmd/sockethub/bindata.go:	clErr := gz.Close()
cmd/sockethub/bindata.go:	if err != nil {
cmd/sockethub/bindata.go:		return nil, fmt.Errorf("Read %q: %v", name, err)
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	if clErr != nil {
cmd/sockethub/bindata.go:		return nil, err
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	return buf.Bytes(), nil
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:type asset struct {
cmd/sockethub/bindata.go:	bytes []byte
cmd/sockethub/bindata.go:	info  os.FileInfo
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:type bindataFileInfo struct {
cmd/sockethub/bindata.go:	name string
cmd/sockethub/bindata.go:	size int64
cmd/sockethub/bindata.go:	mode os.FileMode
cmd/sockethub/bindata.go:	modTime time.Time
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:func (fi bindataFileInfo) Name() string {
cmd/sockethub/bindata.go:	return fi.name
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:func (fi bindataFileInfo) Size() int64 {
cmd/sockethub/bindata.go:	return fi.size
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:func (fi bindataFileInfo) Mode() os.FileMode {
cmd/sockethub/bindata.go:	return fi.mode
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:func (fi bindataFileInfo) ModTime() time.Time {
cmd/sockethub/bindata.go:	return fi.modTime
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:func (fi bindataFileInfo) IsDir() bool {
cmd/sockethub/bindata.go:	return false
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:func (fi bindataFileInfo) Sys() interface{} {
cmd/sockethub/bindata.go:	return nil
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:var _bower_componentsSocketIoClientSocketIoJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xfd\x7b\x7b\x1b\xc5\x96\x28\x0e\xff\xef\xe7\x99\xef\xd0\xf1\x0c\x48\x22\xb2\xe4\x4b\x08\x20\x63\x72\x42\x08\x7b\x67\x4f\x48\x72\x92\x30\xec\x79\x8d\x0f\x6e\x49\x2d\xbb\x13\xa9\x5b\xa8\x25\x3b\x26\x78\x3e\xfb\xbb\x6e\x55\xb5\xaa\xba\x5a\x96\x43\xd8\xfb\xfc\xce\x0c\xcf\xcc\x8e\x55\x5d\xf7\x5a\xb5\x6e\xb5\x2e\x77\x26\xab\x62\xb4\xcc\xcb\xa2\x9d\x75\xde\xe7\x93\xf6\x76\x39\x7c\x93\x8d\x96\xdb\x47\x47\xcb\xab\x79\x56\x4e\x92\xec\xdd\xbc\x5c\x2c\xab\x4f\x3f\xdd\x5e\x15\xe3\x6c\x92\x17\xd9\x78\xfb\x8e\xf9\x38\x2b\xc7\xab\x69\xd6\xe1\x7f\x7a\x52\xf5\x28\x6b\x77\x0e\xb3\x69\x95\x25\xd8\x9f\xe9\xdf\xf5\xc8\xbd\x7c\xfa\x29\xff\xdb\x4b\x67\xe3\x0e\xff\xd9\x3e\x3e\xe9\x66\xdc\xf4\xfd\x45\xba\x48\x26\x87\xb1\x31\x2f\xf3\x62\x5c\x5e\x3e\x98\x1c\xf1\x1f\x83\x58\x9d\xb3\x69\x39\x4c\xa7\x50\x87\xff\x88\xd6\xa9\xb2\xe9\xe4\xd3\x4f\xdb\x93\x23\xfc\xa3\xd3\x9d\xf4\xf2\x12\x67\x7e\x7d\xdd\xb6\x5b\xd2\xa1\x69\x70\xcb\x2e\x2f\xb2\x2b\x8b\x3c\x5c\x64\xcb\xd5\xa2\x48\x6c\xe5\x24\x6b\x2f\xbb\x45\x77\xd1\x79\x6f\x4b\xaa\x76\xd9\x5d\xd1\xae\xde\x29\x8e\xcb\x13\xfe\x6b\x49\x7f\x61\xbf\xa9\x99\xc9\x22\xfb\x75\x95\x2f\xb2\xa3\x23\xb7\x59\x9f\x7e\x2a\x85\x87\xd8\x66\xf5\xe9\xa7\x69\x47\x06\x4c\xa1\xd3\x3b\xbb\x1d\x2c\xcf\x4d\x59\x2e\x65\xcb\xf3\x45\x79\x99\x14\xd9\x65\xf2\x78\xb1\x28\x17\xed\xed\x47\x69\x51\x94\xcb\x04\xe6\x3f\x96\xb3\x4a\x5a\xdb\x77\xcb\xbb\xdb\xad\xed\xce\x35\x6d\xf1\x11\xce\xec\xe8\xbd\xac\x6a\xf0\xfe\xfa\xfa\x10\x67\x78\xbc\x7b\xd2\x1b\xa5\xd3\x69\x7b\x62\x4e\xb5\xab\x01\x05\x9b\x16\x47\x54\x71\xef\xe4\x38\x3b\x31\xbb\x51\xb5\x8b\x07\xc5\x20\xeb\x5c\x77\x27\x5d\xd7\x32\xeb\xf2\xce\x5c\x4b\x2d\x1c\xd2\x7c\xa4\x59\xe4\x1b\xed\xc4\x04\x56\x84\xb5\xcb\xa3\xdd\xc3\xf2\xeb\x45\x6f\x9a\x15\x67\xcb\xf3\xc3\xf2\xee\xdd\x4e\xd5\x5e\xe0\xb6\xda\x69\x5c\x77\xda\xef\xf7\x06\xc7\x76\xca\xbf\x8c\x33\xe8\xe5\x97\xe0\x0c\x3b\xef\xb7\xb6\xfa\x9f\x7d\xb6\x95\x7c\x96\xfc\xc0\x9b\x33\xce\xe6\x19\x40\x4a\x31\xca\xb3\xaa\x07\xe5\xfd\xad\x2d\x1c\x71\xb5\x98\x26\x47\x89\x74\xd2\x6e\xf5\xfa\x50\xd0\xea\x1c\xd2\xb7\x79\xba\xa8\xb2\x85\xfe\x5c\x95\xa3\xb7\xd9\x12\xc0\x69\x87\xbf\x99\x9a\x3f\xa4\x45\x7a\xe6\x57\xed\xf5\x67\x5c\x68\xea\x8c\xb3\xe1\xea\x4c\xd7\xa0\x82\x56\x47\xf7\x3a\x9a\xe6\x59\xb1\xc4\x16\xc1\xec\x65\x59\x32\x71\xff\x52\x42\x9f\xee\xaf\x69\x59\xbe\x5d\xcd\x55\x7b\x9e\x44\x95\x8c\xd2\xd1\x79\xa6\x16\x4e\xbf\x5d\xd3\xde\xcc\x54\x3c\x4a\xde\x5f\xbb\xf6\x4f\xa1\xbf\x2a\x59\xcd\x93\x14\xae\xc1\xbb\xbc\x5a\xe6\xc5\x59\x72\x2a\xbd\x9e\x26\x70\x70\xc9\x6c\x35\x5d\xe6\xf3\x29\x7c\x2d\xce\x70\x80\xe4\xc9\x24\x59\x42\xdf\x2b\xdc\xbc\x6a\x35\x9b\x95\x45\x35\x80\x72\xfc\x94\x24\xa7\x79\xd9\x6e\x9d\x2f\x97\xf3\x41\xbf\x3f\x2d\x01\x10\xcf\xcb\x6a\xd9\x4f\x61\xcd\xa7\xeb\x2a\x0c\xa5\x02\xd6\xf9\x29\x03\x68\x82\xde\x69\x14\x3b\xa9\xbc\xa8\x96\x69\x31\xca\x92\x61\x5a\x65\xe3\x04\x2f\x69\x3a\xcb\x92\x0a\x96\x39\xcb\xfa\xb8\xc8\x3e\xf6\xd4\xc5\x1e\x52\xb8\x34\x97\x80\xc4\x8a\x7c\x99\xa7\xd3\xfc\x37\xa8\x46\x67\x50\xd1\x82\x32\xd8\x9a\xa4\x80\xc6\xd5\x3c\x1d\xd1\x9e\x61\x9b\xff\x95\xce\xf3\x64\xbe\x1a\x4e\xf3\x11\xef\xa2\x45\x06\xbc\xe7\xed\xd5\x22\xef\x26\xe5\x1c\x80\x2f\x79\xbf\x95\x00\x86\x4c\xda\x02\xfb\xf0\x25\x39\x3a\x4a\x5a\x8c\x80\x5b\xfc\x3d\xa1\xba\xb0\xdd\xf0\xf5\x90\x7e\x53\xb5\xc4\xe2\x33\x2c\xbc\xde\xda\xb2\xf5\xe8\x9f\xdf\x7f\xe7\xe3\x49\x12\x0b\xa1\x63\xea\x63\x8a\xe3\x77\x0e\xe5\x43\x55\xae\x16\x23\x3c\x5e\xae\xd1\xe3\xdf\xe6\x6b\x3e\x76\x5f\xf2\xf1\xa1\xed\x6c\x79\xee\xca\xf1\x97\xed\x0d\xf6\xe2\x99\xd9\x0f\xa8\x42\xb0\x73\x9c\x8f\x4f\x92\x4f\x3f\xe5\x66\x79\xe1\x0a\x7b\x45\x35\xaf\x4c\x53\xc0\x58\x8f\xca\xa2\xc8\x78\xa7\x78\x11\x3d\xd8\xe4\x51\xf6\x0c\x70\x19\xac\x06\x0b\x8e\x5b\x54\x42\xe8\x6d\x64\x6b\xb7\x4e\xe0\x3b\x6d\x4c\xfd\xbf\x49\x8a\x44\xe8\xe8\x48\x3a\xb4\x20\x88\x3d\x7a\xb3\xb5\x5b\x95\x97\xf4\x27\x9e\x8a\x37\x27\x73\x18\x74\x1b\xdb\xad\xfc\xac\x28\x17\x08\x4e\x0c\x10\x72\x4d\x10\x2a\x3e\xa9\x5a\x5d\xd9\xd7\x0e\x9f\x57\x5e\xc2\x82\xe4\x2a\xb4\xf9\x8b\x00\x00\x1d\x5d\x42\x84\x92\x7b\xc7\x61\xef\xd8\x1d\x32\x63\xda\x51\x71\xe1\xd0\x9b\x05\xe1\xf8\x78\x89\xda\xf8\x35\x03\x23\xd4\xd8\xe9\xd9\x16\x16\x9a\x0c\x61\x29\x7b\xbc\xc4\xb6\x3a\x70\x68\x7f\x6d\xaf\xfe\x8b\x45\xb9\x2c\x47\xe5\x34\xb9\x00\xb4\x00\x3b\xd5\x78\x11\x0c\x0a\x99\x9b\x06\x02\x44\x0b\x5b\xe2\xf0\xc9\xa9\x9c\xef\xa9\xed\x0d\xaa\xa6\xb3\xe4\xfd\xab\x25\x6e\xfb\x35\x5e\x82\xb5\x83\x48\xfb\x08\xaa\x7b\x0c\x35\x60\xc3\xa1\x42\xb5\x5c\xac\x46\xcb\x72\xc1\xd7\x19\xf7\x74\x9c\x4e\xcb\x02\x50\xc3\x2a\x9f\x8e\x6f\x5c\xc7\x4d\xd8\xdc\xd4\x7b\xc5\x20\xe2\x55\xe3\x3d\x25\x0c\x7e\xdd\x7d\xbf\x6d\xdb\x6d\x0f\xf6\xbb\xdb\xe6\xf3\xf6\xe0\x1e\xfe\x80\x4b\xbb\x3d\xf8\xbc\xbb\x4d\x40\xb0\x3d\xd8\x83\xc2\x90\xc0\x40\xcd\xbd\xeb\x93\xee\xfe\xc7\x23\x78\x19\x81\x85\x9d\x31\x10\x5a\xe4\xd4\x3c\xda\x83\xd5\xd6\xaf\x0d\x6b\x3c\x9e\xe5\xcb\xa5\xbf\x4b\xa3\x72\x36\x87\x6d\x2e\x96\x3b\x19\x7f\xbc\x3d\x25\x25\x24\xa1\xc6\x04\x34\x20\x5f\x86\xc8\xe9\x44\x07\xc3\x2f\xb7\xa7\xb2\x83\x80\x3e\x43\x27\xd9\xbb\xe7\x13\xdd\x96\x8a\xca\x89\xa9\xf1\x6d\x3a\x7a\x5b\x4e\xbc\x1a\x43\x2c\xda\xd7\x04\xfb\xc9\xe3\xfb\x77\x93\xf3\xb4\x7a\x7e\x59\xc0\x05\x9a\x67\x8b\xe5\x95\xdb\x7c\x28\x87\xd6\xcf\x89\x0c\xf0\xe5\x40\x0a\xd1\xf3\xab\x37\x11\xff\x06\xda\x2f\xd0\xaa\xae\x98\xa5\xce\xea\x2a\x34\x5d\x37\x3e\x7f\x87\x79\x90\xfc\x71\x11\x5c\xc4\x3e\xe2\x14\xdd\x8a\x67\x7e\x8d\xb8\x06\x40\xb1\x5a\x4f\x16\x0d\x82\x72\x74\xd1\x90\xc5\x3b\xed\xe5\x79\x5e\xd9\x41\x81\x42\x4a\xdd\x4e\xc7\xa0\x27\xc4\x88\xf5\x0e\x0e\xa5\x03\xa4\x94\x40\x7a\xda\x86\xa2\x22\x75\x75\xb4\xb6\x73\x2b\x02\xdb\x44\x5f\x89\xb0\x08\x4d\x74\x7f\xc3\xf7\x56\xdf\x82\x52\x0b\xbb\xc0\xb5\x10\xcd\x13\xd6\x49\x4a\xaa\xd5\x10\x4b\x8e\x4f\x6c\x89\x1a\xc7\x96\x2d\x32\x47\xf0\xda\x34\x8c\x2e\x49\xee\xc0\xc2\x88\xd6\x75\xa2\x2d\x1e\xc2\x25\x9b\x41\xa3\x7a\x4b\xf3\x05\x27\xfc\xa4\x98\x20\xa7\x73\x15\xef\xe3\xbb\x6c\x9a\x5e\xd5\x3b\xa0\x62\x6c\xbd\xb7\xbb\xbb\xbb\xa6\xe5\x0f\xe9\xbb\x86\xc6\xf0\x05\xdb\x7f\xee\xb7\x07\x5c\x5c\xce\xf2\xdf\x52\xac\xf6\x7d\x8a\xa0\x29\xcd\xeb\x1f\xb0\xf5\x6e\xef\x73\xd7\x78\x68\x2f\x20\x82\x87\x5c\xc7\x36\x9f\xf5\x2c\x2f\x06\x4d\x8b\xeb\x74\xb9\x4a\xfa\xae\xa9\x0a\xae\x42\x6a\xbd\x21\xcc\x35\x68\x9e\x6e\x07\xc1\xc6\x4d\x6a\x99\xcf\xb2\x72\xb5\x6c\x17\xab\xe9\x34\x31\x0c\x89\x14\x26\x0f\x92\x7d\x58\xfe\x6e\x32\xf0\x8a\xf5\x76\xa6\xe3\xab\x57\xcb\x74\x89\x6c\x55\x6b\x34\x05\x02\x36\x76\x40\x25\xf0\xca\xe0\x4b\x25\x66\xda\xc5\x99\x0f\x5a\xd3\xb4\x5a\xbe\xe0\x52\x9c\x87\x2d\x07\xf4\x5f\x8e\xb9\x9c\xc0\xc8\x7e\x00\xde\x08\x40\xf8\xdb\xd5\x64\x42\x78\x59\x75\x45\x4d\xa8\x10\x37\x59\x08\xf9\x63\x2e\x6c\xbb\x99\x8f\xb3\x48\xb5\xef\xb2\xb0\x5a\xba\x5a\x96\x8f\x2c\xc9\xa6\x4d\xd0\x45\x16\xbe\xcd\xcd\x0e\x1b\x75\xcc\xd5\xc9\x8a\x76\xc8\x9d\xcc\xd3\x33\xdc\xb8\xb3\xfc\x22\x03\xe1\x04\xfe\x67\x99\x2c\x4b\xcb\xc9\x23\x8f\x8f\x64\x08\x49\xca\x29\x76\x72\xea\xd1\xfd\x45\x7e\x01\x8d\x19\x65\x09\xa2\x51\x18\x19\x1b\x3e\xc4\xf3\x4c\x9c\xc6\x80\x90\x0a\x6f\x11\x7c\xed\xa5\xf3\xf9\xf4\x8a\xe6\xdb\x4d\xd2\xc5\xd9\x6a\x06\xe3\x33\x86\x42\xa6\x83\xc4\x59\x40\x0a\xc8\x19\x5b\x04\xd1\x51\xdc\x20\xe0\x7c\x16\xc3\xed\xd7\x2e\xd6\xef\x38\xde\xd0\x7e\x38\x86\xff\x39\x09\x07\x75\x5f\xc2\xe1\x19\xa9\x5d\x6f\x29\x29\xee\xc7\xf9\x18\x77\xea\xd4\x20\xae\xf1\x69\x02\xa8\x12\x46\x37\xbb\x75\x8b\xad\x59\x51\x5f\xcc\x1f\x3c\x19\x57\xde\x16\xbd\xff\xd3\x56\x4f\x22\x8b\xc0\x27\x73\x2c\xe3\x86\xb5\xfe\x90\xbf\xc3\x61\x4f\x85\x3f\x39\x15\xde\x47\x7e\xb6\x6b\x0b\x52\xb4\xfb\x15\xc2\x0d\x0a\x95\xa7\x1a\x41\x10\x1d\x9d\xe4\x67\x21\x09\xfd\xb6\x2c\xa7\x59\x5a\x5c\x27\x40\x62\xb3\x3e\x4b\x24\xb0\x36\x80\xb8\xea\xbc\x5c\x4d\xc7\x09\x82\xf1\x0c\x30\x07\x2e\xf4\x2a\xb1\x5d\x52\x1f\x42\xe6\xde\xcb\x74\xae\x49\x67\x85\xd4\xf7\x22\x9d\xae\xb2\x28\x61\xad\x1f\x85\x47\x2a\xd4\x39\x5c\x38\x4a\x6b\x41\x43\x74\x2a\x96\xc0\xd2\x5e\xfe\xa2\x7b\xb0\x77\xf6\x97\xa0\xdf\x3b\x77\x2e\x0e\x9d\xe0\x80\x55\x0e\xf5\x86\xdb\x5d\xf3\x9a\xa5\x86\x00\xc5\x37\xef\xd9\x6a\x36\xc4\x65\x03\x4e\x6e\x68\x37\xcc\x00\x92\xe8\x76\x23\xfe\x5a\xcd\xff\x9c\x6d\xb3\x74\xf2\x0f\x6f\x9f\xe9\x29\xbe\x8d\x6a\x9c\xcd\x36\x73\x4c\xf4\x77\x98\x2d\x2f\x33\xc0\x6e\xba\xab\xaa\x69\x2f\xa9\xc9\x9f\xb3\x4d\xcc\x0d\xfc\xe1\x3d\xa2\x6e\xe2\x1b\x64\x46\xb8\xa8\x51\x7b\x60\xf4\xf4\xef\x5e\x95\x2d\x7f\xc8\x71\x06\xd1\x7d\x8c\xac\x23\xc2\x59\x7c\xd8\x4a\xea\x1d\xa9\xb5\x44\x47\xd9\x68\x35\x7f\x63\xcc\xd4\xb0\xa0\x10\x30\xe0\xc6\xe4\xb3\xd5\xec\xff\x46\x00\x41\x8e\xef\xe3\xc0\x08\xf4\xb4\x06\x4c\x78\x9c\xcd\x20\x05\x18\xbb\x0d\x37\x56\x21\x21\xe1\xd3\x7a\xc9\x29\xa1\xf5\x53\xe4\x2b\xc6\x79\x95\x0e\xa7\x99\xd9\xda\x8f\xb2\x83\x86\x4d\xfc\xa0\x4d\x93\xc6\x6e\x9f\x5c\x6f\xeb\x51\xcc\x32\x45\xc9\x71\xb9\xb8\x42\xc4\x0a\x2b\xb3\xfb\x8b\xc3\x7a\xc8\x18\x84\xb4\xac\xc0\x55\x8f\x8d\xca\xf4\x3c\xbd\xc8\x92\xa2\x24\x22\x56\x61\x47\xf0\xc9\x35\x81\xfe\xae\xb2\xe5\x2d\x98\x89\x59\x7a\x35\xcc\x5e\x9a\xf6\xcf\x8b\xe7\xc0\xe7\xd5\x99\xae\x7e\x3f\x79\x5e\x00\x09\x85\x29\xd7\xe6\x9b\x2f\x5b\x7c\x7c\x93\x7c\x51\x2d\xe9\xe4\x60\x9e\xad\x85\x3b\xcf\xe2\xcc\x6c\x68\xc0\xfb\xc3\x6c\x0d\xc4\xf8\x24\x2f\x84\x23\x4b\x93\x50\xe1\xb8\x6b\x78\x14\x98\xd5\xdb\x2c\x03\xb1\xcf\x6b\x3b\x59\x94\x33\x9c\x0b\xed\xed\x65\x2e\xca\x3c\x9c\x20\xa9\xa3\xbd\xba\xd3\xb2\x9c\x6f\x59\x66\xc7\x7e\x62\xf6\x99\x99\x9a\x3a\x94\xae\x16\x0b\xe2\x74\x01\xe1\x54\xa8\x03\x30\x5c\x5d\x4d\xa3\xf6\xbd\x6c\xa2\x11\xd7\xd3\x69\x37\x41\x56\x04\x57\xd5\x0c\xc2\x1b\x42\x6e\x49\x07\x15\xf9\xe0\xf4\x73\xf6\x10\x27\x05\xc1\xb4\xe8\x3a\x95\xc8\x43\x2a\xce\x40\x0e\xb2\x32\xfe\x7f\x05\x1f\x7a\xa2\xa0\x01\xa1\x1f\xc6\x6e\x75\x3a\x3e\x80\xbb\x01\xf0\x33\xee\xbe\xeb\xdd\x68\xc6\x15\xff\x88\x2f\x1f\x79\xd9\x36\x9f\xbb\x4e\x42\x57\x3a\x74\x51\x81\xa9\x66\xf6\x1b\x5e\xf6\x23\x19\x3a\x2a\xcb\xc9\x2c\x9c\x30\x57\xbd\xcd\xe7\x16\xd2\x9d\x3c\xc6\xe0\x4d\x82\xca\x29\xb6\x39\x95\x11\xf0\xef\x57\xab\x21\x0a\x4d\x45\x9b\xa7\xd2\xe5\x5e\x61\x55\xc1\xfd\x48\x68\x3e\xbd\xb2\x30\x62\x12\xa9\xc8\x09\x8e\x27\xf2\x1b\x05\x56\x3d\x94\xcc\xe3\x97\x0c\x5f\x13\xcd\x98\xf4\xa3\x3e\x28\x15\xeb\x51\x41\x00\x48\x3b\x9e\xda\xdc\xeb\xae\x25\x33\xa0\x49\x8d\x90\x47\x5e\xcd\xdb\xba\xac\x51\xea\x95\xef\x22\x7d\x85\xdd\x76\x13\x1a\xf8\xd0\x4a\x11\x93\xc2\xc9\x0b\x32\x7f\x91\x47\xf9\x91\xb4\xa5\x9e\x1e\xbc\x99\x25\xf8\xb3\x87\xbd\x41\x7d\xfc\xc7\x14\xc3\x76\xc1\x17\x23\x46\x69\x0d\xbe\xc3\x42\xe3\x32\x61\xf5\x15\x3d\x73\x01\xa2\x81\xbf\x8b\x12\xf7\x1b\x70\xd3\x39\xe0\xc9\xa9\xbc\x4c\xe1\x88\xd2\x96\x96\x15\x43\x76\x6d\x2d\xb2\x35\x9c\x91\xe0\xf5\x53\xb9\x18\x2c\x69\xa0\xe4\xec\xa1\x7d\xb3\x15\xb8\x11\x8e\x12\xd4\x48\x45\x78\x64\x86\xe1\x4e\x2e\x73\x10\x07\x4d\xc3\x74\x82\xaa\xdd\x4f\xc6\x78\x83\xac\xce\xc2\x60\x3d\x20\xab\x54\xba\xf0\xc6\xc3\xad\x87\x2f\xaf\x45\x1d\xe2\x0b\x85\x6b\xc6\xc5\xb6\xe3\xa4\x71\x50\x6e\x2b\xb7\xa1\x37\xce\xaa\xe5\xa2\xbc\x6a\xdb\x0f\x22\xd1\x12\x0c\xd5\x4a\x71\x1b\xdb\x16\x7c\x5b\xd2\xa9\x03\x82\x38\xb0\x99\x6a\xe1\x2c\xae\x6b\x7b\x61\xf5\x7c\xbd\xf9\xaa\x3a\x6f\xbb\x85\xd2\x24\x07\x49\x7d\x0f\x92\x04\xef\xc3\xc2\x6c\x12\xed\x9b\x9d\x0e\x3f\xdb\x5c\x77\xec\x53\x4d\xd0\xbf\x6c\x42\xe7\xb0\xfe\xc9\xdc\x5c\x9e\x59\x13\xe5\x7f\x04\xd8\x1f\xf6\x7a\x35\x47\x16\xc7\xd2\x0f\xec\xb6\x77\x0b\x9a\xcd\x68\xa6\x26\xf7\x2b\xec\xdb\xb2\x80\x4c\xab\x4d\x4a\x10\x86\x71\xae\x56\x8b\xe5\x70\x02\x57\x9b\xa5\x8b\xb7\x49\x5a\xd1\x54\x9a\xd1\xa9\xc3\xa5\x7c\xb0\xfe\x50\xe9\x78\x4c\x57\x5f\x06\x5a\x87\xc1\xc3\x7d\x55\xb8\x0e\x91\x01\x9c\x3c\x3e\x29\x88\x6e\xa7\x55\x16\x54\xd8\xe9\xc4\x36\x5e\xb7\x9d\x23\xbe\x0f\xdb\x52\xe1\x06\x6d\xcb\x58\xdb\x72\xa3\xb6\x06\xc0\xfd\xc6\x82\xf0\x6e\x6c\x4d\x57\xa7\xd6\x9a\x4b\x1b\x5b\x6b\x15\x20\xee\x1a\xfd\x35\xae\x6f\x9c\x94\x53\x3f\x0d\x80\x98\x26\x73\x31\x1c\xd8\x1c\x00\xe7\xa2\xd2\xf4\x00\xb0\xa6\x08\x05\x60\xf8\x0e\xba\xf1\xa0\x86\x6e\x3a\x9f\xc9\xba\x19\x91\x76\xf4\x96\x73\x2a\x9b\xe6\xe4\xc6\xe5\x43\x36\x13\x4b\x76\xfc\x39\x47\x67\x74\x99\x2f\xcf\x89\x44\xdd\x6e\x36\x42\xdb\xea\x24\x5b\x9f\x5c\x0f\xee\x4c\x5b\x68\x6a\x64\xe4\x73\xb8\xe5\xf2\x72\x37\x59\xa1\x0a\x8b\x9b\x55\x1f\xb8\x41\x02\x0c\x7a\x56\xdc\x4d\xa0\x59\x85\x7d\xa2\x62\xd8\x29\xf9\xde\x78\x52\x72\xc1\x09\xd4\x6f\x37\x19\x6a\xa2\xa7\x82\x64\x5f\xa1\x31\x73\xa7\x0c\x37\xe0\x1f\xa4\xff\x55\x4f\x0e\xb0\xd6\x92\x76\x88\x50\x11\x4f\xcf\x08\x00\xac\xa8\x3e\x05\xb4\xeb\x78\x75\xc3\x83\xb3\x3e\xf5\x7a\x43\xee\xdb\x22\x36\x3b\x7d\x54\x9e\xbe\x8f\xa2\x3d\xab\x43\x35\x8c\xf5\x1d\xfe\x6e\x59\x47\x53\x1b\x67\xcc\xd3\x90\x0b\x8c\x7d\x1e\x6e\xd5\x95\xb1\x48\xe8\xa9\xde\xa1\x65\x00\x02\x7e\xd8\x52\x60\x98\x59\xcb\x89\x5b\xb0\x63\x65\xf1\xc8\xfe\xec\x34\x55\xf5\x38\xdc\xf7\x3e\x4d\x27\x45\x30\x13\xee\x40\x11\x6c\xa8\x72\xfc\x19\x41\x71\x71\x33\x20\x3e\xa4\x92\x45\x69\x28\x21\x16\xae\xca\xf1\xf1\x53\x09\x86\xd9\x45\x01\x9b\x02\x9c\x1d\x88\x72\x00\x6d\xa2\x8c\x9c\xe6\xd5\x92\xd8\x7a\xc3\x96\xa8\xd5\x78\x9c\x1c\xce\xc4\x3e\x84\xfa\xb5\xb4\x45\xc8\x7f\x19\x99\x86\x59\x65\x5b\xab\x2b\xab\x55\xfa\xf0\xa0\x06\x63\x62\xa9\x15\x0c\x6c\x4c\xe5\xe4\x8c\x1a\xb1\x9c\x31\x71\x41\x54\x5f\x7b\x1f\x66\x78\x94\x3a\x4d\x70\x28\x9c\x8e\x06\x44\x99\x92\x81\x45\x5a\x20\x7c\x37\x0b\x0d\x5e\xb1\xec\x42\xad\xd4\x47\x15\x3b\xe1\x6b\x57\xaf\x9a\xc3\x75\xc8\xda\xf4\xb5\x9b\xec\x75\xbc\xf7\x22\x55\xcf\xd7\x94\x1c\x6e\x39\x96\x43\x18\x44\xb5\x1b\x3f\x2d\xf2\x65\x0c\x9b\x05\x8f\xdd\xfc\x75\x53\xd4\xc2\xb5\x23\x48\x4e\x21\x97\x4b\x18\x18\x81\x4c\xea\x7e\xf2\x46\xa3\xba\xc8\x85\xb2\x17\x97\xc1\x9e\x9f\xf4\x94\x1a\x82\x9f\xec\x50\x86\x05\xfc\x82\x9d\x67\x28\x8a\x88\xa0\x4b\x04\x64\x91\x55\xab\xe9\x52\x49\x58\xee\x5d\x10\x5f\x2f\xd4\x2d\x97\xe7\x3f\xf9\x57\x26\xaf\xee\x23\x97\x8f\x5f\x50\x79\xe5\xe0\xd3\x3e\xfb\xe0\x93\xe5\xee\x21\xfc\xf3\x75\xe2\xd7\x35\x56\x9d\x49\x7e\xf7\xae\x6b\x97\x78\x97\x99\x26\x1f\x8c\x71\x9c\x9f\x98\xed\xe9\x89\xe1\x41\xc0\x32\xd7\x17\x65\xdf\x14\xed\x47\x38\xa1\x51\x56\x55\xdc\xe7\xff\x5e\x65\x2b\x2b\x2e\x5c\x7b\xe6\x5a\x86\x95\x94\xb3\x59\x96\x84\xba\x7f\xc5\x06\x6e\xfb\xf4\xeb\x29\xdf\x44\x75\x7c\xde\x6b\xd4\x93\x89\xe9\x69\xc8\x6f\xad\x24\x2c\x16\x3b\x28\xfa\x5c\x01\xbb\x94\xc1\xb2\xab\xc4\xce\x1c\xc6\xc2\x56\x45\xf6\x6e\x69\xda\xe5\x05\xa0\x9d\x22\xbb\x0d\x79\xab\xaf\xb5\xae\x53\xb3\x97\xc7\x5b\x0b\x1f\x51\xf2\x4d\xb2\x8b\xca\x83\x3b\xde\x1b\xb2\x16\x30\xb1\x91\x21\x30\x5e\x07\xd5\x79\x3e\x59\xb6\x35\xd9\xe0\xcf\xb4\x41\xf5\xed\x79\x84\x92\x00\x9a\x97\x3a\x71\x04\xf9\xcc\xd1\x22\xe7\x83\x26\xb5\xa3\xb7\x81\xb7\xd9\x07\x91\x33\x9a\x44\x15\xf9\x2c\x22\x04\xdd\xba\xd5\x10\xa7\x78\x79\x9e\x83\x0c\xdf\xae\x48\x13\xe2\x98\x5f\x59\x5b\x07\xab\x69\x49\x74\x6b\xb3\x37\xf5\xd8\x33\x7c\xed\xdd\x3e\xe4\xd0\xd4\x30\xde\xb6\x95\x62\xfe\x6a\xd4\x81\x42\x1d\x6f\xb5\x39\xd8\x47\x4c\x85\x37\xce\xab\x88\x16\x4f\xef\x9c\xab\xd1\xea\x34\x2a\xb8\x0c\x62\xa9\x6b\x5d\x83\x37\x7f\xab\x2b\x4b\x8c\x4e\x43\xa9\x03\x1d\x96\x3b\x15\xa9\xe4\x94\x55\x15\x6c\xfd\x0e\x44\x79\x98\x8d\xd2\x55\x95\x99\x6a\x00\x4f\x24\x9f\xb2\x41\x40\x01\xff\xa0\xdd\xd5\x1c\x8a\xb2\xb1\x83\x4a\x4f\x2d\x75\xbd\xe5\x3f\x24\xc0\xf8\x55\xb6\x6c\x6f\x60\xa6\x61\x6f\x11\xe3\xaf\x8e\xf7\x44\x1d\xa3\x39\x9a\x02\x0b\x82\xf6\xe9\xef\x46\xdc\xab\x9c\x9d\x3b\x1c\x98\x60\x55\x7a\x6a\x56\x2b\xc2\x69\x1a\xa8\xd6\xfc\x61\xeb\x55\x4c\xba\x91\x1b\x65\x68\x4b\xa5\xe2\xfa\xf4\x3b\x75\x10\x31\x47\xdb\xac\xfc\x96\x3d\x93\xb7\x53\x20\xd4\xba\xd7\xdb\xec\xd8\x22\x6b\x02\x68\x3b\x63\x0f\x40\x7f\xff\x3d\x02\xd2\x75\x85\x73\x13\xa1\x8e\x3f\x1e\x7c\x73\xb4\xe6\x5d\x38\x30\x43\x76\x13\x9e\xa4\x80\x8b\xc6\x2d\x8d\x51\x23\xa7\x16\x0a\x28\xb6\xfd\x2f\x91\xf6\x4d\x77\xd1\xd3\x77\xb2\x31\x25\xbf\xc9\x7a\xa3\x8e\x57\x8b\x94\xf7\xcf\x53\x27\xd2\x9d\xbc\x4c\x73\x60\x67\xc6\x33\xfb\x7a\xef\xd6\x21\xdb\x80\x4a\x5c\xec\xd5\x53\xa1\x05\x13\x72\x1c\xc9\xc6\xba\x45\xdc\x75\xa2\xcc\xd1\x13\x93\xb1\xec\x5c\x65\x2e\x38\x9a\x1d\xba\x49\x2b\xe8\x76\xd2\xad\x80\x6a\x84\xe7\x7b\x53\x7b\x96\x7f\x9a\x9a\x3a\xe9\x64\x74\x9e\x01\x6d\x4d\xcf\x52\x20\xfc\x46\x72\x1c\xa5\x55\xe6\xb1\xeb\x63\x64\x0b\xd2\x61\x79\x91\x31\x9e\xab\x6e\xb7\x0f\xfc\x5c\x80\xea\xe7\x9a\xfc\xeb\xfa\xc1\x12\xc5\xa6\x45\x60\xd3\xa8\x70\x03\xdd\xba\x1d\xa1\x09\xd0\xe2\x95\xda\xf5\x0e\x22\xa7\xa0\x44\xef\x9e\x7a\x0e\x20\x46\xce\xd7\xd7\x47\xa7\x5c\xad\x46\xc8\x1a\x45\x26\x5b\x16\xd1\x99\x18\x0e\xf3\xda\x69\x81\xeb\x00\xfc\x67\xe9\x80\x9b\xd4\x1e\xbc\x88\xc9\x6a\xea\xe0\xf7\x76\x04\xa4\x19\x21\x92\xfb\x9a\x9c\xeb\x51\xfc\x19\xf4\x46\xa2\xbe\x96\xb6\x04\xf6\x63\xed\x88\x7a\xc5\x5d\xca\xae\x99\x8b\x50\x51\xb6\xa9\x2f\x8b\xed\xc1\x41\x60\x4e\xcf\x96\xd8\xdb\x83\x2f\xbb\xdb\xbe\x65\xf8\xf6\x60\x6f\x4f\x97\x89\x69\x3a\x14\xef\x7b\xa6\xf7\xa1\x25\x3c\x94\xde\xef\x6e\x8b\x09\x38\x8c\x77\xd0\x68\x9d\x7f\xf0\x01\xd6\xf9\x37\x38\x74\xa1\x35\x96\x69\xf1\xd7\x6c\x3a\x47\x15\x5c\xb9\xf0\x79\xe3\xb8\xbc\xfa\xfb\x63\xc4\x07\x62\xed\x76\x9d\x94\xc3\x37\x2c\x01\x5a\x7b\xb8\x64\x96\xbf\x03\xe4\x01\xbd\x9d\xea\xaa\xa7\x51\xeb\x70\xe6\xa1\xd2\x59\x16\x7f\x58\xf6\x9e\x93\x1b\x0d\xc1\xd1\xb2\x79\xf8\x06\xae\xec\x05\xc8\x91\xf2\x64\x07\x05\xa8\xf1\x91\xa2\x43\xa7\xb5\x30\x64\xb0\xf1\xfa\x60\xcb\x45\x36\x03\xd4\xf7\x94\xb4\x31\xd9\x42\xf7\x22\x6a\x10\xb2\x14\x05\x60\x81\xd3\xb9\xf7\xf1\x7c\x27\x36\x77\x63\xb8\x8d\x73\xc4\xb2\x7c\xb8\x58\x10\x9d\xb5\x75\x97\xe5\x4e\x8a\x65\xff\x04\xaf\x08\xdf\xc9\xe3\x3c\xad\xbe\xcd\xbd\xc1\xa1\x04\xbb\x4e\x17\x57\x7f\xc4\x4d\xf1\x95\xe8\xa6\xac\x98\x5c\xc0\x86\x14\xe9\x54\xa8\x59\xd2\x1e\x4e\x01\xac\x48\xdd\x36\xee\x90\x53\xe1\xeb\x73\xc0\x23\xe6\xf3\x28\x2d\x5a\x20\x10\x66\x09\x6f\xe5\x38\x19\x5e\x25\xc6\xe5\xb0\x19\x11\xd2\x13\x31\x77\x70\x44\x70\x26\x58\x66\x90\xec\x75\xdd\x2f\xa6\x30\x41\x99\x3c\xfc\xf9\xa5\x70\x45\xa4\xc0\xc9\x43\x52\xa0\xfb\xb0\xd8\x2c\xfc\x6d\x38\x8a\x5a\x39\xf3\x6c\xb5\xe2\x68\xa7\x6e\x12\x73\xf5\x67\x49\x7f\x7a\x56\x3f\xe7\xb0\xf5\xa3\x15\x69\x34\x0c\x2e\xf8\x57\xdc\xbe\x53\xed\x1c\x84\xef\xce\x47\x06\x7a\x03\x7b\x68\xe5\x61\xc2\xc7\x17\x77\x30\x69\x44\x03\xa2\x5b\xce\x4b\xd6\x2c\x5b\x9d\x3f\x39\x24\xa1\x7b\x9e\xd3\x33\xa3\x38\x5c\xcd\x6d\xc9\x9b\x8a\x2e\x00\xf1\xd8\xc4\x22\x01\x90\xa7\x4b\xdb\x9e\x8c\x90\x77\x6d\x6d\x00\x9c\xc0\x15\x03\x36\x2b\xcb\x2f\xb2\x98\x64\x5e\xc1\x3d\x8f\x95\xcb\xee\xf2\x73\x85\x47\xd7\xdc\x59\xd3\x47\xc3\xac\x5a\xbe\x3f\x2f\x37\xb2\x5f\xbf\xc1\x4c\x99\x37\x2b\x6e\xa5\xcc\x44\x60\x48\x4a\x3e\xec\xb8\xcb\x3c\xa1\xd6\x95\x18\xa6\xb0\xe1\x26\x84\xbd\x23\x03\xf3\xd8\xdc\x8c\x26\x45\x11\x12\x1f\x8f\x93\x64\xb7\x4a\xc3\x25\xa8\x13\x34\xae\x2f\x84\x8f\xa1\x23\x3c\x72\x63\xba\xe2\x3f\x10\x8a\x29\x4f\xd7\xab\x69\x9f\x7f\x82\xd7\x50\x2e\x0e\x6b\xaf\x7f\xbf\x84\xaa\x27\x9e\x00\xbe\x8d\x56\x17\xd5\x36\x5b\x64\x45\x94\x26\x0a\x72\x6b\xbb\x24\x46\x4f\xb5\xf2\x1b\x85\x4b\x0b\x30\x75\x19\xd2\x6c\x18\x6f\xbf\xe2\x86\x00\x8e\x04\x6a\x58\xc5\x5b\xad\x40\x9e\x92\x07\x72\xab\x35\x71\x2a\x13\xa8\xae\xb5\x26\x0c\x75\xca\x20\x48\x4b\xee\x4e\x20\xb9\xc1\x32\xb2\x18\xa3\x7a\xfc\x74\x06\xcc\x26\xb0\x90\xa7\x0c\x56\x4d\x6f\x57\xcd\xe6\x63\x75\x70\xcb\x8a\x71\x9c\xf3\x5c\x9c\x21\xe4\x08\x49\x6c\xfb\x8e\x0d\xf8\xb1\xb7\x2a\x58\x0d\xd7\x92\x49\xb5\xfc\xd5\x85\x6e\x19\xd5\xda\x15\x3e\xbf\x00\x9c\x9a\x8f\xb3\xe4\xd4\x62\x42\xe3\xbd\xce\xac\x0f\x79\xa9\xc1\x57\x3a\x9c\xd3\x2e\x5b\x1b\x1a\xa2\x53\x94\x8b\x19\xbe\x23\x35\xfa\xd6\xf9\xdc\xd3\x87\x6f\x97\xa0\x65\x27\xab\x39\x23\x51\x9e\x59\xe0\x41\x88\x15\x8c\xe8\x76\x83\xaf\x4a\xb0\x37\xf2\x82\x74\xe3\x51\x38\x6e\xe8\x35\x4c\x30\xb1\x0e\xbf\x8f\xff\xe3\xf1\xb3\xd7\x04\xb0\xe3\x6c\x92\xf2\x93\x83\xf8\x7b\x00\x1f\xd1\xa6\x03\x81\x99\x45\xdb\x7e\xfb\xe4\xd9\xc3\x97\xff\xf9\x8b\x74\x71\x8d\x9d\x30\xa3\xb1\xe5\x74\xce\xf4\xb2\xf2\x9e\x7c\xfd\x06\xaa\x13\xb6\x0c\x1b\xf0\x9c\xd9\x7d\xcf\x7f\x30\xb0\xf4\xc0\x2f\xee\x21\x25\x01\x01\x05\xbf\xb3\x86\x6a\x32\x4d\xcf\xc8\x69\x2e\xb0\xb2\xa2\x72\x5b\xdd\xda\x69\xd1\x09\xa3\x2e\xdc\x71\xc2\x7c\x39\xcd\x59\x69\xd7\x44\x9c\xdd\x31\x01\xb1\xa8\xd9\x77\x92\xbd\x93\x40\xf1\x43\xb0\xa5\xde\x86\x88\x77\xc7\x01\xf2\xb1\x58\x46\x09\xc9\xd3\x0a\x1d\xa4\x78\xc7\xe6\x03\x3e\xcf\xd2\x20\xf3\xd2\x5a\xdd\xc9\xaa\x9d\x13\x0d\xd4\xbb\x7b\xd7\x1e\x77\x0c\x4f\x29\xdd\x9c\xd2\xe0\x9b\x27\x0e\x2d\x69\x07\x74\x34\xf2\x1e\x42\x5a\xc9\x69\x86\xcf\x52\x76\x2f\xd7\x1a\x2a\x19\xcc\xf3\xe1\x0f\x73\xb5\x3b\xb4\xf6\x5d\x4e\xc6\x61\xce\xc3\x30\x21\x1a\x13\x87\x5b\xb0\x5e\xa3\xcb\x86\x9c\xcd\x8c\x68\x9d\xb0\xac\x35\xa9\x72\x6f\x23\x39\x9b\x48\x01\xe0\xf8\x38\x9c\xa1\x91\x5f\xfe\x0c\x31\x32\xcf\x47\x93\x04\x7e\x22\xae\xa4\x8b\x44\xc0\xd9\x6f\x01\x60\xdb\x75\xc6\xce\xda\xbf\x62\xbd\x47\xcf\x9f\x3d\x7b\xfc\xe8\xf5\x4d\x7a\x09\xb3\x7c\x56\xd3\x37\xa1\x45\x56\x18\x6f\xbc\x33\x1b\xe8\xba\xb9\x4a\xfb\x93\xaa\xa3\xf5\xd1\x1f\xca\xc9\x69\x50\x65\xe3\x02\x45\x3b\xd5\xcb\x87\x1a\xaa\xc1\x6c\x47\x34\x76\x1f\x11\x8a\x0d\x17\xd4\x00\xc7\x78\xba\x0a\x96\xbd\x43\x56\x8c\x5b\x05\xb3\x1b\x9d\xdb\xaa\xc4\x5f\x0a\x10\x90\xa6\xd1\x3f\xf5\x81\x08\xde\xc2\x52\xd4\x74\x64\x43\xd8\x86\xb7\xa2\x0d\xd3\xcd\x09\x91\x07\x8d\x09\x61\x6a\xe4\xb0\xae\x03\x4d\x10\xfe\x48\x3f\x0f\x1f\xfd\x7b\xd0\x1c\xda\xdd\x72\x12\x7f\xa8\x8f\xef\x9e\xbc\x8a\xef\xa5\x83\xa6\x0d\xb6\xf3\xe5\xcb\xe7\x2f\xbd\xf6\xbe\x79\xab\x1c\xa6\xa7\x13\x95\xbe\xd6\x5c\xd9\x14\xd8\x90\x05\x3e\x91\xf9\xac\xdd\x1f\x83\x51\x26\x8b\x71\x10\x55\xac\x85\x9a\x31\x52\x5c\x96\xbe\x42\x3a\xc8\x7d\x91\x89\x84\xb0\x73\x02\xe7\xe4\x6f\x7d\xe7\xc8\xd1\xb6\x80\x92\x82\x70\x9d\x8e\xce\xb1\x0b\x4d\x9f\xc9\x30\xe2\x42\x02\x5d\x60\x6d\x26\x95\x48\xb2\x0c\x29\x6d\xbb\x1e\x3b\x1b\x90\xc8\x66\xae\xb3\x4e\x25\x3d\x41\x94\x47\x75\xb5\xf5\x11\x01\x27\x37\x5e\x8d\xd0\x38\xa5\xa8\x4f\x1f\xb9\x41\xe6\x0b\x8a\xe0\xd8\x6e\x3e\x1c\x7e\xb7\xb7\x07\x03\x6b\x34\x87\x12\x98\x70\x71\x51\xb1\xd4\x58\x53\xc8\x75\xa8\x93\x03\xd2\x03\x5c\x11\x9d\xd3\xb8\x04\x3e\x36\xb3\xd3\xe5\x67\x09\x7e\x94\x28\xd4\x33\x04\x96\x4a\xe7\xfe\x63\xcf\x5a\xa6\xd3\x1e\x2d\x32\x1b\xe6\x60\x03\xc8\x90\x37\x23\x66\x2c\x35\xd7\x99\x3c\xa8\xdf\xe8\x64\xa0\x50\x84\x99\x95\x35\xef\xb0\xba\x7c\x26\x85\xf8\xbf\x5d\x29\xc9\xc7\x03\xf8\x7f\xf3\xcb\xf1\x9e\xac\x80\xe4\xe3\x5c\x67\x78\xc5\x57\x0e\x46\x29\xca\xcb\x69\x76\x96\xcd\x3e\xde\xdd\x0b\x0e\x38\xbc\x79\xce\x6c\x83\x98\x46\x0b\xea\xd6\x3a\x30\xce\xb9\x8e\xde\x06\xb7\x0b\x4f\xd8\x1e\x41\xc5\xe0\xa8\xec\x98\xa0\xc7\x18\x46\x82\x02\xef\xaa\xd4\x6b\x68\xe2\x1b\x99\xa1\x77\xa5\x64\x2a\xc3\x74\x2c\xd3\xd0\xc3\xdf\xf0\x82\xc2\x27\x70\xe3\xdb\x49\x8c\x1f\x69\x10\xf6\x6b\xcc\x86\x67\xff\x10\xf0\x1a\x3e\x23\xe2\x89\xe5\x81\x40\xcb\xb8\x22\x1b\x07\x76\x04\xa8\x27\x12\x8b\x18\xe8\xd0\x68\x4d\x05\xbf\x8c\x6d\xf0\x03\xa3\x3e\xdd\x70\x75\x7a\xc0\xa8\x7c\x9e\xe3\xdc\xc8\xd4\x4b\x99\x79\x45\x50\x5b\xc4\xd4\xab\x86\x27\xeb\xcd\x8e\xf3\x13\xdf\x1e\x23\xa6\xb8\x6b\x9a\x80\x92\x40\x22\xa3\x6b\xe6\x36\xa8\x5e\x1b\xb5\xa6\x13\x5c\x0f\x44\xee\x68\x6f\x05\x47\x37\x5b\xd9\xd4\xfa\x37\x2c\xae\x65\xea\x1c\x78\x69\xbf\x18\xc3\xa8\x91\xf9\x49\x2b\x2f\xeb\x13\x5d\x63\xfc\x4e\x91\xd8\xc6\x09\xbf\x06\xf4\xa5\x65\x85\x3a\x12\xd7\x1c\x45\x67\x8a\xa3\x87\x23\x25\xb3\x6c\x79\x5e\x8e\x45\x43\x65\x7c\x94\x39\x82\x56\xb5\x2c\xe7\xe8\x69\x0a\xfb\x4e\x4e\xfc\x64\xcf\xc5\x0d\xd3\xa5\xef\xb3\x0c\xa4\x03\x75\xfa\x67\x68\x73\xb7\xc8\xcf\xce\x08\x04\xf9\xfd\x3b\xaf\x62\x1b\xdb\x6b\xd8\xd9\x88\x4d\x6a\x27\xa2\xc7\xb4\xa4\x8b\xac\x62\x02\xab\x33\xa0\xb2\xe9\x45\x99\x8f\xfd\x29\x52\x8b\x98\x9d\xa3\x7b\x03\x8e\x9a\x38\xda\xcf\x00\x69\xa1\x07\xd3\xf5\x96\x57\x23\x71\xf1\x5b\x9c\x07\x10\xc8\x9f\xa6\x15\xfe\xf6\xcf\xee\x3b\x7b\x2a\x95\xd2\x69\x5a\x1b\xe7\x8f\xa0\xac\x33\x86\x62\xf5\x9d\x6e\x86\xe0\x66\x76\x49\x60\x7b\x9e\x2d\x60\x27\x67\x08\x15\x37\xc0\xf7\x5a\xc1\xd4\x71\xd6\xda\x6f\x0a\x4e\x95\x5f\x08\xad\x05\x3e\x3a\xe5\xce\xcb\x72\x1a\xb9\x2f\x6b\x67\x0b\x3d\x91\x8d\x99\x32\xb2\xa8\xdd\x2e\xbe\x2a\x49\x68\x13\x77\xbd\x56\xbf\x61\x7d\xce\x45\xff\x84\x3a\x91\xc6\x00\x23\x30\xbf\x53\xa4\x26\xa7\x5d\xdb\x40\x2e\x9a\xe1\x84\x90\x82\xfe\xd1\x63\x76\xaa\x30\x7b\x96\xa6\xcc\x11\x38\xd6\x8f\x69\xa5\x98\x09\x99\x95\xc4\x14\x65\x50\xd3\xe9\xcc\x22\xfb\xe1\xbd\xe7\x7f\xd8\xbb\xbd\x7b\x90\x84\x4e\xf6\xe2\x8f\xf4\xdd\x6d\xf3\xa2\x0a\xbf\xee\x5d\x9f\x74\x3f\xdf\xe4\x51\xd8\x05\x00\x6e\x73\xb0\xe1\xdb\x3d\x14\x73\xf4\x26\xfb\x70\x6a\xca\x3e\xe0\x4d\x56\x62\xd2\xde\xee\xb1\x15\x1a\xa9\x00\x40\x2f\x9f\x9a\x2b\xd3\xa0\x95\x81\xea\x31\xee\xf3\x61\x91\x70\x8c\x35\x40\xf3\x29\x07\x58\x9a\xe5\xb3\x7c\x24\xb1\x9a\x7b\x18\xa1\xd5\x58\xe3\x25\xe1\x7f\xdf\xb1\x0e\x98\xf0\x69\xac\x7e\xf3\x5b\xa1\xc4\x33\xed\x26\x50\xdf\x32\x1f\x68\xcb\x20\xe1\xb0\xf8\x92\x8b\x8e\x39\xd2\xbd\xb4\x80\x9f\xc9\x11\xfd\x2f\x00\x29\x9f\xa1\xad\x72\xa8\xe5\xc8\x23\xea\xb7\x23\x11\xe2\xa0\x8a\x0b\x66\x79\x37\x69\xf5\xfb\x2d\xf8\x07\x4b\x31\x82\xec\xa1\x45\x31\x53\xe8\xe8\x22\xe3\x08\xa8\xd5\x6a\x8e\x3b\x6f\xb8\xe8\x8a\xb6\x35\x0c\x4c\xa7\x7c\x3f\x50\x09\xc7\xa3\xf6\x46\xe7\xe9\xe2\xe1\xb2\xbd\xab\xbc\x3d\xe2\x35\xf6\x3a\xda\x20\x2b\x3a\x57\x1b\xeb\x2e\x62\x0e\xe5\x1a\xe0\x32\x82\xca\x42\x8d\xec\xfc\xee\xf4\xff\x4f\x1b\xa3\xf0\x56\x0f\x7e\xbf\xac\xaa\x07\x9d\xc1\xcf\xfd\x9f\xfb\xfd\xde\x12\x10\x67\x5b\xc7\xd8\x73\x18\x5d\x26\xb1\x33\xc5\x7b\x8f\x71\x95\x89\x21\x37\xbe\xf7\x76\x55\x36\xfc\x1e\x2b\x21\x79\x73\xf0\x98\x6f\x5a\x9a\x1c\xc3\xcd\x2b\xa4\xe8\xc1\xd5\xa0\x5e\x5d\xaf\x11\x85\x56\xbc\x10\x1e\x51\xc2\x82\x70\xda\x0c\x75\xe6\xf6\xda\x28\xbb\xd7\xd6\x75\xf5\x2d\xa0\x61\x7c\x9b\xbb\x04\xb1\x05\xdd\xbf\x92\x53\x1b\xb6\x78\xf0\xe5\xee\x29\xf1\xe2\xae\xe8\x34\xc9\x7e\x25\xca\x2c\x90\x72\x07\xed\x59\x10\x72\x34\x70\xc8\xde\xc3\xce\x77\xfe\x4d\xf6\x9c\xaa\xc9\x66\xa8\xcd\x37\xad\x71\xd9\x5f\xee\xb6\x34\x53\x21\x71\xda\xbd\xde\xaa\x5b\x74\x77\xef\xde\x81\xea\x8f\x23\x11\xe3\x67\x09\x89\x68\xfe\xa4\x88\x88\x2d\xf7\x20\x3c\xbf\xb8\x2f\x9f\x71\xb9\x2e\x6a\xc3\xa0\xd5\xa1\xe7\x94\x9d\x3d\xa3\x5e\x20\x28\x3c\xe2\x16\x0f\x92\xd6\x31\x1e\x97\x69\x87\xe7\x7d\xd2\xc2\xb8\x79\x52\xa0\xee\x3c\x45\xa7\x2c\xf2\x5f\x57\xb0\xbc\xb1\xcc\x8a\x9e\x36\xf4\xa2\xb0\x03\x01\x01\xd3\xdf\xc0\x0c\x80\x2b\x3c\xf4\xba\x3b\x5f\x64\x13\xe9\x09\xff\xbc\xb1\xaf\x36\xe2\x94\x4f\x3f\x65\x10\xa5\xfd\x3a\x72\x7b\x07\x6b\xc1\x99\xb7\xfd\x01\x3b\x1d\xfd\xe4\x01\xa5\x6c\xa3\xd4\x71\x71\xd0\xba\x2a\x7c\x3d\x6d\x95\x8a\x6d\x0f\x9d\x52\xf1\x20\xf1\x62\xe5\x47\xaa\xc9\x87\x01\x10\xe5\x0e\xd1\x57\x45\x2b\x0d\x14\x03\xa5\xfc\x0a\xa8\xe0\xfd\x4d\xa8\x60\x8d\xb0\x90\x9b\xbe\xc2\xd5\xf4\x1b\x58\x85\x55\xb1\x74\x01\x46\xc8\x40\xf3\x97\xd1\x50\x3b\x8d\x0c\xd3\x7c\x6a\x64\x5f\x86\x50\xaa\x82\x86\x41\xfc\x07\x80\x52\x61\x42\xa2\xc0\xde\xbf\xbb\xea\x51\xaf\xc4\x44\xc0\xbf\x7c\x71\x4d\x74\x7e\xf9\xc4\x11\x59\x1e\xd8\x81\xdb\x1d\xd4\xea\x60\x63\xae\x6e\xa7\x49\x65\x68\xd4\xda\x15\x6f\x28\x8d\x70\x48\x71\xae\x46\xfc\x5a\xc5\x79\x31\xff\x85\x21\xf8\x5b\x1c\xaf\x60\xc4\xc2\xd3\xb2\x2c\x91\xe9\xbe\x22\x7b\xe5\xaa\xd5\xb1\x4d\xaf\xed\x5f\x3b\x3b\x6a\x88\x2d\x5b\x8c\x3e\x0b\xd4\x13\x47\xb0\x21\x7d\x2e\xcd\x71\x99\xa4\x0b\xa4\x2e\x55\x45\xfd\xcb\x2e\x79\x73\xae\xd9\xe8\x26\x66\x97\x91\x5f\xf4\xca\xed\x06\x61\x1b\xef\x0b\x32\xb9\xab\x25\xa2\x30\xf6\x8a\xb5\xda\x3b\x76\xb4\x38\x2b\x65\xf0\x72\x21\xe1\x2d\x16\xd1\x8e\xed\x39\xba\xa5\x3b\x1c\xe4\x1d\x27\x9e\x19\x39\x05\xe0\x5c\xc3\xf9\xdb\x79\x22\x61\xb6\x67\x15\x6c\xe7\x35\xde\x1d\x7b\xb4\x08\x34\x68\xad\x62\x6d\xfe\xbe\xd8\x04\xb0\x8d\x77\x01\x1a\x52\x57\x28\xa3\x72\xfc\x1e\x34\xb3\x04\x86\x84\x94\x5b\xf0\x09\x99\x46\x71\xdd\x42\x21\x80\xbc\xa2\xa9\x19\x7e\x30\x8a\x5c\x67\xd8\x80\x5e\x8a\xec\xe3\xb5\x34\x2c\x01\xba\x9d\xc4\x0d\x4c\x6a\x57\xcb\x4e\x5a\x0d\xdb\xe5\x38\x4b\x70\xa1\x0a\x11\x4b\xe8\x2e\x5d\xa1\xeb\xe2\x91\x9e\x5f\x0f\xcb\x9e\xb2\x00\x0a\xb5\xa8\x15\xda\xcd\xd3\xbf\x18\x4a\x15\x4b\xd9\xf0\x02\xff\x17\x4a\xa8\x13\x2b\x01\xe9\xae\x68\x1d\xf8\x50\x6f\x52\x53\x84\xdf\xda\x6a\x52\x87\x4e\x45\xce\x83\x7d\x4d\x97\x47\x46\xbe\x7b\x24\xe3\xd0\xd1\x11\xd0\xc2\xe8\x52\x05\xff\x8c\x57\xf8\x86\x0b\x4d\x25\x55\xc7\x1b\xea\x1b\xf9\x40\x81\xdf\x4d\x89\x5e\x9e\x1f\xb3\x49\x45\x17\x56\x07\xd8\xde\xed\xf8\xa6\x0f\xc3\x8b\x84\xfd\xa1\x7f\xcc\x8b\xe5\x97\x46\x17\x6d\xb7\xc0\x9a\x40\x30\x70\xd6\xeb\xe2\x04\x76\x78\x3e\x1d\xab\x31\x33\x4a\x03\xd9\xb9\xdc\x73\x94\x1c\x93\xce\x00\x4b\x9d\xe6\x80\x7b\x3f\xce\x73\x7a\xd2\x1f\x5e\x1c\xe7\x27\x81\x60\xc9\x35\x7a\x3c\x2b\x2b\x51\xc1\x05\xf8\xf2\x36\x46\xaf\x12\x38\xfd\x54\x02\xea\x9e\x36\x49\x14\xf2\x5d\x5b\x6d\xda\xfc\x09\x26\x04\x1b\x7b\x6b\xb0\xc5\x31\x46\x53\xb2\xaf\xc0\x3b\xc9\x29\x48\xfb\xa7\x26\xe7\x82\x8d\x34\x93\x17\x20\x50\x4c\xa7\x79\x85\x9a\x96\x71\x95\x1c\xef\xed\xee\x9e\x98\x06\xe9\xbb\x53\x8a\x10\x69\x2a\xe3\x47\xf7\xf9\x8d\x18\x34\x1f\xdb\x92\x09\xc5\xdd\x83\x92\xfd\x93\x06\x6d\xba\x8d\x68\xdd\x28\x7a\x98\xb0\xc2\x2e\x93\x43\x24\x3e\xb4\x08\xbb\x33\x53\xde\x83\xb5\x49\xb0\x64\xf7\x91\xa2\xd4\xf1\x57\x0e\x85\x4c\xb3\x77\x92\xb2\x09\x12\xc8\x39\x11\x6c\xc8\xe3\x7d\x5b\xe3\x8d\x31\x22\xa6\x1a\xf2\x4b\x7c\x33\x75\x11\x50\xab\x3d\x20\x81\xba\x68\xa0\x0d\x22\x5d\xec\xc9\x5d\x6d\x82\xf8\xd2\x48\xe3\xee\xf8\x8c\x73\x4f\x4d\x6d\x24\x21\x04\xa3\x5b\x27\x3b\xa6\x35\x43\xd2\x4d\x54\x87\x3c\xb3\xfa\x03\xf8\x0b\x33\x94\x2c\xcf\x81\x41\xba\x6c\xab\x4d\xe9\xfa\x13\x87\x2b\x71\xa8\xd5\x34\xbc\x46\xcd\x5a\x60\xf4\x45\xe8\x95\x3b\xe3\x50\x8c\x46\xc3\xc6\xb2\xf6\x45\x6e\x26\x44\x55\x26\xd3\x12\x28\x38\xb5\xfa\xcc\xdb\xeb\xcf\x60\x7a\xd2\x90\xe6\xd9\xae\x57\xdf\x03\x6c\xf2\x69\xb2\xd7\x49\x88\x8c\xc1\xbe\x43\xc5\x1d\x35\xc4\x00\x0b\xee\xba\x82\xe0\xce\x52\x87\x00\x2e\xed\x99\xd1\x81\x03\x74\x74\x12\xc2\xcf\x4a\x45\xf4\x32\xa3\x30\x4b\x70\x36\x05\x6d\x3d\x05\xec\x95\xfd\x68\xb4\x58\xac\x9f\x04\x79\x5f\xc4\xdf\x2a\x02\xb0\xf0\xb4\x53\xac\xc5\x85\xbb\x4a\x91\x26\xe5\x34\x37\x1f\x95\x43\x74\xea\x61\xa1\x2f\x37\x32\xed\x2c\x94\xc4\x47\x35\xf1\x2d\x3f\x68\x54\x3f\x02\x25\xee\xec\x7b\xff\x3e\xce\x30\xb2\x64\x64\x58\x3e\xff\x5b\x0d\xf6\x37\x73\x3d\xed\x78\x02\x98\xef\x6b\x17\x98\xff\xe0\x81\x05\x45\x7f\xb5\x19\x8f\xf2\x2f\x38\x1f\x4c\x69\x73\xff\xde\x8e\x22\x41\x54\x6c\xe4\xdc\x33\x40\xb7\xab\x21\x2a\xdd\xfa\x45\xfe\x76\x9a\x56\x17\xe7\xfd\x78\x13\x6a\xf6\xa8\x9c\x5f\x2d\xf2\xb3\xf3\x25\x30\xd1\x9d\x64\x7f\x77\x6f\x3f\x79\x46\xcd\x92\x0b\x00\xdf\xbf\x66\x8b\xe5\x6f\x59\x41\x35\x9f\x02\xa5\x2f\x90\xfb\x44\x09\x83\x5d\xd1\x7e\x78\xf2\x3a\x99\x72\x71\x0f\xeb\xf4\xff\xc5\xe9\xc9\xda\xa8\xa7\x80\x69\x43\x39\x08\x25\xe8\xb2\xb6\x5c\xe4\xa3\xe5\xf6\xe1\xbf\x6c\x61\x91\x51\x58\xb1\x7b\x7f\x03\xbb\x03\xb7\xfa\x5f\x9c\xc4\x20\x5c\xce\x1a\x52\xdc\xe5\xda\xa8\x2a\x22\x0b\x2a\x6a\xd2\xab\x71\x44\x5d\xd9\x43\xa8\xb1\x6d\xe6\x53\x7f\x48\x82\x2e\x90\x0e\x1f\x1d\xd8\x59\x24\xa6\x1d\x70\x29\xb4\xba\x63\x3d\x00\x50\xe4\xe4\x9b\x6f\x92\xfd\x93\xc3\xa6\xda\xed\x76\x58\xff\xd3\x04\x7a\xff\xfa\xeb\xe4\x1e\xde\xf9\xe0\x2b\xa0\x8d\x3d\xea\xf1\x5e\x67\xf3\x2e\xb9\x11\x60\xa4\xcf\xa9\xdf\xfd\x78\xbf\xfb\xd4\xef\xfd\x35\xfd\xc6\x9a\x7c\x9a\xdc\x3f\x30\x2d\xae\xcd\xae\x21\x1e\x6e\xe3\x6e\x7f\x82\x4b\x41\xfe\x6a\xbf\xbe\x5f\x47\xf2\x07\x3d\x6b\x90\x32\xac\xbd\x6b\x0e\x41\xd9\x3f\x76\x60\x9c\xed\xa3\x6d\x33\x84\x13\x18\xa4\x7f\xea\x7e\xef\x43\xbb\xdf\xe7\xee\x5d\xff\x66\x09\x82\x8b\xb9\x3e\x7d\xbc\x0e\x80\x94\x1d\xf0\x91\xa6\x58\x28\xe5\xda\x3e\x80\xd2\x6e\x31\x88\xb9\x39\xc9\xf8\x9f\x25\xbb\xbd\x2f\x3e\x17\x00\x15\xe8\xd4\x15\xba\x08\xb5\x68\x71\xb8\x2b\x75\x24\xee\xc5\x5e\xd7\xfc\xb5\x6f\xff\x3a\xb0\x7f\xdd\x3b\xd4\xe7\xc0\x1d\x1e\xd7\xf6\xf5\x84\x36\x0e\x76\x56\x6f\x9d\x9a\xec\xce\x8e\x85\x83\x35\xdd\xec\xc7\xba\x69\xec\xe8\x3a\xd8\x64\x36\xe8\x70\xf2\xd3\x51\x8d\xef\xd6\x1d\x99\x9b\xbc\xc1\x9d\xbf\xf1\xfe\xde\x53\xd3\x35\x9b\x9a\x08\x9c\x5b\x8d\x94\xac\x19\x5f\x7f\x83\xba\xfb\x8d\x75\xef\xee\xd5\x6b\x1f\x34\xd7\xde\xaf\xd7\xbe\xd7\x5c\xfb\xe0\xc4\xad\x4c\xf6\xe1\x78\x7e\xf7\x2e\x72\xff\x6d\xbb\x0a\x7b\xc3\xed\x5c\x09\x5d\x1c\xc6\x9b\xb9\x5a\x16\x3f\xdc\xd3\xad\x0f\x08\x7d\xdd\xd4\xfa\xc0\x22\xad\xfb\xba\xf1\x3d\x42\x0f\x9d\x86\xbb\xa5\x0e\xcc\x5e\xb0\xeb\x4e\x7b\xfb\xe1\xb7\x8f\xbe\x7b\xfc\xfd\x5f\xfe\xfa\xe4\x6f\xff\xfe\xf4\x87\x67\xcf\x5f\xfc\xef\x97\xaf\x5e\xff\xf8\x1f\x3f\xfd\xfd\x3f\xff\x7f\xe9\x70\x34\xce\x26\x67\xe7\xf9\x9b\xb7\xd3\x59\x51\xce\x7f\x5d\x54\xcb\xd5\xc5\xe5\xbb\xab\xdf\x80\x44\x1d\xdc\xfb\xfc\xfe\x17\x5f\x7e\x75\xb7\xbf\x8d\xef\x9f\x44\x41\xf7\x76\x3f\xf4\x15\xc7\x8b\xd6\x95\xa4\xc9\x10\x3e\x70\x72\x28\x2d\xe6\x27\xf0\xc7\x18\x20\x6c\xbe\xc8\x26\xf9\x3b\x00\x4a\xca\x35\xe7\x5e\x79\xbe\x85\x56\xdf\x4a\xa3\x23\xf3\xbc\xa0\x0a\x61\xd1\xee\xd9\xe1\xa7\x6c\xf8\xef\xf9\xb2\xe9\xeb\x0f\xaf\x1a\xbf\x94\xbf\xa9\x4f\xea\xcd\x9e\xdc\xc4\xe1\xee\xe2\x57\xed\x88\x85\xda\x07\xad\x79\x90\xc9\xe2\x12\x5f\x99\x62\x3c\xdc\x30\xb1\xc5\xe2\x4a\xf1\xd3\xa9\x5c\x40\xec\xbc\x7d\xdc\x3a\xcf\x5b\x27\xbe\xbb\x40\xda\xab\x50\xec\x23\xe4\xcf\x86\x39\xa3\x74\x39\x3a\x6f\x67\x81\xa4\xed\x82\x0b\xe0\xe1\x77\x36\x99\xbf\x4c\xbe\xd2\x98\xe2\x3f\xf2\xec\x92\xe4\xb6\xef\xd3\x7c\x4a\x3e\x19\xaf\xd2\x49\xba\xc8\x93\xfb\x18\x41\x0a\x55\xef\x45\xc6\x4a\xb2\x59\x3a\xc7\x7f\x54\x5b\x7a\x29\x5d\xe8\xdc\x87\x6a\x2f\xaa\x60\x10\xc4\xd1\xde\x4e\x61\x9a\xa1\xb5\x5b\x35\xf4\xb6\x2a\xc0\x5a\xc7\x7b\x5d\xc0\x01\xc1\xde\x0d\x3f\xea\xde\x19\x08\x6c\x3e\x76\xa9\xa1\x4f\xdf\x87\x36\x58\xa3\x2a\xd0\xd6\x82\x18\x36\x65\xbc\xae\xc6\x59\x46\x30\x5d\xf7\x56\x36\x97\x8e\x2c\x3d\xe0\x50\xea\xc7\x19\x1e\x13\xbd\x53\x56\xec\xcc\xa9\x17\xa6\x61\x03\x25\x30\x8c\x26\x3a\x5c\x94\x97\x15\x1f\x6d\x8a\x4f\xef\xe3\xa2\xc5\x21\xc9\x79\x8d\x98\x84\x23\x67\xc9\x36\x04\xaf\x5e\x20\xee\xc3\xd4\xc2\x89\x01\xad\xb9\xe2\xa3\x88\x19\x7b\xc0\xc7\x98\x99\x07\xe5\xd4\x3c\x5f\x15\x6f\x49\x29\x77\x25\xba\x1a\xa6\xae\x54\xde\x33\x01\xa0\x5c\xd6\x2b\x35\xb0\x1f\xc8\x18\xaa\x12\x99\x70\xcd\x74\x84\x08\x0a\x3c\x8c\x9e\x49\xe8\x22\x01\xfc\x0f\x61\xda\x2e\xbf\x44\xa5\xb0\xd6\xf9\x95\xdc\x89\xb2\xa0\x67\x26\xd3\xac\x18\x4d\x57\x63\x0e\x1b\x64\x5a\x01\xa8\x9d\xd9\xa8\xe5\xe4\x41\x8b\x8c\xfe\x94\x22\xc3\xf3\xc0\x8a\x49\x90\xf9\x58\x9e\x9a\x1e\x1f\xa0\x96\x2a\xd2\xca\x5c\xda\x11\x9c\x4c\x8d\x96\x87\x1d\xa9\x70\x0b\xd8\x00\x65\xab\x76\xd0\x04\x86\xe9\x26\xae\xdd\xf3\xc9\xa4\xc2\xb0\x64\xb5\x9e\x54\x57\xb2\x89\xd8\xa1\xd9\x43\xe1\x53\xcc\x5e\xf2\x39\x25\xb4\x08\xfd\xd2\xa5\x75\xcb\x0a\x12\x1f\x39\x28\x42\x10\xe9\x9a\x34\x68\x56\x4b\x24\x9e\x46\xe6\x2f\x3f\x57\xe7\x50\x23\x0a\xe9\x91\x75\x14\x4d\x20\xe8\x6c\xdd\x36\x03\xc1\xe1\x50\x2e\x6c\x9b\x17\xe6\x94\x9a\xe6\xcd\xc4\xb8\x3d\xb1\xc5\xff\x03\x6c\x21\x17\x38\xf8\x34\xd0\x9f\xc4\xe0\xc8\xdb\x92\xf5\x7b\xd1\xbc\x22\x4f\x05\x4b\xbd\xeb\xd6\xbc\x65\x32\x5e\x4d\xff\x18\xe2\x61\x62\x5c\x35\xb2\x0e\xf0\xe7\x3a\x34\xff\x40\xd3\x6b\x58\x6e\xb0\x26\x65\x6b\x6a\x46\x09\xb1\x68\x30\x58\x1c\x4e\x6a\x36\xab\x52\x3b\xc8\x41\x27\xe8\xfd\xcf\x7f\x0c\x44\xae\x69\xa3\xec\xc9\x46\x3b\x42\xef\x19\xc0\xff\x40\xb5\x62\xa4\x69\x28\xbf\x74\xa0\x7d\x24\x3f\x08\x38\x0a\xf0\x2d\x86\x24\x38\x2d\x87\x6f\x28\x6d\xc6\xe9\xa4\xa8\x79\x02\x59\x65\xec\xf0\xcd\x56\x24\xae\xc4\xef\xc6\x26\x65\x42\x61\x2a\x58\xbc\xf3\xb4\x91\x36\x02\xc5\x2d\x9f\x55\x28\x0c\x85\xa4\x23\x68\x30\xd3\xc0\x00\x15\x93\x82\x1f\x80\x8f\x27\x45\xcc\x2e\xfa\x8e\x57\xb9\xf6\x2c\x48\x8e\xc8\x1d\x93\xf0\x1a\x71\xb4\x6d\x6a\x1f\x0e\xc4\xce\x9d\x76\x8e\xcf\xdc\x9a\xba\x77\x91\x1f\xdf\x6a\x34\xb6\x37\xc5\x85\xd8\xd2\xd2\x92\xc8\x89\x01\x88\x1c\xf0\x11\xed\x58\x9f\x9d\x8e\x32\x87\x16\x30\xb8\x55\x4e\x51\xf3\x44\x10\x78\xab\xd7\x76\x5a\xbe\x47\x9f\x08\x38\x26\xae\xd7\xc5\x7a\x4d\xbc\xf1\x85\x87\x25\xba\x0b\x4f\x3f\x64\x13\x28\x92\x09\x95\x1c\x06\x19\xc0\x84\xf8\x8b\xcd\x18\xbe\xfd\xa2\x63\xac\x18\x69\xad\x03\x45\x03\x61\x52\x1e\xb7\xe6\x75\xcc\x83\x9d\x80\xcf\x2e\xbc\xcd\xae\x90\xff\xa8\xc5\x51\xb0\x89\x29\x01\xb6\xa0\xce\x49\x12\x89\xb5\x40\x1f\x02\x9d\xb1\xb1\x16\x30\x49\xb9\x29\xf0\x49\x52\xf2\x22\x25\xac\x30\x99\x28\x9e\xca\xd3\x4b\xe4\xd2\x79\x5e\xc9\xb1\x6b\x87\xf7\xcd\xdb\x03\x13\x44\x26\x7a\x4a\xf5\x18\x11\xa8\x5d\x8f\x14\xa7\xe3\x31\xf9\xb6\x9b\x68\x2d\x89\xe7\xc8\x9c\xa1\xd1\xc0\x44\xe9\x86\x7f\x71\xaf\xcf\x47\xb5\x12\xfb\xfa\xd2\x0e\xbe\x1c\xb7\xfe\x0d\x6d\x2d\xa8\xbf\x93\x7a\x43\xff\x33\xf9\x1a\xf1\x8b\x32\xfb\xe0\xf8\x11\x68\x6a\xd6\x9a\x0f\xc7\x63\x72\xc4\x31\x5b\x3c\x35\x2b\x21\xe6\x93\xde\xc8\x87\x98\x42\xf5\xa2\x7c\x8b\xa6\xf7\x18\x4c\xf8\x8c\x12\x05\x71\x36\x1a\x8a\xca\x1a\xe6\x82\x43\xeb\xd4\xf1\x3f\xe1\x88\x46\x59\xf3\xfe\xeb\x80\x3d\x9e\xdd\x3c\x3e\x87\x49\xd5\xd2\x84\xd9\xb1\x08\x28\xe6\x55\xce\xc6\x42\x45\x8f\x10\xe9\xa4\x50\x46\xe9\x41\x3f\x4d\x5b\xfe\x92\xcd\x77\x1d\x78\x5b\x23\x03\xbc\x63\xe6\x20\x50\x20\x98\x92\xd9\x22\xb2\xb1\x70\x28\x68\x33\x6e\x0f\xfd\x1f\xbf\xbb\x98\x9a\x34\x52\xee\x47\x2b\x5a\x53\xe5\xe1\x74\x6a\x6a\x55\x6b\xaa\x7d\xec\xeb\xb4\xc5\x36\x28\xb8\x93\x84\x62\x77\x91\x1c\xd6\x93\x4f\x29\x80\xf0\x7a\xe5\x1b\x19\x0f\x24\x80\xd9\x42\xe6\xd9\x28\x9f\xe4\x23\xb3\xef\x2c\x17\x34\xcf\xca\xbb\xab\x86\xfa\xde\xb1\x9f\xeb\x11\x34\x9c\xb5\x37\x85\xf3\x66\x0b\x95\x4a\x1a\xee\xad\x5b\x8b\x76\x36\x5a\x33\x81\xc6\xa5\x19\x23\x73\xb3\x42\x67\x1d\x43\x6b\x1c\xd6\x9e\xfe\x85\x7f\x77\x20\x1a\xe1\xe2\xc9\x20\xca\x4d\xc6\x93\x23\x87\xa4\x34\x98\xd0\x53\xf3\x68\x48\xd7\x8b\x7e\x3b\xb1\xcb\x75\x6d\x22\x66\x9b\x68\xd9\x24\x21\x18\x7f\x50\x23\xe9\x34\xdf\x40\x72\x30\xf2\x88\x8a\xbb\x8c\xc4\x6e\x6c\x7a\xbb\x80\x1a\x67\xe3\xeb\xa4\xd7\xeb\x35\xdd\xad\xe8\x65\xaa\xc7\xbc\x40\x0f\xc2\x5b\x92\x09\xc5\x6a\x19\x3e\xb5\xc6\x6d\xed\x31\x25\xe8\xde\x02\x26\x05\xb6\x14\x4c\xca\xd1\xa9\x1e\xd4\x41\xd0\x39\xec\x1a\xbc\xe9\xc1\x83\x79\xb5\x8a\x40\x84\x51\x67\xdf\xbd\x9b\x47\x8e\x17\x5d\x49\xa2\x4e\xa7\xf5\x38\xf0\x11\xe4\xea\x14\xb4\xf8\xac\xec\xa6\xad\x90\xeb\xcd\xe7\x6b\x4e\x92\x44\xab\x4d\x71\xe4\xd4\xe1\xb7\x3f\x78\xb6\x5e\x2e\xbc\x75\x94\xde\x77\x75\x32\xaa\x33\xd2\xa0\x18\xfe\x10\xf3\xb2\x1b\x58\x37\x08\x64\xf3\x0d\x30\x7e\x1a\x1b\x6e\x01\x0c\xf6\x74\xfd\x2e\x48\xc7\x77\xee\xf0\xea\xec\x9e\x49\x15\x03\x23\x9a\x9b\xdf\x2c\x06\xe1\x1a\x83\xb3\x6e\x32\xb4\x16\x1a\x93\xc0\x70\x83\xf6\x1b\x08\xbe\x5d\x03\xaa\x4c\xdc\x2f\xfc\x9a\x7a\x1f\x91\xd1\x67\xb2\x9f\xfa\x61\x92\xac\x22\x0f\x90\x32\xcd\x5f\xa6\x7f\xab\x20\x7d\xaf\x45\xf9\x85\x08\xe9\x32\x1b\x1a\x65\x60\x92\xcf\xe6\x53\x72\xa5\x65\x3b\x0c\x80\xec\x53\x36\xec\xee\x58\x68\x36\x72\x8c\x29\xc7\xa4\x43\x64\x74\xc0\x1b\xc3\x47\xe6\xb6\xa7\xb6\x5f\x2a\x06\x9f\xb8\x6b\x1c\x9a\xea\xbd\x69\x79\x46\x46\xeb\x67\xae\x08\x5d\x9c\xd2\xe5\x43\xc6\x40\xee\x87\xab\x50\x61\x3a\x45\x90\x03\xe1\x1f\xdd\x51\x3a\xa6\x9e\xd2\xb1\x2b\x5c\x55\xd9\xa3\x72\x5a\x12\xc8\xd8\xbf\x55\x47\xb0\xa9\xe9\x19\x85\x6b\x8e\x1a\xd8\x8f\x40\x4a\x9d\xf9\x06\xa1\x09\xa9\x75\xd7\x55\x37\xbd\x86\xcd\x12\xb4\x7a\xf1\xab\x90\x5b\xc5\x34\x52\x71\x90\xd0\x17\xa9\xe6\x69\xb1\x69\x09\xfe\x9e\x03\x8c\xc8\x1a\x8f\xa1\xaf\xd6\x14\xad\x14\xaa\x2c\x3d\x5b\x64\x18\x3c\x0c\x8b\x30\xac\x70\xb5\x54\x05\x67\xe5\x74\x9c\x15\x8b\x72\xcc\x3f\xc7\xe5\xf8\x2c\x5b\x0c\xa7\xab\x4c\x7e\xa7\x8b\xb7\xe5\x62\x74\x9e\xcb\xf7\xd1\x22\x9f\x55\x20\x8a\x6f\x9d\xa8\x99\x70\x10\x75\x60\xcc\x51\x63\x9a\xf0\x53\xcd\x0e\xbe\xcb\x8d\xf1\x07\x08\xb1\x48\xe2\x61\x05\x80\x68\xbf\x07\x99\x7e\x52\xbe\x43\x33\xc3\x8b\x83\x3d\xf2\x82\x44\xa5\x34\x02\x11\x7e\x42\x9f\x9e\xec\x1d\x5c\xd7\x8a\x5e\x9c\xd0\x20\xd8\xb4\xb8\x80\x1b\x0c\x85\x1d\xb2\xea\x45\xcf\x6f\x62\x36\x31\x63\xb9\x28\xad\xb7\x3f\x19\x6d\x27\x8f\x5e\xbd\x4a\x46\x2b\xd8\x2e\x93\x4b\xd6\x22\xa2\xd7\xcf\xbf\x7b\x3e\xa0\xdc\x04\xa9\xf8\x13\xbc\xe2\x4d\x3d\xc5\x4b\x9b\x63\x9a\x4e\x32\xd4\x7d\x87\x84\x3f\xc7\xd5\x70\xee\xce\xbe\x64\x2e\x4d\x78\x6f\x03\x11\xd6\xc2\x92\xcb\xb5\x09\x57\x0b\xae\xd5\xdb\x7c\xf9\x80\x2c\x4c\x06\xfd\x7e\xb5\x44\xfb\x17\x58\xc0\x64\x5a\x5e\x92\x9d\x49\xda\xdf\xbb\x7f\xef\xf3\xaf\xee\xef\xde\xef\x1f\x7c\x71\xff\x8b\x2f\x0e\x94\x96\xb1\xf5\x13\xb5\x7e\x38\x9f\x67\x80\x3a\x41\xe4\x68\xa1\x30\x3c\x2e\x47\x44\x72\x7b\xe6\x8f\xc7\x7c\x59\x01\x82\xae\xa6\x20\x19\xff\xfe\x3b\x41\x0f\x8f\x3f\xe1\xad\x5c\x3b\x81\x83\xaf\xbe\xdc\xdb\xdf\x75\xc3\x83\x54\x28\x5e\x40\x88\x68\x00\x25\xd3\xdb\x8d\xfc\xdd\x93\x1e\x91\x24\xd8\xb2\xec\xdd\x28\x9b\x9b\x08\xe5\xa6\x70\x89\x7b\xd5\xe9\x44\x26\xe4\x8e\xfd\x81\xf9\x62\x2c\x70\xc6\x80\x99\xa7\xa8\x63\xe8\xcd\xca\xdf\x40\x20\x4c\x7b\xe5\xe2\xac\x9f\x15\x3b\x3f\xbe\xea\xc3\x7a\xab\xfe\x6b\xa0\x11\x55\x1f\x36\xe6\x97\x47\x3c\xce\xbf\xbe\x82\x65\x03\x41\xf9\x45\xe2\x98\xb1\x73\x61\xbb\x48\x2f\xf2\xb3\x14\xdf\x29\x30\x96\xe5\xc3\x33\xdc\xa0\x65\xf9\xb4\xbc\xcc\x16\x8f\x52\x8c\x26\xdf\x9b\xd1\x5b\x51\x5f\x26\xf4\x73\xbf\xfd\xf3\xf8\x6e\xa7\xdf\xc1\x25\x90\x79\xff\x93\x62\xd9\x7e\x99\x9d\x01\xa6\xeb\xfd\xdb\x5e\x97\xac\xd5\x60\xd2\x07\x7b\x7e\xf4\xc1\x74\x9e\x7c\xf2\x86\xf4\x73\x7f\x7b\xf5\xfc\x59\x8f\xf5\x60\xf9\xe4\x0a\x70\x62\x57\xb2\xe1\x14\x65\x00\xfc\x9c\xf9\x10\x44\xde\xe1\x95\x71\xbd\x0a\x6e\x2f\xa3\xb8\x25\x52\xcf\x37\x89\x97\xd4\x36\x51\x74\x2d\x18\xf1\x42\xb4\x37\x1e\x5e\x40\x85\x11\x22\x54\xcb\xa8\x21\xcd\x96\x5c\xb4\x37\x6b\x8e\x1c\xaa\x6d\x3b\x93\x69\x61\x04\x6d\x8f\x86\x41\xd4\x98\x95\xe8\xad\x42\xaf\x5b\x1c\x20\xe4\x78\x97\xde\xc3\x5d\xcd\x07\x49\xeb\x93\x11\x3a\x79\xb4\xc4\xd2\xff\xae\x38\xad\xa6\x70\x9c\xf3\x74\x94\x49\xa1\xdf\x24\x91\x36\x89\x6d\x24\x9d\x47\x6b\x7f\x32\x4a\x82\xda\xad\xbb\xc4\xdb\xc8\x66\x9f\xaf\x66\x69\x01\xfb\x24\xc9\xd8\xf2\xc9\xc4\x79\xb3\xde\xb1\x3d\x75\xdc\x7b\xfc\x99\x8b\x5a\x8f\x6e\x71\x2d\xc2\x07\x38\xc0\x5d\x13\xbc\x60\xca\x1a\x6b\xc3\x32\xcb\xec\x80\x35\xee\xda\xda\x79\x71\x9e\x2d\xf2\x65\xeb\xc4\xe8\x1b\x89\xfd\x0b\x4d\xe0\x2d\x97\x4d\x0c\xb6\x8d\x50\xc5\x79\x7a\x31\xce\x2b\xe1\x3a\x7c\xb2\x04\x1a\x72\x89\x30\x85\x96\x62\x6f\x29\x23\x0a\x65\x73\xe0\x37\x5b\xf4\xfb\xc0\xd7\xbe\x2c\x29\xf1\xb7\x08\xaa\x16\x24\xc4\x35\x22\xcb\xf1\xa3\x09\x39\x8f\x4a\x01\x72\xa7\xc0\xc1\x3e\x19\x05\xef\xc3\x5b\xe2\xd3\x7b\x46\xd1\x14\x57\x4b\xf1\xc2\x05\xfc\x8f\xe9\x84\x29\x59\x11\x5c\x8a\xbc\x80\xcb\xc7\xdf\x10\x1f\xe7\x05\x35\xd4\xf9\x8c\x76\x0d\xf4\x60\x06\x8f\x47\xa6\x40\x36\x0c\xe4\xf4\xf9\x14\x80\xa0\xdd\xff\xe4\x38\xdd\xf9\xed\x93\x93\xfe\x59\x57\x1b\x25\xc2\x05\xf6\x5c\x01\x3f\xf9\xa4\x45\x82\x9c\x7c\xd1\x51\x52\x68\x3c\x0e\xd5\x66\x2a\x8f\xbc\xca\xef\xdd\x03\x9f\xbc\xf8\x11\x7d\xc9\x31\xa0\x6e\x86\xe1\x73\xcd\x43\xe8\x67\x38\xd3\xcf\x60\x47\x5c\x83\xb6\x89\x99\x0b\x9d\x5d\x71\x6a\x67\x38\xc7\x8b\x1c\xb3\xb4\xc1\xa7\x7c\x91\x00\x91\x32\xae\x17\x66\xa1\x34\x23\x25\x69\x74\xec\x2d\x31\x22\x27\xd5\xec\xa2\x70\x33\xd2\x4a\x1e\x06\xc0\x6b\xa5\x1a\x46\x85\x59\x45\x79\x4e\x09\xf3\xc2\x7d\x47\x96\x8c\x4c\x2f\xd2\x8b\x34\x9f\xe2\x6d\x27\xa9\xf1\x59\xb9\x53\xce\xf9\x83\xae\x7d\x6a\x3c\x2d\xd2\x64\xdb\x6c\xef\xf6\xcd\xd8\x81\xc6\x31\xc4\x8e\xe4\x80\x73\x74\x2e\x5f\x5c\x61\x77\xa2\xb6\xe7\xd8\x03\x4f\x1e\x7f\xd9\xff\xaa\x8b\x03\x2f\x32\x07\xc1\xfe\x14\x6c\xb7\xe3\x32\xab\x30\x84\x01\xed\x63\x8b\x84\xb3\x96\x5b\x7d\x8b\xdd\x68\xf9\xec\x0c\x97\xc5\xfd\x6c\x09\x2b\xa6\xba\x35\x45\x46\x35\xe5\xbf\xc9\x4f\xaf\xf8\x7e\xa9\x06\x5d\xd3\xda\x57\xc5\xb9\xdd\x7e\x85\xb3\x3a\xb5\xf8\xa9\x6a\x14\xf0\x5c\x95\x1b\x94\xdf\xc8\xb4\xb6\x5d\xed\xd0\x36\x42\xfb\xd6\x86\xb5\xf0\xbf\x80\x73\x15\xdd\xd6\x93\x65\x36\xb3\xae\xd0\x02\x65\xbe\x97\x67\xd8\xce\xf8\x51\xbb\x31\x14\x70\x2a\xcb\x8a\x6b\xad\x40\x47\x0e\x3b\xba\x19\xd6\x7f\xde\x06\xab\xc3\xdf\x2c\x24\x60\x90\xa3\xbc\x5c\x55\x70\xc5\xe6\xc8\xcb\xd1\xed\xe2\xe1\x67\x98\x17\xf1\x86\xfd\x42\x7e\x5e\x91\x23\xc2\xb4\x6e\xbb\x50\x24\x8a\x2e\x2d\xb4\x10\xd1\xee\x1f\xfa\x80\x1f\x13\x71\x54\xdb\xc0\x7a\x6a\xba\xff\x1e\xbb\xc8\xdd\x5a\x4f\x0c\x8e\x11\xa1\x88\x38\x53\xd9\x36\x4f\x57\xf1\xeb\x4f\x15\x1f\x6f\x4d\xd1\x39\x1f\xbb\xf5\x23\xd0\xbc\xbe\xe5\x5b\x45\x5c\xb3\x61\x08\x2d\x8e\xaf\xd8\x86\x87\x5e\xd0\x68\xf7\xf8\xea\x33\x4a\x12\xae\xb5\x02\xc0\x2e\xdf\xe6\x59\xd5\xd7\x7d\x1b\xb6\xfb\xaa\x5c\xb9\x44\xc2\x65\x92\x52\x5e\x84\x24\xaf\xc7\xa8\x7d\xaa\x36\xe0\xa6\x57\x1d\x5f\x60\xf1\xa1\x5a\xfa\x53\xee\xe6\xa6\x57\x75\x4e\x89\x03\x38\x0e\x70\x60\x5c\x30\x3f\x47\x59\x77\xa3\xd8\x03\x31\x59\x17\xd8\xde\x19\xa3\xaf\x7c\x44\xe8\x69\x58\x8a\x5a\xee\x19\x80\x5f\xef\x4d\x25\x49\xfa\xad\x44\x8c\x1d\xf8\x42\x71\xf5\xa7\x48\xc5\x02\xa7\x4e\x86\xcb\x16\xf4\xce\xc0\x7f\xb8\x0f\x46\x10\x39\x32\x87\x7b\x18\x00\x1d\xb9\xa6\xc5\x3e\x8c\xed\x17\x25\x12\x1b\x06\x48\xcb\xe5\xb3\x4a\x47\x4a\x78\xed\x32\x64\x21\x5d\x1c\x91\xbb\xbe\xbb\xb1\x7c\x59\xba\xb4\x6d\xf4\x27\x49\x63\x6f\xf3\x79\x70\x23\xf8\x1b\xc7\x02\xb2\x77\x14\xaa\x99\x32\xcd\x55\xe3\x93\x3d\xea\x83\x89\xc7\x29\xb6\x59\x9d\x84\xe6\x34\xe6\xcc\x61\x3c\x93\xd6\x85\x67\xb2\xcd\xdc\xea\xb6\x45\xdc\xe6\x58\xfe\x23\x9d\xe6\x63\x7a\x4b\xe4\x09\x20\x5d\x37\xaf\x4b\x18\x19\x01\x64\x82\x11\xc9\xa8\xd3\x0c\x79\xee\x6e\x92\xf7\xb2\x5e\xb2\xcd\x24\x30\xca\x95\x8b\xb6\xde\x45\x99\xb3\x08\x0d\x38\xa9\xfc\xac\xc0\xe7\x13\x64\xf3\x74\x28\x0b\xa8\x43\x9c\x24\xf3\x38\x61\x53\x62\xd2\xc9\xe5\x75\x99\xce\xe6\x41\x3b\x4c\x71\xa2\x3d\x2d\xa6\x94\x34\xc6\x0d\xb1\xb5\xd6\xc3\x28\x4e\x74\xa8\x13\x9a\x50\xdb\x13\x2a\x7c\x05\xc2\xb1\x9d\xf6\xdd\xbb\xc9\x27\xc1\x47\xd1\x9f\x9d\x68\xec\x69\x4d\x41\xe9\x4c\xce\x8c\x0f\x9b\x4e\xdb\x6a\x10\xeb\xcd\x94\xf3\x16\xb6\x0a\x8e\x7b\xa0\xbb\x67\xbb\xc0\xb5\x6d\x69\x0f\x75\x62\x3c\xe4\xda\x8c\x4f\x8d\x32\x41\xbf\xda\x99\x8f\xb2\x2f\x48\x27\x4c\x91\xba\x45\x62\x54\x58\xef\x5b\xaa\x44\xbb\x96\x6f\x6d\x99\x95\x17\x30\xd0\x5e\x4b\x23\x13\xa3\xc3\xd1\x29\x8a\x23\xa7\x0e\x30\x6c\x23\xbc\x8d\xd0\xe8\xae\xc9\x81\xac\xbd\xb4\xc8\x2d\x88\x2a\xec\xa0\xc3\x30\xc3\x0f\x3d\x75\xac\x6c\x4e\x7e\x8a\xcf\x87\x9d\x23\x1e\xaa\x54\x19\xd6\x87\x32\x07\x76\xf6\x8b\x0c\x89\xff\x70\xa9\xed\xda\x14\x9a\x99\xa3\x6e\x45\x18\xbc\x29\xba\x11\x62\xec\x5c\xf4\xe3\xcd\x96\x35\x8e\x86\x7a\x56\x42\x96\xff\x5b\xd1\x72\xa5\x5f\x39\x8c\xf7\x42\x83\x21\xb3\x17\xed\x73\x24\x77\xcf\x03\x7c\x15\xea\x50\x64\xb5\xf5\x52\x98\xe5\x07\xa9\x99\x93\x68\x7d\x8c\xdd\x96\x0f\xa6\x9e\x67\x21\x73\x27\x88\x63\xbd\x7b\xe2\xc9\x1e\x69\x71\xb5\xa4\x60\x9b\xc4\xab\x01\x42\x6a\xa1\x95\x2e\x69\x0e\x24\x38\x60\x29\x95\x8d\x70\xd9\xfa\xa4\x74\x42\xa4\xf7\x7c\x61\x8f\x03\x39\x5d\xec\x39\x39\x75\x28\xec\x94\x53\x45\x72\x81\x8d\xca\x55\x13\xcd\xf4\x2a\xeb\x52\x59\x9b\xc5\xb2\x4e\x5d\x2e\xeb\x8a\xee\xc0\x5b\x1c\x6c\x04\xc8\x56\x68\xf5\xbe\x42\xb1\x8a\xe2\x6e\x56\xa3\x74\x0e\x17\xea\x13\x7e\xde\xe7\xe0\x65\x79\x31\xc2\x90\xc0\x7c\xa1\xf8\x79\x85\x26\x25\x3d\xe1\x7e\xd2\x20\x24\x03\xa0\xd4\xe7\x2c\x59\xb0\xd8\xbc\xd2\x79\x32\x9f\x68\xe4\xcd\xfa\xd5\xa1\xb9\x3d\x39\xe6\x3f\x4f\x0e\xd5\x40\x5e\x1c\x47\x67\xb0\x64\xda\x84\x86\x9a\x17\xe9\xd4\xec\x14\x0d\x7f\xe2\xec\x28\x65\xca\xae\x2d\x83\x15\x42\x67\x17\xdb\x75\x0e\xbd\x58\x06\x45\x79\xa9\xed\xb1\xe5\x8d\xf4\x54\x75\x7d\x2a\x0a\xa6\x9c\x81\x04\xb3\x9b\x5a\x29\x55\x4e\xfa\xd4\xf6\xa8\x05\x4b\x2f\xfb\xaf\xda\xab\x9d\x1d\x67\xda\xc9\xff\xd6\xb7\xd5\x4b\x0f\x1d\xdf\x9c\xba\xd6\xde\xed\x92\x40\x6d\xbd\x8a\xbc\xc2\xf1\x6e\x04\xaf\x70\x26\x08\xd1\xd9\xf7\x85\x43\x94\xf4\x4e\x00\x48\x4d\x3f\x1b\x20\x8e\x73\xb2\x5c\x8f\x2c\xc8\xa4\x40\xba\xa3\x4e\xe2\x63\xe1\x48\xa6\x6f\x87\xe7\x39\xfa\xa4\x7e\xd0\x09\x38\x2a\x4d\x6b\x1e\x98\x0e\x92\x81\xa5\x19\x6c\x7d\x5a\x38\x95\x96\x96\xb1\x74\x28\x13\x7c\xe8\x09\xc5\x90\xca\x50\x52\xe6\xb3\x86\x57\x4a\x2e\xe9\x31\x53\x3b\x82\x5b\x64\x4c\x92\xad\xf8\x54\x65\x48\x53\x25\xa3\x0f\x73\x0a\x05\x73\xb5\xf9\x74\x3c\x4a\x17\xe3\xc6\x67\xb9\x98\xd8\x1a\xa3\xb3\x22\xdd\x84\x12\xa9\x7e\x90\xd1\x1f\x5d\x9e\x47\x00\x41\x7c\x90\x56\x1f\x29\xf4\x4d\xab\x43\xd0\xb9\x6c\xf7\x8f\x7f\xae\xba\x27\x77\xfb\xd6\xc6\x8f\x5f\x76\xe9\xa3\x7d\xb1\xdb\x8a\x1b\x04\x88\xdf\xd2\x5d\x2f\x39\x38\xb5\x44\x33\x5e\x84\x8d\x65\x5e\xc0\x79\x12\x32\x3a\x2b\x50\xcd\x45\x09\x84\xc5\x36\x92\x71\xa0\x9a\x98\x0c\x8b\x8f\xc4\x16\xe9\xfd\xfc\x19\x62\xbb\x56\xef\xb3\x07\x2d\x4d\x89\x6c\x23\xc2\x95\x88\x97\x76\x5a\x11\x21\x1d\xb9\x5d\x36\x96\x42\xca\xcd\xfa\xe5\x76\xeb\xff\xa0\xee\x50\x9d\x2c\x3b\xe3\xb5\xc9\xab\xaf\xf5\x6f\xad\xce\x7a\x09\x9e\x1a\xde\xd8\x69\xd0\xd5\x96\x18\x68\xbb\xf0\x87\x24\x38\x30\xb0\x95\xab\xe5\x7c\xd5\x9c\xd0\x25\x64\x95\xda\xfe\xd9\x0b\x68\xb4\x5a\x9d\xba\x97\x7c\x45\x17\x8a\x1f\x8e\x0d\x4b\x68\x45\x08\x14\xd0\xe4\x02\x75\x25\x71\x04\xe9\x2b\x2f\xf3\x48\x62\x75\x05\xaf\x9b\xbf\x22\xd7\x38\x31\x6c\xee\x74\x09\xec\xfd\x6a\xcd\x4d\x3c\xd3\x02\xff\x08\x6b\xe6\x05\x01\xd4\x79\xb5\x11\x7e\x28\x5a\x14\x8d\xe6\xa0\x22\xf4\x4f\x71\xd6\x24\xcd\xc3\xf3\x61\x6f\x3a\x3c\xd5\xbe\x61\x78\x17\x39\x3a\xb0\x65\x91\x79\x29\xe6\x9e\x05\xd2\x53\x20\x56\x35\xe6\x5d\xcc\x53\x2e\xd2\xa9\x77\x1a\x5c\x7c\x83\x30\x22\x6c\x13\xd2\x40\x6b\x9f\x8a\x84\x54\xb9\x78\x90\x4d\xb0\x25\xf3\xf0\xb1\x47\x4f\x59\x88\x3a\xf0\x87\x3c\xfe\x28\x2d\x29\x94\x9a\xe4\x75\xdb\xb3\x6a\x7b\x70\x70\x1f\x75\x06\x1b\x45\x6a\xaa\x3f\xef\xeb\xf7\xea\x69\x3e\xec\x93\x6c\xcc\x2a\x09\xfc\xb9\x3d\xd8\xfb\x02\x7b\xdf\x28\x5c\x4e\xbd\x77\xd5\xb9\xcb\x1a\xa7\x2d\x86\x17\xa4\xa3\x5f\x54\x0d\x7e\xf5\xb4\x9b\x7e\xaf\xbd\x7a\x8a\x3d\x97\x97\xd1\xa5\xd8\x93\x35\x98\xf4\x8f\x7b\x5f\xea\xf4\x8d\x26\xec\xe3\x3e\xad\x6d\xa3\x48\x28\x6b\x7c\x04\xd7\x07\x7a\xb4\xa9\x39\x82\xfd\x70\xe5\x1f\x92\x11\xb0\x39\x34\x64\x98\xa4\x32\x48\xd7\x67\x58\x60\xdb\x50\xd2\x57\x9a\xef\x9b\xed\xee\xa6\x11\x2c\xe9\xb7\xe4\x66\xf3\x2b\x61\xa1\x57\xeb\xd7\xaa\x56\xe7\xd7\xea\xf6\x31\x2d\xc3\xb4\x81\xcf\xca\x72\x6e\x19\xf8\xe6\xe8\xcb\x41\xa0\xa8\xf7\x4a\x2b\x2e\x39\x75\x23\x79\xec\x3c\x7c\xfd\xbb\xb1\x13\xc7\x2d\x01\x1c\x27\xfe\x2a\x5b\x31\x4b\x72\xf5\xe9\xa6\x5c\x78\x14\xe2\x92\x02\xcd\x18\xf4\x71\xa7\xcd\xae\x5d\x0e\x83\x70\xd5\x4e\x47\x3b\xce\xd4\x9a\x13\x67\x11\x89\x53\x23\xbd\xe2\xac\xd1\xd6\xc3\xbd\x41\x44\xa2\x52\x4a\x73\x1b\x30\x91\x4f\xdf\x0b\x47\x2c\x7d\x99\x16\x5c\xa3\x16\x1a\x91\xbb\xa2\xa8\x7d\x44\x1d\x39\x86\x25\x07\xf1\xb3\x5f\xab\x6c\x84\x4f\x70\xfc\xcd\x06\xda\x3b\x32\xd1\x1b\x5b\xb8\x82\xda\xa7\xcb\xaa\x6a\xa9\x3e\x24\x52\x21\x55\x93\x90\x7e\x76\x8e\xbd\x5f\x57\x19\xba\xf1\x51\x45\xfa\x5b\x6a\xd2\xdf\xac\xac\xb5\xfe\x3d\x76\xbe\x7a\x2f\xf4\x02\xec\x1a\x5d\x4d\xbb\x20\x17\xa8\xd9\xae\xc9\xe4\xa6\xd0\x2b\x7d\xe0\xfd\xe2\x44\x1e\xed\x20\x26\x29\x1d\x12\xdb\x14\xd0\x21\xd9\x68\xa9\x36\x54\xa3\x3d\x52\x7f\x86\x18\x4c\xcd\x6e\x89\x0a\x5e\x4c\x1a\x8c\xc4\xe4\x0e\x12\x43\x55\xe0\xae\x4d\x78\xe8\x6e\x22\x6f\xad\x89\xdd\x67\x97\xb8\xcb\xdf\x65\xbd\xc2\x07\x1c\x1d\x12\x5f\xa7\x25\xe8\xa4\xdb\x84\xf4\x8c\x13\x3b\x50\x5b\xfe\x61\xd2\x69\x59\x3b\x70\xb5\xb3\xfe\x3a\xc4\xe6\xa2\xb6\x2f\x0f\xdc\x56\xd8\xba\x30\xb8\x8d\xaa\xa9\x82\xe6\xcb\x74\xdd\xd4\xd1\xe2\x23\xb2\xcf\x6e\x6f\x29\x66\xa3\x91\x28\xfd\x62\x93\x6f\xc5\x84\x0e\x37\xcb\x87\xd5\xc3\xf8\x5f\xee\x76\xdc\xb8\x06\xc6\x14\xc0\x59\x5b\xc5\x06\x5f\x23\xd7\xae\xe3\xf7\x21\x08\x52\x82\x50\xb4\x55\x3d\x3b\xdc\x6a\x7e\xb6\x48\x39\x8a\x8a\xcd\x54\x46\x43\xcb\x07\xb7\x1f\x1c\xaf\x93\x01\xc6\x45\xec\xb4\x88\x1f\x04\x18\x27\x23\xf4\xff\xad\xdf\x45\x99\x86\xc2\xad\xba\x8c\xff\x14\x14\x1e\xcd\x36\x5e\x40\x4f\x77\x18\xd2\x5c\x99\xad\x86\x68\x7f\x5e\x9f\x11\x15\xfb\x7d\x7d\x6b\xa2\x78\xe8\xce\xb8\xd0\x56\x64\x56\xb7\xfa\xfb\x77\x2f\x5d\x3d\x57\x66\xab\x59\x1d\xe3\x0b\xc2\xc3\x32\x66\x50\x8a\x4b\x5e\xb6\xea\x6d\x5e\x66\xb0\xad\x95\x45\x9b\xf5\x0f\xae\x89\xa6\xf4\x5c\xd7\x95\xa0\x9d\x69\x6b\x5e\x52\x4a\x8c\x16\x6c\xe0\x65\x36\x14\xc2\xec\x32\x8a\xba\xec\x8c\x68\x7b\xe1\xe6\x42\x59\xbb\x62\x29\x48\xa1\xbf\x7c\x74\xf5\xc2\x03\x67\x5b\x02\x23\x7e\x79\xef\x40\x75\x3e\xcb\x50\x7d\xfe\xa3\x85\x0a\x6a\x10\x16\xd7\x2e\x22\x07\xce\x96\x3c\x7c\x06\xd5\x8b\xab\xc6\xf4\xea\x5b\xfa\x2a\x8d\xed\xba\xeb\x5f\xdc\x94\xb3\xc5\x0f\xcc\xd1\x7e\x97\x4d\xa6\xbc\xd4\x00\x18\xea\x55\x1e\x18\xd8\xac\x7d\x61\x6f\x50\xb8\x68\x4e\x69\x4d\x31\xc0\x50\x12\x3b\x32\x99\xf9\x6a\xcd\x3a\xcd\x73\x71\xb7\xb1\xa1\x0a\xe0\x05\xa3\x9b\x8d\xd7\xe8\x2d\xcf\x17\x59\x75\x5e\x4e\x83\x14\x79\xcd\xf5\x60\xd8\xbd\xdd\xfd\x7b\xda\x6f\xe0\xd5\xab\xa7\xd6\xe3\x15\x25\x26\xf3\x7c\xc7\x3c\x9d\xdd\xcc\x89\x8d\x1f\x87\x7f\x62\x70\x54\x7d\x40\xf8\x2e\x24\x9f\xf1\xcf\xf0\x33\xda\xc6\xcc\xcf\x17\x69\x65\x81\x41\x95\x84\x95\x47\x99\x03\x32\xfa\xbb\x56\x21\xb5\x9f\xd3\xfa\xc7\x7c\x7e\xce\x8f\x4b\x5c\x43\x7e\x86\xd5\x16\x19\x32\x1f\x3f\x16\xe9\x6a\x79\x4e\x06\x5e\x63\x07\xa6\xf5\x2f\x18\xf9\xda\x58\xa6\x02\x88\xd0\xa9\x0c\x9a\xaa\x9b\xf7\x0c\x92\xba\xd7\x6f\x2d\xa9\xc3\x16\x59\xf6\x17\xa2\x08\x89\xc5\xc5\x67\xf2\xfb\xc8\x71\x49\x00\x0c\x5c\x6a\x80\xc6\xb5\xeb\xd9\xea\x47\xaa\x37\x2d\xc9\x32\xba\x7a\x07\x48\xe2\xaf\x70\xf1\x71\x3f\xa0\x3b\xe6\x11\xf1\xbc\xaa\x7a\x05\x63\xd7\x8d\x11\xfe\x82\xe4\x11\x5e\x3f\xb2\x69\xba\x2c\x30\xfc\xe7\x0b\xec\x52\x0e\xdb\x58\xff\x79\xb9\xf8\xc9\xa0\xa6\x57\x2b\x7e\x2c\x77\x4f\x42\x7f\x38\x33\xf1\x0b\xc3\x43\xc8\x13\xd2\x46\x99\x75\x89\xb7\x33\xc1\xe9\x4d\xc9\xa1\x35\xcd\xc9\xc9\xf5\x2e\xc7\x80\xb9\xbe\x2f\x2a\x48\x64\x7c\xc4\xd3\xec\x2c\x1d\x5d\x49\x52\xe8\x7c\x98\x4f\xf3\xe5\x95\xb1\x0f\x40\x2e\x7a\x9c\x4e\x41\xca\xb2\x56\xe2\x6c\x23\xe0\x67\x0f\x11\x31\xc0\x09\x18\x52\xfe\xda\x66\x5e\x8c\x4b\x77\xc8\x76\x48\xd5\xcd\x24\x41\xb3\xf0\xcd\xa4\x5c\xef\x6d\xb2\x72\xc2\x66\x52\x6a\x35\x14\xbd\xf7\x34\x68\x99\x5c\x93\x9a\xbe\xc9\xae\xad\x41\xcb\x51\x4f\x10\x41\xd3\xd0\x5b\xe2\xa4\x66\xa7\x8e\x32\xf9\xa1\xb0\x32\xbe\x07\xb9\x19\x6c\x7f\x52\x6d\x03\x71\xa4\xaa\x46\x47\x6a\x18\x9e\x11\x1e\x91\xcf\xe7\x6c\x99\x37\x20\x0c\xa6\x6a\xb7\xc7\xf1\xa9\x39\x48\xe3\x4b\xe4\x66\xd1\x2c\x90\x1a\xf5\x1e\x3f\x79\x1e\x01\x25\x63\x7b\x18\x6c\x85\xb4\x59\xaa\xf5\xe0\x07\x53\xbd\x02\x20\xc1\xa5\xe5\x63\x79\xfe\x49\xa7\x44\xc1\xd9\xbc\x0b\x66\xab\x09\x09\x26\x9f\xe3\xee\x2a\x9d\x63\xd5\x2a\x8f\xbd\x41\x40\x7e\x73\x40\x71\x8c\x63\x9e\x48\xaa\x31\xe2\x96\x07\x8a\x8d\xe6\x0c\x63\x86\xe3\x1d\xf8\xcc\x33\x7f\xc4\x5e\x06\x8e\xf3\xe5\x42\xe6\x53\x07\x9a\x67\x97\xda\xc0\xff\x0d\x1c\x5f\xc8\x85\x34\xf3\x01\xff\xc3\x25\x8e\xb7\x1b\x84\x0c\x20\x57\x20\x96\x6e\xa0\xb8\x3e\xd5\x8e\xd9\xb8\x41\x8d\xdb\xe3\x2a\x8e\x83\x1b\x84\x6c\x1e\x57\xa8\xb1\x60\x83\x06\x9e\x2d\xa8\x4e\x8c\x5e\x58\x97\x0a\xcd\x46\x19\xe6\x69\x10\xf2\x57\xb2\x69\x04\xf0\xfc\x51\x9a\x4c\xde\x0d\x2c\x2d\xe6\x22\x40\xdd\x03\x4b\x7f\xcd\x9e\x1a\xba\x3a\x08\x49\x2f\x57\x40\x8a\x3a\x70\x84\x56\x0a\x53\x53\x94\x4a\x01\x93\xcd\x81\x47\x53\xf9\x53\x9d\xe0\x0d\x9a\x48\xaa\x4c\x29\x64\x47\x06\x0d\x6c\x8a\x9c\x89\x22\x25\x83\x3a\xc5\xd9\xb2\xaf\x67\x56\xf3\x2a\xe0\x1b\x04\x06\xa1\x5b\x9c\x38\x7f\x78\x4a\xda\x61\xd9\x2e\xf5\xf0\x91\x93\x4b\xbb\x47\x2e\x31\xf2\xbe\x9f\xc4\x5a\xe7\x98\x28\x39\x4e\x0b\xfa\xcd\x1b\x87\xc8\x40\xe9\x5b\xfa\xa6\xa5\x26\xea\x80\xc6\x9a\xcb\x92\xa4\x5d\xa1\x0b\xa4\x9c\x5c\x94\xc3\xac\x51\x6f\xd4\x90\xff\x5d\xa1\x3d\xb7\x4c\xb5\x25\x0a\x2f\x84\xfc\x37\xb0\x00\x6b\x69\x31\x7c\x0f\x84\x0d\x97\x3f\xc1\xc9\x14\x98\x47\x21\xd9\xd9\xb3\x0c\xa8\x42\x2e\xaa\x56\xa0\xe2\xd8\x75\x1c\xb3\xea\xdd\xf7\x87\x05\xb4\x47\x6e\x9f\x1c\xeb\x1d\xf5\x65\x00\x06\x70\xc3\x46\x6f\xd1\x88\x1a\x3e\xe0\x9b\xdd\x30\x33\x0e\xf0\x62\x4f\x1d\x4d\x1f\x89\x38\x68\xf9\x9a\xc3\x36\x87\x71\x5b\xf8\xeb\x74\x12\x24\x30\x6d\x3d\x2b\xb5\x3e\xd5\x5a\x00\x5b\x3b\xd0\x6e\xb2\xeb\x05\xd2\x52\x2b\xac\xef\x44\xb0\xd2\xe3\x5d\x1b\x53\x21\x22\x8d\xe1\xc1\xa2\xe8\x66\x90\xff\xcb\x0c\x2d\xfe\xac\x05\x10\x6f\x83\xcb\xc2\xcc\xd4\xd7\x4b\xcb\x6c\x5e\x4d\x93\xb6\xa0\x46\x62\xaa\xd0\x76\xda\xd9\x0e\xd6\xa6\x17\x50\xd4\xb6\xad\xd0\xa9\x19\x13\x3a\x51\x43\x9d\x1e\x67\xc2\xd7\x59\xb2\x5c\xbe\x7f\x6f\x93\x88\x29\x34\xed\x54\x25\xa1\x0f\xcb\xf8\x14\xa2\x09\xab\xd8\x9a\x4e\xf5\x66\x9e\xe0\xf8\x3b\x85\xc8\x43\xba\x4f\x98\x00\x76\x2a\x2d\xae\x6e\x93\x81\x50\x4f\x46\x7b\x90\xb8\x79\x29\x26\x03\x2a\x07\x3c\x06\xe5\x6e\x71\x73\xf3\x78\x0d\x0f\x42\xf5\x2d\x75\x7d\x07\x39\x2e\xa7\x59\xba\x20\x9b\x16\xb3\xa8\x70\x20\xaf\xb5\x1b\x2d\x3c\xa9\x88\x7b\x7f\xdb\x4b\x22\x83\x26\x53\xab\xb9\xeb\xbe\xa6\x74\xa0\x07\x7d\x8b\x61\xe2\x8d\x6c\x5c\x8a\x4a\x9f\x36\xfc\x8d\x61\x17\x5a\xe3\x45\x9a\x17\xad\x6e\x2d\x9e\x0c\x5d\xc4\xb2\xf8\x0e\x3f\xcb\xa4\x3a\xa6\x0d\xe7\x5c\xd3\x8d\x54\x3a\x51\xdb\xf4\x45\x3d\x3d\xbc\xed\xc1\xdc\x6d\xe7\xe4\xea\xb7\xe5\x90\x39\x59\xd0\x8a\x72\xab\x35\xcf\xf5\x11\xa7\x5e\x73\x0b\xe7\xfa\xd2\xc9\x61\x90\x47\x77\x48\xc6\x08\xee\x2c\x36\xe7\x94\x37\x48\x2a\x8f\xdd\xaf\x67\x84\xb1\xca\xcd\x7c\xf0\x8d\xa8\x81\x18\xbe\xe4\x3d\x53\xac\x41\xb2\xc7\xbb\x85\x6e\xeb\x13\x40\x93\xce\xb2\x4f\x0a\x43\x58\xdf\x50\x02\xf4\x62\x80\xd8\xc1\x9f\x13\xbe\x70\xb4\x5a\x8e\x21\xd4\x02\xf9\x21\xec\x44\x0d\xf9\x14\x4e\xa6\xe2\x7a\xa8\xc5\x63\x84\x23\x31\xb9\xa4\xd8\x58\xbe\xb9\x23\xf2\x2b\x18\xdb\x1e\xb5\x50\xfa\x03\x1f\x08\x6a\x83\x68\xe3\x1b\x12\xd9\xa9\xae\x97\xfd\xdc\x3b\x9a\x2c\x38\x18\xca\xaf\x9f\x8d\xf5\xf9\x68\xd4\x89\xf9\xf6\xda\xc7\x26\x09\x61\x6b\xce\xfa\x3e\x4e\x00\xcc\xfd\xb5\x92\xeb\x93\x5a\x33\x8c\xbb\x12\xb9\x4e\x49\x7b\x56\x9d\xf9\x49\xbf\xc2\xf9\xba\x2f\xad\x79\x29\xda\x63\x68\x44\x61\xda\xe8\xb5\x40\x06\x95\x62\xca\xa4\xab\x4c\xbb\xd6\xad\x94\xfa\xf3\xd6\x69\xef\x18\xef\x2b\x82\xad\x4e\xd0\x1c\xd0\x6d\x5b\x49\xa3\x5c\x6d\x9a\x85\xcf\x59\x0a\xb7\xfa\x4b\xba\x11\x26\x15\x2b\x43\xea\x38\x0f\xcd\x2a\x93\x33\x9b\xbb\x6b\x85\x96\xd1\x75\x02\x65\xee\x5b\x00\x63\xb1\x65\xbb\xaf\xd8\x5b\xd6\x0e\x19\x3d\xbd\xb2\xf8\x41\xd9\xc3\x22\x94\x34\x6e\x59\x23\x4f\xc7\x6f\xc4\x9a\x18\x82\x73\x9e\xa2\x9c\xab\x91\x05\x31\xab\x92\xe4\xd1\xa8\xfc\x05\x8e\xb4\xdd\x5d\xc2\x69\x4c\x57\xf3\xb6\x5f\x4a\x63\x37\x12\x78\x57\xaf\x11\xc2\x65\x4c\x05\xd5\x0d\x70\x90\x35\x40\x81\xcf\xf6\x18\x85\x60\x23\xb4\x29\x9b\x12\x55\x63\x32\x45\x23\x21\xd5\xeb\xb5\xfd\xbb\x96\x03\x6e\x1d\xc8\xf3\xa1\xd5\x81\x1e\x11\x56\xb6\x30\x11\xaa\x25\x8e\x1b\xf7\xc0\x14\x4c\xd5\x85\x82\x38\x5d\x16\xc0\x6c\xde\xa1\xc7\x42\x0c\x33\x6b\xcd\x6c\xd3\x19\x39\x6e\xc0\xf9\xb0\x2e\xb2\xec\x37\x45\x01\xb4\xb4\x14\xc5\x6a\xc0\x12\x3c\x2c\xae\x5c\xa4\x24\x49\x4c\x35\xbc\x52\xbb\x50\x9d\x1b\x87\x4a\x36\x23\x1b\x5b\x5f\xdf\x4b\x16\xe0\x0d\x8e\xb5\xe6\x83\x75\xc8\x72\x0b\xe6\x1c\xa8\x21\xb6\x0b\x1f\x8d\xfb\xfd\xbf\x52\x48\x0d\xb2\xe4\x65\xd1\x82\xbc\x88\xcf\x49\xb7\x53\x25\x97\xe7\x30\x66\x22\x74\xd2\x27\x41\x19\xb3\x07\x0b\x2f\xd7\x07\x77\xd1\x74\x54\xec\xcf\xea\xb6\x98\x0a\xd7\x1e\x18\x2f\x3c\xdc\xed\x0d\x48\x85\x6c\x96\xf1\x66\x42\x0b\x52\x9e\x01\x31\x87\x4c\xb1\x79\x22\x5b\x37\x02\x44\xb9\x88\x80\x80\xa2\xc1\xcc\xf3\x08\x11\x36\x1b\xb3\x1d\xb0\x40\xe3\x6d\xcd\x55\xfe\x84\x86\xc9\x2a\x25\x30\xda\x5c\x52\x2d\xd9\xf1\xcb\xac\xb5\x68\xd8\xf7\x51\x74\x34\xe9\x67\xb3\xa1\x64\x89\x1b\x0c\x26\x35\xdb\xcb\x52\xf1\x18\x6e\x65\x28\x13\x97\x74\x54\x14\x9f\xc2\x47\xe0\x61\x12\x4a\x3a\x97\xcb\x72\xf1\x16\x53\xb2\xa4\x43\xa8\x87\x68\x45\x28\x80\x74\x13\x15\x10\x1a\x60\xc0\x5c\x51\x59\xe7\x4b\x17\x67\xca\x05\xb2\x91\x30\x7c\x3e\xce\x66\x57\x95\x89\x5e\xa9\xbd\x47\x81\x34\x18\xc4\x07\x6b\x93\x34\xda\xea\x86\x1c\x58\x8d\xa9\x08\x9b\x19\x5e\x5b\xce\xeb\xc6\xfa\x86\xcb\x0e\xa1\x4c\x7b\x5a\x34\xb7\x19\xdd\x54\x55\xb3\x07\xf6\x90\x3b\x31\x71\x94\x98\xa3\x35\x8b\x0e\xab\xc6\x16\x1a\xd6\x59\xb3\xb8\x2d\x97\xc3\x39\x8b\xaf\x48\x7d\x6e\x5a\x45\x54\xa0\x8e\xe4\x54\x27\x8f\x46\x97\x43\x9c\x54\x05\x59\x36\x83\x2f\xd8\x68\xa3\x07\x12\x89\xdc\xf7\x3c\xae\x7c\x32\xa2\x30\x5f\x3c\xda\xc5\x4e\xc3\x9b\x33\x7d\x3c\xbc\x59\x1a\x08\x39\xaf\xba\x94\xeb\xde\xe8\x09\x9d\x05\xa3\x5a\x6a\xbd\x65\xdc\xd2\x47\x14\x75\x89\xa2\x4b\xb9\x29\xa1\x07\x6a\x82\x0e\x6c\x14\x5b\x11\xfb\x38\xe5\x06\x36\xbe\xa2\x51\xb9\x0b\xda\x72\x08\x46\xa4\x77\x1e\xd8\xce\x51\xad\xd6\x28\xd2\x56\x4e\xf1\x16\x2c\x83\x38\xbc\x40\xe0\x27\xad\xa0\xc7\x69\x91\xf8\xd8\x6a\x0a\xdd\x65\x84\x35\xa9\x1e\x98\xb7\xc6\xb2\xc0\x53\x87\x6d\xaf\x91\x09\xd4\x6c\x6d\x9b\x55\x2c\x75\xa2\x9b\x28\xbe\x32\xcb\x77\x0b\x3d\x8a\x11\xcb\x3d\x88\x11\x11\xdd\xda\xaa\x5a\xbd\x57\x6c\x0b\xd1\x64\xa2\x69\x7f\xc3\x7d\x63\xe0\x5b\x64\xa3\x2c\xbf\xc8\x38\x2a\x31\x21\x5d\x16\x8d\x0c\xfe\x95\x45\xe0\x57\xfb\x83\x04\x16\xc3\x58\x38\x88\xb2\xa2\x92\xd5\x2a\x18\x16\xe7\x95\xa5\x30\x53\x74\xe6\xdc\x21\xae\x82\x6b\x71\x96\xd0\x2a\xec\xeb\x3c\x83\x53\x1d\x82\x38\x6d\x39\xe6\xea\x32\x27\xc5\x9a\x9a\x90\x0e\xb1\x06\x10\xc9\x2b\xb7\xd6\x3f\x06\x23\xe0\x81\x54\xe7\xe9\xdb\xac\x6d\xcd\x1c\xdb\x7a\x21\x8a\x4d\x94\x50\x7b\x5e\xa7\x24\x71\x05\x9d\x02\x73\xfe\x02\xb3\xd7\xa8\xa6\x7a\x1f\xb0\xc5\x0d\xbd\x32\x3a\x1c\xac\x67\x66\xab\x6c\x71\x91\x2d\xe2\xdc\xac\x24\xba\x51\x0b\x39\x0c\x17\xfe\xd8\x32\x62\xeb\xe7\x22\xf6\xcc\xe1\x22\x79\x31\xd8\x73\x2b\x3c\xf9\x48\x3d\xd3\x49\x53\xd5\x30\x8a\xa1\x96\x00\xac\x34\xa8\x21\x72\xcc\xaa\x5c\x0b\xa6\x16\xc6\x0d\x63\x10\x40\xf7\x61\x78\x11\x05\x99\xaf\xe0\x38\xc8\xa1\x97\x60\x80\x5e\x9c\xa7\x99\x67\x7a\x1a\xd8\x82\xba\xba\x26\xbe\xf0\x26\x37\xd7\x42\x99\x77\x79\x9d\x68\xaf\x61\xdb\x54\x15\x2d\x84\x43\xc2\xf4\x0e\x89\x45\xf8\x24\x69\x4b\x1d\xfe\xd3\xcf\x95\xb5\x6a\x2b\x67\xf2\xc3\x18\x3d\x9f\x2e\xed\x2b\x46\x45\x53\xb1\x75\x94\xe5\x1d\xc0\xf1\x13\x74\x90\x63\x67\x32\xaa\xa5\xcb\xbc\x8a\xf2\x36\xa0\xeb\x49\x91\xa2\xc0\xcf\xad\xa6\x1a\x6e\xfe\x13\xa1\x16\xf4\x0a\x23\x51\xfa\x98\x34\x54\x1e\x59\xf0\xa5\xef\x1a\xe6\x72\xd2\x77\x78\xff\x78\x98\x17\x0b\x74\x3a\x3a\x23\xf4\x52\x20\x41\x44\x8f\x6e\xa1\xae\x30\xae\x41\x26\x8e\xc4\xfa\x6c\x8f\xc3\x36\x5d\x8b\x35\x4c\x91\x66\x2e\x6e\xac\x19\xe6\x02\xac\x92\x39\xa9\x06\x78\x93\x6e\x45\x0a\x6c\xb7\x1e\x40\x49\x4f\x0c\x53\xa4\xeb\x36\xef\x35\xe1\x21\xe1\x3f\x8b\xb8\x1e\xdd\x78\xdf\x06\x95\xd1\x03\xa9\xfe\xfe\x93\x78\x42\xec\xc6\x3a\x12\x5f\xed\xab\x77\x41\x74\xbe\x5d\x9b\x20\x14\x6d\x3d\xed\x84\x2c\x2c\xde\xad\x4d\xb2\x13\xa8\x89\xd1\x89\x2a\x31\x38\xf2\x02\x6d\x12\x4e\x6b\x20\xcd\x99\xdc\xb3\x77\xe8\xd3\x8a\x71\x62\xe0\x1e\x15\x15\x69\x8a\x11\xbb\xa0\xc5\x4c\xb8\x6f\x14\xa1\x58\x20\xd4\xf1\x80\xb7\x7b\x0d\x79\x21\x7a\x91\xc8\x9b\x63\x70\x10\xde\x11\xd6\x36\xc1\x9d\x61\xfc\xd3\x4d\x27\x26\x88\x15\xad\x15\x71\x46\x74\x0a\x82\x65\x77\x64\x53\xa8\x08\xaf\x8e\xec\xc7\x27\xd5\xac\x32\x8a\x37\xbd\xf7\xea\x54\xe7\x8a\xf4\xc9\x31\x5b\x60\x6d\x47\x1b\x5e\x77\xeb\x0b\x50\x87\x89\x4f\x55\x98\x46\x36\xd5\x33\xec\x6d\xe1\x07\x6f\xbf\xe3\xea\xfc\x8d\xf7\x5a\x50\x47\x31\x96\xc7\x0f\xa3\x09\x8e\xbe\x58\x08\x29\xcf\x0d\x29\x0f\xde\x28\x84\xb8\xc0\x78\xa7\xf4\x48\x73\x6a\x43\x8c\x6e\x7c\xc1\xe9\xf5\x46\x3f\x97\x29\x42\xa1\xec\x4b\x8d\x1f\xed\x6e\xd7\x70\xa3\xd9\xc5\xb7\x26\x05\x5b\x47\xbd\x2b\xf1\x51\xea\xaf\xc8\xf1\x22\xd3\x45\x77\x23\x9f\x21\x09\x49\xc9\x9e\x0e\xa3\x69\x01\x94\x67\xef\x52\x24\x86\x5d\x16\x78\xac\xd4\xd4\x0d\x94\x96\x64\x85\x8e\xea\x59\x8c\xe5\xd7\xdd\x12\xd7\x71\x8c\x68\x58\x94\xc5\x6f\xd9\xa2\x0c\x46\xe5\xf8\x5f\xac\x5f\x41\xde\x79\x9a\xcd\x2a\xb5\x53\x96\xa0\x84\x53\xb5\x0f\x7c\xea\xd9\x5b\x6f\x44\x24\xa6\xb5\xf0\x28\xf4\x4c\x26\xef\xaf\xfa\x69\xd9\x13\x6c\x02\xf6\xe0\x7b\x2c\x4f\xa8\x7f\xc9\x9a\x53\xdd\xe2\x92\x53\xaf\x11\xb0\xf3\x70\xe4\x9d\x66\x19\xc7\xd1\x74\x9c\x01\x79\x43\x7e\xfa\x29\x4d\xfa\x8e\x22\xe6\x78\xa2\xa6\x45\xf3\x4e\xc8\x2d\xa7\x29\x61\x8b\x4f\xc6\x72\x70\x94\x73\x4b\x84\xc2\x6e\x63\x2f\xd1\xc7\x4f\xd2\x28\x87\x2d\xa4\x2a\x1c\xff\xdb\x2c\xa3\x47\x4c\x10\x10\x31\x24\x96\xa8\xef\xc5\x14\x12\x73\x9b\xb8\x46\xa6\x09\x83\xb1\xfe\x42\x40\x64\x34\x9f\x52\xe4\x81\x49\x03\xa0\x34\x2c\xe4\x30\x04\x0b\xda\x90\x56\xfd\xe4\x0d\xb2\x11\x96\xb5\xe9\x71\x51\x7d\x8e\x44\x9d\x77\xb1\xed\x95\x27\x53\x93\x5f\x91\x1f\x45\x9b\x81\xe9\x9a\xae\xe0\xe8\x1c\xd6\x0a\xc3\xf5\x36\xd3\x28\x30\xb8\x1e\xc5\x88\x0e\xe5\x52\xf6\x1e\xa9\x6c\x86\x9e\xae\x8d\x36\x5e\x43\x81\x8e\x6d\xaf\x35\xc0\x7d\x6b\x8a\x46\x6d\xf1\xb5\x2f\xe2\x06\x3b\x28\xe8\xc3\xd8\x3a\xd6\xbe\x13\x13\x79\xe3\xb6\x6d\xba\xf5\x9b\x50\x66\xb3\x70\x9f\xa7\x22\xd9\x16\x27\x13\xd9\xb1\x7c\xe2\x07\x1e\x30\xa6\xc7\xfa\xd1\x8e\x3c\xf5\x9d\x08\x46\xe2\xf3\x51\x98\x2e\x68\x2b\x12\xc5\xc0\x74\xe6\xe5\x61\x92\xfe\xa4\x8c\xbb\x74\x79\xaa\x6a\xae\x5d\x84\x6d\xd6\xe9\x03\xd6\xf1\xd5\x3c\x5e\x60\x74\xd2\x98\x14\xcb\x7e\xc2\x60\xae\x70\x2b\xdd\x33\xb4\x71\x15\xf0\x3e\x5a\x4b\xca\xb9\xd9\x73\x41\xcb\xf4\x4a\x45\xbb\x6e\xf7\x6b\xc0\xfb\xaf\x17\x3b\x70\x5e\x79\xc9\x75\xa0\xbc\xe2\x1e\xd9\xc6\x56\x2b\x1c\x22\xe4\x93\x5c\xd5\x55\x05\x7a\x8a\x29\x3a\x5a\x5f\xc8\x88\xc2\x02\xbd\x4f\x36\x34\xd1\x67\xae\x90\xc3\x7a\x7d\x00\x67\x48\x27\xd1\x44\x34\xfe\xa8\x5a\x27\xa2\x3b\x34\x90\x71\x58\x8b\xff\x63\x6d\x0c\x94\x45\x4d\x33\x81\xf1\x94\xab\x75\x9b\x14\xf5\x8e\x67\x3b\xb3\xf4\xcb\x7f\x84\xbd\x4c\xf3\xe5\xf7\xa5\x11\x4a\xbd\xc7\xc1\xf0\x49\x30\x49\xbc\x97\x2a\xa3\x38\xa0\x7f\xfd\x10\x05\xeb\x06\x8d\x0f\x18\x0c\xe6\x0d\x64\x5f\x0e\xb4\x85\x64\x95\xd9\x65\xfa\x82\x0d\x99\xca\x8e\xb5\x31\x4b\xa8\x60\x93\x43\x00\x86\x7b\x99\x91\xaf\x91\x6f\xdc\xe8\xb5\x0c\x1e\xb4\xd5\xbc\xc2\x19\xd1\xab\xc4\xc3\x62\xfc\xa8\x3e\xb7\xb8\x4e\x1f\xaf\x49\xd0\xec\xe6\x87\x00\xfb\xd8\x15\x6f\xd9\x38\xbf\x70\xd7\x9d\xa9\x22\x7e\x21\xc2\x67\x58\x4c\xd8\x02\x40\x92\x39\x30\x53\xfc\xa8\x89\x8a\xe7\x14\xe3\xf2\x10\x45\x33\x7c\x8c\x3c\x37\x8a\xb9\x40\xea\x59\x4a\xd9\x23\x71\xaa\xff\x1b\x16\xeb\x55\x5d\xb7\xc4\xb5\x19\x19\xb4\x7e\xc9\x1d\x29\x29\xeb\x6e\x23\x06\x3c\x96\x97\x51\x87\x14\xec\xd3\xa9\x0f\x48\xfc\x84\xfa\xc9\x1b\xf5\x18\xbd\x99\x85\x90\x87\x39\xb3\xe0\x3d\x5b\x6e\x76\xcd\x3c\xcb\xaf\x77\xe3\xb2\x09\x14\x6e\xa5\xdf\x78\x54\x43\x86\x18\x86\xa9\x2c\x80\x12\x67\xd5\xe8\x23\x20\x46\x4b\xfc\x1a\x1a\xc7\xf5\xe1\x8c\xa3\x49\xf5\xc8\xf3\x19\x18\x85\x23\xff\x14\x38\x8a\xe3\x52\x00\x70\x12\xe8\x49\xb5\xb1\xa8\xe4\x92\xc4\x94\x34\x75\x09\x7f\x43\x75\x8e\x65\xa7\x97\xe5\x9c\x65\x4e\xce\x03\x3a\xc9\xc9\xea\x31\x3d\x43\xa1\x92\x62\x15\x7a\x57\xe4\x66\xdb\xc6\x96\xc5\x44\x66\x88\xac\xa8\xd0\x71\xd6\x1d\xf2\x25\x05\xcc\xaa\x96\x98\x81\x04\x36\x3d\xd6\xb1\x45\x09\xa6\x13\x89\x7c\x33\x59\x2d\xc8\xcd\x4b\x41\x4c\x39\x9b\xad\x8a\x9c\x1d\x77\x37\x9c\x63\xc7\x0f\x58\xc7\x0f\x4d\xd5\x92\xc0\xac\x99\x04\x02\xf3\x13\x9e\x8f\x73\x14\x71\x0d\x49\xab\xca\xec\x95\xdd\x01\x34\xac\x66\x88\x30\x89\x90\xbc\xcb\x64\xde\x21\x3d\xc8\xf5\xc7\x2a\x8c\x70\xc9\x01\xae\x29\xb2\xf5\x8a\xb2\xe0\xa2\x5d\x76\xb5\xcc\xa7\x53\x53\x1d\xd0\xd1\x90\x98\x0b\xd3\x02\x85\x21\x1a\xe2\x54\x0d\x4f\x18\x2c\xe6\x7f\xaa\x62\xea\x05\x62\x75\x28\xf9\x92\x62\xd8\xbe\xf6\x57\x5d\x41\x71\x6c\x01\x3c\xbd\x82\x39\xe0\x8a\x29\x0e\x17\x59\x67\x91\x1b\x9e\x32\xf3\x0e\xf9\x7d\x4e\x26\x63\x54\x71\xa6\xdb\x08\x26\x68\x12\xa6\x3d\x4d\xb5\x87\x13\x56\x9e\x9d\x22\xf9\x01\x52\xe5\x6c\xac\xaa\xf3\xfa\xc3\x97\x3e\x0c\x66\x5f\x7f\xe4\xfb\xfa\x4d\x2d\x7e\xcd\x7f\x91\xb9\x7e\x60\x56\x5c\x59\x2d\x08\x3d\xf6\x75\x6a\xe3\x32\x63\x19\x3e\x08\xea\x88\x36\x41\x03\x49\xfd\xf2\xa7\xa7\x0b\xdd\x56\xfe\x6b\xdb\x83\xbd\xaf\xba\xba\xa0\xda\x1e\xec\xef\x76\xb7\x6b\x51\x4c\xa0\xf8\x7e\x77\xdb\x84\xbc\xbd\x17\x0f\xcd\xd2\xdd\x96\xd0\x24\xdb\x83\x83\x83\xee\xb6\x7d\x4e\x83\x9f\x5f\xc8\xcf\x5f\x31\xfa\xcd\x97\xf2\x63\xb5\xc8\xe1\xd7\x57\x18\xd1\xe5\xab\x5b\xe4\x2f\x5d\x1f\xbd\x65\xf3\x70\x28\x9b\x46\x6f\xb9\x5d\x38\x93\xd7\xca\xa4\xdb\x44\xac\x75\x56\x24\x18\x4a\x2b\x1d\xad\x0d\x4e\x12\x15\x72\x9b\xc3\x9f\xb8\xce\xc9\xfb\x54\xc9\xf1\x12\x24\xc0\xc6\x08\xb0\xe4\xbc\x29\x52\x83\x7b\xcb\x29\xfd\x70\x0b\x4a\x3b\x2a\xc1\x30\x54\xd8\x0b\xfb\xb1\x1e\x2c\xc1\x3d\x51\x6d\xe0\xcf\x5f\xaf\xbc\xb9\x23\x7f\x93\x1f\xfe\x26\x71\x2b\x2a\xe3\x27\xca\x6b\x12\x67\xd1\x58\xbc\x82\x5a\xb4\x82\xad\x0f\xf6\xfc\xb6\x03\xf8\x1e\xdf\xee\x04\xd6\x78\x7a\xdb\x4a\xa1\x87\xb7\xfb\xa0\x3c\xbb\x5d\x61\xd4\xa3\x5b\x6d\xe1\xe6\x9e\xdc\xb7\x70\xcd\xe6\x5d\xbc\xd1\xd5\xf9\x7a\x53\x4f\xe5\xd7\xce\xd8\x23\xe2\xac\x8c\xb5\xc8\xb7\x98\x2d\x04\x1b\xf4\x4e\x70\xf3\x1a\xbc\x66\x3d\x9d\x5b\x54\xe5\x16\x19\x3f\xca\xa4\x93\xba\xcc\x71\xaa\xb1\xf7\x7b\xb4\x13\xc7\xed\x27\xe3\x53\x8e\xd6\xd0\xb2\xdd\xb3\xd8\x61\x3e\x63\x47\x8b\x9c\xd3\xda\x1c\x51\xb7\x37\xb0\xed\x4d\x42\xc9\x73\xb2\xce\xf4\x4c\xdb\x1a\xed\x95\xa2\x4b\x8d\x1b\x2c\x85\x4f\x7f\x31\x56\xfb\x96\xca\x09\xe7\xbe\x65\x2b\x8c\x4b\xf7\x76\xbc\x5e\xf4\x72\x8a\x98\x86\x65\x6a\x54\x1a\x5b\xe7\x9f\xaf\x8a\x19\x97\x8f\x3c\x4b\x5b\x2d\x67\xdd\xbc\x42\x56\xb0\xce\x56\xd3\x65\x3e\x9f\x9a\x87\x98\x26\xc6\x4b\xbe\x6e\xbe\xfa\x40\x5b\x2c\xea\x31\x17\xd0\x6a\xb3\x15\x12\x13\x6a\xdb\x46\x5e\x5f\x82\x1c\xdb\x8e\x92\x61\x80\x66\x67\x7f\xd6\x68\xb5\xc1\x42\xc6\x2d\x4e\xb5\xd1\xe0\x6e\x9d\x61\x9d\x5d\x8b\x04\xb3\x37\xbe\x13\x11\x5b\xb9\x88\xa9\x20\x0a\x8a\x46\x8f\xdd\xa4\xe3\xbe\xcd\x02\xbe\x63\xe5\xb1\x3d\x1a\xd2\x33\xbf\x0f\x15\xa9\xe2\x2e\xcf\xa1\x86\x44\x97\xcf\x0a\x6c\x45\xf2\x54\xa0\x18\x2d\xea\x87\xae\x5f\x0d\x8b\xc2\x58\xb0\xd8\xfb\x58\x29\xf9\x1b\x67\x7d\x83\xdd\xda\x5a\x23\xb1\x86\xc3\xbf\x41\xa3\x10\x9f\x47\x5d\xa9\xd0\x78\xfe\x56\x32\x8c\x48\x74\x1d\x9b\xa6\xb1\x89\x53\x6e\x88\x5c\xb8\xbf\xfb\xf1\x23\x17\x3a\xd6\xf7\xef\x3f\x3c\xfd\xeb\x72\x69\xb8\x23\xcd\xd7\xbe\x9b\x4d\x31\x02\xd9\x82\xbf\xec\x54\xd5\xd4\x30\xc1\x7f\xff\xeb\x4b\x3f\xb6\x85\x44\x3c\xda\x79\x77\x6e\x19\x65\x13\x24\x2a\x52\x8b\x1c\x63\x4d\x3d\x6b\x62\xea\xd7\x55\x4e\xce\x61\x28\xc9\x40\x68\x54\xf9\x0d\x64\x00\x84\x65\xfe\xcb\x65\x69\xd0\xc3\xd8\xbf\x95\xdd\x47\x19\xaa\x51\xa1\x87\xab\x59\xb9\x98\x9f\xe7\xa3\x90\xf1\x4e\xbe\xcb\x46\x39\x4a\x89\xb0\xd9\xb0\xe2\xe4\xa2\xe2\x30\x08\x09\x27\x0a\x44\x97\x8d\x2c\x5d\x22\xcf\x3b\xce\x96\x37\x29\xf4\xed\xb1\xc9\x94\xdb\x36\x0a\x20\xee\x0e\x74\x6f\xac\x6d\xde\x8d\xb5\xf6\x8d\x4a\xaa\xb0\x64\x7d\xdc\x2d\x41\xc4\x41\x08\x34\xed\x51\x91\x57\xc8\x97\x1e\xad\x0f\x3d\xe7\x94\x55\xc2\xf2\x7b\x91\xd2\x94\x36\xa5\x9c\x49\x52\x29\x62\xa2\x2b\x0e\x98\xc1\xe1\x8a\x4f\xbd\x36\xa7\x56\x6c\xbe\xa3\xbd\x6f\x13\x33\x00\x4f\xcb\x05\x5b\x33\x4a\x75\xfa\xe7\xdd\x38\x14\x49\xf0\x8d\xbc\x1e\x25\x0e\x88\x2c\x75\x77\x27\x90\x51\x12\xde\x47\x1d\x93\xef\x8e\x0c\xa9\x5f\xaf\xaa\xde\xbb\x71\x39\x63\xeb\x8a\x77\xe3\x43\x5b\x58\x8d\xce\x33\x92\x8a\xde\x11\x5b\x8c\xf0\xc0\xfc\x9a\x7f\xb1\xda\x2e\x3a\xa3\x22\x86\x39\x03\x90\x0d\xda\xe7\xa2\x6b\xf8\xcf\x68\xdc\xe1\x5f\x5f\x9a\x5e\x02\xaa\x48\x3b\x47\x87\xdc\xa9\x53\x48\xbe\x88\xc6\x2d\xdd\xbc\x0a\xa8\x7e\xa9\x82\xea\x99\x82\xce\xfe\x23\x34\x0a\x1e\x3e\x00\x64\xb7\xd7\xdd\xf6\x50\x09\x14\xed\x63\x91\xbd\xaf\x50\x70\xaf\xbb\x5d\xc7\x4b\x50\x8e\x09\x75\xf6\xf7\x3e\x14\x51\x06\x98\x52\x52\x7f\x71\xa6\x70\x87\x2a\x5f\x58\xf4\x52\x47\x6a\x2e\xf0\x2a\x65\xc5\x8b\xeb\x07\x4c\xca\xbc\x5b\xeb\x07\xe8\x88\x5e\x18\x9c\xe6\x28\x1b\xc0\xde\x18\x53\xde\xaf\xa6\x28\x2a\xbc\xa3\x17\x52\x23\xff\xcb\xa4\x17\xcf\xb2\x4b\x0c\xac\x0f\xbd\xf4\x7f\x2e\xfa\x67\x3c\xcd\xc5\x63\x4e\x5b\xa0\x3f\xf2\x57\xd3\xb9\x84\xc5\x62\xe8\xf1\x52\xe9\x4b\xc7\xb6\xcc\x27\xb5\x9c\x9c\x99\x0c\xb0\x55\x65\x95\x92\x41\x87\x6c\xed\x05\x38\x90\x91\x03\xd2\xd7\xc4\x09\x77\x3c\x05\xb3\xf9\x9b\x29\x41\xaa\xb8\xed\x83\x1d\x48\x6f\xa8\xd6\x81\x48\x91\x02\x7e\x15\x56\xd5\x53\x58\xa8\x1f\x5e\xf6\x7c\xc9\xa4\x22\x61\xc1\x5c\xba\x6a\xc9\x02\xc1\x89\x44\xf0\xa0\x32\x63\x35\x75\x99\x71\x3e\x4d\x4c\x3f\x87\xa9\x0e\xdb\xd3\xf4\xb7\x7c\x8a\x91\x20\xcb\x24\xbd\x28\x73\xe0\x5d\x0a\x4c\xa2\x00\x47\x2d\xbd\x22\xcc\xad\x44\xc5\x1d\x26\xc5\x77\xaf\x62\x2e\xf5\x02\xee\x19\x10\xac\x85\xe3\xfd\x99\xd5\xa8\x4c\xb2\x85\x0a\x11\xe4\xdc\x24\xf8\xa5\x2e\x85\x4a\xfc\xf2\xcb\x2f\x59\x5e\x76\x12\xef\xa7\x52\x0f\xeb\x0c\xdd\x5e\x1d\x8b\x3b\x51\x67\x6d\x8c\x2b\xbc\x50\x4d\xac\x20\x17\xc0\xa8\xe5\x3d\x97\xa6\x98\x89\xc5\x36\x87\xa5\x30\x85\xe3\x91\xb6\xe2\xd6\x8f\xb6\x27\x52\xa6\x46\x5d\xac\x4d\xac\x03\xe0\x6e\xad\x44\x7d\xdd\x09\x42\x4d\xc1\x68\x7c\xbe\x1c\xaf\xd3\x03\x00\xca\x6a\xea\x16\x60\x5a\xa2\x9e\x1c\xf5\x45\xd5\x7c\xb5\xa0\xa4\x48\x24\x62\x57\xfc\x9a\x32\xcc\x28\x84\x04\x71\x7c\xe2\x0f\x44\x89\xab\x19\x31\xa2\xa7\x5c\x81\xa9\xd6\xb2\xb1\x4f\xa7\x4d\x96\x5c\x17\x85\xae\x07\x9b\xf2\x18\xc7\x31\x8f\x18\x66\x59\x0d\x9f\xdb\x2d\xce\x88\xc9\xfd\x7b\x6e\xe7\xbe\xcf\x39\x3b\x09\x93\xd2\x40\x92\xce\xf0\x8f\x9e\x38\x58\xc1\x9a\xe9\x86\x0a\xfd\x95\x10\xf7\x8e\x6a\xd8\xa0\x3b\x84\xe6\x64\xd9\xe6\x4a\xf1\x0d\x14\x14\xd8\xd6\x17\xb0\x6b\xea\x30\x5e\x74\x77\x9e\x1e\x0e\x4c\x0c\x80\x84\x25\x0f\x4c\x49\x36\xe4\xa0\xa1\x98\x87\x05\x6f\x85\xcd\x7d\x80\x03\xe8\x8e\xb5\x74\xea\x87\x1a\xa8\xc5\xba\x53\xd2\xbf\x08\x3a\x8d\x1c\x5b\xc3\x08\x22\x9b\x37\xc8\xff\x2c\x42\xc9\xd6\x2a\x79\x57\x36\x18\x30\x18\x1c\x18\x29\xc2\xf8\x89\xea\xd1\x79\x3e\x1d\x7b\xad\x0e\xc3\x46\x31\xc3\x1d\x36\x33\x29\x17\x33\x6f\x10\x2c\x58\x3b\x04\xb5\x38\xf4\x1b\x24\xda\x49\x9b\x41\x7d\xb2\x60\x05\xb0\x37\x6c\xe3\x4e\x38\x24\xea\x0b\x64\xaf\x38\xe4\x52\x4a\x68\x2c\x19\x5d\x8d\xa6\x6b\x44\xb2\xc6\xcd\xc6\xb2\xcd\x4c\x74\xa9\xc8\xec\x98\x4d\x3e\xcd\x71\x35\x24\xf5\x74\xbb\xc5\x15\x5a\x1d\x3f\x20\xcc\x9f\x7b\x60\xd2\x55\x5a\x5d\x15\x23\xa5\x23\x90\xe2\x6a\x31\xb2\x6e\x65\x8b\x9c\xd5\x3b\xb5\xeb\xb8\x3e\x9c\x4a\x8b\xb1\x25\xed\xb3\x28\xfb\xe4\xb6\x5a\x33\x2a\x4e\x70\xfb\xd0\xdb\x9a\xb3\xcc\xa4\xe4\xae\xbe\xbd\x7a\x9d\x9e\x3d\x83\x53\x77\x3b\x24\x01\x94\x4c\x43\xbd\x13\x5c\xf6\x2d\x21\x9b\x36\xd7\xef\xda\x8a\x4e\x5d\x60\x77\x83\xff\x70\x73\xa9\x7e\x7c\x78\x96\x8d\xde\x22\x7d\x89\x67\xa3\xb7\x49\xb1\x11\x19\xf6\xa9\x6e\x3f\x37\xa9\x21\x6a\xf9\xb2\x69\x44\x39\x4e\xdb\xb7\x23\x01\x6b\x6c\xdc\x65\x3e\x06\xde\x9b\x80\x86\x2b\x38\x2f\x2a\x5b\x6f\x58\x8e\xaf\x7a\x4c\x46\x18\x2e\xb8\x66\x43\x45\x0d\x40\x5e\xc5\x6b\xcc\xda\xbd\x5b\xd7\x67\xfd\x84\x4a\xb2\xca\xa8\x54\xce\xf3\x31\x90\x55\x99\xed\x3a\x95\x11\x25\x35\x84\x29\x35\x5b\x40\x1a\x3d\x09\x19\xaa\x35\x3c\x22\x35\xde\xc8\x9f\xd8\x8e\x34\xf0\x54\x72\x56\x8f\x4d\xa1\x97\xee\xd4\x90\x96\x49\x74\xb5\x66\xeb\xf1\x73\x4b\xd9\x4d\x00\x10\xa6\x6b\xaa\x2f\xb3\x77\x4b\xac\xa2\x9b\xa8\x00\x8d\xb4\x75\x4f\xf0\x77\x0b\x58\x97\x5f\xf8\xf7\x2f\x36\x1f\xb6\xca\x74\xec\xe0\xc2\xc4\x0b\x40\xdc\x3a\x9a\xa6\x55\xf5\x8c\x81\x45\x8c\x3e\xf2\x52\xb4\xd0\x54\x81\x52\xdb\x83\xc8\x59\xe5\xa2\x8e\x6f\xa5\x20\xd3\x00\x13\x97\xd5\x6b\xa1\x11\x06\x66\xdf\x81\xa3\xdf\x9d\xbf\xab\x7f\x9f\x66\x93\x65\x43\x05\x58\xe3\x19\xa9\x38\xd8\x85\x4b\x4a\x67\xd9\xf2\xbc\xa4\xc5\xbd\x78\xfe\xea\xb5\xd7\x61\x06\x17\x13\x20\x64\x08\x13\x69\xb7\x30\x20\xea\x7c\xb9\x33\x3a\x47\xed\x13\xaa\xd3\x5a\xab\xe5\x64\xe7\x4b\xb3\x67\xb8\x7f\x3d\x79\x02\x6c\x8d\x75\x37\x1a\xd2\xb1\x96\xb1\x59\x6b\xbc\x0e\x42\x6f\x6a\x04\x07\xff\x51\x68\x53\x0e\x15\xff\xb1\x48\xd3\x11\xb4\x74\x24\x7b\xa9\x71\xe4\x96\xb6\x68\x63\xb7\xbc\x4c\x79\x1b\x15\xf9\xf2\x09\x9d\x9e\x51\xa1\x4f\x8a\x98\xad\x99\xab\xe7\x7b\x2a\x11\x76\x95\x2b\xea\xec\x18\x6d\x5c\x37\x8b\x80\x69\x7e\xfa\x5a\xeb\x86\x06\x09\xd4\xc3\xba\xad\x43\xe0\xc8\x3b\x0a\x42\xa2\x8e\xd3\xa9\x33\xa7\x72\x5d\x6a\xc5\x88\x9e\x17\x1a\xcd\x64\xf7\x93\xf1\x15\x9c\x5f\x3e\x92\x8e\x04\x83\x30\xd0\x1c\x6d\x6f\x1b\x56\x0b\x89\x5f\x5a\x00\x4b\xff\xe8\x7c\x01\x6c\xe9\xd3\x74\x36\x44\x49\x73\xd1\x51\xb8\xf1\x7c\x39\x43\xf2\xdb\xfa\x5a\xe6\x04\xd4\xea\x68\xfb\x4d\x7a\x91\x32\x4e\x1f\xec\x6e\x53\xdc\x8b\xa3\xed\x96\xf8\x5c\xd9\x3b\x76\xb7\xb5\xfd\x4d\xeb\xd0\x72\x9d\xeb\x51\x2c\x0e\x63\xed\x2b\xeb\xdb\x75\x6b\x0c\x2d\x48\x52\xa0\xd8\x9b\x58\x50\x85\xc9\x6f\x4b\x2f\xa9\xe5\xe9\x9d\xa4\x1e\x61\x91\xa0\xa3\x2d\x1f\x10\x1a\x09\x81\x6a\x86\x77\x56\xd0\x8a\x61\xe7\x3c\x58\x65\xf9\x82\x93\x0d\x26\x3f\x17\x88\xca\x8d\xb0\x91\x2f\xb5\x7c\x01\xb2\xde\x05\xd0\x5b\x4a\xa4\x07\x95\x7e\x5e\x40\xe5\xe1\x15\x2b\xe3\x7e\x7c\x58\x89\x90\x5a\xae\xf0\x5d\x82\xba\x23\xc0\x0a\xd2\x9d\x9b\xa4\x86\xa8\x1e\x9a\x92\xa0\x68\x62\x9b\xac\x0a\xdb\x08\xe9\xb1\xfd\x2e\x01\x21\xc7\x18\xed\xaf\x4a\x27\x19\x30\xee\x14\xf9\x02\xad\x77\x76\x50\xf8\xdc\xb2\x36\xec\xf4\xb2\x61\x32\x0d\x04\x8a\x08\xc0\x39\x3f\xff\xfc\xb3\x8e\x21\x40\x58\x07\xa0\x7d\x95\xd5\x9a\xea\x36\x45\xcb\xc4\x62\xb8\xaa\x71\xbe\xd5\x6a\x88\x7a\x78\xd1\x9b\xe9\x04\xda\x9a\xd7\x93\xf3\x4c\x97\x4b\x00\x76\x92\x9f\x3c\xbe\x4f\x3e\x97\x05\x69\xfc\xc9\x3e\x8c\xa2\x34\x69\x8a\x67\x9c\xbd\x6a\xc8\xc2\x7b\x26\xc0\x77\x02\xc1\x4c\x2d\x7d\xf3\x4d\x61\x3b\xbc\xce\x91\x57\x30\x3d\x21\x14\xea\x50\x82\x96\xe6\x8e\x5b\xf8\x47\x2a\xf1\xb6\x07\xfb\x07\xda\x04\x48\xe4\xbc\xed\xc1\xde\x01\x6a\xe6\xf6\x3f\xce\x13\x46\x83\x62\xee\x43\xde\x30\x36\x51\xe6\xdd\x26\x55\xd3\xa6\x8a\xbf\x5b\xa6\x75\x0a\x5e\x56\x6e\xa7\x36\xfc\xfb\x5f\x5f\x1e\x86\x79\xb5\xdc\x26\xc9\x5f\xda\x10\x02\xb5\x6f\xe6\x10\x62\xaa\x39\x2f\x65\x12\xbe\x02\xdd\x52\x2b\xb7\x5e\x29\x67\x15\xdc\x37\x6a\xe2\xfe\x1f\x7c\xc6\xa0\x3b\x1d\x7f\xcb\x08\x56\x5a\x4b\x92\x93\x34\x3d\x6c\x70\x9f\x6b\x5f\x37\x6a\x68\x65\x93\x0c\x03\xb7\x55\xf6\xc0\xc1\x06\x3a\x1e\x0b\x40\x81\x76\x87\xdb\xc1\x87\x75\xaa\x1b\x09\x49\x16\x04\xc5\x4f\x13\xb9\xe5\xcd\xbe\x77\xc8\x06\xc7\x85\x1a\x7f\xc4\x85\xbd\x23\x16\x69\x59\xb8\x8c\xe4\xd6\x92\xa7\x20\x4e\x82\xe5\x0b\xec\xf2\x70\x64\xca\xbd\x87\x23\x5b\x58\xd9\x42\x63\x7a\xa6\xec\xd0\xb4\xe9\x19\x9f\x62\x6d\x3b\x48\xa6\xae\x45\xca\x0c\x0c\xcf\x4c\xc5\x0f\x30\x45\xb3\x99\x47\x8e\xac\x55\x9a\x1d\x80\x4d\xd1\x8c\x55\x9a\x2d\xf6\x4c\xd1\x02\xe3\x34\x5b\x49\x4c\xd1\xac\x59\x9a\xfb\x90\xda\xe2\xd4\x15\x5a\x53\x34\x6d\x99\x66\x3f\x47\x4d\xd1\x1a\x8c\xd4\x6e\x61\x8a\x56\xcf\xde\x71\x54\xbf\x27\x3a\x24\x3a\x27\x30\xf5\xde\xfc\x6a\x26\x38\x37\xd9\x76\x18\x41\x7d\x8d\xaf\xe2\x26\x92\xba\x0f\xd4\x75\x01\xdd\xc9\xe7\xef\xad\x06\xc6\x41\x95\x73\x49\x24\x46\xc0\x66\xad\xfa\xf4\x53\x57\xe8\xb9\x23\xd2\xbb\x52\xf6\xab\xdb\x76\xde\x84\xf7\x72\xf1\x06\x22\x7e\x76\xb5\x6f\x9e\x1d\x71\xe0\xc6\xbe\x6e\x0a\x30\x01\x3d\x52\xbc\x8c\x8a\x9d\x51\x5a\xca\xa3\xf4\xd7\x86\x20\xc3\x8b\x45\x54\x2f\x86\x8f\xae\x20\x8c\x87\x1e\x29\xc6\x0b\x4c\xcc\x56\x8b\xf1\xdf\xe9\x35\x17\xba\xff\x70\x05\x66\x78\x08\x81\xde\xb2\xad\xc3\x58\xf3\xb4\xa6\xd3\x56\x67\xcd\x7e\xde\xb4\x3b\x12\x5c\xa7\x6e\xec\xe3\x3f\x7b\xd8\x20\x31\xd7\x7f\x64\x0b\xa7\xd3\x75\x5b\x88\xdf\xe3\x5b\x68\xb8\x10\xc5\x37\xac\xb7\x68\x5e\xcf\x39\x78\x17\xee\xbd\x19\xde\xea\x3d\xe8\x12\xcb\x2f\xb4\xb5\xfb\xcb\xe3\xd7\xce\x46\x87\xd1\xb6\xc1\xe0\xb6\x98\x90\xb6\x24\x1b\x7b\xe7\x02\xe2\x10\xda\x36\xc5\xce\x10\xd6\xe8\x70\x03\xc3\x0b\x2a\xb6\x95\x42\x1f\x5e\x4b\xb1\xe9\xc3\x03\xf5\xf7\xc0\x4f\x98\x54\xb7\x48\xb6\x9f\xd4\x8d\xa5\xaf\xb9\xa2\x00\x11\xc2\x60\x59\x81\x1a\xb9\xf8\x1f\xcb\xe5\x7f\xa0\xe5\xb2\x9d\x24\xf1\x2e\x92\x9c\x69\x33\x5b\x66\x01\xf5\xa8\x25\xb3\xcd\x0f\x74\x9e\x11\x73\xc5\xf9\xab\x6c\xe8\x60\xfe\x10\x72\x49\x35\x8c\x55\x1b\x41\xa6\x59\xc3\x5a\x94\xd5\x83\xd9\xa1\xf7\x91\x94\x35\x89\x18\xcc\x0c\xcc\x85\x82\x12\xb6\x96\x31\x25\xc0\xd3\xaf\xc9\x02\x93\x5c\xff\x37\xe7\x50\xc4\x00\xcc\xf2\x89\x37\x98\x16\xc5\x35\xec\x4e\x21\xa2\x88\x0c\x59\x64\x7f\x52\x0d\x54\xf6\x02\x46\x8f\x5d\x8b\x13\x45\x09\x01\xb5\x39\xaa\x65\xb4\x52\x57\x61\x3f\xf3\xde\xa5\xb4\x8e\x56\xb7\xe2\x65\x37\x53\x2a\x0f\xec\xbd\xca\x96\x92\x38\x82\x2b\x3c\xc2\x10\x91\x94\xda\x4f\x79\x69\xfb\x29\x63\xd6\xf6\xd9\x30\xec\xba\xa4\x32\xde\x64\x64\x57\xb9\x59\xdb\x2c\x51\x77\xe5\x02\x35\x6a\x35\x8d\xfe\xeb\xba\xae\xb1\x74\x91\xe8\x23\x68\xb9\xa3\x15\xb5\xaf\xc9\x12\x24\xad\x90\x0b\x34\x2a\x35\xf2\xf3\xe3\x63\x33\x9a\xb8\xef\xf3\x45\x36\x29\xdf\x51\x20\x9d\xe5\x6a\x2e\x5e\x87\xd4\x03\x8a\xbd\x83\x7e\x9f\x12\x8c\x63\x7c\x9d\xc9\xb4\xbc\xc4\x08\x0a\x7d\x5a\x19\x5e\xa3\xfe\xde\xc1\xfe\xde\xfd\xaf\x76\x0f\xfa\x67\xd9\x72\x87\x65\xaf\x1d\x24\x3d\x3b\xa8\x12\xde\x09\xd4\x26\x79\xb1\x93\xee\x4c\x78\xbc\x1d\xd8\x89\xac\xa8\x8c\x7f\x25\x6f\x9b\x89\x81\x25\xf9\x23\x5b\x64\xec\xc2\x1e\x87\xa1\xd2\x34\x69\x33\x1b\x68\x0d\xc1\x19\xa6\x9a\xd4\xe9\x4e\x3d\x57\xdb\xaa\xc6\x33\x6b\x3d\x2a\x8b\x25\xaa\x5d\x10\x79\xe1\x33\x46\x3a\xc7\x38\x31\x24\x3c\xf7\xcb\xd1\x12\x56\x0c\x4c\x47\x96\xce\x5a\xeb\x63\x05\x6c\xd6\x39\x3e\x2d\xf5\xe7\x53\x40\x74\x87\xf2\x72\x72\xf4\xe3\xeb\xef\xdd\xb3\x89\x07\x17\x75\x88\xb8\x76\x5e\xad\xd9\x7d\x8e\x8f\xea\x76\x0a\x0f\x03\x90\x3a\x59\xcd\x00\x67\x61\x0c\x06\xdd\x1e\xe0\x14\x83\x4a\xc9\x91\x97\x10\xdf\x07\x3b\x00\x2b\xc0\xac\xed\x8e\xdf\x83\xd5\x21\xd6\x15\x99\x96\xed\x7b\x0a\x35\x94\x66\xf2\xd0\x6b\x5e\x7b\x8e\xae\xb7\x67\xb6\xd1\x03\x16\xd8\xb8\xb0\xc3\xe0\x14\xb8\xf7\x8d\x34\xae\xbc\xc8\x7b\xc8\x53\xf1\x20\xcd\x61\xf6\xb1\xe2\xfe\x2e\x06\x84\xe2\x23\x86\x5a\x2b\x12\xe6\xf7\xf6\xf7\x0f\xfc\x52\x1f\xda\xa2\x5b\x11\x05\x1d\x38\xce\x19\xc6\x6d\x64\x67\x67\xa0\xba\xa7\xb4\x45\xe2\x73\x6b\x83\x16\x62\xf8\xf3\x56\x45\xda\xa5\x9d\x2a\x5b\xfa\x1d\x8c\x4b\x20\xe5\x68\x2d\xc6\x26\x9d\xda\x54\x8b\x32\x31\x21\x59\x3f\xc3\x40\x06\x80\x0f\xce\xce\x97\x64\x3c\xe6\x4d\x36\x92\x76\xc9\xc7\x78\xb5\xa3\x91\x45\x7b\xc8\xcd\x25\x5b\xf2\x20\xd9\x83\x2f\x45\x5a\x88\x7f\x75\x64\x45\x45\xec\xe4\xeb\x64\x42\x40\x39\xf9\xa3\xf6\xae\x03\x6b\x7f\x26\x96\x6b\xc0\x29\xc3\x36\x71\x14\x07\xcb\x2d\x51\x00\x73\x96\x81\xc7\x80\x94\x46\xcb\xe9\x55\x32\x39\x47\xf5\x93\x44\x51\x71\x22\x45\x62\x03\x8b\x2d\xcf\x57\xcc\xff\x88\x88\x23\x27\x81\xef\x16\x64\x66\x34\xcc\xe4\xdf\x12\xf8\xf3\xe4\x33\x42\xb8\x9f\xb1\x55\x5e\xf6\x0e\xdf\x45\x0d\xc6\x43\x46\x70\x34\x5a\x01\x45\x49\x00\x55\x67\x0b\xb2\x76\xe8\x26\x70\xf3\xca\xae\x44\x9a\x70\x87\x46\x06\x7d\xe9\x12\x03\x85\xf7\xb6\x1a\x4f\xc5\x4f\x86\xe5\x27\xc3\x69\x4a\x77\x15\xa8\x41\xcd\x03\x98\xff\x66\x21\xc6\x75\x86\xa3\x13\x7c\x5e\x3d\x42\xeb\xcc\xbb\x77\xb9\xcf\xf0\xe3\xb1\x6b\x7a\xa2\xc4\xcb\x46\x87\x1a\x91\xc6\x27\xab\xa9\x0d\x85\x78\x1b\xde\xb2\x2c\x54\x6c\x09\x0f\x4e\x95\x07\x85\x91\xf8\x9d\x68\xa9\x72\x11\xd4\xe7\xc5\x79\x1a\x49\x4f\xeb\xa9\x5a\x36\x9a\x4e\xa3\xb3\x8c\x9a\x8f\xc8\xd8\x7e\xa0\x55\xbb\x92\xf8\xa4\x68\xb3\x7c\x17\xc3\x8d\xe6\x13\xba\x09\x5a\x89\x5c\xcd\x27\x1a\x80\xc3\x6c\x91\xb0\x52\x9e\xab\x1b\x7c\x41\x5f\xfd\xe4\xbc\x5c\xdd\xee\xb8\xa4\x53\x3d\x1f\x54\xfc\xd2\x24\x9d\xab\x97\x32\xde\x09\x92\x9c\x23\x8a\x90\x7c\xc0\x2e\x20\x9f\x22\x69\x1a\xc2\xe9\xae\xf9\xac\xc8\xd6\x1a\x5a\x66\xba\x72\xe4\x4c\x95\xd4\xec\x17\xeb\x9a\xef\x46\x62\xe3\xda\x98\x4b\xe7\x96\x6c\x33\xba\x5d\xf9\x71\x8d\xb0\x33\x4a\x3b\xd0\xf6\x9f\xaf\x2d\xe5\xbf\xe9\x02\x8f\x33\x32\x5d\x58\x77\x3b\xed\x94\xb4\x78\x40\x7a\x83\x06\xe8\xc3\x6d\xb9\x1d\xf0\x3d\x8d\xf1\x05\xf4\x84\x25\x91\xc9\xdc\xc2\xc9\x26\x9c\x79\x23\x64\x03\xeb\xd2\x80\xfa\xa8\xcf\xe6\x0c\x39\x2c\xc6\x1b\x21\x8b\x85\x55\x5b\x1d\x0a\x56\x09\x40\x7e\x68\x6d\xcf\x1a\x59\x6b\x6f\x08\x54\x5a\x36\x73\x7e\x2e\x61\x04\xdf\x77\x3b\x1f\x83\xc4\xa2\x0c\x89\xb3\x57\x6a\x62\xe0\x9b\x3b\x44\x7e\xc7\xb2\x3b\x21\xcb\xe0\x73\xbd\xb6\x13\xd6\x0a\xf7\x10\xde\x1e\x01\x73\xf9\x08\x05\x5f\x5c\xd3\x55\x1b\x0f\xba\x4b\xd2\xe0\x8f\x79\xb1\xfc\x92\xbc\x36\xdb\xb5\x31\x3b\x1e\x9b\x12\xb3\x37\x91\x24\x5d\x39\xf6\x20\xe2\xe5\xda\x0e\x0f\x83\x96\x38\x51\xaa\x9b\x38\xa3\x70\xfe\xcf\xc9\x6c\x63\x32\xfd\xef\x9a\x58\x8e\x47\x32\x9c\x0b\xa0\x01\x15\xbe\x4e\xd4\x2f\x1d\x2e\xdf\xed\x07\x0d\x23\x21\x32\xa8\x83\x63\xa8\x1a\x8a\x62\xb7\xdf\x43\xdb\x75\x8c\xcd\xd9\x32\xff\xdb\x90\x84\x31\xc8\x5c\x27\x77\x9a\xd0\xdb\x9d\x23\x2f\xa0\x9f\x54\x0f\x94\xaf\xde\x55\xa5\xe4\x08\xd0\x3e\x5f\x92\xfc\xf7\xf7\xef\x48\x7f\xf2\xf2\xf6\x0a\x1b\x46\x8d\xb5\x8b\x2b\x4f\x14\xbe\x6d\x65\x90\xf8\xbc\xe7\x8f\x4a\xbe\x49\x46\xf3\x69\xc2\x86\x6a\xa5\xa0\x9a\xff\xc3\x21\xbd\xe4\x35\x2a\x99\x94\xe6\xb6\x3e\x65\x42\x96\x71\x1e\x20\x4e\xeb\x65\xb4\xb9\xe4\xc4\x32\x08\x52\xe2\xce\x12\x09\x20\x8f\x3e\x6b\x62\xdf\x63\xc9\x1a\xfe\x4f\xbc\x29\x9c\x0d\x0d\xf6\x37\xcb\x66\x25\x5c\x42\x18\xeb\x6d\x05\xa7\xdc\x3b\xeb\x49\x57\x14\x1e\xec\xc9\xe3\x0e\xb3\x91\xa5\x0d\x61\x84\xa9\x8b\x8a\x32\xb0\xf5\x87\xee\xb1\x33\xb1\xf2\x37\xef\xa0\x4d\x68\x3e\xca\x98\x25\x12\x5f\x27\xfc\x98\x98\xfc\xb9\xaa\xbb\x88\xb5\x4a\xfd\x4b\xbb\x55\x16\xd6\xf6\x9f\xff\xe0\x84\x12\x0b\xed\x4a\xa6\x7b\xfd\x83\xfe\x05\xde\x18\x35\x2f\x01\xab\xb5\xf7\xaa\x09\x17\xec\x2b\x7a\xc2\x2d\xd0\xb6\x78\xe1\xb7\x75\x0a\x9e\x1a\x15\xcd\x4f\x02\xea\xbc\xf5\x4f\x70\x7c\x0b\x6d\x66\x3c\x67\xe0\xa8\x29\x8d\x17\x4d\xa7\xd9\x0f\xee\xe0\xa3\x05\xc6\xd1\x29\x58\x9d\x9d\x4c\x90\xf8\xde\x46\xd0\xf9\xd5\x4b\x79\x2f\x45\x5e\x8d\x8d\x62\xec\xdc\xc6\x94\xe6\x2a\x4b\x7d\x8b\x1f\x2a\xf8\x70\x43\x9b\xdb\x1b\xd9\xd4\xdc\xf2\x9e\x54\xa8\x7c\xdf\x37\xa6\x0d\xd9\xf8\x81\xdb\x4f\x44\xcc\xf8\xed\x28\x09\xc5\xbf\x0f\xb1\x63\xd2\x2a\xe2\x88\x5e\xf8\xbd\xd3\xc0\xf3\xbb\xd4\xb5\x0e\xf3\x61\x68\x54\xa8\xbf\x03\x24\xdb\x69\x77\xea\xae\xd1\x39\x46\x97\x9b\xa4\xa3\x9a\x89\x79\xdc\xc0\x27\xea\xe3\xfc\x22\xe6\xe3\xac\x32\xc3\xe3\xbe\xd0\x8b\x02\x50\x1a\xe7\x10\xcb\xdf\x3a\x06\xf5\xdd\x31\x9b\x88\xa6\x11\xea\xbb\xe7\xa5\xd1\xe0\xee\xc3\x37\xdd\xf9\xf9\xd7\xad\x8b\x9a\x2c\x5b\x5e\xeb\x98\x20\xca\xb6\xc5\xfa\x30\xbd\x56\x39\x0f\xeb\x41\x9c\x0a\xb1\xcd\x87\x96\x75\xdb\x79\x63\x54\x6d\x60\x30\x16\x7a\x45\xbc\xd7\x41\x9a\xcb\xcf\xce\xf0\x95\x41\x2a\x77\x7a\xc9\x4f\x12\x01\x3b\x49\x93\x17\x4f\x9e\xfd\xc5\x04\x99\x66\xfd\x09\x1c\xda\x0c\x20\x1d\x3b\xb3\x2e\x67\x4b\x9d\xb0\xba\x9e\x7e\x4a\x1f\x5d\xcc\xd0\x3f\x88\x87\xa1\x28\x35\xce\x29\x20\xd3\x2f\x50\x59\x6d\x67\x1b\xc2\x4e\x24\x00\x33\x49\x2a\x36\xbe\x1d\x86\xf9\x43\x13\x07\x20\xd7\x44\x7e\xf5\xcc\x29\x73\x53\x83\x41\x4f\x7d\xde\x54\xdb\x33\xe9\x29\x68\x6e\x2e\x10\x86\x70\x12\x42\x7e\xa3\x8f\x29\xfc\x5a\xa3\x43\x3e\x48\xfc\xd0\x96\x6f\x7a\xce\x69\x43\x3b\xde\xc3\x0b\x4f\xd7\x0b\xcb\x5a\xef\x2a\x33\x86\xf5\x32\x3b\x65\x9d\x6e\x05\x5f\x63\x0e\x0e\xf0\xcf\xac\x99\x09\x34\xa2\x6d\xe0\x60\xd5\x94\x7c\x65\x37\x0c\xc9\x6b\xe0\xc6\x09\x40\x92\xd0\x21\xa3\xdd\x96\xb8\xeb\xd3\x2b\x6b\x75\xbe\x43\x01\x56\x89\x97\x2a\x79\x61\x4e\xb5\x4d\xa3\x18\x4d\x92\x17\xd2\x17\x5b\x3f\x32\x66\xae\xf5\x7c\x08\x7a\x5f\x16\xd9\x0e\x1f\xce\xdc\x5a\x13\x1a\xf3\x58\xc7\x91\xef\xec\xf0\x8a\xd0\x8d\xdf\x6d\x0c\xd1\xee\x4e\x4d\xd7\x1d\xdf\x96\xe6\xa5\x9a\x64\x16\x1f\xb6\xd4\xa6\x8c\xda\xd1\x35\x9a\xa1\x3e\x74\x8d\x81\xec\x38\xd7\x40\x52\xb7\x51\xb1\x3b\x5a\x37\x52\x51\xdc\x78\xe4\xb2\xac\xb1\x52\x51\x94\x52\x5d\xfb\xdc\xcb\x11\xcc\x2a\x5e\x32\x76\x51\x09\xe6\x4d\x2a\x2b\xb6\x70\xd1\x11\xa6\x2e\xb2\x05\xf2\x82\x18\x52\xe3\x3b\x31\x80\xe2\xd8\x19\xb0\xc0\x2b\xfa\x72\x1b\x14\x75\x43\xc4\x9b\xc0\x70\xc6\x5f\x56\x72\x56\x2e\x95\x12\xdb\x4a\x6a\xda\xe5\x3d\xa9\x85\x39\xea\xb2\x87\x7b\x97\xa1\x44\x29\xb2\x49\x9a\x63\x0c\x3e\xc9\x17\x40\xd4\x0d\x72\xbe\xcc\x9c\x5b\xb6\x8f\x93\x6d\x18\xd4\x5a\xdc\xa8\x5a\x72\x9c\x40\x6f\xfc\x5c\x25\xfd\x57\xef\x4a\x3c\x85\x54\x82\x8e\x9a\x09\xe3\x04\xa8\x00\x47\x2f\x8b\xb3\x52\x4b\x51\x6e\x7c\x0e\x5e\x83\xa3\x47\x93\xa4\x79\x91\xab\x2d\xb8\x9a\x68\x95\x2e\x87\xaf\x9b\x0e\x59\x51\x5c\xe6\x30\xf0\xf0\x0a\x9f\xdc\xcd\x91\x23\x7a\xe7\x77\x11\x9a\x91\xec\xd3\x96\x1a\x24\x92\x5f\xde\x79\xdd\x53\xee\x32\x01\x96\xad\x24\x0c\x66\x44\xc5\x6b\xa3\x19\x75\xed\xe9\x5a\x6f\x0b\x58\x3f\x46\x85\xa3\x77\x82\x71\x3e\xe6\xb7\x18\x26\xbf\x26\x02\xf7\xd6\x8d\xd9\x39\x7c\x58\x80\x4d\xb7\xf0\xc5\x99\x50\x29\x1c\x00\x83\x9e\x63\x5f\xdc\x85\x52\x5b\x18\x5c\xa1\x47\x0a\x81\xf8\xe0\xb2\x2e\xc8\x56\x40\xa8\xe9\x68\x7c\x5d\x94\x5c\x07\x8a\xb1\xcb\x89\x7c\x00\x15\xec\xe8\xd4\xc1\x37\x65\x4c\x4b\xea\x09\x0c\xbf\x2f\x17\x66\x95\x5d\x8e\xc2\xed\x83\xe3\xed\x18\x90\xd0\xd1\xba\x1d\xbf\xda\x5b\xf5\x78\xeb\x1e\x41\xb6\xa8\x58\x4d\xc4\x23\xcf\x1c\x8c\xcc\xe5\xc0\x96\xbb\x70\x7d\xe2\x13\xe5\x4d\xb3\x23\xfa\x57\x1c\xf6\xd4\x04\x92\x96\x31\x75\xe8\x73\x7d\x26\x08\x3a\x92\xf2\x8c\x61\x66\xb9\xb8\x12\x1a\x25\x91\xa5\x31\x92\xb9\xa9\x6a\x32\xc1\x89\x5f\x0f\xb4\x84\xad\x3b\xa3\xc4\x0a\xed\xbf\xfc\x75\x67\x0f\x38\xe5\xf8\xa4\x4c\x00\x35\x98\x18\x3d\xbb\x2d\xec\xde\xb4\xb4\x2f\xb3\x97\xa5\x75\xa4\xc2\x9a\xd7\x1d\x54\x53\x1b\x6b\x5d\x2e\x66\x43\xac\x39\xba\x0e\x3a\xe0\x5c\x8d\x3b\x24\x12\x6b\x6f\xe8\xa6\x90\x72\x19\x1a\xbc\xea\x98\x74\x4d\xc9\x9c\x54\xd4\x36\x2f\xb6\x92\x19\x7c\x12\xc9\xaf\xa4\xe0\x25\x08\xf8\xe6\x65\x7e\xd2\x39\x85\xac\x85\x4f\x30\x07\x41\x5c\x1c\xdb\xc0\x20\x2e\x99\x77\x37\x26\xdc\x84\xa6\x9e\x7a\x42\x62\xf3\x2b\x88\xcf\xad\xc0\x1a\x6a\xaa\x33\xfb\x0b\xaa\x72\xc8\x7c\x0c\x2d\x22\x29\xa6\xe5\x06\xf9\x28\xea\x9b\xce\xf6\x94\xf5\xab\xd9\x1c\x38\xc5\xb8\xe8\x9f\x67\x33\xab\x38\x17\x5f\x85\x07\xe2\xc3\xd1\x4a\x06\xfc\x57\xcb\x54\x17\xa5\x44\xab\x75\x68\x83\x8c\x8c\x28\xcc\x75\xb5\x14\xc8\xe7\x34\x0a\x5b\x26\x51\xba\x31\xcc\xa4\xee\x6b\x51\x61\xcd\xb6\xd1\xc4\x8e\xfd\x3a\x14\x69\x16\xdf\x42\x49\xb7\x10\x70\xe4\xb1\xd7\x00\x52\x9a\xda\xbc\x8a\x5e\xd7\xbd\x21\x49\xb9\x7b\xb6\x0f\xb3\x2d\xa2\x2d\x91\x83\x6f\x53\xb1\xa5\x44\x1c\x06\x86\xe5\x9e\x09\xde\xce\x74\x35\xe5\x94\x07\xbc\x6b\xbe\x74\xc0\xb9\xb2\xdb\x6d\xb3\x75\xc8\x39\xf0\xe6\x1a\x05\xae\xf1\x17\xb9\x77\xef\xa0\x63\xbd\x48\xb8\xfe\xba\xea\x5f\xee\x76\xac\x52\xcd\xec\xff\xc0\x7a\x49\x1b\xbf\x93\x6b\x17\x0c\x85\xe2\xa8\x3c\xb0\x91\x54\x64\x9a\xbc\x11\x7e\x3a\x10\xb3\x0d\xad\x07\xd8\x9f\x0d\x04\x7c\x6d\x63\x03\xcc\x2f\xee\x1b\xd8\x30\xfe\x2f\xfc\x0c\xf6\x7c\xd2\x86\x49\x74\xe8\x6c\x77\xf6\x94\x82\x43\x16\x71\x17\xe6\xd8\xef\x63\xaf\x6d\xea\x04\x40\xea\xd8\xce\xd9\xba\xd2\x40\xad\x13\x04\x32\xaf\xb4\x03\xc5\xb4\x4e\xb3\x42\x0c\x8e\x6c\x67\x67\xa2\xf9\xf5\x6a\xb1\xb1\x6f\xd6\xdd\xc5\x23\x61\x7b\xd1\xae\xe3\xea\xbd\xee\x36\x01\xe1\xf6\xe0\x1e\x85\x06\xbc\xf7\xf1\x43\x03\x7e\xb0\xf6\x6f\x23\xdd\xde\xcd\x7a\xc2\x7f\x8a\xf6\x2f\x1a\x6e\xf0\xf4\xb2\x3a\x25\xed\x5f\x45\xb4\xec\xa7\x6c\xc8\x51\xe6\x77\x70\x3e\xe9\x32\x47\x4c\x6f\xb5\x62\xf0\xd7\x16\x45\xb5\x1a\x03\x2b\x59\x32\x4f\x7f\x6a\x9b\x50\x02\xc8\xd3\x1f\xca\xdf\x54\x09\x9f\x05\x11\x3c\xb1\xed\x19\x2e\xca\x4b\x44\xfe\xee\x04\x6c\x75\xbd\x8c\xcb\xea\xf6\x5a\xca\x9f\x5e\x29\xea\x6c\x3b\xd5\x99\x13\xea\x0e\x7c\x88\xec\xad\x76\x4f\xa5\x2e\xdf\xc8\x24\xff\xa7\x57\x7f\x4c\xcb\xf7\x61\x9a\x3d\xbe\xa6\xd9\xe2\x07\x96\x1e\xbe\xcb\x26\x53\x56\xae\xb0\xcd\x6f\xf8\xe1\xf0\x23\x2b\x03\x7f\x7a\xb5\xa9\x1e\x30\xba\x79\x3f\xbd\x8a\x28\x05\x1d\x68\xda\xe8\x48\xf6\x00\x2b\xeb\xb2\xaf\xdd\xe7\xbc\x6e\x6e\xf0\x9e\x63\x05\xe3\x4d\x21\x8f\xbc\x1e\x1b\x14\x80\x8e\x18\x92\x11\xa3\xb3\xcb\xc0\x44\xee\xd9\x92\x53\xa8\x9b\xfc\xac\x5b\x4e\x4a\xf4\xd0\x7c\x24\x74\x4f\xcc\xad\x8e\x30\x89\xf8\x71\x22\x74\x23\x79\x6c\xef\xda\x4f\xc6\x28\x9d\x46\xa9\x1b\xa6\x33\xfd\x0a\x61\x61\xd0\x00\x3c\x5a\xcc\xfc\xef\x68\x88\x7e\x83\x19\x37\x7b\xab\xae\xf3\x8d\xd3\x46\x2a\x97\x95\x3c\x55\x58\x10\x6e\x93\x19\xb9\x3d\xcc\xd0\xcb\x57\x5a\x29\x41\x9d\x0c\x3b\xec\x0b\xdb\xc6\xb8\x21\xe8\xcf\xfa\x9d\xda\x54\x98\xae\x4c\x06\x5b\xdf\xb5\x63\xf0\x63\x53\x4c\x5a\xca\xfa\xb9\x6e\x6a\x54\xab\x1d\x1a\x4c\xbb\x1d\x0b\x1f\x5b\x43\xeb\xb2\x87\xe3\x71\x25\x3a\x8a\xa9\xa9\x82\x0c\x97\x7b\x33\xd8\xec\x56\xd7\xc6\xd9\x48\xbe\x36\xab\x29\x8b\x32\x86\x13\x22\x9a\x29\x97\x75\x8f\x9a\x85\x31\xd3\x83\x76\x3a\xb4\xb9\xdf\xd0\xe8\xd1\xb4\x61\xdc\x45\xc4\xcf\x2d\xbb\x50\xa6\xa6\x7e\x17\x1b\x06\xd1\x72\xa1\x83\xfd\x80\x2b\xd7\x35\x15\xe6\x22\x1f\x03\xd1\xe7\x81\x4f\xf1\x10\x50\xe1\x9b\x72\xe2\x26\x0c\x87\x91\x3f\x7f\x45\xae\x9a\xaf\x32\xc0\x36\xec\x9b\xde\xef\x9f\xc1\x86\xf7\xce\xf2\xe5\xf9\x6a\x48\x36\xfa\xb3\x69\xb9\x3a\x83\xdb\x5f\xf4\xf7\x77\x3f\xdf\xdf\xdd\xbd\xdf\x78\x7e\xa1\xa9\x5d\x24\x4e\x16\x4c\x13\x23\x65\xe5\x2f\xd2\xf1\xef\xf9\x8b\x73\x58\x33\xfc\x53\x8e\xd7\x05\xcd\x62\xb0\xf7\x60\x63\x8d\x3e\x35\x8a\xb6\x6f\x30\x3e\x6e\x0e\x52\xce\x24\x18\x7b\x53\x9a\x57\x65\x01\x7b\xad\x49\xb2\x28\x19\xac\xc3\x6c\x19\x4b\x1b\x2a\x1a\x06\x8e\xbe\x09\x3b\xa3\x82\xde\xdf\x74\x23\x3e\x92\xf6\x60\xcb\xba\xd6\x32\x77\xa7\x59\x3a\x31\xa8\x70\x45\x0e\x1b\x61\xdc\xb4\x65\x5a\x8c\x94\x65\x8e\xad\x66\xc3\xc1\x14\x2e\x54\x7b\x92\x4d\x26\xf9\x88\x92\x2a\xa5\x15\x5a\x10\xd1\xb3\xdb\x4f\xaf\x12\x0c\x13\xc2\xca\x45\x68\x51\x94\x1c\x14\x94\x82\xbc\x68\x15\xc3\x96\xff\x6a\x64\xb6\xc9\x65\xc1\x0d\x33\x21\x61\x2d\xaa\x7d\x08\x25\x5f\x27\x53\x2f\x03\x52\x3b\xd8\x33\x15\x0a\xc1\x57\x6f\x28\x85\xae\xa4\xf3\xde\x48\xb9\x61\xd4\x9d\x77\xea\xbb\xda\x09\xed\xf0\xd3\xe9\x65\x7a\x05\x24\x9a\x7d\xd8\x52\xa2\x3e\xe2\x18\x87\xfa\xb0\x7b\x07\x5f\x74\x54\x03\xcd\x3e\x5c\x1f\xaa\x0f\x38\x9c\xe8\x2a\x83\xcc\xaa\xe6\x3f\x26\xbd\x2e\x89\xa9\x5f\x5b\x65\x30\x75\x4d\x3c\x73\x35\x1b\x33\xa6\xc6\x82\x84\x23\xe1\x24\xa7\x84\x6e\xad\x57\xb6\x9f\x44\x16\x84\x5c\x81\x19\xc9\xbd\x39\xbc\x5a\x66\x4f\xe9\x2c\x65\x1f\xd9\xff\xda\xcb\x72\xac\xe7\x81\xbd\x7f\x9d\xc4\x67\xd3\x5b\x9e\xc3\x3a\xce\xcb\xe9\x38\x9c\x57\x7d\x0f\x94\xfa\xda\xad\x39\xf6\xb7\xda\x89\x7e\xff\x55\x39\xcb\x48\xfb\xc2\xd6\x5b\x16\xff\xa2\x51\x5c\x3a\xe5\x0c\x6d\xc3\x2c\x13\xad\xee\x38\x19\xae\x96\x5a\x7e\x42\x65\x7d\xd1\x5a\xaa\x0e\xc9\x14\x3c\xc5\x24\x2d\xe8\x48\x00\x9b\x94\x17\x18\x19\x08\x15\x45\x2b\xe8\x72\x08\x78\x0a\xaf\xcc\x15\x3f\xe4\xb0\x69\x17\xe9\x5b\x49\x55\x7d\x69\xf2\xa9\x71\x67\x6c\xd9\x6f\xf2\xc5\xd8\x0f\xa1\x05\x27\x47\x1d\x5c\x0f\x9e\xec\xef\x05\xe7\xf6\x58\x6c\xc7\xd8\x6d\xa0\xe0\xa7\x7a\xe4\x03\x8d\x09\x5b\x95\x81\x00\x36\x06\x3c\x76\xc6\xc1\x60\x81\x9a\xbc\x4a\x27\xe9\x22\xf7\x7a\x63\x2d\x24\xfb\xae\xb7\x15\x02\x95\x3d\xae\xfb\xa9\x44\x9a\x58\x0e\x2c\x7a\x4c\xce\x0a\x52\x77\x63\xdf\x55\x87\x3a\xe3\x21\x1c\x0c\xd9\x85\x25\x86\xcc\x13\x9b\xe2\xfb\x45\xd9\x3f\xd5\xdb\x27\x7a\xbc\x45\x9e\x3e\x3b\x06\x01\xbb\xbc\x68\x5b\x4a\xc3\xcf\xad\xde\x87\x3a\x57\x9b\xb0\xdb\xc8\x22\x13\xf4\xcb\x21\x4d\xac\x29\x61\x27\x93\x25\xa2\xc6\x77\x4b\xf6\xad\xc1\xd0\xcb\xd3\x29\x1c\xb3\x11\x94\x4b\x49\xf2\x17\x26\x21\x5f\x4b\xe8\x9a\x95\xc2\x4d\x6a\x61\x4d\xeb\xd6\x26\xb1\xd8\x8c\xa9\xab\x27\xaf\xe0\xc9\xad\x49\x74\xd1\x14\xb5\x55\x02\xe4\xde\x52\x52\x8c\x0f\x4f\x8c\xb8\x72\x0a\x00\x6a\x47\x21\x26\x1c\x2f\xd3\x09\xb8\x65\x2f\x2b\xec\x1f\x56\x5a\x7b\x93\xfc\xd8\xfa\xea\xcb\x8a\xb5\xd5\x97\x55\xb3\xae\xfa\x03\xf5\xb9\xd4\xf5\x7a\x6d\x2e\xed\x1a\xcc\x93\xb4\x44\x1f\x4d\x95\x6b\x22\x62\x1b\x8d\x38\xde\x87\x1f\x5f\x3e\xd1\xd3\xfc\x38\x1a\x75\xd4\xe3\xdb\x1c\x9e\x99\x09\xf9\x6c\x94\x1c\xa3\x74\x9e\x0e\xf3\x69\xbe\xa4\x0c\x26\x37\x1a\xe3\xff\x01\x85\xfb\x7f\x07\xdd\xb5\x79\x9a\x0d\x73\x95\x10\x1c\x5a\x82\x65\x6f\x91\x49\x7c\xf6\x6d\x59\xa2\x3d\xf6\x35\xd2\x28\x4e\xbf\x8a\x56\xd5\x9e\x61\x56\x7a\x91\xe6\x53\xc4\x79\xf1\x28\xfc\xde\xf5\x23\x65\x51\x93\xa5\xfa\x9d\x3b\x1e\x6b\x7c\xa7\xdd\xfa\xe5\x17\x8c\x8b\x98\xa7\xd3\xfc\xb7\x8c\xdc\x61\xeb\xbc\x33\x2b\xce\x8e\x8e\x92\x9a\x3a\xad\xf3\x8f\x4b\x97\xf9\xe7\xbc\x09\x5c\xc2\xbf\xf7\xee\x07\x6f\x00\x9f\x6f\x64\xed\xdb\xb7\xdc\x51\x75\x9e\xcf\xe8\x8c\xfd\x17\x86\x84\xdb\x18\x33\xd5\x47\xcf\x5f\xbe\xd2\x4a\x67\x28\xda\x19\x95\x0b\x56\x3d\xd7\xd4\xcb\x7e\x9c\x2c\x6b\xd0\xea\x52\xa6\xe8\x0c\x2a\xe6\x92\x49\xea\x94\xd9\x0a\x06\x1f\x8a\x67\xab\x31\xb9\x3f\x2b\x02\xf7\x87\x2d\xed\xd9\x3e\x9c\x96\x67\x55\x6f\x56\x8d\x0b\x12\x99\x87\xfd\x3c\x23\x45\x7c\x01\xec\x66\x3f\x5d\x8c\xce\xf3\x8b\x0c\xc4\xe7\xbd\xdd\xfe\xee\xe7\xfd\xbd\x83\xbe\x0c\x6c\xde\x52\x80\x39\x05\xb6\x99\x26\x5c\xed\x4c\x73\x20\xc2\x29\xff\x9d\x16\xe3\x9d\xcb\x72\xf1\x36\x5d\xa0\x17\x28\x06\x36\x98\xbf\x33\x4b\xb1\x89\x5e\x74\xde\x17\xb3\x94\xc0\x69\x82\x18\xd5\x04\xdd\xee\x29\x4a\x66\xc9\x99\xc7\xd9\xec\xab\x7c\x9b\x67\xf8\x90\x2b\x9e\xa3\xc8\x77\x02\x33\xbd\x9a\x8e\xc9\xd9\x5f\xd2\xb4\x24\xd4\x81\x10\x86\x9e\x5b\x3b\x2b\x0c\xac\xae\xe0\xe1\x6a\x09\xe3\x2e\x81\x65\xe9\x87\x4f\x1a\xfd\xf9\x6a\x3a\xed\xef\xef\x7d\x21\xf3\xdf\x24\xb4\x4b\x60\x7f\x6c\x62\x7a\x9a\x39\x01\x6a\x78\xf2\x78\x4b\x73\xba\xcd\x1a\x88\xa0\x2b\xa4\x5f\x77\x0c\x34\x00\x79\x12\x00\x53\x26\xfa\x3a\xd1\x8d\x6f\xc6\xec\x99\xbe\x29\x27\x1c\x4b\x31\x7e\x04\x16\x23\x38\x00\x04\xef\x27\x8f\xbf\xc4\x09\xaa\x85\x13\x9e\x5a\x65\xdc\xca\xc4\x51\x30\x8e\x22\x43\xd8\xa4\xb7\x59\x36\xaf\xe0\xdc\xd2\x8a\x92\x14\x2b\xff\x0f\x0a\xc4\xbb\xe3\x0c\x75\xe2\xe7\x71\xb5\x7a\x93\x97\x55\xfa\x36\xed\x13\x9f\x84\xa7\x91\x67\x5f\xee\xc8\x10\x3b\xd9\xbb\x14\x6d\x76\x36\xdd\xc2\xba\x23\x8e\x01\x42\xf8\xdb\x2d\x2b\xbe\x87\x5e\xe3\x1b\xf6\x90\x08\xa9\x9c\x4e\xcc\xa3\x51\xf5\xfb\x10\x6e\xcd\x45\xf6\x77\x7e\x15\x6a\xb7\x7e\xc8\x47\x8b\xb2\x2a\x27\xcb\x1e\x1e\xda\xeb\xd7\x2f\x5a\x11\x77\x47\xe5\x5d\x01\xa8\xd1\x20\x12\xc0\x68\xfb\x88\xbe\xee\x6f\x82\xbe\x74\x06\x30\x38\xb3\x30\x38\x4e\x0d\x1f\xc9\x77\x65\x94\x6f\xa9\x86\xa8\x00\xbc\x2e\xd6\x3f\x65\x99\xd0\x3b\xe5\xf0\x8d\x4b\xe8\x40\x3f\x64\x63\x66\xf9\xbb\xbc\xa0\x12\x8f\xb2\xfe\x80\xc5\x24\xbd\x89\x67\x07\xaa\xb9\xd1\x39\x45\x5e\x59\xa3\x46\xf4\xc3\x37\x1e\xb5\x95\xf2\x1b\xec\xea\xdd\x04\x7c\x27\x1a\x7c\x72\xc8\xed\x02\x54\xcc\x20\xa3\xbc\x1f\xbe\x39\x86\x3a\x27\x6e\xc7\x5c\x1d\xfa\x60\xde\xd5\x64\x3a\x50\x5f\x6b\xe0\x58\x57\x8c\x78\x01\x17\x79\x06\x80\x51\x24\xa7\x24\xe4\x9d\x72\x68\xe9\xd3\x49\x71\xda\x14\xe8\xce\x3a\x5e\xd5\xad\x7d\x26\x85\xb7\x07\x32\xb5\xeb\xe8\x29\xd5\xe6\xdd\xc3\x98\xe0\x91\xe2\x50\xc1\xed\x6b\x8e\x29\x60\x91\x44\xc2\x23\x2e\xe2\x17\x9d\xd9\x26\x2c\xb1\x82\x40\x3b\xf8\x72\x4c\x3d\x9d\xd4\x9b\x98\x0f\xd0\xf2\xf8\x84\xb9\x74\xc9\x4f\x53\x68\xa7\x0c\xd6\x25\x86\xea\xfd\xd4\x6d\xab\xd1\xf1\xb3\x8e\x02\x35\x13\x88\xa2\xf3\xe2\xa2\x7c\x8b\x54\x03\x43\x25\x9c\x4d\xc9\xda\x1f\x99\x6d\x3c\x97\x22\x49\x99\x4a\xe4\x38\x99\x2b\x8e\x1e\x9e\xd5\x4c\xb1\xfe\x01\xc7\x32\xca\x9a\xf7\xbc\x49\x9f\xba\xc9\x31\x68\x2d\x40\x68\x92\x55\x4e\x26\x66\xa4\xb2\x10\xdc\x34\x29\xc4\xff\x93\xdf\x7a\x8d\x4e\xa5\x72\x62\x08\x08\x8f\x6c\xe6\x55\xd8\x89\xb8\x19\x97\xeb\x4f\xec\x25\xed\xaf\xba\x11\xd6\x6a\x18\xaf\xa5\x39\x47\xf8\x33\x45\xad\xd2\x67\x98\xbe\x0b\xcf\x14\x43\x6f\x7b\x69\xb6\xfe\xb1\x87\x33\x99\x44\x2f\x0d\x03\x8b\xbb\x32\x8d\x55\x1e\x4e\xa7\xea\xe5\xa8\xb1\xda\xc7\xbe\x81\x22\x9e\x92\x7e\x0e\xb1\x32\x05\x75\xb1\x07\x1a\xc8\x69\xf5\x5e\x8d\x8a\xd7\x3b\x4b\x27\x8a\x56\xf3\x6c\x94\x4f\xf2\x91\xd9\x77\xcf\x0e\x30\x32\x2b\xb9\xe4\xe6\xcd\x54\xa7\xe5\xf2\x46\xe0\xde\x79\x47\x70\xf2\x26\x1e\x8c\x11\x6a\xf7\xd6\xad\x42\x02\x03\x34\x0f\xdd\xb8\x1c\x19\xd0\xae\x4a\x46\x35\xeb\x1a\xd6\xd5\xfc\xac\xdb\xaf\xe5\xe6\xd2\xaa\xfe\xd1\x30\x51\xd9\xbb\x8e\x73\x99\x02\x79\xe3\x0f\x49\x0c\x9b\x10\xc7\x37\x1a\xd2\x95\xa2\xdf\x8e\x63\x71\x5d\xa3\x93\xff\x28\xc3\x78\x5b\x7b\x56\xf5\x37\x5c\x64\xe9\x5b\xc5\xb9\xac\xb9\x75\x08\x70\x3e\xed\x71\x17\x10\x76\x72\xf3\x1b\x05\x44\x3b\x1b\x5f\x27\xbd\x5e\xaf\xe9\x3e\x45\x2f\x10\x52\xf8\x1a\x3c\xdf\x96\x9a\x70\x22\x93\x33\xac\x73\x7c\xd2\xab\x70\x43\x58\x52\xb5\xb0\x80\xbb\x43\xfb\xd1\xdd\x08\x0e\x05\x9e\x6a\xe9\xe1\x74\x5b\x75\x04\x74\x02\x26\xd6\x4c\xed\xc1\x87\x1e\x1c\x22\xb0\xc0\xae\xfb\x87\xc9\xdd\xbb\x79\xe4\x60\xc9\xd5\xd6\xc7\xb6\x95\x67\x25\xbe\x16\x95\x52\xb9\x7d\xbc\x73\xd3\x56\xa8\xf4\xe6\x93\x35\x67\xc8\x6f\x81\x1b\x62\xc4\x69\xec\x1d\xfc\x83\x4e\x55\xad\xae\x89\x21\x38\x8c\x86\x01\x20\xc5\x8a\x61\x1d\x51\xa4\x34\xf0\x6d\xd0\xc5\xe6\x4b\x37\x4a\x9b\x0d\x17\x0f\x83\x45\xed\x00\xdc\xfa\xad\x82\x86\xd7\x65\x77\x4b\xaa\xd8\x87\x25\x31\x92\x44\x46\xff\x8b\x3f\xd5\x56\x11\xb8\x55\xcf\xaa\xb0\xd7\xc7\x12\x63\x0a\x08\x0b\xb2\x96\x1b\x9e\x4a\x83\x35\x8c\xa6\x1a\xdd\x00\xd6\xee\xeb\x8a\xca\x3a\x83\x2f\x89\xa9\xcf\x89\xe8\x58\x83\xe8\xb5\xe0\x0f\x3b\xda\xac\x43\x9a\x70\x24\x3f\xdd\xf9\x44\x65\x11\x58\x2d\x27\x5f\xea\x8f\xf8\x5b\x1b\xfb\x59\xd8\x10\x17\xb6\xc5\xaa\x40\xef\x20\xe4\x10\x01\x26\x16\xa8\x55\x36\x46\x84\xc9\x6b\xe4\x10\x25\x63\x02\xc6\x18\x13\x83\x04\xe2\x2a\x71\x5e\xb2\x4e\x42\x96\xf3\x30\xff\x71\xc5\x08\x10\x2b\x8b\xce\xe5\x0c\x44\xe2\x71\xda\x2b\xb2\x65\xff\xcd\x3c\x3b\xdb\x19\xc2\xf1\xec\xa4\x6f\xd2\x77\x3b\x32\x72\xdf\x1d\x46\x5e\x3d\x94\xd9\x1c\x25\x11\x1b\x83\xde\x8c\x64\xc3\xbe\x54\xea\xe7\x1b\xac\x10\xc4\x98\x17\x00\xf7\xc0\xc9\xfe\x8d\x8d\x28\x7e\x9c\x1b\xc9\x3d\x4d\xbe\x85\xb9\xf0\x42\x6c\x1d\x17\x3e\x0d\x15\x3a\x09\x48\x9c\x1c\x29\xac\x8b\xaa\x95\x45\xc6\x9e\xd9\x14\x9f\x6b\x60\x16\x19\x08\xf3\xe9\x22\xbf\x4a\xfb\x73\xee\xf0\x4d\xd5\xcf\xab\x0a\x64\xe9\xfe\xde\xde\xc1\x57\x9f\xd3\x3d\xc2\xab\x92\x0c\xf9\x66\xd1\xda\x79\xe9\x6e\x0a\x47\x49\xdf\xfe\x58\x9f\xa7\xcc\xda\x34\x90\x8b\xee\x62\x85\x01\xc5\xf0\x8d\xa0\x12\xf5\x03\x2e\xb0\xe2\xe0\x13\xda\xd1\x49\xec\x18\xa2\x13\x19\x97\xc5\x12\xc3\x8d\x73\xd3\x23\x75\x26\x80\x72\xd4\x2c\xd5\xd6\xb3\x3f\xa4\x35\xc6\x4a\x2e\xe0\x42\xcb\x43\x8a\xce\xb2\x6d\x3e\x1f\x25\x07\xda\xcf\x97\x1f\xca\x60\x2a\xfa\x5a\x1a\x07\x90\x23\x6b\xa0\xea\x4a\x8c\x01\x59\x56\x0c\x88\x66\xec\xca\x7b\x5c\x51\x16\x3b\x97\xc8\x0b\x89\x7f\x09\x7d\xdd\xab\x7f\xc4\x2c\x34\xdc\x72\x9f\x7f\x97\xe6\xf7\x01\xfd\x16\x13\x21\x28\xba\x47\xbf\x57\xf3\xb3\x45\x3a\xc6\xdf\x9f\xd3\xef\xa2\x2c\xe7\x5c\xff\x3e\xe1\x29\x35\x5f\xc4\x67\x30\x43\x44\x21\xd6\xec\x43\xad\x15\x38\x29\xe8\x48\x22\x7e\x78\xa9\xec\x49\xd5\x46\x91\x74\xac\xd7\x90\xb1\x1a\xe2\xb0\xe7\x2d\xb1\x95\x96\x28\x74\xd7\x61\xf4\x5e\x80\x66\xbc\x59\x09\x22\x69\xc4\xa5\x44\xea\xa8\x64\xb8\xca\xa7\x88\x66\x48\x2b\x05\x5f\xc6\x38\xf6\x22\x9b\x00\xc3\x82\x31\xea\x72\xd4\x91\x9a\x29\xd0\x85\xd0\xf8\x08\x7e\x7b\x99\xd4\x09\x8c\x9c\x87\x8e\xb9\xeb\xf8\xdf\xd7\x73\x77\x94\x49\x3e\xfe\x26\x39\x4e\xbe\xc6\xb9\x7f\x93\x9c\x48\xad\xc7\xac\xc7\x1a\xa8\x46\x9f\x9f\x67\xd3\x69\x89\x77\x6d\x3a\x36\x65\x07\xe6\x8f\x7b\x52\x51\x50\x30\x52\x35\x49\xdd\x99\x23\xde\x92\xb4\xb0\x23\xcc\x6c\x0b\x04\x6c\x94\x93\x8e\xac\xe1\xed\xce\x80\x91\x67\xfb\xa2\x93\xce\x59\x6b\x92\xc0\x90\x04\x51\x29\x37\x52\xae\x7e\x56\x9d\xd3\x32\x1d\x68\x53\x8a\xf8\xb3\x92\xf2\x02\xad\x87\xd1\x4e\x92\x0d\x8c\x10\xa3\x83\xb9\xf9\x45\x06\x72\x1f\x79\x10\xf7\x3b\x09\x92\x4a\x9a\x98\x4c\x68\x64\x2d\x67\xcb\x3f\x3d\xab\x49\xea\xe4\x81\x2b\xa0\xdf\x83\x44\x35\xe8\x31\xd9\x62\x5f\x64\x5b\x1a\x66\x5f\xd1\x84\xc4\x24\x06\x50\x86\x4b\xea\x73\x90\xd0\x9c\x27\xaf\xbe\x37\x9e\x9b\x72\xcb\xf4\x62\xd5\x10\x88\x47\xc6\x34\x86\x2f\xf0\x4f\x74\x4c\xfc\xb0\xe1\x60\x22\x37\xcd\x72\x0c\xaf\x39\xcc\x10\x54\xc5\x72\x88\x68\xcd\x7b\xa1\xff\x03\xc1\xd8\x2e\xaf\xc1\xc3\x8a\x2d\xd7\x99\x21\xb3\x61\xa1\x68\xaa\x32\xe5\xde\xd0\xb3\x6d\xf7\xa7\x48\x9f\x44\xc7\x6a\xa6\x1a\x9d\xda\x2b\x79\x56\xa0\x9e\xe9\xcd\x80\x52\xf6\xb9\x94\xc5\xac\xfa\xe7\xcb\x66\xcd\xba\x8e\x95\x2b\xef\x89\x75\xa1\xc5\x2e\x26\x8b\xf4\x8c\xec\x4b\x28\x30\x04\x82\x68\x6a\x44\x6b\x1d\xb6\xfe\x48\xc3\x84\x59\x82\x19\xe6\xae\x06\x57\x04\x32\xf8\x61\x5e\x59\x79\x43\x34\x60\x76\xd0\x16\x29\x52\x7c\x18\x08\x07\x66\xf9\xed\x16\x3e\x80\xca\x58\x88\xd1\x10\x83\xba\x2c\x45\x1b\xec\x1f\x4d\x17\xdf\x78\x19\x77\x30\xfc\x54\xea\x70\x6f\x75\xae\xb8\xc1\xce\x16\xb5\x35\xa4\xd9\xf9\xa4\xce\xdb\x6e\x7c\x96\x55\xb7\xcc\xc4\xd1\x0b\x57\x29\x5d\x7a\x3e\x08\x8f\x0d\xed\x67\x63\xa8\x6c\x3a\x47\xf6\x9c\xe8\x03\xe3\x1a\x22\xbe\x81\x6a\xf8\x03\x2e\x9a\x45\x8a\x77\xe2\x08\xd0\xc0\xaa\x87\x89\x79\x63\x02\x8b\xbe\x3a\xcc\x2a\xf4\xe4\xa1\x15\x2f\x7e\xa0\x89\x27\x17\x04\xa3\xf3\x7c\xf1\x81\xa7\x5d\x4d\x97\x96\x57\x0f\xaa\xee\xc1\x36\xf3\x2d\xb3\x86\x6f\x1d\xc9\xd2\xe2\x9a\x1d\xef\x9e\x34\xde\x89\x06\x4d\x88\x9a\x5f\x4c\x19\xe2\xf5\x9e\xdf\xdd\xc3\xfe\x75\x1b\x51\x8f\x44\xe1\x5a\xb7\x15\xe4\xcb\xa7\x1f\x02\x37\xe0\xaf\x87\xd5\xff\x55\x07\x3a\x31\x27\xf0\x7d\x3e\xcd\x5e\x72\x10\x47\xaa\x31\x89\xc6\x96\xb6\xa1\x2b\x14\x75\xc2\xaa\xbc\x03\x4c\xe0\x62\x64\xbe\x71\xa1\x7c\x4d\xfd\xb9\xa9\x4b\x35\xe1\x70\xd0\xb1\x4d\x33\xb8\x26\xbe\xcd\xff\xdc\x9d\x25\x8a\xa1\x99\xf8\x46\x72\x76\x4b\x70\xf0\xce\xce\xc6\x64\x0c\x6f\x10\x55\xe3\xaf\xeb\x2f\x0a\x09\xc2\xcc\x6f\x62\x1f\xb4\x71\xc7\xdc\x50\xe0\xb8\xab\xcf\xfa\xa4\x73\x18\x03\x7f\xec\x21\x82\xed\x1c\x8b\xca\x34\x57\x30\x9d\x10\x7d\x64\x96\xd9\xa5\xcc\x10\xbc\xe8\xa3\x9a\xd9\x11\xd2\xa1\xe0\xbc\x4f\x29\xda\xc4\x29\xf6\x72\xea\xe9\x49\x8c\x06\x25\xc8\x30\x6f\x83\x51\xd4\x39\x50\x7d\x98\x75\x63\xf1\x10\x54\x6e\x4b\x2d\x8c\x2a\xd9\x30\x3b\xfa\xce\xac\xe7\x79\xd6\xde\xcb\x1b\x6e\xa6\x9c\x29\x19\x4e\xd9\x7b\x69\xc2\xb0\x76\x5b\x9d\xe3\x3d\x1b\xe8\x33\x24\x58\xb0\x9e\xa1\x78\xf1\xd9\x20\xe1\xe1\x35\x44\x4b\xff\x1f\x5f\x3e\x8d\x93\x7b\x19\xb9\x1e\x5f\x56\x0a\x93\x5b\x07\x45\xf5\x98\x0d\x66\x22\x23\x11\xc7\xd9\x3b\x42\x8c\x6a\x49\x79\x50\xb4\x96\xe4\xb8\x76\x55\xae\x12\xea\x5e\xf4\xca\x57\x98\x19\x95\x34\x3b\x95\xdd\x69\x2e\xac\x5d\xa2\x70\x85\xb2\xbc\xb4\xca\x47\x52\x59\xc2\xac\x62\x73\xa3\xe7\x8f\xa9\x5f\x99\xfc\xe8\x6a\x1e\xdd\x49\xb8\x4f\x20\x2f\x09\xcb\x13\x63\xab\x88\xbf\xbe\xe5\xe6\x51\x47\x1d\xf3\xee\x6b\x4f\xd5\xfa\x2a\x0c\x97\x65\xda\x96\xee\x3a\x37\x70\x2e\x4e\xde\xfc\x2e\x0b\xe4\xcd\xe4\x11\x45\x57\x26\xf6\x65\x96\x92\x81\x2d\xc1\x38\x00\xbb\x58\xe9\xa8\x27\xca\xe0\x31\x5c\xde\x96\xc3\x8b\x9c\xb4\x29\x60\xcb\x55\x67\xbd\xe0\x68\x42\xc2\xd4\x04\x47\x36\x7e\xd6\x11\x61\x90\x73\xe5\xea\x96\x69\x14\xce\x0f\xeb\x6e\x79\x86\xac\x22\x64\x39\x8b\x7c\x34\x64\xae\x0b\x5e\xca\xea\x83\xf8\x13\x4c\x19\xf1\x70\xd9\xde\xed\x50\xdb\x61\xab\x66\xcc\xe1\x4f\xdb\x23\x1d\xd4\x41\xb5\x1a\xc2\x88\x80\xae\xf5\xd4\xeb\x11\xb1\xc2\xa5\xe0\x7f\xbe\xc5\xba\xc9\x4e\x85\xdc\x3a\xd7\xf4\x2d\xc8\xe3\xe1\x83\xcd\x2c\x17\x0b\x5b\x4f\x81\x9d\xb9\x1a\x89\xa4\xee\xb5\xab\x55\x21\x6b\x9e\xad\x66\x43\xc0\x4b\x6c\x96\x20\xd6\x2f\x14\xda\x4c\xa9\x62\x8e\x09\x19\xd6\xf7\xc6\x8c\xaa\x16\xaa\xdc\x1a\x92\x6f\x92\xbd\x5a\x1b\xa3\x96\xa9\xf5\xae\xf9\x7c\xd9\x55\x94\x49\xa0\x87\x78\x6e\x8a\x9b\xfa\x73\x29\x12\x14\x66\x4b\xab\x4d\x78\x5b\xd9\x32\xa9\x2c\x41\xaf\x85\xe9\x45\x98\x55\x6a\x6a\x81\xda\xbd\x4e\x48\x29\x02\x87\x49\xd1\x00\x39\x3e\x75\xe9\x91\x6b\x2c\x38\xe9\x04\xd6\x1e\x37\x6e\x15\x75\x73\xbd\xf6\xa2\x7b\x9a\x9e\xb5\xc4\xfa\x46\xd2\xfb\x21\x78\xa0\x76\xef\x9b\xc8\xf5\xac\x3a\xf3\x2e\x90\xa5\xd6\x72\x16\x7a\x0f\xa0\xae\x83\x64\xf7\xda\x5b\x57\x89\x04\x0c\x9b\xd9\xcf\x25\x21\x17\xde\xc2\xb8\xac\x89\x23\xd8\x8b\x0d\x80\x77\x1d\x93\x9f\xbc\xc7\x07\x73\x65\xbd\x96\xce\x8d\x36\x0a\x0d\x08\x26\x9a\x65\x90\x7e\x1d\x54\x18\x76\xcd\x97\x58\x62\xcb\xa0\xa6\x3e\x24\x18\xfe\x6d\x06\xbc\x03\x6a\xf4\xcc\x49\x56\xa8\x97\x22\xed\x75\xc7\xd3\x3a\xf2\x9d\xfd\x66\xc0\xa8\xb5\x49\xcf\xb8\xb7\x37\x50\x9a\xc6\xfd\xc1\x79\x2e\x1f\x9f\xd0\x99\x1b\x69\x8b\x23\x47\x0e\x8d\x7c\x70\x9e\x5d\x59\x5b\x19\x03\x58\xc0\x0b\x7a\xe0\x58\xf5\x12\x06\x0e\xec\xcd\x54\x92\x4f\xd4\xdb\x2c\x5d\xa0\x8d\x0d\x01\x1d\x80\xb2\x71\x6e\xc1\x77\x66\xc1\x37\xf2\xb2\x9e\x85\xb9\x0c\xc5\x09\x51\x47\x38\xba\x51\xaf\x79\x15\x30\x67\x89\x0b\x02\x74\xb3\x34\x12\xd5\x5f\x12\x85\xb1\x9a\xc7\x0f\xd5\x66\xd6\x94\x8d\x2a\x03\xa1\x7d\x65\xd3\x3a\x73\x71\x6c\xab\x05\xc8\x09\x13\x3a\x69\xe4\x75\x27\x2a\xf7\x34\x88\x53\xb2\x57\x0f\x2b\x25\xb2\x55\x81\xb8\x63\x49\xc4\xfa\x1e\xea\x62\x54\xd8\x91\xb3\x97\xf4\x5d\x24\x83\xab\xee\xb4\x55\xbb\x83\x56\xc4\x59\xa9\xca\x96\xac\x95\x90\x94\x07\x86\x69\xf2\x7b\x91\x52\x43\xce\xee\x8a\x8b\x86\x14\xd7\x7b\xe5\xd5\x3c\x2f\x32\x2b\x7d\xa0\x53\xd4\x23\x0f\x3c\x6e\x10\xad\xef\xd8\xe3\x7c\x20\x41\x83\x07\x0d\xe2\xb6\x43\x9d\xfe\xdc\x13\x6f\x50\xe1\x2a\x9b\xd6\x6b\x7d\xbb\xec\x62\x66\xe9\xdc\x6d\xbd\x5d\x90\x9f\x90\xb4\x2b\x8a\x96\x50\x22\x0e\x74\x29\x55\xef\x4d\x99\x17\xed\x56\xab\x13\x8b\x77\xf5\x90\x52\x76\xb2\x6d\x01\x0c\x2a\x0f\x6d\xf4\x1a\x1b\x5a\x57\xc2\x94\x68\xe1\x59\x3a\x3a\xe7\x3d\x75\xf4\x81\x87\xf2\xb8\xf9\xd4\x79\x88\x18\xc2\x4d\x9e\x65\x47\xdc\xbb\xfa\x2e\x9d\x59\x27\x61\x1c\xe0\x27\xc0\x2f\x4f\x24\x71\x8f\x5d\x74\x0e\x83\xc3\x36\x8e\x2c\xae\xc6\x9a\x6d\x2c\xd2\xfb\x52\xc2\xce\x00\x01\xd0\xf7\x05\x27\xc7\x62\x01\x7c\xb0\x42\xdb\xd0\xd4\xe6\x0a\xfe\x29\xb0\x41\x5d\x44\xfc\x70\xf3\xf6\x84\x0f\x6f\xd2\x38\x53\xa8\x07\x43\x76\x69\xd1\xc6\x65\xcb\x84\x2e\x31\xfc\x01\x47\x40\x24\xeb\x44\xf3\x98\x89\x4a\xd8\x59\x7a\x35\xa4\x58\x36\x40\xdf\x41\x00\x48\x5e\x94\x55\x45\x71\x76\x44\xee\xd7\xe8\x1d\xbb\x63\xaa\x37\xe6\xa8\x2c\x80\x89\x73\xf3\x26\x8f\x4f\xbc\xb0\x38\xa8\x9b\x4a\x32\xfb\x18\xaf\xe1\xc7\x45\xab\x65\x08\x57\x36\x12\xa1\xf4\x50\x47\xcf\x75\xf1\xa1\x11\x2f\x4b\xfe\x64\x2b\x2b\x34\x68\x8b\xbc\xb1\x1e\x1a\xd4\xba\x66\x1c\x0f\x41\xc9\x58\x21\xe5\x5f\x47\x00\x5c\x5d\x06\x08\x2f\x46\x45\x0d\xf1\xf3\x2d\x35\xec\x8f\x95\x7f\x5a\x4a\xa8\xd6\x6f\x9d\xc9\x4e\xe2\x62\x4a\x5a\xa7\xf3\xfa\xdd\xa5\xfb\xbd\x6b\x58\xda\xba\x9e\xaa\xd5\xa2\x66\x00\x5e\x5d\x86\xe9\x1a\xb4\xb2\x73\xba\xf6\x6f\x8e\xb8\xa8\x93\xba\x99\x22\xa7\x6b\xc9\x24\xf7\x82\x69\x0e\xc8\x1c\x7f\xa4\x13\xee\x19\x54\x4c\xc5\x51\xb9\x80\x5a\xd2\xc3\x9e\xd4\x45\x6f\x3c\xf9\x13\x7a\x6b\xa3\x15\x95\xc8\x3c\x82\x24\x3a\x5e\x2a\xca\x0d\xb7\xed\xe6\xad\x53\x54\x2f\xc1\x9d\x32\x4b\x15\xf6\x30\x07\x4a\xb2\x07\xbb\x68\x56\x6c\x1d\xbf\x65\xa2\xc8\x49\xfa\xb4\xed\xcf\x9b\x1d\x8e\x1c\x1f\x6f\x6e\x38\xf5\x98\xf8\x1e\x72\xed\x4c\x9a\xdc\x82\xb8\x63\x18\xb7\xc7\x5c\xbc\x17\xc3\x96\x9c\x28\xe0\x93\x01\xdc\xc8\x8b\x56\x7c\xc9\x20\xc9\xe4\xc5\x38\xbf\xc8\xc7\x2b\x7c\xb1\xe6\x09\xae\xd9\x87\x4d\x76\xc2\x73\x85\x66\xb2\xb2\x54\xd6\x76\x2e\xca\x30\x1c\x1a\xc0\xfd\x54\x35\x74\xd1\x0d\xf1\x7e\x2f\xd0\xc5\xdc\x4f\x78\x68\x7b\x46\x4b\xd9\xf1\x05\xb9\xc0\x63\xfe\x3a\xeb\xbb\x9e\x23\x38\xdb\xea\xea\xa2\x05\x02\xac\x0f\x1f\x1f\xff\xa2\xdf\x4e\x78\x20\x06\x9e\x8e\xde\x88\x11\x5f\xef\x59\x1c\x06\x1d\x23\x43\x4b\xe8\xf5\x9b\xaf\x0b\xba\x6e\x4c\x24\x76\x77\xbe\xaa\x17\x1c\xf7\x7a\xbd\x13\x29\xc5\x9e\xf6\x3f\xff\xfc\x1b\xb6\x79\xa8\x4b\x22\xc9\x5e\x72\x80\x15\xe0\xdf\xfd\xe4\xa0\xcb\x86\x7a\x51\x02\xc5\xc1\xe1\x80\x0c\x2d\x59\xdc\xf8\x12\x2a\x2d\xa9\xf0\x8c\x6c\x7d\x6f\x92\x11\x3c\xbb\x45\xe6\x4a\xaf\xad\x64\x62\x77\x76\x63\x61\xc2\x63\x6f\xeb\xaa\xea\x2a\xfa\xac\xb1\x19\x97\x6b\x79\x1f\xe1\x9d\x77\x3b\x11\x9e\xf7\x23\x70\xa7\xcc\x79\x06\xfc\xa7\x7f\x63\x65\x6a\x11\x1e\x54\x07\x94\xb9\x2d\xbf\x29\xbb\xfe\x42\xc4\x1a\x45\x43\x28\x6a\xc1\x53\x73\x67\xfc\x7a\xbd\x45\x36\x5e\x8d\x32\x17\x19\x20\x1d\x8d\xba\xc9\xdc\x57\xb3\xa3\xed\xac\x42\x83\x42\xb6\xe7\x4c\xad\x0d\x83\xe0\xf0\x11\x9b\xe1\xce\x83\xc8\x1d\xb5\xd0\x0e\xa6\x9a\x7b\xff\xf4\xf5\x73\x76\xa3\x60\x4a\x80\x53\xa0\x7a\x6f\x59\xca\x33\x7c\xc7\x09\x1c\xd8\xcd\xdd\x64\xff\x90\xac\xe1\xe9\x6b\x5f\x00\x9d\x6d\x76\x50\xd8\x85\x0a\x55\x86\x50\xbc\xa4\x68\x4a\xfb\xbc\xc3\x1c\xc6\x60\xcb\xe1\x33\x64\x34\x1b\x94\x5f\x6a\x0f\x75\x1b\x7e\x3c\x32\xbc\xf0\xae\x3c\x0c\xfa\x3b\x0c\x94\xff\x31\xb2\xc2\x0e\x98\xfd\xdd\xcd\x2b\xd1\xd8\x5a\x3b\x1b\x7f\x67\x0f\x55\xdd\x14\x9f\xb0\xe6\xfa\x30\x4c\x6b\x4d\x10\xb0\xe6\x45\x0e\x0b\xa8\x6b\xfb\x7d\x0d\x3e\xfe\x17\x63\xa3\xe7\x71\x0d\x3e\xf5\x0d\xfd\x32\xb7\x3e\x27\x8e\x04\xb5\xf3\xc2\x95\x38\x3a\x61\xfe\xa2\xe9\x62\x0b\x79\x65\x8b\x52\x55\xb5\x02\xb6\x9e\x5b\xd2\xf5\xb1\xf1\x02\x13\x03\x0c\xf6\x78\x8e\xd5\xb6\xdf\xbd\x7b\xe2\x76\xde\x41\x19\xf6\x74\xeb\x5e\xf6\x6a\xf3\x13\xe8\x87\x09\xa2\x68\x34\x54\xb0\xaa\x60\xd1\xb4\x8a\xed\x24\x37\x6e\xda\xce\xb5\xb3\x21\x82\xf5\xa4\x58\xb6\xb9\x0f\x9d\xd2\xfb\x7a\x6b\x83\xf6\x40\x00\x0e\xf5\x3a\xe2\x10\x91\x0e\xd7\xce\x9f\x0e\xef\x43\x66\x2f\x70\x12\xa8\xdc\xcd\xdd\x89\x4b\xc3\x6c\xb4\x60\x0d\x0b\x6a\xf2\xb0\x58\x97\x00\x9d\x42\x3d\xca\x5a\x3a\x22\xd6\x85\x37\x11\x90\x3f\x1d\xf3\x1b\x2b\x20\xff\xd9\x92\x60\xf2\x89\x43\x4f\x0d\x4f\xdb\xf8\x5f\x58\x97\x1f\xba\xf7\x22\xf8\xd8\xda\x50\x1d\xd5\xc5\xb6\xf5\x30\x20\x2d\x37\xc3\x0d\x7e\xe5\xb5\x18\xc2\x54\xbd\x11\x4f\x38\xf3\xaf\x08\xb2\x68\xda\x83\xdd\xa6\xdb\x8a\x76\x85\x4e\xa7\x1f\xb5\xf4\xb3\x5d\x3f\xb0\x93\x74\x57\xdb\x7e\x1c\xd8\x8f\x55\xfe\x5b\x76\x18\x45\x0a\x3e\x59\x3a\xf4\xab\x40\x67\x0f\x17\x11\x6a\xe2\x61\x05\x14\x72\xfe\x00\x0e\xb1\xc3\x08\x56\xbe\x19\x6b\xb8\x16\x5e\xcf\x21\xce\x30\xda\xce\x10\x86\x6a\x86\x14\xe1\xf1\x58\x93\x0a\x3b\x90\x2d\x91\xfd\xd4\x19\x31\x23\x6c\x90\x18\x5a\x84\x98\xe3\x63\xaa\xdf\xec\xec\x4d\xbd\x00\xdf\x7c\x80\x22\xe8\x95\x52\xc4\x1b\xa5\xcf\x10\xe3\xdd\x3a\x26\x1b\xa9\x3c\xea\xa2\x12\x04\x36\x36\x86\x44\xff\x67\xc2\x6a\x1c\xef\x0e\xfa\x40\x99\x82\xf5\xf8\x18\x32\x10\x93\xe4\xb0\x42\x7f\xb7\x87\x51\x19\x59\xa5\x54\x8d\x16\xf9\x9c\xbd\x49\x27\x49\x88\xfa\x4c\x9c\xdd\x1a\xef\x6e\x18\xf4\x3f\xa8\x53\x7a\xa8\x0c\x87\x3f\x44\xb7\xf4\xe7\xe9\x7b\x18\xcc\x5e\xa7\xb9\xd1\xae\x1c\x7a\x1f\xd8\x6b\xcd\xaa\x32\x59\x98\x7a\x5d\x96\x4f\x4b\x3f\x91\x09\x25\xab\x48\xda\xae\x37\x85\x1c\x92\x6f\x80\x6b\xd4\xcc\x35\x7c\x6e\xe0\x19\x5d\x7b\x65\x59\xa1\xb9\x3d\xd3\x94\xf0\xd9\x91\xc5\x68\x64\x81\x53\x9d\x3d\xd5\x52\xee\x56\x0d\x39\xec\x1d\x26\x01\x2e\xa0\x2d\xb6\x7d\x22\x36\xa0\x0b\xdd\x31\x4e\x8a\xbe\x26\x43\xd8\x18\xfb\x0e\x7d\xb0\xb7\xab\x6f\x7a\xb8\x39\x3a\x30\x98\xe7\xf6\xe8\x6b\x70\x9e\x5a\xe5\x93\x9e\x89\xf7\xbe\x91\x4f\xda\x5e\xe7\x9d\xb5\x62\x37\x9f\xba\x3e\x57\xfd\xb4\xec\x3e\x74\x41\xd4\xbd\x9b\x84\xeb\x92\x8d\xd7\xbb\x69\x11\xa4\x2d\xd4\x0c\x3d\x2b\xa1\x9a\x86\xd8\xed\x26\xba\x95\xd9\xcd\x3a\x0f\xee\xdb\x2d\x70\xa7\xb7\xb4\x09\x42\x2d\xf9\x0d\x96\x0d\x1b\xda\x04\x61\xa8\xdd\xd0\x22\xc8\x82\x6f\xdc\x2a\x08\x07\x3f\x0c\xe6\xdf\x6a\xad\x67\x0c\xd6\x98\xfe\x98\x4e\xee\x46\x77\xa1\x6d\xcc\x81\x22\xbc\xc1\xb5\x86\x1c\xb9\xc5\x1c\x95\xc0\x4d\x71\x23\xe8\xf0\xcf\xcd\x62\x0c\x13\x4d\xd4\x74\xed\x64\x56\x53\x52\x13\xdf\x0c\x2d\xcb\x43\x74\xd5\x8e\x2a\x00\x4d\xf5\x9a\x0e\x10\x7a\x30\xc9\xb8\x34\xed\xf9\x87\xa4\x77\x45\xaf\xa1\xed\xc1\xfe\x97\xdd\x6d\x7a\xef\xd9\x1e\xdc\x87\xbf\x42\x17\xc2\xed\xc1\x17\xdd\xed\xba\x9b\xe0\xf6\xe0\x2b\x28\x06\xda\xb9\x3d\xd8\xdb\xed\x6e\x3b\x17\x45\xe8\x10\xbe\xa0\x75\xce\xf6\xe0\x1e\x65\x79\xfd\xf2\x36\x81\x53\xfe\x92\x49\x16\x32\xf2\x93\x44\x08\xb3\xf6\xee\x35\x33\x2b\x51\x45\x61\xcd\xb8\x7a\xa9\x16\x6e\x85\x0d\x32\x7a\xd4\x37\x66\xe5\x34\x84\x8b\x0a\x28\x2e\x89\x79\x2e\x4b\xc9\x37\xea\xd8\x5a\xb4\xa0\x49\xa6\x6d\xef\x39\xa0\xaa\x5c\xbe\xa1\x8e\x3f\xa7\xa9\xeb\x87\x63\xa8\xcf\x07\x0b\xe5\x08\x3c\xee\x76\xc0\x80\x0c\xd2\xb9\xe7\x75\xec\xf4\x1f\x68\x43\xa4\xbc\x54\xbf\xfa\x50\x2f\x55\xe1\x6b\xc4\x4b\x55\xfc\x2e\xd9\x81\xdf\x73\x8c\x14\x72\x66\x5d\xb3\xf2\x8a\x8e\xff\xf6\x29\x1d\xec\x6b\x7b\xe0\x3c\xe9\xb9\x04\x90\xc6\x5f\x0e\xf8\x25\xf9\xb1\x14\x18\x94\xaa\x00\xcc\x25\x8a\x40\x34\x9c\xd1\x8a\x41\xe4\xb0\x6c\xea\xda\x5e\x53\x9c\x9a\xb4\xb8\x5a\x9e\xb3\x11\xcf\x9a\xc8\x39\xce\x20\xc0\x28\xe9\xb4\x58\xf8\x8b\xfb\x1c\x1c\xe7\x1d\x1d\x5d\xc7\xc5\x51\xe6\x8f\xd6\xf9\xc8\xf9\x1d\xf9\xc1\x6e\xf3\x4a\x50\x14\xf6\xe2\xf2\xdb\xe0\x7f\x0d\x7e\x4b\x50\xb1\xd1\x6d\x29\xd6\xdc\xd8\x29\x04\xed\x98\xa1\x8f\x35\x40\x03\xdc\x48\x03\x2c\x76\xe2\x52\x4d\x89\xe9\xd8\x02\x65\xe0\x26\x20\x24\x8b\x7b\xbf\x46\xb4\x81\x1a\xcd\x14\x03\xbb\xf2\x0f\x00\x69\x44\x3d\xa2\x6f\x6d\x2a\x51\x12\xe2\xdc\xb2\x70\x85\xb0\xd0\x16\xe3\x16\xed\xe0\xa6\xce\xd8\x86\x50\x02\xe9\xee\x6f\xaf\x9e\x3f\xd3\xc3\x62\x07\x47\x89\xfb\xd6\xae\x3f\x17\x85\xf1\x8d\xbc\x9e\xb9\xef\x1b\x30\x8a\x42\x16\xd0\x47\x07\x67\x1c\x6c\x06\x46\x3f\x0a\xb6\x23\xba\x15\x51\x5a\x1a\xe6\x3f\xd4\xe6\x53\xbf\x04\x97\xe2\xf0\x1f\x94\x76\x5c\xf0\xcc\xf6\xe0\xe0\x1e\xe0\xb9\x83\xdd\xdb\x50\x0f\x0e\xc4\x80\xc6\xf3\x30\xbf\xd3\x5e\xf2\xf8\x5d\x36\x5a\x49\x10\x12\x92\x9f\x30\x80\x72\x9a\x6c\xd3\xeb\xc7\xbb\xe5\x36\x40\x69\x2f\xeb\xd9\x2f\x39\x7a\xcf\x09\xb2\xe0\xbc\xf4\x2c\x7f\x39\x97\xab\x72\x22\x76\x54\x93\xe5\x0e\x46\x37\x48\x30\x31\x26\x10\x71\xb2\xea\xa3\x41\x93\x79\x99\xe3\xbb\x0a\xa7\x36\xc0\x9e\xb6\xf9\x6e\x6d\x27\xd5\x08\x0e\xd5\x74\x21\x49\x5d\x93\xbf\xbd\x02\xfc\x89\xb3\x74\x0e\xcc\x35\x0c\xaa\xd0\x38\xea\x47\x75\x18\x8a\x44\x92\x60\x33\x55\x38\xd8\xfb\x1f\xaa\xf0\xff\x0a\x55\xf8\x1f\x7a\xf1\xff\x45\x7a\x81\xef\x4f\x7e\xd6\x8c\x58\x10\x4c\xc7\x2e\x73\xf8\xcb\x7b\x51\x6a\x43\xe3\xc5\x5c\xb0\xff\x87\x20\xfd\x13\x09\xd2\xfe\x6d\x08\xd2\xfa\x58\x30\x7c\x89\x34\x3a\xe5\x92\xf5\xd8\x14\x4b\x9f\x96\x67\xf9\x28\x19\x96\x8b\x45\x79\x69\xcc\xca\x7e\x40\xfb\xea\x22\xff\x6d\xe1\xec\x90\x77\x62\x70\x68\xeb\xa9\xbf\x50\x92\xeb\xcf\x52\x8c\xef\xd6\x9f\x70\xa0\xe5\x1d\x0e\xb4\x5c\xf5\x31\x08\x66\xef\x8d\xf8\xeb\x1a\x9d\x46\x0d\x9f\xb7\xfc\x68\xa8\x14\xf3\x58\xd6\xf7\xe9\xa7\x74\xb6\x2d\x24\xb3\x8f\x16\x19\xa9\x88\xe1\x80\xa9\x0a\xaa\x1c\x04\x97\xd4\xc3\xa9\x3a\x85\xc7\x62\x61\x3d\x5b\x72\x1b\xb4\xd5\xc6\xdb\x06\xe2\x6e\x83\xbf\xe6\x18\xfc\x95\xe3\x09\xe6\x12\x78\x90\x72\x15\x70\xe3\x4b\x8e\x5b\x62\xd3\xd2\x52\x28\x8b\xd8\x72\x04\x02\x25\x16\xa8\x50\xf0\xc1\xc1\x2e\x42\xc0\xc1\x46\x10\xc0\x39\x02\x29\x78\x36\x49\x92\x26\x92\xf6\xda\xb0\xc4\x29\x2a\xbd\x8c\x1c\x4a\x58\x91\x1b\x75\x94\x18\x68\x43\x72\x73\x20\xcf\x26\x1b\x48\xf7\x56\xa0\x02\x5e\x61\x97\xf0\x89\xf5\x82\x47\x89\x26\x54\xf9\xa1\x2f\x70\x62\x9c\x6f\xb4\x94\x67\xc6\x62\xa3\x04\x8e\xb5\x75\xf1\x5b\x9e\x61\x1b\xb4\xc4\x8d\xb3\xe0\x49\xc9\x70\x35\xbc\x63\xde\x53\x4c\x64\xb1\x05\xbb\x1e\x1d\x0b\x27\x46\x5d\x9e\xb4\xb4\x4c\x7c\xb0\x51\x84\xe9\x78\xe4\xa6\x3b\x09\x61\xdc\x8b\x83\xde\x41\x6f\x3f\xf9\xdd\x06\x70\x06\x48\xcc\xb3\x37\x95\x49\x7c\x94\x97\x7d\x8c\xb0\x7b\x00\x35\x1e\x95\xf3\xab\x05\xf1\x24\xfb\xbb\x7b\xfb\x3b\xf0\x3f\xf7\xba\xc9\xbf\x03\xcc\x3d\x4a\x67\xc3\x45\x3e\x3e\xcb\x5c\x37\x6f\xf3\x65\x6f\x96\x2f\x77\x50\xa1\x52\x54\x59\xaf\x5c\x9c\xe1\x6d\x3a\xf4\x19\x3b\x06\xd1\xef\x38\x9f\x3c\xe5\x65\x64\xb4\x74\xaa\x5e\x28\x29\xae\x2c\x3e\x29\x24\x29\xda\x05\x03\x64\x17\xe5\xaa\x12\xf8\xa5\x18\xc1\xa8\xae\x4a\x5e\x9f\x4b\xf4\x60\x0e\x20\xed\x7a\xe2\x30\xe6\x70\x61\x8a\x6c\x84\xa6\x4a\x70\x9d\x39\x1b\x01\x67\x8a\xc4\xa0\xf5\xe2\x3f\x78\xba\x80\x4b\x8f\x51\xcb\x44\x63\xfd\x94\xfa\x76\xf6\x09\xdc\x23\x81\xd1\xb6\x99\xdf\x36\x45\x8d\xa0\x0f\xbd\x74\x36\x36\x21\x1b\x1e\xa2\x5d\x35\x31\xbe\xe8\xf8\x8f\xc1\x9d\x88\xad\x86\x3b\x8b\x8f\x21\xab\xbc\x3a\x17\xfe\x5a\xd2\x16\xce\x17\x18\xeb\x3a\xbf\x20\x64\xc9\xa9\x6e\xe8\xf3\x6b\x6a\x6e\x02\xf2\xb8\x51\xc5\x29\x85\x4b\xb9\xaa\x94\x6d\x25\x2e\x29\x9e\xde\x58\x01\x87\x53\xc3\xd7\xab\x7d\x7d\x54\xce\x66\x65\x01\x6c\x79\x8e\x96\x54\x33\x63\x99\x6b\xa7\x32\x59\x64\xd9\x63\x0b\xe1\x6a\x62\xc7\xe6\x09\x96\x3f\x9e\x90\xe1\xde\x3b\x9b\xbd\xed\x8e\x41\xe1\x05\x60\xdd\xd7\xc6\xb0\x8f\xcb\xcc\x14\x7f\x94\x34\xf7\xa7\x0c\x99\xb1\xe9\x61\x2a\x3f\x44\x0b\xa3\xe9\x8a\x22\x6a\x48\xe2\x96\x7c\x72\x95\x5c\xe4\x29\x77\x73\x0a\xac\x18\x10\xeb\x1d\x86\x8a\x1d\x49\xe0\x79\x0a\x72\xca\xb3\x74\x71\x79\x9e\x4e\x59\x60\x79\x09\xed\x4b\x7c\x80\xc2\x21\x4d\x72\x07\x11\x8d\xba\xdc\x13\x56\xa3\x09\x31\x55\xb4\x13\x02\x2c\x2b\xf1\xbb\x00\xd8\x5e\x02\x2b\x5d\xda\xa5\xa6\x6e\xf6\xe6\x80\x04\x71\x03\x7f\x98\x51\x6e\x6d\xb6\xb4\x29\xcb\x65\x7c\x03\x79\x2c\xda\x3f\x21\xc6\x80\x39\x88\xc0\x1b\x36\x06\x8e\xe0\x2f\x86\x76\xea\xf3\x60\x4e\x34\xec\x8f\xb7\x81\xfa\x93\x7b\x82\xc7\x21\xc8\x4a\x9f\x86\xd4\x37\x64\xf9\xc8\x02\x93\xe3\xc5\xad\xa3\x88\x9a\x03\x06\x0d\x77\x3f\x8f\x0d\xb5\x60\x14\xab\xea\x21\xfe\x53\xd5\x78\x6d\x37\x56\x43\xb6\xa5\x56\xc9\x32\x58\xb2\x8b\xee\x8b\xe5\x9a\x60\xc7\x5f\x90\x54\x33\x50\x41\xa5\x2b\x46\x73\x07\xe2\x45\xa0\xc2\x21\xcb\xb9\x9b\x13\xee\x8a\x00\x2c\xb5\x04\xae\xd8\xa0\x00\x60\x4d\xfc\xd8\xe8\x19\xc5\x9d\xb3\x4b\xe8\x27\x0e\x46\xe3\xda\x4d\xeb\x69\x11\x6a\xb1\x2a\x9e\x14\x8f\x78\xe0\xb6\x01\x3c\x03\x48\x56\xb1\xce\xe5\x64\x9e\x6c\xfe\x3e\xa2\x75\x1f\x6f\x33\xd1\xd8\x3e\x69\x9b\x47\x12\x03\x84\x58\xd9\x91\xa1\x48\xe5\x2d\x61\xd6\x9f\xa5\x88\x67\x74\x5a\xd9\x04\x36\x2a\xad\x18\xf5\x30\xa4\xb2\x15\x74\x72\x64\xa6\x72\xbc\xcd\x25\xdb\x14\x15\x91\x3b\x37\x25\x5d\xcb\xdf\xda\x17\x3e\xdb\x8a\x4b\x74\x2b\x53\xe2\x5a\xf1\x24\x75\x2b\x33\x6d\xd7\xca\x94\xb8\x56\xdf\x71\xf2\x58\xdb\x06\x7f\xeb\x16\xfc\x5b\xcd\xed\x0a\xb0\xda\xbb\xc7\x92\x57\xd0\x4d\xd0\x15\x7b\xb3\xd4\xc5\xae\x13\x97\x0f\x4a\x75\x61\x0b\x75\x07\xaa\xd0\x35\xff\x21\xa5\x97\x38\xdb\x12\x7f\xeb\x46\xfc\xdb\xd5\x2f\xe8\xa4\x08\x7c\x55\x2b\xfc\xad\x5b\xf1\x6f\x77\xbe\xdf\x65\xd3\xec\x0c\x77\x47\x20\x93\x7b\x69\x84\xe4\x08\xce\xf7\x5e\xad\xf5\x24\x7c\xf4\xe0\xbe\x38\xd9\xc7\x60\x7c\x3b\x18\xbe\xb1\xd9\x7a\xae\xf8\x30\xa8\x4f\x93\xf1\xeb\x52\x91\x27\x33\xc3\xe2\xe0\xea\xc0\xdd\xcd\x33\xb4\x94\xae\x41\x2d\xcf\xed\x05\xf2\x53\x91\x97\x0b\xb7\xaf\x67\xd9\xf2\xd1\x34\xad\x1c\x31\xa3\x26\x96\xfd\x72\x15\xf3\xca\x08\x81\xdd\x44\xde\xc3\xba\xec\x31\xee\xb6\xfb\x35\x7a\xda\x12\xc1\x40\x90\xfb\x57\xe8\xfb\xc7\xd7\x8f\x3e\x3b\x15\xeb\x02\x71\x5d\xa4\x0c\x0d\x14\xed\x10\xe8\xd9\xff\xfa\xcf\x74\x32\xa1\x0c\x2c\x89\xe1\x34\xfe\xff\xd4\xbd\xe9\x76\x1b\x47\xb2\x30\xf8\x5b\x7c\x8a\x12\xba\xdd\x00\x44\x00\x04\xc0\x45\x14\x69\x5a\x96\x64\xe9\xb6\xdc\xde\xae\x64\xdd\x9e\x6e\x90\x6d\x80\x44\x91\x2c\x0b\x0b\x8d\x02\x44\xd1\x12\xcf\x99\xd7\x98\xd7\x9b\x27\x99\x58\x73\xab\x2c\x00\x94\x97\x3b\x1f\x8e\x2d\x02\x55\x59\x51\x99\x91\x91\x91\x11\x91\xb1\x3c\x7f\x3f\x47\x6d\x49\x4f\x24\x11\x52\xad\xb9\xbd\xdb\x7e\xb4\xdf\x7d\xb8\xbd\xbd\xb3\xfb\x70\xbb\xfb\xa8\x2b\x0b\xde\x3d\x63\xc5\xf7\xd3\xe6\x49\x6f\x7d\x01\x8a\xf5\xbf\xd2\xc1\xac\xdf\xc0\x82\xd6\x93\xf9\x65\x5f\xcc\x74\x08\xcf\xf4\xc8\xd4\x0c\x80\xd9\x06\xd1\x0c\x93\xbb\x59\x68\xe2\x16\xc2\x12\x12\x0c\x1c\x8b\x42\x0c\xa9\x8a\x13\x7c\xf9\x1e\x50\x31\x48\xbe\x38\x4a\x3a\xed\xd6\xee\x76\x4b\x35\x78\xb7\xf7\xf6\x47\xcb\xef\x53\x8d\x64\xd9\x66\xa7\xfd\xa8\xbb\xdb\xe5\x20\xc3\xa0\x25\xf5\x98\x9a\x81\x48\x1f\x6d\x41\x68\xe1\x06\x1d\x55\xb1\xa4\xdf\x72\x10\xfc\x79\xd2\x6d\xb5\x41\x9a\xcd\x81\xab\x49\x8d\x3a\xad\x3e\x92\x8c\x41\x31\xca\xa4\x58\x1b\x65\x60\x7f\x37\x18\x2d\x52\x27\xfd\xa4\x0b\x0f\xeb\xd6\x9d\x8d\xb2\x2b\x86\x41\x2d\x15\x71\x2c\x94\x90\x00\x81\xab\x4c\xb1\x2a\xab\x6d\x86\xb9\x13\x40\xf0\x73\x81\x61\xcd\x14\x78\x6a\xbb\xdb\x74\xbd\xcc\x93\x5a\xaf\xd9\x4d\x1e\x3c\x48\xb6\x3b\x78\x88\x4f\x5f\x40\x7d\xed\x9c\xd4\x5b\x0e\x01\x06\x28\xf8\xfb\x74\x81\x75\x66\x11\x97\x9d\x38\x92\xbe\xcd\x26\x0b\x98\x2f\x6e\xb3\xfd\x30\xda\xe6\x35\x61\x41\xda\xec\x95\x80\x31\xd8\x92\x76\x0f\xdb\xfb\xb2\x1a\x8d\x8e\xfa\xfe\x2c\x25\x6f\x1c\x58\xff\x76\x89\xbe\x14\x84\x1f\x90\xf8\x89\xa5\xfc\x00\x75\xb6\x22\x91\x65\x48\x3e\x47\xf0\xb8\x92\xc2\x0a\x98\x13\xdb\x3a\x61\xa7\xa5\x3a\xef\xb0\xfc\x27\xf3\xc8\xfa\xfa\x07\x6c\xee\xaf\x27\x37\x43\x2a\xd7\x9e\x38\x9b\xef\xe5\x20\xaf\x71\x01\x26\xf7\xac\x03\xae\xf6\xf0\xea\x09\x59\x46\x68\x75\x07\xce\x06\xaf\xd4\x4f\x83\xac\xe3\x62\x2c\x48\x30\x67\xa8\xac\x17\x3b\x61\xb2\xb6\x0c\xcc\xd0\x07\x4d\x5c\x61\xd4\x5c\xeb\xba\x33\x4a\x71\xa4\xa4\x72\xba\xb8\x68\x32\x5a\x9a\xe8\x41\xd8\x24\xe5\xb7\x12\xf4\x09\x34\xfe\xcf\x61\x4e\x8c\xeb\x83\x1a\x06\x06\x67\xa8\xe4\xe0\x36\xcc\x20\xb0\xb2\xe2\x6c\x70\x36\x47\x82\x63\x09\x28\xff\x65\x41\x21\x7a\x0e\xb1\xcf\x38\x52\x66\x32\x65\x3c\xb7\x10\xfa\x3e\x1b\x9d\x4d\x35\x66\x3a\x50\x38\xa7\xc4\x96\xae\xaa\xa2\x74\x6a\x86\x04\x4c\xa0\x32\xa8\xa0\x6b\xcf\x7d\xfa\x16\x78\x28\x7b\x23\x45\xc5\xb2\x30\xb0\xc9\x90\x2a\x8c\x59\x9a\x39\x9d\xa2\x6e\x16\xa5\x16\xbb\x51\xf4\x93\x60\x50\xd6\x24\x5e\xd2\x4b\xa4\x06\xea\x41\xd3\x40\xad\x90\x75\xcf\xde\x20\xc8\x95\x7a\xe8\x64\x6d\x00\x92\x6b\x29\xf2\x06\x0c\xa3\x9d\xb1\xbc\x89\xa0\xab\x1f\x60\xe0\x07\xbd\x4e\x83\x94\x34\x32\xac\x34\xc8\xd9\xa5\x72\x7c\xbc\x68\xc3\xe7\xf8\xf8\xf4\xf8\x78\x72\x7c\x7c\x7e\x7c\x3c\x3b\x3e\x06\xc1\xe6\xd6\x71\x32\xd1\x4d\x25\x1c\x72\xcb\xb3\x5a\x7a\x48\xf4\x86\xe0\x39\xa5\x62\xea\x64\x67\x2f\x2e\xec\xcf\x0d\x7b\xdb\x45\x8e\xda\x15\xed\xa3\xa1\xce\x6b\x39\xc6\x61\x60\x8b\x2e\x02\x0c\x6d\xd1\xa4\x20\xd3\xfa\xb1\xd5\x21\x9c\xec\x8d\x83\xe4\x6c\x01\x1c\x7c\x9c\xf4\xd9\xac\xab\x5b\x57\xcb\x03\x52\x63\xfe\xed\x3a\xe3\x95\xda\xbc\x3b\x87\xde\xf5\xdb\xba\xda\x9b\x8f\x78\xfe\xfc\xdb\x61\xbd\x50\xfc\xc4\xb0\x14\x34\xa1\x71\xbd\xc8\xb0\x78\xd4\xfb\x64\xbb\xd5\x39\xed\x10\x91\x9e\x76\x2d\x71\x08\x98\x86\xb8\x99\xf1\xf6\x6c\xd2\x03\x17\xa1\xd9\xb5\x86\x4a\xab\xe0\x68\x94\xc1\x6a\x06\x9a\x6a\x15\x9e\x30\x9d\xe4\xac\x35\x30\x65\xed\x8a\xbb\x51\xba\xfd\x7c\xc1\x5d\x6c\x40\xff\xb8\x1b\x84\x0f\xb7\xaf\xd7\x33\x2c\x2e\x38\x8c\x76\x22\x06\x72\x9d\x7e\xa1\x74\x23\x21\x96\xf5\xa5\x5d\xf4\x1f\x51\x3f\x63\x36\x88\x55\x2a\xd5\x95\xa3\xea\x26\x7e\x31\x58\x0d\x06\x63\xa2\x01\x56\xd6\xc7\x05\x89\x92\x92\x31\x85\xc3\x0f\xa7\x68\xac\x03\xd5\xe4\xab\x16\x03\xd0\x00\xeb\x6f\x4d\x27\x94\x16\x97\xb0\xe6\x47\x34\x73\xe9\x19\x72\x42\x43\xa7\xd6\xf9\x34\x06\x53\xad\x3f\x92\x28\x45\xe8\xdc\x56\x21\x42\x54\x5f\xa7\xe8\x1f\xf7\x60\x31\x19\x01\x4b\x7f\xc0\xb9\x32\x70\x07\x9c\x50\x0e\xa6\x18\x54\x84\xc6\x89\x7b\xf5\xf4\x76\xc6\xde\x6f\xf5\x65\x93\xa2\xf2\x70\xdd\x66\x44\x2a\xc1\x2f\xed\x0b\x86\x42\x72\x17\x79\xd8\xe1\xbe\x73\xae\xd0\x6f\x19\xa1\xec\x28\xd9\x6d\x75\x5a\x0f\x91\xca\x96\x4c\xda\x36\x55\xd5\x95\x9a\x85\x30\xc2\x65\x3d\x96\x5d\x7a\x55\x77\x23\x1d\xb0\x6f\x63\xfa\xe8\x93\x96\xd6\xcf\x79\x3f\x31\x6a\x5b\x3f\x6f\xc4\x00\xc2\x2c\xa3\xdb\x33\xac\x05\x4c\x57\x1e\x92\xd4\x94\xb2\xf5\x0f\xd1\x9d\x19\xb8\xc0\xe8\x66\xd9\x08\x56\x77\x7e\x35\x2d\xb3\x1d\xc3\xbc\x1e\x29\x74\xa0\x9c\x25\x06\x51\x99\x0f\x51\x44\xc3\x98\x3d\xa4\x02\x01\x52\xbf\xac\x0a\x5d\xca\x68\x55\xbd\x1b\x25\xc7\x19\xb7\x43\xcd\x4c\xcc\xeb\xd0\x72\x36\x41\x4f\x83\x90\x90\x2d\x97\x49\xfe\xf5\xe6\x25\x60\xa8\xdd\x6a\x03\xa3\xa5\xb0\x56\xe8\x62\xf0\xfe\x18\x5c\xed\xd2\x3a\xb3\x44\xb8\x15\x3e\xd5\x59\xc1\xa7\x7a\xd4\xf8\x84\x58\x54\xa5\xd7\x39\x29\xe3\xbc\x3f\xa8\x42\x8a\x74\xd9\x69\xed\xb5\x3a\xde\x8a\xea\x99\x25\x74\x22\x6b\xaa\x77\x52\xe9\xab\x29\xd1\xd5\x2c\x1c\x98\xd0\x08\x27\x0e\x1a\x2e\x1b\x0d\x83\xd6\x1e\xf2\x03\x25\x9d\x74\x71\x7b\x3e\xc8\x46\xa4\xdf\xd8\xad\xc1\x27\x93\xe5\x1c\x1f\x5a\xf2\x1b\xf1\xdb\xea\xed\xa8\x0b\xf2\x17\x6a\xa0\xfa\x32\x66\xa9\x94\x37\x4a\x28\x00\x2d\x21\xa0\x97\x52\x1d\x47\xd9\xfa\x0f\xa2\x48\x01\x01\x4c\xe2\x92\x94\xc3\x35\x40\xbd\xea\xbb\xe8\x06\x04\x57\x54\x4e\x3b\x69\x54\x5a\x86\x3d\xc4\x00\xa6\xa3\x6c\x48\x3b\xc1\xa4\xc9\x47\x27\xac\x16\x92\x01\x5f\x57\xc1\x60\xa2\xfe\xc6\x1e\xad\x47\xb7\x15\xde\x4d\x4a\x96\xcc\xea\x89\x74\x87\x45\x93\xe9\x4c\x6c\xc3\xfc\x53\x3a\xc5\xaf\x49\xb9\x0a\xf0\x4c\x8c\xd7\xcc\x06\x9e\x5b\xe4\xc9\x1b\xd8\xe9\xd0\x04\x9f\xe6\x67\x83\x2b\x7c\xe0\x97\x05\xda\x5f\xf2\xe8\x06\x84\x65\x1b\xac\xce\xa1\xcf\x48\xe6\xb1\x99\x8d\x1b\x01\xed\xb1\x75\xd1\x82\xed\xf7\xf8\xb4\x9f\x1c\x7d\x01\x7f\x51\x30\xde\xef\x2f\xdd\xa8\x3e\xa0\x42\x71\x90\xf4\x44\xe6\x96\x98\x33\x12\xaf\x13\x76\x26\xaf\x1c\xbf\x07\xe9\xfa\x14\x64\xeb\x73\x90\xac\xd1\x86\x78\x4b\x58\x71\xc4\xf3\xe5\x04\xa8\x22\x1b\x33\x14\x36\xec\x9c\x67\x23\x2c\x47\xc8\x5b\xc4\x75\x36\x9c\x5f\xf6\x9d\x1a\x50\x2b\x68\xbf\x91\xdc\x89\x89\xe0\x0a\x38\xd1\xd1\x74\x64\x46\x8f\x41\x82\x6d\xc0\x3f\xdd\xe3\x49\xe9\x74\xb2\xf8\xd6\x08\xd9\xcb\x43\x16\xee\xa6\x54\x9f\xe0\x9f\xe9\x29\x1e\xd7\x51\xb9\x02\xb4\xe8\x18\xdb\x47\x74\xb7\x30\xab\x3d\x55\xfb\xce\x4d\x3a\x98\xad\x14\xef\xd8\x78\xb5\xdf\xda\xdb\x49\x3b\xbb\x2a\xb1\x35\xbb\x0f\x3b\xfb\xdd\x4e\xb3\xbd\xd3\xec\xb6\x7f\x6c\xb7\x0f\xe8\xbf\x16\x4c\xf9\xbf\x4b\x85\x39\xb4\x6c\x39\x46\x1b\xa6\x1f\x4d\x7d\x4e\xc5\x13\x5f\x27\xbb\x0d\x32\xd5\x88\xf7\x16\x9d\x85\xe3\x56\xbf\x4e\x17\x83\x1e\x6e\x76\x1f\xee\x3e\xdc\x6b\x37\xdb\x8f\x9a\x9d\xed\x35\x7b\xa8\xc2\x3e\x62\xba\xd3\x6a\xbb\x18\x75\x99\x0c\xa1\x0d\xc5\xe8\x29\xd5\xb2\x6f\x23\xd7\x99\xa0\x8d\x16\xf6\xef\x18\xd8\xf3\xe9\x62\xd6\x1c\x66\x17\x30\x55\xfc\xa8\x65\xfe\x49\x9e\xbd\x77\x6f\xb5\xb0\x36\xc5\x30\x9b\xe7\x07\xbe\x59\x71\xd5\xf4\xec\x75\x3b\x8f\xf6\x1f\xee\xee\x76\x53\x3b\x45\xa8\x98\xb6\x61\x8a\xf0\xbf\x35\x11\xe0\x0b\x58\xbb\x44\x6a\xbe\x95\x30\x8e\x13\x77\x5e\x63\x70\x85\xb3\x0a\xfb\x04\xce\xdf\x81\x6e\x7c\xea\x58\x3b\x3a\xc2\xce\xa3\x3d\x98\xdc\x6e\x73\xbb\xf3\x63\x77\xfb\x60\xf7\x11\xfc\xd7\x7a\xf4\xe8\x11\x0c\x2f\x50\x0f\x63\x06\xae\x35\xf4\x41\xeb\xc4\xe3\xc0\xda\x88\x7f\xf7\x6d\x11\x45\x68\xb1\x70\x51\xdf\x30\xc0\x66\x8f\x65\x46\x01\x31\x5f\x14\x0c\x02\x6a\x6c\xf7\x8c\xef\xa1\x16\xaf\x31\xf9\xdc\xd6\xd5\xfe\x43\x64\xc4\xd4\xe5\x40\xc3\x74\xbc\x52\x48\x8a\x55\xbc\xd2\xbe\x8e\xf5\x7d\x53\x95\x25\x50\x90\x05\x2d\xe8\x5d\x36\x4c\x87\xe1\xf4\xb2\xfd\x1f\xd3\xd2\x52\xd9\xa1\xc0\x36\x28\xa5\x9a\x61\x0a\xa6\xb0\xdf\xa4\xb3\xb3\x54\xec\xbf\x74\x12\x68\x18\x76\x51\x8a\xc5\x43\x5f\xb5\x96\x99\x45\x8a\xe3\x46\x57\x8c\xa0\x2d\x62\x86\x50\x52\x03\xbd\xd5\xb1\x55\xdf\xe7\x8b\x44\x00\x11\xd7\x3b\x77\xc3\x15\xc8\x25\x3a\x8e\x1a\x35\x18\x9e\xdd\xb6\xea\x87\x91\xa6\x32\x95\x2e\x25\xd1\xf3\x3d\xd8\x26\x4f\x34\xc4\x0d\xba\xb8\x8b\x5d\xb4\x77\x34\xee\xae\x53\x84\x69\xc6\x57\x6a\xbb\x29\x9f\x73\x3b\x50\x8f\x2b\x74\x5d\xb5\xab\x83\x45\x15\x81\x08\x16\x13\x96\x0c\x86\xc9\x7c\x70\x4a\x87\x0b\x9a\xea\x31\x0a\xb4\x30\x4c\xc1\x77\xb5\x02\x7b\x7c\x35\x82\x9b\x52\x2b\x75\xb1\xe1\xba\x43\x5e\x36\x68\x25\xf8\x1d\xd8\x04\x70\xb4\xf0\xb7\xa5\x43\x05\xdd\x8a\xdc\x16\xfa\x9b\x7d\x3a\x09\x60\x19\x51\xae\x96\x43\x1b\xa6\x67\xd9\x18\xb3\x18\x91\x73\x75\x4b\xa0\x37\x18\x34\x6f\xea\xa0\x8d\x03\x3f\x6b\x33\xc9\xd3\xcb\xca\xc1\xe9\x61\xce\xf4\x0c\x03\xbf\xca\x05\x77\xfe\x14\xf0\xad\x34\xdf\xa9\xd4\xc9\x4c\x1e\x21\x1d\xfc\xac\x8d\xf4\x3f\x61\x22\x3c\x54\xb1\xc3\x06\x88\x43\xaf\xb6\x9b\xaf\x76\x64\x66\xe6\x33\xd0\x6c\x28\x67\x34\xe3\xba\x1c\xa2\x4e\x02\x88\x24\x39\xe6\x29\x7d\x97\xcd\xa6\x13\x29\xfb\x38\x18\x61\xa4\x28\x69\xbf\x9e\x10\xd9\x2d\xea\xe0\x06\x9e\x9d\x31\xdb\x89\xb3\xe9\x78\x3c\xa0\xa5\x40\xa2\x5c\x51\xa1\xb8\xeb\x64\x75\x5a\x7f\xd8\x64\x85\x57\x6e\xef\xbc\x7f\x16\x3a\xfd\xc9\x7b\xa7\x0f\xa9\xcc\xdb\xb6\x78\x34\x83\x5c\xe4\x7e\xe1\x2c\xc6\x71\xcf\xbe\x6f\x0e\x02\x2a\x75\xcf\xdd\x99\xfd\xa5\x40\xbf\xec\x91\xf6\x75\x02\x2a\x25\x6d\xbc\xde\x81\xb4\xb8\x4e\xc9\xa6\xa9\xe7\xcd\x15\x75\xe6\xd3\xf2\xc0\x27\x15\x97\x4c\xf0\x44\xb1\xd0\x14\xa5\x18\xbf\x19\xdb\x78\x0a\x0d\xd9\xb0\xea\x37\x65\xb6\x5a\x68\xca\x06\x55\xbf\x29\x51\x59\xa1\x25\x7b\x1d\x7a\x0d\xc5\x60\x5d\x68\x2a\x86\xa4\x93\xca\xa1\x93\xd7\x4c\x7c\xd0\x50\x0c\xc4\xed\x6f\x6e\x82\x15\x38\xd4\x71\xc9\x71\xd5\xe9\x0d\x7b\x93\xba\xf8\xc4\xdb\x94\x6d\xe5\xe9\xe2\xe2\xe2\x46\x4f\x71\x4a\x4e\xcc\xfc\x6e\xb0\xe9\x76\x08\x02\x24\x2b\x10\x8b\x39\xbb\xfe\xa9\x3d\x48\x8c\x6a\xc1\x61\x39\x25\x2b\xc6\x77\x99\xe3\x6e\xa4\x0c\x7b\xf8\x11\x66\x89\x38\x1f\x4d\xc9\x3d\x04\x7d\x39\x5a\xf4\xc3\x3b\xd8\x79\x82\x69\x1c\xb0\x3a\x5e\x72\x9a\xce\xaf\xd3\x94\xeb\xb3\x8f\xf1\xe8\x3b\xd7\x38\x19\x14\xec\x8d\x1b\x9a\xe4\x43\xa3\xd4\x94\x37\xb9\x3e\xe5\x82\xfc\x7a\x30\x59\xa0\x53\x63\x07\x24\x43\x7d\xea\x3c\x9b\xe5\x26\x74\xc7\x1a\x2d\xf9\x45\x2d\xaf\xc3\xdf\xf2\xbb\x8f\x92\x1e\x70\x4c\x3c\x8a\xde\x7d\xd4\x48\x1e\x61\x14\x7a\x17\xff\xd9\x85\x2b\x9d\x7d\xd4\x4a\x3b\xa0\x5c\x76\x77\xb6\xe1\x9f\x87\xf0\xcf\x76\x7b\x07\xfe\xd9\xde\x39\xf1\x86\x67\xcf\x7e\x9f\x0d\x46\x67\x8b\x11\x9d\xe3\x95\x0f\x83\x6e\xbd\x99\x64\xef\x93\xf4\x6a\x0a\x0c\x43\xba\xef\x42\xe4\x91\x0c\xb9\xca\xac\x35\x7a\x46\x06\x72\x91\xce\xbf\x1a\xf8\xc9\x19\x10\x93\x0d\x6e\x1b\x75\xcf\xe7\xb1\xf7\xa8\x01\x96\x7f\xda\xde\xdb\x4d\x1e\xf0\x63\x78\x12\xff\xe8\x61\xbb\x0e\x57\x69\x16\x6b\xf6\xea\xde\x23\xb8\x58\xa3\x87\xe0\x6d\x9b\xf2\x0d\x33\xda\x03\x9b\xd8\x4a\x76\xea\xd0\x2a\x7c\xa6\x8d\x65\x8f\xa4\x23\x5b\xa8\xcd\x44\x00\xef\xf9\x8d\x76\xda\x6d\x37\x30\xbc\x10\xd9\x50\x76\xd4\x4e\x22\xb5\x1c\x24\x50\x45\xbf\x41\x32\xcc\x50\x01\xb3\x17\x5d\x54\x5a\x68\xe2\xae\x66\x1c\x88\xf2\xd0\x83\x88\x3d\x6a\xfe\xe2\x87\x47\x84\x87\x73\xb4\x3e\x6a\xd6\x73\x26\x70\xb2\xf1\x1f\xf6\x44\x65\xef\x19\x27\xb9\xb6\xb6\x2d\xe8\x31\xe3\x14\x89\x8a\xab\x85\x37\x5c\x87\xb6\x50\x97\xa9\x49\xcb\xd6\x4f\x3f\x91\x3b\xd0\x4f\x3f\x49\x16\x8d\x46\x12\xbb\x53\x38\xac\x44\x4b\xc4\x03\xba\xff\xc0\x22\xf1\x6c\x30\x41\x8b\xfb\x69\x4a\xae\xbe\x26\x1d\x22\xba\x96\xd0\x2e\x0e\x28\xe7\xd2\xe4\x1e\x28\x29\xdc\x49\x8b\x5d\xcd\x07\x48\xf6\xaf\xd3\x01\x50\xe3\xdb\x34\x30\x47\x57\xd4\x29\xa9\x72\x90\x74\xdc\xed\xd0\xf4\xbc\x6e\xfc\x96\xf0\xc0\xdd\x1e\xe5\x14\x06\x61\xa5\x72\xf4\x91\xd9\x36\x9e\x03\x46\x8f\x2a\x9b\x60\x32\xb1\x84\xd0\x1c\xbf\x00\x60\x2b\x8b\x39\x86\x22\x14\x70\xe4\x8f\xe5\x4e\xf3\x2b\xaf\x79\x36\xb8\x22\x67\x0b\xb2\xca\x61\xf2\x0d\x7a\x9f\x44\x24\xe5\x89\x71\xee\xc2\x8d\x01\x70\x0e\x0a\x13\x4e\x07\x43\xde\x6f\xed\xb5\xba\x45\x90\x42\xfc\x68\x3c\x42\xd3\x3b\xb0\xc6\x3a\x09\x76\x28\x48\x00\x16\x40\xc2\x23\x33\x21\x28\xc7\x33\xdc\x9a\x00\x10\x7c\x79\xc7\x99\x23\xc3\x43\x5a\x00\xb7\x98\xe4\x83\xf3\x94\xcb\xf3\x72\xc5\x14\x7c\x44\x3c\x84\x9e\x8d\xa6\x39\x76\x1f\x24\x86\xab\x6c\xa4\x0e\x29\x3e\x15\x4f\x67\xd9\x45\x36\x21\xc7\x5e\x2e\x44\xad\x94\xd8\xb0\x19\xac\xed\x72\x96\xd3\xc5\x08\x25\xe3\xe5\x82\x26\x44\xde\x2b\xe4\x0d\xc5\x88\xd3\x77\x05\x88\x0b\xfb\x55\x78\x85\x3e\x18\xc2\x17\x46\xea\xd6\x07\x33\x24\xea\x05\x99\x85\xae\x13\xe1\xfc\x02\x88\xf3\x74\x46\x7e\x7d\xc2\x75\xe6\xd3\xab\xe6\x08\x10\x3f\x52\xba\xec\xbb\x4b\xdc\xef\xb1\xeb\xcc\x7a\x64\xd6\x74\x09\x47\xf0\xfd\xce\x9d\x46\x7d\x8b\x67\x3c\xed\xc8\xc6\xb4\x81\x95\xf2\xbd\x6c\x12\x02\x9d\x92\xbf\x8a\xab\x1e\xfc\xc6\x15\x20\x2a\x3e\x2e\xce\x23\x99\x78\x77\xa8\x58\xbc\xdf\xfe\xac\x5b\x5f\xc7\x92\x69\x72\xc9\x88\xce\x59\xd1\x72\x51\x73\xaf\xca\xcb\xd0\x33\x1c\xee\xf7\xf4\x16\xdb\x0b\xf8\xa6\xbd\x58\x5f\x36\xe1\xce\x77\xcb\xa7\x35\x73\x51\xd0\x2f\x8b\x17\x27\xb4\xcd\xf4\x76\xfd\x5d\xf0\x3b\x5c\x7f\x6c\x73\x65\xc3\x3d\xd0\x49\xab\x95\x4d\x60\xae\x50\xdf\x25\x6c\x0f\x46\x17\x40\xcc\xf3\xcb\x31\xc8\x9e\xb3\x69\x9e\x5b\x38\xde\xbc\x25\xe8\xec\x09\x97\x16\x63\x7c\x10\xf8\x01\xc5\x0f\xe6\xc9\x4d\x96\x8e\x86\x12\x23\x0d\xc4\x23\x29\x50\xac\x43\xb8\x4e\xb8\xb8\x8b\x7a\xf3\xac\x07\xae\x67\x41\x7a\x3d\x9d\x69\x64\x3c\x09\x65\xc9\xfe\xc1\xf8\x01\x18\x3e\x6f\xf1\xe1\x24\x51\x16\x8b\xa0\x44\x10\x2f\x2e\x72\x9e\x59\x1b\x6b\xed\x8c\x09\xd8\xa5\x83\x10\x83\x06\x8d\x9c\x31\x00\xfb\x64\x28\xfa\xfe\xbc\xef\x92\x0b\xd0\x75\x26\xcc\x1e\x8f\xbf\x04\x2f\xc8\xf3\xcf\x47\x83\x0b\x3a\x02\xf3\x60\x84\xce\xb7\x7d\x8a\xbd\xa4\x43\x08\x77\x07\x7c\xf9\xbc\x91\x7c\x97\xce\xc9\x14\xc4\x8a\xfa\xb7\xd3\x5f\xb3\xd1\x68\x60\xd7\x4d\xcd\xe2\x62\x89\xaf\x0f\x2d\x0d\xe9\xb8\x9b\x23\x8f\x7c\x7d\x6c\x84\x95\xd7\xc2\x13\x5c\x89\x3e\x80\x41\xbe\xc3\x88\x6a\x72\xc2\xd5\xe0\x5e\xdd\x30\xfa\xb6\x23\xc0\x89\x70\x93\xb5\x9d\x74\x28\x1c\x9e\xb4\x0d\x6b\x61\x52\x41\x77\xad\xe9\x06\x1e\xa6\xb4\x7e\xc9\x47\x4f\x40\x24\xae\x3f\x88\xcc\x81\x86\x3e\x16\x31\xdc\x0a\x84\x9e\x70\x51\x15\xe8\xa8\x60\xa7\x44\xfa\xdb\xdc\x8c\xaf\x62\xfb\xcd\x9b\x8f\x70\x69\xbb\x38\x35\xab\x91\xed\xb0\xc5\x15\xe8\xdb\xae\xef\xe3\xeb\x0b\xc8\x78\x92\x50\xc1\x6f\x74\x44\xf7\xe9\xee\x53\x51\x63\x7b\xdc\xab\x08\x39\x54\x1a\x8e\x9c\x45\xdf\xbf\x99\x02\xca\x52\x7b\x45\x51\xf6\x32\x7f\x6e\x7a\x80\xd7\x09\xc7\xfc\x12\x06\xe3\xef\x11\x78\xc5\x61\xd0\x95\x93\xc3\x60\xa6\xc9\x89\x73\xbf\xa1\x54\x9f\x74\xd0\x6c\x85\xcb\x40\x17\x45\x02\x22\x8c\x9e\x45\xe6\x97\x83\x21\xc5\xbe\xfa\x98\xf0\x41\x5a\xb4\xb8\x83\xbe\x2b\x37\xc2\x0f\xbb\xaa\xaa\x9d\x22\xb1\xb2\xa5\x09\x88\x86\xc7\xe9\x64\xc5\x33\x72\x58\xfa\xd2\x44\x88\x87\x05\xb0\x80\x25\x67\x23\xbc\xef\xbc\xc5\x86\x24\x89\x36\xe2\x6e\x77\xf7\x43\x1f\xc4\x48\xe4\x93\x3c\xe6\xcf\xc3\x89\x6d\x1c\xdc\x91\x8a\xfb\x86\xb3\xba\x3d\x2d\x2c\x58\x1d\x72\x44\x4e\xfd\xaf\xf4\xec\xed\x94\x4f\x5c\xdb\x76\xd7\x90\x6d\xc8\xe1\x82\xae\x0a\x66\x63\x88\xf0\x38\x3f\xf4\x3c\x73\x6c\xb6\x78\x4a\x46\x56\x8b\xfc\x10\x49\x46\xdd\xd1\x62\x67\x13\xa8\x79\xb9\xc8\x34\xef\xc3\x13\x1c\xd3\x0f\xe3\xe7\x5a\x88\x71\x27\x8a\x28\x65\x10\xf8\xb1\x89\xef\x8b\xdb\x33\x7f\x6e\x4b\x8d\x78\x34\xaa\x6f\xd1\x5e\x31\x1a\x21\x46\xdf\x4d\xdf\x32\x73\x30\x99\x0f\x29\x1b\x24\x52\x6a\x7c\xb5\x07\x1a\x05\xcd\x90\xc9\x8a\xaf\x62\x9f\x06\x01\xdb\xb1\xeb\xad\x5e\xb3\x29\x39\x3f\x0f\xd7\x18\x3d\xe2\xa8\x38\x5a\x6f\xb8\x8e\xc8\xe3\xf8\x37\xf3\x3e\x0e\x7a\x56\x81\x9b\xf9\x3a\xd8\x8e\x4b\x29\x66\x75\x3b\x8c\x6d\x7e\x9d\x9d\xa5\xbf\x75\x1d\xa3\x94\x4d\x41\xdf\x78\xca\xc5\x41\xa9\xcc\x8b\xbd\x77\xb5\x0a\x8b\xd4\xd7\xae\x7f\x13\x27\xf8\xf4\x75\xf5\x9a\x54\x17\xa2\x08\xf3\x04\xd9\x5a\xf1\x88\x8e\xd5\x32\x58\x0f\x0b\x24\x11\xc5\x25\x39\xb0\xbb\x32\x8d\x01\xb6\x7a\x21\x8a\x17\x9d\x23\xf6\x0d\x17\x29\x87\xcd\x83\xa8\xd8\x2c\x82\x74\xe4\x2b\x32\x71\x4e\x72\xd8\xad\x4c\xd6\x03\xef\x73\xd7\xe5\x79\x7f\xf5\x06\x4e\x71\x98\x4a\xdb\x8e\xac\x8e\x8e\x23\xe4\xa2\xfd\x27\xaf\xef\xe2\x72\x08\xe8\xff\xbb\x29\x4b\xa9\x9c\x68\x21\x1d\x1e\xa2\x87\x11\xc7\x4f\x82\xac\x35\x1c\xcc\x86\x71\x19\xf5\x7f\x7f\x2b\xcb\xf2\x67\x65\xda\xe4\xda\xf4\x7c\x57\x0a\x58\x39\x7f\xac\xbf\x79\x5d\x73\x8d\x05\xe4\x71\xe4\xca\x1f\xff\x4b\x0c\x7d\x89\x9e\xcd\xcb\x2b\x84\xc8\xab\x6d\xed\xb5\xc5\xd2\xee\x33\x5f\x31\x2e\x43\x5e\xcd\xd9\x16\x02\xe4\x14\xb1\xb3\x0a\x37\x65\xc4\x6f\xbe\x69\x76\x17\x49\xa6\x59\x20\x54\xa3\xcf\xba\x67\x15\x1a\xc4\xfc\xda\xf1\x53\x4c\xbe\x1e\xbc\x1b\xbc\xa6\xf4\xc7\xa2\xa1\xf5\x39\x91\x32\x1d\x16\xf2\xe1\x07\x9b\xb1\xd4\x43\xca\xc2\xb3\x0e\x6c\xea\x03\x31\x1e\xdc\x48\xc4\xf2\x4d\x92\x66\x64\xb5\xb0\xce\x94\xe8\x71\x33\x87\xc5\x47\x87\x30\x97\x98\x7d\x8a\x8f\x77\xac\xfb\x36\x9e\x60\x72\x75\x36\xd9\x23\x28\x2e\xcb\xf8\x2a\x90\x27\xb1\x71\xd7\x34\x61\x24\x7c\x96\xc9\x27\x01\xe4\xd6\x33\xb7\xe0\x32\x27\xea\x27\xb3\xcc\x3e\x4b\x8d\x5f\xc7\xa9\xfb\x06\x7f\xa4\xea\x94\xe7\xf6\xce\x19\x28\x66\xab\xd6\x31\xca\x29\xd3\x54\xb3\x20\xf3\x58\x35\x78\x5b\x23\x06\x87\xb6\x38\x99\x42\x64\x4b\x94\xa8\x82\xd3\xc5\xfc\x6a\x31\xf7\x2c\xde\xd1\x68\xa2\x42\x68\x93\x1a\x2a\xe8\x18\x08\xa1\xa1\x2f\xeb\x6c\x3a\x72\x8f\xbd\xe4\x10\x24\x53\xe7\xc9\x61\x82\xce\x6d\x30\xe5\xbe\x3d\x09\x79\xda\x73\x6a\x90\x07\x26\xeb\x47\xdd\x83\xa4\x72\x0c\x1f\xef\xd0\x6e\x7b\xe7\x20\xa9\xc2\xb5\xaa\x7b\x71\x9f\x5a\x9e\x7a\x0d\x3b\xfc\xf8\xb9\x7f\xb1\x4d\x17\x27\xfe\xc5\x6d\xba\x38\xf3\x2e\x3e\xa2\x6b\xf3\x8a\x6b\xb3\x29\x39\x22\xc2\x58\x5e\x34\x21\x2b\x3d\x67\x13\xb2\xaa\xfc\x9a\xce\xa6\xcd\xab\xc1\xd0\x56\xf9\x4c\xf2\x05\xd0\x04\x4d\x55\x36\xcf\x5d\x68\x22\xfc\xe1\x29\x07\xa6\xff\x1d\x80\xaa\x08\xd8\x02\x92\x00\x48\x42\x15\x4c\x2b\xea\xb7\x39\x5e\xe4\x64\xb3\x07\x11\x6c\xcf\x47\xa6\x78\x64\xfc\x1b\xde\x4e\x28\xad\x90\x3f\x5c\xbb\x72\xe8\xb5\x9a\x4f\x7f\xa0\x9e\x99\x58\x77\xbb\x0b\xd1\x1b\x8c\xbb\x67\xb0\xf3\x51\x1f\x80\x2d\xb5\xfb\xae\x65\xd9\xcb\x4a\x32\x9f\x72\x08\xe3\x60\x36\x5d\xe0\xa1\x3f\x6e\x95\xbe\x91\x11\xe0\xb0\x77\x1d\x86\xfe\xb5\x76\x77\x16\x5d\x71\xb8\xed\xb7\x29\xba\xb6\xcd\xb6\xfa\xa4\x2f\xf1\x32\xcd\x36\x3b\x00\x54\xda\xbe\x63\xb8\x70\xa5\x9a\x3f\xe4\x4d\x0d\xa9\xc2\x6e\xd6\xeb\x9c\x0c\xb7\xd6\xa4\x61\xf9\x36\xb8\xf8\x7c\x7e\x45\x72\x58\xf3\x97\xc5\x74\x4e\x1c\x4b\xe6\x4e\x66\x17\xad\xd9\x57\xa3\xc1\x19\x95\x72\x1c\x8d\x92\x27\xaf\x9f\xbd\x7c\xa9\xf4\xef\x02\x74\x96\x42\xcd\xf9\xce\xe1\x05\xe8\x87\xbc\x98\x64\x73\xf5\x10\xd4\x83\x44\x76\xbb\xd9\x06\xb9\x07\xdb\xb9\xe0\xca\x97\x12\x07\x37\x20\xe9\x4c\x02\x67\x32\x59\xe7\x9e\x45\xeb\xbf\x71\x58\x12\x10\xd0\x4f\x90\x3b\x71\x53\x71\xd6\x57\x7f\x54\xf2\xe6\x67\x82\xe8\xc0\x8f\x6e\x6b\xdb\xa7\xb2\x05\x3b\x53\xff\x30\x83\xc7\xb0\x76\x0e\x47\x04\x06\x44\x46\x28\xf4\x68\x2b\x42\x54\x5e\x89\xcb\x2a\xac\x6b\x3e\x2d\x67\x03\xa2\x51\x8a\xe8\x41\x53\xd3\x12\xa4\xad\x67\x7a\x82\x8e\x9a\x77\x70\x9c\x0e\x13\x6f\xeb\x73\xb7\x0f\x83\x97\xe5\x37\xe3\xd3\xe9\x08\x97\x86\x07\x06\x65\xd0\x00\xce\x63\x79\x6d\x7e\x35\xca\xe6\xb5\x0a\x48\x33\x07\xb2\x2c\x0e\x7d\x49\x2e\xa9\x1d\x4a\xaf\x3f\x4f\x4c\x7e\x3b\x2e\xa6\x12\x93\xe1\xb4\xa0\x86\x19\x97\x5b\x61\x03\x1f\xab\x17\xec\xfc\x2f\x25\xf7\xa4\xf1\x48\xa7\x03\xd1\x02\xdb\x6d\x60\x90\x4b\x0a\x24\x84\x56\x4e\x75\x78\x0f\xa2\xc1\xf0\xd4\xeb\x72\x3a\x9b\x53\x16\xcc\xc0\x19\xfe\x90\x6d\xff\xd7\x19\xba\xa2\x0b\x28\xff\xbd\x83\xbc\x99\x05\x72\x4b\x0e\xb4\x8a\x6e\x32\x3a\x8a\x98\xfc\x01\xe2\x31\x30\x69\xfa\xfb\x48\xfe\x22\x2f\xe6\x2f\x5d\xfd\xb2\x2d\x5f\x90\xc9\x73\xdb\x6e\x31\x24\x42\x88\x65\xf3\x48\xf7\x8d\x9e\xbe\xf8\xa4\xe8\x20\xe4\x65\xba\xd7\x8f\x64\xcc\x29\x82\xc6\x2d\xd0\x4c\xce\xe7\xc9\x76\x37\xee\xb9\x65\x7b\xe0\x2f\x83\xcd\x80\xad\xd6\xba\x0d\x33\xd7\xb6\xca\x48\x67\xaf\x1e\xf5\xf4\x8b\x76\x35\xe6\xb5\xe4\xbc\xde\x25\xe0\xc7\x4a\xd9\x3d\xa2\xa1\x13\x25\x56\x53\x79\x32\x42\x59\x65\xae\x49\xde\x79\x18\x96\x05\x76\x7d\x8b\x4b\x39\xe7\xab\x14\xab\xfe\x51\x54\x99\x17\x9c\x62\xf2\x80\x27\x2f\x95\x3f\xe5\x05\xc6\x04\xd8\xa9\xbd\x4d\x41\x45\xb9\x24\xfb\x7a\x1d\x63\x1a\xbf\xfe\x5e\x39\x95\x64\x80\xf8\xfa\x49\x91\x75\x05\xc2\x84\x75\xce\x8e\x9d\x4d\xd9\x70\x31\x95\x5d\x1b\x8e\x90\xd6\x40\xb1\x0d\xb8\xfe\xd5\xe0\x2c\x6d\xb8\x02\x14\x86\x17\x17\x14\x32\x27\x6c\x9a\xec\xe8\xdf\x81\x42\xdf\x48\x1c\x67\x0d\xaa\x08\x87\x01\x1e\x19\xde\xb8\xc4\x9c\x07\x70\x87\x13\x1b\x60\xa8\x35\x85\x03\x34\xbc\xe0\x00\x53\xf9\x04\xcb\xf1\x12\xa6\x84\x1f\x2a\x2f\xc4\xee\x22\xb1\x35\x22\x87\x95\x45\x7f\x42\xd4\x55\xbd\x74\x61\x97\x53\xb4\x42\xb3\x20\x2c\x67\xdf\xa1\xc9\x84\x1d\x77\xb9\x8d\xd5\xc6\xfd\x53\xd0\x15\x1e\x77\x8e\xe3\xb5\xc0\xf3\x53\xae\x44\xb6\x81\xc4\xe2\xb0\xa0\xd8\x16\x79\xae\x2c\x55\xfb\xc4\x91\xe3\x73\x16\x33\x3a\xc8\x3c\x55\x38\x3a\x29\xa6\x41\x22\x40\xee\xec\x17\x49\xb3\x93\x6c\xb1\x43\x34\x5f\xf9\x3c\xa1\x0b\x25\x0e\xd1\x5f\x91\xc0\xef\xeb\x0e\xe8\x11\x36\x9d\x0d\x25\x5b\xa1\xcd\xab\xe2\x47\x47\xc5\xa0\xd9\x0c\x4c\xd1\xad\xf8\x51\x6b\xb7\xb5\xb3\x43\xb5\x64\xfc\xcb\x9d\x56\x67\x37\x06\x4f\x35\xd7\x97\xaf\xbf\x4f\xf6\xd1\x37\x87\xd2\x7d\x50\xe6\x10\x91\x6c\xf8\xb8\xbf\xe8\x96\x89\x18\x61\x6f\xa4\x38\x1b\x74\x75\x66\xf4\x8a\xe3\x7c\xcd\x69\x6c\x05\x04\xb4\x1f\x07\x66\x96\x00\x2e\x75\x2f\x62\x46\x7d\xda\xc2\xac\x34\x5e\xb2\x04\x0f\x16\xfb\xba\x25\x4f\x86\x83\x2b\x73\xa0\x22\xd1\x16\x78\x80\x88\xbd\x6a\xe6\x97\xd9\x98\x74\x78\x4d\x6f\x15\x7e\x86\x9c\x9c\x89\xfd\x9b\x98\x12\xb6\x00\x87\x3b\xe9\x6e\x94\x81\x93\x20\x40\x5e\x50\xfa\x0c\x01\xd8\x42\x7f\xac\x56\x77\xa7\xbb\x8b\xce\x52\xe8\x8d\x85\x5e\x52\x87\xe2\xe8\xc5\x0f\x50\xa1\x5c\xa0\xaf\xcf\x99\x8e\x0f\x09\x87\x20\x3c\x94\xbe\x46\xdd\xb6\xc4\xf7\x8a\x5e\xd4\x74\x41\x22\x38\x74\xbf\xda\x6e\xb7\x76\xba\xf5\x43\xff\x16\x3f\x8d\x85\xab\xec\x1b\xe9\x5a\xc9\x2b\x05\x11\xe8\xd7\x15\x7b\x13\xfb\x7a\xc5\x1e\x54\x8d\x01\xc9\xad\x2f\x8b\xc9\xd7\x52\x89\x10\x25\xde\x9b\x93\xd1\xdc\xb0\xfb\xcb\xf3\xd7\x71\x78\x85\xf5\xd0\x69\x75\xc5\xf3\x05\x09\x79\x31\x1a\x24\xfd\xda\x93\xe4\xb3\xe4\x29\xf4\xf6\x69\x1d\xbf\xf4\x51\x5a\xc2\xdc\x85\x71\x88\x68\x17\x15\xf2\xed\x3f\xe1\x44\x73\x53\x78\xa8\xa1\x09\xf6\xfa\x9f\xe9\x6e\x03\x98\xd7\x53\x8b\x38\x28\x8a\x11\xca\xaf\x28\x37\x8f\x2c\x7b\x86\xe7\x8a\xda\x38\x81\x1a\x37\xa5\x76\x84\x18\xf9\x11\x6a\x8e\x94\x2b\x7d\xc6\x94\x07\x83\x62\x0a\xd4\x0b\x4b\xd0\x5e\xba\xe3\x14\x16\x18\x85\xa4\x9d\xe2\x29\x8d\x54\xbd\x8a\x81\xc4\xba\x28\xe3\xab\xa9\xc9\x3f\x17\x99\xba\x38\x5f\x6a\xc7\x46\x47\x9d\x33\x14\x4c\xb0\x70\xa5\xf0\xc8\xba\x3b\xb1\x61\xc9\x40\xc2\x87\xf6\xd2\x1d\x7c\x66\xaf\x1d\x7b\x46\x47\x18\x3c\xd3\x49\xb7\xcb\x9f\xf1\x50\x73\xc4\xe3\xfc\x0c\x1f\x89\x48\x67\x31\x87\x20\xfe\x08\x27\x60\x19\x2c\xcc\x22\x15\x7d\xad\xac\x69\xf7\x09\xc9\x26\xb5\x64\x51\xba\xad\x39\xb3\x54\xac\xb1\x62\xdb\x6d\x2d\x49\x98\x96\x63\xda\xeb\x8c\xe6\x64\x5a\x8e\x68\xf7\x11\x93\xa2\x69\x0d\x3c\xfb\xaf\x72\xf3\x36\xad\x23\x15\xe3\x29\x4b\x49\xa8\xa7\x4d\x8e\x55\x1e\xa8\xc4\x7c\xf8\x73\x8c\x83\x02\xf5\x91\x7e\x60\xec\x5f\xba\x03\x72\xb5\xdc\x83\x5b\x8f\x93\x4a\xb3\x02\x82\x75\x65\xb3\x52\x2f\x8a\xfb\x7b\x2c\xfd\x49\xcb\x26\x7d\x3f\xa0\x4b\xa8\x39\x06\x8d\x77\xb8\x31\x30\xe9\xcd\x08\x6a\xf0\x35\x31\x75\xc2\xe1\xdc\x9b\xa5\x8d\x90\x32\xe2\x60\x71\xcb\x26\x67\x61\x6e\x94\x17\xa5\x52\x2a\x8d\x20\x53\x22\x26\xcb\xcb\x01\xf0\xa9\xf9\x75\x31\x6b\x02\x73\x05\x8c\xe2\xcc\x0f\xfd\xc9\xf4\x9e\xbc\x9c\xa5\x91\x10\x47\x18\xe3\x8f\xf1\xee\x53\x97\x68\x7c\x07\x25\x48\xe0\xce\x2e\x6b\x22\x1d\x29\xc7\xc2\xaa\x80\x5c\xf4\x60\x58\x2b\x24\x17\xc6\xd1\x8a\xf4\x61\xdb\x97\xeb\xa9\xaf\xff\xae\x14\x8e\x24\xca\xd8\x87\x92\x65\xe8\x69\x46\x0f\x6d\x44\x40\x84\x22\xb7\xc9\x0c\x14\x3a\x1b\xd4\x1c\xb1\xf9\xfe\x91\x17\x83\x81\x07\xc5\xee\x3d\x37\xe8\x22\xbc\x67\xa3\x2c\xea\xb1\x63\x8a\x82\xbc\x1d\x3d\x16\x8d\xe4\x90\x00\x1c\x72\x6a\x02\x7b\x92\x16\x26\xe1\xd0\x02\x1d\x21\xb4\x3e\x07\x8e\xa0\xe2\xc8\x93\x80\xdf\x28\x0c\x42\xb4\x47\x8a\x01\xe9\x5b\xa7\xd1\xbc\x25\x49\x55\x8b\xb0\x34\x11\x07\x9a\xf8\x0a\x1d\xa0\xb3\x05\x8c\xa0\xd2\xe0\xa6\x20\x1b\x48\x11\x9c\x5a\xd7\xd8\x83\x1d\xe4\xe5\x29\x65\xb7\x51\xdf\xac\xa2\x3f\x2d\xcf\xbe\x3b\x93\x6b\x9d\xdd\x04\x3a\xd8\x92\xb3\xf4\x97\xe7\xe4\xac\x8a\xa6\x4c\xf6\x9a\x36\xba\xf2\xf5\xc0\x86\xae\xb2\x9a\x8c\xf9\xd8\x01\xe9\x2c\x20\xd8\x5c\x31\x21\x48\x94\x6b\xbc\x34\x0c\x71\xcd\x52\x3b\x15\x3f\x0c\x6c\x44\x2c\x6c\xe1\xb0\x54\xa7\xe4\xe5\x11\x0e\x4e\x6c\x17\x9c\xa7\xa3\x0c\xcc\x5d\x94\xcd\x82\xaa\xe9\x06\x0e\x45\x50\x2b\xf1\x43\xcc\x57\x4c\x4e\x25\x98\x7d\x09\x57\x0c\xb7\x21\xed\x30\x72\x91\x42\x1a\x2f\x67\x79\x7b\x7d\x70\xd6\x6d\xa4\x0b\x44\xd6\x7a\x44\xa5\x67\x05\xe7\x18\x43\x9c\xb6\x92\xfe\xcb\x09\x7d\xd5\xec\x73\xdf\x0d\xbe\xeb\x17\xd4\xd7\x3c\x04\xd9\x67\x84\xf6\xa3\x7d\x5f\xa1\x38\xe3\xbe\x69\x46\x87\xdb\x67\x71\x6e\x4a\x86\xe9\xb0\xa0\x58\x2c\x80\x5b\xb3\xd5\x31\xdb\x0f\x13\x6b\xdb\x1c\x46\x3b\x4c\xcd\x6a\xb6\x53\xa5\xf4\x46\x9e\xe7\x11\xb3\xd6\x8a\xc0\xc6\x65\x16\x90\x98\x67\x0b\x25\x77\xa7\x6c\xa5\x37\x67\xa3\xec\x2c\xe1\xe3\xdc\xc5\x2c\x75\xed\xfb\x40\x40\x93\x94\x4c\x5c\x83\xd9\x19\x7a\x06\xa5\x33\xd2\xdd\x81\x83\x84\x00\xf1\x09\x3c\x96\xca\xb1\xd3\xb8\xb6\xa6\x33\xd9\xdf\x34\x18\xc6\x44\x32\x2d\x26\xd9\x2f\x0b\xcd\x60\xa4\xc3\x5a\xe6\xa0\x44\xa6\x30\xe3\x9e\xc4\x7f\x9b\xcd\xc3\xb8\x49\x85\x1a\xf7\x4c\x89\xe2\xa3\xa3\xb8\xf1\x47\xf1\x10\x8e\xde\x0b\x4f\x31\xd4\x79\x7a\xb3\x24\xab\xa0\x7e\x38\x4c\xdf\xa4\xc2\x2a\x4a\x91\x2b\xfc\x01\x9e\x0c\x87\x4e\x94\x86\x49\x90\x8d\xe3\xa1\x83\x95\xd9\x80\xf0\x5b\x82\x32\x46\x12\xd5\x05\x8c\x99\xaf\x34\x41\xad\x56\x2a\xf4\xde\xfc\x9a\xc5\x26\xeb\xfe\xec\x58\x22\xe5\x04\x17\xa9\x8e\xaf\x26\x53\x3f\x1e\x90\xee\xfb\x7d\xb9\xd2\x53\x1a\x07\x4e\x60\x4d\x73\x5e\xb0\x79\xe4\x58\x41\x57\x18\xdd\x5c\x29\x20\xb2\xbf\xc7\x57\x0e\x9f\xa7\x8b\x79\xb3\xa0\xf9\x12\xad\xad\x3a\x02\x5a\xfb\xb8\x05\x3f\xf2\xa6\xc4\x49\x9f\x53\x13\x9b\xaa\x9a\x6f\x3f\xc5\x16\x5c\x54\x4a\x64\x52\x79\xd6\xcd\x5b\x4d\x7e\xb4\xc7\x9a\x3b\xea\x40\xbb\xb4\x82\x24\x13\x7b\x30\xa6\xa0\x05\x1b\xa0\x93\xd8\xde\x21\xe0\xde\xf1\x04\x79\x99\x37\x8f\xe6\xa1\x9f\xa7\xd9\xa4\x56\x69\x14\x9a\x90\x50\xca\x57\xaf\xf4\x04\xa3\x72\x82\xfd\xab\x55\x7a\x95\x22\x00\xd2\x79\xa0\x41\x1d\xd5\x19\xcc\xe7\x75\x18\x93\x44\xd7\xa6\x03\x59\x58\xea\xef\x98\x7c\xeb\x79\x61\x8c\x38\xbf\x92\xe7\x92\x6f\x00\x1a\x47\x88\x05\x80\x6b\x5a\x93\xa9\x3a\x59\x7b\x4e\x76\x39\x39\x72\xd8\xa5\x1c\x91\xf6\xe6\x98\xab\x3f\x42\x89\xe4\xed\xe2\x38\x71\x80\xa4\x2b\x24\xb3\x4e\xd8\x0b\x1f\x11\xc4\xc8\x2f\x90\x76\x7e\x37\x0a\xc4\x05\xaa\xef\x8b\xa6\x01\xf6\x86\xfd\xc4\xb5\x51\xc7\x4f\x7d\x61\x9e\x41\x52\xec\x5f\x0c\xae\xfa\xc9\x07\xdb\x9d\x58\x78\x3d\xef\x3a\xc8\xac\x11\xd5\xe9\xf8\x0a\xd0\xaf\xa9\xfa\xb0\xa2\x71\x9f\x27\x1a\xe0\xf0\xe6\x6b\xf1\x46\x6a\x5c\x09\xc8\x53\xe1\x84\xd3\x09\xfa\xd5\x4c\xcc\xb9\xb6\x81\x66\x0a\x5d\x50\xc7\xfa\xf6\xa8\xb2\x55\x29\xb7\x8c\x55\x0a\xad\x2b\x1c\xb9\x65\x82\x45\x35\x8f\x0b\xb5\x2b\x31\xf6\xd9\x53\x57\x1d\xb5\x82\xfd\x40\xde\x06\xb7\xd6\x81\x47\x05\xea\x58\xf2\x41\x16\xaf\x56\xee\x67\x01\x7f\x89\x22\x11\x9d\x1f\x7c\xc6\x90\x90\xb9\x82\x56\x6e\x19\xd3\x89\xe4\x41\x28\xb4\x59\x9b\x11\x7d\xf8\xdd\x18\xd1\x2d\x33\xa2\x0f\xa5\x8c\xe8\x56\x18\xd1\x87\xdb\x90\x11\x85\x1b\xea\xab\x74\x3c\x95\x2d\x55\x98\x0e\x1d\x08\x90\x11\x33\xd8\xc6\x65\xe3\x8e\xed\xe5\xd3\xab\x50\x86\x28\x0d\x1b\x74\x02\x4e\xfc\xc3\x52\xf5\x89\x2b\x4c\x37\x19\x4e\x57\x79\x5e\xc4\xca\x12\x58\x46\x94\x4f\x17\x33\xe4\x14\xec\x26\x07\xdc\x83\x3c\x5e\x0a\x47\x96\x2e\x53\x89\xb3\x1d\xb3\xc5\x87\x5a\x50\x24\x50\x81\x5f\x46\x91\x09\xfc\x35\xe4\x36\x14\xb8\x5c\xae\x6e\xc9\x43\x45\xaf\xd5\x72\x2f\x46\x1c\x34\x3d\x15\xdd\x7e\xee\x2a\xa3\x88\xfb\x16\x11\x83\xbf\x6d\x88\xa0\x22\xee\x5c\xe3\xc1\xdb\x34\xbf\xcc\xce\xe7\xe8\x7d\x1e\xae\xce\x2b\x37\x98\xe8\xc3\x6d\xb8\x7a\x6c\x9d\xaf\x88\x5c\xc3\x63\x31\xbe\x2d\xac\x01\x16\xe4\x1b\x93\x25\x9a\x5a\xf7\x44\xdc\x39\x69\x2c\x45\x2e\x4b\x9e\xf5\x46\x52\xa6\x53\x51\xe8\x65\xa9\x5a\x89\xd6\x22\x3b\x32\x49\x0c\x4a\x6e\xd9\x77\xb0\x41\x44\xa8\x70\x25\x51\xf0\x33\xf5\x15\x7a\x6e\x61\xfa\xd4\x39\x8e\x0b\xbf\x4a\x81\x02\xda\x20\xce\x4c\xe4\x80\xa4\xe7\xe0\xdc\x9b\xc5\xcc\x45\xc8\x89\x05\x8a\xd5\x90\x98\xb9\x59\x27\xae\x98\x4b\x3c\xf7\x39\x69\x1e\xf1\xb2\xc3\xf3\x82\x3a\x28\xc4\xd1\x33\x63\x22\x07\x87\x6d\x82\x6a\x58\x91\xe5\x4a\x1e\x4b\x84\x78\xfe\x89\xe9\xe7\xea\x87\xce\x9a\x55\xc6\xfb\x39\xb7\x77\x6f\xa1\xe4\x0e\xfc\x7e\x95\x9e\x73\x77\x4d\x3b\x49\xbc\xce\xd2\x8b\x4d\x3f\xa8\x82\xc3\x63\xe9\xfd\x81\xdc\x64\x9f\x3b\x4c\xbc\xd1\x5e\x93\x54\x22\x3e\x81\xc3\x0c\x14\xf8\xd9\xd0\xab\x5d\x01\xbd\x9b\x9e\x65\x14\xd2\x40\x9e\x74\xae\x98\x21\xf5\xe4\x5d\x90\xb5\x7e\xa5\xd2\xaf\x73\x09\x00\x3e\x44\xe6\x74\xbd\x54\xc8\xcc\x18\xe3\x0a\xe9\xa6\x59\xb6\x20\x69\x32\x80\x27\xd9\x3e\xef\xa3\xe9\x00\x1e\xf9\x00\x33\x77\x90\x74\x6e\xeb\x7e\xc2\x4f\xd9\x17\xac\xbc\x87\xf3\x6b\x12\xbd\x63\x1c\x8a\x64\x31\xc3\xf2\x50\x89\xf2\x6d\x5e\xad\xeb\xc8\x82\x08\xae\x77\xb2\x2a\xa0\x58\xf7\x9a\x1f\x30\xb3\x90\xf5\xb1\xa6\xb7\xa9\xab\xf5\x86\xa5\xe0\xfb\x85\x82\x01\x85\xa4\x30\xb0\x69\x3e\xb3\xbe\x6b\x52\xe5\xcf\xbd\x5a\xe6\x19\x64\x1c\x85\xd5\x81\x71\xa9\xc3\xb0\xc9\xaa\xe6\x02\x2b\xf5\x1e\x7e\x23\xad\x4b\xfc\x87\x8b\xde\xc3\xbe\xef\xf0\xce\x43\x68\xb6\xe5\xfb\xfe\x92\x3f\x71\xe0\x4e\xdc\xd9\xc3\x8b\xf3\xe0\x22\xf9\x13\x07\xee\xc4\x6d\x7a\x71\xe0\x78\xdc\xd9\xc1\x8b\xb3\x35\xfc\x89\x5f\xdb\xa2\x2f\x34\x0f\x58\xf9\x00\x08\xde\x1f\xf4\x4b\xd6\x5f\x5f\xd3\x64\x96\xfb\x63\xc1\x56\x55\x84\x24\x98\xc6\x2a\x70\x18\xfc\xed\x14\x89\xea\xfb\x2f\x19\x9c\x62\x7e\xa3\xf2\x68\x65\xf5\xbf\xe4\x5e\x44\x4e\x2b\xd8\x04\xe3\xbc\xa0\xb6\x8e\x03\xae\xd6\x02\x27\x33\x15\x16\x0d\x9b\x4f\xdf\xa6\x92\xd7\xbb\xf2\x57\x4c\x22\x7d\xee\x8e\x09\xc8\x16\x16\x1c\x15\x35\x71\xe1\x91\x12\x32\x19\xaa\xaf\xbb\x4f\xf6\x58\xb7\x01\x81\xaa\x63\xfd\xa0\x50\xd1\x80\x53\x43\xbb\x00\x45\x23\xa0\x7e\x88\x89\xd7\x24\x18\xf7\xd0\x36\x22\xa4\x94\x21\x8d\x7c\xd4\x14\x61\xaf\x65\xe9\x5b\xdb\x1a\x5d\xf0\x85\x81\x06\xf4\xf0\x22\x03\x04\xe0\xd9\x3b\xeb\x7f\x59\xfe\x9a\x8a\xf1\x58\xff\x42\x17\xed\xc0\x2a\x46\x69\x52\x7b\xe9\x89\x10\x05\x77\x2b\xbb\x90\xe5\xa5\x8e\x17\xea\xcb\x88\xaf\xe0\x9a\x6e\x9e\x45\xf7\x4e\xe3\xd5\x19\x71\xe6\x44\x6b\xd7\xdb\xec\xca\xdd\x60\x68\x62\x72\x54\x78\xb5\x52\x22\xe6\x56\x44\xb6\x38\x03\x76\x7a\x91\x0a\x77\x85\x2b\x68\x0e\x8d\x41\x3c\x4f\x53\xf5\x72\x58\xb5\x75\x0b\x11\xfb\xe1\xe2\xfc\x89\xfa\x63\x8a\xc3\xea\xb6\x71\x5d\xdd\x55\x4f\xd5\x8e\x7e\xd1\x7b\xbb\xea\xf0\xba\xb3\x13\x1d\x37\xb1\x65\xcc\x71\x84\x84\xb2\x20\xe7\x12\xa6\xc9\x5a\xff\x03\x9e\x5c\xdd\xe2\x3f\x3d\xfc\xe7\x04\xff\x39\xe8\xf3\x0a\x68\xc0\x7e\x36\x88\x16\xae\x70\x2d\x86\x4a\x2a\xe5\x07\xde\x05\x5f\x67\x87\x0a\x0c\x05\xc0\x86\xce\x97\x7b\xf4\x3b\xe2\x60\x5b\x8a\x3e\xf7\x64\x20\x8a\xc5\xed\x38\x5a\xfa\xb0\xc0\x87\xe9\x08\x6b\x75\x04\x71\x41\x87\xc9\x60\xf8\x6e\xe0\xa4\x56\x21\xe6\xe0\xb8\x26\xc7\x93\xf0\xd2\xe2\xb1\xe9\x4a\x2f\x2d\x13\x90\xe0\x07\x26\x38\x92\x0b\x58\xfb\x54\xe1\xa2\x78\xca\x28\x7e\x6a\x93\x39\x50\xde\x28\xe9\x7f\xe9\x18\x10\xc2\xba\xa8\xf0\xf0\x58\x8a\xa2\x9a\x09\xce\xcb\xfa\x08\x8c\xaa\x39\x3d\x97\x98\x1b\xe9\x50\x71\xea\x44\x8d\xe0\xf9\xab\x7c\x09\x42\x80\x62\x3f\xf1\xd7\x7a\xc4\x16\x4f\x68\xbf\xeb\x92\xe7\xcf\x9a\x5e\xd1\x9c\x8f\xc6\x24\x44\xf5\x02\x23\xbc\x68\x88\xf9\xe5\x34\x4f\x4d\x89\x1c\x0d\x85\x28\x83\x68\x93\x27\x73\x7d\x4a\x6f\x3d\xd7\xb9\xf8\xc2\x74\x8e\x67\x21\x5c\xb6\x22\x9e\x5e\x92\xb6\xb2\xb8\x17\x8a\x2b\x10\x1b\x04\x1d\x81\xf8\xb0\x64\x98\x4f\x12\x0c\xda\xc5\xf5\x9b\x4f\x47\xd9\x70\x01\xa3\xea\x1f\xc3\xc2\x1c\x0f\x66\x6f\x79\xe3\x22\xaa\x9b\x50\x90\x16\xe5\xfc\x0f\x25\x9a\x00\x60\x01\x4f\x6e\xa5\x58\x58\x12\x98\x61\x5e\x8f\xb1\xb7\x50\xa2\x9d\xa9\x7b\x7f\x19\xc4\xc0\xb3\x3f\x8e\x96\xa5\x14\xb1\xb9\x59\x4e\x13\xeb\x6c\x07\xe6\x25\xe2\xc9\x1f\xf8\xf6\xa3\xe0\xc5\xb7\x94\x51\x92\x8c\x25\xdf\xcc\xee\xd1\x36\xd1\x01\x9d\x08\xc3\x70\x06\xfc\x2a\x7d\x87\x0e\x75\xe5\x12\x66\x59\xe2\x51\xe5\x89\xa0\x3e\x19\x59\x72\x59\x4c\x81\x7e\x4a\x59\x9f\x7e\x4a\x3c\xfa\x1d\xac\x74\x3a\x0f\x97\x8e\xa9\x7f\xbc\xe8\x97\x12\x55\x59\x45\x83\xf2\x71\xd2\xa9\x96\xc7\x42\x39\x2f\xa1\xc7\x43\x11\x1b\x19\x3b\x09\x47\xf8\x9f\x03\xca\xc9\xef\x4e\xdd\xa0\xec\xb2\xe5\x2f\x67\x3e\x7c\x94\x08\x59\x95\xa3\x8d\x03\x91\x65\x03\x83\x07\x98\xb7\x6d\x26\x3b\x96\xcd\xe9\xdd\x43\x9d\x84\x72\xea\xc3\xcf\x27\x32\x3e\x17\x6d\x8c\x15\x83\x63\xf2\x18\x9d\x65\xa8\x57\x21\x1a\x92\xcb\xf4\x3d\x3b\x42\xa1\xd3\x45\x9e\x86\x21\xf6\x01\xb4\x8c\x4b\x56\xa2\x03\x68\x9d\xe3\x01\xf1\x1c\x17\xa5\x50\x98\x5b\x10\xdd\x00\xda\x40\x13\x27\xf3\xb1\xd7\x12\x78\x1c\x8e\x6d\x86\xf8\xc5\x51\xb2\xb3\x4f\xee\x3a\x86\x65\x1f\x25\xbb\x0f\xc9\xd2\xe3\xb4\x79\xf4\x30\x6c\x03\x2b\x2d\x6c\xb4\xb7\x1b\x36\x7a\xd8\x8e\x06\x5f\x07\xe3\x7b\x39\x61\x6c\xdd\x99\x40\xf1\xb3\x84\x55\xeb\x27\x76\x56\xb0\xea\x8e\xe5\x10\xa4\x19\x28\x97\x30\xa7\x05\xab\x99\x83\xab\xe8\xd6\x2a\xed\xf7\x68\x98\x16\x72\x62\x7b\x87\x88\xe9\x4c\x50\x4b\x06\xb0\x94\x2f\x94\x06\x27\x39\x03\x51\xfc\xae\x8d\xd7\xa5\x38\x8d\xe6\x4a\x2e\xf7\x6b\x4d\x0a\x5b\xe5\xf6\x4e\x39\x4d\xe0\xda\x99\x38\x79\xd2\x5d\x37\x0d\x87\xef\x58\x1e\x67\x75\xb6\x72\x88\xbe\xf1\x22\xfc\x2c\x41\x6f\x9c\x3c\x3e\x99\x3d\x28\x4b\x5b\xc2\xd0\xc8\xae\x35\x07\x69\xf6\xd7\xd4\x84\x62\x9c\x71\xe2\x65\xda\x01\x38\xf0\xd5\x18\x26\xb3\x9c\x19\x4d\x7c\x6c\xa2\xd8\xb9\x4b\x74\xbb\xeb\x2d\xd1\xfb\x28\xb8\x84\x57\x96\xcd\xcf\x6f\x90\x00\xe2\xc8\xc4\x09\xb7\x81\x83\x32\xac\x48\xd4\xa0\x7e\xcc\xf2\x2a\x5f\x4a\x51\xa9\xad\x70\xad\x78\x85\xfc\x4f\x4a\x26\x74\x19\xdd\x16\xb7\xc9\xa2\xa6\xa1\xfa\x0d\x67\x26\x46\xbe\x32\x5c\x42\x96\x4b\x44\x85\x65\x7a\x52\x89\x9f\xf3\x9b\x09\x67\xc9\x25\x33\x68\xd9\x4b\x4b\x96\x7c\x29\x7b\x31\x1a\xa9\xba\x8d\x51\x7a\xff\xd2\x04\xfb\x2b\x48\xdf\x41\xe1\xd5\x40\x2a\x4b\x9b\x98\x07\x2c\x1f\x40\x65\xe7\xd0\x75\x05\x28\xde\x9c\xdf\xc7\x63\x90\x5c\x56\xb3\xb3\x1b\x9f\x32\x35\x88\xa0\xbb\xfe\x2c\x86\xc8\x4f\xa6\xf4\xe8\x0c\x88\xee\x6e\x0f\x19\xa6\x94\x32\x7b\x80\xda\x5f\x93\xe4\xa0\xb2\x7d\xdb\x1b\x50\xc9\x5e\x5d\x4a\x95\xdf\x48\x0d\x86\x5f\x39\xd2\x1d\x75\x1f\xaa\x0b\x0d\x6a\x2b\x39\xbd\xe5\x6b\xd4\x45\x28\x60\x74\x5f\xbc\x82\x57\x32\x41\x72\x3b\xaf\x37\x92\x95\xdd\x5f\xa2\x38\xbd\x1c\x61\x52\xe6\x91\xdf\xcf\xbb\xab\x6c\xcb\x29\x20\x92\x83\xdf\x74\x80\x67\x4e\x2b\x6a\xe3\xd4\x51\x50\xcb\x24\x8d\x8b\xae\x12\xdc\xed\xab\xd7\xeb\x22\x6c\x2d\x64\x59\x11\xb6\xa4\xc7\x2f\x90\xae\x8c\x23\x9c\x9c\x5c\xa1\x33\xa0\x10\x83\x57\x61\xe3\x10\x33\x9d\xa0\x6a\xca\x89\x74\xe3\x10\x69\xe3\x41\x87\xc2\x11\xec\x94\xc3\x1b\x8a\x55\x5c\x90\x87\x2a\xe5\xdf\xbc\x71\xac\xab\x65\x14\xb4\x8c\xad\xee\xec\x95\x11\x80\x23\xd4\x2f\xd5\x02\xbc\x79\xd2\xf1\x2d\x9d\x27\x33\x53\xe6\x15\x77\x98\x2c\x7d\x66\xcd\xf9\xd2\xe6\x25\x53\x26\x15\x40\xcc\x50\x85\x47\x2e\x15\x91\x74\x59\x84\xa5\x3c\xca\x44\x9c\x3b\xcb\x73\xd6\x58\x6f\x54\xa7\x35\xd7\x95\x99\x0b\x74\x3e\x98\x68\xc6\x89\x34\xe9\xa7\x68\xa7\x03\x92\x54\xab\x9a\xde\x4f\x96\x91\x5d\xd3\x51\x7d\x62\x83\xfb\x3d\x4c\x54\x54\x54\xbe\xe3\xe9\x32\x58\x1f\xfe\x51\xd9\x0c\xfc\x06\x11\x48\xcd\xd7\x66\x8f\xc3\xad\x0d\x48\x11\x4b\xa2\x84\x78\x71\x76\xbc\x32\x58\x4b\x36\xc2\xd8\x28\x77\xb6\xc3\x41\x96\x6d\x8f\xf8\x59\x6a\xae\x28\x95\xe5\xec\x3a\xd4\x71\x64\x6b\xae\xc5\x50\x83\xff\x3f\x7d\x6d\xf2\x51\xb3\x62\xe1\xff\x1f\x2b\xf3\x99\x2d\x10\x46\xfc\x7a\x28\xe2\x34\x79\xac\x38\xa9\xb6\x58\xa6\x8b\xfb\x94\x91\xf8\xb9\x79\x17\xe9\x3b\x2a\x12\x3d\xf1\xe5\x3b\x3a\x59\xa3\x73\xf7\x2b\xac\x20\x30\x5c\x12\xe9\xca\x79\xcf\x78\xf7\x8e\xcf\x44\x29\x52\xa3\x3d\xe9\xa3\x04\x88\x16\x53\x92\x03\xd4\x6a\xba\xaa\xd4\xab\xb3\xab\x31\x12\xe4\x88\xd5\x58\x9f\xb8\x88\x25\xc2\x2e\x78\xf0\xf3\x47\x5a\x02\x6d\x2e\x91\xf3\xe3\xd2\xa9\x9b\x75\x73\x49\x1f\x76\xb9\x0f\x34\xae\x55\x9d\x88\x06\x06\x6b\x1e\xb7\xb8\x80\xb4\x66\x2f\x76\x9c\x3a\xb8\xbf\x01\x13\xb1\xd0\xb6\x52\x85\x07\x68\x68\x7a\x31\x21\xe7\x7f\x3a\x1d\x59\x53\xdf\x59\xe2\x6d\xf2\xca\xea\x6f\xf6\x40\xe7\xaf\xee\x81\x4e\xe9\x31\xb3\xda\x29\x7c\x80\xd1\x83\xe6\x8d\xc2\xb0\x2b\x7f\xad\xac\x71\x06\xee\xfb\x6c\x68\x66\xb1\x60\xe8\x52\x2e\x66\xfd\x0c\x4b\x18\xef\x39\xc8\xc5\xcf\x3a\x74\xee\xb3\x71\x2a\x7f\x8d\x85\xa8\xbc\x99\x98\x9a\xb7\x62\xa2\xc9\x26\x4e\xf6\xb8\xd2\x49\x58\x99\x17\x84\x31\x55\x78\x25\xbb\x88\xc5\x13\x32\xc9\x19\x65\xdb\x24\x64\xea\xb5\xa5\x6a\xf0\x97\x11\x8a\xf4\x1d\x40\xe3\xa7\x77\x21\x3d\xb9\x5a\xb9\xac\x82\xce\x12\xda\x72\xb6\x4a\x9b\x65\x30\xac\xf4\x5d\x18\x9e\xc5\x41\x2f\xde\x6d\x9f\x0a\xa4\xde\x39\x77\x8d\xac\x2a\x94\xa6\xdd\x61\xf3\xd4\xa2\x38\x94\xb2\x50\x13\x15\x9a\x0f\x1d\xaa\x40\x89\xa2\xe6\xfc\x64\x7d\x3a\xaa\xd2\xe9\x49\xe4\x28\x7d\x1f\xe3\xcd\xb4\x27\x9c\x8d\x38\x5f\x40\xfe\xcb\x82\x4a\x50\x01\xb6\xdf\x62\x99\x99\x88\xb9\xcf\x47\x57\x9c\x41\x5b\x8c\x9d\x94\xb0\x9e\xb5\xb3\x28\xd9\xa4\x5a\xde\x7b\x6d\x59\x6e\x0d\x50\x69\x78\x07\xeb\xb4\x04\x63\xc0\x6c\x7e\xc7\x01\xd7\xc0\x03\x4a\x03\xd6\x31\x30\xf2\x31\xe6\xf9\xcd\xa6\x0b\x03\xd8\xf8\x20\xc7\xa0\xa1\xc1\x29\x8e\x02\x3b\x37\x25\x96\x10\x0f\x4d\x8d\x12\x34\xad\x9c\xbd\x22\xa8\x32\x8c\x4b\x8f\x1d\xfe\x60\xb4\x98\x7e\x83\x0a\x26\xac\x98\x58\xfe\xfc\xbe\x26\x6a\x22\x3e\x7c\x3d\x05\x3f\xca\x4c\x48\x06\x66\x2f\xfe\xe8\x77\xb0\x3d\x44\x69\xeb\xf9\x28\xe3\xf2\x10\x4e\x95\x4c\xad\x8d\xb8\xc6\x99\xf5\x7a\xb3\x78\x07\xb9\xc8\x8b\x1d\x80\x4d\x43\x7d\x83\x97\x3b\x8b\x06\x2e\xee\x79\xa9\xc7\xb5\xed\xeb\x87\x75\x58\x99\x46\xfd\x2e\xe1\x65\x92\x32\xac\x94\x99\x95\x78\x59\xff\x19\xcc\x0c\x78\x01\xc8\xb5\xc8\xcb\xd2\x38\x27\x93\x3d\x60\x4d\x56\x76\xfb\xfb\xb1\x32\xff\xc5\x96\x97\x99\x9c\xdb\xbf\x8d\x95\x85\xf5\x8a\x74\x2c\xff\x6b\x3c\xa9\x0c\x75\x32\x90\x25\x3c\x69\xd5\x14\xf1\xe7\xcf\x63\x4a\x9e\xe7\xf1\x1f\xc5\x94\xbe\x59\xc1\x87\x34\x3b\x5e\x18\x08\x21\x11\xe4\x31\x90\x7e\xd8\xb5\x64\x48\x66\x95\x6b\x80\x4e\x6b\xb1\xb1\x2a\xf4\xe8\xc6\x47\x15\x48\x27\xc3\x65\xf6\x73\x97\x94\x70\x89\x7b\x22\xe5\x7d\x2b\x52\xd2\xf2\xbf\x93\x08\x79\x9f\x44\x48\x4e\x20\x0a\x24\x48\xbf\x0f\x7e\x37\xe6\xdb\xf3\xc5\xc9\x13\x8e\x7b\xa8\xd1\xab\x7e\x1b\x23\x5e\x22\xac\xb3\x4f\x61\x3a\x61\x13\xef\x2c\xdc\x6c\x56\x48\xec\xf1\xd3\xa9\x52\xb5\xe5\xcd\xd5\x90\x93\xe1\x15\xe3\xaa\x42\xca\xa6\x2c\xb2\x57\x9a\x62\xad\x10\xc4\x64\x23\x24\xe3\x49\x2c\xfc\xc8\xca\xeb\xc1\xe8\xed\xb2\x47\x43\x5d\xa7\x10\x9c\x1b\x4e\xf1\x30\xe5\x1a\xaf\xec\xfc\x58\x92\x05\x31\xb2\xd4\xc3\x07\xa0\x6f\xf2\xae\x38\x86\xd7\xca\xa5\xa9\xb8\x44\xbc\x8a\x99\xc7\xdb\x45\x29\x61\xbd\x88\x99\x2e\xb4\x48\x5d\x2f\x5b\x99\x84\x69\xf1\x6e\xc9\x83\xff\x89\x68\xe6\xfc\x9c\x0d\x5a\xa9\xf5\xbb\xa4\x10\xee\xfa\x93\x8f\x73\xf6\xc9\x53\xaf\x3b\x45\x88\xef\x58\xb1\x9e\x4f\xca\x46\x89\xc3\x95\x00\xe0\x3e\x9e\xbd\x54\x29\x07\x01\xc5\x8d\xe0\x99\xb0\xcc\x88\x4d\x0f\x0f\x83\x36\xf1\x2b\xfb\xad\xdd\x9d\x10\xd8\x69\x7a\x36\xc0\x22\x11\xe8\x22\x54\x5a\x89\xcf\x9f\x00\xf1\x73\x56\x3b\x56\x08\x91\xea\x0e\xcb\xbb\x87\xc0\x51\x72\x1b\x9d\xd2\xc3\x42\xb7\x8d\x64\xfb\x24\x28\x13\x44\xd5\xfe\xfd\x50\x15\x93\xe6\xb1\x10\x36\xb6\x2a\x76\xce\x4f\x0a\xe1\x47\xe7\x2f\x49\x0a\x91\xc8\xaa\xd7\x14\x41\xea\xea\x1e\x5d\xab\xfe\x62\xa1\x5f\xf1\x0d\x56\x63\xb5\xef\x14\x9d\xed\x77\x64\x05\xdb\xa0\x97\xdf\x2d\x7d\xae\x9f\xe9\xa6\x48\xde\x61\x62\x88\xa5\xb1\xa2\xb4\xf0\x97\xc5\x89\x76\x8b\x71\xa2\xf4\x4c\x74\x8d\x95\xaf\x2c\xde\x60\x1a\x45\x87\x04\x35\x53\x7b\x29\xf3\x4c\xe8\x47\xc5\x7a\x43\x1d\x7a\x98\x90\xb8\xe1\xf8\x46\xa7\x89\x88\x1c\x2f\x6f\x47\x68\x35\xb5\x68\x35\x22\x60\x2e\x79\x4d\x42\x0f\x19\x24\x61\xbb\x61\x17\xcd\x57\x2b\x36\x39\x32\x10\x61\x4d\xa1\xf2\x98\x9b\x35\x82\x5d\x82\x49\x47\xce\xe2\x2f\x2b\x8b\xf3\x30\xd6\x15\xe3\xe7\x90\xb5\x96\x86\x88\x79\x93\x52\xe7\x00\x30\x0b\xee\xa0\x10\x81\xec\xc4\x83\xf1\xbf\x1b\x0e\x59\xf4\x2a\xb3\xc5\xe4\xe5\xe4\x19\xe0\x39\x7d\x3f\x67\xf8\xce\x05\x7e\x54\x46\x23\x8f\xe0\x35\x02\x82\x98\x3e\x9f\xa5\xe9\x73\xbe\x2e\xb9\x76\xbf\x99\x0e\x86\x36\xf2\x17\xb5\xdf\xf7\xa6\x34\x3a\x57\x99\xff\xfa\x75\xa4\x9e\xa8\xfb\xd6\xda\x6c\x3a\x85\x01\x3a\xb0\x69\xba\xbc\xe5\xee\x03\xbe\x4e\x4f\x41\x45\x9a\x5e\xe7\xea\xac\xe2\x28\x8f\xc0\x53\xb0\x88\x34\xbf\x06\xa9\x9a\x6b\x3f\x73\x46\xb4\x04\x5f\xd5\xc2\xef\x36\x42\x4b\x8d\x33\x4e\x8b\x5e\x05\x7f\x6c\x57\x4e\x6c\xab\x2c\x97\x2a\xb4\x8e\x97\x81\x79\x05\xb5\x0e\x70\x29\xa3\xaa\x79\xf0\x9c\x38\x35\x67\x95\x0b\xe4\xdc\x2f\x70\xcb\x04\xa1\x85\xae\x47\xd3\x53\x2c\x13\xc2\xd9\xc8\x62\xe5\x4c\x74\xcb\x88\xd4\xa1\xa5\xa7\xb6\xfb\x81\x5e\x5d\x99\x4c\xa1\xab\xe7\xd0\x83\x79\xe5\xa0\x24\x66\x49\x4a\xc5\xeb\xd0\xfd\xc5\xe5\xa1\x24\x3c\xdc\x30\x88\xc6\xe5\x62\x66\x20\x6c\xe1\x22\xc6\x9d\x07\xb7\x9d\x37\x7f\xc1\x64\xf9\x0b\xb1\x50\xb4\x86\x80\x07\xeb\xa1\xae\x45\xf5\xdd\x1e\xea\xb0\x2a\x1c\xfe\x78\xc0\x4f\x32\x13\x55\x1a\xa8\xd8\xb2\x28\x7a\xdf\x5c\xd9\x30\x2b\x8f\x96\x8a\x4f\xad\x83\xfc\x66\x72\x76\x09\xf4\x8f\x16\x40\xca\x09\x9b\x26\x23\x5a\x36\x44\xa5\x7c\x06\xe6\xaf\x23\x96\xa7\x6a\xb1\x49\x29\x0e\x8d\xb7\xa6\xdb\x8d\xdb\xba\xad\x3d\x8b\x83\x74\x7f\x37\x44\x0a\xc2\x64\x27\x5c\x50\x83\x64\x5f\x14\xda\x2a\x18\x00\x84\x97\x0f\x54\x9b\xba\x06\xa9\x62\x7a\x1d\x69\x26\x37\x0e\x80\x49\xd5\x37\x6e\x1b\x1f\x6e\x4f\x1a\xdb\x7b\x07\x3d\xed\x66\xed\x27\x18\x42\xfa\xcb\x4f\x0d\x1e\x64\x43\x38\x48\xfd\xc3\xc6\xd6\x83\x07\x1b\xc9\x83\xe4\xef\xe9\xe8\x8a\x47\xfd\x60\x6b\x63\x83\xc2\xe1\x28\xcc\xb9\x0d\x1b\x0b\x15\x6c\x43\xb1\x0e\xda\xed\xc9\x6f\xaa\x89\xe7\xfc\x46\x42\xbb\x84\xdf\x98\x23\x16\x7f\x63\x12\x84\x21\xfc\xa6\x2c\xcb\xbb\x30\x64\x79\x8f\x98\xe3\x67\x92\xdf\xda\x96\x8a\xa7\xe3\x14\x0c\x75\xa4\x66\xdf\x53\xe2\xc7\xfc\x40\x7e\x26\xcd\xa4\x3f\x9a\x4e\x2e\xfa\x58\xe0\xf5\x14\x03\x55\xf8\x71\x32\xe3\xf6\x68\xcd\x9f\x48\xd3\x2f\x51\xa7\x1d\x27\x1f\x38\x8c\xe8\x23\x67\x1f\xbc\xc5\x25\xeb\xde\x65\x59\xef\x56\x12\x4c\xe6\x74\x4b\xa6\x2f\x78\x92\x6e\x0d\xae\xb2\xe4\x8a\x58\x02\xe3\x87\xb1\xd8\x12\x2c\x3a\x7b\x39\xee\x15\x0d\x85\x5a\x47\xc2\x90\xef\x98\xbc\x5d\xbe\x81\x1e\xcb\x66\x32\x24\xaf\x2a\x13\x6a\x15\x77\x1f\x2b\x0e\xd7\x4d\x51\x65\x44\x17\x02\x25\x42\x92\x8b\x02\xa8\x85\x18\x21\x32\x7b\x9c\xe0\x57\x6a\x46\xbf\x0f\xb8\x96\x84\x3c\x77\x1b\x62\xdf\xc1\x39\xbc\xbd\xef\x3a\x4e\xba\xd9\x31\x5b\x51\x8c\xde\xa2\x44\xe0\xe1\xab\x80\xa8\x59\xf6\x0e\xb6\x69\xc6\x94\x59\x27\x3c\x12\x78\x96\xd7\x0b\x7c\x01\x94\x54\xab\x28\x9f\xcc\x67\x8a\x0d\xf8\xda\x72\x8a\x84\xc0\x47\x31\x81\x2d\x88\x0e\x29\xc7\xfd\x51\xb2\xf5\x9f\x5a\xed\xf1\xc1\xf1\x70\xb3\xfe\xf8\xb8\xf5\x18\xff\x26\x0f\x6a\x6e\xef\x1f\x7f\x1c\xc3\x37\xfa\xf3\xd1\x5c\xe2\x2b\xf9\x47\xc9\x55\xfa\x18\xbf\xe0\xbf\x1f\x29\xbb\xe9\xe3\x8f\x97\xf4\xcf\xc7\xe1\xe0\x06\xfe\x0e\x3f\x52\x9e\xda\xc7\x1f\x6f\xe8\x9f\xfa\xe3\xbf\x6e\x65\x30\xe5\xe9\x19\x8d\x42\xbb\x7c\x9f\x7a\x14\x76\x13\xfd\x2b\x68\xc4\xe4\x27\x56\xa3\x36\xbd\x0e\x07\x87\x53\xa5\x1f\x4c\xaf\x79\x94\xc8\x8d\xee\x09\x12\x45\x75\x9c\x57\xb1\xe0\xfe\x37\xd3\xeb\x74\xf6\x6c\x90\x4b\xd2\x60\x0d\xe9\xc1\x47\x94\xd7\x90\xaf\x58\x95\xba\x57\x3d\x08\xae\xf8\x17\xc2\x06\xc1\xed\xea\x81\xcf\xbb\x26\x30\x89\x52\x51\x91\x5b\x20\x2a\xbc\x47\xe0\x82\xff\x3b\x06\x62\xe8\x82\x20\xdc\x7a\xcf\xe0\x15\xff\x42\xd8\x20\xb8\x1d\x7b\xc7\xa5\xfb\x0e\x99\x50\xef\x29\xbe\x16\x5e\x2a\xb4\xf1\x7f\xc7\xde\x34\x76\xdf\x24\xb4\xe4\x3d\xc5\xd7\xc2\x4b\x85\x36\xfe\xef\xd8\x9b\x72\x7f\x4c\x96\x9a\x83\x4e\x9b\x1b\xfe\xf5\xc2\x4b\xc7\xe1\x5b\xc7\xc5\xd7\xca\x0e\x65\x78\xc4\xeb\x4b\xd9\x1d\xc7\x1c\x01\x93\xf4\xc7\x79\x3f\xe4\x05\xca\x56\xc7\x31\xd6\xb9\x8a\x15\x30\x73\x1a\x8b\xf6\x8a\x8b\x68\x9c\xa3\xf7\xd0\xd0\xb0\xbd\x6f\x07\xf3\xcb\x16\x55\xaa\xc2\x5b\x5b\x78\x67\x13\x49\xed\xd0\x6b\x7f\x59\xda\xfe\x92\xda\x5f\x06\xed\xc7\xa5\xed\xc7\xd4\x7e\x1c\xb4\xcf\x4b\xdb\x53\xe6\x60\x98\x42\x87\x29\x8f\x73\x02\x81\xd7\x2c\x2e\xbf\x99\x9a\x4a\x0e\x7f\x0c\x2a\x89\xef\x2b\x26\x75\xcf\x18\x2d\x66\x83\x11\x5c\x6d\x24\xc3\x06\x2f\x58\xde\x16\x80\xc7\x38\xf7\x40\xbb\xe7\x85\x18\xbb\x39\x6e\x98\xf5\x13\xbb\x0d\xff\x29\xd1\x9b\xdb\x8c\x80\x24\xc0\xc0\x0f\xf4\x90\xa4\x9e\x4d\x2e\x49\xca\x68\x85\x5b\x83\x05\x3c\x11\x0b\x96\x4b\x19\x9f\x27\x13\x97\xbd\xda\xab\x00\xbe\xd3\xda\xf5\x27\x89\xf3\xc9\xd3\x24\x51\x02\xab\x6a\x82\x5b\xcc\x44\xd2\x26\xb9\x2d\xcf\xd2\x6c\x14\x6d\xa8\x53\x0b\x83\x10\x41\xea\xe1\x3a\x82\x94\x23\x12\xb2\x4a\x60\x85\x2b\x12\x65\x69\x3b\x30\x93\x8f\xc5\x14\x9e\x0e\xc8\x12\x3b\x49\x7e\xfe\xef\x45\x3a\xbb\xf9\x0b\xb5\xa0\xb6\xb5\x6f\x5f\xfe\x58\x67\xf5\x09\x7e\x76\xe3\x44\x40\x76\x01\xd2\xba\xd1\x6c\x9e\xd3\xa6\xd8\x3b\x3e\x69\x1c\x7c\xb8\x3d\xce\x4f\x1e\xfc\x75\xeb\xd0\x69\x22\x41\x49\xd0\xe6\xf8\x18\x36\xce\x1e\xd6\xf0\xdb\x3a\x3d\x9f\xcc\xe6\x27\x1f\x17\xbd\x76\xf3\xd1\xa0\x79\xfe\xa4\xf9\xe2\xe4\xc3\xce\x6d\x7d\xeb\xc2\x7d\x52\x02\xb1\xe1\xc9\x4a\xef\x3f\xf8\xd8\xe4\x78\x76\xf2\xa0\xf2\x11\xd5\x8a\x8f\x24\x7a\x7d\x44\x59\xff\x63\x13\x77\x61\xdc\x93\x5b\xc7\xc3\x07\xf5\xc7\xf8\x92\xf4\xf9\x49\x6f\xf3\xb8\x79\x42\xfb\xf3\x63\x1f\x2c\x1d\xd4\x11\x58\x68\xf9\x9f\x8f\x07\x1f\x1b\x75\x7c\x38\x7f\x70\xdc\xab\x6f\x9a\xa6\xb0\x08\xc6\xdf\xa4\xe7\x73\x1a\xdc\x71\xbe\xb9\xe5\x5c\x7f\x95\x5d\x5c\xd2\x0d\xb8\x8e\x83\x2d\x97\xca\x18\xf7\x98\x44\x05\x6b\x72\x0c\x2c\x75\x19\xe9\xeb\xbe\x91\xbe\xb0\x01\x92\xf3\x7d\xdb\xb2\xe0\x1c\x45\x9a\x04\x35\xa4\x3a\x1d\x83\x96\xa4\x6c\xae\x99\xfe\xc2\xfa\x80\xbd\xdc\xbb\x4c\xdd\xa5\xeb\x87\xa2\x88\x3c\x99\xcf\xd1\x7d\x91\xca\x0d\x93\x60\xb6\x30\xc1\xf0\xac\x59\x39\x84\x33\xe3\xa0\x50\xe9\x37\x13\x18\xab\x48\xa0\xec\x5b\x53\x54\xd0\x61\x7b\x83\x07\xee\x59\x0c\x1c\xda\x69\xc1\xde\x39\xaf\xf9\x43\x71\xc8\x06\x7a\xfd\xa5\x2c\xf4\x24\x09\x5a\xa8\x19\xa8\x7a\x52\xd6\x82\x67\x9a\x46\x5e\x0f\xfa\x57\xc3\xe3\x65\xad\x58\x5b\xab\xca\xd5\x2a\x57\x34\x19\xd4\xeb\x35\xd5\x9f\x0e\xff\x24\x95\x69\xff\x0e\x2a\xd3\xb3\xe9\xf8\x2a\x1b\x91\xfd\xff\x17\x5c\xbf\x4c\x4b\x78\x47\x73\xa5\x88\xed\xcc\x64\x9b\x76\x4d\xf8\x26\xed\xe5\x83\x88\x5e\x12\x5f\xf0\x6a\x40\xc4\x63\xa3\xa1\x6f\x41\x04\x60\x8c\x5a\xd2\xdc\x44\xb6\x26\x3a\xb3\x59\xce\xe4\x80\x55\xa7\x40\x52\xc7\x85\xc6\xe8\xcc\x39\x88\xf7\x45\xf2\x3a\x01\xde\x04\xc8\x7f\x33\x75\xc7\xe4\x0a\xf7\xe8\xcd\xab\x97\xcf\xd4\x05\x19\xe0\x20\x1f\x3d\xc2\xb9\x8c\xdc\x85\x17\xf7\x32\xcd\x95\x74\xab\x54\xa9\x19\x9a\x50\x21\x08\xb5\x16\x2a\xfa\x48\xb6\x78\x17\xdb\x92\x07\x6e\x12\xc7\xa6\x6a\x2c\xbf\xe4\xcb\x11\x8a\x35\x54\x3c\x84\xd6\x7e\x61\xe5\x8d\xea\x25\xce\x6e\x8c\x63\x03\xfe\xbe\x1a\x64\xc4\x6c\x7f\xc9\xa5\x04\x21\xa0\x83\x06\xe2\x60\x9a\x73\xc9\x91\x0e\x90\x39\x45\xe3\x33\xf4\xb1\x86\x3f\x36\x32\x5a\x01\x6a\x53\x40\x8a\x42\x3d\xaa\x0a\x7a\xa0\x03\x3d\xee\xa1\x87\x42\x6c\x8f\xc7\xa3\x68\xa0\x29\xbb\x2d\x1a\xc7\xad\xc5\x2d\x00\x63\xdc\x0a\xc1\x3f\xba\x03\xc1\xeb\x3c\x4c\x12\x78\x93\xa2\x7a\xb0\x98\x83\x38\x97\xbc\x9e\x63\xbd\xf4\xe4\x9b\xf4\x5d\x46\x69\x21\x3e\xcf\xe9\xc2\x48\x7e\xb7\xce\xa6\xe3\x2f\x68\x5b\x4b\xf0\x9c\x75\x02\x9c\x6a\xc9\xa6\x96\xb2\x82\xf7\xf8\xa0\xf6\xf8\x7e\xef\x3f\x07\x5f\x9e\x6c\x1e\xe0\x9f\xe3\xad\x93\x07\x5f\xd6\x6b\x97\xf3\xf9\xd5\x47\xfc\x27\xff\x78\x8d\xff\xe5\xf5\x83\xe3\xad\xe3\x2d\xd8\x72\xf0\x89\x1a\x3d\xf0\x00\x37\x93\x03\xfd\x5e\x7f\x5c\x7f\xfc\x25\xdf\xef\xc1\x3e\x07\xbb\xdd\xc9\x87\x76\x63\xe7\xf6\xa0\xfe\xa1\xdb\x78\x78\xeb\x5d\xfb\x08\xcf\x1c\x6f\x3d\xfe\x8b\x82\xc0\xcd\x0c\x9e\xaf\xd5\x6a\xc7\xb8\x53\xf5\xfe\x03\xb7\xa8\x5b\x8f\xff\x82\xfd\x39\x6e\xf1\xb7\xd6\x09\xee\x7d\x3d\xb8\xf9\xf1\xaf\xc0\xe6\x1e\x00\x08\x78\xa1\xb6\xaa\xd3\xde\x86\xbf\xff\x42\xdd\x81\x5f\x7f\xa9\xb5\x08\x30\x6e\x5c\x4c\x05\xbc\x67\xf5\x68\xce\xab\x6c\xb4\xaf\x02\xd7\xa4\xc2\x08\x67\xd3\x11\x7e\x67\x64\x67\xf3\x1b\xfc\x81\x59\x76\x5f\x4e\xce\xa7\xfa\x9d\x1a\x0f\xf2\xfc\x7a\x3a\x1b\x56\x49\xb8\xcb\xe7\x74\x0d\x66\x11\xff\xce\xd2\x11\xed\x2a\xdc\x6e\x7e\x89\x7f\x39\xdb\xda\x74\x46\x00\xcf\x81\x9b\xe1\x5f\x5a\x5f\xf4\xba\xc9\x19\xbc\xae\xba\x71\xb2\x7a\x73\x5d\xcc\x32\xab\xdc\x0b\x1b\x9a\x9d\x51\x5e\xf2\x99\x35\xd5\x9e\xf2\x85\x16\x25\x4a\xfc\xfe\xbc\x56\xed\x55\xeb\xf6\x6e\x1a\xde\x3d\xa9\xaa\x45\x10\x39\xd1\x29\xee\xd2\xcd\x0e\x6e\x78\x29\x7f\x75\x8d\x9e\xcc\xf4\xf0\xf1\x7c\x71\xca\xcc\x01\x53\xdd\x9d\xd6\xd9\xc2\xe0\x5c\x3d\x6d\x24\xa9\xdd\x9b\xb7\x0e\xb6\x2e\x60\xa8\x87\xd5\x62\xc3\xb4\x91\x38\xdc\x4f\x79\x95\x19\xdf\x98\x8e\x00\x8c\x45\x80\x54\x78\x77\x38\x80\x12\x3e\x34\xb0\x36\x5b\x34\xa9\xed\xc8\x90\x24\x6c\x38\x6b\x36\xdd\x61\xc0\x43\x3d\x22\x05\xe0\x04\xb8\xb2\xc7\xf0\x97\x21\x7b\xef\x5f\x8d\x0f\x00\xd4\x32\x19\xad\x60\x2a\x0e\xbd\x3b\x54\x71\xf0\xc8\x7c\x75\x06\xdd\x69\xd8\xab\x62\x8a\x69\x26\x1d\x07\x5f\x87\x84\xaf\x83\x6a\xdd\x87\x68\x48\x53\xc0\x9a\xdf\xe6\x49\x98\x6c\x5f\x2c\x82\xf9\xf5\x2f\x94\xc1\xce\xae\xde\xed\x31\x36\xad\x2d\x5b\x10\x21\x6c\x0d\xee\xba\x6c\x6d\xa7\xfd\xe9\x12\xbb\xd8\xf3\x9f\xc2\x9f\xc6\x0b\x98\x22\xe4\x4a\xc2\x00\xbf\x65\x0b\xb1\x54\x9f\xa1\x33\x13\xcb\xb5\xb2\x9c\x2a\x99\x40\x27\xe5\x85\xb5\x6a\x96\xd3\x51\x2d\x0e\x87\x5b\x3c\x5d\x9c\xbb\xf7\x5b\x5b\x59\xde\x3c\x5d\x9c\x9f\xc3\xe2\xad\xdb\xfd\xee\x15\xa3\x23\x4f\x30\x64\xf0\x26\x79\x4a\x0d\x92\x8f\x09\xc1\x97\x5f\x94\x3c\x89\xbc\x76\x25\x65\x0f\x07\x72\x80\x3e\x41\xcf\xb2\x3b\x00\x6a\x1b\xc9\x93\xc9\x0d\x26\x52\xbc\xe0\x86\xa7\x30\xac\x9c\xec\xaf\x24\xba\x58\xa7\xb2\xf3\x94\xd3\xcf\x2d\x2e\x2e\x61\x80\xe8\x98\xfd\x94\x9a\x9e\xa6\xb0\xaf\x51\x74\xbc\x08\x37\x18\x1a\x1f\xea\xb0\x6a\x4e\x95\x2e\x35\x93\x7c\x8a\x5f\x5a\xd9\x14\xc7\x80\x99\xaf\xe8\x86\xa7\xe0\xea\x33\xd4\x2d\xdc\xc0\xa4\x5a\x3e\x0e\x81\xc1\x70\xac\x33\xe7\x0e\x67\x2c\xe5\x51\x6b\xac\xbb\x8d\x0b\x90\x1f\x18\x82\xb3\xa3\x33\x4c\xb3\xab\x0b\x3c\xe3\x7f\xcd\x2c\x18\x9b\x7c\xc5\x72\x3d\xff\x68\xa1\x1c\xca\x72\x94\xd2\xca\x4f\x85\xd7\xd4\x5c\x55\x81\x6c\x82\x7c\x41\x46\x6a\x40\xe8\x81\x02\x4c\x21\x3f\x62\xd7\x2b\xbd\xde\x4e\x1c\xf2\x8d\xe4\x27\xe7\xc2\x01\x51\x3e\x25\xc2\x3b\xd0\xbe\xeb\xf2\x34\xc7\x8a\x7a\x9d\xbc\x49\x8d\xbc\xef\xac\x12\x07\xa0\x2c\x22\xeb\x2b\x2a\xe4\x1b\xeb\x18\x08\xe9\x82\x14\x14\xd7\x6d\x33\x9f\x33\x86\x02\x10\x8b\x3b\x4e\x3b\x4f\xf0\xc1\x8f\xc0\x45\x0e\x77\x54\x86\x56\x2b\x25\xda\x43\x24\xd5\xc6\xf8\xf1\xc2\x48\xaa\x2c\x0b\xba\x26\x75\xd2\xd5\xf0\x54\x94\x60\x9a\x0a\x3f\x70\x07\x2b\x11\x95\x0e\xd7\x7a\xb3\x9a\xa1\xbd\x4d\xc9\xab\xc4\x9d\x71\x77\x28\x70\x7b\xd9\x60\xf0\xf6\x7a\xc3\x71\x99\xdb\x50\x2e\x13\xcb\x53\x42\x35\x24\x8a\x77\xf0\x5b\x4b\x14\xd2\xc8\xbb\x2d\x61\xd7\x4d\xeb\xc1\x7c\x3e\x38\xbb\xe4\xaa\xbf\x47\x01\x49\x1d\x92\xcf\x9f\xc9\xb4\x7b\x9a\x4d\xb0\x52\x6d\xd5\x79\xa4\x6a\x25\xca\x0f\x0c\xfd\x80\xc0\x36\x14\x92\xa1\xd2\x5b\x4f\x94\x7f\x65\xfb\x86\x02\xbd\x40\x96\xf5\x4e\xae\xf7\xe8\x8a\xe3\xae\x04\x87\x17\x58\x1e\xb0\x94\xf7\xb8\x1c\x87\xb9\x8b\x03\x2f\x77\x1f\x25\x52\xbe\x35\xbc\xa0\xa9\xfd\xd1\x0b\xa8\x98\x2f\xe6\xc4\x6b\xdd\x1e\x49\x44\x60\x1e\x65\x67\xb3\x08\x27\x5b\xca\xb5\x66\xab\xb9\x96\xc1\xaa\xd5\xf1\xce\x16\xb3\x1f\xb0\x4f\x7f\x57\x7e\xd1\x0e\xb8\x54\x01\x6c\x81\x4b\xe9\xa2\xa0\x25\xea\x32\x1b\x7f\x39\x9c\xd2\x9e\x25\x1d\xe8\x51\x63\x20\x8d\x13\xa2\x91\xc1\x15\xfa\xcd\xcc\x30\xf5\xaf\xb4\x00\x85\xd1\x6c\x29\x93\xc1\x1c\x0d\x7b\xb0\xdb\x0c\x29\x3d\xc7\xcd\xf5\xe0\xa6\xee\x13\x3d\x3c\xb4\x2e\x27\xba\x2b\x77\x19\x5a\xd6\x12\xc7\xc5\x12\xd6\x32\x8c\xf1\x15\xc5\x57\x09\x7f\x89\xf4\xb4\x84\x59\x0c\x5d\x4e\x51\xd2\xb7\x65\x9c\x62\xb8\x06\x9b\x70\xb6\xaf\xf8\x5b\x9c\x06\x86\x29\xc0\x6f\x9f\x2d\x18\x7b\x09\x73\x84\x29\xd9\x9b\x61\x2e\x41\xdd\x38\x5f\x8c\x1c\x93\xb3\x70\x22\x67\xa5\x3f\x71\x8e\xd6\x47\x37\x22\x52\xe4\xc9\x53\x95\x3f\x5e\x90\xfc\x41\x4b\x9e\x3a\xf9\x2e\x1b\xe0\x63\x78\xf9\x55\x8a\x07\xee\x55\x8a\xec\x1b\x3e\xc9\x5d\xb1\x87\x8b\xbd\xb5\x92\x37\x68\x39\x15\xd1\x84\xcc\x0b\x22\x9c\x10\xa8\x41\x9e\x8c\xf3\x0b\xe2\x72\xc9\xb3\xc1\x68\x94\x5b\xf7\x1f\xcd\x20\x49\x72\x10\x25\x31\x24\x12\x2a\x61\x29\x78\xcf\xbd\xae\x96\xaa\x5b\x03\x70\xb9\x5d\xc1\x95\xa3\x9c\x45\x8d\x60\x43\x67\x2f\x77\xe1\x9a\x87\xd0\x4c\xd2\xc0\xa5\xfe\x0f\x2c\xc1\x6e\xd3\xa3\x73\xff\x3c\x89\x83\x0c\x3b\x7a\x3e\x7c\xfa\xb3\xc8\x1b\x9c\xc3\x90\x52\xb1\xc3\xf2\xa3\x41\x9b\x47\xd4\x88\x88\x6f\x42\xb2\x86\xa7\xdc\x8d\x11\x2f\x63\x11\x41\x43\xb5\xda\x1e\x67\x28\xd2\x1e\x2f\x3b\xab\x15\x73\x0d\x41\x4f\x69\x18\x18\xde\x2e\x97\x91\x67\x20\x61\x90\xf8\x39\xa3\x79\x76\x58\xcd\xb9\x99\x7c\x91\x35\x2c\x35\x58\x3f\x31\xdb\xa8\x35\x9d\xa0\xb3\x86\x8b\x5a\xe8\x00\x27\x5d\xcd\x10\xfb\xec\xe5\x26\x0e\x93\xcc\x9f\xac\x2e\x86\x61\xfb\x25\x18\xe5\x4f\x78\xb7\xc7\x13\x81\xab\xd6\x81\x1f\xf3\x71\x29\x38\x43\x2a\xb5\x89\x5c\x51\xf2\xb8\xf9\x8a\xc9\xe8\xce\x31\x08\x80\xe4\x76\x41\x25\xed\x8c\x86\x90\xb1\xfc\xad\x33\x96\xda\xfd\xa4\xd9\x74\x71\x1e\x0c\x45\x1e\xab\xb9\x1d\xa9\x17\xbb\x6e\x7d\x1d\x1d\x2c\x17\x56\x21\x59\x1b\x89\x23\x20\xb8\xa4\xf9\x45\x01\xc1\x11\x6e\x8e\xcf\xc8\xec\x5c\xc2\x66\x3e\x92\x08\xbf\x25\xcc\x1d\x8d\x93\x25\xbc\x3d\x5c\x24\xc0\xca\x1b\x49\x46\x81\x12\x01\xd3\x74\x7a\x82\x04\x1b\x67\xdf\x72\xe7\x3e\x8b\xe6\x4e\x4f\x51\xea\xf0\xca\x13\x85\xac\xdd\xb1\xa7\x46\xfb\x85\x6c\xbc\x81\x8d\xa3\x7d\xf3\x64\x3a\x67\xf2\xd4\x9f\x93\xb6\x5f\x9f\x74\x94\xc9\x7b\x6f\x2a\xcc\x2a\xb1\x84\x18\x39\x94\x13\xc2\x2d\xab\xcf\x7f\xb8\x95\xbd\xe2\x28\xbd\x95\x83\x9d\x6e\xa3\x22\x5a\x72\xe5\x60\x7b\x07\x55\xf7\xce\x3a\xaa\x7b\xa0\x91\x0f\x53\x1c\x2c\x6c\x04\x59\xea\xba\x30\x0d\xd3\xd3\xc5\x85\xab\x70\xd3\x85\x6a\xbd\x56\x35\xfa\x29\x67\xd5\x9f\xa9\x8a\x8e\x67\x44\xee\x03\xf8\x7b\xdb\xea\xef\xab\x34\xfc\xe7\x14\xb1\x33\x73\x5b\x98\xa4\x1c\xcd\x94\x6f\x6a\x5b\x91\x35\x3d\x73\x00\x5f\xbb\xab\xbd\xe0\x07\xb1\x10\xa2\x73\x54\xce\xe9\xa5\x1f\x2c\x15\x39\xd5\xa4\x98\x50\x2e\x00\x6b\xde\x25\xe9\x93\x6b\xb0\xae\x02\x41\xad\xc4\x5c\x59\x7d\xf6\xfd\x77\xdf\x3d\x7f\xf6\x23\x65\xf0\xaf\x7e\xf5\xf2\xb5\xf7\xfb\xf9\xff\x3c\xff\x4e\xbe\x3e\x7d\xf9\xdd\x93\x57\xff\xfa\xc9\xb9\xf2\xe4\xd9\x3f\xbc\x5b\xe6\xf7\xf3\x57\xaf\xbe\x7f\xc5\x96\xc7\x62\xf7\x92\x3e\xf0\xe6\x09\xac\xca\xfe\xca\x7e\x4a\x57\x44\x40\x8e\x81\xc2\x82\x16\xeb\x42\xb3\x63\x43\x4b\x5e\x09\x40\xd2\x3f\x56\xc3\x22\x2c\x00\x98\x6e\x09\x18\x8c\x10\x59\x09\x04\xf0\x05\x20\xb6\xcb\x7a\xa2\xe5\x03\x56\xf4\x04\x71\x5d\x4a\x0b\x49\x55\x28\x95\xc6\x55\x5d\x05\xcc\x9d\xe3\x84\x12\x5e\x44\xbb\x26\x30\x69\x90\xc9\x0b\x74\xc5\x3c\x7b\x9b\x8b\x89\x4a\x6e\x49\x95\xae\xd5\xb4\x68\x69\x07\x5e\xb8\x67\x5f\xf8\x9c\xce\x9d\x30\x97\x98\x88\xbe\x14\x29\xb9\x02\x17\xf2\xcc\x91\x3e\x6d\xc1\x7d\x95\xde\x1d\x9c\x3e\x73\xa4\x4f\x3b\x02\xb2\x63\x24\xd3\xb7\xaa\x3c\x55\x06\xd6\x48\x89\xf2\x00\xca\x3b\xb7\xc1\x78\x29\x1c\x89\x75\xe6\xdc\x26\xaf\xd5\xe3\xb2\x73\x2a\xe3\xcc\x28\xa6\xd4\xf5\xd8\x08\x1f\x16\xf5\x4d\xb3\x96\x36\x84\xa7\x52\x5a\x63\x63\x6b\xc4\xb9\x2b\x13\x96\x71\x13\x6d\x6a\x43\x73\x1c\xb7\x44\x76\x86\xd6\x66\x3c\xa0\x69\x8b\x54\xa0\xd2\x7c\x9e\xd4\x46\xd9\x5b\x0c\xb4\x62\xb7\xf1\xd6\xf5\x2c\x9b\xcb\xa9\x91\xc8\xb9\x31\xd9\x9e\x39\x34\xd6\x34\x51\x38\x51\x44\x0a\xfe\x5a\xa6\xea\x74\xf1\x50\x55\x84\x6f\x95\xd2\x71\xff\xa4\xed\xa3\x56\x55\xd0\x3a\xd8\xcf\x7e\xae\xea\xf6\x2e\x7b\x6f\x7c\x31\x1c\x91\x48\x43\xf4\xff\xf1\x63\x12\xa3\x5e\xdb\x42\x37\x6c\xee\xd6\x93\xfc\x29\xcd\x58\xd0\x27\x3d\xdb\x73\xe4\x4d\x8a\xc0\xd3\xfe\x1d\x99\xc7\xa5\xfe\xb9\x95\x41\x8c\x20\xd0\xd3\xd6\x27\x8e\x18\xe0\x13\x94\x25\x27\x93\x3f\x65\x89\x05\x26\xe6\xc5\x24\xfd\x18\xae\xf0\x66\x8a\xf4\x36\x72\xa8\x2d\x56\xba\xfc\xca\x73\xf7\xc7\xd8\x2b\x4a\x9b\x9d\xe5\x44\xa6\x1b\xe6\x70\x5a\x51\xaa\xcd\x5c\x15\x17\x26\xeb\x3a\xd5\x8a\xf8\xe9\xf8\x77\x9f\x3e\xa7\x0b\xce\x6b\x0f\xdd\x7b\xd5\x66\xd5\xf5\x4e\x77\x7a\x34\xe0\x40\x5f\x4a\xae\x3f\xa5\xd2\x9a\x74\xb4\xda\xdf\xea\x73\x53\x68\x37\xe0\xa4\xae\xd9\x5c\xd2\x9b\x71\x19\x5e\x0d\x10\xef\x37\xfa\x1b\xf6\xa0\x1f\x31\x86\xf2\xef\x16\xb9\xbb\xc8\x15\xed\x28\xa3\xd3\x1e\xaf\x38\x1d\x87\x5b\x5e\x07\xc7\xe3\x74\x88\x16\x1f\x58\x9a\xee\x4b\x29\x7b\xe3\x50\xde\x87\x9e\x32\xfa\x96\x6c\xe8\x6a\xaa\xce\x3b\x2d\x0a\x1a\xc6\xa1\xc0\x9b\x56\x2b\x2a\x3b\xdd\xc9\x86\x6e\x6f\x48\x60\x63\x3d\xbd\xf0\xe2\xd0\xe0\x45\xaf\x0e\x5f\x29\xbf\x11\x8e\x0d\x1a\xa8\x99\xc7\xad\xbb\x8f\xb3\xf6\x61\xc0\x9f\xfd\x8c\xeb\xe1\xb3\x9c\x57\x3e\x1d\x14\xba\x2e\xda\xec\xc2\x50\xbe\x90\xaa\x01\xbb\xad\x22\x06\x49\xa4\xc7\x75\x4b\x87\x34\x0d\x0e\x22\x79\xe0\x9e\x8d\x38\x4c\x87\x1c\x1f\x24\xda\xa4\x60\xe4\xd4\x47\x07\xe1\xf9\xc9\x1d\x96\x2e\xeb\x7a\x77\x5d\xba\x51\x3e\x05\x73\xe0\x9a\x38\x88\x93\x3f\x17\xb6\xe3\x6b\x22\x0e\x17\x73\x87\x4d\x42\x39\x6f\x5a\xc5\x53\x9e\x98\x52\xeb\x58\xc9\x03\xa6\xe2\x83\x6d\xc9\xb1\x90\x7d\xca\x1e\x0c\x05\x2d\xe5\x86\x68\xc8\x8a\xcf\xc5\x84\xca\x0f\x92\x39\x8d\x75\xe2\xc1\x70\x68\xe7\xe8\x7c\x8a\x5b\x9b\x57\x21\x80\x4c\x54\xa6\x88\x99\x55\xc8\xc4\xc2\x4b\x30\x08\x43\x09\x16\xf9\x27\x5b\x95\xda\xbd\x99\x12\x05\x0f\x05\x3b\x91\x87\xd6\xba\x4b\x7e\xae\xa8\xa1\x12\x49\x28\x6a\x84\x76\x6c\x76\x29\x99\x2d\x17\x43\x04\x98\xc4\xc0\x88\x59\xc3\x91\x8f\x4c\x1c\x90\xed\xcb\xb7\xd9\x7b\x54\x9c\xfb\xa2\x2a\xf5\x99\x78\x05\x90\xe8\x6e\x72\xaf\xa6\x57\xcd\x2e\x5d\x0f\xa5\x31\xf2\x46\x49\x79\x49\x0a\xd2\x5d\xc7\x20\xb9\x44\x6e\x70\x25\xbe\x41\x2c\xb6\xe8\xb2\x5e\x72\x4e\xb9\xc4\x94\x5f\xe8\x67\x0b\x89\xc0\x17\x25\xec\x4e\x66\x8f\x6d\x4a\x02\x40\x1c\xa3\xc2\x95\x9e\x08\xf0\x74\x14\xb6\xf1\x65\xbb\x95\x58\x74\x97\x6f\x58\x4e\x23\xb1\x79\x78\x67\x32\xd5\x9c\x38\xa3\x30\xe7\xf8\x04\xa7\xd7\x09\xaf\xfa\x57\xee\x9d\x9a\x59\x59\xd6\xf4\x37\x99\xba\x9b\x6f\x23\x19\x0d\x4e\xd3\x11\xee\x1e\x7a\xec\x32\xc7\x26\xf2\x8b\xd6\x09\xcc\x21\xef\x31\x1b\x6a\xe9\x4a\x6a\xc5\x5e\xf0\xaf\x1f\x0a\xc7\x5a\x30\x3e\xaf\xd4\x23\x3d\x89\x6a\x38\x5a\x02\x68\xc2\x81\x7d\x7b\x1c\x20\x30\x1b\x7d\xe0\x5e\xab\xc0\x0c\x13\x0a\x4b\x52\x09\x61\x4d\x90\xb7\xae\x90\x66\x0f\x80\x69\x92\x61\x5a\x70\xa7\x39\x1d\xe4\xe9\xde\x8e\xe0\x7f\x36\xb8\x76\x51\x60\x4d\xbc\xc5\x71\xdb\xb1\x71\x4d\x37\x9c\x0a\xae\xe8\x56\xbd\xc0\xf2\xfc\x0e\x22\xaf\x2f\xd3\x09\xa5\x15\x99\xf9\xbb\x89\x2a\x0b\xea\x72\x11\x44\x72\x1b\xfa\x8b\x20\x7d\x3e\x78\x9b\xf2\xc4\x23\xe3\xad\xb9\xf6\x2d\xca\xe7\xc9\x48\x90\x41\xa5\x67\x29\x65\x63\x3f\xa7\x00\xca\xc0\x16\xbb\x84\x71\x7c\xc2\xd4\x15\x85\xe2\x02\x76\xde\x4c\xde\x4e\xa6\xd7\x13\x5a\x70\x07\xe4\x6f\xaa\xbd\xf7\xe4\x5f\x5e\xd7\x56\xa1\x92\xd2\x54\x35\xf2\xbb\x25\xf1\xa0\x84\xa9\x84\x21\x52\x65\x3c\x24\xba\x95\x7a\x4b\xdd\xf8\x54\x11\xe7\xf0\x1c\x11\x33\x73\xea\x87\x05\x99\xa6\xd3\xb7\xc9\xe2\x4a\x45\xdf\xab\x96\x44\x18\x71\x74\x01\x79\x71\x9a\xe4\x2a\xc6\x44\x48\xc2\x12\x2c\x12\xcf\xa8\xd3\xe3\x67\x4f\xcc\x71\x42\xaa\x35\x02\xfd\x37\x05\x62\x34\xbd\x8f\x29\x6e\x85\x14\x7d\xb5\x8a\x25\x79\x12\xb4\x3d\x82\x54\x17\x28\x71\x9c\x72\x86\xb4\xb9\x99\x51\x90\x39\x88\xd2\x76\x49\xe0\x43\x9b\xec\x11\x26\xcd\x32\x8f\x3e\x33\xa9\xaf\x6a\xbc\x5b\x9d\xcc\x4e\xb7\x66\xd5\x21\x94\xfb\x06\x8d\xf0\x8b\x16\xad\x07\xb4\xf0\xe6\x02\xb9\x69\xb2\x5a\xf7\x00\xbd\xee\xbe\xe9\x2a\x38\x77\x73\x5e\xe7\x0a\xbb\x8a\x7a\xab\x16\xd4\x32\xac\x63\x45\xa7\xaa\xb4\x99\x6c\x55\x75\x54\xda\x3d\xce\x0f\xaf\xdb\x49\x8b\xe5\xeb\x00\x95\x84\x3f\xf7\xcc\x57\x1c\xf7\xe2\x88\x03\xd1\x19\x5f\x72\x56\xf7\x73\x61\x31\x6c\xc0\xf8\xd9\x5d\xb0\xec\xf1\x1b\xd3\xbd\xad\x6a\x6c\xd8\xa4\x5d\xb0\x87\xc6\xfb\x79\x12\x19\xa6\xd9\x53\xab\x64\x88\xa6\x66\xa0\xf1\x08\x36\xf1\x27\x57\x2f\xa6\x2f\xfa\xca\x6c\xf8\x5b\x11\xa2\xcb\xe8\x0c\x49\x43\x5e\x76\x46\x64\x71\xe6\xee\x3e\xcd\x66\x66\xf9\x99\x87\xba\x5b\x83\x42\xe8\xcc\x6f\xa3\x59\x19\x8f\xf4\x02\x7f\x45\x29\x28\x54\x9b\x82\xc5\xa4\xdd\x9e\xc3\xf6\x61\xb6\x02\x3d\x4c\x26\x55\xc9\x84\x73\x8a\xeb\x20\xfa\x8d\xeb\x0e\x72\x86\x41\x8d\xb5\xb4\xae\x4f\x86\x7c\xc4\x72\x69\xab\x57\x09\x53\x07\x8d\x8a\xf4\x2a\xb4\xa8\xa0\xe7\x68\x72\xe5\x6a\x55\x57\xae\x20\xf9\x55\x0a\xf2\xf1\xf4\x4c\x32\x1b\x89\x19\x1f\xcf\x8c\xd9\xeb\x31\x2f\xb3\xa1\x15\x85\x35\x10\x23\xe7\xb3\xe9\x4d\x70\x8e\xb8\x51\x26\x6d\x18\xe4\x14\xb7\x44\xd8\xdd\xb2\xfc\x32\x1d\xbe\xf2\x54\x87\x5a\x71\x67\xc1\xd2\xbb\x93\xc1\x05\xfb\xd7\x18\x3f\x18\xb6\xb0\x46\xb4\xc3\x16\x46\xe5\x2d\x46\xa4\x84\x9d\xa6\x89\xeb\x61\x82\x1b\x3b\xfa\x09\xda\x5d\x6a\x2a\xcc\xd8\xe3\xbb\x59\xae\xaa\xe4\x90\x92\x4d\xad\xad\x05\x16\x25\xbb\x5b\x90\xad\xb3\x39\xd7\x50\x1e\x26\x1e\x02\x56\xec\x6c\x4b\xc4\xc4\x40\x81\xf8\x21\xf4\x70\xa2\x5b\xbe\xd3\x9e\xa3\x53\x90\x57\x00\x6b\x5a\xa4\x51\x09\x5e\x3c\x09\xc8\x8a\x20\xe8\x73\x20\x26\xff\x0c\x65\x5b\xd0\x93\xcf\xa9\x80\x8c\x8f\x32\x11\x8d\x03\x5c\xc5\xbc\x31\x6f\xf1\x45\x74\x40\xd7\xe4\xd2\x33\xbe\x08\x67\x5e\xed\x61\x96\xb8\xc6\xc7\xc4\xfa\x0d\x71\xcc\x08\x5d\x06\xc2\x1b\xa3\x6b\x83\x0b\x24\xcb\x13\x93\x3e\x8c\x31\x9d\x50\x46\x89\x88\xe3\xa4\x98\x05\x70\x6f\x18\x8d\x8c\x46\x4b\x36\xa5\xd3\x34\x9d\x98\xfe\xb4\xe2\xf3\x15\x99\x26\x67\xb5\xf8\x62\x9f\xbb\x68\x04\x09\xce\x5c\x7a\x1e\x89\x7a\xfb\xd0\x5d\x59\x81\x2f\xe3\xd1\x51\x40\x04\xee\xc6\x28\xb2\xe4\x10\xd3\xf5\xf3\x49\x01\xcf\x85\x51\xa6\xad\x76\x65\xcd\x05\x45\xcf\x17\xff\x05\x0d\xaf\xa7\xc2\x9d\xe8\xd2\xb2\xc5\x5c\xf0\x7c\xf1\x82\x2c\x44\xe7\xb5\xcb\xfd\x19\xd6\x25\xce\x91\xf1\xfa\x1e\x6f\x33\xdf\xc6\x01\xfd\xcf\x06\x68\xca\xf0\xcf\x15\xd6\x9f\x9b\x78\x97\x8b\x8c\xad\xb0\xd0\x54\xd8\x8e\x2d\xb3\x43\xd7\xcc\x43\x3c\x9c\x44\xdf\x0f\x76\xbc\xc2\x0f\x49\x98\xf6\x0e\x95\xd8\xf5\x1d\x9b\x1f\x60\xcc\x01\xc5\xb1\x11\x08\xf4\x1f\xbc\xd5\x10\xcb\x8a\x1e\x7c\x56\x0e\x76\xda\x8d\xe2\x01\x71\xe1\x08\x15\x2e\x6f\x37\x2a\xb4\x73\x54\x0e\x3a\x3b\xde\x11\x72\x83\x8a\xa5\x6f\xc3\xd7\x5d\x3c\x4d\xee\x7e\xaa\x23\x78\x31\xe0\x81\xf4\x36\xd7\x95\x51\x0a\x62\xcf\x16\xa4\xd7\x91\x3f\x0c\x39\x35\x32\x55\xe2\xd9\xca\xc4\xf5\x8c\x28\x9f\x54\xf3\x7a\x47\x35\x74\xd0\x6b\x3c\x75\x18\x30\xa6\x30\x72\x2f\xb4\xe8\x29\xf5\xcb\xf0\x7c\x76\xcc\xa3\xae\x0f\x55\xd1\x77\xc7\xb9\xcb\x76\xa3\x3f\x25\xd8\x6e\x67\x7b\x9d\xb9\xf1\xa7\xe1\x48\xcf\xc2\xbb\x7b\x06\xcc\xce\xdd\xc1\xa0\x42\x3b\xa5\x51\x3b\xc8\x97\x2b\x35\x64\x27\x98\xbe\xcf\x29\x41\x41\x75\xd7\xe5\xec\xbf\x77\x22\xbe\xdc\x92\x7a\x8a\xff\x82\xe4\xd7\xe6\xeb\x9e\x2b\x8b\xbd\x29\xd1\x5f\x99\x09\xab\x28\x38\xb5\xd0\x0b\x7a\x19\xec\x21\xf4\x14\xfa\x19\x61\xf3\x5e\x76\x22\x12\x93\xcb\x77\xd8\x79\xc6\x84\x28\xef\xec\x7e\x7a\xc0\xc3\xfd\x84\x82\xa9\x0e\xb6\xb6\xc6\xf3\x4b\x58\xfd\xe9\xd6\x62\x7e\xbe\xff\x73\x9e\xbc\xeb\xb6\xda\xad\x36\x5a\xa6\xbf\x1c\x0f\x80\x14\x40\x30\x03\x6a\x3d\x34\x50\x28\x81\x12\x19\x77\xef\x01\x5b\xfe\x2a\x9d\xe3\xa6\x83\xb9\xa2\x2c\x23\x4b\xfa\xf2\xf6\xfe\xc6\x3d\xf2\xf0\x72\xb2\x54\x19\x7b\x97\x99\x94\x23\xeb\x9c\x83\x41\x2d\x9a\xe5\xaa\x14\x7c\xd2\xe7\x21\x3a\xc0\xc5\x21\xc4\xc0\x96\xa4\x3e\x01\x68\xb9\xfa\xb7\xbf\x6d\xdc\xbb\x17\x52\xc6\x51\x12\xa4\xd2\xe2\x06\x4b\xbb\xc1\xd8\xec\x37\x58\xb6\xf8\x0e\x64\xac\xd6\xcf\xe4\xe5\xf8\x94\x53\x61\x51\xf9\x18\xaa\xc7\xda\x20\x28\xe8\x57\xc4\x79\x07\x51\xda\xed\x23\x1e\x9d\x31\xfc\x17\x47\xa0\x98\x31\x48\x44\x4a\x30\x06\xbe\x7a\xb8\x71\x4f\xb3\x7f\xf1\x63\x2d\xd3\xfa\xc8\x05\x06\x24\xe8\xb4\x91\xd5\xe8\xb7\xc1\x99\xbc\x77\x0f\xfb\x92\xb8\x97\xe1\x0d\xb7\x38\xf6\x07\xcd\xdf\xed\x83\x3c\xef\x9e\x1c\xea\x65\x93\x8b\x17\x4e\x09\x4f\x78\x35\x5b\x3e\x5a\x6e\x61\x4f\x41\xfe\x8f\x03\xcc\x9a\x4a\x38\x0e\x49\xf6\x6a\x31\xb9\xa1\xc2\xcb\xf7\x0c\x8d\x2f\xce\xf2\x2e\x0b\xbc\x35\x7e\x0f\x0f\x10\xdf\x3b\x5d\xcc\xd1\xb1\x9b\x37\x38\xbe\x24\x99\x58\xd9\xa6\xc2\x97\x6c\xfd\x7f\xee\x91\x26\xb1\xe4\xbb\x92\x8a\x8f\x7f\x80\x46\x39\x1b\xe0\x0f\x2d\x06\x29\xd0\xdc\x3a\xff\xf7\xb0\xa9\x24\xc8\x64\x80\x4e\x45\x1d\x79\x80\x2a\xe4\x40\x43\x9b\x50\xf7\x0b\xe8\xd0\xfb\xaf\xf6\xdb\x6d\x93\x14\x13\x93\x59\xc2\xa5\xa7\x2f\x5e\x50\xb1\x9d\xf8\x9b\x10\x5d\x97\xd9\xc5\x65\x92\x2f\x60\xbf\xbd\x80\xad\x86\xd3\xff\xce\xa9\xb2\x25\xed\x53\x7e\xf9\x44\x7a\x88\x86\xb1\x4e\xff\xa8\x83\x35\x6e\xfe\x37\xe8\xcd\x8b\x67\x98\xaa\xe7\x88\x3a\x46\x5f\x3f\xb0\xb6\x79\x6d\xdf\x4f\x8f\xdd\x63\xcc\xb3\x40\xa8\x99\xf5\x10\xc0\xf6\x8b\x17\xf5\xe4\xf3\xcf\x93\x4e\x1b\xe3\xf0\x1c\xc8\x74\x63\x13\xbe\x70\x3a\x20\x7e\xbb\xb1\x1a\xdc\x93\xa1\x2e\x26\x94\x49\x07\x93\x1d\xeb\xfb\x0e\xb9\xd0\xcd\x40\xcb\x5e\xc2\x98\x4d\x59\x73\x64\xef\x9c\x11\x45\xeb\x48\x1a\x48\xa6\x0d\x1d\x24\xc3\x5d\x1f\x8b\xac\xaf\xd9\x9f\x18\x66\x5b\x1c\x99\xe6\x90\xa4\x1b\x82\xba\x66\x53\xfa\xbe\x11\x0e\xa0\xe4\x49\x6c\x88\xff\xab\x57\x2f\xb5\xd2\xd5\xf8\x29\x8b\x81\x0f\x39\x6a\xb4\x75\xd8\xb5\x60\xa8\x9c\xeb\x54\xf8\x44\xae\x9b\x5c\xb3\x13\x25\x7b\xb3\x8e\xd0\x7e\x62\x88\x7f\x73\x33\xf3\x2a\xf3\x05\xc4\x2f\xfb\x1c\xed\x71\x21\xb1\x23\x29\xbd\xc0\x19\x67\xcc\xf0\xd5\xe6\x91\x4e\xff\xa1\x83\x2f\x31\x94\x04\xfc\x43\x01\x7d\x81\xf9\xa3\x94\x80\x40\xcd\xe2\x35\x24\x53\xa2\x3d\x61\x62\x85\xbb\x1e\x1d\x1a\xe4\xaf\xf1\x22\x02\x58\x36\x49\x06\xf9\x40\x98\x67\x6f\x5f\x83\x44\x35\x98\xfd\x0f\x3e\x55\xc3\x79\xf8\x01\x2b\x03\xf2\x40\xd9\x17\x59\x2e\xf9\x2b\xde\x5e\xe6\x55\x6f\x91\xc3\x56\x46\xb6\x30\xd2\xa8\xaa\xdf\xa0\x62\x64\x49\xf3\xcd\x26\x1a\xb6\x0d\x80\xd6\x7c\x2a\x36\xe5\xce\x1e\xa6\x99\x7a\x03\x0b\x43\xd2\x4c\x25\x9b\x0c\x00\x49\x1e\xcf\x08\x80\xc0\xa9\xb3\x8c\x97\x2a\xde\xd4\x81\xde\xfe\x01\x3b\x81\xc5\xd3\x2c\x85\x8e\x3f\xbd\x99\x3b\x18\x6a\x24\x74\xc0\x2a\x9b\x93\x39\x5d\x0f\x67\xa3\xe6\x22\xf0\x0b\x7d\x86\x67\xb4\x4e\xf3\xbf\x4f\xb3\xef\xcd\x0b\x2f\x88\x67\xfa\x60\x6c\x5a\x1c\xb0\x7f\x13\xe2\x7c\xf1\x62\x5f\x78\x9d\xb0\xb9\x4e\xf3\xf4\x66\x6e\x0b\x3e\x23\xba\xca\x3b\x6a\xdf\xa1\xa4\x43\x1b\xe1\xcd\xf8\x94\xfc\x31\x79\x21\x95\xbd\x79\xbf\xed\xbf\xb9\x5b\x7c\xb3\x81\xb4\x1a\x49\x7b\x8c\xa0\x8e\x20\xe8\x59\xdb\x74\xc9\x9c\x55\x45\x3a\xc1\x59\xd9\x9c\x4e\x6c\x17\x3b\xb1\x84\xe0\x0f\xef\xd8\xc9\x4e\x97\x7b\xd9\x96\x5e\x3e\x6f\x7b\x20\xd0\xde\x1c\xa5\x9a\xbd\x35\x06\xf3\xbc\x5d\x18\xcc\xce\x6f\xc2\x68\x67\x5f\x3a\xfb\x90\x3b\xfb\x62\xcd\xce\xc2\x20\xef\x38\x28\xdb\x32\xd6\x2b\x7f\xa0\xfe\x0a\x30\xb4\x49\x10\xc2\x25\x81\xa2\xbf\xec\x13\xa1\xd0\x64\x80\x52\x64\x50\x41\xb8\x2a\x48\x4d\xb6\xfd\xca\x4d\xc5\x34\xd5\x0b\x38\x09\x72\xda\xb6\xde\xe6\x62\x47\xec\xbe\xd8\xdd\x65\x1c\x90\x26\x63\x49\x6c\xe9\x07\x1c\xdd\x3e\xf6\x47\x09\xc2\x06\xf7\x18\x68\x81\x29\x6a\xb3\xc9\x82\x32\xc5\xd0\xec\x5b\x56\x84\x3d\xe1\x7c\xc7\xb0\x43\xe0\x8f\x67\x28\x58\x44\x76\x83\xaa\x56\xa2\x27\x52\x26\x14\x54\x65\x58\x06\xdf\xfe\x5b\x12\x06\x48\xfa\x6f\xcf\xbc\xe7\x44\x96\x09\x3e\x6a\x2e\x52\x30\x8f\xe1\x50\x01\x98\xbf\x31\x1b\x61\x41\x70\xbf\x2d\x7d\xd3\x1c\xcc\xb1\xd6\xdb\x2f\x4c\xc7\x38\xed\xf4\x35\xd7\x6c\x59\x5c\x51\xa0\x39\xa6\x97\xfe\x7f\xff\xef\xff\x47\xb7\x25\x17\x04\xf5\x78\xa3\x64\xe4\x85\x86\xd5\x02\xf3\x97\x63\x56\x5a\x05\x35\x4b\xe5\xd8\xb8\xe3\x92\x61\xd7\xfd\xb1\xed\xfe\xd8\x89\x90\x6f\x71\xae\x7e\xc3\x54\xf9\x90\x8e\x8a\xb3\xee\x57\x0e\xb4\x78\xc4\xc8\x1d\x71\x87\x14\x2c\xd1\xb0\xee\x3e\xcd\xc5\xdd\x2d\xa9\x4d\xa6\x45\xf4\xe6\x75\xa5\x09\x7e\xd1\xdf\x64\xfe\xd5\x03\xe3\x9e\xb7\x9e\x3a\x6e\x5f\x8b\x7b\x58\x00\xe7\xb9\x12\xd4\xb3\xb6\x91\x24\x65\x6a\x28\x03\x47\x6c\xd1\x1c\x86\x3c\xc1\x05\xd8\x61\x55\x63\x0f\xb9\xa2\x99\xe1\x98\x10\x66\x28\xd8\x92\xb0\xc3\xa7\x7c\x21\xfe\x0e\x64\xa8\xa2\x3d\x8f\x7f\x3b\xc4\xef\x98\x8a\x07\x9c\x8d\x16\xa4\x88\xa0\x82\xe1\xaa\x35\x31\x4c\xbf\x50\x0c\x3d\xd7\x0e\xaf\x81\x1d\x22\xe7\x4f\x43\x60\x5b\x74\xb5\x2e\x62\xb0\xc6\xef\x72\x11\xba\x5d\x86\xd0\x36\x09\x30\x8c\xb0\x55\x32\xc2\x1f\x89\xf3\xe2\x2e\x1f\x62\x74\x5f\x30\xfa\xe2\xf7\xc5\x28\xb1\x8d\xdf\x84\x74\x20\xdf\x00\xed\x70\xeb\x19\x5c\x21\x8c\xd4\xb8\x0f\x7c\xd5\xcc\xc7\x4e\xe9\x7c\x90\x56\x15\xd1\x33\x3a\x6d\x57\x0d\x8b\xcf\x84\xe2\x33\x3a\x0b\x6f\x7e\x7c\xd1\xdc\x07\x1e\x3b\xa7\x03\x2b\xc3\x7d\x75\xe5\x12\x0b\x3a\xb4\xbf\x89\xa9\x39\xbf\xa5\x0c\xb9\x2f\x97\x88\xbc\x61\x77\x64\xee\x9f\x81\xe7\x8b\x25\x4e\x33\xe5\x6c\xf4\x16\x97\x09\x3a\x82\x89\xc3\x67\xad\x05\xc8\x13\x79\xac\xad\x68\x3e\xbe\x72\x24\x92\x1a\xfc\xb4\x1e\x7a\xb2\x9f\xd4\xc9\x06\x4e\x8c\x39\x94\x50\xe4\x38\x0c\x9e\x0a\x65\x0d\x47\x49\xb7\xad\xeb\x7f\xa4\x01\x0e\xd1\x8a\x4e\x45\xd0\x87\xaa\x44\x8f\x55\x0f\x92\x2a\x19\x7e\xab\x0d\xbc\xca\xfd\x81\x8b\x56\x32\xa4\xeb\x3c\x5c\xb9\xce\x3f\xa0\x9f\x62\xa8\x7b\x3d\x1d\xa7\xc9\x93\x6f\xbf\x4a\x4e\x17\xd9\x68\x48\x09\xab\xc7\xd9\xaf\x54\xeb\x0c\x83\x3a\x92\x59\xeb\xe7\xbc\xc1\x6a\x31\xd9\xcb\xa5\xc4\xf6\x19\x2e\xde\x61\x26\x59\xa5\xf0\xa4\x67\x92\x13\x3c\x7a\x08\x8d\x31\xa6\x88\xf7\x01\xdb\x3d\x91\xfc\x24\x04\x9f\xce\x1a\xc8\x48\xaa\x44\x53\x65\x03\xaf\xd7\xa0\x35\x18\x0f\x03\x4b\x2a\x34\xb1\xf7\x36\xee\xf1\x74\x05\x69\xde\x6b\xfe\x26\x86\x63\xa6\xb9\xa3\xc9\xb1\x1a\x46\x58\x84\xc1\xf9\xdd\x9a\x00\x86\x7e\x14\xc7\xa6\x7b\xc6\x68\xcb\xf6\x6a\x51\x3e\xb2\x89\x6b\x3b\x7e\x05\xc3\x9c\x7e\xfd\x3a\x79\xd7\x6e\xed\xb7\xda\xa4\xa2\xdb\x27\x9c\x93\x0c\xd3\x19\xc7\x67\x11\x21\x0d\x66\xd7\x97\x94\x7d\xc1\x85\xf4\xb0\xd5\x6e\xea\x16\x2a\xc7\xc4\xec\x53\x26\xd7\xfc\x6c\x80\xc9\x91\x56\x26\xf0\xaf\x53\xf3\x30\x16\x16\xfb\xa1\x1c\xc3\x6f\xce\x87\x49\x78\x9f\x62\x61\xeb\x54\x61\xdc\xc1\x8d\x26\x43\xc0\x16\x9a\xf9\xc0\x1a\xc0\x82\x71\xbd\xba\xcc\x40\x02\xc1\xd3\x35\xb7\xd8\xc4\x06\x5b\xae\x5b\x42\xd0\x82\x13\x3c\x1f\xe1\xa4\xfb\x7f\x5a\xd6\xfd\x9d\xb5\xb2\xee\xaf\x17\xbf\xaa\xa6\xfc\xc4\xa3\x43\x53\xb4\x1a\x86\x71\x98\xdc\x52\x92\x4c\x85\xf7\xcf\xf4\xf4\x35\xb9\x7a\x87\x51\x6a\x02\xd1\xde\x3f\xd2\x43\x44\x7b\xe9\xe3\x47\xbd\xf6\xed\xf4\x57\x73\xf9\x30\xec\xac\x9e\xf0\x6e\xc4\x53\xe1\x5b\x78\x80\x9f\x1c\x70\xc3\x67\xcb\x2b\x7b\x88\x37\x7f\xbc\xc4\x65\x9e\xcd\x86\x49\x1f\x78\x46\xde\x37\x39\xf3\x85\x54\x2f\x52\x74\x36\xbc\x98\x50\x65\x0b\xa0\x05\xb7\xda\x48\x03\x43\xdd\xce\xf0\x4c\xa5\x4a\xbe\x2e\xe8\xb6\x8b\x27\x9c\xc3\xc1\x6c\xa8\xb6\x6f\x6c\x0a\x74\x83\xcb\x90\xf6\x2b\x5c\xb4\x98\x32\x4f\xea\x47\x5d\xa6\x61\xa7\xb0\xb0\xcf\x81\xb1\xaf\x5e\x64\xf3\xcb\xc5\x29\xe6\x32\xdc\x4a\xf1\xc0\x7a\x9a\x6f\x5d\xe7\x5b\x59\x9e\x2f\xd2\x7c\xab\xdb\x7d\x58\xe2\x0d\xba\x98\x65\x1b\xc5\xac\x33\x1a\x84\x9b\x27\x35\x1e\x25\x65\xef\x0f\x9d\x72\xea\x88\x82\x42\x93\x52\x87\xfc\xeb\xbc\x06\x6f\x6b\x58\xe0\x54\x8c\xc0\xc9\x1b\xa3\xa7\xbe\xea\x84\x61\x1a\x9a\x40\x19\x69\x20\x9e\xdd\x66\xba\x02\xb8\xc5\x3a\x30\xcb\x1e\x0c\xb3\x50\xda\x5e\xc0\x0a\xc5\x6e\x98\xd6\x75\x18\x82\x75\x68\x70\xc9\xc9\x5e\xb5\x69\xde\xd6\x4a\xcc\x8c\xc9\x11\xc9\x4a\x02\xec\x5e\x92\x2d\x0e\x46\x57\x97\x83\x53\x5a\x05\xd5\x76\xa7\xbb\xbd\xb3\xbb\xf7\x70\xff\xd1\x93\xa7\xcf\xbe\x7a\xfe\xe2\xbf\xfe\xfe\xf2\xeb\x7f\x7c\xf3\xed\x77\xdf\xff\xf0\xdf\xaf\x5e\xff\xf8\xe6\x7f\xfe\xf9\x7f\xfd\xeb\xdf\x83\xd3\x33\x58\xf5\x17\x97\xd9\xcf\x6f\x47\xe3\xc9\xf4\xea\x17\xd0\xac\x16\xef\xae\xdf\xdf\xfc\xda\xfc\xa9\xaa\x09\x3b\x29\xff\x6d\xc3\xda\x3f\xf6\x76\xe8\xf7\x78\xc0\x6e\xbb\xf4\x23\x4f\xa9\x24\x4b\x9b\x7e\x64\xe6\x1b\xd6\x4e\x09\x3d\x0b\xd0\x0a\x1b\xe4\x8f\xd5\xec\xc0\xb2\x5d\x02\x28\x4e\xd2\x54\x96\x52\x1c\xee\xd2\x92\x92\x54\x4e\xf3\xa9\x66\x03\x69\x39\x9e\x48\xb9\x25\x54\x6c\x1b\xbe\xd3\xcb\x59\x6b\x5f\x57\xa0\xc1\xc0\xa8\x5a\x83\xa6\x96\xea\x34\xbc\xc2\x64\xa5\x1d\x4e\xbd\xf8\x46\xbc\xa3\x73\xd2\xc3\x5e\x7f\x26\x68\x3c\x31\xe9\x63\xa5\xa4\x00\xde\x3c\x72\x53\x7d\xe3\x85\xad\xc4\xc9\x44\x76\xab\x4e\x9c\x78\xe7\x8b\xa4\xcd\x8e\xcb\xea\x83\xa8\xb0\x6e\x43\x6c\x53\xf8\xda\x64\x9e\xa2\x4f\x1e\x1f\x07\x58\x2c\x4b\x74\x1b\xd7\xcc\x88\xc7\x40\x3a\x9e\xdf\x2e\x1a\x4b\x51\xae\x53\xf4\x63\xe1\xb5\x06\xf3\xf6\xc5\xf6\x95\xe5\x68\xb7\xc6\x38\x8b\x76\x75\xaa\x34\xd9\xa1\x70\xc7\x76\x32\x6c\x58\x4f\x52\xcf\x19\xc1\x3e\xa6\xdf\x1e\x28\x55\x6f\x22\x39\xf7\x3c\xff\xd4\x13\xe3\x5f\xaa\x79\x88\xd2\x02\x8e\xff\x95\x0e\xf2\xf9\x41\xf2\x24\x01\x12\xbe\x49\x2e\x66\x24\xc2\x25\xa0\x26\x5c\xa4\x93\x54\x4b\xd8\x3e\x88\x13\xe5\x13\x3c\x8d\xfb\x05\x7d\x6c\x86\xcb\x31\x70\x83\x2f\xa9\xd9\xd1\x4f\xf0\x84\x5b\xc9\x71\x13\x79\x12\x26\x7b\xab\xd5\x6d\x98\xee\x44\x36\x75\x5c\x7e\xc6\xdd\x5d\x97\x28\xaf\x4a\xe4\x66\xd3\x6b\xc7\x07\x15\x9f\xd9\xac\xb6\xaa\x4a\x97\x35\x6c\x4f\xc7\xa2\x38\xdc\x2d\xf8\x0f\xa8\xf3\x8a\xab\x39\x9a\xc3\x55\xa4\x03\x4c\xdf\x42\x06\x9e\x16\x36\xe3\xb2\xc8\xec\x13\xe2\xce\x00\xa2\xd7\xac\x04\x4e\x01\x9a\x1d\x2a\x60\x14\x97\xe4\xcc\xb2\x4f\xa3\xed\x37\x92\x3e\x77\x83\xab\xb8\xf4\x19\xf7\xb6\xb2\x64\x4e\x2f\xa3\xb6\x36\xc2\x99\xbf\x1c\xca\x65\x93\xfc\x98\xbf\x1c\x16\x77\x74\x6a\xa7\x4c\x17\xff\x69\x60\x62\xe1\x8d\x5a\x07\x64\x1e\x18\xf7\xff\x17\x00\x00\xff\xff\xdf\x51\xcf\xd2\x68\xd0\x02\x00")
cmd/sockethub/bindata.go:func bower_componentsSocketIoClientSocketIoJsBytes() ([]byte, error) {
cmd/sockethub/bindata.go:	return bindataRead(
cmd/sockethub/bindata.go:		_bower_componentsSocketIoClientSocketIoJs,
cmd/sockethub/bindata.go:	)
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:func bower_componentsSocketIoClientSocketIoJs() (*asset, error) {
cmd/sockethub/bindata.go:	bytes, err := bower_componentsSocketIoClientSocketIoJsBytes()
cmd/sockethub/bindata.go:	if err != nil {
cmd/sockethub/bindata.go:		return nil, err
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	a := &asset{bytes: bytes, info:  info}
cmd/sockethub/bindata.go:	return a, nil
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:// Asset loads and returns the asset for the given name.
cmd/sockethub/bindata.go:// It returns an error if the asset could not be found or
cmd/sockethub/bindata.go:// could not be loaded.
cmd/sockethub/bindata.go:func Asset(name string) ([]byte, error) {
cmd/sockethub/bindata.go:	cannonicalName := strings.Replace(name, "\\", "/", -1)
cmd/sockethub/bindata.go:	if f, ok := _bindata[cannonicalName]; ok {
cmd/sockethub/bindata.go:		a, err := f()
cmd/sockethub/bindata.go:		if err != nil {
cmd/sockethub/bindata.go:			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
cmd/sockethub/bindata.go:		}
cmd/sockethub/bindata.go:		return a.bytes, nil
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	return nil, fmt.Errorf("Asset %s not found", name)
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:// MustAsset is like Asset but panics when Asset would return an error.
cmd/sockethub/bindata.go:// It simplifies safe initialization of global variables.
cmd/sockethub/bindata.go:func MustAsset(name string) []byte {
cmd/sockethub/bindata.go:	a, err := Asset(name)
cmd/sockethub/bindata.go:	if (err != nil) {
cmd/sockethub/bindata.go:		panic("asset: Asset(" + name + "): " + err.Error())
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	return a
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:// AssetInfo loads and returns the asset info for the given name.
cmd/sockethub/bindata.go:// It returns an error if the asset could not be found or
cmd/sockethub/bindata.go:// could not be loaded.
cmd/sockethub/bindata.go:func AssetInfo(name string) (os.FileInfo, error) {
cmd/sockethub/bindata.go:	cannonicalName := strings.Replace(name, "\\", "/", -1)
cmd/sockethub/bindata.go:	if f, ok := _bindata[cannonicalName]; ok {
cmd/sockethub/bindata.go:		a, err := f()
cmd/sockethub/bindata.go:		if err != nil {
cmd/sockethub/bindata.go:			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
cmd/sockethub/bindata.go:		}
cmd/sockethub/bindata.go:		return a.info, nil
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	return nil, fmt.Errorf("AssetInfo %s not found", name)
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:// AssetNames returns the names of the assets.
cmd/sockethub/bindata.go:func AssetNames() []string {
cmd/sockethub/bindata.go:	names := make([]string, 0, len(_bindata))
cmd/sockethub/bindata.go:	for name := range _bindata {
cmd/sockethub/bindata.go:		names = append(names, name)
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	return names
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:// _bindata is a table, holding each asset generator, mapped to its name.
cmd/sockethub/bindata.go:var _bindata = map[string]func() (*asset, error){
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:// AssetDir returns the file names below a certain
cmd/sockethub/bindata.go:// directory embedded in the file by go-bindata.
cmd/sockethub/bindata.go:// For example if you run go-bindata on data/... and data contains the
cmd/sockethub/bindata.go:// following hierarchy:
cmd/sockethub/bindata.go://     data/
cmd/sockethub/bindata.go://       foo.txt
cmd/sockethub/bindata.go://       img/
cmd/sockethub/bindata.go://         a.png
cmd/sockethub/bindata.go://         b.png
cmd/sockethub/bindata.go:// then AssetDir("data") would return []string{"foo.txt", "img"}
cmd/sockethub/bindata.go:// AssetDir("data/img") would return []string{"a.png", "b.png"}
cmd/sockethub/bindata.go:// AssetDir("foo.txt") and AssetDir("notexist") would return an error
cmd/sockethub/bindata.go:// AssetDir("") will return []string{"data"}.
cmd/sockethub/bindata.go:func AssetDir(name string) ([]string, error) {
cmd/sockethub/bindata.go:	node := _bintree
cmd/sockethub/bindata.go:	if len(name) != 0 {
cmd/sockethub/bindata.go:		cannonicalName := strings.Replace(name, "\\", "/", -1)
cmd/sockethub/bindata.go:		pathList := strings.Split(cannonicalName, "/")
cmd/sockethub/bindata.go:		for _, p := range pathList {
cmd/sockethub/bindata.go:			node = node.Children[p]
cmd/sockethub/bindata.go:			if node == nil {
cmd/sockethub/bindata.go:				return nil, fmt.Errorf("Asset %s not found", name)
cmd/sockethub/bindata.go:			}
cmd/sockethub/bindata.go:		}
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	if node.Func != nil {
cmd/sockethub/bindata.go:		return nil, fmt.Errorf("Asset %s not found", name)
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	rv := make([]string, 0, len(node.Children))
cmd/sockethub/bindata.go:	for childName := range node.Children {
cmd/sockethub/bindata.go:		rv = append(rv, childName)
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	return rv, nil
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:type bintree struct {
cmd/sockethub/bindata.go:	Func func() (*asset, error)
cmd/sockethub/bindata.go:	Children map[string]*bintree
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:var _bintree = &bintree{nil, map[string]*bintree{
cmd/sockethub/bindata.go:	"bower_components": &bintree{nil, map[string]*bintree{
cmd/sockethub/bindata.go:		"socket.io-client": &bintree{nil, map[string]*bintree{
cmd/sockethub/bindata.go:			"socket.io.js": &bintree{bower_componentsSocketIoClientSocketIoJs, map[string]*bintree{
cmd/sockethub/bindata.go:			}},
cmd/sockethub/bindata.go:		}},
cmd/sockethub/bindata.go:	}},
cmd/sockethub/bindata.go:}}
cmd/sockethub/bindata.go:// RestoreAsset restores an asset under the given directory
cmd/sockethub/bindata.go:func RestoreAsset(dir, name string) error {
cmd/sockethub/bindata.go:        data, err := Asset(name)
cmd/sockethub/bindata.go:        if err != nil {
cmd/sockethub/bindata.go:                return err
cmd/sockethub/bindata.go:        }
cmd/sockethub/bindata.go:        info, err := AssetInfo(name)
cmd/sockethub/bindata.go:        if err != nil {
cmd/sockethub/bindata.go:                return err
cmd/sockethub/bindata.go:        }
cmd/sockethub/bindata.go:        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
cmd/sockethub/bindata.go:        if err != nil {
cmd/sockethub/bindata.go:                return err
cmd/sockethub/bindata.go:        }
cmd/sockethub/bindata.go:        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
cmd/sockethub/bindata.go:        if err != nil {
cmd/sockethub/bindata.go:                return err
cmd/sockethub/bindata.go:        }
cmd/sockethub/bindata.go:        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
cmd/sockethub/bindata.go:        if err != nil {
cmd/sockethub/bindata.go:                return err
cmd/sockethub/bindata.go:        }
cmd/sockethub/bindata.go:        return nil
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:// RestoreAssets restores an asset under the given directory recursively
cmd/sockethub/bindata.go:func RestoreAssets(dir, name string) error {
cmd/sockethub/bindata.go:        children, err := AssetDir(name)
cmd/sockethub/bindata.go:        // File
cmd/sockethub/bindata.go:        if err != nil {
cmd/sockethub/bindata.go:                return RestoreAsset(dir, name)
cmd/sockethub/bindata.go:        }
cmd/sockethub/bindata.go:        // Dir
cmd/sockethub/bindata.go:        for _, child := range children {
cmd/sockethub/bindata.go:                err = RestoreAssets(dir, filepath.Join(name, child))
cmd/sockethub/bindata.go:                if err != nil {
cmd/sockethub/bindata.go:                        return err
cmd/sockethub/bindata.go:                }
cmd/sockethub/bindata.go:        }
cmd/sockethub/bindata.go:        return nil
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:func _filePath(dir, name string) string {
cmd/sockethub/bindata.go:        cannonicalName := strings.Replace(name, "\\", "/", -1)
cmd/sockethub/bindata.go:        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
cmd/sockethub/bindata.go:}
cmd/sockethub/bindata.go:func assetFS() *assetfs.AssetFS {
cmd/sockethub/bindata.go:	for k := range _bintree.Children {
cmd/sockethub/bindata.go:		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, Prefix: k}
cmd/sockethub/bindata.go:	}
cmd/sockethub/bindata.go:	panic("unreachable")
cmd/sockethub/bindata.go:}
cmd/sockethub/main.go:package main
cmd/sockethub/main.go:import (
cmd/sockethub/main.go:	"fmt"
cmd/sockethub/main.go:	"net/http"
cmd/sockethub/main.go:	"os"
cmd/sockethub/main.go:	"github.com/Sirupsen/logrus"
cmd/sockethub/main.go:	"github.com/googollee/go-socket.io"
cmd/sockethub/main.go:	"github.com/rs/cors"
cmd/sockethub/main.go:)
cmd/sockethub/main.go:type PingArgs struct{}
cmd/sockethub/main.go:type RoomLeaveArgs struct {
cmd/sockethub/main.go:	RoomName string `json:"room"`
cmd/sockethub/main.go:}
cmd/sockethub/main.go:type RoomMetadataArgs struct {
cmd/sockethub/main.go:	RoomName string      `json:"room"`
cmd/sockethub/main.go:	Metadata interface{} `json:"metadata"`
cmd/sockethub/main.go:}
cmd/sockethub/main.go:type RoomBroadcastArgs struct {
cmd/sockethub/main.go:	RoomName string      `json:"room-name"`
cmd/sockethub/main.go:	Message  interface{} `json:"message"`
cmd/sockethub/main.go:}
cmd/sockethub/main.go:type ClientSetMetadataArgs struct {
cmd/sockethub/main.go:	Metadata interface{} `json:"metadata"`
cmd/sockethub/main.go:}
cmd/sockethub/main.go:type RoomJoinArgs struct {
cmd/sockethub/main.go:	RoomName string `json:"room"`
cmd/sockethub/main.go:}
cmd/sockethub/main.go:type RoomGetUsersArgs struct {
cmd/sockethub/main.go:	RoomName string `json:"room"`
cmd/sockethub/main.go:}
cmd/sockethub/main.go:type StatsArgs struct{}
cmd/sockethub/main.go:type Response struct {
cmd/sockethub/main.go:	Event  string      `json:"event"`
cmd/sockethub/main.go:	Author string      `json:"author",omitempty`
cmd/sockethub/main.go:	Room   string      `json:"room",omitempty`
cmd/sockethub/main.go:	Data   interface{} `json:"data",omitempty`
cmd/sockethub/main.go:}
cmd/sockethub/main.go:type Room struct {
cmd/sockethub/main.go:	Metadata interface{}
cmd/sockethub/main.go:	Clients  map[string]*Client
cmd/sockethub/main.go:}
cmd/sockethub/main.go:type Client struct {
cmd/sockethub/main.go:	Id       string      `json:"id"`
cmd/sockethub/main.go:	Metadata interface{} `json:"metadata"`
cmd/sockethub/main.go:	Socket   socketio.Socket
cmd/sockethub/main.go:	Rooms    map[string]*Room
cmd/sockethub/main.go:}
cmd/sockethub/main.go:type Brain struct {
cmd/sockethub/main.go:	Rooms   map[string]*Room
cmd/sockethub/main.go:	Clients map[string]*Client
cmd/sockethub/main.go:}
cmd/sockethub/main.go:func (brain *Brain) GetRoom(name string) *Room {
cmd/sockethub/main.go:	if room, found := brain.Rooms[name]; found {
cmd/sockethub/main.go:		return room
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	room := Room{
cmd/sockethub/main.go:		Clients: make(map[string]*Client),
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	brain.Rooms[name] = &room
cmd/sockethub/main.go:	return &room
cmd/sockethub/main.go:}
cmd/sockethub/main.go:func (brain *Brain) GetClient(socket socketio.Socket) *Client {
cmd/sockethub/main.go:	if client, found := brain.Clients[socket.Id()]; found {
cmd/sockethub/main.go:		return client
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	client := Client{
cmd/sockethub/main.go:		Id:     socket.Id(),
cmd/sockethub/main.go:		Socket: socket,
cmd/sockethub/main.go:		Rooms:  make(map[string]*Room),
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	brain.Clients[socket.Id()] = &client
cmd/sockethub/main.go:	return &client
cmd/sockethub/main.go:}
cmd/sockethub/main.go:func (brain *Brain) Join(so socketio.Socket, roomName string) (*Room, error) {
cmd/sockethub/main.go:	if len(roomName) < 1 {
cmd/sockethub/main.go:		return nil, fmt.Errorf("invalid room name %q", roomName)
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	room := brain.GetRoom(roomName)
cmd/sockethub/main.go:	if room == nil {
cmd/sockethub/main.go:		return nil, fmt.Errorf("failed to get room %q", roomName)
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	client := brain.GetClient(so)
cmd/sockethub/main.go:	if client == nil {
cmd/sockethub/main.go:		return nil, fmt.Errorf("failed to get client %q", so.Id())
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	if err := client.Socket.Join(roomName); err != nil {
cmd/sockethub/main.go:		return nil, err
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	room.Clients[client.Socket.Id()] = client
cmd/sockethub/main.go:	client.Rooms[roomName] = room
cmd/sockethub/main.go:	//return nil, nil
cmd/sockethub/main.go:	return room, nil
cmd/sockethub/main.go:}
cmd/sockethub/main.go:func (brain *Brain) Leave(so socketio.Socket, roomName string) error {
cmd/sockethub/main.go:	client := brain.GetClient(so)
cmd/sockethub/main.go:	if client == nil {
cmd/sockethub/main.go:		return fmt.Errorf("failed to get client %q", so.Id())
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	if room, found := client.Rooms[roomName]; found {
cmd/sockethub/main.go:		delete(client.Rooms, roomName)
cmd/sockethub/main.go:		delete(room.Clients, so.Id())
cmd/sockethub/main.go:	} else {
cmd/sockethub/main.go:		return fmt.Errorf("user %q not in room %q", so.Id(), roomName)
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	return nil
cmd/sockethub/main.go:}
cmd/sockethub/main.go:func (brain *Brain) RemoveClient(so socketio.Socket) error {
cmd/sockethub/main.go:	client := brain.GetClient(so)
cmd/sockethub/main.go:	if client == nil {
cmd/sockethub/main.go:		return fmt.Errorf("no such client %q", so.Id())
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	for roomName := range client.Rooms {
cmd/sockethub/main.go:		brain.Leave(so, roomName)
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	delete(brain.Clients, so.Id())
cmd/sockethub/main.go:	return nil
cmd/sockethub/main.go:}
cmd/sockethub/main.go:var brain *Brain
cmd/sockethub/main.go:func NewBrain() *Brain {
cmd/sockethub/main.go:	brain := Brain{
cmd/sockethub/main.go:		Clients: make(map[string]*Client),
cmd/sockethub/main.go:		Rooms:   make(map[string]*Room),
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	return &brain
cmd/sockethub/main.go:}
cmd/sockethub/main.go:func init() {
cmd/sockethub/main.go:	brain = NewBrain()
cmd/sockethub/main.go:}
cmd/sockethub/main.go:func main() {
cmd/sockethub/main.go:	server, err := socketio.NewServer(nil)
cmd/sockethub/main.go:	if err != nil {
cmd/sockethub/main.go:		logrus.Fatalf("Failed to initialize new Socket.io server: %v", err)
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	server.On("connection", func(so socketio.Socket) {
cmd/sockethub/main.go:		logrus.WithFields(logrus.Fields{
cmd/sockethub/main.go:			"client": so.Id(),
cmd/sockethub/main.go:			"args":   nil,
cmd/sockethub/main.go:		}).Info("connection")
cmd/sockethub/main.go:		// Initialize the client in brain
cmd/sockethub/main.go:		brain.GetClient(so)
cmd/sockethub/main.go:		// motd
cmd/sockethub/main.go:		so.Emit("message", Response{Event: "welcome-on-server"})
cmd/sockethub/main.go:		// Socket.io events
cmd/sockethub/main.go:		so.On("disconnection", func() {
cmd/sockethub/main.go:			logrus.WithFields(logrus.Fields{
cmd/sockethub/main.go:				"client": so.Id(),
cmd/sockethub/main.go:				"args":   nil,
cmd/sockethub/main.go:			}).Info("disconnection")
cmd/sockethub/main.go:			client := brain.GetClient(so)
cmd/sockethub/main.go:			for roomName := range client.Rooms {
cmd/sockethub/main.go:				so.BroadcastTo(roomName, "message", Response{
cmd/sockethub/main.go:					Event:  "client-disconnected",
cmd/sockethub/main.go:					Author: so.Id(),
cmd/sockethub/main.go:				})
cmd/sockethub/main.go:			}
cmd/sockethub/main.go:			brain.RemoveClient(so)
cmd/sockethub/main.go:		})
cmd/sockethub/main.go:		// protocol
cmd/sockethub/main.go:		so.On("ping", func(args PingArgs) {
cmd/sockethub/main.go:			logrus.WithFields(logrus.Fields{
cmd/sockethub/main.go:				"client": so.Id(),
cmd/sockethub/main.go:				"args":   args,
cmd/sockethub/main.go:			}).Info("ping")
cmd/sockethub/main.go:			so.Emit("pong")
cmd/sockethub/main.go:		})
cmd/sockethub/main.go:		so.On("room-join", func(args RoomJoinArgs) {
cmd/sockethub/main.go:			logrus.WithFields(logrus.Fields{
cmd/sockethub/main.go:				"client": so.Id(),
cmd/sockethub/main.go:				"args":   args,
cmd/sockethub/main.go:			}).Info("room-join")
cmd/sockethub/main.go:			room, err := brain.Join(so, args.RoomName)
cmd/sockethub/main.go:			if err != nil {
cmd/sockethub/main.go:				logrus.Errorf("Failed to join room %q: %v", args.RoomName, err)
cmd/sockethub/main.go:			}
cmd/sockethub/main.go:			// Join on Socket.IO
cmd/sockethub/main.go:			so.Join(args.RoomName)
cmd/sockethub/main.go:			so.Emit("message", Response{
cmd/sockethub/main.go:				Event: "welcome-to-room",
cmd/sockethub/main.go:				Room:  args.RoomName,
cmd/sockethub/main.go:				Data:  room.Metadata,
cmd/sockethub/main.go:			})
cmd/sockethub/main.go:			// broadcast client infos
cmd/sockethub/main.go:			client := brain.GetClient(so)
cmd/sockethub/main.go:			so.BroadcastTo(args.RoomName, "message", Response{
cmd/sockethub/main.go:				Event:  "new-room-client",
cmd/sockethub/main.go:				Author: so.Id(),
cmd/sockethub/main.go:				Data:   client.Metadata,
cmd/sockethub/main.go:				Room:   args.RoomName,
cmd/sockethub/main.go:			})
cmd/sockethub/main.go:		})
cmd/sockethub/main.go:		so.On("room-broadcast", func(args RoomBroadcastArgs) {
cmd/sockethub/main.go:			logrus.WithFields(logrus.Fields{
cmd/sockethub/main.go:				"client": so.Id(),
cmd/sockethub/main.go:				"args":   args,
cmd/sockethub/main.go:			}).Info("room-broadcast")
cmd/sockethub/main.go:			so.BroadcastTo(args.RoomName, "message",
cmd/sockethub/main.go:				Response{
cmd/sockethub/main.go:					Event:  "broadcast-from",
cmd/sockethub/main.go:					Author: so.Id(),
cmd/sockethub/main.go:					Data:   args.Message,
cmd/sockethub/main.go:					Room:   args.RoomName,
cmd/sockethub/main.go:				})
cmd/sockethub/main.go:		})
cmd/sockethub/main.go:		so.On("client-set-metadata", func(args ClientSetMetadataArgs) {
cmd/sockethub/main.go:			logrus.WithFields(logrus.Fields{
cmd/sockethub/main.go:				"client": so.Id(),
cmd/sockethub/main.go:				"args":   args,
cmd/sockethub/main.go:			}).Info("client-set-metadata")
cmd/sockethub/main.go:			client := brain.GetClient(so)
cmd/sockethub/main.go:			client.Metadata = args.Metadata
cmd/sockethub/main.go:			for roomName := range client.Rooms {
cmd/sockethub/main.go:				so.BroadcastTo(roomName, "message", Response{
cmd/sockethub/main.go:					Event:  "client-metadata-update",
cmd/sockethub/main.go:					Author: so.Id(),
cmd/sockethub/main.go:					Data:   args.Metadata,
cmd/sockethub/main.go:				})
cmd/sockethub/main.go:			}
cmd/sockethub/main.go:		})
cmd/sockethub/main.go:		so.On("room-set-metadata", func(args RoomMetadataArgs) {
cmd/sockethub/main.go:			logrus.WithFields(logrus.Fields{
cmd/sockethub/main.go:				"client": so.Id(),
cmd/sockethub/main.go:				"args":   args,
cmd/sockethub/main.go:			}).Info("room-set-metadata")
cmd/sockethub/main.go:			room := brain.GetRoom(args.RoomName)
cmd/sockethub/main.go:			// FIXME: check if user is in the room
cmd/sockethub/main.go:			// Set metadata
cmd/sockethub/main.go:			room.Metadata = args.Metadata
cmd/sockethub/main.go:			// Broadcast the change
cmd/sockethub/main.go:			so.BroadcastTo(args.RoomName, "message", Response{
cmd/sockethub/main.go:				Event:  "room-metadata-update",
cmd/sockethub/main.go:				Author: so.Id(),
cmd/sockethub/main.go:				Room:   args.RoomName,
cmd/sockethub/main.go:				Data:   args.Metadata,
cmd/sockethub/main.go:			})
cmd/sockethub/main.go:		})
cmd/sockethub/main.go:		so.On("room-leave", func(args RoomLeaveArgs) {
cmd/sockethub/main.go:			logrus.WithFields(logrus.Fields{
cmd/sockethub/main.go:				"client": so.Id(),
cmd/sockethub/main.go:				"args":   args,
cmd/sockethub/main.go:			}).Info("room-leave")
cmd/sockethub/main.go:			so.BroadcastTo(args.RoomName, "message", Response{
cmd/sockethub/main.go:				Event:  "client-leave",
cmd/sockethub/main.go:				Author: so.Id(),
cmd/sockethub/main.go:				Room:   args.RoomName,
cmd/sockethub/main.go:			})
cmd/sockethub/main.go:			brain.Leave(so, args.RoomName)
cmd/sockethub/main.go:			// FIXME: check error
cmd/sockethub/main.go:		})
cmd/sockethub/main.go:		so.On("room-get-users", func(args RoomGetUsersArgs) {
cmd/sockethub/main.go:			logrus.WithFields(logrus.Fields{
cmd/sockethub/main.go:				"client": so.Id(),
cmd/sockethub/main.go:				"args":   args,
cmd/sockethub/main.go:			}).Info("room-get-users")
cmd/sockethub/main.go:			room := brain.GetRoom(args.RoomName)
cmd/sockethub/main.go:			users := map[string]interface{}{}
cmd/sockethub/main.go:			for _, client := range room.Clients {
cmd/sockethub/main.go:				users[client.Id] = client.Metadata
cmd/sockethub/main.go:			}
cmd/sockethub/main.go:			so.Emit("message", Response{
cmd/sockethub/main.go:				Event: "room-users",
cmd/sockethub/main.go:				Data:  users,
cmd/sockethub/main.go:				Room:  args.RoomName,
cmd/sockethub/main.go:			})
cmd/sockethub/main.go:		})
cmd/sockethub/main.go:		so.On("stats", func(args StatsArgs) {
cmd/sockethub/main.go:			logrus.WithFields(logrus.Fields{
cmd/sockethub/main.go:				"client": so.Id(),
cmd/sockethub/main.go:				"args":   args,
cmd/sockethub/main.go:			}).Info("stats")
cmd/sockethub/main.go:			so.Emit("message", Response{
cmd/sockethub/main.go:				Event: "statistics",
cmd/sockethub/main.go:				Data:  "FIXME",
cmd/sockethub/main.go:			})
cmd/sockethub/main.go:		})
cmd/sockethub/main.go:	})
cmd/sockethub/main.go:	server.On("error", func(so socketio.Socket, err error) {
cmd/sockethub/main.go:		logrus.Errorf("error: %v", err)
cmd/sockethub/main.go:	})
cmd/sockethub/main.go:	mux := http.NewServeMux()
cmd/sockethub/main.go:	mux.Handle("/static/", http.StripPrefix("/static/", http.FileServer(assetFS())))
cmd/sockethub/main.go:	mux.Handle("/socket.io/", server)
cmd/sockethub/main.go:	c := cors.New(cors.Options{
cmd/sockethub/main.go:		AllowCredentials: true,
cmd/sockethub/main.go:	})
cmd/sockethub/main.go:	handler := c.Handler(mux)
cmd/sockethub/main.go:	port := os.Getenv("PORT")
cmd/sockethub/main.go:	if port == "" {
cmd/sockethub/main.go:		port = "5000"
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:	logrus.Infof("Serving at :%s", port)
cmd/sockethub/main.go:	if err := http.ListenAndServe(fmt.Sprintf(":%s", port), handler); err != nil {
cmd/sockethub/main.go:		logrus.Fatalf("http error: %v", err)
cmd/sockethub/main.go:	}
cmd/sockethub/main.go:}
examples/dokku-demo/index.html:<!DOCTYPE html>
examples/dokku-demo/index.html:<html>
examples/dokku-demo/index.html:  <head>
examples/dokku-demo/index.html:    <meta charset="utf-8">
examples/dokku-demo/index.html:    <script src="https://cdn.socket.io/socket.io-1.4.1.min.js"></script>
examples/dokku-demo/index.html:  </head>
examples/dokku-demo/index.html:  <body>
examples/dokku-demo/index.html:    <script>
examples/dokku-demo/index.html:     var socket = io("http://sockethub.apps.42.am");
examples/dokku-demo/index.html:     console.log('socket', socket);
examples/dokku-demo/index.html:     socket.on('message', function(args) {
examples/dokku-demo/index.html:       console.log('message', arguments);
examples/dokku-demo/index.html:     });
examples/dokku-demo/index.html:     socket.on('pong', function(args) {
examples/dokku-demo/index.html:       console.log('pong', args);
examples/dokku-demo/index.html:     });
examples/dokku-demo/index.html:     socket.on('disconnect', function(args) {
examples/dokku-demo/index.html:       console.log('disconnect', args);
examples/dokku-demo/index.html:     });
examples/dokku-demo/index.html:     socket.on('connect', function(args) {
examples/dokku-demo/index.html:       console.log('connect', args);
examples/dokku-demo/index.html:     });
examples/dokku-demo/index.html:     socket.on('error', function(err) {
examples/dokku-demo/index.html:       console.log('socket error', err);
examples/dokku-demo/index.html:     });
examples/dokku-demo/index.html:     // standard scenario
examples/dokku-demo/index.html:     socket.emit('room-join', {'room': 'general'});
examples/dokku-demo/index.html:     socket.emit('room-join', {'room': 'myroom'});
examples/dokku-demo/index.html:     socket.emit('client-set-metadata', {'metadata': 'my name is george'});
examples/dokku-demo/index.html:     socket.emit('room-broadcast', {
examples/dokku-demo/index.html:       'room': 'myroom',
examples/dokku-demo/index.html:       'message': 'hello guys',
examples/dokku-demo/index.html:     });
examples/dokku-demo/index.html:     socket.emit('room-set-metadata', {
examples/dokku-demo/index.html:       'room': 'myroom',
examples/dokku-demo/index.html:       'metadata': 'this is the title !',
examples/dokku-demo/index.html:     });
examples/dokku-demo/index.html:     socket.emit('room-get-users', { 'room': 'myroom' });
examples/dokku-demo/index.html:     socket.emit('room-get-users', { 'room': 'general' });
examples/dokku-demo/index.html:     socket.emit('room-leave', {'room': 'general' });
examples/dokku-demo/index.html:    </script>
examples/dokku-demo/index.html:  </body>
examples/dokku-demo/index.html:</html>
Makefile:PACKAGES := 	.
Makefile:COMMANDS := 	$(addprefix ./,$(wildcard cmd/*))
Makefile:VERSION := 	$(shell cat .goxc.json | jq -c .PackageVersion | sed 's/"//g')
Makefile:SOURCES := 	$(shell find . -name "*.go")
Makefile:ARGS ?=		-V --local-user=local-user
Makefile:all: build
Makefile:build: $(notdir $(COMMANDS))
Makefile:run: build
Makefile:	./ssh2docker $(ARGS)
Makefile:$(notdir $(COMMANDS)): $(SOURCES)
Makefile:	@#go get -t ./...
Makefile:	gofmt -w $(PACKAGES) ./cmd/$@
Makefile:	go test -i $(PACKAGES) ./cmd/$@
Makefile:	go build -o $@ ./cmd/$@
Makefile:test:
Makefile:	go get -t ./...
Makefile:	go test -i $(PACKAGES) $(COMMANDS)
Makefile:	go test -v $(PACKAGES) $(COMMANDS)
Makefile:install:
Makefile:	go install $(COMMANDS)
Makefile:cover:
Makefile:	find . -name profile.out -delete
Makefile:	for package in $(PACKAGES); do \
Makefile:	  rm -f $$package/profile.out; \
Makefile:	  go test -covermode=count -coverpkg=. -coverprofile=$$package/profile.out $$package; \
Makefile:	done
Makefile:	echo "mode: count" > profile.out.tmp
Makefile:	cat `find . -name profile.out` | grep -v mode: | sort -r | awk '{if($$1 != last) {print $$0;last=$$1}}' >> profile.out.tmp
Makefile:	mv profile.out.tmp profile.out
Makefile:.PHONY: convey
Makefile:convey:
Makefile:	go get github.com/smartystreets/goconvey
Makefile:	goconvey -cover -port=9031 -workDir="$(realpath .)" -depth=0
Makefile:.PHONY: build-docker
Makefile:build-docker: contrib/docker/.docker-container-built
Makefile:contrib/docker/.docker-container-built: dist/latest/ssh2docker_latest_linux_386
Makefile:	cp dist/latest/ssh2docker_latest_linux_386 contrib/docker/ssh2docker
Makefile:	docker build -t moul/ssh2docker:latest contrib/docker
Makefile:	docker tag moul/ssh2docker:latest moul/ssh2docker:$(VERSION)
Makefile:	docker run -it --rm moul/ssh2docker --version
Makefile:	docker inspect --type=image --format="{{ .Id }}" moul/ssh2docker > $@.tmp
Makefile:	mv $@.tmp $@
Makefile:.PHONY: run-docker
Makefile:run-docker: build-docker
Makefile:	docker run -it --rm -p 2222:2222 moul/ssh2docker
Makefile:dist/latest/ssh2docker_latest_linux_386: $(SOURCES)
Makefile:	mkdir -p dist
Makefile:	rm -f dist/latest
Makefile:	(cd dist; ln -s $(VERSION) latest)
Makefile:	goxc -bc="linux,386" xc
Makefile:	cp dist/latest/ssh2docker_$(VERSION)_linux_386 dist/latest/ssh2docker_latest_linux_386
Makefile:.PHONY: goxc
Makefile:	goxc
Makefile:.PHONY: docker-ps
Makefile:docker-ps:
Makefile:	@# consider run 'make $@' inside a unix' watch
Makefile:	@#   i.e:   'watch make $@'
Makefile:	docker ps --filter=label=ssh2docker -a
auth.go:package ssh2docker
auth.go:import (
auth.go:	"encoding/json"
auth.go:	"fmt"
auth.go:	"os"
auth.go:	"os/exec"
auth.go:	"strings"
auth.go:)
auth.go:// CheckConfig checks if the ClientConfig has access
auth.go:func (s *Server) CheckConfig(config *ClientConfig) error {
auth.go:	if !config.Allowed && (s.PasswordAuthScript != "" || s.PublicKeyAuthScript != "") {
auth.go:		logrus.Warnf("config.Allowed = false")
auth.go:		return fmt.Errorf("Access not allowed")
auth.go:	}
auth.go:	if s.AllowedImages != nil {
auth.go:		allowed := false
auth.go:		for _, image := range s.AllowedImages {
auth.go:			if image == config.ImageName {
auth.go:				allowed = true
auth.go:				break
auth.go:			}
auth.go:		}
auth.go:		if !allowed {
auth.go:			logrus.Warnf("Image is not allowed: %q", config.ImageName)
auth.go:			return fmt.Errorf("Image not allowed")
auth.go:		}
auth.go:	}
auth.go:	return nil
auth.go:}
auth.go:// PublicKeyCallback is called when the user tries to authenticate using an SSH public key
auth.go:func (s *Server) PublicKeyCallback(conn ssh.ConnMetadata, key ssh.PublicKey) (*ssh.Permissions, error) {
auth.go:	username := conn.User()
auth.go:	clientID := conn.RemoteAddr().String()
auth.go:	keyText := strings.TrimSpace(string(ssh.MarshalAuthorizedKey(key)))
auth.go:	logrus.Debugf("PublicKeyCallback: %q %q", username, keyText)
auth.go:	// sessionID := conn.SessionID()
auth.go:	config := s.ClientConfigs[clientID]
auth.go:	if config == nil {
auth.go:		s.ClientConfigs[clientID] = &ClientConfig{
auth.go:			RemoteUser: username,
auth.go:			ImageName:  username,
auth.go:			Keys:       []string{},
auth.go:			Env:        make(Environment, 0),
auth.go:		}
auth.go:	}
auth.go:	config = s.ClientConfigs[clientID]
auth.go:	config.Keys = append(config.Keys, keyText)
auth.go:	return nil, s.CheckConfig(config)
auth.go:}
auth.go:// KeyboardInteractiveCallback is called after PublicKeyCallback
auth.go:func (s *Server) KeyboardInteractiveCallback(conn ssh.ConnMetadata, challenge ssh.KeyboardInteractiveChallenge) (*ssh.Permissions, error) {
auth.go:	username := conn.User()
auth.go:	clientID := conn.RemoteAddr().String()
auth.go:	logrus.Debugf("KeyboardInteractiveCallback: %q %q", username, challenge)
auth.go:	config := s.ClientConfigs[clientID]
auth.go:	if config == nil {
auth.go:		s.ClientConfigs[clientID] = &ClientConfig{
auth.go:			RemoteUser: username,
auth.go:			ImageName:  username,
auth.go:			Keys:       []string{},
auth.go:			Env:        make(Environment, 0),
auth.go:		}
auth.go:	}
auth.go:	config = s.ClientConfigs[clientID]
auth.go:	if len(config.Keys) == 0 {
auth.go:		logrus.Warnf("No user keys, continuing with password authentication")
auth.go:		return nil, s.CheckConfig(config)
auth.go:	}
auth.go:	if s.PublicKeyAuthScript != "" {
auth.go:		logrus.Debugf("%d keys received, trying to authenticate using hook script", len(config.Keys))
auth.go:		script, err := expandUser(s.PublicKeyAuthScript)
auth.go:		if err != nil {
auth.go:			logrus.Warnf("Failed to expandUser: %v", err)
auth.go:			return nil, err
auth.go:		}
auth.go:		args := append([]string{username}, config.Keys...)
auth.go:		cmd := exec.Command(script, args...)
auth.go:		// FIXME: redirect stderr to logrus
auth.go:		cmd.Stderr = os.Stderr
auth.go:		output, err := cmd.Output()
auth.go:		if err != nil {
auth.go:			logrus.Warnf("Failed to execute publickey-auth-script: %v", err)
auth.go:			return nil, err
auth.go:		}
auth.go:		err = json.Unmarshal(output, &config)
auth.go:		if err != nil {
auth.go:			logrus.Warnf("Failed to unmarshal json %q: %v", string(output), err)
auth.go:			return nil, err
auth.go:		}
auth.go:	} else {
auth.go:		logrus.Debugf("%d keys received, but no hook script, continuing", len(config.Keys))
auth.go:	}
auth.go:	return nil, s.CheckConfig(config)
auth.go:}
auth.go:// PasswordCallback is called when the user tries to authenticate using a password
auth.go:func (s *Server) PasswordCallback(conn ssh.ConnMetadata, password []byte) (*ssh.Permissions, error) {
auth.go:	username := conn.User()
auth.go:	clientID := conn.RemoteAddr().String()
auth.go:	logrus.Debugf("PasswordCallback: %q %q", username, password)
auth.go:	config := s.ClientConfigs[clientID]
auth.go:	if config == nil {
auth.go:		s.ClientConfigs[clientID] = &ClientConfig{
auth.go:			//Allowed: true,
auth.go:			RemoteUser: username,
auth.go:			ImageName:  username,
auth.go:			Keys:       []string{},
auth.go:			Env:        make(Environment, 0),
auth.go:		}
auth.go:	}
auth.go:	config = s.ClientConfigs[clientID]
auth.go:	if s.PasswordAuthScript != "" {
auth.go:		script, err := expandUser(s.PasswordAuthScript)
auth.go:		if err != nil {
auth.go:			logrus.Warnf("Failed to expandUser: %v", err)
auth.go:			return nil, err
auth.go:		}
auth.go:		cmd := exec.Command(script, username, string(password))
auth.go:		// FIXME: redirect stderr to logrus
auth.go:		cmd.Stderr = os.Stderr
auth.go:		output, err := cmd.Output()
auth.go:		if err != nil {
auth.go:			logrus.Warnf("Failed to execute password-auth-script: %v", err)
auth.go:			return nil, err
auth.go:		}
auth.go:		err = json.Unmarshal(output, &config)
auth.go:		if err != nil {
auth.go:			logrus.Warnf("Failed to unmarshal json %q: %v", string(output), err)
auth.go:			return nil, err
auth.go:		}
auth.go:	}
auth.go:	return nil, s.CheckConfig(config)
auth.go:}
auth_test.go:package ssh2docker
auth_test.go:import (
auth_test.go:	"testing"
auth_test.go:)
auth_test.go:func TestServer_CheckConfig(t *testing.T) {
auth_test.go:	Convey("Testing Server.CheckConfig", t, FailureContinues, func() {
auth_test.go:		// FIXME: check with a script
auth_test.go:		server, err := NewServer()
auth_test.go:		So(err, ShouldBeNil)
auth_test.go:		server.AllowedImages = []string{"alpine", "ubuntu:trusty", "abcde123"}
auth_test.go:		So(server.CheckConfig(&ClientConfig{ImageName: "alpine"}), ShouldBeNil)
auth_test.go:		So(server.CheckConfig(&ClientConfig{ImageName: "ubuntu:trusty"}), ShouldBeNil)
auth_test.go:		So(server.CheckConfig(&ClientConfig{ImageName: "abcde123"}), ShouldBeNil)
auth_test.go:		So(server.CheckConfig(&ClientConfig{ImageName: "abcde124"}), ShouldNotBeNil)
auth_test.go:		So(server.CheckConfig(&ClientConfig{ImageName: "ubuntu:vivid"}), ShouldNotBeNil)
auth_test.go:	})
auth_test.go:}
client.go:package ssh2docker
client.go:import (
client.go:	"fmt"
client.go:	"io"
client.go:	"os"
client.go:	"os/exec"
client.go:	"strings"
client.go:	"sync"
client.go:	"syscall"
client.go:	"time"
client.go:)
client.go:var clientCounter = 0
client.go:// Client is one client connection
client.go:type Client struct {
client.go:	Idx        int
client.go:	ChannelIdx int
client.go:	Conn       *ssh.ServerConn
client.go:	Chans      <-chan ssh.NewChannel
client.go:	Reqs       <-chan *ssh.Request
client.go:	Server     *Server
client.go:	Pty, Tty   *os.File
client.go:	Config     *ClientConfig
client.go:	ClientID   string
client.go:}
client.go:type ClientConfig struct {
client.go:	ImageName  string      `json:"image-name",omitempty`
client.go:	RemoteUser string      `json:"remote-user",omitempty`
client.go:	Allowed    bool        `json:"allowed",omitempty`
client.go:	Env        Environment `json:"env",omitempty`
client.go:	IsLocal    bool        `json:"is_local",omitempty`
client.go:	Command    []string    `json:"command",omitempty`
client.go:	User       string      `json:"user",omitempty`
client.go:	Keys       []string    `json:"keys",omitempty`
client.go:	EntryPoint string      `json:"entrypoint",omitempty`
client.go:}
client.go:// NewClient initializes a new client
client.go:func NewClient(conn *ssh.ServerConn, chans <-chan ssh.NewChannel, reqs <-chan *ssh.Request, server *Server) *Client {
client.go:	client := Client{
client.go:		Idx:        clientCounter,
client.go:		ClientID:   conn.RemoteAddr().String(),
client.go:		ChannelIdx: 0,
client.go:		Conn:       conn,
client.go:		Chans:      chans,
client.go:		Reqs:       reqs,
client.go:		Server:     server,
client.go:		// Default ClientConfig, will be overwritten if a hook is used
client.go:		Config: &ClientConfig{
client.go:			ImageName:  strings.Replace(conn.User(), "_", "/", -1),
client.go:			RemoteUser: "anonymous",
client.go:			Env:        Environment{},
client.go:			Command:    make([]string, 0),
client.go:		},
client.go:	}
client.go:	if server.LocalUser != "" {
client.go:		client.Config.IsLocal = client.Config.ImageName == server.LocalUser
client.go:	}
client.go:	if _, found := server.ClientConfigs[client.ClientID]; !found {
client.go:		server.ClientConfigs[client.ClientID] = client.Config
client.go:	}
client.go:	clientCounter++
client.go:	logrus.Infof("NewClient (%d): User=%q, ClientVersion=%q", client.Idx, conn.User(), fmt.Sprintf("%x", conn.ClientVersion()))
client.go:	return &client
client.go:}
client.go:// HandleRequests handles SSH requests
client.go:func (c *Client) HandleRequests() error {
client.go:	go func(in <-chan *ssh.Request) {
client.go:		for req := range in {
client.go:			logrus.Debugf("HandleRequest: %v", req)
client.go:			if req.WantReply {
client.go:				req.Reply(false, nil)
client.go:			}
client.go:		}
client.go:	}(c.Reqs)
client.go:	return nil
client.go:}
client.go:// HandleChannels handles SSH channels
client.go:func (c *Client) HandleChannels() error {
client.go:	for newChannel := range c.Chans {
client.go:		if err := c.HandleChannel(newChannel); err != nil {
client.go:			return err
client.go:		}
client.go:	}
client.go:	return nil
client.go:}
client.go:// HandleChannel handles one SSH channel
client.go:func (c *Client) HandleChannel(newChannel ssh.NewChannel) error {
client.go:	if newChannel.ChannelType() != "session" {
client.go:		logrus.Debugf("Unknown channel type: %s", newChannel.ChannelType())
client.go:		newChannel.Reject(ssh.UnknownChannelType, "unknown channel type")
client.go:		return nil
client.go:	}
client.go:	channel, requests, err := newChannel.Accept()
client.go:	if err != nil {
client.go:		logrus.Errorf("newChannel.Accept failed: %v", err)
client.go:		return err
client.go:	}
client.go:	c.ChannelIdx++
client.go:	logrus.Debugf("HandleChannel.channel (client=%d channel=%d): %v", c.Idx, c.ChannelIdx, channel)
client.go:	logrus.Debug("Creating pty...")
client.go:	f, tty, err := pty.Open()
client.go:	if err != nil {
client.go:		logrus.Errorf("pty.Open failed: %v", err)
client.go:		return nil
client.go:	}
client.go:	c.Tty = tty
client.go:	c.Pty = f
client.go:	c.HandleChannelRequests(channel, requests)
client.go:	return nil
client.go:}
client.go:// HandleChannelRequests handles channel requests
client.go:func (c *Client) HandleChannelRequests(channel ssh.Channel, requests <-chan *ssh.Request) {
client.go:	go func(in <-chan *ssh.Request) {
client.go:		defer c.Tty.Close()
client.go:		for req := range in {
client.go:			ok := false
client.go:			switch req.Type {
client.go:			case "shell":
client.go:				logrus.Debugf("HandleChannelRequests.req shell")
client.go:				if len(req.Payload) != 0 {
client.go:					break
client.go:				}
client.go:				ok = true
client.go:				var cmd *exec.Cmd
client.go:				var err error
client.go:				if c.Config.IsLocal {
client.go:					cmd = exec.Command("/bin/bash")
client.go:				} else {
client.go:					// checking if a container already exists for this user
client.go:					existingContainer := ""
client.go:					if !c.Server.NoJoin {
client.go:						cmd := exec.Command("docker", "ps", "--filter=label=ssh2docker", fmt.Sprintf("--filter=label=image=%s", c.Config.ImageName), fmt.Sprintf("--filter=label=user=%s", c.Config.RemoteUser), "--quiet", "--no-trunc")
client.go:						cmd.Env = c.Config.Env.List()
client.go:						buf, err := cmd.CombinedOutput()
client.go:						if err != nil {
client.go:							logrus.Warnf("docker ps ... failed: %v", err)
client.go:							continue
client.go:						}
client.go:						existingContainer = strings.TrimSpace(string(buf))
client.go:					}
client.go:					// Opening Docker process
client.go:					if existingContainer != "" {
client.go:						// Attaching to an existing container
client.go:						shell := c.Server.DefaultShell
client.go:						if c.Config.EntryPoint != "" {
client.go:							shell = c.Config.EntryPoint
client.go:						}
client.go:						args := []string{"exec", "-it", existingContainer, shell}
client.go:						logrus.Debugf("Executing 'docker %s'", strings.Join(args, " "))
client.go:						cmd = exec.Command("docker", args...)
client.go:						cmd.Env = c.Config.Env.List()
client.go:					} else {
client.go:						// Creating and attaching to a new container
client.go:						args := []string{"run"}
client.go:						args = append(args, c.Server.DockerRunArgs...)
client.go:						args = append(args, "--label=ssh2docker", fmt.Sprintf("--label=user=%s", c.Config.RemoteUser), fmt.Sprintf("--label=image=%s", c.Config.ImageName))
client.go:						if c.Config.User != "" {
client.go:							args = append(args, "-u", c.Config.User)
client.go:						}
client.go:						if c.Config.EntryPoint != "" {
client.go:							args = append(args, "--entrypoint", c.Config.EntryPoint)
client.go:						}
client.go:						args = append(args, c.Config.ImageName)
client.go:						if c.Config.Command != nil {
client.go:							args = append(args, c.Config.Command...)
client.go:						} else {
client.go:							args = append(args, c.Server.DefaultShell)
client.go:						}
client.go:						logrus.Debugf("Executing 'docker %s'", strings.Join(args, " "))
client.go:						cmd = exec.Command("docker", args...)
client.go:						cmd.Env = c.Config.Env.List()
client.go:					}
client.go:				}
client.go:				if c.Server.Banner != "" {
client.go:					banner := c.Server.Banner
client.go:					banner = strings.Replace(banner, "\r", "", -1)
client.go:					banner = strings.Replace(banner, "\n", "\n\r", -1)
client.go:					fmt.Fprintf(channel, "%s\n\r", banner)
client.go:				}
client.go:				cmd.Stdout = c.Tty
client.go:				cmd.Stdin = c.Tty
client.go:				cmd.Stderr = c.Tty
client.go:				cmd.SysProcAttr = &syscall.SysProcAttr{
client.go:					Setctty: true,
client.go:					Setsid:  true,
client.go:				}
client.go:				err = cmd.Start()
client.go:				if err != nil {
client.go:					logrus.Warnf("cmd.Start failed: %v", err)
client.go:					continue
client.go:				}
client.go:				var once sync.Once
client.go:				close := func() {
client.go:					channel.Close()
client.go:					logrus.Debug("session closed")
client.go:				}
client.go:				go func() {
client.go:					io.Copy(channel, c.Pty)
client.go:					once.Do(close)
client.go:				}()
client.go:				go func() {
client.go:					io.Copy(c.Pty, channel)
client.go:					once.Do(close)
client.go:				}()
client.go:				go func() {
client.go:					if err := cmd.Wait(); err != nil {
client.go:						logrus.Warnf("cmd.Wait failed: %v", err)
client.go:					}
client.go:					once.Do(close)
client.go:				}()
client.go:			case "exec":
client.go:				command := string(req.Payload)
client.go:				logrus.Debugf("HandleChannelRequests.req exec: %q", command)
client.go:				ok = false
client.go:				fmt.Fprintln(channel, "⚠️  ssh2docker: exec is not yet implemented. https://github.com/moul/ssh2docker/issues/51.")
client.go:				time.Sleep(3 * time.Second)
client.go:			case "pty-req":
client.go:				ok = true
client.go:				termLen := req.Payload[3]
client.go:				c.Config.Env["TERM"] = string(req.Payload[4 : termLen+4])
client.go:				w, h := parseDims(req.Payload[termLen+4:])
client.go:				SetWinsize(c.Pty.Fd(), w, h)
client.go:				logrus.Debugf("HandleChannelRequests.req pty-req: TERM=%q w=%q h=%q", c.Config.Env["TERM"], int(w), int(h))
client.go:			case "window-change":
client.go:				w, h := parseDims(req.Payload)
client.go:				SetWinsize(c.Pty.Fd(), w, h)
client.go:				continue
client.go:			case "env":
client.go:				keyLen := req.Payload[3]
client.go:				key := string(req.Payload[4 : keyLen+4])
client.go:				valueLen := req.Payload[keyLen+7]
client.go:				value := string(req.Payload[keyLen+8 : keyLen+8+valueLen])
client.go:				logrus.Debugf("HandleChannelRequets.req 'env': %s=%q", key, value)
client.go:				c.Config.Env[key] = value
client.go:			default:
client.go:				logrus.Debugf("Unhandled request type: %q: %v", req.Type, req)
client.go:			}
client.go:			if req.WantReply {
client.go:				if !ok {
client.go:					logrus.Debugf("Declining %s request...", req.Type)
client.go:				}
client.go:				req.Reply(ok, nil)
client.go:			}
client.go:		}
client.go:	}(requests)
client.go:}
cmd/ssh2docker/main.go:package main
cmd/ssh2docker/main.go:import (
cmd/ssh2docker/main.go:	"net"
cmd/ssh2docker/main.go:	"os"
cmd/ssh2docker/main.go:	"path"
cmd/ssh2docker/main.go:	"strings"
cmd/ssh2docker/main.go:	"github.com/moul/ssh2docker"
cmd/ssh2docker/main.go:)
cmd/ssh2docker/main.go:var VERSION string
cmd/ssh2docker/main.go:// Default key to ease getting started with the server
cmd/ssh2docker/main.go:// You can easily use your own key by setting up
cmd/ssh2docker/main.go:// `--host-key=/path/to/id_rsa`.
cmd/ssh2docker/main.go:// See `man 1 ssh-keygen`.
cmd/ssh2docker/main.go:const DefaultHostKey = `-----BEGIN RSA PRIVATE KEY-----
cmd/ssh2docker/main.go:MIIEowIBAAKCAQEA0BGfZSFn5ueRzMGPnd4+QkbrJ5vRmRXdg0D3ukSxFQC+QCXM
cmd/ssh2docker/main.go:5lVYDtqp6DSsiIIr3PB0n94onebdDK7763RO1/fJP0ZBN3Ih1q0oQ9llrq7kuOd/
cmd/ssh2docker/main.go:ttjNviu9KAkVQLcfR6zxttIPu/xnwkn7Y0pNOpn6ytjA2whemEKTAyskLSNVBqtW
cmd/ssh2docker/main.go:r2TY/am7aXYG+1HSkbfSTSKI4ekzHAFLAZGK1q4FDOMAs6kC4IEmop1T3O2LvPBF
cmd/ssh2docker/main.go:QzTt2WT0kph4+4saMqo4yoKEcKbdnWRkZul1YOcVyJReFX78fCKGo9tVjwtHHa3C
cmd/ssh2docker/main.go:98WgjUiAXN2boGY2tPqk5vrTVmB69CJ6reezKQIDAQABAoIBAEBtRILnDio0iDPz
cmd/ssh2docker/main.go:t4m1mGejWAtCt2sElzueMVcPEBolycNJMSIdSRAIa1YIgWgfjn9yQVqDSuZh5w6X
cmd/ssh2docker/main.go:XFAzCnrbMgiSs3z8rTexFGe1+ENXymDq5ePzS/nXx1GPRnJsgZYLGil28AJQjLxf
cmd/ssh2docker/main.go:diTvi+xaY4rOBSGNfOT+sFDp2eDTofTbxidgDzEJe0tWMi9QHs5NkyERYO7cpd6I
cmd/ssh2docker/main.go:uXe0QLMP0aBzMKH4BFMiyBcY2gxYxqr1rC7YmEmn6M2HKxsHjGJ9K7msyJ0CdXNk
cmd/ssh2docker/main.go:tiqwi3++T3jOcOz3u1t921/wUb4P7TJmerduEt5fm6wJVPCwZdQBcmoMznC0FGb2
cmd/ssh2docker/main.go:5UwxeaUCgYEA7PTCQi7nxJB56CTxgM6m3D/+Lzdq1SBgUt3kzKPtJtDAfSCBd4hL
cmd/ssh2docker/main.go:NYNyJ2WqJBdoclY+FQq85Rn2EdZY7Baol3WK26y+xWgXrICzPAtBvNByrr7eFpJS
cmd/ssh2docker/main.go:2c35PrEuvJvsx0yn2HM4a8JYAm2yq+iJuW0aUNquhFLECvivsCfmXjcCgYEA4MqG
cmd/ssh2docker/main.go:Rxy2Xu47UELfG3GONe6qd9gv2WWMzXtGXQfzYcYQMFUtfAj04/5ER92BEVqVTARB
cmd/ssh2docker/main.go:ZOhdgLPTHsP4FwcjsCpjZQ2cW6QXUQfGJGrCWWd+3tFSv7ekrp4mXl4iXT/zJnWB
cmd/ssh2docker/main.go:BrbABDS8qwz2+YhV6ql2wlYbVI7wdAf4tev2yZ8CgYBQNWmsTYRWnTEmy5qUJ1+E
cmd/ssh2docker/main.go:HoVEJlYbXqI8arAQNU0JXpBJyr8IXzJWIvB5NYiqPuI0Ec1iAgh+5JLO5ueiwui+
cmd/ssh2docker/main.go:nCMsyQSqfdnFoqsJICZYa5bmX+V9bnptD7PW7NMNNRqpO+F0+0uV7mssJ0XbuxMj
cmd/ssh2docker/main.go:mTLXO67nS7zgmd2em2L3cQKBgAFYNMVoHo8izagFPmBjpX4dF1fwKxkZymXQPvN/
cmd/ssh2docker/main.go:gK0tChu/5q2/P/e9JZtob8UyzYHO5LU9zpFegfzFH07D9CqxljachjrmGF2btkux
cmd/ssh2docker/main.go:d8ghHlkm11/eMVX6DDC0T3BPWZz5RvRLU4qy5g3/3dpQPnNQ4Cz5ZuBymm2XPp2X
cmd/ssh2docker/main.go:87nxAoGBAIh+WKnvopNektUbJX7hDE1HBVVaFfM3VffNDfBYF9ziPotRqY+th30N
cmd/ssh2docker/main.go:Nn/aVy1yLb3M0eZCFD9A9/NE23kXAIFMAjM44NpqtXU/Z6Dmc+qB0Lk+KSL72cQL
cmd/ssh2docker/main.go:hLP2sDRnSOAAGEYHcN75mvdrKahDRQXD8l0FIRUn/BNTlob8g5Tp
cmd/ssh2docker/main.go:-----END RSA PRIVATE KEY-----`
cmd/ssh2docker/main.go:func main() {
cmd/ssh2docker/main.go:	app := cli.NewApp()
cmd/ssh2docker/main.go:	app.Name = path.Base(os.Args[0])
cmd/ssh2docker/main.go:	app.Author = "Manfred Touron"
cmd/ssh2docker/main.go:	app.Email = "https://github.com/moul/ssh2docker"
cmd/ssh2docker/main.go:	app.Version = VERSION
cmd/ssh2docker/main.go:	app.Usage = "SSH portal to Docker containers"
cmd/ssh2docker/main.go:	app.Before = hookBefore
cmd/ssh2docker/main.go:	app.Flags = []cli.Flag{
cmd/ssh2docker/main.go:		cli.BoolFlag{
cmd/ssh2docker/main.go:			Name:  "verbose, V",
cmd/ssh2docker/main.go:			Usage: "Enable verbose mode",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.StringFlag{
cmd/ssh2docker/main.go:			Name:  "bind, b",
cmd/ssh2docker/main.go:			Value: ":2222",
cmd/ssh2docker/main.go:			Usage: "Listen to address",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.StringFlag{
cmd/ssh2docker/main.go:			Name:  "host-key, k",
cmd/ssh2docker/main.go:			Usage: "Path or complete SSH host key to use, use 'system' for keys in /etc/ssh",
cmd/ssh2docker/main.go:			Value: "built-in",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.StringFlag{
cmd/ssh2docker/main.go:			Name:  "allowed-images",
cmd/ssh2docker/main.go:			Usage: "List of allowed images, i.e: alpine,ubuntu:trusty,1cf3e6c",
cmd/ssh2docker/main.go:			Value: "",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.StringFlag{
cmd/ssh2docker/main.go:			Name:  "shell",
cmd/ssh2docker/main.go:			Usage: "Default shell",
cmd/ssh2docker/main.go:			Value: "/bin/sh",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.StringFlag{
cmd/ssh2docker/main.go:			Name:  "docker-run-args",
cmd/ssh2docker/main.go:			Usage: "'docker run' arguments",
cmd/ssh2docker/main.go:			Value: "-it --rm",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.BoolFlag{
cmd/ssh2docker/main.go:			Name:  "no-join",
cmd/ssh2docker/main.go:			Usage: "Do not join existing containers, always create new ones",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.BoolFlag{
cmd/ssh2docker/main.go:			Name:  "clean-on-startup",
cmd/ssh2docker/main.go:			Usage: "Cleanup Docker containers created by ssh2docker on start",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.StringFlag{
cmd/ssh2docker/main.go:			Name:  "password-auth-script",
cmd/ssh2docker/main.go:			Usage: "Password auth hook file",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.StringFlag{
cmd/ssh2docker/main.go:			Name:  "publickey-auth-script",
cmd/ssh2docker/main.go:			Usage: "Public-key auth hook file",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.StringFlag{
cmd/ssh2docker/main.go:			Name:  "local-user",
cmd/ssh2docker/main.go:			Usage: "If setted, you can spawn a local shell (not withing docker) by SSHing to this user",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:		cli.StringFlag{
cmd/ssh2docker/main.go:			Name:  "banner",
cmd/ssh2docker/main.go:			Usage: "Display a banner on connection",
cmd/ssh2docker/main.go:		},
cmd/ssh2docker/main.go:	}
cmd/ssh2docker/main.go:	app.Action = Action
cmd/ssh2docker/main.go:	app.Run(os.Args)
cmd/ssh2docker/main.go:}
cmd/ssh2docker/main.go:func hookBefore(c *cli.Context) error {
cmd/ssh2docker/main.go:	// logrus.SetOutput(os.Stderr)
cmd/ssh2docker/main.go:	if c.Bool("verbose") {
cmd/ssh2docker/main.go:		logrus.SetLevel(logrus.DebugLevel)
cmd/ssh2docker/main.go:	} else {
cmd/ssh2docker/main.go:		logrus.SetLevel(logrus.InfoLevel)
cmd/ssh2docker/main.go:	}
cmd/ssh2docker/main.go:	return nil
cmd/ssh2docker/main.go:}
cmd/ssh2docker/main.go:// Action is the default cli action to execute
cmd/ssh2docker/main.go:func Action(c *cli.Context) {
cmd/ssh2docker/main.go:	// Initialize the SSH server
cmd/ssh2docker/main.go:	server, err := ssh2docker.NewServer()
cmd/ssh2docker/main.go:	if err != nil {
cmd/ssh2docker/main.go:		logrus.Fatalf("Cannot create server: %v", err)
cmd/ssh2docker/main.go:	}
cmd/ssh2docker/main.go:	// Restrict list of allowed images
cmd/ssh2docker/main.go:	if c.String("allowed-images") != "" {
cmd/ssh2docker/main.go:		server.AllowedImages = strings.Split(c.String("allowed-images"), ",")
cmd/ssh2docker/main.go:	}
cmd/ssh2docker/main.go:	// Configure server
cmd/ssh2docker/main.go:	server.DefaultShell = c.String("shell")
cmd/ssh2docker/main.go:	server.DockerRunArgs = strings.Split(c.String("docker-run-args"), " ")
cmd/ssh2docker/main.go:	server.NoJoin = c.Bool("no-join")
cmd/ssh2docker/main.go:	server.CleanOnStartup = c.Bool("clean-on-startup")
cmd/ssh2docker/main.go:	server.PasswordAuthScript = c.String("password-auth-script")
cmd/ssh2docker/main.go:	server.PublicKeyAuthScript = c.String("publickey-auth-script")
cmd/ssh2docker/main.go:	server.LocalUser = c.String("local-user")
cmd/ssh2docker/main.go:	server.Banner = c.String("banner")
cmd/ssh2docker/main.go:	// Register the SSH host key
cmd/ssh2docker/main.go:	hostKey := c.String("host-key")
cmd/ssh2docker/main.go:	switch hostKey {
cmd/ssh2docker/main.go:	case "built-in":
cmd/ssh2docker/main.go:		hostKey = DefaultHostKey
cmd/ssh2docker/main.go:	case "system":
cmd/ssh2docker/main.go:		hostKey = "/etc/ssh/ssh_host_rsa_key"
cmd/ssh2docker/main.go:	}
cmd/ssh2docker/main.go:	err = server.AddHostKey(hostKey)
cmd/ssh2docker/main.go:	if err != nil {
cmd/ssh2docker/main.go:		logrus.Fatalf("Cannot add host key: %v", err)
cmd/ssh2docker/main.go:	}
cmd/ssh2docker/main.go:	// Bind TCP socket
cmd/ssh2docker/main.go:	bindAddress := c.String("bind")
cmd/ssh2docker/main.go:	listener, err := net.Listen("tcp", bindAddress)
cmd/ssh2docker/main.go:	if err != nil {
cmd/ssh2docker/main.go:		logrus.Fatalf("Failed to start listener on %q: %v", bindAddress, err)
cmd/ssh2docker/main.go:	}
cmd/ssh2docker/main.go:	logrus.Infof("Listening on %q", bindAddress)
cmd/ssh2docker/main.go:	// Initialize server
cmd/ssh2docker/main.go:	if err = server.Init(); err != nil {
cmd/ssh2docker/main.go:		logrus.Fatalf("Failed to initialize the server: %v", err)
cmd/ssh2docker/main.go:	}
cmd/ssh2docker/main.go:	// Accept new clients
cmd/ssh2docker/main.go:	for {
cmd/ssh2docker/main.go:		conn, err := listener.Accept()
cmd/ssh2docker/main.go:		if err != nil {
cmd/ssh2docker/main.go:			logrus.Error("Accept failed: %v", err)
cmd/ssh2docker/main.go:			continue
cmd/ssh2docker/main.go:		}
cmd/ssh2docker/main.go:		go server.Handle(conn)
cmd/ssh2docker/main.go:	}
cmd/ssh2docker/main.go:}
contrib/docker/Dockerfile:FROM docker
contrib/docker/Dockerfile:ADD ./ssh2docker /ssh2docker
contrib/docker/Dockerfile:ENTRYPOINT ["/ssh2docker"]
contrib/docker/Makefile:run-docker build-docker:
contrib/docker/Makefile:	$(MAKE) -C ../../ $@
contrib/homebrew/ssh2docker.rb:require "language/go"
contrib/homebrew/ssh2docker.rb:class Ssh2docker < Formula
contrib/homebrew/ssh2docker.rb:  desc "SSH server that creates a Docker container per connection (chroot++)"
contrib/homebrew/ssh2docker.rb:  homepage "https://github.com/moul/ssh2docker"
contrib/homebrew/ssh2docker.rb:  url "https://github.com/moul/ssh2docker/archive/v1.2.0.tar.gz"
contrib/homebrew/ssh2docker.rb:  sha256 "712f9ba6200bcf741785bc0ce2c2b77de21c4c15d18f3e5475b8ff5e08a10df6"
contrib/homebrew/ssh2docker.rb:  head "https://github.com/moul/ssh2docker.git"
contrib/homebrew/ssh2docker.rb:  depends_on "go" => :build
contrib/homebrew/ssh2docker.rb:  def install
contrib/homebrew/ssh2docker.rb:    ENV["GOPATH"] = buildpath
contrib/homebrew/ssh2docker.rb:    ENV["CGO_ENABLED"] = "0"
contrib/homebrew/ssh2docker.rb:    ENV.prepend_create_path "PATH", buildpath/"bin"
contrib/homebrew/ssh2docker.rb:    mkdir_p buildpath/"src/github.com/moul"
contrib/homebrew/ssh2docker.rb:    ln_s buildpath, buildpath/"src/github.com/moul/ssh2docker"
contrib/homebrew/ssh2docker.rb:    Language::Go.stage_deps resources, buildpath/"src"
contrib/homebrew/ssh2docker.rb:    # FIXME: update version
contrib/homebrew/ssh2docker.rb:    system "go", "build", "-o", "ssh2docker", "./cmd/ssh2docker"
contrib/homebrew/ssh2docker.rb:    bin.install "ssh2docker"
contrib/homebrew/ssh2docker.rb:    # FIXME: add autocompletion
contrib/homebrew/ssh2docker.rb:  end
contrib/homebrew/ssh2docker.rb:  test do
contrib/homebrew/ssh2docker.rb:    output = shell_output(bin/"ssh2docker --version")
contrib/homebrew/ssh2docker.rb:    assert output.include? "ssh2docker version"
contrib/homebrew/ssh2docker.rb:  end
contrib/homebrew/ssh2docker.rb:end
contrib/scaleway/Dockerfile:## -*- docker-image-name: "scaleway/ssh2docker:latest" -*-
contrib/scaleway/Dockerfile:FROM scaleway/docker:1.9.0
contrib/scaleway/Dockerfile:# Prepare rootfs for image-builder
contrib/scaleway/Dockerfile:RUN /usr/local/sbin/builder-enter
contrib/scaleway/Dockerfile:# Install Golang (see https://github.com/scaleway-community/scaleway-golang/blob/master/Dockerfile)
contrib/scaleway/Dockerfile:RUN apt-get update -qq \
contrib/scaleway/Dockerfile: && apt-get install -y -q --no-install-recommends \
contrib/scaleway/Dockerfile:       curl gcc ca-certificates libc6-dev git mercurial \
contrib/scaleway/Dockerfile: && apt-get clean
contrib/scaleway/Dockerfile:ENV GOARCH=arm GOOS=linux GOLANG_VERSION=1.5.1 GOROOT=/usr/local/go GOPATH=/go
contrib/scaleway/Dockerfile:ENV PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin
contrib/scaleway/Dockerfile:RUN echo "Installing Golang 1.4" \
contrib/scaleway/Dockerfile: && cd /tmp \
contrib/scaleway/Dockerfile: && curl -O https://storage.googleapis.com/golang/go1.4.2.src.tar.gz \
contrib/scaleway/Dockerfile: && echo '460caac03379f746c473814a65223397e9c9a2f6 go1.4.2.src.tar.gz' | sha1sum -c \
contrib/scaleway/Dockerfile: && tar -C /usr/local -xzf go1.4.2.src.tar.gz \
contrib/scaleway/Dockerfile: && rm -f go1.4.2.src.tar.gz \
contrib/scaleway/Dockerfile: && mv /usr/local/go /usr/local/go1.4.2 \
contrib/scaleway/Dockerfile: && cd /usr/local/go1.4.2/src \
contrib/scaleway/Dockerfile: && ./make.bash \
contrib/scaleway/Dockerfile: && echo "Installing Golang 1.5.1 Using go1.4.2" \
contrib/scaleway/Dockerfile: && cd /tmp \
contrib/scaleway/Dockerfile: && curl -O https://storage.googleapis.com/golang/go1.5.1.src.tar.gz \
contrib/scaleway/Dockerfile: && echo '0df564746d105f4180c2b576a1553ebca9d9a124 go1.5.1.src.tar.gz' | sha1sum -c \
contrib/scaleway/Dockerfile: && tar -C /usr/local -xzf go1.5.1.src.tar.gz \
contrib/scaleway/Dockerfile: && rm -f /tmp/go1.5.1.src.tar.gz \
contrib/scaleway/Dockerfile: && cd /usr/local/go/src \
contrib/scaleway/Dockerfile: && GOROOT_BOOTSTRAP=/usr/local/go1.4.2 ./make.bash --no-clean \
contrib/scaleway/Dockerfile: && rm -rf /usr/local/go1.4.2
contrib/scaleway/Dockerfile:RUN echo "Configure environment" \
contrib/scaleway/Dockerfile: && mkdir -p /go/src /go/bin \
contrib/scaleway/Dockerfile: && chmod -R 777 /go \
contrib/scaleway/Dockerfile: && echo export GOROOT=${GOROOT} > /etc/profile.d/golang.sh \
contrib/scaleway/Dockerfile: && echo export GOPATH=${GOPATH} >> /etc/profile.d/golang.sh \
contrib/scaleway/Dockerfile: && echo export PATH=\${PATH}:\${GOROOT}/bin:\${GOPATH}/bin >> /etc/profile.d/golang.sh
contrib/scaleway/Dockerfile:# Install ssh2docker
contrib/scaleway/Dockerfile:RUN go get github.com/moul/ssh2docker/...
contrib/scaleway/Dockerfile:# Change default ssh port to something else
contrib/scaleway/Dockerfile:RUN echo "FIXME"
contrib/scaleway/Dockerfile:# Clean rootfs from image-builder
contrib/scaleway/Dockerfile:RUN /usr/local/sbin/builder-leave
contrib/scaleway/Makefile:NAME =			ssh2docker
contrib/scaleway/Makefile:VERSION =		latest
contrib/scaleway/Makefile:VERSION_ALIASES =
contrib/scaleway/Makefile:TITLE =			ssh2docker
contrib/scaleway/Makefile:DESCRIPTION =		SSH proxy to Docker containers
contrib/scaleway/Makefile:SOURCE_URL =		https://github.com/moul/ssh2docker
contrib/scaleway/Makefile:VENDOR_URL =		https://github.com/moul/ssh2docker
contrib/scaleway/Makefile:IMAGE_VOLUME_SIZE =     50G
contrib/scaleway/Makefile:IMAGE_BOOTSCRIPT =      docker
contrib/scaleway/Makefile:IMAGE_NAME =            ssh2docker
contrib/scaleway/Makefile:## Image tools  (https://github.com/scaleway/image-tools)
contrib/scaleway/Makefile:all:	docker-rules.mk
contrib/scaleway/Makefile:docker-rules.mk:
contrib/scaleway/Makefile:	wget -qO - http://j.mp/scw-builder | bash
contrib/scaleway/Makefile:-include docker-rules.mk
docker.go:package ssh2docker
docker.go:import (
docker.go:	"os/exec"
docker.go:	"strings"
docker.go:)
docker.go:// DockerCleanup cleans all containers created by ssh2docker
docker.go:func DockerCleanup() error {
docker.go:	containers, err := DockerListContainers(false)
docker.go:	if err != nil {
docker.go:		return err
docker.go:	}
docker.go:	for _, cid := range containers {
docker.go:		if err = DockerKill(cid); err != nil {
docker.go:			logrus.Warnf("Failed to kill container %q: %v", cid, err)
docker.go:		}
docker.go:	}
docker.go:	containers, err = DockerListContainers(true)
docker.go:	if err != nil {
docker.go:		return err
docker.go:	}
docker.go:	for _, cid := range containers {
docker.go:		if err = DockerRemove(cid); err != nil {
docker.go:			logrus.Warnf("Failed to remove container %q: %v", cid, err)
docker.go:		}
docker.go:	}
docker.go:	return nil
docker.go:}
docker.go:// DockerKill kills a container
docker.go:func DockerKill(containerID string) error {
docker.go:	cmd := exec.Command("docker", "kill", "-s", "9", containerID)
docker.go:	_, err := cmd.CombinedOutput()
docker.go:	if err != nil {
docker.go:		return err
docker.go:	}
docker.go:	logrus.Debugf("Killed container: %q", containerID)
docker.go:	return nil
docker.go:}
docker.go:// DockerRemove removes a container
docker.go:func DockerRemove(containerID string) error {
docker.go:	cmd := exec.Command("docker", "rm", "-f", containerID)
docker.go:	_, err := cmd.CombinedOutput()
docker.go:	if err != nil {
docker.go:		return err
docker.go:	}
docker.go:	logrus.Debugf("Deleted container: %q", containerID)
docker.go:	return nil
docker.go:}
docker.go:// DockerListContainers lists containers created by ssh2docker
docker.go:func DockerListContainers(all bool) ([]string, error) {
docker.go:	command := []string{"docker", "ps", "--filter=label=ssh2docker", "--quiet", "--no-trunc"}
docker.go:	if all {
docker.go:		command = append(command, "-a")
docker.go:	}
docker.go:	cmd := exec.Command(command[0], command[1:]...)
docker.go:	buf, err := cmd.CombinedOutput()
docker.go:	if err != nil {
docker.go:		return nil, err
docker.go:	}
docker.go:	containers := strings.Split(strings.TrimSpace(string(buf)), "\n")
docker.go:	if containers[0] == "" {
docker.go:		return nil, nil
docker.go:	}
docker.go:	return containers, nil
docker.go:}
environment.go:package ssh2docker
environment.go:import (
environment.go:	"fmt"
environment.go:	"os"
environment.go:)
environment.go:type Environment map[string]string
environment.go:var defauldEnvVars = []string{"TERM", "DOCKER_HOST", "DOCKER_CERT_PATH", "DOCKER_TLS_VERIFY"}
environment.go:func (e *Environment) List() []string {
environment.go:	list := []string{}
environment.go:	for k, v := range *e {
environment.go:		if v == "" {
environment.go:			continue
environment.go:		}
environment.go:		list = append(list, fmt.Sprintf("%s=%s", k, v))
environment.go:	}
environment.go:	return list
environment.go:}
environment.go:func (e *Environment) ApplyDefaults() {
environment.go:	for _, name := range defauldEnvVars {
environment.go:		if _, found := (*e)[name]; !found {
environment.go:			(*e)[name] = os.Getenv(name)
environment.go:		}
environment.go:	}
environment.go:}
examples/password-auth-script:#!/bin/sh
examples/password-auth-script:echo "password-auth-script: $@" >&2
examples/password-auth-script:echo '{"allowed":true}'
examples/publickey-auth-script:#!/bin/sh
examples/publickey-auth-script:echo "password-auth-script: $@" >&2
examples/publickey-auth-script:echo '{"allowed":true}'
keys.go:package ssh2docker
keys.go:import (
keys.go:	"io/ioutil"
keys.go:	"os"
keys.go:	"strings"
keys.go:)
keys.go:// AddHostKey parses/loads an ssh key and registers it to the server
keys.go:func (s *Server) AddHostKey(keystring string) error {
keys.go:	// Check if keystring is a key path or a key string
keys.go:	keypath := os.ExpandEnv(strings.Replace(keystring, "~", "$HOME", 2))
keys.go:	_, err := os.Stat(keypath)
keys.go:	var keybytes []byte
keys.go:	if err == nil {
keys.go:		keybytes, err = ioutil.ReadFile(keypath)
keys.go:		if err != nil {
keys.go:			return err
keys.go:		}
keys.go:	} else {
keys.go:		keybytes = []byte(keystring)
keys.go:	}
keys.go:	// Parse SSH priate key
keys.go:	hostkey, err := ssh.ParsePrivateKey(keybytes)
keys.go:	if err != nil {
keys.go:		return err
keys.go:	}
keys.go:	// Register key to the server
keys.go:	s.SshConfig.AddHostKey(hostkey)
keys.go:	return nil
keys.go:}
server.go:package ssh2docker
server.go:import (
server.go:	"net"
server.go:)
server.go:// Server is the ssh2docker main structure
server.go:type Server struct {
server.go:	SshConfig *ssh.ServerConfig
server.go:	// Clients   map[string]Client
server.go:	ClientConfigs map[string]*ClientConfig
server.go:	AllowedImages       []string
server.go:	DefaultShell        string
server.go:	DockerRunArgs       []string
server.go:	NoJoin              bool
server.go:	CleanOnStartup      bool
server.go:	PasswordAuthScript  string
server.go:	PublicKeyAuthScript string
server.go:	LocalUser           string
server.go:	Banner              string
server.go:	initialized bool
server.go:}
server.go:// NewServer initialize a new Server instance with default values
server.go:func NewServer() (*Server, error) {
server.go:	server := Server{}
server.go:	server.SshConfig = &ssh.ServerConfig{
server.go:		PasswordCallback:            server.PasswordCallback,
server.go:		PublicKeyCallback:           server.PublicKeyCallback,
server.go:		KeyboardInteractiveCallback: server.KeyboardInteractiveCallback,
server.go:	}
server.go:	server.ClientConfigs = make(map[string]*ClientConfig, 0)
server.go:	server.DefaultShell = "/bin/sh"
server.go:	server.DockerRunArgs = []string{"-it", "--rm"}
server.go:	return &server, nil
server.go:}
server.go:// Init initializes server
server.go:func (s *Server) Init() error {
server.go:	// Initialize only once
server.go:	if s.initialized {
server.go:		return nil
server.go:	}
server.go:	if s.CleanOnStartup {
server.go:		err := DockerCleanup()
server.go:		if err != nil {
server.go:			logrus.Warnf("Failed to cleanup docker containers: %v", err)
server.go:		}
server.go:	}
server.go:	s.initialized = true
server.go:	return nil
server.go:}
server.go:// Handle is the SSH client entrypoint, it takes a net.Conn
server.go:// instance and handle all the ssh and ssh2docker stuff
server.go:func (s *Server) Handle(netConn net.Conn) error {
server.go:	if err := s.Init(); err != nil {
server.go:		return err
server.go:	}
server.go:	logrus.Debugf("Server.Handle netConn=%v", netConn)
server.go:	// Initialize a Client object
server.go:	conn, chans, reqs, err := ssh.NewServerConn(netConn, s.SshConfig)
server.go:	if err != nil {
server.go:		return err
server.go:	}
server.go:	client := NewClient(conn, chans, reqs, s)
server.go:	client.Config = s.ClientConfigs[conn.RemoteAddr().String()]
server.go:	client.Config.Env.ApplyDefaults()
server.go:	// Handle requests
server.go:	if err = client.HandleRequests(); err != nil {
server.go:		return err
server.go:	}
server.go:	// Handle channels
server.go:	if err = client.HandleChannels(); err != nil {
server.go:		return err
server.go:	}
server.go:	return nil
server.go:}
tty.go:package ssh2docker
tty.go:import (
tty.go:	"encoding/binary"
tty.go:	"syscall"
tty.go:	"unsafe"
tty.go:)
tty.go:func parseDims(b []byte) (uint32, uint32) {
tty.go:	w := binary.BigEndian.Uint32(b)
tty.go:	h := binary.BigEndian.Uint32(b[4:])
tty.go:	return w, h
tty.go:}
tty.go:type Winsize struct {
tty.go:	Height uint16
tty.go:	Width  uint16
tty.go:	x      uint16 // unused
tty.go:	y      uint16 // unused
tty.go:}
tty.go:func SetWinsize(fd uintptr, w, h uint32) {
tty.go:	logrus.Debugf("Window resize '%dx%d'", w, h)
tty.go:	ws := &Winsize{Width: uint16(w), Height: uint16(h)}
tty.go:	syscall.Syscall(syscall.SYS_IOCTL, fd, uintptr(syscall.TIOCSWINSZ), uintptr(unsafe.Pointer(ws)))
tty.go:}
utils.go:package ssh2docker
utils.go:import (
utils.go:	"errors"
utils.go:	"os"
utils.go:	"strings"
utils.go:)
utils.go:func expandUser(path string) (string, error) {
utils.go:	if path[:2] == "~/" {
utils.go:		homeDir := os.Getenv("HOME") // *nix
utils.go:		if homeDir == "" {           // Windows
utils.go:			homeDir = os.Getenv("USERPROFILE")
utils.go:		}
utils.go:		if homeDir == "" {
utils.go:			return "", errors.New("user home directory not found")
utils.go:		}
utils.go:		return strings.Replace(path, "~", homeDir, 1), nil
utils.go:	}
utils.go:	return path, nil
utils.go:}
install.sh:#!/bin/sh
install.sh:# default branch is stable, you can use any git tag, branch here
install.sh:BRANCH=${BRANCH:-stable}
install.sh:# download installer for branch $BRANCH
install.sh:# this script will download itself again to ensure we can easily switch from a branch to another
install.sh:# if you want to avoid this curl, you can set SKIP_BRANCH_CHECKING
install.sh:if [ -z "$SKIP_BRANCH_CHECKING" ]; then
install.sh:    exec curl -sLo - https://github.com/moul/travis-docker/raw/${BRANCH}/install.sh | SKIP_BRANCH_CHECKING=1 sh -xe
install.sh:    exit $?
install.sh:fi
install.sh:# version numbers
install.sh:COMPOSE_VERSION=1.2.0
install.sh:cd "$(dirname "$0")"
install.sh:# Disable post-install autorun
install.sh:echo exit 101 | sudo tee /usr/sbin/policy-rc.d
install.sh:sudo chmod +x /usr/sbin/policy-rc.d
install.sh:# Install dependencies
install.sh:sudo apt-get update
install.sh:sudo apt-get install -y slirp lxc aufs-tools cgroup-lite
install.sh:# Avoid running installed daemons
install.sh:echo exit 101 | sudo tee /usr/sbin/policy-rc.d
install.sh:sudo chmod +x /usr/sbin/policy-rc.d
install.sh:# Install docker
install.sh:#curl -s https://get.docker.com/ | sh
install.sh:DOCKER_VERSION=${DOCKER_VERSION:-1.7.1}
install.sh:if [ "x$DOCKER_VERSION" = "xget.docker.com" ]; then
install.sh:    curl -s https://get.docker.com/ | sh -xe
install.sh:else
install.sh:    sudo mkdir -p /var/lib/docker
install.sh:    wget --secure-protocol=TLSv1 https://get.docker.io/ubuntu/pool/main/l/lxc-docker-${DOCKER_VERSION}/lxc-docker-${DOCKER_VERSION}_${DOCKER_VERSION}_amd64.deb && \
install.sh:        sudo dpkg -i lxc-docker-${DOCKER_VERSION}_${DOCKER_VERSION}_amd64.deb && \
install.sh:        rm -f lxc-docker-${DOCKER_VERSION}_${DOCKER_VERSION}_amd64.deb
install.sh:fi
install.sh:sudo mkdir -p /etc/docker
install.sh:sudo usermod -aG docker $USER
install.sh:sudo chown -R $USER /etc/docker
install.sh:# Install fig
install.sh:if [ "x$UML_FIG" != x0 ]; then
install.sh:    sudo curl -L https://github.com/docker/fig/releases/download/1.0.1/fig-`uname -s`-`uname -m` -o /usr/local/bin/fig
install.sh:    sudo chmod +x /usr/local/bin/fig
install.sh:fi
install.sh:# Install docker-compose
install.sh:if [ "x$UML_DOCKERCOMPOSE" != x0 ] ; then
install.sh:    sudo curl -L https://github.com/docker/compose/releases/download/$COMPOSE_VERSION/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
install.sh:    sudo chmod +x /usr/local/bin/docker-compose
install.sh:fi
install.sh:# Download binary
install.sh:curl -sLo linux https://github.com/moul/travis-docker/raw/dist/linux
install.sh:curl -sLo linux-init https://github.com/moul/travis-docker/raw/${BRANCH}/linux-init
install.sh:curl -sLo run https://github.com/moul/travis-docker/raw/${BRANCH}/run
install.sh:chmod +x linux linux-init run
linux-init:#!/bin/bash
linux-init:# Exit on first error
linux-init:set -e
linux-init:set -x
linux-init:# Debug
linux-init:# echo "Env: $(env)"
linux-init:# echo "Cmdline: $(cat /proc/cmdline)"
linux-init:rm -f "${UMLDIR}/.exit_code"
linux-init:save_and_shutdown() {
linux-init:    # Default exit code
linux-init:    if [ ! -f "${UMLDIR}/.exit_code" ]; then
linux-init:        echo 42 > "${UMLDIR}/.exit_code"
linux-init:    fi
linux-init:    # save built for host result
linux-init:    # force clean shutdown
linux-init:    set +e
linux-init:    kill -9 $(jobs -p) &>/dev/null
linux-init:    halt -f &>/dev/null
linux-init:}
linux-init:# Create /lib/modules to prevent repeated warnings
linux-init:sudo mkdir -p /lib/modules/$(uname -r) && sudo depmod -a 2>/dev/null || true
linux-init:# make sure we shut down cleanly
linux-init:trap save_and_shutdown EXIT SIGINT SIGTERM
linux-init:# go back to where we were invoked
linux-init:cd "${WORKDIR}"
linux-init:# configure path to include /usr/local
linux-init:export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
linux-init:# can't do much without proc!
linux-init:mount -t proc none /proc
linux-init:# pseudo-terminal devices
linux-init:mkdir -p /dev/pts
linux-init:mount -t devpts none /dev/pts
linux-init:# shared memory a good idea
linux-init:mkdir -p /dev/shm
linux-init:mount -t tmpfs none /dev/shm
linux-init:# sysfs a good idea
linux-init:mount -t sysfs none /sys
linux-init:# pidfiles and such like
linux-init:mkdir -p /var/run
linux-init:mount -t tmpfs none /var/run
linux-init:# takes the pain out of cgroups
linux-init:cgroups-mount
linux-init:# mount backen[5~d
linux-init:case ${DOCKER_BACKEND_FS} in
linux-init:    tmpfs)
linux-init:	    mount -t tmpfs none /var/lib/docker
linux-init:	    ;;
linux-init:    host)
linux-init:	    echo "Using host filesystem as backend"
linux-init:	    ;;
linux-init:    *)
linux-init:	    echo "Unsupported backend filesystem"
linux-init:	    exit 1
linux-init:esac
linux-init:# enable ipv4 forwarding for docker
linux-init:echo 1 > /proc/sys/net/ipv4/ip_forward
linux-init:# configure networking
linux-init:ip addr add 127.0.0.1 dev lo
linux-init:ip link set lo up
linux-init:ip addr add 10.1.1.1/24 dev eth0
linux-init:ip link set eth0 up
linux-init:ip route add default via 10.1.1.254
linux-init:# configure dns (google public)
linux-init:mkdir -p /run/resolvconf
linux-init:echo 'nameserver 8.8.8.8' > /run/resolvconf/resolv.conf
linux-init:mount --bind /run/resolvconf/resolv.conf /etc/resolv.conf
linux-init:# Start docker daemon
linux-init:if [ "${QUIET}" -eq 0 ]; then
linux-init:    docker --storage-driver="${DOCKER_STORAGE_DRIVER}" -d -H unix:///var/run/docker.sock -H tcp://0.0.0.0:2375 &
linux-init:else
linux-init:    docker --storage-driver="${DOCKER_STORAGE_DRIVER}" -d -H unix:///var/run/docker.sock -H tcp://0.0.0.0:2375 &>/dev/null &
linux-init:fi
linux-init:# Waiting for docker socket
linux-init:n=0
linux-init:until [ $n -ge 120 ]; do ((n++)) && sleep 0.1 && test -e /var/run/docker.sock && break; done
linux-init:test -e /var/run/docker.sock || exit 1
linux-init:# Print docker information
linux-init:if [ "${QUIET}" -eq 0 ]; then
linux-init:    echo '+ docker info'
linux-init:    docker info
linux-init:    echo '+ docker version'
linux-init:    docker version
linux-init:fi
linux-init:# reset environment
linux-init:. "${UMLDIR}/.envp"
linux-init:# Call command
linux-init:command=$(cat "${UMLDIR}/.command")
linux-init:set +e
linux-init:/bin/bash -xec "${command}"
linux-init:echo $? > "${UMLDIR}/.exit_code"
linux-init:(
linux-init:    set +e
linux-init:    mount
linux-init:    df -h
linux-init:    ls -la /dev/shm
linux-init:    ls -la /run/shm
linux-init:    ls -la /run/lock
linux-init:)
run:#!/bin/sh
run:# stats
run:exit_stats() {
run:    set +e
run:    set -x
run:    df -h
run:    ls -la /dev/shm
run:    ls -la /run/shm
run:    ls -la /run/lock
run:    mount
run:}
run:trap exit_stats EXIT SIGINT SIGTERM
run:set -e
run:WORKDIR="$(pwd)"
run:cd "$(dirname "$0")"
run:UMLDIR="$(pwd)"
run:echo "$@" > "${UMLDIR}/.command"
run:export -p > "${UMLDIR}/.envp"
run:rm -f "${UMLDIR}/.exit_code"
run:SLIRPBIN="/usr/bin/slirp-fullbolt"
run:QUIET=${QUIET:-0}
run:if [ "${QUIET}" -eq 1 ]; then
run:    # Create a silent slirp-fullbolt binary
run:    cat <<EOF > "${UMLDIR}/slirp-fullbolt-silent"
run:#!/bin/sh
run:${SLIRPBIN} 2>/dev/null
run:EOF
run:    SLIRPBIN="${UMLDIR}/slirp-fullbolt-silent"
run:    chmod +x "${SLIRPBIN}"
run:fi
run:(
run:    test "${QUIET}" -eq 0 && set -x
run:    sudo "${UMLDIR}/linux" \
run:	quiet \
run:	mem=2G \
run:	rootfstype=hostfs rw \
run:	eth0=slirp,,"${SLIRPBIN}" \
run:	"init=${UMLDIR}/linux-init" \
run:	"WORKDIR=${WORKDIR}" \
run:	"UMLDIR=${UMLDIR}" \
run:	"QUIET=${QUIET}" \
run:	"DOCKER_STORAGE_DRIVER=${DOCKER_STORAGE_DRIVER:-devicemapper}" \
run:	"DOCKER_BACKEND_FS=${DOCKER_BACKEND_FS:-host}"
run:)
run:exit_code=$(cat "${UMLDIR}/.exit_code")
run:eval exit ${exit_code}
uml-builder/Makefile:KERNEL_VERSION ?=	4.0.2
uml-builder/Makefile:DOCKER_IMAGE ?=		moul/kernel-builder:latest
uml-builder/Makefile:TARGET ?=		../linux
uml-builder/Makefile:CONCURRENCY_LEVEL ?=	$(shell grep -m1 cpu\ cores /proc/cpuinfo 2>/dev/null | sed 's/[^0-9]//g' | grep '[0-9]' || sysctl hw.ncpu | sed 's/[^0-9]//g' | grep '[0-9]')
uml-builder/Makefile:ARCH ?=			um
uml-builder/Makefile:ENTER_COMMAND ?=	(git show-ref --tags | egrep -q "refs/tags/v$(KERNEL_VERSION)$$" || git fetch --tags) && git checkout v$(KERNEL_VERSION) && git log HEAD^..HEAD
uml-builder/Makefile:			-v $(PWD)/ccache:/ccache/ \
uml-builder/Makefile:			-v $(PWD)/dist:/usr/src/linux/build/ \
uml-builder/Makefile:			-v $(PWD)/patch.sh:/usr/src/linux/patch.sh:ro \
uml-builder/Makefile:			-v $(PWD)/patches:/usr/src/linux/patches
uml-builder/Makefile:DOCKER_ENV ?=		-e CONCURRENCY_LEVEL=$(CONCURRENCY_LEVEL) \
uml-builder/Makefile:			-e LOCALVERSION_AUTO=no \
uml-builder/Makefile:			-e ARCH=$(ARCH)
uml-builder/Makefile:DOCKER_RUN_OPTS ?=	-it --rm
uml-builder/Makefile:DOCKER_BIN ?=		docker
uml-builder/Makefile:all: build
uml-builder/Makefile:.PHONY: shell
uml-builder/Makefile:shell::
uml-builder/Makefile:	$(DOCKER_BIN) run $(DOCKER_RUN_OPTS) $(DOCKER_ENV) $(DOCKER_VOLUMES) $(DOCKER_IMAGE) \
uml-builder/Makefile:		/bin/bash -xec ' \
uml-builder/Makefile:			$(ENTER_COMMAND) && \
uml-builder/Makefile:			cp /tmp/.config .config && \
uml-builder/Makefile:			/bin/bash -xe patch.sh && \
uml-builder/Makefile:			bash ; \
uml-builder/Makefile:			cp .config /tmp/.config \
uml-builder/Makefile:		'
uml-builder/Makefile:.PHONY: run
uml-builder/Makefile:run::	$(TARGET)
uml-builder/Makefile:	$(TARGET) \
uml-builder/Makefile:		mem=2G \
uml-builder/Makefile:		rootfstype=hostfs \
uml-builder/Makefile:		eth0=slirp,,/usr/bin/slirp-fullbolt \
uml-builder/Makefile:		rw \
uml-builder/Makefile:		init=/bin/bash
uml-builder/Makefile:.PHONY: defconfig oldconfig olddefconfig menuconfig
uml-builder/Makefile:defconfig oldconfig olddefconfig menuconfig::
uml-builder/Makefile:	$(DOCKER_BIN) run $(DOCKER_RUN_OPTS) $(DOCKER_ENV) $(DOCKER_VOLUMES) $(DOCKER_IMAGE) \
uml-builder/Makefile:		/bin/bash -xec ' \
uml-builder/Makefile:			$(ENTER_COMMAND) && \
uml-builder/Makefile:			cp /tmp/.config .config && \
uml-builder/Makefile:			/bin/bash -xe patch.sh && \
uml-builder/Makefile:			make $@ && \
uml-builder/Makefile:			cp .config /tmp/.config \
uml-builder/Makefile:		'
uml-builder/Makefile:.PHONY: build
uml-builder/Makefile:build:: $(TARGET)
uml-builder/Makefile:$(TARGET): .config
uml-builder/Makefile:	$(DOCKER_BIN) run $(DOCKER_RUN_OPTS) $(DOCKER_ENV) $(DOCKER_VOLUMES) $(DOCKER_IMAGE) \
uml-builder/Makefile:		/bin/bash -xec ' \
uml-builder/Makefile:			$(ENTER_COMMAND) && \
uml-builder/Makefile:			cp /tmp/.config .config && \
uml-builder/Makefile:			/bin/bash -xe patch.sh && \
uml-builder/Makefile:			make -j $(CONCURRENCY_LEVEL) linux && \
uml-builder/Makefile:			strip linux && \
uml-builder/Makefile:			cp linux build/ \
uml-builder/Makefile:		'
uml-builder/Makefile:	cp dist/linux $(TARGET)
uml-builder/Makefile:	# touch $(TARGET)
uml-builder/Makefile:.PHONY: dist
uml-builder/Makefile:dist:: $(TARGET)
uml-builder/Makefile:	$(MAKE) dist_do || $(MAKE) dist_teardown
uml-builder/Makefile:.PHONY: dist_do
uml-builder/Makefile:dist_do:
uml-builder/Makefile:	git branch -D dist || true
uml-builder/Makefile:	git checkout --orphan dist
uml-builder/Makefile:	git add -f $(TARGET)
uml-builder/Makefile:	git commit $(TARGET) -m "Dist"
uml-builder/Makefile:	git push -u origin dist -f
uml-builder/Makefile:	$(MAKE) dist_teardown
uml-builder/Makefile:.PHONY: dist_teardown
uml-builder/Makefile:dist_teardown:
uml-builder/Makefile:	git checkout master
uml-builder/patch.sh:#!/bin/bash
uml-builder/patch.sh:set -e
uml-builder/patch.sh:###################################################
uml-builder/patch.sh:## Patch the Linux source tree with AUFS support ##
uml-builder/patch.sh:###################################################
uml-builder/patch.sh:# Target Kernel Version
uml-builder/patch.sh:VERSION=$(grep '^VERSION\s*=' Makefile | cut -d= -f2 | sed 's/\s//g')
uml-builder/patch.sh:PATCHLEVEL=$(grep '^PATCHLEVEL\s*=' Makefile | cut -d= -f2 | sed 's/\s//g')
uml-builder/patch.sh:KVER=$VERSION.$PATCHLEVEL
uml-builder/patch.sh:# Temporary Location
uml-builder/patch.sh:#TMPGIT=`mktemp -d`
uml-builder/patch.sh:GIT=aufs-aufs3-standalone
uml-builder/patch.sh:GIT_URL=git://git.code.sf.net/p/aufs/aufs3-standalone
uml-builder/patch.sh:BINPREFIX=aufs3-
uml-builder/patch.sh:if [ "x$VERSION" = "x4" ]; then
uml-builder/patch.sh:    GIT=patches/aufs-aufs4-standalone
uml-builder/patch.sh:    GIT_URL=git://github.com/sfjro/aufs4-standalone.git
uml-builder/patch.sh:    BINPREFIX=aufs4-
uml-builder/patch.sh:fi
uml-builder/patch.sh:# Clone AUFS repo
uml-builder/patch.sh:if [ ! -d $GIT ]; then
uml-builder/patch.sh:    which git || (apt-get update && apt-get install -y git)
uml-builder/patch.sh:    git clone -n $GIT_URL $GIT
uml-builder/patch.sh:fi
uml-builder/patch.sh:# Checkout AUFS branch
uml-builder/patch.sh:pushd $GIT
uml-builder/patch.sh:git checkout origin/aufs$KVER
uml-builder/patch.sh:popd
uml-builder/patch.sh:# Copy in files
uml-builder/patch.sh:cp -r $GIT/{Documentation,fs} ./
uml-builder/patch.sh:cp $GIT/include/uapi/linux/aufs_type.h ./include/uapi/linux/aufs_type.h
uml-builder/patch.sh:# Apply patches
uml-builder/patch.sh:cat $GIT/${BINPREFIX}{base,kbuild,loopback,mmap,standalone}.patch | patch -p1
uml-builder/patch.sh:printf "Patched Kernel $KVER with AUFS support!"
